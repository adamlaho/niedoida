/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AC_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_13_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49744 = ce * de;
    const double C49743 = ce + de;
    const double C49742 = 0 * de;
    const double C49741 = zC - zD;
    const double C49772 = 0 * ce;
    const double C49767 = 0 * de;
    const double C49810 = ae * be;
    const double C49809 = ae + be;
    const double C49808 = 0 * be;
    const double C49807 = yA - yB;
    const double C49838 = 0 * ae;
    const double C49833 = 0 * be;
    const double C49873 = zP - zQ;
    const double C49872 = yP - yQ;
    const double C49871 = p + q;
    const double C49870 = p * q;
    const double C49882 = bs[4];
    const double C49880 = xP - xQ;
    const double C49888 = bs[5];
    const double C49895 = bs[6];
    const double C49907 = bs[7];
    const double C49929 = bs[3];
    const double C50373 = bs[2];
    const double C119 = bs[0];
    const double C50745 = xA - xB;
    const double C50766 = xC - xD;
    const double C50785 = yC - yD;
    const double C50897 = zA - zB;
    const double C49745 = std::pow(C49743, 2);
    const double C49768 = 2 * C49743;
    const double C49746 = C49744 * C49741;
    const double C49769 = C49741 * C49742;
    const double C50801 = std::pow(C49741, 2);
    const double C50865 = C49741 * de;
    const double C50864 = C49741 * ce;
    const double C49777 = C49772 / C49743;
    const double C49811 = std::pow(C49809, 2);
    const double C49834 = 2 * C49809;
    const double C49883 = C49743 * C49809;
    const double C140 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49743) /
                        C49809;
    const double C141 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49743) /
                        C49809;
    const double C49812 = C49810 * C49807;
    const double C49835 = C49807 * C49808;
    const double C50882 = std::pow(C49807, 2);
    const double C50934 = C49807 * be;
    const double C50933 = C49807 * ae;
    const double C49843 = C49838 / C49809;
    const double C49921 = C49873 * ce;
    const double C50206 = std::pow(C49873, 2);
    const double C49875 = C49872 * C49873;
    const double C49968 = C49872 * ae;
    const double C50046 = std::pow(C49872, 2);
    const double C49874 = 2 * C49870;
    const double C49889 = std::pow(C49880, 2);
    const double C50748 = C50745 * be;
    const double C50747 = C50745 * ae;
    const double C50746 = std::pow(C50745, 2);
    const double C50769 = C50766 * de;
    const double C50768 = C50766 * ce;
    const double C50767 = std::pow(C50766, 2);
    const double C50786 = std::pow(C50785, 2);
    const double C50837 = C50785 * de;
    const double C50836 = C50785 * ce;
    const double C50898 = std::pow(C50897, 2);
    const double C50962 = C50897 * be;
    const double C50961 = C50897 * ae;
    const double C49747 = 2 * C49745;
    const double C51027 = 4 * C49745;
    const double C50777 = std::pow(C49768, -1);
    const double C51029 = std::pow(C49768, -2);
    const double C49774 = C49769 / C49743;
    const double C50802 = C50801 * C49744;
    const double C49813 = 2 * C49811;
    const double C51020 = 4 * C49811;
    const double C50756 = std::pow(C49834, -1);
    const double C51042 = std::pow(C49834, -2);
    const double C49840 = C49835 / C49809;
    const double C50883 = C50882 * C49810;
    const double C49922 = C49882 * C49921;
    const double C49930 = C49929 * C49921;
    const double C49935 = C49888 * C49921;
    const double C49941 = C49895 * C49921;
    const double C49954 = C49907 * C49921;
    const double C49877 = C49875 * ae;
    const double C49969 = C49929 * C49968;
    const double C49973 = C49882 * C49968;
    const double C49978 = C49888 * C49968;
    const double C49985 = C49895 * C49968;
    const double C49996 = C49907 * C49968;
    const double C49876 = C49874 / C49871;
    const double C126 = (-(bs[1] * C49968 * C49874) / C49871) / C49809;
    const double C127 = (bs[1] * C49921 * C49874) / (C49871 * C49743);
    const double C120 = -(C49880 * bs[1] * C49874) / C49871;
    const double C301 = -(C49872 * bs[1] * C49874) / C49871;
    const double C490 = -(C49873 * bs[1] * C49874) / C49871;
    const double C50749 = C50746 * C49810;
    const double C50770 = C50767 * C49744;
    const double C50787 = C50786 * C49744;
    const double C50899 = C50898 * C49810;
    const double C49771 = C49742 / C49747;
    const double C49775 = C49767 / C49747;
    const double C49778 = 0 - C49774;
    const double C50803 = C50802 / C49743;
    const double C49837 = C49808 / C49813;
    const double C49841 = C49833 / C49813;
    const double C49844 = 0 - C49840;
    const double C50884 = C50883 / C49809;
    const double C49878 = C49877 * ce;
    const double C49881 = std::pow(C49876, 4);
    const double C49887 = -C49876;
    const double C49894 = std::pow(C49876, 6);
    const double C50372 = std::pow(C49876, 2);
    const double C128 =
        (C49880 * std::pow(C49876, 2) * bs[2] * C49968) / C49809;
    const double C129 =
        -(C49880 * std::pow(C49876, 2) * bs[2] * C49921) / C49743;
    const double C314 =
        -(C49872 * std::pow(C49876, 2) * bs[2] * C49921) / C49743;
    const double C315 =
        (C49872 * std::pow(C49876, 2) * bs[2] * C49968) / C49809 -
        (ae * bs[1] * C49874) / (C49871 * C49809);
    const double C50750 = C50749 / C49809;
    const double C50771 = C50770 / C49743;
    const double C50788 = C50787 / C49743;
    const double C50900 = C50899 / C49809;
    const double C49781 = C49778 * ce;
    const double C50804 = -C50803;
    const double C49847 = C49844 * ae;
    const double C50885 = -C50884;
    const double C49884 = C49882 * C49878;
    const double C49891 = C49888 * C49878;
    const double C49897 = C49895 * C49878;
    const double C49910 = C49907 * C49878;
    const double C142 =
        (-(std::pow(C49876, 4) * bs[4] * C49878 * std::pow(xP - xQ, 2)) /
         C49743) /
            C49809 -
        (std::pow(-C49876, 3) * bs[3] * C49878) / (C49743 * C49809);
    const double C49923 = C49881 * C49922;
    const double C49974 = C49881 * C49973;
    const double C50011 = C49882 * C49881;
    const double C49890 = std::pow(C49887, 5);
    const double C49906 = std::pow(C49887, 7);
    const double C49928 = std::pow(C49887, 3);
    const double C331 =
        (-(C49872 * std::pow(C49887, 3) * bs[3] * C49878) / C49743) / C49809 -
        (ae * std::pow(C49876, 2) * bs[2] * C49921) / C49883;
    const double C49943 = C49894 * C49941;
    const double C49987 = C49894 * C49985;
    const double C50028 = C49895 * C49894;
    const double C50374 = C50373 * C50372;
    const double C500 = (C49873 * C50372 * C50373 * C49968) / C49809;
    const double C501 = (ce * bs[1] * C49874) / (C49871 * C49743) -
                        (C49873 * C50372 * C50373 * C49921) / C49743;
    const double C50751 = -C50750;
    const double C50772 = -C50771;
    const double C50789 = -C50788;
    const double C50901 = -C50900;
    const double C49783 = C49781 / C49743;
    const double C50805 = std::exp(C50804);
    const double C49849 = C49847 / C49809;
    const double C50886 = std::exp(C50885);
    const double C49885 = C49881 * C49884;
    const double C49898 = C49894 * C49897;
    const double C49933 = C49880 * C49923;
    const double C50045 = ae * C49923;
    const double C50043 = C49872 * C49923;
    const double C50540 = C49873 * C49923;
    const double C49975 = C49880 * C49974;
    const double C50081 = C49974 * ce;
    const double C50211 = C49873 * C49974;
    const double C50466 = C49872 * C49974;
    const double C50022 = C49880 * C50011;
    const double C50074 = C49872 * C50011;
    const double C50192 = C50011 * ce;
    const double C50224 = C49873 * C50011;
    const double C50380 = C50011 * C49889;
    const double C50468 = C50011 * C50046;
    const double C50513 = C50011 * ae;
    const double C50543 = C50011 * C50206;
    const double C49892 = C49890 * C49891;
    const double C49936 = C49890 * C49935;
    const double C49979 = C49890 * C49978;
    const double C50013 = C49888 * C49890;
    const double C49912 = C49906 * C49910;
    const double C49957 = C49906 * C49954;
    const double C49998 = C49906 * C49996;
    const double C49931 = C49928 * C49930;
    const double C49970 = C49928 * C49969;
    const double C50020 = C49929 * C49928;
    const double C520 =
        (-(C49873 * C49928 * C49929 * C49878) / C49743) / C49809 -
        (std::pow(C49876, 2) * bs[2] * C49872 * ae * ce) / C49883;
    const double C49945 = C49943 * C49889;
    const double C49953 = C49880 * C49943;
    const double C50130 = C49943 * C50046;
    const double C50248 = ae * C49943;
    const double C50246 = C49872 * C49943;
    const double C50280 = C49873 * C49943;
    const double C49988 = C49987 * C49889;
    const double C49995 = C49880 * C49987;
    const double C50226 = C49987 * C50206;
    const double C50279 = C49987 * ce;
    const double C50277 = C49873 * C49987;
    const double C50601 = C49872 * C49987;
    const double C50030 = C50028 * C49889;
    const double C50172 = C49880 * C50028;
    const double C50285 = C49872 * C50028;
    const double C50284 = C50028 * C50046;
    const double C50333 = C50028 * C50206;
    const double C121 = C50374 * C49889 - (bs[1] * C49874) / C49871;
    const double C300 = C49872 * C49880 * C50374;
    const double C302 = C50374 * C50046 - (bs[1] * C49874) / C49871;
    const double C491 = C50374 * C50206 - (bs[1] * C49874) / C49871;
    const double C492 = C49873 * C49880 * C50374;
    const double C969 = C49873 * C49872 * C50374;
    const double C50752 = std::exp(C50751);
    const double C50773 = std::exp(C50772);
    const double C50790 = std::exp(C50789);
    const double C50902 = std::exp(C50901);
    const double C49785 = C49783 - C49775;
    const double C49748 = C49746 * C50805;
    const double C118 = -(2 * ce * de * (zC - zD) * C50805) / (ce + de);
    const double C50866 = C50805 * C50864;
    const double C50869 = C50777 * C50805;
    const double C51037 = C50805 * C50865;
    const double C51030 = C50805 / C49768;
    const double C486 = C51029 * C50805;
    const double C49851 = C49849 - C49841;
    const double C155 = C50886 * C142;
    const double C151 = C50886 * C141;
    const double C149 = C50886 * C128;
    const double C5683 = C50886 * C500;
    const double C49814 = C49812 * C50886;
    const double C117 = -(2 * ae * be * (yA - yB) * C50886) / (ae + be);
    const double C50935 = C50886 * C50933;
    const double C50938 = C50756 * C50886;
    const double C51046 = C50886 * C50934;
    const double C51041 = C50886 / C49834;
    const double C2446 = C51042 * C50886;
    const double C143 =
        (-2 * C49880 * C49885) / C49883 +
        C49880 *
            ((-(std::pow(-C49876, 5) * bs[5] * C49878 * std::pow(C49880, 2)) /
              C49743) /
                 C49809 -
             C49885 / C49883);
    const double C330 =
        (-(C49872 * C49880 * C49885) / C49743) / C49809 -
        (ae * C49880 * std::pow(C49887, 3) * bs[3] * C49921) / C49883;
    const double C49899 = C49898 * C49889;
    const double C49908 = C49898 / C49883;
    const double C49905 = C49880 * C49898;
    const double C50128 = C49872 * C49898;
    const double C50151 = C49873 * C49898;
    const double C50048 = C50045 / C49883;
    const double C50083 = C50081 / C49883;
    const double C50384 = 2 * C50022;
    const double C50442 = C49872 * C50022;
    const double C50474 = C50022 * ae;
    const double C50550 = C49873 * C50022;
    const double C50549 = C50022 * ce;
    const double C50515 = 2 * C50074;
    const double C50514 = C50074 * ae;
    const double C50568 = C49873 * C50074;
    const double C50567 = C50074 * ce;
    const double C50584 = 2 * C50224;
    const double C50583 = C50224 * ce;
    const double C49896 = C49892 / C49883;
    const double C50017 = C49880 * C49892;
    const double C50044 = C49872 * C49892;
    const double C50080 = C49873 * C49892;
    const double C144 =
        3 * ((-(C49892 * C49889) / C49743) / C49809 - C49885 / C49883) +
        C49880 * ((-2 * C49880 * C49892) / C49883 +
                  C49880 * ((-(std::pow(C49876, 6) * bs[6] * C49878 * C49889) /
                             C49743) /
                                C49809 -
                            C49892 / C49883));
    const double C329 =
        C49872 * ((-(C49892 * C49889) / C49743) / C49809 - C49885 / C49883) -
        (ae * (C49923 * C49889 + std::pow(C49887, 3) * bs[3] * C49921)) /
            C49883;
    const double C333 =
        (-(ae * C49872 * C49933) / C49743) / C49809 -
        (C49880 * C49885) / C49883 +
        C49872 * ((-(C49872 * C49880 * C49892) / C49743) / C49809 -
                  (ae * C49933) / C49883);
    const double C523 =
        (-(C49873 * C49975 * ce) / C49743) / C49809 -
        (C49880 * C49885) / C49883 +
        C49873 * ((-(C49873 * C49880 * C49892) / C49743) / C49809 -
                  (C49975 * ce) / C49883);
    const double C985 =
        C49872 * ((-(C49873 * C49880 * C49892) / C49743) / C49809 -
                  (C49975 * ce) / C49883) -
        (ae * (C49873 * C49933 + C49880 * C49929 * C49928 * ce)) / C49883;
    const double C49937 = C49936 * C49889;
    const double C49940 = C49880 * C49936;
    const double C50049 = C49936 * C50046;
    const double C50129 = ae * C49936;
    const double C50127 = C49872 * C49936;
    const double C50191 = C49873 * C49936;
    const double C49980 = C49979 * C49889;
    const double C49984 = C49880 * C49979;
    const double C50152 = C49979 * ce;
    const double C50150 = C49873 * C49979;
    const double C50212 = C49979 * C50206;
    const double C50512 = C49872 * C49979;
    const double C50024 = C50013 * C49889;
    const double C50027 = C49880 * C50013;
    const double C50154 = C49872 * C50013;
    const double C50153 = C50013 * C50046;
    const double C50225 = C50013 * C50206;
    const double C50282 = C49873 * C50013;
    const double C50281 = C50013 * ce;
    const double C50602 = C50013 * ae;
    const double C49913 = C49912 * C49889;
    const double C50103 = C49880 * C49912;
    const double C50247 = C49872 * C49912;
    const double C50278 = C49873 * C49912;
    const double C49959 = C49957 * C49889;
    const double C50105 = C49880 * C49957;
    const double C50250 = C49957 * C50046;
    const double C49999 = C49998 * C49889;
    const double C50173 = C49880 * C49998;
    const double C50334 = C49998 * C50206;
    const double C332 = (-(ae * C49872 * C49931) / C49743) / C49809 -
                        (C49928 * C49929 * C49878) / C49883 +
                        C49872 * ((-(C49872 * C49885) / C49743) / C49809 -
                                  (ae * C49931) / C49883);
    const double C1208 =
        2 * ((-(C49872 * C49885) / C49743) / C49809 - (ae * C49931) / C49883) -
        (ae * (C49923 * std::pow(C49872, 2) + C49931)) / C49883 +
        C49872 *
            ((-(ae * C49872 * C49923) / C49743) / C49809 - C49885 / C49883 +
             C49872 * ((-(C49872 * C49892) / C49743) / C49809 -
                       (ae * C49923) / C49883));
    const double C131 =
        -(C49931 * C49889 + std::pow(C49876, 2) * bs[2] * C49921) / C49743;
    const double C133 = (-2 * C49880 * C49931) / C49743 -
                        (C49880 * (C49923 * C49889 + C49931)) / C49743;
    const double C310 = -(C49872 * (C49923 * C49889 + C49931)) / C49743;
    const double C312 = -(C49872 * C49880 * C49931) / C49743;
    const double C317 = -(C49931 * C50046 + C50372 * C50373 * C49921) / C49743;
    const double C319 = -(C49933 * C50046 + C49880 * C49931) / C49743;
    const double C503 = -(C49873 * (C49873 * C49931 + C50374 * ce) +
                          C50372 * C50373 * C49921 + C49873 * C50374 * ce) /
                        C49743;
    const double C505 =
        -(C49873 * C49880 * C49931 + C49880 * C50374 * ce) / C49743;
    const double C975 =
        -(C49873 * C49872 * C49931 + C49872 * C50374 * ce) / C49743;
    const double C1203 = (-2 * C49872 * C49931) / C49743 -
                         (C49872 * (C49923 * C50046 + C49931)) / C49743;
    const double C521 = (-(C49873 * C49970 * ce) / C49743) / C49809 -
                        (C49928 * C49929 * C49878) / C49883 +
                        C49873 * ((-(C49873 * C49885) / C49743) / C49809 -
                                  (C49970 * ce) / C49883);
    const double C522 = (-(C49873 * C49880 * C49885) / C49743) / C49809 -
                        (C49880 * C49970 * ce) / C49883;
    const double C524 =
        C49873 * ((-(C49892 * C49889) / C49743) / C49809 - C49885 / C49883) -
        ((C49970 + C49974 * C49889) * ce) / C49883;
    const double C984 =
        C49872 *
            ((-(C49873 * C49885) / C49743) / C49809 - (C49970 * ce) / C49883) -
        (ae * (C49873 * C49931 + bs[2] * std::pow(C49876, 2) * ce)) / C49883;
    const double C1980 =
        2 * ((-(C49873 * C49885) / C49743) / C49809 - (C49970 * ce) / C49883) -
        ((C49970 + C49974 * std::pow(C49873, 2)) * ce) / C49883 +
        C49873 *
            ((-(C49873 * C49974 * ce) / C49743) / C49809 - C49885 / C49883 +
             C49873 * ((-(C49873 * C49892) / C49743) / C49809 -
                       (C49974 * ce) / C49883));
    const double C130 =
        (std::pow(C49876, 2) * bs[2] * C49968 + C49970 * C49889) / C49809;
    const double C132 =
        (2 * C49880 * C49970 + C49880 * (C49970 + C49974 * C49889)) / C49809;
    const double C313 =
        (C49872 * C49880 * C49970 + C49880 * bs[2] * std::pow(C49876, 2) * ae) /
        C49809;
    const double C316 =
        (C50372 * C50373 * C49968 + C49872 * (C49872 * C49970 + C50374 * ae) +
         C49872 * C50374 * ae) /
        C49809;
    const double C502 = (C50372 * C50373 * C49968 + C49970 * C50206) / C49809;
    const double C504 = (C49873 * C49880 * C49970) / C49809;
    const double C506 = (C49880 * C49970 + C49975 * C50206) / C49809;
    const double C508 = (C49873 * (C49970 + C49974 * C49889)) / C49809;
    const double C974 = (C49873 * (C49872 * C49970 + C50374 * ae)) / C49809;
    const double C1972 =
        (2 * C49873 * C49970 + C49873 * (C49970 + C49974 * C50206)) / C49809;
    const double C1319 =
        C49872 *
            ((-(C49873 * C49974 * ce) / C49743) / C49809 - C49885 / C49883 +
             C49873 * ((-(C49873 * C49892) / C49743) / C49809 -
                       (C49974 * ce) / C49883)) -
        (ae * (C49873 * (C49873 * C49923 + C50020 * ce) + C49931 +
               C49873 * C50020 * ce)) /
            C49883;
    const double C1666 =
        (-(C49873 * C49885) / C49743) / C49809 - (C49970 * ce) / C49883 -
        (ae * (C49873 * C49872 * C49923 + C49872 * C50020 * ce)) / C49883 +
        C49872 * (C49872 * ((-(C49873 * C49892) / C49743) / C49809 -
                            (C49974 * ce) / C49883) -
                  (ae * (C49873 * C49923 + C50020 * ce)) / C49883);
    const double C50377 = C49880 * C50020;
    const double C50381 = C50020 + C50380;
    const double C50439 = C49872 * C50020;
    const double C50467 = C50020 * ae;
    const double C50470 = C50020 + C50468;
    const double C50542 = C49873 * C50020;
    const double C50541 = C50020 * ce;
    const double C50545 = C50020 + C50543;
    const double C311 = (C49872 * (C49970 + C49974 * C49889) +
                         (bs[2] * std::pow(C49876, 2) + C50020 * C49889) * ae) /
                        C49809;
    const double C509 = -(C49873 * (C49923 * C49889 + C49931) +
                          (C50374 + C50020 * C49889) * ce) /
                        C49743;
    const double C1204 =
        (2 * (C49872 * C49970 + C50374 * ae) +
         C49872 * (C49970 + C49872 * (C49872 * C49974 + C50020 * ae) +
                   C49872 * C50020 * ae) +
         (C50374 + C50020 * C50046) * ae) /
        C49809;
    const double C1311 = (C49872 * C49970 + C50374 * ae +
                          (C49872 * C49974 + C50020 * ae) * C50206) /
                         C49809;
    const double C1659 = -(C49873 * (C49923 * C50046 + C49931) +
                           (C50374 + C50020 * C50046) * ce) /
                         C49743;
    const double C1973 = (-2 * (C49873 * C49931 + C50374 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C49923 + C50020 * ce) +
                                    C49931 + C49873 * C50020 * ce)) /
                             C49743 -
                         ((C50374 + C50020 * C50206) * ce) / C49743;
    const double C122 =
        2 * C49880 * C50374 + C49880 * (C50374 + C50020 * C49889);
    const double C299 = C49872 * (C50374 + C50020 * C49889);
    const double C494 = C49873 * (C50374 + C50020 * C49889);
    const double C1196 =
        2 * C49872 * C50374 + C49872 * (C50374 + C50020 * C50046);
    const double C1654 = C49873 * (C50374 + C50020 * C50046);
    const double C1968 =
        2 * C49873 * C50374 + C49873 * (C50374 + C50020 * C50206);
    const double C5685 = C50886 * C520;
    const double C49946 = C49945 + C49936;
    const double C49956 = -2 * C49953;
    const double C50058 = C49953 * C50046;
    const double C50104 = ae * C49953;
    const double C50101 = C49872 * C49953;
    const double C50199 = C49873 * C49953;
    const double C50135 = C50130 + C49936;
    const double C50254 = C50248 / C49883;
    const double C50256 = -2 * C50246;
    const double C50252 = ae * C50246;
    const double C50311 = C49873 * C50246;
    const double C49989 = C49979 + C49988;
    const double C49997 = 2 * C49995;
    const double C50171 = C49995 * ce;
    const double C50169 = C49873 * C49995;
    const double C50216 = C49995 * C50206;
    const double C50500 = C49872 * C49995;
    const double C50228 = C49979 + C50226;
    const double C50288 = C50279 / C49883;
    const double C50286 = C50277 * ce;
    const double C50341 = 2 * C50277;
    const double C50031 = C50013 + C50030;
    const double C50178 = C49872 * C50172;
    const double C50177 = C50172 * C50046;
    const double C50231 = C50172 * C50206;
    const double C50332 = C50285 * C50206;
    const double C50291 = C50013 + C50284;
    const double C50336 = C50013 + C50333;
    const double C50753 = C50752 * C50747;
    const double C50757 = C50756 * C50752;
    const double C51017 = C50752 * C50748;
    const double C51014 = C50752 / C49834;
    const double C17372 = C51042 * C50752;
    const double C50774 = C50773 * C50768;
    const double C50778 = C50777 * C50773;
    const double C51024 = C50773 * C50769;
    const double C51021 = C50773 / C49768;
    const double C1121 = C51029 * C50773;
    const double C50838 = C50790 * C50836;
    const double C50841 = C50777 * C50790;
    const double C51033 = C50790 * C50837;
    const double C51028 = C50790 / C49768;
    const double C295 = C51029 * C50790;
    const double C50963 = C50902 * C50961;
    const double C50966 = C50756 * C50902;
    const double C51050 = C50902 * C50962;
    const double C51043 = C50902 / C49834;
    const double C5338 = C51042 * C50902;
    const double C49773 = C49748 / C49745;
    const double C49770 = 2 * C49748;
    const double C489 = ((0 * ce) / C49743 - C49748 / C49745) / (2 * C49743) +
                        (0 * ce) / C49743;
    const double C803 =
        ((C50805 - (C49741 * 2 * C49748) / C49743) * ce) / C49743 -
        C49742 / C49747;
    const double C804 = (0 * ce) / C49743 - C49748 / C49745;
    const double C1770 =
        (-C49742 / C49743) / (2 * C49743) -
        ((C50805 - (C49741 * 2 * C49748) / C49743) * de) / C49743;
    const double C1771 =
        (-(2 * C49748) / C49743) / (2 * C49743) - (0 * de) / C49743;
    const double C51039 = C50866 / C49747;
    const double C51038 = C50866 * C50865;
    const double C51032 = C50866 / C49743;
    const double C485 = (2 * C50777 * C50866) / C49743;
    const double C488 =
        (((C50805 - (C49741 * 2 * C49748) / C49743) * ce) / C49743 -
         C49742 / C49747) /
            (2 * C49743) +
        ((C49741 * ((0 * ce) / C49743 - C49748 / C49745) + C50869) * ce) /
            C49743;
    const double C51040 = C50869 * C50865;
    const double C1963 = C50869 / C51027;
    const double C2226 = C50869 / C49768;
    const double C51063 = C51037 / C49743;
    const double C484 = (C50805 * std::pow(C50864, 2)) / C49745 + C51030;
    const double C49839 = C49814 / C49811;
    const double C49836 = 2 * C49814;
    const double C2451 = ((0 * ae) / C49809 - C49814 / C49811) / (2 * C49809) +
                         (0 * ae) / C49809;
    const double C8202 =
        ((C50886 - (C49807 * 2 * C49814) / C49809) * ae) / C49809 -
        C49808 / C49813;
    const double C8203 = (0 * ae) / C49809 - C49814 / C49811;
    const double C17373 =
        (-C49808 / C49809) / (2 * C49809) -
        ((C50886 - (C49807 * 2 * C49814) / C49809) * be) / C49809;
    const double C17374 =
        (-(2 * C49814) / C49809) / (2 * C49809) - (0 * be) / C49809;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C349 = C117 * C300;
    const double C533 = C117 * C492;
    const double C5686 = C117 * C491;
    const double C5684 = C117 * C501;
    const double C5682 = C117 * C490;
    const double C6246 = C117 * C969;
    const double C51048 = C50935 / C49813;
    const double C51047 = C50935 * C50934;
    const double C51044 = C50935 / C49809;
    const double C2445 = (2 * C50756 * C50935) / C49809;
    const double C2450 =
        (((C50886 - (C49807 * 2 * C49814) / C49809) * ae) / C49809 -
         C49808 / C49813) /
            (2 * C49809) +
        ((C49807 * ((0 * ae) / C49809 - C49814 / C49811) + C50938) * ae) /
            C49809;
    const double C51049 = C50938 * C50934;
    const double C20202 = C50938 / C51020;
    const double C24798 = C50938 / C49834;
    const double C51066 = C51046 / C49809;
    const double C2444 = (C50886 * std::pow(C50933, 2)) / C49811 + C51041;
    const double C159 = C50886 * C143;
    const double C348 = C50886 * C330;
    const double C8212 = C50938 * C330;
    const double C17383 = C50938 * C330;
    const double C49900 = C49899 / C49743;
    const double C49909 = -2 * C49905;
    const double C50056 = C49872 * C49905;
    const double C50088 = C49873 * C49905;
    const double C50102 = C49905 / C49883;
    const double C50132 = C50128 / C49743;
    const double C50156 = C50151 / C49743;
    const double C2855 =
        (-(C49873 * C49974 * ce) / C49743) / C49809 - C49885 / C49883 +
        C49873 *
            ((-(C49873 * C49892) / C49743) / C49809 - (C49974 * ce) / C49883) -
        (ae * (C49873 * (C49873 * C49872 * C49936 + C50074 * ce) + C50043 +
               C49873 * C50074 * ce)) /
            C49883 +
        C49872 *
            (C49872 * ((-(C49873 * C49979 * ce) / C49743) / C49809 - C49896 +
                       C49873 * ((-(C49873 * C49898) / C49743) / C49809 -
                                 (C49979 * ce) / C49883)) -
             (ae * (C49873 * (C49873 * C49936 + C50011 * ce) + C49923 +
                    C49873 * C50011 * ce)) /
                 C49883);
    const double C50047 = C50044 / C49743;
    const double C50082 = C50080 / C49743;
    const double C161 = C50886 * C144;
    const double C344 = C50886 * C329;
    const double C8220 = C50938 * C329;
    const double C17391 = C50938 * C329;
    const double C354 = C50886 * C333;
    const double C2464 = C2446 * C333;
    const double C8420 = C50938 * C333;
    const double C17591 = C50938 * C333;
    const double C540 = C50886 * C523;
    const double C995 = C50886 * C985;
    const double C8610 = C50938 * C985;
    const double C17781 = C50938 * C985;
    const double C49938 = C49937 + C49923;
    const double C49942 = -2 * C49940;
    const double C50057 = ae * C49940;
    const double C50055 = C49872 * C49940;
    const double C1207 =
        2 * ((-(C49872 * C50017) / C49743) / C49809 - (ae * C49933) / C49883) -
        (ae * (C49940 * std::pow(C49872, 2) + C49933)) / C49883 +
        C49872 *
            ((-(ae * C49872 * C49940) / C49743) / C49809 - C50017 / C49883 +
             C49872 * ((-(C49872 * C49905) / C49743) / C49809 -
                       (ae * C49940) / C49883));
    const double C50548 = C49873 * C49940;
    const double C1201 = (-2 * C49872 * C49933) / C49743 -
                         (C49872 * (C49940 * C50046 + C49933)) / C49743;
    const double C50051 = C50049 + C49923;
    const double C50133 = C50129 / C49883;
    const double C50134 = -2 * C50127;
    const double C50131 = ae * C50127;
    const double C50566 = C49873 * C50127;
    const double C50193 = C50191 + C50192;
    const double C49981 = C49974 + C49980;
    const double C49986 = 2 * C49984;
    const double C50089 = C49984 * ce;
    const double C50215 = C49873 * C49984;
    const double C1320 =
        C49872 *
            ((-(C49873 * C49984 * ce) / C49743) / C49809 - C50017 / C49883 +
             C49873 * ((-(C49873 * C49905) / C49743) / C49809 -
                       (C49984 * ce) / C49883)) -
        (ae * (C49873 * (C49873 * C49940 + C50022 * ce) + C49933 +
               C49873 * C50022 * ce)) /
            C49883;
    const double C1667 =
        (-(C49873 * C50017) / C49743) / C49809 - (C49975 * ce) / C49883 -
        (ae * (C49873 * C49872 * C49940 + C49872 * C50022 * ce)) / C49883 +
        C49872 * (C49872 * ((-(C49873 * C49905) / C49743) / C49809 -
                            (C49984 * ce) / C49883) -
                  (ae * (C49873 * C49940 + C50022 * ce)) / C49883);
    const double C1981 =
        2 * ((-(C49873 * C50017) / C49743) / C49809 - (C49975 * ce) / C49883) -
        ((C49975 + C49984 * std::pow(C49873, 2)) * ce) / C49883 +
        C49873 *
            ((-(C49873 * C49984 * ce) / C49743) / C49809 - C50017 / C49883 +
             C49873 * ((-(C49873 * C49905) / C49743) / C49809 -
                       (C49984 * ce) / C49883));
    const double C50473 = C49872 * C49984;
    const double C1660 =
        (C49873 *
         (C49975 + C49872 * (C49872 * C49984 + C50022 * ae) + C50442 * ae)) /
        C49809;
    const double C1974 =
        (2 * C49873 * C49975 + C49873 * (C49975 + C49984 * C50206)) / C49809;
    const double C50157 = C50152 / C49883;
    const double C50155 = C50150 * ce;
    const double C50236 = 2 * C50150;
    const double C50213 = C49974 + C50212;
    const double C50517 = C50512 + C50513;
    const double C50025 = C50011 + C50024;
    const double C50029 = 2 * C50027;
    const double C50076 = C49872 * C50027;
    const double C50200 = C50027 * ce;
    const double C50230 = C49873 * C50027;
    const double C50475 = C50027 * C50046;
    const double C50501 = C50027 * ae;
    const double C50551 = C50027 * C50206;
    const double C50283 = 2 * C50154;
    const double C50312 = C50154 * ce;
    const double C50331 = C49873 * C50154;
    const double C50569 = C50154 * C50206;
    const double C50603 = C50154 * ae;
    const double C50158 = C50011 + C50153;
    const double C50227 = C50011 + C50225;
    const double C50290 = C50282 * ce;
    const double C50339 = 2 * C50282;
    const double C50289 = C50280 + C50281;
    const double C50607 = C50601 + C50602;
    const double C49914 = C49913 / C49743;
    const double C50107 = C49872 * C50103;
    const double C50170 = C49873 * C50103;
    const double C50253 = C50247 / C49743;
    const double C50287 = C50278 / C49743;
    const double C49960 = C49959 + C49943;
    const double C50110 = C50105 * C50046;
    const double C50257 = C50250 + C49943;
    const double C50000 = C49987 + C49999;
    const double C50232 = C50173 * C50206;
    const double C50337 = C49987 + C50334;
    const double C154 = C117 * C131;
    const double C158 = C117 * C133;
    const double C343 = C117 * C310;
    const double C347 = C117 * C312;
    const double C353 = C117 * C319;
    const double C5688 = C117 * C503;
    const double C535 = C117 * C505;
    const double C6248 = C117 * C975;
    const double C5689 = C50886 * C521;
    const double C536 = C50886 * C522;
    const double C546 = C50886 * C524;
    const double C6249 = C50886 * C984;
    const double C14192 = C50938 * C984;
    const double C22318 = C50938 * C984;
    const double C5693 = C50886 * C1980;
    const double C153 = C50886 * C130;
    const double C157 = C50886 * C132;
    const double C350 = C50886 * C313;
    const double C8208 = C50938 * C313;
    const double C17379 = C50938 * C313;
    const double C5687 = C50886 * C502;
    const double C534 = C50886 * C504;
    const double C538 = C50886 * C506;
    const double C544 = C50886 * C508;
    const double C6247 = C50886 * C974;
    const double C14188 = C50938 * C974;
    const double C22314 = C50938 * C974;
    const double C5691 = C50886 * C1972;
    const double C6253 = C50886 * C1319;
    const double C14202 = C50938 * C1319;
    const double C22328 = C50938 * C1319;
    const double C7165 = C50886 * C1666;
    const double C14886 = C50938 * C1666;
    const double C22858 = C50938 * C1666;
    const double C36809 = C2446 * C1666;
    const double C318 =
        (C49880 * C49970 + C49872 * (C49872 * C49975 + C50377 * ae) +
         C49872 * C50377 * ae) /
        C49809;
    const double C507 = -(C49873 * (C49873 * C49933 + C50377 * ce) +
                          C49880 * C49931 + C49873 * C50377 * ce) /
                        C49743;
    const double C976 = (C49873 * (C49872 * C49975 + C50377 * ae)) / C49809;
    const double C977 =
        -(C49873 * C49872 * C49933 + C49872 * C50377 * ce) / C49743;
    const double C1202 =
        (2 * (C49872 * C49975 + C50377 * ae) +
         C49872 * (C49975 + C49872 * (C49872 * C49984 + C50022 * ae) +
                   C49872 * C50022 * ae) +
         (C50377 + C50022 * C50046) * ae) /
        C49809;
    const double C1313 = (C49872 * C49975 + C50377 * ae +
                          (C49872 * C49984 + C50022 * ae) * C50206) /
                         C49809;
    const double C1661 = -(C49873 * (C49940 * C50046 + C49933) +
                           (C50377 + C50022 * C50046) * ce) /
                         C49743;
    const double C1975 = (-2 * (C49873 * C49933 + C50377 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C49940 + C50022 * ce) +
                                    C49933 + C49873 * C50022 * ce)) /
                             C49743 -
                         ((C50377 + C50022 * C50206) * ce) / C49743;
    const double C303 = C49880 * C50374 + C50377 * C50046;
    const double C493 = C49880 * C50374 + C50377 * C50206;
    const double C970 = C49873 * C49872 * C50377;
    const double C1195 =
        2 * C49872 * C50377 + C49872 * (C50377 + C50022 * C50046);
    const double C1308 = C49872 * C50377 + C50442 * C50206;
    const double C1655 = C49873 * (C50377 + C50022 * C50046);
    const double C1969 =
        2 * C49873 * C50377 + C49873 * (C50377 + C50022 * C50206);
    const double C123 = 3 * (C50374 + C50020 * C49889) +
                        C49880 * (2 * C50377 + C49880 * C50381);
    const double C298 = C49872 * (2 * C50377 + C49880 * C50381);
    const double C304 = C50374 + C50020 * C49889 + C50381 * C50046;
    const double C495 = C50374 + C50020 * C49889 + C50381 * C50206;
    const double C496 = C49873 * (2 * C50377 + C49880 * C50381);
    const double C971 = C49873 * C49872 * C50381;
    const double C1312 = -(C49873 * (C49873 * C50043 + C50439 * ce) +
                           C49872 * C49931 + C49873 * C50439 * ce) /
                         C49743;
    const double C1658 =
        (C49873 *
         (C49970 + C49872 * (C49872 * C49974 + C50020 * ae) + C50439 * ae)) /
        C49809;
    const double C4743 = (-2 * (C49873 * C50043 + C50439 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C50127 + C50074 * ce) +
                                    C50043 + C49873 * C50074 * ce)) /
                             C49743 -
                         ((C50439 + C50074 * C50206) * ce) / C49743;
    const double C1307 = C49872 * C50374 + C50439 * C50206;
    const double C4737 =
        2 * C49873 * C50439 + C49873 * (C50439 + C50074 * C50206);
    const double C50469 = C50466 + C50467;
    const double C2652 = 3 * (C50374 + C50020 * C50046) +
                         C49872 * (2 * C50439 + C49872 * C50470);
    const double C2846 = C50374 + C50020 * C50046 + C50470 * C50206;
    const double C3416 = C49873 * (2 * C50439 + C49872 * C50470);
    const double C50544 = C50540 + C50541;
    const double C5669 = 3 * (C50374 + C50020 * C50206) +
                         C49873 * (2 * C50542 + C49873 * C50545);
    const double C346 = C50886 * C311;
    const double C8216 = C50938 * C311;
    const double C17387 = C50938 * C311;
    const double C545 = C117 * C509;
    const double C6251 = C50886 * C1311;
    const double C14198 = C50938 * C1311;
    const double C22324 = C50938 * C1311;
    const double C7164 = C117 * C1659;
    const double C5692 = C117 * C1973;
    const double C156 = C117 * C122;
    const double C345 = C117 * C299;
    const double C543 = C117 * C494;
    const double C7162 = C117 * C1654;
    const double C5690 = C117 * C1968;
    const double C49947 = C49880 * C49946;
    const double C49952 = -3 * C49946;
    const double C50068 = ae * C49946;
    const double C50066 = C49872 * C49946;
    const double C50556 = C49873 * C49946;
    const double C49958 = C49956 / C49743;
    const double C50061 = C50058 + C49940;
    const double C50108 = C50104 / C49883;
    const double C50109 = -2 * C50101;
    const double C50106 = ae * C50101;
    const double C50574 = C49873 * C50101;
    const double C50139 = C49872 * C50135;
    const double C50249 = -3 * C50135;
    const double C50245 = ae * C50135;
    const double C50623 = C49873 * C50135;
    const double C50261 = C50256 / C49743;
    const double C50259 = C50252 / C49743;
    const double C49990 = C49880 * C49989;
    const double C49994 = 3 * C49989;
    const double C50097 = C49989 * ce;
    const double C50219 = C49873 * C49989;
    const double C50481 = C49872 * C49989;
    const double C50176 = C50171 / C49883;
    const double C50174 = C50169 * ce;
    const double C50240 = 2 * C50169;
    const double C50217 = C49984 + C50216;
    const double C50237 = C49873 * C50228;
    const double C50325 = C50228 * ce;
    const double C50346 = 3 * C50228;
    const double C50292 = C50286 / C49743;
    const double C50032 = C49880 * C50031;
    const double C50078 = C49872 * C50031;
    const double C50483 = C50031 * C50046;
    const double C50559 = C50031 * C50206;
    const double C50577 = C50178 * C50206;
    const double C50181 = C50027 + C50177;
    const double C50233 = C50027 + C50231;
    const double C50335 = C50154 + C50332;
    const double C50295 = C49872 * C50291;
    const double C50626 = C50291 * C50206;
    const double C50340 = C49873 * C50336;
    const double C51018 = C50753 / C49813;
    const double C51016 = C50753 / C49809;
    const double C51015 = C50753 * C50748;
    const double C17371 = (2 * C50756 * C50753) / C49809;
    const double C51019 = C50757 * C50748;
    const double C111 = C50757 / C51020;
    const double C8201 = C50757 / C49834;
    const double C51055 = C51017 / C49809;
    const double C17370 = (C50752 * std::pow(C50747, 2)) / C49811 + C51014;
    const double C51025 = C50774 / C49747;
    const double C51023 = C50774 / C49743;
    const double C51022 = C50774 * C50769;
    const double C1120 = (2 * C50777 * C50774) / C49743;
    const double C51026 = C50778 * C50769;
    const double C116 = C50778 / C51027;
    const double C686 = C50778 / C49768;
    const double C51058 = C51024 / C49743;
    const double C1119 = (C50773 * std::pow(C50768, 2)) / C49745 + C51021;
    const double C51035 = C50838 / C49747;
    const double C51034 = C50838 * C50837;
    const double C51031 = C50838 / C49743;
    const double C294 = (2 * C50777 * C50838) / C49743;
    const double C51036 = C50841 * C50837;
    const double C1191 = C50841 / C51027;
    const double C1423 = C50841 / C49768;
    const double C51060 = C51033 / C49743;
    const double C293 = (C50790 * std::pow(C50836, 2)) / C49745 + C51028;
    const double C51052 = C50963 / C49813;
    const double C51051 = C50963 * C50962;
    const double C51045 = C50963 / C49809;
    const double C5337 = (2 * C50756 * C50963) / C49809;
    const double C51053 = C50966 * C50962;
    const double C39216 = C50966 / C51020;
    const double C44529 = C50966 / C49834;
    const double C51069 = C51050 / C49809;
    const double C5336 = (C50902 * std::pow(C50961, 2)) / C49811 + C51043;
    const double C49780 = C49777 - C49773;
    const double C49776 = C49741 * C49770;
    const double C51064 = C51038 / C49745;
    const double C487 =
        (((0 - (C49741 * C49742) / C49743) * ce) / C49743 - (0 * de) / C49747) /
            (2 * C49743) +
        ((C49741 * (((C50805 - (C49741 * 2 * C49748) / C49743) * ce) / C49743 -
                    C49742 / C49747) +
          C51032) *
         ce) /
            C49743 +
        (0 * ce) / C49743 - C49748 / C49745;
    const double C51065 = C51040 / C49743;
    const double C1768 = -C51063;
    const double C49846 = C49843 - C49839;
    const double C49842 = C49807 * C49836;
    const double C2463 = C2451 * C319;
    const double C36808 = C2451 * C1659;
    const double C36802 = C2451 * C1654;
    const double C8227 = C8202 * C122;
    const double C8223 = C8202 * C133;
    const double C8217 = C8202 * C131;
    const double C8213 = C8202 * C121;
    const double C8209 = C8202 * C129;
    const double C8205 = C8202 * C120;
    const double C8431 = C8202 * C319;
    const double C8425 = C8202 * C300;
    const double C8421 = C8202 * C312;
    const double C8417 = C8202 * C299;
    const double C8413 = C8202 * C310;
    const double C8627 = C8202 * C509;
    const double C8623 = C8202 * C494;
    const double C8611 = C8202 * C505;
    const double C8607 = C8202 * C492;
    const double C14199 = C8202 * C503;
    const double C14195 = C8202 * C491;
    const double C14193 = C8202 * C501;
    const double C14189 = C8202 * C490;
    const double C14883 = C8202 * C975;
    const double C14879 = C8202 * C969;
    const double C16089 = C8202 * C1659;
    const double C16085 = C8202 * C1654;
    const double C16619 = C8202 * C1973;
    const double C16615 = C8202 * C1968;
    const double C8219 = C8203 * C310;
    const double C8215 = C8203 * C299;
    const double C8211 = C8203 * C312;
    const double C8207 = C8203 * C300;
    const double C8419 = C8203 * C319;
    const double C14191 = C8203 * C975;
    const double C14187 = C8203 * C969;
    const double C14885 = C8203 * C1659;
    const double C14881 = C8203 * C1654;
    const double C17398 = C17373 * C122;
    const double C17394 = C17373 * C133;
    const double C17388 = C17373 * C131;
    const double C17384 = C17373 * C121;
    const double C17380 = C17373 * C129;
    const double C17376 = C17373 * C120;
    const double C17602 = C17373 * C319;
    const double C17596 = C17373 * C300;
    const double C17592 = C17373 * C312;
    const double C17588 = C17373 * C299;
    const double C17584 = C17373 * C310;
    const double C17798 = C17373 * C509;
    const double C17794 = C17373 * C494;
    const double C17782 = C17373 * C505;
    const double C17778 = C17373 * C492;
    const double C22333 = C17373 * C1973;
    const double C22329 = C17373 * C1968;
    const double C22325 = C17373 * C503;
    const double C22321 = C17373 * C491;
    const double C22319 = C17373 * C501;
    const double C22315 = C17373 * C490;
    const double C22855 = C17373 * C975;
    const double C22851 = C17373 * C969;
    const double C23787 = C17373 * C1659;
    const double C23783 = C17373 * C1654;
    const double C17390 = C17374 * C310;
    const double C17386 = C17374 * C299;
    const double C17382 = C17374 * C312;
    const double C17378 = C17374 * C300;
    const double C17590 = C17374 * C319;
    const double C22317 = C17374 * C975;
    const double C22313 = C17374 * C969;
    const double C22857 = C17374 * C1659;
    const double C22853 = C17374 * C1654;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C5713 = C5684 + C5685;
    const double C5712 = C5682 + C5683;
    const double C51067 = C51047 / C49811;
    const double C8234 = C51044 * C144;
    const double C8228 = C51044 * C132;
    const double C8224 = C51044 * C143;
    const double C8218 = C51044 * C142;
    const double C8214 = C51044 * C130;
    const double C8210 = C51044 * C141;
    const double C8206 = C51044 * C128;
    const double C8432 = C51044 * C333;
    const double C8426 = C51044 * C313;
    const double C8422 = C51044 * C330;
    const double C8418 = C51044 * C311;
    const double C8414 = C51044 * C329;
    const double C8628 = C51044 * C524;
    const double C8624 = C51044 * C508;
    const double C8618 = C51044 * C523;
    const double C8614 = C51044 * C506;
    const double C8612 = C51044 * C522;
    const double C8608 = C51044 * C504;
    const double C9184 = C51044 * C985;
    const double C14200 = C51044 * C521;
    const double C14196 = C51044 * C502;
    const double C14194 = C51044 * C520;
    const double C14190 = C51044 * C500;
    const double C14884 = C51044 * C984;
    const double C14880 = C51044 * C974;
    const double C15432 = C51044 * C1319;
    const double C15428 = C51044 * C1311;
    const double C16090 = C51044 * C1666;
    const double C16620 = C51044 * C1980;
    const double C16616 = C51044 * C1972;
    const double C2449 =
        (((0 - (C49807 * C49808) / C49809) * ae) / C49809 - (0 * be) / C49813) /
            (2 * C49809) +
        ((C49807 * (((C50886 - (C49807 * 2 * C49814) / C49809) * ae) / C49809 -
                    C49808 / C49813) +
          C51044) *
         ae) /
            C49809 +
        (0 * ae) / C49809 - C49814 / C49811;
    const double C2474 = C2445 * C311;
    const double C2468 = C2445 * C329;
    const double C2462 = C2445 * C330;
    const double C2456 = C2445 * C313;
    const double C2668 = C2445 * C333;
    const double C2868 = C2445 * C985;
    const double C36823 = C2445 * C1319;
    const double C36817 = C2445 * C1311;
    const double C36811 = C2445 * C984;
    const double C36805 = C2445 * C974;
    const double C37333 = C2445 * C1666;
    const double C2473 = C2450 * C299;
    const double C2467 = C2450 * C310;
    const double C2461 = C2450 * C312;
    const double C2455 = C2450 * C300;
    const double C2667 = C2450 * C319;
    const double C36810 = C2450 * C975;
    const double C36804 = C2450 * C969;
    const double C37332 = C2450 * C1659;
    const double C37326 = C2450 * C1654;
    const double C51068 = C51049 / C49809;
    const double C24816 = C24798 * C333;
    const double C31428 = C24798 * C1666;
    const double C17368 = -C51066;
    const double C2484 = C2444 * C143;
    const double C2478 = C2444 * C132;
    const double C2476 = C2444 * C130;
    const double C2470 = C2444 * C142;
    const double C2460 = C2444 * C141;
    const double C2454 = C2444 * C128;
    const double C2684 = C2444 * C333;
    const double C2676 = C2444 * C313;
    const double C2670 = C2444 * C330;
    const double C2878 = C2444 * C523;
    const double C2872 = C2444 * C506;
    const double C2870 = C2444 * C522;
    const double C2864 = C2444 * C504;
    const double C3048 = C2444 * C329;
    const double C3042 = C2444 * C311;
    const double C3212 = C2444 * C524;
    const double C3206 = C2444 * C508;
    const double C3436 = C2444 * C985;
    const double C36821 = C2444 * C521;
    const double C36815 = C2444 * C502;
    const double C36813 = C2444 * C520;
    const double C36807 = C2444 * C500;
    const double C37331 = C2444 * C984;
    const double C37325 = C2444 * C974;
    const double C37743 = C2444 * C1319;
    const double C37737 = C2444 * C1311;
    const double C38247 = C2444 * C1666;
    const double C38655 = C2444 * C1980;
    const double C38649 = C2444 * C1972;
    const double C49901 = -C49900;
    const double C49911 = C49909 / C49883;
    const double C50059 = C50056 / C49743;
    const double C50090 = C50088 / C49743;
    const double C50137 = -C50132;
    const double C50160 = -C50156;
    const double C7169 = C50886 * C2855;
    const double C15430 = C50938 * C2855;
    const double C22866 = C50938 * C2855;
    const double C31444 = C24798 * C2855;
    const double C36825 = C2446 * C2855;
    const double C37741 = C2445 * C2855;
    const double C48836 = C51044 * C2855;
    const double C50050 = -C50047;
    const double C50084 = -C50082;
    const double C134 =
        (-3 * (C49923 * C49889 + C49931)) / C49743 +
        C49880 * ((-2 * C49933) / C49743 - (C49880 * C49938) / C49743);
    const double C308 =
        C49872 * ((-2 * C49933) / C49743 - (C49880 * C49938) / C49743);
    const double C321 = -(C49938 * C50046 + C49923 * C49889 + C49931) / C49743;
    const double C511 = -(C49873 * (C49873 * C49938 + C50381 * ce) +
                          C49923 * C49889 + C49931 + C49873 * C50381 * ce) /
                        C49743;
    const double C513 =
        C49873 * ((-2 * C49933) / C49743 - (C49880 * C49938) / C49743) -
        ((2 * C50377 + C49880 * C50381) * ce) / C49743;
    const double C979 =
        -(C49873 * C49872 * C49938 + C49872 * C50381 * ce) / C49743;
    const double C1199 = (-2 * C49872 * C49938) / C49743 -
                         (C49872 * (C49946 * C50046 + C49938)) / C49743;
    const double C49944 = C49942 / C49743;
    const double C50060 = C50057 / C49883;
    const double C1314 = -(C49873 * (C49873 * C50055 + C50442 * ce) +
                           C49872 * C49933 + C49873 * C50442 * ce) /
                         C49743;
    const double C2686 = C2445 * C1207;
    const double C2666 = C2446 * C1207;
    const double C8434 = C50938 * C1207;
    const double C17605 = C50938 * C1207;
    const double C25006 = C24798 * C1207;
    const double C50552 = C50548 + C50549;
    const double C2685 = C2450 * C1201;
    const double C2665 = C2451 * C1201;
    const double C8433 = C8203 * C1201;
    const double C17604 = C17374 * C1201;
    const double C2656 =
        (-3 * (C49923 * C50046 + C49931)) / C49743 +
        C49872 * ((-2 * C50043) / C49743 - (C49872 * C50051) / C49743);
    const double C2850 = -(C49873 * (C49873 * C50051 + C50470 * ce) +
                           C49923 * C50046 + C49931 + C49873 * C50470 * ce) /
                         C49743;
    const double C3420 =
        C49873 * ((-2 * C50043) / C49743 - (C49872 * C50051) / C49743) -
        ((2 * C50439 + C49872 * C50470) * ce) / C49743;
    const double C50138 = C50134 / C49743;
    const double C50136 = C50131 / C49743;
    const double C50570 = C50566 + C50567;
    const double C50194 = ae * C50193;
    const double C50582 = C49873 * C50193;
    const double C50642 = -2 * C50193;
    const double C135 = (3 * (C49970 + C49974 * C49889) +
                         C49880 * (2 * C49975 + C49880 * C49981)) /
                        C49809;
    const double C309 =
        (C49872 * (2 * C49975 + C49880 * C49981) +
         (2 * C49880 * C50020 + C49880 * (C50020 + C50011 * C49889)) * ae) /
        C49809;
    const double C320 =
        (C49970 + C49974 * C49889 + C49872 * (C49872 * C49981 + C50381 * ae) +
         C49872 * C50381 * ae) /
        C49809;
    const double C510 = (C49970 + C49974 * C49889 + C49981 * C50206) / C49809;
    const double C512 = (C49873 * (2 * C49975 + C49880 * C49981)) / C49809;
    const double C978 = (C49873 * (C49872 * C49981 + C50381 * ae)) / C49809;
    const double C1976 =
        (2 * C49873 * C49981 + C49873 * (C49981 + C49989 * C50206)) / C49809;
    const double C50091 = C50089 / C49883;
    const double C2880 = C2445 * C1320;
    const double C5499 = C50886 * C1320;
    const double C8620 = C50938 * C1320;
    const double C14896 = C51044 * C1320;
    const double C17791 = C50938 * C1320;
    const double C2866 = C2446 * C1667;
    const double C3438 = C2445 * C1667;
    const double C5507 = C50886 * C1667;
    const double C9186 = C50938 * C1667;
    const double C13986 = C51044 * C1667;
    const double C18357 = C50938 * C1667;
    const double C25194 = C24798 * C1667;
    const double C5701 = C50886 * C1981;
    const double C14216 = C51044 * C1981;
    const double C50476 = C50473 + C50474;
    const double C2860 = C2446 * C1660;
    const double C3432 = C2445 * C1660;
    const double C5505 = C50886 * C1660;
    const double C9182 = C50938 * C1660;
    const double C13982 = C51044 * C1660;
    const double C18353 = C50938 * C1660;
    const double C25188 = C24798 * C1660;
    const double C5699 = C50886 * C1974;
    const double C14212 = C51044 * C1974;
    const double C50159 = C50155 / C49743;
    const double C5672 = (3 * (C49970 + C49974 * C50206) +
                          C49873 * (2 * C50211 + C49873 * C50213)) /
                         C49809;
    const double C50519 = C49872 * C50517;
    const double C50600 = 2 * C50517;
    const double C50385 = C49880 * C50025;
    const double C50392 = 3 * C50025;
    const double C50445 = C49872 * C50025;
    const double C50482 = C50025 * ae;
    const double C50558 = C49873 * C50025;
    const double C50557 = C50025 * ce;
    const double C1200 =
        (2 * (C49872 * C49981 + C50381 * ae) +
         C49872 * (C49981 + C49872 * (C49872 * C49989 + C50025 * ae) +
                   C49872 * C50025 * ae) +
         (C50381 + C50025 * C50046) * ae) /
        C49809;
    const double C1315 = (C49872 * C49981 + C50381 * ae +
                          (C49872 * C49989 + C50025 * ae) * C50206) /
                         C49809;
    const double C1663 = -(C49873 * (C49946 * C50046 + C49938) +
                           (C50381 + C50025 * C50046) * ce) /
                         C49743;
    const double C1977 = (-2 * (C49873 * C49938 + C50381 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C49946 + C50025 * ce) +
                                    C49938 + C49873 * C50025 * ce)) /
                             C49743 -
                         ((C50381 + C50025 * C50206) * ce) / C49743;
    const double C1194 =
        2 * C49872 * C50381 + C49872 * (C50381 + C50025 * C50046);
    const double C1656 = C49873 * (C50381 + C50025 * C50046);
    const double C1970 =
        2 * C49873 * C50381 + C49873 * (C50381 + C50025 * C50206);
    const double C2856 =
        (-(C49873 * C49984 * ce) / C49743) / C49809 - C50017 / C49883 +
        C49873 *
            ((-(C49873 * C49905) / C49743) / C49809 - (C49984 * ce) / C49883) -
        (ae * (C49873 * (C49873 * C49872 * C49953 + C50076 * ce) + C50055 +
               C49873 * C50076 * ce)) /
            C49883 +
        C49872 * (C49872 * ((-(C49873 * C49995 * ce) / C49743) / C49809 -
                            C49905 / C49883 +
                            C49873 * ((-(C49873 * C49880 * C49912) / C49743) /
                                          C49809 -
                                      (C49995 * ce) / C49883)) -
                  (ae * (C49873 * (C49873 * C49953 + C50027 * ce) + C49940 +
                         C49873 * C50027 * ce)) /
                      C49883);
    const double C50503 = 2 * C50076;
    const double C50502 = C50076 * ae;
    const double C50576 = C49873 * C50076;
    const double C50575 = C50076 * ce;
    const double C4747 = (-2 * (C49873 * C50055 + C50442 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C50101 + C50076 * ce) +
                                    C50055 + C49873 * C50076 * ce)) /
                             C49743 -
                         ((C50442 + C50076 * C50206) * ce) / C49743;
    const double C4739 =
        2 * C49873 * C50442 + C49873 * (C50442 + C50076 * C50206);
    const double C50201 = C50199 + C50200;
    const double C50593 = 2 * C50230;
    const double C50592 = C50230 * ce;
    const double C50477 = C50022 + C50475;
    const double C50505 = C50500 + C50501;
    const double C50553 = C50022 + C50551;
    const double C50315 = C50311 + C50312;
    const double C50635 = 2 * C50331;
    const double C50634 = C50331 * ce;
    const double C50571 = C50074 + C50569;
    const double C50516 = C49872 * C50158;
    const double C50605 = 3 * C50158;
    const double C50604 = C50158 * ae;
    const double C50625 = C49873 * C50158;
    const double C50624 = C50158 * ce;
    const double C4742 = (-2 * (C49873 * C50051 + C50470 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C50135 + C50158 * ce) +
                                    C50051 + C49873 * C50158 * ce)) /
                             C49743 -
                         ((C50470 + C50158 * C50206) * ce) / C49743;
    const double C4736 =
        2 * C49873 * C50470 + C49873 * (C50470 + C50158 * C50206);
    const double C50585 = C49873 * C50227;
    const double C50645 = 3 * C50227;
    const double C50644 = C50227 * ce;
    const double C50294 = C49873 * C50289;
    const double C50314 = ae * C50289;
    const double C50609 = C49872 * C50607;
    const double C50630 = C50607 * C50206;
    const double C49915 = -C49914;
    const double C50112 = C50107 / C49743;
    const double C50175 = C50170 / C49743;
    const double C50260 = -C50253;
    const double C50293 = -C50287;
    const double C49961 = C49880 * C49960;
    const double C50069 = C49960 * C50046;
    const double C50114 = C50110 + C49953;
    const double C50262 = C49872 * C50257;
    const double C50001 = C49880 * C50000;
    const double C50220 = C50000 * C50206;
    const double C50234 = C49995 + C50232;
    const double C50342 = C49873 * C50337;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C365 = C343 + C344;
    const double C367 = C347 + C348;
    const double C370 = C353 + C354;
    const double C5715 = C5688 + C5689;
    const double C562 = C535 + C536;
    const double C6265 = C6248 + C6249;
    const double C170 = C152 + C153;
    const double C368 = C349 + C350;
    const double C5714 = C5686 + C5687;
    const double C561 = C533 + C534;
    const double C6264 = C6246 + C6247;
    const double C352 = C50886 * C318;
    const double C2458 = C2446 * C318;
    const double C2678 = C2444 * C318;
    const double C2674 = C2445 * C318;
    const double C8428 = C51044 * C318;
    const double C8424 = C50938 * C318;
    const double C17595 = C50938 * C318;
    const double C24810 = C24798 * C318;
    const double C539 = C117 * C507;
    const double C8617 = C8202 * C507;
    const double C17788 = C17373 * C507;
    const double C991 = C50886 * C976;
    const double C2862 = C2445 * C976;
    const double C3430 = C2444 * C976;
    const double C8606 = C50938 * C976;
    const double C9180 = C51044 * C976;
    const double C17777 = C50938 * C976;
    const double C994 = C117 * C977;
    const double C2867 = C2450 * C977;
    const double C8609 = C8203 * C977;
    const double C9183 = C8202 * C977;
    const double C17780 = C17374 * C977;
    const double C18354 = C17373 * C977;
    const double C2680 = C2445 * C1202;
    const double C2672 = C2446 * C1202;
    const double C8430 = C50938 * C1202;
    const double C17601 = C50938 * C1202;
    const double C25012 = C24798 * C1202;
    const double C2874 = C2445 * C1313;
    const double C5501 = C50886 * C1313;
    const double C8616 = C50938 * C1313;
    const double C14890 = C51044 * C1313;
    const double C17787 = C50938 * C1313;
    const double C2865 = C2451 * C1661;
    const double C3437 = C2450 * C1661;
    const double C5506 = C117 * C1661;
    const double C9185 = C8203 * C1661;
    const double C13985 = C8202 * C1661;
    const double C18356 = C17374 * C1661;
    const double C27843 = C17373 * C1661;
    const double C5700 = C117 * C1975;
    const double C14215 = C8202 * C1975;
    const double C22345 = C17373 * C1975;
    const double C351 = C117 * C303;
    const double C2457 = C2451 * C303;
    const double C2673 = C2450 * C303;
    const double C8427 = C8202 * C303;
    const double C8423 = C8203 * C303;
    const double C17598 = C17373 * C303;
    const double C17594 = C17374 * C303;
    const double C537 = C117 * C493;
    const double C8613 = C8202 * C493;
    const double C17784 = C17373 * C493;
    const double C990 = C117 * C970;
    const double C2861 = C2450 * C970;
    const double C8605 = C8203 * C970;
    const double C9179 = C8202 * C970;
    const double C17776 = C17374 * C970;
    const double C18350 = C17373 * C970;
    const double C2679 = C2450 * C1195;
    const double C2671 = C2451 * C1195;
    const double C8429 = C8203 * C1195;
    const double C17600 = C17374 * C1195;
    const double C2873 = C2450 * C1308;
    const double C5500 = C117 * C1308;
    const double C8615 = C8203 * C1308;
    const double C14889 = C8202 * C1308;
    const double C17786 = C17374 * C1308;
    const double C22869 = C17373 * C1308;
    const double C2859 = C2451 * C1655;
    const double C3431 = C2450 * C1655;
    const double C5504 = C117 * C1655;
    const double C9181 = C8203 * C1655;
    const double C13981 = C8202 * C1655;
    const double C18352 = C17374 * C1655;
    const double C27839 = C17373 * C1655;
    const double C5698 = C117 * C1969;
    const double C14211 = C8202 * C1969;
    const double C22341 = C17373 * C1969;
    const double C162 = C117 * C123;
    const double C8229 = C8202 * C123;
    const double C17400 = C17373 * C123;
    const double C341 = C117 * C298;
    const double C2479 = C2450 * C298;
    const double C8225 = C8203 * C298;
    const double C8801 = C8202 * C298;
    const double C17396 = C17374 * C298;
    const double C17972 = C17373 * C298;
    const double C355 = C117 * C304;
    const double C2471 = C2451 * C304;
    const double C3043 = C2450 * C304;
    const double C8435 = C8202 * C304;
    const double C8415 = C8203 * C304;
    const double C17606 = C17373 * C304;
    const double C17586 = C17374 * C304;
    const double C547 = C117 * C495;
    const double C8629 = C8202 * C495;
    const double C17800 = C17373 * C495;
    const double C553 = C117 * C496;
    const double C8967 = C8202 * C496;
    const double C18138 = C17373 * C496;
    const double C996 = C117 * C971;
    const double C3207 = C2450 * C971;
    const double C8621 = C8203 * C971;
    const double C9187 = C8202 * C971;
    const double C17792 = C17374 * C971;
    const double C18358 = C17373 * C971;
    const double C6252 = C117 * C1312;
    const double C14201 = C8203 * C1312;
    const double C15431 = C8202 * C1312;
    const double C22327 = C17374 * C1312;
    const double C22863 = C17373 * C1312;
    const double C36822 = C2450 * C1312;
    const double C7163 = C50886 * C1658;
    const double C14882 = C50938 * C1658;
    const double C16086 = C51044 * C1658;
    const double C22854 = C50938 * C1658;
    const double C31422 = C24798 * C1658;
    const double C36803 = C2446 * C1658;
    const double C37327 = C2445 * C1658;
    const double C38241 = C2444 * C1658;
    const double C6672 = C117 * C4743;
    const double C16617 = C8203 * C4743;
    const double C22335 = C17374 * C4743;
    const double C23289 = C17373 * C4743;
    const double C38652 = C2450 * C4743;
    const double C48337 = C8202 * C4743;
    const double C6250 = C117 * C1307;
    const double C14197 = C8203 * C1307;
    const double C15427 = C8202 * C1307;
    const double C22323 = C17374 * C1307;
    const double C22859 = C17373 * C1307;
    const double C36816 = C2450 * C1307;
    const double C6670 = C117 * C4737;
    const double C16613 = C8203 * C4737;
    const double C22331 = C17374 * C4737;
    const double C23285 = C17373 * C4737;
    const double C38646 = C2450 * C4737;
    const double C48333 = C8202 * C4737;
    const double C2655 =
        (3 * (C49970 + C49872 * C50469 + C50439 * ae) +
         C49872 * (2 * C50469 +
                   C49872 * (C49974 + C49872 * (C49872 * C49979 + C50011 * ae) +
                             C50074 * ae) +
                   C50470 * ae) +
         (2 * C50439 + C49872 * C50470) * ae) /
        C49809;
    const double C2849 =
        (C49970 + C49872 * C50469 + C50439 * ae +
         (C49974 + C49872 * (C49872 * C49979 + C50011 * ae) + C50074 * ae) *
             C50206) /
        C49809;
    const double C3419 =
        (C49873 * (2 * C50469 +
                   C49872 * (C49974 + C49872 * (C49872 * C49979 + C50011 * ae) +
                             C50074 * ae) +
                   C50470 * ae)) /
        C49809;
    const double C4741 =
        (2 * C49873 * C50469 + C49873 * (C50469 + C50517 * C50206)) / C49809;
    const double C6663 =
        (3 * (C50469 + C50517 * C50206) +
         C49873 *
             (2 * C49873 * C50517 +
              C49873 * (C50517 + (C49872 * C49987 + C50013 * ae) * C50206))) /
        C49809;
    const double C7166 = C117 * C2846;
    const double C15425 = C8203 * C2846;
    const double C22861 = C17374 * C2846;
    const double C23791 = C17373 * C2846;
    const double C36818 = C2451 * C2846;
    const double C37734 = C2450 * C2846;
    const double C48831 = C8202 * C2846;
    const double C16083 = C8203 * C3416;
    const double C23781 = C17374 * C3416;
    const double C37328 = C2451 * C3416;
    const double C38238 = C2450 * C3416;
    const double C5673 =
        (-3 * (C49873 * C50544 + C49931 + C50542 * ce)) / C49743 +
        C49873 * ((-2 * C50544) / C49743 -
                  (C49873 * (C49873 * C50193 + C49923 + C50224 * ce)) / C49743 -
                  (C50545 * ce) / C49743) -
        ((2 * C50542 + C49873 * C50545) * ce) / C49743;
    const double C7588 = C117 * C5669;
    const double C24203 = C17373 * C5669;
    const double C49235 = C8202 * C5669;
    const double C566 = C545 + C546;
    const double C7171 = C7164 + C7165;
    const double C5717 = C5692 + C5693;
    const double C172 = C156 + C157;
    const double C366 = C345 + C346;
    const double C565 = C543 + C544;
    const double C5716 = C5690 + C5691;
    const double C49948 = C49947 / C49743;
    const double C49955 = C49952 / C49743;
    const double C50070 = C50068 / C49883;
    const double C2658 =
        (-3 * (C49940 * C50046 + C49933)) / C49743 +
        C49872 * ((-2 * C50055) / C49743 - (C49872 * C50061) / C49743);
    const double C50113 = C50109 / C49743;
    const double C50111 = C50106 / C49743;
    const double C50142 = C50139 / C49743;
    const double C50255 = C50249 / C49743;
    const double C50251 = C50245 / C49883;
    const double C50263 = -C50259;
    const double C49991 = C49986 + C49990;
    const double C50098 = C50097 / C49883;
    const double C50179 = C50174 / C49743;
    const double C5674 = (3 * (C49975 + C49984 * C50206) +
                          C49873 * (2 * C50215 + C49873 * C50217)) /
                         C49809;
    const double C50238 = C50236 + C50237;
    const double C50327 = C50325 / C49883;
    const double C50296 = -C50292;
    const double C50033 = C50029 + C50032;
    const double C50485 = C50025 + C50483;
    const double C50561 = C50025 + C50559;
    const double C50579 = C50076 + C50577;
    const double C50504 = C49872 * C50181;
    const double C50594 = C49873 * C50233;
    const double C50636 = C49873 * C50335;
    const double C50299 = C50283 + C50295;
    const double C50628 = C50158 + C50626;
    const double C50343 = C50339 + C50340;
    const double C51054 = C51015 / C49811;
    const double C51056 = C51019 / C49809;
    const double C2447 = -C51055;
    const double C51057 = C51022 / C49745;
    const double C51059 = C51026 / C49743;
    const double C296 = -C51058;
    const double C51061 = C51034 / C49745;
    const double C51062 = C51036 / C49743;
    const double C1117 = -C51060;
    const double C51070 = C51051 / C49811;
    const double C51071 = C51053 / C49809;
    const double C33864 = -C51069;
    const double C1967 =
        (C49780 / C49768 - (0 * de) / C49743) / C49768 + (0 * ce) / C49743;
    const double C2229 = C49780 / C49768 - (0 * de) / C49743;
    const double C49779 = C49776 / C49743;
    const double C51078 = C51030 - C51064;
    const double C51079 = C51039 - C51065;
    const double C20207 =
        (C49846 / C49834 - (0 * be) / C49809) / C49834 + (0 * ae) / C49809;
    const double C24803 = C49846 / C49834 - (0 * be) / C49809;
    const double C49845 = C49842 / C49809;
    const double C2494 = C2463 + C2464;
    const double C36829 = C36808 + C36809;
    const double C8244 = C8219 + C8220;
    const double C8242 = C8215 + C8216;
    const double C8240 = C8211 + C8212;
    const double C8238 = C8207 + C8208;
    const double C8447 = C8419 + C8420;
    const double C14221 = C14191 + C14192;
    const double C14219 = C14187 + C14188;
    const double C14902 = C14885 + C14886;
    const double C17415 = C17390 + C17391;
    const double C17413 = C17386 + C17387;
    const double C17411 = C17382 + C17383;
    const double C17409 = C17378 + C17379;
    const double C17618 = C17590 + C17591;
    const double C22349 = C22317 + C22318;
    const double C22347 = C22313 + C22314;
    const double C22878 = C22857 + C22858;
    const double C179 = C169 * C50805;
    const double C532 = C169 * C484;
    const double C811 = C169 * C51032;
    const double C1774 = C169 * C1768;
    const double C178 = C168 * C118;
    const double C531 = C168 * C487;
    const double C810 = C168 * C803;
    const double C1773 = C168 * C1770;
    const double C51080 = C51041 - C51067;
    const double C8248 = C8227 + C8228;
    const double C8246 = C8223 + C8224;
    const double C8243 = C8217 + C8218;
    const double C8241 = C8213 + C8214;
    const double C8239 = C8209 + C8210;
    const double C8237 = C8205 + C8206;
    const double C8453 = C8431 + C8432;
    const double C8450 = C8425 + C8426;
    const double C8448 = C8421 + C8422;
    const double C8446 = C8417 + C8418;
    const double C8444 = C8413 + C8414;
    const double C8648 = C8627 + C8628;
    const double C8646 = C8623 + C8624;
    const double C8640 = C8611 + C8612;
    const double C8638 = C8607 + C8608;
    const double C14225 = C14199 + C14200;
    const double C14223 = C14195 + C14196;
    const double C14222 = C14193 + C14194;
    const double C14220 = C14189 + C14190;
    const double C14901 = C14883 + C14884;
    const double C14899 = C14879 + C14880;
    const double C16094 = C16089 + C16090;
    const double C16624 = C16619 + C16620;
    const double C16622 = C16615 + C16616;
    const double C2483 = C2449 * C133;
    const double C2477 = C2449 * C122;
    const double C2475 = C2449 * C121;
    const double C2469 = C2449 * C131;
    const double C2459 = C2449 * C129;
    const double C2453 = C2449 * C120;
    const double C2683 = C2449 * C319;
    const double C2677 = C2449 * C303;
    const double C2675 = C2449 * C300;
    const double C2669 = C2449 * C312;
    const double C2877 = C2449 * C507;
    const double C2871 = C2449 * C493;
    const double C2869 = C2449 * C505;
    const double C2863 = C2449 * C492;
    const double C3047 = C2449 * C310;
    const double C3041 = C2449 * C299;
    const double C3211 = C2449 * C509;
    const double C3205 = C2449 * C494;
    const double C3435 = C2449 * C977;
    const double C3429 = C2449 * C970;
    const double C36820 = C2449 * C503;
    const double C36814 = C2449 * C491;
    const double C36812 = C2449 * C501;
    const double C36806 = C2449 * C490;
    const double C37330 = C2449 * C975;
    const double C37324 = C2449 * C969;
    const double C37742 = C2449 * C1312;
    const double C37736 = C2449 * C1307;
    const double C38246 = C2449 * C1659;
    const double C38240 = C2449 * C1654;
    const double C38654 = C2449 * C1973;
    const double C38648 = C2449 * C1968;
    const double C2499 = C2473 + C2474;
    const double C2496 = C2467 + C2468;
    const double C2493 = C2461 + C2462;
    const double C2490 = C2455 + C2456;
    const double C2690 = C2667 + C2668;
    const double C36830 = C36810 + C36811;
    const double C36827 = C36804 + C36805;
    const double C37340 = C37332 + C37333;
    const double C51081 = C51048 - C51068;
    const double C17405 = C17368 * C144;
    const double C17399 = C17368 * C132;
    const double C17395 = C17368 * C143;
    const double C17389 = C17368 * C142;
    const double C17385 = C17368 * C130;
    const double C17381 = C17368 * C141;
    const double C17377 = C17368 * C128;
    const double C17603 = C17368 * C333;
    const double C17599 = C17368 * C318;
    const double C17597 = C17368 * C313;
    const double C17593 = C17368 * C330;
    const double C17589 = C17368 * C311;
    const double C17585 = C17368 * C329;
    const double C17799 = C17368 * C524;
    const double C17795 = C17368 * C508;
    const double C17789 = C17368 * C523;
    const double C17785 = C17368 * C506;
    const double C17783 = C17368 * C522;
    const double C17779 = C17368 * C504;
    const double C18355 = C17368 * C985;
    const double C18351 = C17368 * C976;
    const double C22346 = C17368 * C1981;
    const double C22342 = C17368 * C1974;
    const double C22334 = C17368 * C1980;
    const double C22330 = C17368 * C1972;
    const double C22326 = C17368 * C521;
    const double C22322 = C17368 * C502;
    const double C22320 = C17368 * C520;
    const double C22316 = C17368 * C500;
    const double C22874 = C17368 * C1320;
    const double C22870 = C17368 * C1313;
    const double C22864 = C17368 * C1319;
    const double C22860 = C17368 * C1311;
    const double C22856 = C17368 * C984;
    const double C22852 = C17368 * C974;
    const double C23796 = C17368 * C2855;
    const double C23788 = C17368 * C1666;
    const double C23784 = C17368 * C1658;
    const double C27844 = C17368 * C1667;
    const double C27840 = C17368 * C1660;
    const double C49902 = C49901 / C49809;
    const double C50062 = -C50059;
    const double C50092 = -C50090;
    const double C50141 = C50137 / C49809;
    const double C50162 = C50160 / C49809;
    const double C50052 = C50050 / C49809;
    const double C50085 = C50084 / C49809;
    const double C160 = C117 * C134;
    const double C8233 = C8202 * C134;
    const double C17404 = C17373 * C134;
    const double C339 = C117 * C308;
    const double C2485 = C2450 * C308;
    const double C8221 = C8203 * C308;
    const double C8805 = C8202 * C308;
    const double C17392 = C17374 * C308;
    const double C17976 = C17373 * C308;
    const double C357 = C117 * C321;
    const double C2465 = C2451 * C321;
    const double C3049 = C2450 * C321;
    const double C8439 = C8202 * C321;
    const double C8411 = C8203 * C321;
    const double C17610 = C17373 * C321;
    const double C17582 = C17374 * C321;
    const double C549 = C117 * C511;
    const double C8633 = C8202 * C511;
    const double C17804 = C17373 * C511;
    const double C555 = C117 * C513;
    const double C8971 = C8202 * C513;
    const double C18142 = C17373 * C513;
    const double C1000 = C117 * C979;
    const double C3213 = C2450 * C979;
    const double C8625 = C8203 * C979;
    const double C9191 = C8202 * C979;
    const double C17796 = C17374 * C979;
    const double C18362 = C17373 * C979;
    const double C3051 = C2451 * C1199;
    const double C8441 = C8203 * C1199;
    const double C17612 = C17374 * C1199;
    const double C2879 = C2450 * C1314;
    const double C5498 = C117 * C1314;
    const double C8619 = C8203 * C1314;
    const double C14895 = C8202 * C1314;
    const double C17790 = C17374 * C1314;
    const double C22873 = C17373 * C1314;
    const double C2699 = C2685 + C2686;
    const double C2689 = C2665 + C2666;
    const double C8454 = C8433 + C8434;
    const double C17625 = C17604 + C17605;
    const double C7168 = C117 * C2850;
    const double C15429 = C8203 * C2850;
    const double C22865 = C17374 * C2850;
    const double C23795 = C17373 * C2850;
    const double C36824 = C2451 * C2850;
    const double C37740 = C2450 * C2850;
    const double C48835 = C8202 * C2850;
    const double C16087 = C8203 * C3420;
    const double C23785 = C17374 * C3420;
    const double C37334 = C2451 * C3420;
    const double C38244 = C2450 * C3420;
    const double C50140 = -C50136;
    const double C50195 = C50194 / C49883;
    const double C50586 = C50582 + C49923;
    const double C50647 = C50642 / C49743;
    const double C163 = C50886 * C135;
    const double C8230 = C51044 * C135;
    const double C17401 = C17368 * C135;
    const double C342 = C50886 * C309;
    const double C2480 = C2445 * C309;
    const double C8226 = C50938 * C309;
    const double C8802 = C51044 * C309;
    const double C17397 = C50938 * C309;
    const double C17973 = C17368 * C309;
    const double C356 = C50886 * C320;
    const double C2472 = C2446 * C320;
    const double C3044 = C2445 * C320;
    const double C8436 = C51044 * C320;
    const double C8416 = C50938 * C320;
    const double C17607 = C17368 * C320;
    const double C17587 = C50938 * C320;
    const double C24824 = C24798 * C320;
    const double C548 = C50886 * C510;
    const double C8630 = C51044 * C510;
    const double C17801 = C17368 * C510;
    const double C554 = C50886 * C512;
    const double C8968 = C51044 * C512;
    const double C18139 = C17368 * C512;
    const double C997 = C50886 * C978;
    const double C3208 = C2445 * C978;
    const double C8622 = C50938 * C978;
    const double C9188 = C51044 * C978;
    const double C17793 = C50938 * C978;
    const double C18359 = C17368 * C978;
    const double C5709 = C50886 * C1976;
    const double C2851 =
        (C49975 + C49872 * C50476 + C50442 * ae +
         (C49984 + C49872 * (C49872 * C49995 + C50027 * ae) + C50076 * ae) *
             C50206) /
        C49809;
    const double C50161 = -C50159;
    const double C7589 = C50886 * C5672;
    const double C24204 = C17368 * C5672;
    const double C49236 = C51044 * C5672;
    const double C50520 = C49974 + C50519;
    const double C50386 = C50384 + C50385;
    const double C1316 = -(C49873 * (C49873 * C50066 + C50445 * ce) +
                           C49872 * C49938 + C49873 * C50445 * ce) /
                         C49743;
    const double C1662 =
        (C49873 *
         (C49981 + C49872 * (C49872 * C49989 + C50025 * ae) + C50445 * ae)) /
        C49809;
    const double C6243 =
        (-2 * (C49873 * C50066 + C50445 * ce)) / C49743 -
        (C49873 * (C49873 * (C49873 * C49872 * C49960 + C50078 * ce) + C50066 +
                   C49873 * C50078 * ce)) /
            C49743 -
        ((C50445 + C50078 * C50206) * ce) / C49743;
    const double C1309 = C49872 * C50381 + C50445 * C50206;
    const double C6241 =
        2 * C49873 * C50445 + C49873 * (C50445 + C50078 * C50206);
    const double C50484 = C50481 + C50482;
    const double C50560 = C50556 + C50557;
    const double C3046 = C2446 * C1200;
    const double C8438 = C50938 * C1200;
    const double C17609 = C50938 * C1200;
    const double C25374 = C24798 * C1200;
    const double C5879 = C50886 * C1315;
    const double C8632 = C50938 * C1315;
    const double C17803 = C50938 * C1315;
    const double C3215 = C2451 * C1663;
    const double C9193 = C8203 * C1663;
    const double C11221 = C117 * C1663;
    const double C18364 = C17374 * C1663;
    const double C5710 = C117 * C1977;
    const double C3045 = C2451 * C1194;
    const double C8437 = C8203 * C1194;
    const double C17608 = C17374 * C1194;
    const double C3209 = C2451 * C1656;
    const double C9189 = C8203 * C1656;
    const double C11219 = C117 * C1656;
    const double C18360 = C17374 * C1656;
    const double C5708 = C117 * C1970;
    const double C2882 = C2446 * C2856;
    const double C5511 = C50886 * C2856;
    const double C14898 = C50938 * C2856;
    const double C22872 = C50938 * C2856;
    const double C25210 = C24798 * C2856;
    const double C50578 = C50574 + C50575;
    const double C6262 = C117 * C4747;
    const double C14217 = C8203 * C4747;
    const double C22343 = C17374 * C4747;
    const double C6258 = C117 * C4739;
    const double C14213 = C8203 * C4739;
    const double C22339 = C17374 * C4739;
    const double C50202 = ae * C50201;
    const double C50591 = C49873 * C50201;
    const double C2657 =
        (3 * (C49975 + C49872 * C50476 + C50442 * ae) +
         C49872 * (2 * C50476 +
                   C49872 * (C49984 + C49872 * (C49872 * C49995 + C50027 * ae) +
                             C50076 * ae) +
                   C50477 * ae) +
         (2 * C50442 + C49872 * C50477) * ae) /
        C49809;
    const double C2852 = -(C49873 * (C49873 * C50061 + C50477 * ce) +
                           C49940 * C50046 + C49933 + C49873 * C50477 * ce) /
                         C49743;
    const double C3421 =
        (C49873 * (2 * C50476 +
                   C49872 * (C49984 + C49872 * (C49872 * C49995 + C50027 * ae) +
                             C50076 * ae) +
                   C50477 * ae)) /
        C49809;
    const double C3422 =
        C49873 * ((-2 * C50055) / C49743 - (C49872 * C50061) / C49743) -
        ((2 * C50442 + C49872 * C50477) * ce) / C49743;
    const double C2653 = 3 * (C50377 + C50022 * C50046) +
                         C49872 * (2 * C50442 + C49872 * C50477);
    const double C2847 = C50377 + C50022 * C50046 + C50477 * C50206;
    const double C3417 = C49873 * (2 * C50442 + C49872 * C50477);
    const double C4738 =
        2 * C49873 * C50477 + C49873 * (C50477 + C50181 * C50206);
    const double C50507 = C49872 * C50505;
    const double C4745 =
        (2 * C49873 * C50476 + C49873 * (C50476 + C50505 * C50206)) / C49809;
    const double C6665 =
        (3 * (C50476 + C50505 * C50206) +
         C49873 *
             (2 * C49873 * C50505 +
              C49873 * (C50505 + (C49872 * C50173 + C50172 * ae) * C50206))) /
        C49809;
    const double C5675 =
        (-3 * (C49873 * C50552 + C49933 + C50550 * ce)) / C49743 +
        C49873 * ((-2 * C50552) / C49743 -
                  (C49873 * (C49873 * C50201 + C49940 + C50230 * ce)) / C49743 -
                  (C50553 * ce) / C49743) -
        ((2 * C50550 + C49873 * C50553) * ce) / C49743;
    const double C5670 = 3 * (C50377 + C50022 * C50206) +
                         C49873 * (2 * C50550 + C49873 * C50553);
    const double C50317 = ae * C50315;
    const double C50633 = C49873 * C50315;
    const double C6664 =
        (-3 * (C49873 * C50570 + C50043 + C50568 * ce)) / C49743 +
        C49873 * ((-2 * C50570) / C49743 -
                  (C49873 * (C49873 * C50315 + C50127 + C50331 * ce)) / C49743 -
                  (C50571 * ce) / C49743) -
        ((2 * C50568 + C49873 * C50571) * ce) / C49743;
    const double C6661 = 3 * (C50439 + C50074 * C50206) +
                         C49873 * (2 * C50568 + C49873 * C50571);
    const double C50518 = C50515 + C50516;
    const double C50627 = C50623 + C50624;
    const double C23287 = C17374 * C4742;
    const double C38650 = C2451 * C4742;
    const double C40336 = C117 * C4742;
    const double C48335 = C8203 * C4742;
    const double C23283 = C17374 * C4736;
    const double C38644 = C2451 * C4736;
    const double C40334 = C117 * C4736;
    const double C48331 = C8203 * C4736;
    const double C50587 = C50584 + C50585;
    const double C50649 = C50644 / C49743;
    const double C50298 = C50294 + C49936;
    const double C50316 = C50314 / C49883;
    const double C50610 = C49979 + C50609;
    const double C50631 = C50517 + C50630;
    const double C49916 = C49915 / C49809;
    const double C50116 = -C50112;
    const double C50180 = -C50175;
    const double C50264 = C50260 / C49809;
    const double C50297 = C50293 / C49809;
    const double C49962 = C49961 / C49743;
    const double C50071 = C50069 + C49946;
    const double C50117 = C49872 * C50114;
    const double C4746 = (-2 * (C49873 * C50061 + C50477 * ce)) / C49743 -
                         (C49873 * (C49873 * (C49873 * C50114 + C50181 * ce) +
                                    C50061 + C49873 * C50181 * ce)) /
                             C49743 -
                         ((C50477 + C50181 * C50206) * ce) / C49743;
    const double C50265 = C50262 / C49743;
    const double C50002 = C49997 + C50001;
    const double C50221 = C49989 + C50220;
    const double C50241 = C49873 * C50234;
    const double C50344 = C50341 + C50342;
    const double C181 = C171 * C50805;
    const double C542 = C171 * C484;
    const double C815 = C171 * C51032;
    const double C1778 = C171 * C1768;
    const double C183 = C173 * C50805;
    const double C552 = C173 * C484;
    const double C819 = C173 * C51032;
    const double C1782 = C173 * C1768;
    const double C377 = C365 * C50805;
    const double C998 = C365 * C51032;
    const double C2120 = C365 * C1768;
    const double C379 = C367 * C50805;
    const double C992 = C367 * C51032;
    const double C2116 = C367 * C1768;
    const double C382 = C370 * C50805;
    const double C574 = C562 * C485;
    const double C813 = C562 * C50869;
    const double C1776 = C562 * C50869;
    const double C5341 = C562 * C50805;
    const double C5695 = C562 * C484;
    const double C6033 = C562 * C51032;
    const double C7321 = C562 * C1768;
    const double C180 = C170 * C118;
    const double C541 = C170 * C487;
    const double C814 = C170 * C803;
    const double C1777 = C170 * C1770;
    const double C380 = C368 * C118;
    const double C993 = C368 * C803;
    const double C2117 = C368 * C1770;
    const double C573 = C561 * C488;
    const double C812 = C561 * C804;
    const double C1775 = C561 * C1771;
    const double C5340 = C561 * C118;
    const double C5694 = C561 * C487;
    const double C6032 = C561 * C803;
    const double C7320 = C561 * C1770;
    const double C564 = C539 + C540;
    const double C8643 = C8617 + C8618;
    const double C1009 = C994 + C995;
    const double C2887 = C2867 + C2868;
    const double C8639 = C8609 + C8610;
    const double C9197 = C9183 + C9184;
    const double C17810 = C17780 + C17781;
    const double C2886 = C2865 + C2866;
    const double C3445 = C3437 + C3438;
    const double C5515 = C5506 + C5507;
    const double C9198 = C9185 + C9186;
    const double C13991 = C13985 + C13986;
    const double C18369 = C18356 + C18357;
    const double C5719 = C5700 + C5701;
    const double C14229 = C14215 + C14216;
    const double C369 = C351 + C352;
    const double C2491 = C2457 + C2458;
    const double C2693 = C2673 + C2674;
    const double C8451 = C8427 + C8428;
    const double C8449 = C8423 + C8424;
    const double C17620 = C17594 + C17595;
    const double C563 = C537 + C538;
    const double C8641 = C8613 + C8614;
    const double C1008 = C990 + C991;
    const double C2884 = C2861 + C2862;
    const double C8637 = C8605 + C8606;
    const double C9195 = C9179 + C9180;
    const double C17808 = C17776 + C17777;
    const double C2696 = C2679 + C2680;
    const double C2692 = C2671 + C2672;
    const double C8452 = C8429 + C8430;
    const double C17623 = C17600 + C17601;
    const double C2890 = C2873 + C2874;
    const double C5513 = C5500 + C5501;
    const double C8642 = C8615 + C8616;
    const double C14903 = C14889 + C14890;
    const double C17813 = C17786 + C17787;
    const double C2883 = C2859 + C2860;
    const double C3442 = C3431 + C3432;
    const double C5514 = C5504 + C5505;
    const double C9196 = C9181 + C9182;
    const double C13989 = C13981 + C13982;
    const double C18367 = C18352 + C18353;
    const double C5718 = C5698 + C5699;
    const double C14227 = C14211 + C14212;
    const double C6267 = C6252 + C6253;
    const double C14226 = C14201 + C14202;
    const double C15436 = C15431 + C15432;
    const double C22354 = C22327 + C22328;
    const double C36836 = C36822 + C36823;
    const double C7170 = C7162 + C7163;
    const double C14900 = C14881 + C14882;
    const double C16092 = C16085 + C16086;
    const double C22876 = C22853 + C22854;
    const double C36826 = C36802 + C36803;
    const double C37337 = C37326 + C37327;
    const double C6266 = C6250 + C6251;
    const double C14224 = C14197 + C14198;
    const double C15434 = C15427 + C15428;
    const double C22352 = C22323 + C22324;
    const double C36833 = C36816 + C36817;
    const double C7167 = C50886 * C2849;
    const double C15426 = C50938 * C2849;
    const double C22862 = C50938 * C2849;
    const double C23792 = C17368 * C2849;
    const double C31438 = C24798 * C2849;
    const double C36819 = C2446 * C2849;
    const double C37735 = C2445 * C2849;
    const double C48832 = C51044 * C2849;
    const double C16084 = C50938 * C3419;
    const double C23782 = C50938 * C3419;
    const double C31948 = C24798 * C3419;
    const double C37329 = C2446 * C3419;
    const double C38239 = C2445 * C3419;
    const double C6671 = C50886 * C4741;
    const double C16614 = C50938 * C4741;
    const double C22332 = C50938 * C4741;
    const double C23286 = C17368 * C4741;
    const double C38647 = C2445 * C4741;
    const double C48334 = C51044 * C4741;
    const double C24202 = C50938 * C6663;
    const double C40003 = C50886 * C6663;
    const double C49234 = C50938 * C6663;
    const double C7590 = C117 * C5673;
    const double C24207 = C17373 * C5673;
    const double C49239 = C8202 * C5673;
    const double C578 = C566 * C485;
    const double C817 = C566 * C50869;
    const double C1780 = C566 * C50869;
    const double C5346 = C566 * C50805;
    const double C6041 = C566 * C51032;
    const double C7329 = C566 * C1768;
    const double C11374 = C566 * C484;
    const double C182 = C172 * C118;
    const double C551 = C172 * C487;
    const double C818 = C172 * C803;
    const double C1781 = C172 * C1770;
    const double C378 = C366 * C118;
    const double C999 = C366 * C803;
    const double C2121 = C366 * C1770;
    const double C577 = C565 * C488;
    const double C816 = C565 * C804;
    const double C1779 = C565 * C1771;
    const double C5347 = C565 * C118;
    const double C6042 = C565 * C803;
    const double C7330 = C565 * C1770;
    const double C11373 = C565 * C487;
    const double C49949 = C49944 - C49948;
    const double C2687 = C2451 * C2658;
    const double C50115 = -C50111;
    const double C50145 = C50138 - C50142;
    const double C50266 = C50263 / C49809;
    const double C136 = (4 * (2 * C49975 + C49880 * C49981) +
                         C49880 * (3 * C49981 + C49880 * C49991)) /
                        C49809;
    const double C514 =
        (2 * C49975 + C49880 * C49981 + C49991 * C50206) / C49809;
    const double C516 = (C49873 * (3 * C49981 + C49880 * C49991)) / C49809;
    const double C50182 = -C50179;
    const double C5705 = C50886 * C5674;
    const double C7581 = (4 * (2 * C50211 + C49873 * C50213) +
                          C49873 * (3 * C50213 + C49873 * C50238)) /
                         C49809;
    const double C50300 = C50296 / C49809;
    const double C50393 = C49880 * C50033;
    const double C50448 = C49872 * C50033;
    const double C2654 = 3 * (C50381 + C50025 * C50046) +
                         C49872 * (2 * C50445 + C49872 * C50485);
    const double C2848 = C50381 + C50025 * C50046 + C50485 * C50206;
    const double C3418 = C49873 * (2 * C50445 + C49872 * C50485);
    const double C5671 = 3 * (C50381 + C50025 * C50206) +
                         C49873 * (2 * C50558 + C49873 * C50561);
    const double C6662 = 3 * (C50442 + C50076 * C50206) +
                         C49873 * (2 * C50576 + C49873 * C50579);
    const double C50506 = C50503 + C50504;
    const double C50596 = C50593 + C50594;
    const double C50638 = C50635 + C50636;
    const double C50606 = C49872 * C50299;
    const double C23276 = 3 * (C50470 + C50158 * C50206) +
                          C49873 * (2 * C50625 + C49873 * C50628);
    const double C50646 = C49873 * C50343;
    const double C51072 = C51014 - C51054;
    const double C51073 = C51018 - C51056;
    const double C51074 = C51021 - C51057;
    const double C51075 = C51025 - C51059;
    const double C51076 = C51028 - C51061;
    const double C51077 = C51035 - C51062;
    const double C51082 = C51043 - C51070;
    const double C51083 = C51052 - C51071;
    const double C49782 = C50805 - C49779;
    const double C2244 = C173 * C51078;
    const double C2238 = C171 * C51078;
    const double C2232 = C169 * C51078;
    const double C7943 = C562 * C51078;
    const double C13506 = C566 * C51078;
    const double C1960 =
        (C51078 * C50864) / C49743 + (C51032 - C51063) / C49768;
    const double C2240 = C566 * C51079;
    const double C2234 = C562 * C51079;
    const double C1961 =
        (C51079 * C50864) / C49743 + (2 * C50869 + C51078) / C49768;
    const double C1962 = (C50864 * C50869) / C49747 + C51079 / C49768;
    const double C24823 = C24803 * C304;
    const double C24817 = C24803 * C321;
    const double C24815 = C24803 * C319;
    const double C24809 = C24803 * C303;
    const double C25027 = C24803 * C2658;
    const double C25011 = C24803 * C1195;
    const double C25005 = C24803 * C1201;
    const double C25193 = C24803 * C1661;
    const double C25187 = C24803 * C1655;
    const double C25379 = C24803 * C1199;
    const double C25373 = C24803 * C1194;
    const double C25543 = C24803 * C1663;
    const double C25537 = C24803 * C1656;
    const double C31443 = C24803 * C2850;
    const double C31437 = C24803 * C2846;
    const double C31427 = C24803 * C1659;
    const double C31421 = C24803 * C1654;
    const double C31953 = C24803 * C3420;
    const double C31947 = C24803 * C3416;
    const double C33269 = C24803 * C4742;
    const double C33263 = C24803 * C4736;
    const double C49848 = C50886 - C49845;
    const double C24836 = C51080 * C143;
    const double C24830 = C51080 * C132;
    const double C24828 = C51080 * C130;
    const double C24822 = C51080 * C142;
    const double C24812 = C51080 * C141;
    const double C24806 = C51080 * C128;
    const double C25024 = C51080 * C333;
    const double C25018 = C51080 * C318;
    const double C25016 = C51080 * C313;
    const double C25010 = C51080 * C330;
    const double C25206 = C51080 * C523;
    const double C25200 = C51080 * C506;
    const double C25198 = C51080 * C522;
    const double C25192 = C51080 * C504;
    const double C25376 = C51080 * C329;
    const double C25370 = C51080 * C311;
    const double C25540 = C51080 * C524;
    const double C25534 = C51080 * C508;
    const double C25752 = C51080 * C985;
    const double C25746 = C51080 * C976;
    const double C31440 = C51080 * C521;
    const double C31434 = C51080 * C502;
    const double C31432 = C51080 * C520;
    const double C31426 = C51080 * C500;
    const double C31950 = C51080 * C984;
    const double C31944 = C51080 * C974;
    const double C32362 = C51080 * C1319;
    const double C32356 = C51080 * C1311;
    const double C32866 = C51080 * C1666;
    const double C32860 = C51080 * C1658;
    const double C33274 = C51080 * C1980;
    const double C33268 = C51080 * C1972;
    const double C20199 =
        (C51080 * C50933) / C49809 + (C51044 - C51066) / C49834;
    const double C8254 = C8243 + C8244;
    const double C8253 = C8241 + C8242;
    const double C2504 = C2483 + C2484;
    const double C2501 = C2477 + C2478;
    const double C2500 = C2475 + C2476;
    const double C2497 = C2469 + C2470;
    const double C2492 = C2459 + C2460;
    const double C2489 = C2453 + C2454;
    const double C2698 = C2683 + C2684;
    const double C2695 = C2677 + C2678;
    const double C2694 = C2675 + C2676;
    const double C2691 = C2669 + C2670;
    const double C2892 = C2877 + C2878;
    const double C2889 = C2871 + C2872;
    const double C2888 = C2869 + C2870;
    const double C2885 = C2863 + C2864;
    const double C3056 = C3047 + C3048;
    const double C3053 = C3041 + C3042;
    const double C3220 = C3211 + C3212;
    const double C3217 = C3205 + C3206;
    const double C3444 = C3435 + C3436;
    const double C3441 = C3429 + C3430;
    const double C36835 = C36820 + C36821;
    const double C36832 = C36814 + C36815;
    const double C36831 = C36812 + C36813;
    const double C36828 = C36806 + C36807;
    const double C37339 = C37330 + C37331;
    const double C37336 = C37324 + C37325;
    const double C37749 = C37742 + C37743;
    const double C37746 = C37736 + C37737;
    const double C38253 = C38246 + C38247;
    const double C38250 = C38240 + C38241;
    const double C38661 = C38654 + C38655;
    const double C38658 = C38648 + C38649;
    const double C24832 = C51081 * C309;
    const double C24826 = C51081 * C311;
    const double C24820 = C51081 * C329;
    const double C24814 = C51081 * C330;
    const double C24808 = C51081 * C313;
    const double C25026 = C51081 * C1207;
    const double C25020 = C51081 * C1202;
    const double C25014 = C51081 * C318;
    const double C25008 = C51081 * C333;
    const double C25208 = C51081 * C1320;
    const double C25202 = C51081 * C1313;
    const double C25196 = C51081 * C985;
    const double C25190 = C51081 * C976;
    const double C25372 = C51081 * C320;
    const double C25536 = C51081 * C978;
    const double C25754 = C51081 * C1667;
    const double C25748 = C51081 * C1660;
    const double C31442 = C51081 * C1319;
    const double C31436 = C51081 * C1311;
    const double C31430 = C51081 * C984;
    const double C31424 = C51081 * C974;
    const double C31952 = C51081 * C1666;
    const double C31946 = C51081 * C1658;
    const double C32360 = C51081 * C2855;
    const double C32354 = C51081 * C2849;
    const double C32858 = C51081 * C3419;
    const double C33266 = C51081 * C4741;
    const double C20200 =
        (C51081 * C50933) / C49809 + (2 * C50938 + C51080) / C49834;
    const double C20201 = (C50933 * C50938) / C49813 + C51081 / C49834;
    const double C17419 = C17398 + C17399;
    const double C17417 = C17394 + C17395;
    const double C17414 = C17388 + C17389;
    const double C17412 = C17384 + C17385;
    const double C17410 = C17380 + C17381;
    const double C17408 = C17376 + C17377;
    const double C17624 = C17602 + C17603;
    const double C17622 = C17598 + C17599;
    const double C17621 = C17596 + C17597;
    const double C17619 = C17592 + C17593;
    const double C17617 = C17588 + C17589;
    const double C17615 = C17584 + C17585;
    const double C17819 = C17798 + C17799;
    const double C17817 = C17794 + C17795;
    const double C17814 = C17788 + C17789;
    const double C17812 = C17784 + C17785;
    const double C17811 = C17782 + C17783;
    const double C17809 = C17778 + C17779;
    const double C18368 = C18354 + C18355;
    const double C18366 = C18350 + C18351;
    const double C22362 = C22345 + C22346;
    const double C22360 = C22341 + C22342;
    const double C22357 = C22333 + C22334;
    const double C22355 = C22329 + C22330;
    const double C22353 = C22325 + C22326;
    const double C22351 = C22321 + C22322;
    const double C22350 = C22319 + C22320;
    const double C22348 = C22315 + C22316;
    const double C22884 = C22869 + C22870;
    const double C22881 = C22863 + C22864;
    const double C22879 = C22859 + C22860;
    const double C22877 = C22855 + C22856;
    const double C22875 = C22851 + C22852;
    const double C23800 = C23787 + C23788;
    const double C23798 = C23783 + C23784;
    const double C27849 = C27843 + C27844;
    const double C27847 = C27839 + C27840;
    const double C49903 = C49902 - C49896;
    const double C50063 = C50062 / C49809;
    const double C50093 = C50092 / C49809;
    const double C50144 = C50141 - C50133;
    const double C50164 = C50162 - C50157;
    const double C50053 = C50052 - C50048;
    const double C50086 = C50085 - C50083;
    const double C174 = C160 + C161;
    const double C8251 = C8233 + C8234;
    const double C17422 = C17404 + C17405;
    const double C2893 = C2879 + C2880;
    const double C5512 = C5498 + C5499;
    const double C8644 = C8619 + C8620;
    const double C14905 = C14895 + C14896;
    const double C17815 = C17790 + C17791;
    const double C22886 = C22873 + C22874;
    const double C7173 = C7168 + C7169;
    const double C15435 = C15429 + C15430;
    const double C22882 = C22865 + C22866;
    const double C23804 = C23795 + C23796;
    const double C36837 = C36824 + C36825;
    const double C37748 = C37740 + C37741;
    const double C48840 = C48835 + C48836;
    const double C50143 = C50140 / C49809;
    const double C50588 = C50586 + C50583;
    const double C175 = C162 + C163;
    const double C8249 = C8229 + C8230;
    const double C17420 = C17400 + C17401;
    const double C364 = C341 + C342;
    const double C2502 = C2479 + C2480;
    const double C8247 = C8225 + C8226;
    const double C8811 = C8801 + C8802;
    const double C17418 = C17396 + C17397;
    const double C17982 = C17972 + C17973;
    const double C371 = C355 + C356;
    const double C2498 = C2471 + C2472;
    const double C3054 = C3043 + C3044;
    const double C8455 = C8435 + C8436;
    const double C8445 = C8415 + C8416;
    const double C17626 = C17606 + C17607;
    const double C17616 = C17586 + C17587;
    const double C567 = C547 + C548;
    const double C8649 = C8629 + C8630;
    const double C17820 = C17800 + C17801;
    const double C569 = C553 + C554;
    const double C8978 = C8967 + C8968;
    const double C18149 = C18138 + C18139;
    const double C1010 = C996 + C997;
    const double C3218 = C3207 + C3208;
    const double C8645 = C8621 + C8622;
    const double C9199 = C9187 + C9188;
    const double C17816 = C17792 + C17793;
    const double C18370 = C18358 + C18359;
    const double C2876 = C2446 * C2851;
    const double C5509 = C50886 * C2851;
    const double C14892 = C50938 * C2851;
    const double C22868 = C50938 * C2851;
    const double C25204 = C24798 * C2851;
    const double C50163 = C50161 / C49809;
    const double C7592 = C7588 + C7589;
    const double C24210 = C24203 + C24204;
    const double C49242 = C49235 + C49236;
    const double C50521 = C50520 + C50514;
    const double C322 =
        (2 * C49975 + C49880 * C49981 +
         C49872 * (C49872 * C49991 + C50386 * ae) + C49872 * C50386 * ae) /
        C49809;
    const double C324 = (C49872 * (3 * C49981 + C49880 * C49991) +
                         (3 * C50381 + C49880 * C50386) * ae) /
                        C49809;
    const double C980 = (C49873 * (C49872 * C49991 + C50386 * ae)) / C49809;
    const double C124 = 4 * (2 * C50377 + C49880 * C50381) +
                        C49880 * (3 * C50381 + C49880 * C50386);
    const double C305 = 2 * C50377 + C49880 * C50381 + C50386 * C50046;
    const double C306 = C49872 * (3 * C50381 + C49880 * C50386);
    const double C497 = 2 * C50377 + C49880 * C50381 + C50386 * C50206;
    const double C498 = C49873 * (3 * C50381 + C49880 * C50386);
    const double C972 = C49873 * C49872 * C50386;
    const double C1193 =
        2 * C49872 * C50386 + C49872 * (C50386 + C50033 * C50046);
    const double C1657 = C49873 * (C50386 + C50033 * C50046);
    const double C1971 =
        2 * C49873 * C50386 + C49873 * (C50386 + C50033 * C50206);
    const double C5880 = C117 * C1316;
    const double C8635 = C8203 * C1316;
    const double C17806 = C17374 * C1316;
    const double C3210 = C2446 * C1662;
    const double C9190 = C50938 * C1662;
    const double C11220 = C50886 * C1662;
    const double C18361 = C50938 * C1662;
    const double C25538 = C24798 * C1662;
    const double C5878 = C117 * C1309;
    const double C8631 = C8203 * C1309;
    const double C17802 = C17374 * C1309;
    const double C2660 =
        (3 * (C49981 + C49872 * C50484 + C50445 * ae) +
         C49872 * (2 * C50484 +
                   C49872 * (C49989 + C49872 * (C49872 * C50000 + C50031 * ae) +
                             C50078 * ae) +
                   C50485 * ae) +
         (2 * C50445 + C49872 * C50485) * ae) /
        C49809;
    const double C2853 =
        (C49981 + C49872 * C50484 + C50445 * ae +
         (C49989 + C49872 * (C49872 * C50000 + C50031 * ae) + C50078 * ae) *
             C50206) /
        C49809;
    const double C3423 =
        (C49873 * (2 * C50484 +
                   C49872 * (C49989 + C49872 * (C49872 * C50000 + C50031 * ae) +
                             C50078 * ae) +
                   C50485 * ae)) /
        C49809;
    const double C6242 =
        (2 * C49873 * C50484 +
         C49873 * (C50484 + (C49872 * C50000 + C50031 * ae) * C50206)) /
        C49809;
    const double C5677 =
        (-3 * (C49873 * C50560 + C49938 + C50558 * ce)) / C49743 +
        C49873 * ((-2 * C50560) / C49743 -
                  (C49873 * (C49873 * (C49873 * C49960 + C50031 * ce) + C49946 +
                             C49873 * C50031 * ce)) /
                      C49743 -
                  (C50561 * ce) / C49743) -
        ((2 * C50558 + C49873 * C50561) * ce) / C49743;
    const double C3055 = C3045 + C3046;
    const double C8456 = C8437 + C8438;
    const double C17627 = C17608 + C17609;
    const double C5722 = C5708 + C5709;
    const double C6666 =
        (-3 * (C49873 * C50578 + C50055 + C50576 * ce)) / C49743 +
        C49873 * ((-2 * C50578) / C49743 -
                  (C49873 * (C49873 * (C49873 * C49872 * C50105 + C50178 * ce) +
                             C50101 + C49873 * C50178 * ce)) /
                      C49743 -
                  (C50579 * ce) / C49743) -
        ((2 * C50576 + C49873 * C50579) * ce) / C49743;
    const double C50203 = C50202 / C49883;
    const double C50595 = C50591 + C49940;
    const double C2682 = C2446 * C2657;
    const double C25022 = C24798 * C2657;
    const double C2881 = C2451 * C2852;
    const double C5510 = C117 * C2852;
    const double C14897 = C8203 * C2852;
    const double C22871 = C17374 * C2852;
    const double C25209 = C24803 * C2852;
    const double C3434 = C2446 * C3421;
    const double C13984 = C50938 * C3421;
    const double C25750 = C24798 * C3421;
    const double C27842 = C50938 * C3421;
    const double C3439 = C2451 * C3422;
    const double C13987 = C8203 * C3422;
    const double C25755 = C24803 * C3422;
    const double C27845 = C17374 * C3422;
    const double C2681 = C2451 * C2653;
    const double C25021 = C24803 * C2653;
    const double C2875 = C2451 * C2847;
    const double C5508 = C117 * C2847;
    const double C14891 = C8203 * C2847;
    const double C22867 = C17374 * C2847;
    const double C25203 = C24803 * C2847;
    const double C3433 = C2451 * C3417;
    const double C13983 = C8203 * C3417;
    const double C25749 = C24803 * C3417;
    const double C27841 = C17374 * C3417;
    const double C50508 = C49984 + C50507;
    const double C6259 = C50886 * C4745;
    const double C14214 = C50938 * C4745;
    const double C22340 = C50938 * C4745;
    const double C5706 = C117 * C5675;
    const double C5704 = C117 * C5670;
    const double C50319 = C50317 / C49883;
    const double C50637 = C50633 + C50127;
    const double C24205 = C17374 * C6664;
    const double C40004 = C117 * C6664;
    const double C49237 = C8203 * C6664;
    const double C24201 = C17374 * C6661;
    const double C40002 = C117 * C6661;
    const double C49233 = C8203 * C6661;
    const double C3691 = 4 * (2 * C50439 + C49872 * C50470) +
                         C49872 * (3 * C50470 + C49872 * C50518);
    const double C3844 = 2 * C50439 + C49872 * C50470 + C50518 * C50206;
    const double C4338 = C49873 * (3 * C50470 + C49872 * C50518);
    const double C21592 =
        2 * C49873 * C50518 + C49873 * (C50518 + C50299 * C50206);
    const double C23278 =
        (-3 * (C49873 * C50627 + C50051 + C50625 * ce)) / C49743 +
        C49873 * ((-2 * C50627) / C49743 -
                  (C49873 * (C49873 * (C49873 * C50257 + C50291 * ce) + C50135 +
                             C49873 * C50291 * ce)) /
                      C49743 -
                  (C50628 * ce) / C49743) -
        ((2 * C50625 + C49873 * C50628) * ce) / C49743;
    const double C7579 = 4 * (2 * C50542 + C49873 * C50545) +
                         C49873 * (3 * C50545 + C49873 * C50587);
    const double C50302 = C50298 + C50290;
    const double C50611 = C50610 + C50603;
    const double C24195 =
        (4 * (2 * C49873 * C50517 + C49873 * C50631) +
         C49873 * (3 * C50631 + C49873 * (2 * C49873 * C50607 +
                                          C49873 * (C50607 + (C49872 * C49998 +
                                                              C50028 * ae) *
                                                                 C50206)))) /
        C49809;
    const double C49917 = C49916 - C49908;
    const double C50119 = C50116 / C49809;
    const double C50183 = C50180 / C49809;
    const double C50267 = C50264 - C50254;
    const double C50301 = C50297 - C50288;
    const double C49963 = C49958 - C49962;
    const double C2659 =
        (-3 * (C49946 * C50046 + C49938)) / C49743 +
        C49872 * ((-2 * C50066) / C49743 - (C49872 * C50071) / C49743);
    const double C2854 = -(C49873 * (C49873 * C50071 + C50485 * ce) +
                           C49946 * C50046 + C49938 + C49873 * C50485 * ce) /
                         C49743;
    const double C3424 =
        C49873 * ((-2 * C50066) / C49743 - (C49872 * C50071) / C49743) -
        ((2 * C50445 + C49872 * C50485) * ce) / C49743;
    const double C50120 = C50117 / C49743;
    const double C50268 = C50261 - C50265;
    const double C50003 = C49880 * C50002;
    const double C1198 =
        (2 * (C49872 * C49991 + C50386 * ae) +
         C49872 * (C49991 + C49872 * (C49872 * C50002 + C50033 * ae) +
                   C49872 * C50033 * ae) +
         (C50386 + C50033 * C50046) * ae) /
        C49809;
    const double C1317 = (C49872 * C49991 + C50386 * ae +
                          (C49872 * C50002 + C50033 * ae) * C50206) /
                         C49809;
    const double C1978 =
        (2 * C49873 * C49991 + C49873 * (C49991 + C50002 * C50206)) / C49809;
    const double C5676 = (3 * (C49981 + C49989 * C50206) +
                          C49873 * (2 * C50219 + C49873 * C50221)) /
                         C49809;
    const double C50242 = C50240 + C50241;
    const double C50347 = C49873 * C50344;
    const double C188 = C180 + C181;
    const double C828 = C814 + C815;
    const double C1789 = C1777 + C1778;
    const double C576 = C564 * C486;
    const double C2236 = C564 * C2226;
    const double C5343 = C564 * C50805;
    const double C5703 = C564 * C484;
    const double C5697 = C564 * C485;
    const double C6037 = C564 * C51032;
    const double C6035 = C564 * C50869;
    const double C7325 = C564 * C1768;
    const double C7323 = C564 * C50869;
    const double C7949 = C564 * C51078;
    const double C7945 = C564 * C51079;
    const double C1015 = C1009 * C50869;
    const double C2118 = C1009 * C50869;
    const double C5502 = C1009 * C50805;
    const double C6255 = C1009 * C51032;
    const double C7789 = C1009 * C1768;
    const double C14208 = C8640 + C8639;
    const double C14204 = C8639 + C8640;
    const double C5521 = C5515 * C50805;
    const double C14893 = C9198 + C9197;
    const double C14888 = C9197 + C9198;
    const double C5727 = C5719 * C485;
    const double C5725 = C5719 * C486;
    const double C6039 = C5719 * C50869;
    const double C7327 = C5719 * C50869;
    const double C7951 = C5719 * C51079;
    const double C7947 = C5719 * C2226;
    const double C381 = C369 * C118;
    const double C575 = C563 * C489;
    const double C2235 = C563 * C2229;
    const double C5342 = C563 * C118;
    const double C5702 = C563 * C487;
    const double C5696 = C563 * C488;
    const double C6036 = C563 * C803;
    const double C6034 = C563 * C804;
    const double C7324 = C563 * C1770;
    const double C7322 = C563 * C1771;
    const double C1014 = C1008 * C804;
    const double C2115 = C1008 * C1771;
    const double C5503 = C1008 * C118;
    const double C6256 = C1008 * C803;
    const double C7790 = C1008 * C1770;
    const double C14207 = C8638 + C8637;
    const double C14203 = C8637 + C8638;
    const double C5519 = C5513 * C118;
    const double C6261 = C5513 * C803;
    const double C6254 = C5513 * C804;
    const double C7794 = C5513 * C1770;
    const double C7788 = C5513 * C1771;
    const double C14209 = C8642 + C8641;
    const double C14205 = C8641 + C8642;
    const double C5520 = C5514 * C118;
    const double C14894 = C9196 + C9195;
    const double C14887 = C9195 + C9196;
    const double C5726 = C5718 * C488;
    const double C5724 = C5718 * C489;
    const double C6038 = C5718 * C804;
    const double C7326 = C5718 * C1771;
    const double C7946 = C5718 * C2229;
    const double C47452 = C14225 + C14226;
    const double C47451 = C14223 + C14224;
    const double C7172 = C7166 + C7167;
    const double C15433 = C15425 + C15426;
    const double C22880 = C22861 + C22862;
    const double C23802 = C23791 + C23792;
    const double C36834 = C36818 + C36819;
    const double C37745 = C37734 + C37735;
    const double C48838 = C48831 + C48832;
    const double C16091 = C16083 + C16084;
    const double C23797 = C23781 + C23782;
    const double C37338 = C37328 + C37329;
    const double C38249 = C38238 + C38239;
    const double C6674 = C6670 + C6671;
    const double C16621 = C16613 + C16614;
    const double C22356 = C22331 + C22332;
    const double C23292 = C23285 + C23286;
    const double C38657 = C38646 + C38647;
    const double C48340 = C48333 + C48334;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C829 = C818 + C819;
    const double C1790 = C1781 + C1782;
    const double C693 = C377 + C378;
    const double C11064 = C5347 + C5346;
    const double C11678 = C6042 + C6041;
    const double C12908 = C7330 + C7329;
    const double C137 =
        4 * ((-2 * C49933) / C49743 - (C49880 * C49938) / C49743) +
        C49880 * ((-3 * C49938) / C49743 + C49880 * C49949);
    const double C323 =
        (-2 * C49933) / C49743 - (C49880 * C49938) / C49743 + C49949 * C50046;
    const double C325 = C49872 * ((-3 * C49938) / C49743 + C49880 * C49949);
    const double C515 = (-2 * C49933) / C49743 - (C49880 * C49938) / C49743 +
                        C49873 * (C49873 * C49949 - (C50386 * ce) / C49743) -
                        (C49873 * C50386 * ce) / C49743;
    const double C517 = C49873 * ((-3 * C49938) / C49743 + C49880 * C49949) -
                        ((3 * C50381 + C49880 * C50386) * ce) / C49743;
    const double C981 =
        C49873 * C49872 * C49949 - (C49872 * C50386 * ce) / C49743;
    const double C50118 = C50115 / C49809;
    const double C3694 =
        4 * ((-2 * C50043) / C49743 - (C49872 * C50051) / C49743) +
        C49872 * ((-3 * C50051) / C49743 + C49872 * C50145);
    const double C3847 = (-2 * C50043) / C49743 - (C49872 * C50051) / C49743 +
                         C49873 * (C49873 * C50145 - (C50518 * ce) / C49743) -
                         (C49873 * C50518 * ce) / C49743;
    const double C4341 = C49873 * ((-3 * C50051) / C49743 + C49872 * C50145) -
                         ((3 * C50470 + C49872 * C50518) * ce) / C49743;
    const double C50269 = C50266 - C49908;
    const double C165 = C50886 * C136;
    const double C558 = C50886 * C514;
    const double C823 = C50886 * C516;
    const double C50184 = C50182 / C49809;
    const double C40607 = C50886 * C7581;
    const double C50303 = C50300 - C49908;
    const double C50394 = C50392 + C50393;
    const double C1664 =
        (C49873 *
         (C49991 + C49872 * (C49872 * C50002 + C50033 * ae) + C50448 * ae)) /
        C49809;
    const double C1310 = C49872 * C50386 + C50448 * C50206;
    const double C3690 = 4 * (2 * C50442 + C49872 * C50477) +
                         C49872 * (3 * C50477 + C49872 * C50506);
    const double C3845 = 2 * C50442 + C49872 * C50477 + C50506 * C50206;
    const double C4339 = C49873 * (3 * C50477 + C49872 * C50506);
    const double C7580 = 4 * (2 * C50550 + C49873 * C50553) +
                         C49873 * (3 * C50553 + C49873 * C50596);
    const double C24194 = 4 * (2 * C50568 + C49873 * C50571) +
                          C49873 * (3 * C50571 + C49873 * C50638);
    const double C50608 = C50605 + C50606;
    const double C50650 = C50645 + C50646;
    const double C108 = (C51072 * C50747) / C49809 + (C51016 - C51055) / C49834;
    const double C109 =
        (C51073 * C50747) / C49809 + (2 * C50757 + C51072) / C49834;
    const double C110 = (C50747 * C50757) / C49813 + C51073 / C49834;
    const double C113 = (C51074 * C50768) / C49743 + (C51023 - C51058) / C49768;
    const double C114 =
        (C51075 * C50768) / C49743 + (2 * C50778 + C51074) / C49768;
    const double C115 = (C50768 * C50778) / C49747 + C51075 / C49768;
    const double C1188 =
        (C51076 * C50836) / C49743 + (C51031 - C51060) / C49768;
    const double C1189 =
        (C51077 * C50836) / C49743 + (2 * C50841 + C51076) / C49768;
    const double C1190 = (C50836 * C50841) / C49747 + C51077 / C49768;
    const double C39213 =
        (C51082 * C50961) / C49809 + (C51045 - C51069) / C49834;
    const double C39214 =
        (C51083 * C50961) / C49809 + (2 * C50966 + C51082) / C49834;
    const double C39215 = (C50961 * C50966) / C49813 + C51083 / C49834;
    const double C49784 = C49782 * ce;
    const double C24850 = C24823 + C24824;
    const double C24846 = C24815 + C24816;
    const double C24843 = C24809 + C24810;
    const double C25032 = C25011 + C25012;
    const double C25029 = C25005 + C25006;
    const double C25214 = C25193 + C25194;
    const double C25211 = C25187 + C25188;
    const double C25383 = C25373 + C25374;
    const double C31456 = C31443 + C31444;
    const double C31453 = C31437 + C31438;
    const double C31448 = C31427 + C31428;
    const double C31445 = C31421 + C31422;
    const double C31957 = C31947 + C31948;
    const double C49850 = C49848 * ae;
    const double C8258 = C8254 * C50805;
    const double C8964 = C8254 * C51032;
    const double C10226 = C8254 * C1768;
    const double C8257 = C8253 * C118;
    const double C8963 = C8253 * C803;
    const double C10225 = C8253 * C1770;
    const double C17425 = C17414 + C17415;
    const double C17424 = C17412 + C17413;
    const double C22337 = C17813 + C17812;
    const double C28047 = C17812 + C17813;
    const double C28050 = C17811 + C17810;
    const double C28046 = C17810 + C17811;
    const double C28049 = C17809 + C17808;
    const double C28045 = C17808 + C17809;
    const double C28701 = C18369 + C18368;
    const double C28700 = C18368 + C18369;
    const double C28702 = C18367 + C18366;
    const double C28699 = C18366 + C18367;
    const double C22364 = C22353 + C22354;
    const double C22363 = C22351 + C22352;
    const double C145 =
        4 * ((-2 * C49880 * C49892) / C49883 + C49880 * C49903) +
        C49880 * (3 * C49903 + C49880 * ((-2 * C49880 * C49898) / C49883 +
                                         C49880 * ((-(std::pow(C49887, 7) *
                                                      bs[7] * C49878 * C49889) /
                                                    C49743) /
                                                       C49809 -
                                                   C49898 / C49883)));
    const double C328 =
        (((-2 * C49880 * C49923) / C49743 -
          (C49880 * (C49890 * C49888 * C49921 * C49889 + C49923)) / C49743) *
         ae) /
            C49809 +
        C49872 * ((-2 * C49880 * C49892) / C49883 + C49880 * C49903);
    const double C334 = (-(C49892 * C49889) / C49743) / C49809 -
                        C49885 / C49883 - (ae * C49872 * C49938) / C49883 +
                        C49872 * (C49872 * C49903 - (ae * C49938) / C49883);
    const double C525 = (-(C49892 * C49889) / C49743) / C49809 -
                        C49885 / C49883 - (C49873 * C49981 * ce) / C49883 +
                        C49873 * (C49873 * C49903 - (C49981 * ce) / C49883);
    const double C526 =
        C49873 * ((-2 * C49880 * C49892) / C49883 + C49880 * C49903) -
        ((2 * C49975 + C49880 * C49981) * ce) / C49883;
    const double C986 =
        C49872 * (C49873 * C49903 - (C49981 * ce) / C49883) -
        (ae * (C49873 * C49938 +
               (C49929 * C49928 + C49882 * C49881 * C49889) * ce)) /
            C49883;
    const double C50064 = C50063 - C50060;
    const double C50094 = C50093 - C50091;
    const double C50147 = C49872 * C50144;
    const double C50244 = 2 * C50144;
    const double C50166 = C49873 * C50164;
    const double C50190 = C49872 * C50164;
    const double C50324 = 2 * C50164;
    const double C2661 =
        3 * ((-(ae * C50043) / C49743) / C49809 - C49885 / C49883 +
             C49872 * C50053) +
        (((-2 * C50043) / C49743 - (C49872 * C50051) / C49743) * ae) / C49809 +
        C49872 *
            (2 * C50053 - (ae * C50051) / C49883 +
             C49872 * ((-(ae * C49872 * C49936) / C49743) / C49809 - C49896 +
                       C49872 * ((-(C49872 * C49898) / C49743) / C49809 -
                                 (ae * C49936) / C49883)));
    const double C3425 =
        2 * (C49872 * C50086 -
             (ae * (C49873 * C49923 + C50020 * ce)) / C49883) -
        (ae * (C49873 * C50051 + (C50020 + C50011 * C50046) * ce)) / C49883 +
        C49872 *
            (C50086 - (ae * (C49873 * C49872 * C49936 + C50074 * ce)) / C49883 +
             C49872 * (C49872 * ((-(C49873 * C49898) / C49743) / C49809 -
                                 (C49979 * ce) / C49883) -
                       (ae * (C49873 * C49936 + C50011 * ce)) / C49883));
    const double C184 = C174 * C50805;
    const double C824 = C174 * C51032;
    const double C1786 = C174 * C1768;
    const double C5518 = C5512 * C50805;
    const double C6260 = C5512 * C51032;
    const double C6257 = C5512 * C50869;
    const double C7793 = C5512 * C1768;
    const double C7791 = C5512 * C50869;
    const double C14210 = C8644 + C8643;
    const double C14206 = C8643 + C8644;
    const double C22338 = C17815 + C17814;
    const double C28048 = C17814 + C17815;
    const double C48330 = C15435 + C15436;
    const double C23282 = C22882 + C22881;
    const double C50146 = C50143 - C49896;
    const double C185 = C175 * C118;
    const double C825 = C175 * C803;
    const double C1787 = C175 * C1770;
    const double C376 = C364 * C118;
    const double C1005 = C364 * C803;
    const double C2125 = C364 * C1770;
    const double C8256 = C8247 + C8248;
    const double C17427 = C17418 + C17419;
    const double C383 = C371 * C118;
    const double C8800 = C8445 + C8446;
    const double C17971 = C17616 + C17617;
    const double C579 = C567 * C489;
    const double C2241 = C567 * C2229;
    const double C5345 = C567 * C118;
    const double C6046 = C567 * C803;
    const double C6040 = C567 * C804;
    const double C7334 = C567 * C1770;
    const double C7328 = C567 * C1771;
    const double C11375 = C567 * C488;
    const double C581 = C569 * C488;
    const double C820 = C569 * C804;
    const double C1783 = C569 * C1771;
    const double C5348 = C569 * C118;
    const double C11681 = C569 * C803;
    const double C12911 = C569 * C1770;
    const double C1016 = C1010 * C804;
    const double C2119 = C1010 * C1771;
    const double C5876 = C1010 * C118;
    const double C11883 = C1010 * C803;
    const double C13357 = C1010 * C1770;
    const double C8965 = C8645 + C8646;
    const double C14619 = C8646 + C8645;
    const double C18136 = C17816 + C17817;
    const double C28439 = C17817 + C17816;
    const double C50165 = C50163 - C49896;
    const double C3695 =
        (4 * (2 * C50469 + C49872 * C50521 + C50470 * ae) +
         C49872 *
             (3 * C50521 +
              C49872 *
                  (2 * C50517 +
                   C49872 * (C49979 + C49872 * (C49872 * C49987 + C50013 * ae) +
                             C50154 * ae) +
                   C50158 * ae) +
              C50518 * ae) +
         (3 * C50470 + C49872 * C50518) * ae) /
        C49809;
    const double C3846 =
        (2 * C50469 + C49872 * C50521 + C50470 * ae +
         (2 * C50517 +
          C49872 * (C49979 + C49872 * (C49872 * C49987 + C50013 * ae) +
                    C50154 * ae) +
          C50158 * ae) *
             C50206) /
        C49809;
    const double C4340 =
        (C49873 *
         (3 * C50521 +
          C49872 *
              (2 * C50517 +
               C49872 * (C49979 + C49872 * (C49872 * C49987 + C50013 * ae) +
                         C50154 * ae) +
               C50158 * ae) +
          C50518 * ae)) /
        C49809;
    const double C4740 =
        (2 * C49873 * C50521 +
         C49873 * (C50521 + (C49979 + C49872 * (C49872 * C49987 + C50013 * ae) +
                             C50154 * ae) *
                                C50206)) /
        C49809;
    const double C360 = C50886 * C322;
    const double C2482 = C2446 * C322;
    const double C8804 = C50938 * C322;
    const double C17975 = C50938 * C322;
    const double C24834 = C24798 * C322;
    const double C695 = C50886 * C324;
    const double C8232 = C50938 * C324;
    const double C17403 = C50938 * C324;
    const double C1003 = C50886 * C980;
    const double C8970 = C50938 * C980;
    const double C18141 = C50938 * C980;
    const double C164 = C117 * C124;
    const double C359 = C117 * C305;
    const double C2481 = C2451 * C305;
    const double C8803 = C8203 * C305;
    const double C17974 = C17374 * C305;
    const double C24833 = C24803 * C305;
    const double C694 = C117 * C306;
    const double C8231 = C8203 * C306;
    const double C17402 = C17374 * C306;
    const double C557 = C117 * C497;
    const double C822 = C117 * C498;
    const double C1002 = C117 * C972;
    const double C8969 = C8203 * C972;
    const double C18140 = C17374 * C972;
    const double C3219 = C3209 + C3210;
    const double C9200 = C9189 + C9190;
    const double C11223 = C11219 + C11220;
    const double C18371 = C18360 + C18361;
    const double C25547 = C25537 + C25538;
    const double C5882 = C5878 + C5879;
    const double C8650 = C8631 + C8632;
    const double C17821 = C17802 + C17803;
    const double C6044 = C5722 * C804;
    const double C7332 = C5722 * C1771;
    const double C11377 = C5722 * C489;
    const double C13509 = C5722 * C2229;
    const double C50597 = C50595 + C50592;
    const double C2894 = C2881 + C2882;
    const double C5517 = C5510 + C5511;
    const double C14906 = C14897 + C14898;
    const double C22885 = C22871 + C22872;
    const double C25222 = C25209 + C25210;
    const double C2697 = C2681 + C2682;
    const double C25037 = C25021 + C25022;
    const double C2891 = C2875 + C2876;
    const double C5516 = C5508 + C5509;
    const double C14904 = C14891 + C14892;
    const double C22883 = C22867 + C22868;
    const double C25219 = C25203 + C25204;
    const double C3443 = C3433 + C3434;
    const double C13990 = C13983 + C13984;
    const double C25759 = C25749 + C25750;
    const double C27848 = C27841 + C27842;
    const double C50509 = C50508 + C50502;
    const double C6268 = C6258 + C6259;
    const double C14228 = C14213 + C14214;
    const double C22359 = C22339 + C22340;
    const double C5720 = C5704 + C5705;
    const double C50321 = C50164 - C50319;
    const double C50639 = C50637 + C50634;
    const double C24209 = C24201 + C24202;
    const double C40006 = C40002 + C40003;
    const double C49241 = C49233 + C49234;
    const double C23789 = C17374 * C3844;
    const double C32351 = C24803 * C3844;
    const double C37732 = C2451 * C3844;
    const double C48829 = C8203 * C3844;
    const double C32855 = C24803 * C4338;
    const double C38236 = C2451 * C4338;
    const double C40606 = C117 * C7579;
    const double C50305 = ae * C50302;
    const double C50643 = C49873 * C50302;
    const double C7582 =
        4 * ((-2 * C50544) / C49743 - (C49873 * C50588) / C49743 -
             (C50545 * ce) / C49743) +
        C49873 *
            ((-3 * C50588) / C49743 +
             C49873 * ((-2 * C50193) / C49743 - (C49873 * C50302) / C49743 -
                       (C50227 * ce) / C49743) -
             (C50587 * ce) / C49743) -
        ((3 * C50545 + C49873 * C50587) * ce) / C49743;
    const double C50612 = C49872 * C50611;
    const double C23277 =
        (3 * (C50521 + C50611 * C50206) +
         C49873 *
             (2 * C49873 * C50611 +
              C49873 *
                  (C50611 + (C49987 + C49872 * (C49872 * C49998 + C50028 * ae) +
                             C50285 * ae) *
                                C50206))) /
        C49809;
    const double C49918 = C49880 * C49917;
    const double C50067 = C49872 * C49917;
    const double C50096 = C49873 * C49917;
    const double C1206 =
        2 * (C49872 * C49903 - (ae * C49938) / C49883) -
        (ae * (C49946 * std::pow(C49872, 2) + C49938)) / C49883 +
        C49872 * (C49903 - (ae * C49872 * C49946) / C49883 +
                  C49872 * (C49872 * C49917 - (ae * C49946) / C49883));
    const double C1321 =
        C49872 * (C49903 - (C49873 * C49989 * ce) / C49883 +
                  C49873 * (C49873 * C49917 - (C49989 * ce) / C49883)) -
        (ae * (C49873 * (C49873 * C49946 + C50025 * ce) + C49938 +
               C49873 * C50025 * ce)) /
            C49883;
    const double C1668 =
        C49873 * C49903 - (C49981 * ce) / C49883 -
        (ae * (C49873 * C49872 * C49946 + C49872 * C50025 * ce)) / C49883 +
        C49872 * (C49872 * (C49873 * C49917 - (C49989 * ce) / C49883) -
                  (ae * (C49873 * C49946 + C50025 * ce)) / C49883);
    const double C1982 =
        2 * (C49873 * C49903 - (C49981 * ce) / C49883) -
        ((C49981 + C49989 * std::pow(C49873, 2)) * ce) / C49883 +
        C49873 * (C49903 - (C49873 * C49989 * ce) / C49883 +
                  C49873 * (C49873 * C49917 - (C49989 * ce) / C49883));
    const double C2857 =
        C49903 - (C49873 * C49989 * ce) / C49883 +
        C49873 * (C49873 * C49917 - (C49989 * ce) / C49883) -
        (ae * (C49873 * (C49873 * C49872 * C49960 + C50078 * ce) + C50066 +
               C49873 * C50078 * ce)) /
            C49883 +
        C49872 * (C49872 * (C49917 - (C49873 * C50000 * ce) / C49883 +
                            C49873 * (C49873 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883) -
                                      (C50000 * ce) / C49883)) -
                  (ae * (C49873 * (C49873 * C49960 + C50031 * ce) + C49946 +
                         C49873 * C50031 * ce)) /
                      C49883);
    const double C50122 = C50119 - C50108;
    const double C50185 = C50183 - C50176;
    const double C50270 = C49872 * C50267;
    const double C50304 = C49873 * C50301;
    const double C50313 = C49872 * C50301;
    const double C49964 = C49880 * C49963;
    const double C1197 =
        2 * C49872 * C49949 + C49872 * (C49949 + C49963 * C50046);
    const double C1318 =
        C49872 * C49949 +
        C49873 * (C49873 * C49872 * C49963 - (C50448 * ce) / C49743) -
        (C49873 * C50448 * ce) / C49743;
    const double C1665 = C49873 * (C49949 + C49963 * C50046) -
                         ((C50386 + C50033 * C50046) * ce) / C49743;
    const double C1979 =
        2 * (C49873 * C49949 - (C50386 * ce) / C49743) +
        C49873 * (C49949 + C49873 * (C49873 * C49963 - (C50033 * ce) / C49743) -
                  (C49873 * C50033 * ce) / C49743) -
        ((C50386 + C50033 * C50206) * ce) / C49743;
    const double C50123 = C50113 - C50120;
    const double C50271 = C49872 * C50268;
    const double C21594 =
        2 * (C49873 * C50145 - (C50518 * ce) / C49743) +
        C49873 * (C50145 + C49873 * (C49873 * C50268 - (C50299 * ce) / C49743) -
                  (C49873 * C50299 * ce) / C49743) -
        ((C50518 + C50299 * C50206) * ce) / C49743;
    const double C50004 = C49994 + C50003;
    const double C7583 = (4 * (2 * C50215 + C49873 * C50217) +
                          C49873 * (3 * C50217 + C49873 * C50242)) /
                         C49809;
    const double C50348 = C50346 + C50347;
    const double C192 = C188 * C50902;
    const double C11063 = C188 * C51045;
    const double C33867 = C188 * C33864;
    const double C832 = C828 - C816;
    const double C1791 = C1789 - C1779;
    const double C48329 = C15433 + C15434;
    const double C23281 = C22880 + C22879;
    const double C49231 = C16621 + C16622;
    const double C24199 = C22356 + C22355;
    const double C195 = C191 * C50902;
    const double C11066 = C191 * C51045;
    const double C33870 = C191 * C33864;
    const double C193 = C189 * C50902;
    const double C699 = C693 * C50902;
    const double C11526 = C693 * C51045;
    const double C34312 = C693 * C33864;
    const double C11069 = C11064 * C50966;
    const double C33868 = C11064 * C50966;
    const double C166 = C117 * C137;
    const double C361 = C117 * C323;
    const double C2487 = C2451 * C323;
    const double C8807 = C8203 * C323;
    const double C17978 = C17374 * C323;
    const double C24839 = C24803 * C323;
    const double C696 = C117 * C325;
    const double C8235 = C8203 * C325;
    const double C17406 = C17374 * C325;
    const double C559 = C117 * C515;
    const double C826 = C117 * C517;
    const double C1006 = C117 * C981;
    const double C8973 = C8203 * C981;
    const double C18144 = C17374 * C981;
    const double C50121 = C50118 - C50102;
    const double C23793 = C17374 * C3847;
    const double C32357 = C24803 * C3847;
    const double C37738 = C2451 * C3847;
    const double C48833 = C8203 * C3847;
    const double C32861 = C24803 * C4341;
    const double C38242 = C2451 * C4341;
    const double C50186 = C50184 - C50102;
    const double C125 = 5 * (3 * C50381 + C49880 * C50386) +
                        C49880 * (4 * C50386 + C49880 * C50394);
    const double C307 = 3 * C50381 + C49880 * C50386 + C50394 * C50046;
    const double C499 = 3 * C50381 + C49880 * C50386 + C50394 * C50206;
    const double C687 = C49872 * (4 * C50386 + C49880 * C50394);
    const double C805 = C49873 * (4 * C50386 + C49880 * C50394);
    const double C973 = C49873 * C49872 * C50394;
    const double C20894 = 5 * (3 * C50470 + C49872 * C50518) +
                          C49872 * (4 * C50518 + C49872 * C50608);
    const double C20996 = 3 * C50470 + C49872 * C50518 + C50608 * C50206;
    const double C21326 = C49873 * (4 * C50518 + C49872 * C50608);
    const double C40601 = 5 * (3 * C50545 + C49873 * C50587) +
                          C49873 * (4 * C50587 + C49873 * C50650);
    const double C49786 = C49784 / C49743;
    const double C49852 = C49850 / C49809;
    const double C8261 = C8257 + C8258;
    const double C8975 = C8963 + C8964;
    const double C10229 = C10225 + C10226;
    const double C17429 = C17425 * C50805;
    const double C18135 = C17425 * C51032;
    const double C19397 = C17425 * C1768;
    const double C17428 = C17424 * C118;
    const double C18134 = C17424 * C803;
    const double C19396 = C17424 * C1770;
    const double C167 = C50886 * C145;
    const double C340 = C50886 * C328;
    const double C2486 = C2445 * C328;
    const double C8222 = C50938 * C328;
    const double C8806 = C51044 * C328;
    const double C17393 = C50938 * C328;
    const double C17977 = C17368 * C328;
    const double C24838 = C51081 * C328;
    const double C358 = C50886 * C334;
    const double C2466 = C2446 * C334;
    const double C3050 = C2445 * C334;
    const double C8440 = C51044 * C334;
    const double C8412 = C50938 * C334;
    const double C17611 = C17368 * C334;
    const double C17583 = C50938 * C334;
    const double C24818 = C24798 * C334;
    const double C25378 = C51081 * C334;
    const double C550 = C50886 * C525;
    const double C8634 = C51044 * C525;
    const double C17805 = C17368 * C525;
    const double C556 = C50886 * C526;
    const double C8972 = C51044 * C526;
    const double C18143 = C17368 * C526;
    const double C1001 = C50886 * C986;
    const double C3214 = C2445 * C986;
    const double C8626 = C50938 * C986;
    const double C9192 = C51044 * C986;
    const double C17797 = C50938 * C986;
    const double C18363 = C17368 * C986;
    const double C25542 = C51081 * C986;
    const double C2662 =
        3 * ((-(ae * C50055) / C49743) / C49809 - C50017 / C49883 +
             C49872 * C50064) +
        (((-2 * C50055) / C49743 - (C49872 * C50061) / C49743) * ae) / C49809 +
        C49872 * (2 * C50064 - (ae * C50061) / C49883 +
                  C49872 * ((-(ae * C49872 * C49953) / C49743) / C49809 -
                            C49905 / C49883 +
                            C49872 * ((-(C49872 * C49880 * C49912) / C49743) /
                                          C49809 -
                                      (ae * C49953) / C49883)));
    const double C3426 =
        2 * (C49872 * C50094 -
             (ae * (C49873 * C49940 + C50022 * ce)) / C49883) -
        (ae * (C49873 * C50061 + (C50022 + C50027 * C50046) * ce)) / C49883 +
        C49872 *
            (C50094 - (ae * (C49873 * C49872 * C49953 + C50076 * ce)) / C49883 +
             C49872 *
                 (C49872 * ((-(C49873 * C49880 * C49912) / C49743) / C49809 -
                            (C49995 * ce) / C49883) -
                  (ae * (C49873 * C49953 + C50027 * ce)) / C49883));
    const double C50258 = C50244 - C50251;
    const double C50196 = C50190 - C50195;
    const double C50328 = C50324 - C50327;
    const double C16088 = C50938 * C3425;
    const double C23786 = C50938 * C3425;
    const double C31954 = C24798 * C3425;
    const double C32864 = C51081 * C3425;
    const double C37335 = C2446 * C3425;
    const double C38245 = C2445 * C3425;
    const double C50148 = C50146 + C50147;
    const double C190 = C184 + C185;
    const double C8260 = C8256 * C118;
    const double C17431 = C17427 * C118;
    const double C8810 = C8800 * C118;
    const double C17981 = C17971 * C118;
    const double C11683 = C11678 - C6040;
    const double C12913 = C12908 - C7328;
    const double C833 = C829 - C820;
    const double C1792 = C1790 - C1783;
    const double C8976 = C8965 * C804;
    const double C10227 = C8965 * C1771;
    const double C18147 = C18136 * C804;
    const double C19398 = C18136 * C1771;
    const double C50167 = C50165 + C50166;
    const double C23790 = C50938 * C3846;
    const double C32352 = C24798 * C3846;
    const double C37733 = C2446 * C3846;
    const double C48830 = C50938 * C3846;
    const double C32856 = C24798 * C4340;
    const double C38237 = C2446 * C4340;
    const double C23284 = C50938 * C4740;
    const double C33264 = C24798 * C4740;
    const double C38645 = C2446 * C4740;
    const double C40335 = C50886 * C4740;
    const double C48332 = C50938 * C4740;
    const double C176 = C164 + C165;
    const double C373 = C359 + C360;
    const double C2503 = C2481 + C2482;
    const double C8812 = C8803 + C8804;
    const double C17983 = C17974 + C17975;
    const double C24855 = C24833 + C24834;
    const double C700 = C694 + C695;
    const double C8250 = C8231 + C8232;
    const double C17421 = C17402 + C17403;
    const double C571 = C557 + C558;
    const double C830 = C822 + C823;
    const double C1012 = C1002 + C1003;
    const double C8979 = C8969 + C8970;
    const double C18150 = C18140 + C18141;
    const double C11225 = C11223 * C118;
    const double C5884 = C5882 * C118;
    const double C11881 = C5882 * C804;
    const double C13355 = C5882 * C1771;
    const double C7584 =
        4 * ((-2 * C50552) / C49743 - (C49873 * C50597) / C49743 -
             (C50553 * ce) / C49743) +
        C49873 *
            ((-3 * C50597) / C49743 +
             C49873 * ((-2 * C50201) / C49743 -
                       (C49873 * (C49873 * (C49873 * C50105 + C50172 * ce) +
                                  C49953 + C49873 * C50172 * ce)) /
                           C49743 -
                       (C50233 * ce) / C49743) -
             (C50596 * ce) / C49743) -
        ((3 * C50553 + C49873 * C50596) * ce) / C49743;
    const double C5523 = C5517 * C50805;
    const double C5522 = C5516 * C118;
    const double C3693 =
        (4 * (2 * C50476 + C49872 * C50509 + C50477 * ae) +
         C49872 *
             (3 * C50509 +
              C49872 *
                  (2 * C50505 +
                   C49872 * (C49995 + C49872 * (C49872 * C50173 + C50172 * ae) +
                             C50178 * ae) +
                   C50181 * ae) +
              C50506 * ae) +
         (3 * C50477 + C49872 * C50506) * ae) /
        C49809;
    const double C3848 =
        (2 * C50476 + C49872 * C50509 + C50477 * ae +
         (2 * C50505 +
          C49872 * (C49995 + C49872 * (C49872 * C50173 + C50172 * ae) +
                    C50178 * ae) +
          C50181 * ae) *
             C50206) /
        C49809;
    const double C4342 =
        (C49873 *
         (3 * C50509 +
          C49872 *
              (2 * C50505 +
               C49872 * (C49995 + C49872 * (C49872 * C50173 + C50172 * ae) +
                         C50178 * ae) +
               C50181 * ae) +
          C50506 * ae)) /
        C49809;
    const double C4744 =
        (2 * C49873 * C50509 +
         C49873 * (C50509 + (C49995 + C49872 * (C49872 * C50173 + C50172 * ae) +
                             C50178 * ae) *
                                C50206)) /
        C49809;
    const double C6270 = C6268 * C804;
    const double C7792 = C6268 * C1771;
    const double C5728 = C5720 * C489;
    const double C7952 = C5720 * C2229;
    const double C24196 =
        4 * ((-2 * C50570) / C49743 - (C49873 * C50639) / C49743 -
             (C50571 * ce) / C49743) +
        C49873 *
            ((-3 * C50639) / C49743 +
             C49873 *
                 ((-2 * C50315) / C49743 -
                  (C49873 * (C49873 * (C49873 * C49872 * C49957 + C50285 * ce) +
                             C50246 + C49873 * C50285 * ce)) /
                      C49743 -
                  (C50335 * ce) / C49743) -
             (C50638 * ce) / C49743) -
        ((3 * C50571 + C49873 * C50638) * ce) / C49743;
    const double C40610 = C40606 + C40607;
    const double C50307 = C50305 / C49883;
    const double C50648 = C50643 / C49743;
    const double C40608 = C117 * C7582;
    const double C50613 = C50600 + C50612;
    const double C49919 = C49911 + C49918;
    const double C50072 = C50067 - C50070;
    const double C50099 = C50096 - C50098;
    const double C3052 = C2446 * C1206;
    const double C8442 = C50938 * C1206;
    const double C17613 = C50938 * C1206;
    const double C25380 = C24798 * C1206;
    const double C5881 = C50886 * C1321;
    const double C8636 = C50938 * C1321;
    const double C17807 = C50938 * C1321;
    const double C3216 = C2446 * C1668;
    const double C9194 = C50938 * C1668;
    const double C11222 = C50886 * C1668;
    const double C18365 = C50938 * C1668;
    const double C25544 = C24798 * C1668;
    const double C5711 = C50886 * C1982;
    const double C50124 = C49872 * C50122;
    const double C50187 = C49873 * C50185;
    const double C50198 = C49872 * C50185;
    const double C50272 = C50269 + C50270;
    const double C50306 = C50303 + C50304;
    const double C50318 = C50313 - C50316;
    const double C49965 = C49955 + C49964;
    const double C3692 =
        4 * ((-2 * C50055) / C49743 - (C49872 * C50061) / C49743) +
        C49872 * ((-3 * C50061) / C49743 + C49872 * C50123);
    const double C3849 = (-2 * C50055) / C49743 - (C49872 * C50061) / C49743 +
                         C49873 * (C49873 * C50123 - (C50506 * ce) / C49743) -
                         (C49873 * C50506 * ce) / C49743;
    const double C4343 = C49873 * ((-3 * C50061) / C49743 + C49872 * C50123) -
                         ((3 * C50477 + C49872 * C50506) * ce) / C49743;
    const double C50273 = C50255 + C50271;
    const double C139 = (5 * (3 * C49981 + C49880 * C49991) +
                         C49880 * (4 * C49991 + C49880 * C50004)) /
                        C49809;
    const double C327 =
        (3 * C49981 + C49880 * C49991 +
         C49872 * (C49872 * C50004 + C50394 * ae) + C49872 * C50394 * ae) /
        C49809;
    const double C518 =
        (3 * C49981 + C49880 * C49991 + C50004 * C50206) / C49809;
    const double C689 = (C49872 * (4 * C49991 + C49880 * C50004) +
                         (4 * C50386 + C49880 * C50394) * ae) /
                        C49809;
    const double C806 = (C49873 * (4 * C49991 + C49880 * C50004)) / C49809;
    const double C982 = (C49873 * (C49872 * C50004 + C50394 * ae)) / C49809;
    const double C40602 = (5 * (3 * C50213 + C49873 * C50238) +
                           C49873 * (4 * C50238 + C49873 * C50348)) /
                          C49809;
    const double C836 = C832 - C817;
    const double C1793 = C1791 - C1780;
    const double C11071 = C11063 + C11069;
    const double C33871 = C33867 + C33868;
    const double C49787 = C49786 - C49771;
    const double C49853 = C49852 - C49837;
    const double C8263 = C8261 * C50902;
    const double C17432 = C17428 + C17429;
    const double C18146 = C18134 + C18135;
    const double C19400 = C19396 + C19397;
    const double C177 = C166 + C167;
    const double C363 = C339 + C340;
    const double C2505 = C2485 + C2486;
    const double C8245 = C8221 + C8222;
    const double C8813 = C8805 + C8806;
    const double C17416 = C17392 + C17393;
    const double C17984 = C17976 + C17977;
    const double C372 = C357 + C358;
    const double C2495 = C2465 + C2466;
    const double C3057 = C3049 + C3050;
    const double C8457 = C8439 + C8440;
    const double C8443 = C8411 + C8412;
    const double C17628 = C17610 + C17611;
    const double C17614 = C17582 + C17583;
    const double C24847 = C24817 + C24818;
    const double C568 = C549 + C550;
    const double C8651 = C8633 + C8634;
    const double C17822 = C17804 + C17805;
    const double C570 = C555 + C556;
    const double C8980 = C8971 + C8972;
    const double C18151 = C18142 + C18143;
    const double C1011 = C1000 + C1001;
    const double C3221 = C3213 + C3214;
    const double C8647 = C8625 + C8626;
    const double C9201 = C9191 + C9192;
    const double C17818 = C17796 + C17797;
    const double C18372 = C18362 + C18363;
    const double C2688 = C2446 * C2662;
    const double C25028 = C24798 * C2662;
    const double C3440 = C2446 * C3426;
    const double C13988 = C50938 * C3426;
    const double C25756 = C24798 * C3426;
    const double C27846 = C50938 * C3426;
    const double C4344 =
        3 * (C50086 - (ae * (C49873 * C50127 + C50074 * ce)) / C49883 +
             C49872 * C50196) +
        ((C49873 * C50145 - ((2 * C50074 + C49872 * C50158) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (2 * C50196 - (ae * (C49873 * C50135 + C50158 * ce)) / C49883 +
             C49872 *
                 (C50164 -
                  (ae * (C49873 * C49872 * C49943 + C50154 * ce)) / C49883 +
                  C49872 * (C49872 * ((-(C49873 * C49912) / C49743) / C49809 -
                                      (C49987 * ce) / C49883) -
                            (ae * (C49873 * C49943 + C50013 * ce)) / C49883)));
    const double C16093 = C16087 + C16088;
    const double C23799 = C23785 + C23786;
    const double C31960 = C31953 + C31954;
    const double C37341 = C37334 + C37335;
    const double C38252 = C38244 + C38245;
    const double C3697 =
        4 * (2 * C50053 - (ae * C50051) / C49883 + C49872 * C50148) +
        (((-3 * C50051) / C49743 + C49872 * C50145) * ae) / C49809 +
        C49872 *
            (3 * C50148 + (C50145 * ae) / C49809 +
             C49872 *
                 (2 * C50144 - (ae * C50135) / C49883 +
                  C49872 *
                      ((-(ae * C49872 * C49943) / C49743) / C49809 - C49908 +
                       C49872 * ((-(C49872 * C49912) / C49743) / C49809 -
                                 (ae * C49943) / C49883))));
    const double C194 = C190 * C50902;
    const double C8982 = C8975 - C8976;
    const double C10230 = C10229 - C10227;
    const double C3850 =
        2 * (C49872 * C50167 - (ae * (C49873 * (C49873 * C49936 + C50011 * ce) +
                                      C49923 + C49873 * C50011 * ce)) /
                                   C49883) -
        (ae * (C49873 * (C49873 * C50135 + C50158 * ce) + C50051 +
               C49873 * C50158 * ce)) /
            C49883 +
        C49872 *
            (C50167 -
             (ae * (C49873 * (C49873 * C49872 * C49943 + C50154 * ce) + C50127 +
                    C49873 * C50154 * ce)) /
                 C49883 +
             C49872 *
                 (C49872 *
                      ((-(C49873 * C49987 * ce) / C49743) / C49809 - C49908 +
                       C49873 * ((-(C49873 * C49912) / C49743) / C49809 -
                                 (C49987 * ce) / C49883)) -
                  (ae * (C49873 * (C49873 * C49943 + C50013 * ce) + C49936 +
                         C49873 * C50013 * ce)) /
                      C49883));
    const double C4748 =
        2 * C50086 - ((C49974 + C49979 * C50206) * ce) / C49883 +
        C49873 * C50167 +
        (((-2 * (C49873 * C50127 + C50074 * ce)) / C49743 -
          (C49873 * (C49873 * (C49873 * C49872 * C49943 + C50154 * ce) +
                     C50127 + C49873 * C50154 * ce)) /
              C49743 -
          ((C50074 + C50154 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            ((((-2 * C50193) / C49743 -
               (C49873 * (C49873 * (C49873 * C49943 + C50013 * ce) + C49936 +
                          C49873 * C50013 * ce)) /
                   C49743 -
               ((C50011 + C50013 * C50206) * ce) / C49743) *
              ae) /
                 C49809 +
             C49872 *
                 (2 * C50164 - ((C49979 + C49987 * C50206) * ce) / C49883 +
                  C49873 *
                      ((-(C49873 * C49987 * ce) / C49743) / C49809 - C49908 +
                       C49873 * ((-(C49873 * C49912) / C49743) / C49809 -
                                 (C49987 * ce) / C49883))));
    const double C4749 =
        (((-2 * (C49873 * C49923 + C50020 * ce)) / C49743 -
          (C49873 * (C49873 * C50193 + C49923 + C49873 * C50011 * ce)) /
              C49743 -
          ((C50020 + C50011 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 * (2 * C50086 - ((C49974 + C49979 * C50206) * ce) / C49883 +
                  C49873 * C50167);
    const double C5678 =
        3 * ((-(C50211 * ce) / C49743) / C49809 - C49885 / C49883 +
             C49873 * C50086) -
        ((2 * C50211 + C49873 * C50213) * ce) / C49883 +
        C49873 * (2 * C50086 - (C50213 * ce) / C49883 + C49873 * C50167);
    const double C6667 =
        (((-3 * (C49873 * C50193 + C49923 + C50224 * ce)) / C49743 +
          C49873 * ((-2 * C50193) / C49743 -
                    (C49873 * (C49873 * (C49873 * C49943 + C50013 * ce) +
                               C49936 + C49873 * C50013 * ce)) /
                        C49743 -
                    (C50227 * ce) / C49743) -
          ((2 * C50224 + C49873 * C50227) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (3 * C50167 - ((2 * C50150 + C49873 * C50228) * ce) / C49883 +
             C49873 *
                 (2 * C50164 - (C50228 * ce) / C49883 +
                  C49873 *
                      ((-(C49873 * C49987 * ce) / C49743) / C49809 - C49908 +
                       C49873 * ((-(C49873 * C49912) / C49743) / C49809 -
                                 (C49987 * ce) / C49883))));
    const double C7585 =
        4 * (2 * C50086 - (C50213 * ce) / C49883 + C49873 * C50167) -
        ((3 * C50213 + C49873 * C50238) * ce) / C49883 +
        C49873 *
            (3 * C50167 - (C50238 * ce) / C49883 +
             C49873 *
                 (2 * C50164 - (C50228 * ce) / C49883 +
                  C49873 *
                      ((-(C49873 * C49987 * ce) / C49743) / C49809 - C49908 +
                       C49873 * ((-(C49873 * C49912) / C49743) / C49809 -
                                 (C49987 * ce) / C49883))));
    const double C23801 = C23789 + C23790;
    const double C32363 = C32351 + C32352;
    const double C37744 = C37732 + C37733;
    const double C48837 = C48829 + C48830;
    const double C32867 = C32855 + C32856;
    const double C38248 = C38236 + C38237;
    const double C23291 = C23283 + C23284;
    const double C33275 = C33263 + C33264;
    const double C38656 = C38644 + C38645;
    const double C40338 = C40334 + C40335;
    const double C48339 = C48331 + C48332;
    const double C186 = C176 * C118;
    const double C385 = C373 * C118;
    const double C702 = C700 * C118;
    const double C583 = C571 * C489;
    const double C2247 = C571 * C2229;
    const double C5350 = C571 * C118;
    const double C11679 = C571 * C804;
    const double C12909 = C571 * C1771;
    const double C834 = C830 * C804;
    const double C1785 = C830 * C1771;
    const double C11067 = C830 * C118;
    const double C1018 = C1012 * C804;
    const double C2123 = C1012 * C1771;
    const double C11527 = C1012 * C118;
    const double C50651 = C50647 - C50648;
    const double C50614 = C50613 + C50604;
    const double C146 =
        5 * (3 * C49903 + C49880 * C49919) +
        C49880 * (4 * C49919 +
                  C49880 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))));
    const double C335 = (-2 * C49880 * C49892) / C49883 + C49880 * C49903 +
                        (C49872 * C49949 * ae) / C49809 +
                        C49872 * ((C49949 * ae) / C49809 + C49872 * C49919);
    const double C336 =
        (((-3 * C49938) / C49743 + C49880 * C49949) * ae) / C49809 +
        C49872 * (3 * C49903 + C49880 * C49919);
    const double C527 = (-2 * C49880 * C49892) / C49883 + C49880 * C49903 -
                        (C49873 * C49991 * ce) / C49883 +
                        C49873 * (C49873 * C49919 - (C49991 * ce) / C49883);
    const double C528 = C49873 * (3 * C49903 + C49880 * C49919) -
                        ((3 * C49981 + C49880 * C49991) * ce) / C49883;
    const double C529 =
        3 * C49903 + C49880 * C49919 - (C49873 * C50004 * ce) / C49883 +
        C49873 * (C49873 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))) -
                  (C50004 * ce) / C49883);
    const double C808 =
        C49873 * (4 * C49919 +
                  C49880 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883)))) -
        ((4 * C49991 + C49880 * C50004) * ce) / C49883;
    const double C987 =
        ((C49873 * C49949 - ((2 * C49880 * C50011 +
                              C49880 * (C50011 + C49888 * C49890 * C49889)) *
                             ce) /
                                C49743) *
         ae) /
            C49809 +
        C49872 * (C49873 * C49919 - (C49991 * ce) / C49883);
    const double C1205 =
        2 * ((C49949 * ae) / C49809 + C49872 * C49919) +
        ((C49949 + C49963 * std::pow(C49872, 2)) * ae) / C49809 +
        C49872 * (C49919 + (C49872 * C49963 * ae) / C49809 +
                  C49872 * ((C49963 * ae) / C49809 +
                            C49872 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))));
    const double C1322 =
        ((C49949 + C49873 * (C49873 * C49963 - (C50033 * ce) / C49743) -
          (C49873 * C50033 * ce) / C49743) *
         ae) /
            C49809 +
        C49872 * (C49919 - (C49873 * C50002 * ce) / C49883 +
                  C49873 * (C49873 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883)) -
                            (C50002 * ce) / C49883));
    const double C1669 =
        C49873 * C49919 - (C49991 * ce) / C49883 +
        ((C49873 * C49872 * C49963 - (C49872 * C50033 * ce) / C49743) * ae) /
            C49809 +
        C49872 * (((C49873 * C49963 - (C50033 * ce) / C49743) * ae) / C49809 +
                  C49872 * (C49873 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883)) -
                            (C50002 * ce) / C49883));
    const double C1983 =
        2 * (C49873 * C49919 - (C49991 * ce) / C49883) -
        ((C49991 + C50002 * std::pow(C49873, 2)) * ce) / C49883 +
        C49873 * (C49919 - (C49873 * C50002 * ce) / C49883 +
                  C49873 * (C49873 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883)) -
                            (C50002 * ce) / C49883));
    const double C2663 =
        3 * (C49903 - (ae * C50066) / C49883 + C49872 * C50072) +
        (((-2 * C50066) / C49743 - (C49872 * C50071) / C49743) * ae) / C49809 +
        C49872 * (2 * C50072 - (ae * C50071) / C49883 +
                  C49872 * (C49917 - (ae * C49872 * C49960) / C49883 +
                            C49872 * (C49872 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883) -
                                      (ae * C49960) / C49883)));
    const double C3427 =
        2 * (C49872 * C50099 -
             (ae * (C49873 * C49946 + C50025 * ce)) / C49883) -
        (ae * (C49873 * C50071 + (C50025 + C50031 * C50046) * ce)) / C49883 +
        C49872 *
            (C50099 - (ae * (C49873 * C49872 * C49960 + C50078 * ce)) / C49883 +
             C49872 * (C49872 * (C49873 * ((-(std::pow(C49876, 8) * bs[8] *
                                              C49878 * C49889) /
                                            C49743) /
                                               C49809 -
                                           C49912 / C49883) -
                                 (C50000 * ce) / C49883) -
                       (ae * (C49873 * C49960 + C50031 * ce)) / C49883));
    const double C5680 =
        3 * (C49903 - (C50219 * ce) / C49883 + C49873 * C50099) -
        ((2 * C50219 + C49873 * C50221) * ce) / C49883 +
        C49873 * (2 * C50099 - (C50221 * ce) / C49883 +
                  C49873 * (C49917 - (C49873 * C50000 * ce) / C49883 +
                            C49873 * (C49873 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883) -
                                      (C50000 * ce) / C49883)));
    const double C6244 =
        (((-2 * (C49873 * C49946 + C50025 * ce)) / C49743 -
          (C49873 * (C49873 * (C49873 * C49960 + C50031 * ce) + C49946 +
                     C49873 * C50031 * ce)) /
              C49743 -
          ((C50025 + C50031 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 * (2 * C50099 - (C50221 * ce) / C49883 +
                  C49873 * (C49917 - (C49873 * C50000 * ce) / C49883 +
                            C49873 * (C49873 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883) -
                                      (C50000 * ce) / C49883)));
    const double C3058 = C3051 + C3052;
    const double C8458 = C8441 + C8442;
    const double C17629 = C17612 + C17613;
    const double C25386 = C25379 + C25380;
    const double C5883 = C5880 + C5881;
    const double C8652 = C8635 + C8636;
    const double C17823 = C17806 + C17807;
    const double C3222 = C3215 + C3216;
    const double C9202 = C9193 + C9194;
    const double C11224 = C11221 + C11222;
    const double C18373 = C18364 + C18365;
    const double C25550 = C25543 + C25544;
    const double C5723 = C5710 + C5711;
    const double C50125 = C50121 + C50124;
    const double C50188 = C50186 + C50187;
    const double C50204 = C50198 - C50203;
    const double C50274 = C49872 * C50272;
    const double C50308 = C49872 * C50306;
    const double C50326 = C49873 * C50306;
    const double C50320 = C49872 * C50318;
    const double C337 =
        3 * C49903 + C49880 * C49919 + (C49872 * C49965 * ae) / C49809 +
        C49872 * ((C49965 * ae) / C49809 +
                  C49872 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))));
    const double C690 =
        ((4 * C49949 + C49880 * C49965) * ae) / C49809 +
        C49872 * (4 * C49919 +
                  C49880 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))));
    const double C988 =
        ((C49873 * C49965 -
          ((3 * (C50011 + C50013 * C49889) +
            C49880 * (2 * C49880 * C50013 +
                      C49880 * (C50013 + C49895 * C49894 * C49889))) *
           ce) /
              C49743) *
         ae) /
            C49809 +
        C49872 * (C49873 * (3 * C49917 +
                            C49880 * ((-2 * C49880 * C49912) / C49883 +
                                      C49880 * ((-(std::pow(C49876, 8) * bs[8] *
                                                   C49878 * C49889) /
                                                 C49743) /
                                                    C49809 -
                                                C49912 / C49883))) -
                  (C50004 * ce) / C49883);
    const double C138 = 5 * ((-3 * C49938) / C49743 + C49880 * C49949) +
                        C49880 * (4 * C49949 + C49880 * C49965);
    const double C326 =
        (-3 * C49938) / C49743 + C49880 * C49949 + C49965 * C50046;
    const double C519 = (-3 * C49938) / C49743 + C49880 * C49949 +
                        C49873 * (C49873 * C49965 - (C50394 * ce) / C49743) -
                        (C49873 * C50394 * ce) / C49743;
    const double C688 = C49872 * (4 * C49949 + C49880 * C49965);
    const double C807 = C49873 * (4 * C49949 + C49880 * C49965) -
                        ((4 * C50386 + C49880 * C50394) * ce) / C49743;
    const double C983 =
        C49873 * C49872 * C49965 - (C49872 * C50394 * ce) / C49743;
    const double C20895 = 5 * ((-3 * C50051) / C49743 + C49872 * C50145) +
                          C49872 * (4 * C50145 + C49872 * C50273);
    const double C20998 = (-3 * C50051) / C49743 + C49872 * C50145 +
                          C49873 * (C49873 * C50273 - (C50608 * ce) / C49743) -
                          (C49873 * C50608 * ce) / C49743;
    const double C21328 = C49873 * (4 * C50145 + C49872 * C50273) -
                          ((4 * C50518 + C49872 * C50608) * ce) / C49743;
    const double C838 = C836 * C50902;
    const double C11677 = C836 * C51045;
    const double C34460 = C836 * C33864;
    const double C1795 = C1793 * C50902;
    const double C12907 = C1793 * C51045;
    const double C35679 = C1793 * C33864;
    const double C1964 =
        ((((0 - (C49741 * C49767) / C49743) * ce) / C49743 - (0 * de) / C49747 +
          C49742 / C49743) /
             C49768 -
         ((C49741 * C49785 + 0) * de) / C49743) /
            C49768 +
        ((C49741 * (C49785 / C49768 -
                    ((C49741 * C49787 + C51032) * de) / C49743 + C49780) +
          C51078) *
         ce) /
            C49743 +
        C49787 / C49768 - ((C49741 * C49780 + C50869) * de) / C49743;
    const double C1965 =
        (C49785 / C49768 - ((C49741 * C49787 + C51032) * de) / C49743 +
         C49780) /
            C49768 +
        ((C49741 *
              (C49787 / C49768 - ((C49741 * C49780 + C50869) * de) / C49743) +
          C51079) *
         ce) /
            C49743 +
        2 * (C49780 / C49768 - (0 * de) / C49743);
    const double C1966 =
        (C49787 / C49768 - ((C49741 * C49780 + C50869) * de) / C49743) /
            C49768 +
        ((C49741 * (C49780 / C49768 - (0 * de) / C49743) + C2226) * ce) /
            C49743;
    const double C2227 =
        C49785 / C49768 - ((C49741 * C49787 + C51032) * de) / C49743 + C49780;
    const double C2228 =
        C49787 / C49768 - ((C49741 * C49780 + C50869) * de) / C49743;
    const double C20204 =
        ((((0 - (C49807 * C49833) / C49809) * ae) / C49809 - (0 * be) / C49813 +
          C49808 / C49809) /
             C49834 -
         ((C49807 * C49851 + 0) * be) / C49809) /
            C49834 +
        ((C49807 * (C49851 / C49834 -
                    ((C49807 * C49853 + C51044) * be) / C49809 + C49846) +
          C51080) *
         ae) /
            C49809 +
        C49853 / C49834 - ((C49807 * C49846 + C50938) * be) / C49809;
    const double C20205 =
        (C49851 / C49834 - ((C49807 * C49853 + C51044) * be) / C49809 +
         C49846) /
            C49834 +
        ((C49807 *
              (C49853 / C49834 - ((C49807 * C49846 + C50938) * be) / C49809) +
          C51081) *
         ae) /
            C49809 +
        2 * (C49846 / C49834 - (0 * be) / C49809);
    const double C20206 =
        (C49853 / C49834 - ((C49807 * C49846 + C50938) * be) / C49809) /
            C49834 +
        ((C49807 * (C49846 / C49834 - (0 * be) / C49809) + C24798) * ae) /
            C49809;
    const double C24801 =
        C49851 / C49834 - ((C49807 * C49853 + C51044) * be) / C49809 + C49846;
    const double C24802 =
        C49853 / C49834 - ((C49807 * C49846 + C50938) * be) / C49809;
    const double C17434 = C17432 * C50902;
    const double C18153 = C18146 - C18147;
    const double C19401 = C19400 - C19398;
    const double C187 = C177 * C50805;
    const double C375 = C363 * C50805;
    const double C1004 = C363 * C51032;
    const double C2124 = C363 * C1768;
    const double C8255 = C8245 + C8246;
    const double C17426 = C17416 + C17417;
    const double C384 = C372 * C50805;
    const double C8799 = C8443 + C8444;
    const double C17970 = C17614 + C17615;
    const double C580 = C568 * C486;
    const double C2242 = C568 * C2226;
    const double C5344 = C568 * C50805;
    const double C6045 = C568 * C51032;
    const double C6043 = C568 * C50869;
    const double C7333 = C568 * C1768;
    const double C7331 = C568 * C50869;
    const double C11376 = C568 * C485;
    const double C13508 = C568 * C51079;
    const double C582 = C570 * C485;
    const double C821 = C570 * C50869;
    const double C1784 = C570 * C50869;
    const double C2246 = C570 * C51079;
    const double C5349 = C570 * C50805;
    const double C11680 = C570 * C51032;
    const double C12910 = C570 * C1768;
    const double C1017 = C1011 * C50869;
    const double C2122 = C1011 * C50869;
    const double C5877 = C1011 * C50805;
    const double C11882 = C1011 * C51032;
    const double C13356 = C1011 * C1768;
    const double C8966 = C8647 + C8648;
    const double C14620 = C8648 + C8647;
    const double C18137 = C17818 + C17819;
    const double C28440 = C17819 + C17818;
    const double C2700 = C2687 + C2688;
    const double C25040 = C25027 + C25028;
    const double C3446 = C3439 + C3440;
    const double C13992 = C13987 + C13988;
    const double C25762 = C25755 + C25756;
    const double C27850 = C27845 + C27846;
    const double C32862 = C24798 * C4344;
    const double C38243 = C2446 * C4344;
    const double C23794 = C50938 * C3850;
    const double C32358 = C24798 * C3850;
    const double C37739 = C2446 * C3850;
    const double C48834 = C50938 * C3850;
    const double C23288 = C50938 * C4748;
    const double C33270 = C24798 * C4748;
    const double C38651 = C2446 * C4748;
    const double C40337 = C50886 * C4748;
    const double C48336 = C50938 * C4748;
    const double C6673 = C50886 * C4749;
    const double C16618 = C50938 * C4749;
    const double C22336 = C50938 * C4749;
    const double C23290 = C17368 * C4749;
    const double C33272 = C51081 * C4749;
    const double C38653 = C2445 * C4749;
    const double C48338 = C51044 * C4749;
    const double C7591 = C50886 * C5678;
    const double C24208 = C17368 * C5678;
    const double C49240 = C51044 * C5678;
    const double C24206 = C50938 * C6667;
    const double C40005 = C50886 * C6667;
    const double C49238 = C50938 * C6667;
    const double C40609 = C50886 * C7585;
    const double C50652 = C50651 - C50649;
    const double C20896 =
        (5 * (3 * C50521 + C49872 * C50614 + C50518 * ae) +
         C49872 * (4 * C50614 +
                   C49872 * (3 * C50611 +
                             C49872 * (2 * C50607 +
                                       C49872 * (C49987 +
                                                 C49872 * (C49872 * C49998 +
                                                           C50028 * ae) +
                                                 C50285 * ae) +
                                       C50291 * ae) +
                             C50299 * ae) +
                   C50608 * ae) +
         (4 * C50518 + C49872 * C50608) * ae) /
        C49809;
    const double C20997 =
        (3 * C50521 + C49872 * C50614 + C50518 * ae +
         (3 * C50611 +
          C49872 *
              (2 * C50607 +
               C49872 * (C49987 + C49872 * (C49872 * C49998 + C50028 * ae) +
                         C50285 * ae) +
               C50291 * ae) +
          C50299 * ae) *
             C50206) /
        C49809;
    const double C21327 =
        (C49873 *
         (4 * C50614 +
          C49872 *
              (3 * C50611 +
               C49872 * (2 * C50607 +
                         C49872 * (C49987 +
                                   C49872 * (C49872 * C49998 + C50028 * ae) +
                                   C50285 * ae) +
                         C50291 * ae) +
               C50299 * ae) +
          C50608 * ae)) /
        C49809;
    const double C21593 =
        (2 * C49873 * C50614 +
         C49873 *
             (C50614 +
              (2 * C50607 +
               C49872 * (C49987 + C49872 * (C49872 * C49998 + C50028 * ae) +
                         C50285 * ae) +
               C50291 * ae) *
                  C50206)) /
        C49809;
    const double C362 = C50886 * C335;
    const double C2488 = C2446 * C335;
    const double C8808 = C50938 * C335;
    const double C17979 = C50938 * C335;
    const double C24840 = C24798 * C335;
    const double C697 = C50886 * C336;
    const double C8236 = C50938 * C336;
    const double C17407 = C50938 * C336;
    const double C560 = C50886 * C527;
    const double C827 = C50886 * C528;
    const double C1007 = C50886 * C987;
    const double C8974 = C50938 * C987;
    const double C18145 = C50938 * C987;
    const double C5885 = C5883 * C50805;
    const double C11884 = C5883 * C50869;
    const double C13358 = C5883 * C50869;
    const double C11226 = C11224 * C50805;
    const double C6047 = C5723 * C50869;
    const double C7335 = C5723 * C50869;
    const double C11378 = C5723 * C486;
    const double C13510 = C5723 * C2226;
    const double C3696 =
        4 * (2 * C50064 - (ae * C50061) / C49883 + C49872 * C50125) +
        (((-3 * C50061) / C49743 + C49872 * C50123) * ae) / C49809 +
        C49872 *
            (3 * C50125 + (C50123 * ae) / C49809 +
             C49872 *
                 (2 * C50122 - (ae * C50114) / C49883 +
                  C49872 * ((-(ae * C49872 * C50105) / C49743) / C49809 -
                            C50103 / C49883 +
                            C49872 * ((-(C49872 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (ae * C50105) / C49883))));
    const double C3851 =
        2 * (C49872 * C50188 - (ae * (C49873 * (C49873 * C49953 + C50027 * ce) +
                                      C49940 + C49873 * C50027 * ce)) /
                                   C49883) -
        (ae * (C49873 * (C49873 * C50114 + C50181 * ce) + C50061 +
               C49873 * C50181 * ce)) /
            C49883 +
        C49872 *
            (C50188 -
             (ae * (C49873 * (C49873 * C49872 * C50105 + C50178 * ce) + C50101 +
                    C49873 * C50178 * ce)) /
                 C49883 +
             C49872 *
                 (C49872 * ((-(C49873 * C50173 * ce) / C49743) / C49809 -
                            C50103 / C49883 +
                            C49873 * ((-(C49873 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (C50173 * ce) / C49883)) -
                  (ae * (C49873 * (C49873 * C50105 + C50172 * ce) + C49953 +
                         C49873 * C50172 * ce)) /
                      C49883));
    const double C4750 =
        2 * C50094 - ((C49984 + C49995 * C50206) * ce) / C49883 +
        C49873 * C50188 +
        (((-2 * (C49873 * C50101 + C50076 * ce)) / C49743 -
          (C49873 * (C49873 * (C49873 * C49872 * C50105 + C50178 * ce) +
                     C50101 + C49873 * C50178 * ce)) /
              C49743 -
          ((C50076 + C50178 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            ((((-2 * C50201) / C49743 -
               (C49873 * (C49873 * (C49873 * C50105 + C50172 * ce) + C49953 +
                          C49873 * C50172 * ce)) /
                   C49743 -
               ((C50027 + C50172 * C50206) * ce) / C49743) *
              ae) /
                 C49809 +
             C49872 *
                 (2 * C50185 - ((C49995 + C50173 * C50206) * ce) / C49883 +
                  C49873 * ((-(C49873 * C50173 * ce) / C49743) / C49809 -
                            C50103 / C49883 +
                            C49873 * ((-(C49873 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (C50173 * ce) / C49883))));
    const double C4751 =
        (((-2 * (C49873 * C49940 + C50022 * ce)) / C49743 -
          (C49873 * (C49873 * C50201 + C49940 + C49873 * C50027 * ce)) /
              C49743 -
          ((C50022 + C50027 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 * (2 * C50094 - ((C49984 + C49995 * C50206) * ce) / C49883 +
                  C49873 * C50188);
    const double C5679 =
        3 * ((-(C50215 * ce) / C49743) / C49809 - C50017 / C49883 +
             C49873 * C50094) -
        ((2 * C50215 + C49873 * C50217) * ce) / C49883 +
        C49873 * (2 * C50094 - (C50217 * ce) / C49883 + C49873 * C50188);
    const double C6668 =
        (((-3 * (C49873 * C50201 + C49940 + C50230 * ce)) / C49743 +
          C49873 * ((-2 * C50201) / C49743 -
                    (C49873 * (C49873 * (C49873 * C50105 + C50172 * ce) +
                               C49953 + C49873 * C50172 * ce)) /
                        C49743 -
                    (C50233 * ce) / C49743) -
          ((2 * C50230 + C49873 * C50233) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (3 * C50188 - ((2 * C50169 + C49873 * C50234) * ce) / C49883 +
             C49873 *
                 (2 * C50185 - (C50234 * ce) / C49883 +
                  C49873 * ((-(C49873 * C50173 * ce) / C49743) / C49809 -
                            C50103 / C49883 +
                            C49873 * ((-(C49873 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (C50173 * ce) / C49883))));
    const double C7586 =
        4 * (2 * C50094 - (C50217 * ce) / C49883 + C49873 * C50188) -
        ((3 * C50217 + C49873 * C50242) * ce) / C49883 +
        C49873 *
            (3 * C50188 - (C50242 * ce) / C49883 +
             C49873 *
                 (2 * C50185 - (C50234 * ce) / C49883 +
                  C49873 * ((-(C49873 * C50173 * ce) / C49743) / C49809 -
                            C50103 / C49883 +
                            C49873 * ((-(C49873 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (C50173 * ce) / C49883))));
    const double C4345 =
        3 * (C50094 - (ae * (C49873 * C50101 + C50076 * ce)) / C49883 +
             C49872 * C50204) +
        ((C49873 * C50123 - ((2 * C50076 + C49872 * C50181) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (2 * C50204 - (ae * (C49873 * C50114 + C50181 * ce)) / C49883 +
             C49872 *
                 (C50185 -
                  (ae * (C49873 * C49872 * C50105 + C50178 * ce)) / C49883 +
                  C49872 * (C49872 * ((-(C49873 * C49880 * std::pow(C49876, 8) *
                                         bs[8] * C49878) /
                                       C49743) /
                                          C49809 -
                                      (C50173 * ce) / C49883) -
                            (ae * (C49873 * C50105 + C50172 * ce)) / C49883)));
    const double C50275 = C50258 + C50274;
    const double C50309 = C50308 - C50307;
    const double C50329 = C50328 + C50326;
    const double C50322 = C50321 + C50320;
    const double C2243 = C172 * C2227;
    const double C2237 = C170 * C2227;
    const double C2231 = C168 * C2227;
    const double C7948 = C563 * C2227;
    const double C7942 = C561 * C2227;
    const double C13505 = C565 * C2227;
    const double C2245 = C569 * C2228;
    const double C2239 = C565 * C2228;
    const double C2233 = C561 * C2228;
    const double C7950 = C5718 * C2228;
    const double C7944 = C563 * C2228;
    const double C13507 = C567 * C2228;
    const double C24835 = C24801 * C133;
    const double C24829 = C24801 * C122;
    const double C24827 = C24801 * C121;
    const double C24821 = C24801 * C131;
    const double C24811 = C24801 * C129;
    const double C24805 = C24801 * C120;
    const double C25023 = C24801 * C319;
    const double C25017 = C24801 * C303;
    const double C25015 = C24801 * C300;
    const double C25009 = C24801 * C312;
    const double C25205 = C24801 * C507;
    const double C25199 = C24801 * C493;
    const double C25197 = C24801 * C505;
    const double C25191 = C24801 * C492;
    const double C25375 = C24801 * C310;
    const double C25369 = C24801 * C299;
    const double C25539 = C24801 * C509;
    const double C25533 = C24801 * C494;
    const double C25751 = C24801 * C977;
    const double C25745 = C24801 * C970;
    const double C31439 = C24801 * C503;
    const double C31433 = C24801 * C491;
    const double C31431 = C24801 * C501;
    const double C31425 = C24801 * C490;
    const double C31949 = C24801 * C975;
    const double C31943 = C24801 * C969;
    const double C32361 = C24801 * C1312;
    const double C32355 = C24801 * C1307;
    const double C32865 = C24801 * C1659;
    const double C32859 = C24801 * C1654;
    const double C33273 = C24801 * C1973;
    const double C33267 = C24801 * C1968;
    const double C24837 = C24802 * C308;
    const double C24831 = C24802 * C298;
    const double C24825 = C24802 * C299;
    const double C24819 = C24802 * C310;
    const double C24813 = C24802 * C312;
    const double C24807 = C24802 * C300;
    const double C25025 = C24802 * C1201;
    const double C25019 = C24802 * C1195;
    const double C25013 = C24802 * C303;
    const double C25007 = C24802 * C319;
    const double C25207 = C24802 * C1314;
    const double C25201 = C24802 * C1308;
    const double C25195 = C24802 * C977;
    const double C25189 = C24802 * C970;
    const double C25377 = C24802 * C321;
    const double C25371 = C24802 * C304;
    const double C25541 = C24802 * C979;
    const double C25535 = C24802 * C971;
    const double C25753 = C24802 * C1661;
    const double C25747 = C24802 * C1655;
    const double C31441 = C24802 * C1312;
    const double C31435 = C24802 * C1307;
    const double C31429 = C24802 * C975;
    const double C31423 = C24802 * C969;
    const double C31951 = C24802 * C1659;
    const double C31945 = C24802 * C1654;
    const double C32359 = C24802 * C2850;
    const double C32353 = C24802 * C2846;
    const double C32863 = C24802 * C3420;
    const double C32857 = C24802 * C3416;
    const double C33271 = C24802 * C4743;
    const double C33265 = C24802 * C4737;
    const double C692 = C375 + C376;
    const double C8259 = C8255 * C50805;
    const double C17430 = C17426 * C50805;
    const double C8809 = C8799 * C50805;
    const double C17980 = C17970 * C50805;
    const double C11684 = C11683 - C6043;
    const double C12914 = C12913 - C7331;
    const double C837 = C833 - C821;
    const double C1794 = C1792 - C1784;
    const double C11065 = C5349 + C5348;
    const double C11525 = C5877 + C5876;
    const double C8977 = C8966 * C50869;
    const double C10228 = C8966 * C50869;
    const double C18148 = C18137 * C50869;
    const double C19399 = C18137 * C50869;
    const double C32870 = C32861 + C32862;
    const double C38251 = C38242 + C38243;
    const double C23803 = C23793 + C23794;
    const double C32366 = C32357 + C32358;
    const double C37747 = C37738 + C37739;
    const double C48839 = C48833 + C48834;
    const double C23293 = C23287 + C23288;
    const double C33278 = C33269 + C33270;
    const double C38659 = C38650 + C38651;
    const double C40339 = C40336 + C40337;
    const double C48341 = C48335 + C48336;
    const double C6675 = C6672 + C6673;
    const double C16623 = C16617 + C16618;
    const double C22358 = C22335 + C22336;
    const double C23294 = C23289 + C23290;
    const double C38660 = C38652 + C38653;
    const double C48342 = C48337 + C48338;
    const double C7593 = C7590 + C7591;
    const double C24212 = C24207 + C24208;
    const double C49244 = C49239 + C49240;
    const double C24211 = C24205 + C24206;
    const double C40007 = C40004 + C40005;
    const double C49243 = C49237 + C49238;
    const double C40611 = C40608 + C40609;
    const double C40603 =
        5 * ((-3 * C50588) / C49743 + C49873 * C50652 -
             (C50587 * ce) / C49743) +
        C49873 *
            (4 * C50652 +
             C49873 * ((-3 * C50302) / C49743 +
                       C49873 * ((-2 * C50289) / C49743 -
                                 (C49873 *
                                  (C49873 * (C49873 * C49957 + C50028 * ce) +
                                   C49943 + C49873 * C50028 * ce)) /
                                     C49743 -
                                 (C50336 * ce) / C49743) -
                       (C50343 * ce) / C49743) -
             (C50650 * ce) / C49743) -
        ((4 * C50587 + C49873 * C50650) * ce) / C49743;
    const double C374 = C361 + C362;
    const double C2506 = C2487 + C2488;
    const double C8814 = C8807 + C8808;
    const double C17985 = C17978 + C17979;
    const double C24858 = C24839 + C24840;
    const double C701 = C696 + C697;
    const double C8252 = C8235 + C8236;
    const double C17423 = C17406 + C17407;
    const double C572 = C559 + C560;
    const double C831 = C826 + C827;
    const double C1013 = C1006 + C1007;
    const double C8981 = C8973 + C8974;
    const double C18152 = C18144 + C18145;
    const double C6263 = C50886 * C4751;
    const double C14218 = C50938 * C4751;
    const double C22344 = C50938 * C4751;
    const double C5707 = C50886 * C5679;
    const double C20897 =
        5 * (3 * C50148 + (C50145 * ae) / C49809 + C49872 * C50275) +
        ((4 * C50145 + C49872 * C50273) * ae) / C49809 +
        C49872 *
            (4 * C50275 + (C50273 * ae) / C49809 +
             C49872 *
                 (3 * C50272 + (C50268 * ae) / C49809 +
                  C49872 *
                      (2 * C50267 - (ae * C50257) / C49883 +
                       C49872 * ((-(ae * C49872 * C49957) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49872 * ((-(C49872 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (ae * C49957) / C49883)))));
    const double C20999 =
        3 * (C50167 -
             (ae * (C49873 * (C49873 * C50246 + C50154 * ce) + C50127 +
                    C49873 * C50154 * ce)) /
                 C49883 +
             C49872 * C50309) +
        ((C50145 + C49873 * (C49873 * C50268 - (C50299 * ce) / C49743) -
          (C49873 * C50299 * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (2 * C50309 -
             (ae * (C49873 * (C49873 * C50257 + C50291 * ce) + C50135 +
                    C49873 * C50291 * ce)) /
                 C49883 +
             C49872 *
                 (C50306 -
                  (ae * (C49873 * (C49873 * C49872 * C49957 + C50285 * ce) +
                         C50246 + C49873 * C50285 * ce)) /
                      C49883 +
                  C49872 *
                      (C49872 * ((-(C49873 * C49998 * ce) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49873 * ((-(C49873 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (C49998 * ce) / C49883)) -
                       (ae * (C49873 * (C49873 * C49957 + C50028 * ce) +
                              C49943 + C49873 * C50028 * ce)) /
                           C49883)));
    const double C21595 =
        2 * ((((-2 * C50193) / C49743 - (C49873 * C50302) / C49743 -
               (C50227 * ce) / C49743) *
              ae) /
                 C49809 +
             C49872 * C50329) +
        (((-2 * (C49873 * C50135 + C50158 * ce)) / C49743 -
          (C49873 * (C49873 * (C49873 * C50257 + C50291 * ce) + C50135 +
                     C49873 * C50291 * ce)) /
              C49743 -
          ((C50158 + C50291 * C50206) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (C50329 +
             (((-2 * C50315) / C49743 -
               (C49873 * (C49873 * (C49873 * C49872 * C49957 + C50285 * ce) +
                          C50246 + C49873 * C50285 * ce)) /
                   C49743 -
               ((C50154 + C50285 * C50206) * ce) / C49743) *
              ae) /
                 C49809 +
             C49872 *
                 ((((-2 * C50289) / C49743 -
                    (C49873 * (C49873 * (C49873 * C49957 + C50028 * ce) +
                               C49943 + C49873 * C50028 * ce)) /
                        C49743 -
                    ((C50013 + C50028 * C50206) * ce) / C49743) *
                   ae) /
                      C49809 +
                  C49872 *
                      (2 * C50301 - ((C49987 + C49998 * C50206) * ce) / C49883 +
                       C49873 * ((-(C49873 * C49998 * ce) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49873 * ((-(C49873 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (C49998 * ce) / C49883)))));
    const double C23279 =
        3 * C50167 - (C50238 * ce) / C49883 + C49873 * C50329 +
        (((-3 * (C49873 * C50315 + C50127 + C50331 * ce)) / C49743 +
          C49873 *
              ((-2 * C50315) / C49743 -
               (C49873 * (C49873 * (C49873 * C49872 * C49957 + C50285 * ce) +
                          C50246 + C49873 * C50285 * ce)) /
                   C49743 -
               (C50335 * ce) / C49743) -
          ((2 * C50331 + C49873 * C50335) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            ((((-3 * C50302) / C49743 +
               C49873 * ((-2 * C50289) / C49743 -
                         (C49873 * (C49873 * (C49873 * C49957 + C50028 * ce) +
                                    C49943 + C49873 * C50028 * ce)) /
                             C49743 -
                         (C50336 * ce) / C49743) -
               ((2 * C50282 + C49873 * C50336) * ce) / C49743) *
              ae) /
                 C49809 +
             C49872 *
                 (3 * C50306 - ((2 * C50277 + C49873 * C50337) * ce) / C49883 +
                  C49873 *
                      (2 * C50301 - (C50337 * ce) / C49883 +
                       C49873 * ((-(C49873 * C49998 * ce) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49873 * ((-(C49873 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (C49998 * ce) / C49883)))));
    const double C24197 =
        ((4 * ((-2 * C50193) / C49743 - (C49873 * C50302) / C49743 -
               (C50227 * ce) / C49743) +
          C49873 *
              ((-3 * C50302) / C49743 +
               C49873 * ((-2 * C50289) / C49743 -
                         (C49873 * (C49873 * (C49873 * C49957 + C50028 * ce) +
                                    C49943 + C49873 * C50028 * ce)) /
                             C49743 -
                         (C50336 * ce) / C49743) -
               (C50343 * ce) / C49743) -
          ((3 * C50227 + C49873 * C50343) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (4 * C50329 - ((3 * C50228 + C49873 * C50344) * ce) / C49883 +
             C49873 *
                 (3 * C50306 - (C50344 * ce) / C49883 +
                  C49873 *
                      (2 * C50301 - (C50337 * ce) / C49883 +
                       C49873 * ((-(C49873 * C49998 * ce) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49873 * ((-(C49873 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (C49998 * ce) / C49883)))));
    const double C40604 =
        5 * (3 * C50167 - (C50238 * ce) / C49883 + C49873 * C50329) -
        ((4 * C50238 + C49873 * C50348) * ce) / C49883 +
        C49873 *
            (4 * C50329 - (C50348 * ce) / C49883 +
             C49873 *
                 (3 * C50306 - (C50344 * ce) / C49883 +
                  C49873 *
                      (2 * C50301 - (C50337 * ce) / C49883 +
                       C49873 * ((-(C49873 * C49998 * ce) / C49743) / C49809 -
                                 C49912 / C49883 +
                                 C49873 * ((-(C49873 * std::pow(C49876, 8) *
                                              bs[8] * C49878) /
                                            C49743) /
                                               C49809 -
                                           (C49998 * ce) / C49883)))));
    const double C21329 =
        4 * (2 * C50196 - (ae * (C49873 * C50135 + C50158 * ce)) / C49883 +
             C49872 * C50322) +
        ((C49873 * C50273 - ((3 * C50158 + C49872 * C50299) * ce) / C49743) *
         ae) /
            C49809 +
        C49872 *
            (3 * C50322 +
             ((C49873 * C50268 - (C50299 * ce) / C49743) * ae) / C49809 +
             C49872 *
                 (2 * C50318 - (ae * (C49873 * C50257 + C50291 * ce)) / C49883 +
                  C49872 *
                      (C50301 -
                       (ae * (C49873 * C49872 * C49957 + C50285 * ce)) /
                           C49883 +
                       C49872 *
                           (C49872 * ((-(C49873 * std::pow(C49876, 8) * bs[8] *
                                         C49878) /
                                       C49743) /
                                          C49809 -
                                      (C49998 * ce) / C49883) -
                            (ae * (C49873 * C49957 + C50028 * ce)) / C49883))));
    const double C24856 = C24835 + C24836;
    const double C24853 = C24829 + C24830;
    const double C24852 = C24827 + C24828;
    const double C24849 = C24821 + C24822;
    const double C24844 = C24811 + C24812;
    const double C24841 = C24805 + C24806;
    const double C25038 = C25023 + C25024;
    const double C25035 = C25017 + C25018;
    const double C25034 = C25015 + C25016;
    const double C25031 = C25009 + C25010;
    const double C25220 = C25205 + C25206;
    const double C25217 = C25199 + C25200;
    const double C25216 = C25197 + C25198;
    const double C25213 = C25191 + C25192;
    const double C25384 = C25375 + C25376;
    const double C25381 = C25369 + C25370;
    const double C25548 = C25539 + C25540;
    const double C25545 = C25533 + C25534;
    const double C25760 = C25751 + C25752;
    const double C25757 = C25745 + C25746;
    const double C31454 = C31439 + C31440;
    const double C31451 = C31433 + C31434;
    const double C31450 = C31431 + C31432;
    const double C31447 = C31425 + C31426;
    const double C31958 = C31949 + C31950;
    const double C31955 = C31943 + C31944;
    const double C32368 = C32361 + C32362;
    const double C32365 = C32355 + C32356;
    const double C32872 = C32865 + C32866;
    const double C32869 = C32859 + C32860;
    const double C33280 = C33273 + C33274;
    const double C33277 = C33267 + C33268;
    const double C24857 = C24837 + C24838;
    const double C24854 = C24831 + C24832;
    const double C24851 = C24825 + C24826;
    const double C24848 = C24819 + C24820;
    const double C24845 = C24813 + C24814;
    const double C24842 = C24807 + C24808;
    const double C25039 = C25025 + C25026;
    const double C25036 = C25019 + C25020;
    const double C25033 = C25013 + C25014;
    const double C25030 = C25007 + C25008;
    const double C25221 = C25207 + C25208;
    const double C25218 = C25201 + C25202;
    const double C25215 = C25195 + C25196;
    const double C25212 = C25189 + C25190;
    const double C25385 = C25377 + C25378;
    const double C25382 = C25371 + C25372;
    const double C25549 = C25541 + C25542;
    const double C25546 = C25535 + C25536;
    const double C25761 = C25753 + C25754;
    const double C25758 = C25747 + C25748;
    const double C31455 = C31441 + C31442;
    const double C31452 = C31435 + C31436;
    const double C31449 = C31429 + C31430;
    const double C31446 = C31423 + C31424;
    const double C31959 = C31951 + C31952;
    const double C31956 = C31945 + C31946;
    const double C32367 = C32359 + C32360;
    const double C32364 = C32353 + C32354;
    const double C32871 = C32863 + C32864;
    const double C32868 = C32857 + C32858;
    const double C33279 = C33271 + C33272;
    const double C33276 = C33265 + C33266;
    const double C698 = C692 * C50902;
    const double C8262 = C8259 + C8260;
    const double C17433 = C17430 + C17431;
    const double C8815 = C8809 + C8810;
    const double C17986 = C17980 + C17981;
    const double C11685 = C11684 * C50966;
    const double C34461 = C11684 * C50966;
    const double C12915 = C12914 * C50966;
    const double C35680 = C12914 * C50966;
    const double C839 = C837 * C50902;
    const double C1796 = C1794 * C50902;
    const double C11070 = C11065 * C50966;
    const double C33869 = C11065 * C50966;
    const double C11529 = C11525 * C50966;
    const double C34311 = C11525 * C50966;
    const double C8983 = C8982 - C8977;
    const double C10231 = C10230 - C10228;
    const double C18154 = C18153 - C18148;
    const double C19402 = C19401 - C19399;
    const double C49232 = C16623 + C16624;
    const double C24200 = C22358 + C22357;
    const double C386 = C374 * C50805;
    const double C703 = C701 * C50805;
    const double C584 = C572 * C486;
    const double C2248 = C572 * C2226;
    const double C5351 = C572 * C50805;
    const double C11682 = C572 * C50869;
    const double C12912 = C572 * C50869;
    const double C835 = C831 * C50869;
    const double C1788 = C831 * C50869;
    const double C11068 = C831 * C50805;
    const double C1019 = C1013 * C50869;
    const double C2126 = C1013 * C50869;
    const double C11528 = C1013 * C50805;
    const double C6269 = C6262 + C6263;
    const double C14230 = C14217 + C14218;
    const double C22361 = C22343 + C22344;
    const double C5721 = C5706 + C5707;
    const double C8264 = C8262 * C50902;
    const double C17435 = C17433 * C50902;
    const double C8816 = C8815 * C50902;
    const double C17987 = C17986 * C50902;
    const double C11686 = C11677 + C11685;
    const double C34462 = C34460 + C34461;
    const double C12916 = C12907 + C12915;
    const double C35681 = C35679 + C35680;
    const double C11072 = C11070 + C11066;
    const double C33872 = C33869 + C33870;
    const double C11530 = C11529 + C11526;
    const double C34313 = C34311 + C34312;
    const double C8984 = C8983 * C50902;
    const double C10232 = C10231 * C50902;
    const double C18155 = C18154 * C50902;
    const double C19403 = C19402 * C50902;
    const double C6271 = C6269 * C50869;
    const double C7795 = C6269 * C50869;
    const double C5729 = C5721 * C486;
    const double C7953 = C5721 * C2226;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C51031 -
           (C8816 * C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C50841) *
              C51074 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50805) * C50902 *
                C8201) *
               C50841 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C51031) *
              C51075 +
          ((C8263 * C51072 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C50902 *
                C51073 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50805) * C50902 *
                C8201) *
               C51031 -
           (((C8203 * C326 + C50938 * C337 + C8202 * C325 + C51044 * C336) *
                 C50805 +
             (C8203 * C307 + C50938 * C327 + C8202 * C306 + C51044 * C324) *
                 C118) *
                C50902 * C8201 +
            ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C50902 *
                C51073 +
            C8816 * C51072) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                 C804 -
             (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                 C50869) *
                C50902 * C51072 +
            ((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
             (C8637 + C8638) * C804 - (C8639 + C8640) * C50869) *
                C50902 * C51073 +
            C8984 * C8201) *
               C51031 +
           (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                 C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C51072 +
            ((C9195 + C9196) * C804 -
             ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
             (C9197 + C9198) * C50869) *
                C50902 * C51073 +
            ((C9199 + C9200) * C804 - (C8799 * C51032 + C8800 * C803) +
             (C9201 + C9202) * C50869) *
                C50902 * C8201) *
               C50841) *
              C296 +
          ((((C8638 + C8637) * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             (C8640 + C8639) * C50869) *
                C50902 * C51072 +
            ((C8646 + C8645) * C804 -
             ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
             (C8648 + C8647) * C50869) *
                C50902 * C51073 +
            ((C8978 + C8979) * C804 - (C8255 * C51032 + C8256 * C803) +
             (C8980 + C8981) * C50869) *
                C50902 * C8201) *
               C51031 +
           (((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
             (C9196 + C9195) * C804 - (C9198 + C9197) * C50869) *
                C50902 * C51072 +
            ((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
             (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                C50902 * C51073 +
            ((C8811 + C8812) * C803 + (C8813 + C8814) * C51032 -
             (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                 C804 -
             (C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                 C50869) *
                C50902 * C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C293 -
           (((C8443 + C8444) * C50805 + (C8445 + C8446) * C118) * C50902 *
                C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C294 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C51072 +
            ((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C50902 *
                C51073 +
            ((C8455 + C8456) * C118 + (C8457 + C8458) * C50805) * C50902 *
                C8201) *
               C295) *
              C296 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8202 * C298 + C51044 * C309 + C8203 * C305 + C50938 * C322) *
                 C118 +
             (C8202 * C308 + C51044 * C328 + C8203 * C323 + C50938 * C335) *
                 C50805) *
                C50902 * C8201) *
               C294 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C293 -
           (((C8203 * C1197 + C50938 * C1205 + C8202 * C323 + C51044 * C335) *
                 C50805 +
             (C8203 * C1193 + C50938 * C1198 + C8202 * C305 + C51044 * C322) *
                 C118) *
                C50902 * C8201 +
            ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C50902 *
                C51073 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C50902 *
                C51072) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C51072 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
               C51073 +
           C8263 * C8201) *
              C50790 * C113 -
          (C8264 * C8201 +
           ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
               C51073 +
           ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
               C51072) *
              C50790 * C114 +
          (C8263 * C51072 +
           ((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C50902 *
               C51073 +
           ((C8249 + C8250) * C118 + (C8251 + C8252) * C50805) * C50902 *
               C8201) *
              C50790 * C115 -
          (((C8203 * C688 + C50938 * C690 + C8202 * C137 + C51044 * C145) *
                C50805 +
            (C8203 * C687 + C50938 * C689 + C8202 * C124 + C51044 * C136) *
                C118) *
               C50902 * C8201 +
           ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C50902 *
               C51073 +
           C8264 * C51072) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C487 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C484 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C488 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C485 +
            (C8202 * C491 + C51044 * C502 + C8203 * C1307 + C50938 * C1311) *
                C489 +
            (C8202 * C503 + C51044 * C521 + C8203 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C51072 +
           ((C8237 + C8238) * C487 + (C8239 + C8240) * C484 -
            (C8637 + C8638) * C488 - (C8639 + C8640) * C485 +
            (C8641 + C8642) * C489 + (C8643 + C8644) * C486) *
               C50902 * C51073 +
           (C8253 * C487 + C8254 * C484 - (C8645 + C8646) * C488 -
            (C8647 + C8648) * C485 + (C8649 + C8650) * C489 +
            (C8651 + C8652) * C486) *
               C50902 * C8201) *
              C50790 * C296 +
          (((C8638 + C8637) * C488 -
            ((C8240 + C8239) * C484 + (C8238 + C8237) * C487) +
            (C8640 + C8639) * C485 - (C8642 + C8641) * C489 -
            (C8644 + C8643) * C486) *
               C50902 * C51072 +
           ((C8646 + C8645) * C488 -
            ((C8244 + C8243) * C484 + (C8242 + C8241) * C487) +
            (C8648 + C8647) * C485 - (C8650 + C8649) * C489 -
            (C8652 + C8651) * C486) *
               C50902 * C51073 +
           ((C8202 * C496 + C51044 * C512 + C8203 * C972 + C50938 * C980) *
                C488 -
            (C8255 * C484 + C8256 * C487) +
            (C8202 * C513 + C51044 * C526 + C8203 * C981 + C50938 * C987) *
                C485 -
            (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                C489 -
            (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                C486) *
               C50902 * C8201) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C803 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51032 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C804 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
            (C8637 + C8638) * C804 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C8984 * C8201) *
              C50790 * C51074 +
          (((C8638 + C8637) * C804 -
            ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
            (C8640 + C8639) * C50869) *
               C50902 * C51072 +
           ((C8646 + C8645) * C804 -
            ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
            (C8648 + C8647) * C50869) *
               C50902 * C51073 +
           ((C8978 + C8979) * C804 - (C8255 * C51032 + C8256 * C803) +
            (C8980 + C8981) * C50869) *
               C50902 * C8201) *
              C50790 * C51075 +
          (C8984 * C51072 +
           ((C8248 + C8247) * C803 + (C8246 + C8245) * C51032 -
            (C8979 + C8978) * C804 - (C8981 + C8980) * C50869) *
               C50902 * C51073 +
           ((C8249 + C8250) * C803 + (C8251 + C8252) * C51032 -
            (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                C804 -
            (C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                C50869) *
               C50902 * C8201) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C51072 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
               C51073 +
           C8263 * C8201) *
              C50790 * C113 -
          (C8264 * C8201 +
           ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
               C51073 +
           ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
               C51072) *
              C50790 * C114 +
          (C8263 * C51072 +
           ((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C50902 *
               C51073 +
           ((C8249 + C8250) * C118 + (C8251 + C8252) * C50805) * C50902 *
               C8201) *
              C50790 * C115 -
          (((C8203 * C688 + C50938 * C690 + C8202 * C137 + C51044 * C145) *
                C50805 +
            (C8203 * C687 + C50938 * C689 + C8202 * C124 + C51044 * C136) *
                C118) *
               C50902 * C8201 +
           ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C50902 *
               C51073 +
           C8264 * C51072) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C293 -
           (((C8443 + C8444) * C50805 + (C8445 + C8446) * C118) * C50902 *
                C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C294 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C51072 +
            ((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C50902 *
                C51073 +
            ((C8455 + C8456) * C118 + (C8457 + C8458) * C50805) * C50902 *
                C8201) *
               C295) *
              C296 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8202 * C298 + C51044 * C309 + C8203 * C305 + C50938 * C322) *
                 C118 +
             (C8202 * C308 + C51044 * C328 + C8203 * C323 + C50938 * C335) *
                 C50805) *
                C50902 * C8201) *
               C294 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C293 -
           (((C8203 * C1197 + C50938 * C1205 + C8202 * C323 + C51044 * C335) *
                 C50805 +
             (C8203 * C1193 + C50938 * C1198 + C8202 * C305 + C51044 * C322) *
                 C118) *
                C50902 * C8201 +
            ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C50902 *
                C51073 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C50902 *
                C51072) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C51076 -
           (C8816 * C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C51077 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C51072 +
            ((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C50902 *
                C51073 +
            ((C8455 + C8456) * C118 + (C8457 + C8458) * C50805) * C50902 *
                C8201) *
               C1423) *
              C51023 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50805) * C50902 *
                C8201) *
               C51077 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C51076 -
           (((C8203 * C1197 + C50938 * C1205 + C8202 * C323 + C51044 * C335) *
                 C50805 +
             (C8203 * C1193 + C50938 * C1198 + C8202 * C305 + C51044 * C322) *
                 C118) *
                C50902 * C8201 +
            ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C50902 *
                C51073 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C50902 *
                C51072) *
               C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C803 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51032 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C804 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
            (C8637 + C8638) * C804 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C8984 * C8201) *
              C51076 +
          (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                C804 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C51032 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C803) +
            (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C9195 + C9196) * C804 -
            ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
            (C9197 + C9198) * C50869) *
               C50902 * C51073 +
           ((C9199 + C9200) * C804 - (C8799 * C51032 + C8800 * C803) +
            (C9201 + C9202) * C50869) *
               C50902 * C8201) *
              C51077 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C803 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C51032 -
            (C8203 * C3416 + C50938 * C3419 + C8202 * C1654 + C51044 * C1658) *
                C804 -
            (C8203 * C3420 + C50938 * C3425 + C8202 * C1659 + C51044 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C8451 + C8452) * C803 + (C8453 + C8454) * C51032 -
            (C8203 * C3417 + C50938 * C3421 + C8202 * C1655 + C51044 * C1660) *
                C804 -
            (C8203 * C3422 + C50938 * C3426 + C8202 * C1661 + C51044 * C1667) *
                C50869) *
               C50902 * C51073 +
           ((C8455 + C8456) * C803 + (C8457 + C8458) * C51032 -
            (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 + C51044 * C1662) *
                C804 -
            (C8203 * C3424 + C50938 * C3427 + C8202 * C1663 + C51044 * C1668) *
                C50869) *
               C50902 * C8201) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C51072 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
               C51073 +
           C8263 * C8201) *
              C1188 -
          (C8816 * C8201 +
           ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
               C51073 +
           ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                C50805 +
            (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                C118) *
               C50902 * C51072) *
              C1189 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C118 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C50805) *
               C50902 * C51072 +
           ((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C50902 *
               C51073 +
           ((C8455 + C8456) * C118 + (C8457 + C8458) * C50805) * C50902 *
               C8201) *
              C1190 -
          (((C8203 * C2659 + C50938 * C2663 + C8202 * C1199 + C51044 * C1206) *
                C50805 +
            (C8203 * C2654 + C50938 * C2660 + C8202 * C1194 + C51044 * C1200) *
                C118) *
               C50902 * C8201 +
           ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                C50805 +
            (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                C118) *
               C50902 * C51073 +
           ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                C50805 +
            (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                C118) *
               C50902 * C51072) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C1117 -
           (C8816 * C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C50841) *
              C1119 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50805) * C50902 *
                C8201) *
               C50841 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C1117) *
              C1120 +
          ((C8263 * C51072 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C50902 *
                C51073 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50805) * C50902 *
                C8201) *
               C1117 -
           (((C8203 * C326 + C50938 * C337 + C8202 * C325 + C51044 * C336) *
                 C50805 +
             (C8203 * C307 + C50938 * C327 + C8202 * C306 + C51044 * C324) *
                 C118) *
                C50902 * C8201 +
            ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C50902 *
                C51073 +
            C8816 * C51072) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C487 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C484 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C488 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C485 +
            (C8202 * C491 + C51044 * C502 + C8203 * C1307 + C50938 * C1311) *
                C489 +
            (C8202 * C503 + C51044 * C521 + C8203 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C51072 +
           ((C8237 + C8238) * C487 + (C8239 + C8240) * C484 -
            (C8637 + C8638) * C488 - (C8639 + C8640) * C485 +
            (C8641 + C8642) * C489 + (C8643 + C8644) * C486) *
               C50902 * C51073 +
           (C8253 * C487 + C8254 * C484 - C8965 * C488 - C8966 * C485 +
            (C8649 + C8650) * C489 + (C8651 + C8652) * C486) *
               C50902 * C8201) *
              C1117 +
          (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                C488 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C484 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C487) +
            (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                C485 -
            (C8203 * C2846 + C50938 * C2849 + C8202 * C1307 + C51044 * C1311) *
                C489 -
            (C8203 * C2850 + C50938 * C2855 + C8202 * C1312 + C51044 * C1319) *
                C486) *
               C50902 * C51072 +
           ((C9195 + C9196) * C488 -
            ((C8447 + C8448) * C484 + (C8449 + C8450) * C487) +
            (C9197 + C9198) * C485 -
            (C8203 * C2847 + C50938 * C2851 + C8202 * C1308 + C51044 * C1313) *
                C489 -
            (C8203 * C2852 + C50938 * C2856 + C8202 * C1314 + C51044 * C1320) *
                C486) *
               C50902 * C51073 +
           ((C9199 + C9200) * C488 - (C8799 * C484 + C8800 * C487) +
            (C9201 + C9202) * C485 -
            (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 + C51044 * C1315) *
                C489 -
            (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 + C51044 * C1321) *
                C486) *
               C50902 * C8201) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                 C804 -
             (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                 C50869) *
                C50902 * C51072 +
            ((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
             (C8637 + C8638) * C804 - (C8639 + C8640) * C50869) *
                C50902 * C51073 +
            C8984 * C8201) *
               C1117 +
           (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                 C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C51072 +
            ((C9195 + C9196) * C804 -
             ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
             (C9197 + C9198) * C50869) *
                C50902 * C51073 +
            ((C9199 + C9200) * C804 - (C8799 * C51032 + C8800 * C803) +
             (C9201 + C9202) * C50869) *
                C50902 * C8201) *
               C50841) *
              C51023 +
          ((((C8638 + C8637) * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             (C8640 + C8639) * C50869) *
                C50902 * C51072 +
            ((C8646 + C8645) * C804 -
             ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
             (C8648 + C8647) * C50869) *
                C50902 * C51073 +
            ((C8978 + C8979) * C804 - (C8255 * C51032 + C8256 * C803) +
             (C8980 + C8981) * C50869) *
                C50902 * C8201) *
               C1117 +
           (((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
             (C9196 + C9195) * C804 - (C9198 + C9197) * C50869) *
                C50902 * C51072 +
            ((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
             (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                C50902 * C51073 +
            ((C8811 + C8812) * C803 + (C8813 + C8814) * C51032 -
             (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                 C804 -
             (C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                 C50869) *
                C50902 * C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C51072 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
                C51073 +
            C8263 * C8201) *
               C1117 -
           (C8816 * C8201 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
                C51073 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C50902 * C51072) *
               C50841) *
              C1119 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C50902 *
                C51072 +
            ((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C50902 *
                C51073 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50805) * C50902 *
                C8201) *
               C50841 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C50902 *
                C51073 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C50902 *
                C51072) *
               C1117) *
              C1120 +
          ((C8263 * C51072 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C50902 *
                C51073 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50805) * C50902 *
                C8201) *
               C1117 -
           (((C8203 * C326 + C50938 * C337 + C8202 * C325 + C51044 * C336) *
                 C50805 +
             (C8203 * C307 + C50938 * C327 + C8202 * C306 + C51044 * C324) *
                 C118) *
                C50902 * C8201 +
            ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C50902 *
                C51073 +
            C8816 * C51072) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C51072 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C50902 *
               C51073 +
           C8263 * C8201) *
              C1188 -
          (C8816 * C8201 +
           ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C50902 *
               C51073 +
           ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                C50805 +
            (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                C118) *
               C50902 * C51072) *
              C1189 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C118 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C50805) *
               C50902 * C51072 +
           ((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C50902 *
               C51073 +
           ((C8455 + C8456) * C118 + (C8457 + C8458) * C50805) * C50902 *
               C8201) *
              C1190 -
          (((C8203 * C2659 + C50938 * C2663 + C8202 * C1199 + C51044 * C1206) *
                C50805 +
            (C8203 * C2654 + C50938 * C2660 + C8202 * C1194 + C51044 * C1200) *
                C118) *
               C50902 * C8201 +
           ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                C50805 +
            (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                C118) *
               C50902 * C51073 +
           ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                C50805 +
            (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                C118) *
               C50902 * C51072) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                 C1771 -
             (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                 C50869) *
                C50902 * C51072 +
            ((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             (C8637 + C8638) * C1771 - (C8639 + C8640) * C50869) *
                C50902 * C51073 +
            C10232 * C8201) *
               C51031 +
           (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                 C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C51072 +
            ((C9195 + C9196) * C1771 -
             ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
             (C9197 + C9198) * C50869) *
                C50902 * C51073 +
            ((C9199 + C9200) * C1771 - (C8799 * C1768 + C8800 * C1770) +
             (C9201 + C9202) * C50869) *
                C50902 * C8201) *
               C50841) *
              C51023 +
          ((((C8638 + C8637) * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             (C8640 + C8639) * C50869) *
                C50902 * C51072 +
            ((C8646 + C8645) * C1771 -
             ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
             (C8648 + C8647) * C50869) *
                C50902 * C51073 +
            ((C8978 + C8979) * C1771 - (C8255 * C1768 + C8256 * C1770) +
             (C8980 + C8981) * C50869) *
                C50902 * C8201) *
               C51031 +
           (((C8450 + C8449) * C1770 + (C8448 + C8447) * C1768 -
             (C9196 + C9195) * C1771 - (C9198 + C9197) * C50869) *
                C50902 * C51072 +
            ((C8446 + C8445) * C1770 + (C8444 + C8443) * C1768 -
             (C9200 + C9199) * C1771 - (C9202 + C9201) * C50869) *
                C50902 * C51073 +
            ((C8811 + C8812) * C1770 + (C8813 + C8814) * C1768 -
             (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                 C1771 -
             (C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                 C50869) *
                C50902 * C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C2227 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51078 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C2228 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C51079 +
            (C8202 * C491 + C51044 * C502 + C8203 * C1307 + C50938 * C1311) *
                C2229 +
            (C8202 * C503 + C51044 * C521 + C8203 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C51072 +
           ((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
            (C8637 + C8638) * C2228 - (C8639 + C8640) * C51079 +
            (C8641 + C8642) * C2229 + (C8643 + C8644) * C2226) *
               C50902 * C51073 +
           (C8253 * C2227 + C8254 * C51078 - C8965 * C2228 - C8966 * C51079 +
            (C8649 + C8650) * C2229 + (C8651 + C8652) * C2226) *
               C50902 * C8201) *
              C51031 +
          (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                C2228 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C51078 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C2227) +
            (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                C51079 -
            (C8203 * C2846 + C50938 * C2849 + C8202 * C1307 + C51044 * C1311) *
                C2229 -
            (C8203 * C2850 + C50938 * C2855 + C8202 * C1312 + C51044 * C1319) *
                C2226) *
               C50902 * C51072 +
           ((C9195 + C9196) * C2228 -
            ((C8447 + C8448) * C51078 + (C8449 + C8450) * C2227) +
            (C9197 + C9198) * C51079 -
            (C8203 * C2847 + C50938 * C2851 + C8202 * C1308 + C51044 * C1313) *
                C2229 -
            (C8203 * C2852 + C50938 * C2856 + C8202 * C1314 + C51044 * C1320) *
                C2226) *
               C50902 * C51073 +
           ((C9199 + C9200) * C2228 - (C8799 * C51078 + C8800 * C2227) +
            (C9201 + C9202) * C51079 -
            (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 + C51044 * C1315) *
                C2229 -
            (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 + C51044 * C1321) *
                C2226) *
               C50902 * C8201) *
              C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C1771 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
            (C8637 + C8638) * C1771 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C10232 * C8201) *
              C293 +
          (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                C1771 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C1768 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C1770) +
            (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C9195 + C9196) * C1771 -
            ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
            (C9197 + C9198) * C50869) *
               C50902 * C51073 +
           ((C9199 + C9200) * C1771 - (C8799 * C1768 + C8800 * C1770) +
            (C9201 + C9202) * C50869) *
               C50902 * C8201) *
              C294 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C1770 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C1768 -
            (C8203 * C3416 + C50938 * C3419 + C8202 * C1654 + C51044 * C1658) *
                C1771 -
            (C8203 * C3420 + C50938 * C3425 + C8202 * C1659 + C51044 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
            (C8203 * C3417 + C50938 * C3421 + C8202 * C1655 + C51044 * C1660) *
                C1771 -
            (C8203 * C3422 + C50938 * C3426 + C8202 * C1661 + C51044 * C1667) *
                C50869) *
               C50902 * C51073 +
           ((C8455 + C8456) * C1770 + (C8457 + C8458) * C1768 -
            (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 + C51044 * C1662) *
                C1771 -
            (C8203 * C3424 + C50938 * C3427 + C8202 * C1663 + C51044 * C1668) *
                C50869) *
               C50902 * C8201) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C1771 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
            (C8637 + C8638) * C1771 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C10232 * C8201) *
              C50790 * C1119 +
          (((C8638 + C8637) * C1771 -
            ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
            (C8640 + C8639) * C50869) *
               C50902 * C51072 +
           ((C8646 + C8645) * C1771 -
            ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
            (C8648 + C8647) * C50869) *
               C50902 * C51073 +
           ((C8978 + C8979) * C1771 - (C8255 * C1768 + C8256 * C1770) +
            (C8980 + C8981) * C50869) *
               C50902 * C8201) *
              C50790 * C1120 +
          (C10232 * C51072 +
           ((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
            (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
               C50902 * C51073 +
           ((C8249 + C8250) * C1770 + (C8251 + C8252) * C1768 -
            (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                C1771 -
            (C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                C50869) *
               C50902 * C8201) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
               C1964 +
           (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
               C1960 -
           (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
               C1965 -
           (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
               C1961 +
           (C8202 * C491 + C51044 * C502 + C8203 * C1307 + C50938 * C1311) *
               C1966 +
           (C8202 * C503 + C51044 * C521 + C8203 * C1312 + C50938 * C1319) *
               C1962 -
           (C8203 * C4737 + C50938 * C4741 + C8202 * C1968 + C51044 * C1972) *
               C1967 -
           (C8203 * C4743 + C50938 * C4749 + C8202 * C1973 + C51044 * C1980) *
               C1963) *
              C50902 * C51072 +
          ((C8237 + C8238) * C1964 + (C8239 + C8240) * C1960 -
           (C8637 + C8638) * C1965 - (C8639 + C8640) * C1961 +
           (C8641 + C8642) * C1966 + (C8643 + C8644) * C1962 -
           (C8203 * C4739 + C50938 * C4745 + C8202 * C1969 + C51044 * C1974) *
               C1967 -
           (C8203 * C4747 + C50938 * C4751 + C8202 * C1975 + C51044 * C1981) *
               C1963) *
              C50902 * C51073 +
          (C8253 * C1964 + C8254 * C1960 - C8965 * C1965 - C8966 * C1961 +
           (C8649 + C8650) * C1966 + (C8651 + C8652) * C1962 -
           (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
               C1967 -
           (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
               C1963) *
              C50902 * C8201) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C2227 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51078 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C2228 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C51079 +
            (C8202 * C491 + C51044 * C502 + C8203 * C1307 + C50938 * C1311) *
                C2229 +
            (C8202 * C503 + C51044 * C521 + C8203 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C51072 +
           ((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
            (C8637 + C8638) * C2228 - (C8639 + C8640) * C51079 +
            (C8641 + C8642) * C2229 + (C8643 + C8644) * C2226) *
               C50902 * C51073 +
           (C8253 * C2227 + C8254 * C51078 - C8965 * C2228 - C8966 * C51079 +
            (C8649 + C8650) * C2229 + (C8651 + C8652) * C2226) *
               C50902 * C8201) *
              C50790 * C51023 +
          (((C8638 + C8637) * C2228 -
            ((C8240 + C8239) * C51078 + (C8238 + C8237) * C2227) +
            (C8640 + C8639) * C51079 - (C8642 + C8641) * C2229 -
            (C8644 + C8643) * C2226) *
               C50902 * C51072 +
           ((C8646 + C8645) * C2228 -
            ((C8244 + C8243) * C51078 + (C8242 + C8241) * C2227) +
            (C8648 + C8647) * C51079 - (C8650 + C8649) * C2229 -
            (C8652 + C8651) * C2226) *
               C50902 * C51073 +
           ((C8978 + C8979) * C2228 - (C8255 * C51078 + C8256 * C2227) +
            (C8980 + C8981) * C51079 -
            (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                C2229 -
            (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                C2226) *
               C50902 * C8201) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C1771 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
            (C8637 + C8638) * C1771 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C10232 * C8201) *
              C50790 * C1119 +
          (((C8638 + C8637) * C1771 -
            ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
            (C8640 + C8639) * C50869) *
               C50902 * C51072 +
           ((C8646 + C8645) * C1771 -
            ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
            (C8648 + C8647) * C50869) *
               C50902 * C51073 +
           ((C8978 + C8979) * C1771 - (C8255 * C1768 + C8256 * C1770) +
            (C8980 + C8981) * C50869) *
               C50902 * C8201) *
              C50790 * C1120 +
          (C10232 * C51072 +
           ((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
            (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
               C50902 * C51073 +
           ((C8249 + C8250) * C1770 + (C8251 + C8252) * C1768 -
            (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                C1771 -
            (C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                C50869) *
               C50902 * C8201) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C8203 * C969 + C50938 * C974 + C8202 * C490 + C51044 * C500) *
                C1771 -
            (C8203 * C975 + C50938 * C984 + C8202 * C501 + C51044 * C520) *
                C50869) *
               C50902 * C51072 +
           ((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
            (C8637 + C8638) * C1771 - (C8639 + C8640) * C50869) *
               C50902 * C51073 +
           C10232 * C8201) *
              C293 +
          (((C8202 * C969 + C51044 * C974 + C8203 * C1654 + C50938 * C1658) *
                C1771 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C1768 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C1770) +
            (C8202 * C975 + C51044 * C984 + C8203 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C9195 + C9196) * C1771 -
            ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
            (C9197 + C9198) * C50869) *
               C50902 * C51073 +
           ((C9199 + C9200) * C1771 - (C8799 * C1768 + C8800 * C1770) +
            (C9201 + C9202) * C50869) *
               C50902 * C8201) *
              C294 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C1770 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C1768 -
            (C8203 * C3416 + C50938 * C3419 + C8202 * C1654 + C51044 * C1658) *
                C1771 -
            (C8203 * C3420 + C50938 * C3425 + C8202 * C1659 + C51044 * C1666) *
                C50869) *
               C50902 * C51072 +
           ((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
            (C8203 * C3417 + C50938 * C3421 + C8202 * C1655 + C51044 * C1660) *
                C1771 -
            (C8203 * C3422 + C50938 * C3426 + C8202 * C1661 + C51044 * C1667) *
                C50869) *
               C50902 * C51073 +
           ((C8455 + C8456) * C1770 + (C8457 + C8458) * C1768 -
            (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 + C51044 * C1662) *
                C1771 -
            (C8203 * C3424 + C50938 * C3427 + C8202 * C1663 + C51044 * C1668) *
                C50869) *
               C50902 * C8201) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C51031 -
           ((((C9198 + C9197) * C50805 + (C9196 + C9195) * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C8203 * C1659 + C50938 * C1666 + C8202 * C975 + C51044 * C984) *
                  C50805 +
              (C8203 * C1654 + C50938 * C1658 + C8202 * C969 + C51044 * C974) *
                  C118) *
                 C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C50841) *
              C51074 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             ((C9195 + C9196) * C118 + (C9197 + C9198) * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C51031) *
              C51075 +
          (((C8261 * C51045 +
             ((C8646 + C8645) * C118 + (C8648 + C8647) * C50805) * C50966) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C51045 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C51031 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C51045) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C51045) *
                C2447) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C803 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C51032 -
              (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                 C51045 +
             ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
              (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                 C50966) *
                C2447 +
            (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
              C14203 * C804 - C14204 * C50869) *
                 C51045 +
             (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C14899 + C14900) * C804 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C51032 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C803) +
              (C14901 + C14902) * C50869) *
                 C51045 +
             ((C8202 * C1307 + C51044 * C1311 + C8203 * C2846 +
               C50938 * C2849) *
                  C804 -
              ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
              (C8202 * C1312 + C51044 * C1319 + C8203 * C2850 +
               C50938 * C2855) *
                  C50869) *
                 C50966) *
                C2447 +
            ((C14887 * C804 -
              ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
              C14888 * C50869) *
                 C51045 +
             ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C296 +
          ((((C14207 * C804 -
              ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
              C14208 * C50869) *
                 C51045 +
             (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
              C14206 * C50869) *
                 C50966) *
                C2447 +
            ((C14619 * C804 -
              ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
              C14620 * C50869) *
                 C51045 +
             ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
              C14894 * C804 - C14893 * C50869) *
                 C51045 +
             (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C2447 +
            (((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
              (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                 C51045 +
             ((C9199 + C9200) * C803 + (C9201 + C9202) * C51032 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C804 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C8202 * C490 + C51044 * C500 + C8203 * C969 + C50938 * C974) *
                  C118 +
              (C8202 * C501 + C51044 * C520 + C8203 * C975 + C50938 * C984) *
                  C50805) *
                 C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             ((C8638 + C8637) * C118 + (C8640 + C8639) * C50805) * C50966) *
                C50757) *
               C293 -
           ((((C9198 + C9197) * C50805 + (C9196 + C9195) * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C8203 * C1659 + C50938 * C1666 + C8202 * C975 + C51044 * C984) *
                  C50805 +
              (C8203 * C1654 + C50938 * C1658 + C8202 * C969 + C51044 * C974) *
                  C118) *
                 C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C294 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C8202 * C1654 + C51044 * C1658 + C8203 * C3416 +
               C50938 * C3419) *
                  C118 +
              (C8202 * C1659 + C51044 * C1666 + C8203 * C3420 +
               C50938 * C3425) *
                  C50805) *
                 C50966) *
                C2447 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C51045 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             ((C9195 + C9196) * C118 + (C9197 + C9198) * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            (((C8639 + C8640) * C50805 + (C8637 + C8638) * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C293 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C51045) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51045) *
                C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C8202 * C490 + C51044 * C500 + C8203 * C969 + C50938 * C974) *
                 C118 +
             (C8202 * C501 + C51044 * C520 + C8203 * C975 + C50938 * C984) *
                 C50805) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
            ((C8638 + C8637) * C118 + (C8640 + C8639) * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C8966 * C50805 + C8965 * C118) * C50966 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
               C50757 +
           (((C8639 + C8640) * C50805 + (C8637 + C8638) * C118) * C50966 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
               C2447) *
              C50790 * C114 +
          ((C8261 * C51045 +
            ((C8646 + C8645) * C118 + (C8648 + C8647) * C50805) * C50966) *
               C2447 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C51045 +
            ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                 C50805 +
             (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                 C118) *
                C50966 +
            ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C51045) *
               C50757 +
           (((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C50966 +
            C8262 * C51045) *
               C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C487 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C484 -
             (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
             (C14223 + C14224) * C489 + (C14225 + C14226) * C486) *
                C51045 +
            ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
             (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
             (C8202 * C1968 + C51044 * C1972 + C8203 * C4737 + C50938 * C4741) *
                 C489 +
             (C8202 * C1973 + C51044 * C1980 + C8203 * C4743 + C50938 * C4749) *
                 C486) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C487 + (C8239 + C8240) * C484 - C14203 * C488 -
             C14204 * C485 + C14205 * C489 + C14206 * C486) *
                C51045 +
            (C14207 * C487 + C14208 * C484 - C14209 * C488 - C14210 * C485 +
             (C14227 + C14228) * C489 + (C14229 + C14230) * C486) *
                C50966) *
               C50757) *
              C50790 * C296 +
          (((C14207 * C488 - ((C8240 + C8239) * C484 + (C8238 + C8237) * C487) +
             C14208 * C485 - C14209 * C489 - C14210 * C486) *
                C51045 +
            (C14205 * C488 - (C14204 * C484 + C14203 * C487) + C14206 * C485 -
             (C14228 + C14227) * C489 - (C14230 + C14229) * C486) *
                C50966) *
               C2447 +
           (((C8646 + C8645) * C488 -
             ((C8244 + C8243) * C484 + (C8242 + C8241) * C487) +
             (C8648 + C8647) * C485 - (C8650 + C8649) * C489 -
             (C8652 + C8651) * C486) *
                C51045 +
            ((C8649 + C8650) * C488 - (C8966 * C484 + C8965 * C487) +
             (C8651 + C8652) * C485 -
             (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                 C489 -
             (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                 C486) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 - C14203 * C804 -
             C14204 * C50869) *
                C51045 +
            (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C51074 +
          (((C14207 * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             C14208 * C50869) *
                C51045 +
            (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
             C14206 * C50869) *
                C50966) *
               C2447 +
           ((C14619 * C804 -
             ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
             C14620 * C50869) *
                C51045 +
            ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C51075 +
          ((C8983 * C51045 +
            (C14619 * C803 + C14620 * C51032 - (C8650 + C8649) * C804 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C2447 +
           (((C8248 + C8247) * C803 + (C8246 + C8245) * C51032 -
             (C8979 + C8978) * C804 - (C8981 + C8980) * C50869) *
                C51045 +
            ((C8978 + C8979) * C803 + (C8980 + C8981) * C51032 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C804 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C8202 * C490 + C51044 * C500 + C8203 * C969 + C50938 * C974) *
                 C118 +
             (C8202 * C501 + C51044 * C520 + C8203 * C975 + C50938 * C984) *
                 C50805) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
            ((C8638 + C8637) * C118 + (C8640 + C8639) * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C8966 * C50805 + C8965 * C118) * C50966 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
               C50757 +
           (((C8639 + C8640) * C50805 + (C8637 + C8638) * C118) * C50966 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
               C2447) *
              C50790 * C114 +
          ((C8261 * C51045 +
            ((C8646 + C8645) * C118 + (C8648 + C8647) * C50805) * C50966) *
               C2447 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C51045 +
            ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                 C50805 +
             (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                 C118) *
                C50966 +
            ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C51045) *
               C50757 +
           (((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C50966 +
            C8262 * C51045) *
               C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C8202 * C490 + C51044 * C500 + C8203 * C969 + C50938 * C974) *
                  C118 +
              (C8202 * C501 + C51044 * C520 + C8203 * C975 + C50938 * C984) *
                  C50805) *
                 C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             ((C8638 + C8637) * C118 + (C8640 + C8639) * C50805) * C50966) *
                C50757) *
               C293 -
           ((((C9198 + C9197) * C50805 + (C9196 + C9195) * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C8203 * C1659 + C50938 * C1666 + C8202 * C975 + C51044 * C984) *
                  C50805 +
              (C8203 * C1654 + C50938 * C1658 + C8202 * C969 + C51044 * C974) *
                  C118) *
                 C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C294 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C8202 * C1654 + C51044 * C1658 + C8203 * C3416 +
               C50938 * C3419) *
                  C118 +
              (C8202 * C1659 + C51044 * C1666 + C8203 * C3420 +
               C50938 * C3425) *
                  C50805) *
                 C50966) *
                C2447 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C51045 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             ((C9195 + C9196) * C118 + (C9197 + C9198) * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            (((C8639 + C8640) * C50805 + (C8637 + C8638) * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C293 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C51045) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51045) *
                C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C51076 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C51077 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C8202 * C1654 + C51044 * C1658 + C8203 * C3416 +
               C50938 * C3419) *
                  C118 +
              (C8202 * C1659 + C51044 * C1666 + C8203 * C3420 +
               C50938 * C3425) *
                  C50805) *
                 C50966) *
                C2447 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C51045 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C1423) *
              C51023 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C51077 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C51076 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C51045) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51045) *
                C2447) *
               C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 - C14203 * C804 -
             C14204 * C50869) *
                C51045 +
            (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C51076 +
          ((((C14899 + C14900) * C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C14901 + C14902) * C50869) *
                C51045 +
            ((C15434 + C15433) * C804 -
             ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C2447 +
           ((C14887 * C804 -
             ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
             C14888 * C50869) *
                C51045 +
            ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C51077 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C803 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C51032 -
             (C16091 + C16092) * C804 - (C16093 + C16094) * C50869) *
                C51045 +
            ((C16092 + C16091) * C803 + (C16094 + C16093) * C51032 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C804 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C2447 +
           (((C8451 + C8452) * C803 + (C8453 + C8454) * C51032 -
             (C13990 + C13989) * C804 - (C13992 + C13991) * C50869) *
                C51045 +
            ((C13989 + C13990) * C803 + (C13991 + C13992) * C51032 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C804 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C14893 * C50805 + C14894 * C118) * C50966 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
               C50757 +
           (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51045) *
               C2447) *
              C1189 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C51045 +
            ((C8202 * C1654 + C51044 * C1658 + C8203 * C3416 + C50938 * C3419) *
                 C118 +
             (C8202 * C1659 + C51044 * C1666 + C8203 * C3420 + C50938 * C3425) *
                 C50805) *
                C50966) *
               C2447 +
           (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C51045 +
            ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C8203 * C4343 + C50938 * C4345 + C8202 * C3422 + C51044 * C3426) *
                 C50805 +
             (C8203 * C4339 + C50938 * C4342 + C8202 * C3417 + C51044 * C3421) *
                 C118) *
                C50966 +
            ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                 C50805 +
             (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                 C118) *
                C51045) *
               C50757 +
           (((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                 C50805 +
             (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                 C118) *
                C50966 +
            ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                 C50805 +
             (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                 C118) *
                C51045) *
               C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C50841) *
              C1119 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C1117) *
              C1120 +
          (((C8261 * C51045 + (C14619 * C118 + C14620 * C50805) * C50966) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C51045 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C51045) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C51045) *
                C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C487 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C484 -
             (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
             (C14223 + C14224) * C489 + (C14225 + C14226) * C486) *
                C51045 +
            ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
             (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
             (C8202 * C1968 + C51044 * C1972 + C8203 * C4737 + C50938 * C4741) *
                 C489 +
             (C8202 * C1973 + C51044 * C1980 + C8203 * C4743 + C50938 * C4749) *
                 C486) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C487 + (C8239 + C8240) * C484 - C14203 * C488 -
             C14204 * C485 + C14205 * C489 + C14206 * C486) *
                C51045 +
            (C14207 * C487 + C14208 * C484 - C14209 * C488 - C14210 * C485 +
             (C14227 + C14228) * C489 + (C14229 + C14230) * C486) *
                C50966) *
               C50757) *
              C1117 +
          ((((C14899 + C14900) * C488 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C484 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C487) +
             (C14901 + C14902) * C485 - (C15433 + C15434) * C489 -
             (C15435 + C15436) * C486) *
                C51045 +
            ((C15434 + C15433) * C488 -
             ((C14902 + C14901) * C484 + (C14900 + C14899) * C487) +
             (C15436 + C15435) * C485 -
             (C8203 * C4736 + C50938 * C4740 + C8202 * C4737 + C51044 * C4741) *
                 C489 -
             (C8203 * C4742 + C50938 * C4748 + C8202 * C4743 + C51044 * C4749) *
                 C486) *
                C50966) *
               C2447 +
           ((C14887 * C488 - ((C8447 + C8448) * C484 + (C8449 + C8450) * C487) +
             C14888 * C485 - (C14904 + C14903) * C489 -
             (C14906 + C14905) * C486) *
                C51045 +
            ((C14903 + C14904) * C488 - (C14893 * C484 + C14894 * C487) +
             (C14905 + C14906) * C485 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C489 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C486) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C803 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C51032 -
              (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                 C51045 +
             ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
              (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                 C50966) *
                C2447 +
            (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
              C14203 * C804 - C14204 * C50869) *
                 C51045 +
             (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C14899 + C14900) * C804 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C51032 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C803) +
              (C14901 + C14902) * C50869) *
                 C51045 +
             ((C15434 + C15433) * C804 -
              ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
              (C15436 + C15435) * C50869) *
                 C50966) *
                C2447 +
            ((C14887 * C804 -
              ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
              C14888 * C50869) *
                 C51045 +
             ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C14207 * C804 -
              ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
              C14208 * C50869) *
                 C51045 +
             (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
              C14206 * C50869) *
                 C50966) *
                C2447 +
            ((C14619 * C804 -
              ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
              C14620 * C50869) *
                 C51045 +
             ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
              C14894 * C804 - C14893 * C50869) *
                 C51045 +
             (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C2447 +
            (((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
              (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                 C51045 +
             ((C9199 + C9200) * C803 + (C9201 + C9202) * C51032 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C804 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C51045) *
                C2447) *
               C50841) *
              C1119 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51045 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C2447 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C51045 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C51045) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51045) *
                C2447) *
               C1117) *
              C1120 +
          (((C8261 * C51045 + (C14619 * C118 + C14620 * C50805) * C50966) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C51045 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C51045) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C51045) *
                C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C51045 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C14893 * C50805 + C14894 * C118) * C50966 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C51045) *
               C50757 +
           (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51045) *
               C2447) *
              C1189 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C51045 +
            ((C8202 * C1654 + C51044 * C1658 + C8203 * C3416 + C50938 * C3419) *
                 C118 +
             (C8202 * C1659 + C51044 * C1666 + C8203 * C3420 + C50938 * C3425) *
                 C50805) *
                C50966) *
               C2447 +
           (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C51045 +
            ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C8203 * C4343 + C50938 * C4345 + C8202 * C3422 + C51044 * C3426) *
                 C50805 +
             (C8203 * C4339 + C50938 * C4342 + C8202 * C3417 + C51044 * C3421) *
                 C118) *
                C50966 +
            ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                 C50805 +
             (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                 C118) *
                C51045) *
               C50757 +
           (((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                 C50805 +
             (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                 C118) *
                C50966 +
            ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                 C50805 +
             (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                 C118) *
                C51045) *
               C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C1770 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C1768 -
              (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                 C51045 +
             ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
              (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                 C50966) *
                C2447 +
            (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
              C14203 * C1771 - C14204 * C50869) *
                 C51045 +
             (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C14899 + C14900) * C1771 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C1768 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C1770) +
              (C14901 + C14902) * C50869) *
                 C51045 +
             ((C15434 + C15433) * C1771 -
              ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
              (C15436 + C15435) * C50869) *
                 C50966) *
                C2447 +
            ((C14887 * C1771 -
              ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
              C14888 * C50869) *
                 C51045 +
             ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C14207 * C1771 -
              ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
              C14208 * C50869) *
                 C51045 +
             (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
              C14206 * C50869) *
                 C50966) *
                C2447 +
            ((C14619 * C1771 -
              ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
              C14620 * C50869) *
                 C51045 +
             ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C8450 + C8449) * C1770 + (C8448 + C8447) * C1768 -
              C14894 * C1771 - C14893 * C50869) *
                 C51045 +
             (C14887 * C1770 + C14888 * C1768 - (C14904 + C14903) * C1771 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C2447 +
            (((C8446 + C8445) * C1770 + (C8444 + C8443) * C1768 -
              (C9200 + C9199) * C1771 - (C9202 + C9201) * C50869) *
                 C51045 +
             ((C9199 + C9200) * C1770 + (C9201 + C9202) * C1768 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C1771 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C2227 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51078 -
             (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
             (C14223 + C14224) * C2229 + (C14225 + C14226) * C2226) *
                C51045 +
            ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
             (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
             (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
             C14203 * C2228 - C14204 * C51079 + C14205 * C2229 +
             C14206 * C2226) *
                C51045 +
            (C14207 * C2227 + C14208 * C51078 - C14209 * C2228 -
             C14210 * C51079 + (C14227 + C14228) * C2229 +
             (C14229 + C14230) * C2226) *
                C50966) *
               C50757) *
              C51031 +
          ((((C14899 + C14900) * C2228 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51078 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C2227) +
             (C14901 + C14902) * C51079 - (C15433 + C15434) * C2229 -
             (C15435 + C15436) * C2226) *
                C51045 +
            ((C15434 + C15433) * C2228 -
             ((C14902 + C14901) * C51078 + (C14900 + C14899) * C2227) +
             (C15436 + C15435) * C51079 -
             (C8203 * C4736 + C50938 * C4740 + C8202 * C4737 + C51044 * C4741) *
                 C2229 -
             (C8203 * C4742 + C50938 * C4748 + C8202 * C4743 + C51044 * C4749) *
                 C2226) *
                C50966) *
               C2447 +
           ((C14887 * C2228 -
             ((C8447 + C8448) * C51078 + (C8449 + C8450) * C2227) +
             C14888 * C51079 - (C14904 + C14903) * C2229 -
             (C14906 + C14905) * C2226) *
                C51045 +
            ((C14903 + C14904) * C2228 - (C14893 * C51078 + C14894 * C2227) +
             (C14905 + C14906) * C51079 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C2229 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C2226) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C51045 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C14899 + C14900) * C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C14901 + C14902) * C50869) *
                C51045 +
            ((C15434 + C15433) * C1771 -
             ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C2447 +
           ((C14887 * C1771 -
             ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
             C14888 * C50869) *
                C51045 +
            ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C1770 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C1768 -
             (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
                C51045 +
            ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C1771 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C2447 +
           (((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
             (C13990 + C13989) * C1771 - (C13992 + C13991) * C50869) *
                C51045 +
            ((C13989 + C13990) * C1770 + (C13991 + C13992) * C1768 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C1771 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C51045 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C14207 * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             C14208 * C50869) *
                C51045 +
            (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
             C14206 * C50869) *
                C50966) *
               C2447 +
           ((C14619 * C1771 -
             ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
             C14620 * C50869) *
                C51045 +
            ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C10231 * C51045 +
            (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C2447 +
           (((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
             (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
                C51045 +
            ((C8978 + C8979) * C1770 + (C8980 + C8981) * C1768 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C1771 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1964 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1960 -
            (C14219 + C14220) * C1965 - (C14221 + C14222) * C1961 +
            (C14223 + C14224) * C1966 + (C14225 + C14226) * C1962 -
            (C16621 + C16622) * C1967 - (C16623 + C16624) * C1963) *
               C51045 +
           ((C14220 + C14219) * C1964 + (C14222 + C14221) * C1960 -
            (C14224 + C14223) * C1965 - (C14226 + C14225) * C1961 +
            (C16622 + C16621) * C1966 + (C16624 + C16623) * C1962 -
            (C8203 * C6661 + C50938 * C6663 + C8202 * C5669 + C51044 * C5672) *
                C1967 -
            (C8203 * C6664 + C50938 * C6667 + C8202 * C5673 + C51044 * C5678) *
                C1963) *
               C50966) *
              C2447 +
          (((C8237 + C8238) * C1964 + (C8239 + C8240) * C1960 - C14203 * C1965 -
            C14204 * C1961 + C14205 * C1966 + C14206 * C1962 -
            (C14228 + C14227) * C1967 - (C14230 + C14229) * C1963) *
               C51045 +
           (C14207 * C1964 + C14208 * C1960 - C14209 * C1965 - C14210 * C1961 +
            (C14227 + C14228) * C1966 + (C14229 + C14230) * C1962 -
            (C8203 * C6662 + C50938 * C6665 + C8202 * C5670 + C51044 * C5674) *
                C1967 -
            (C8203 * C6666 + C50938 * C6668 + C8202 * C5675 + C51044 * C5679) *
                C1963) *
               C50966) *
              C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C2227 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51078 -
             (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
             (C14223 + C14224) * C2229 + (C14225 + C14226) * C2226) *
                C51045 +
            ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
             (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
             (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
             C14203 * C2228 - C14204 * C51079 + C14205 * C2229 +
             C14206 * C2226) *
                C51045 +
            (C14207 * C2227 + C14208 * C51078 - C14209 * C2228 -
             C14210 * C51079 + (C14227 + C14228) * C2229 +
             (C14229 + C14230) * C2226) *
                C50966) *
               C50757) *
              C50790 * C51023 +
          (((C14207 * C2228 -
             ((C8240 + C8239) * C51078 + (C8238 + C8237) * C2227) +
             C14208 * C51079 - C14209 * C2229 - C14210 * C2226) *
                C51045 +
            (C14205 * C2228 - (C14204 * C51078 + C14203 * C2227) +
             C14206 * C51079 - (C14228 + C14227) * C2229 -
             (C14230 + C14229) * C2226) *
                C50966) *
               C2447 +
           ((C14619 * C2228 -
             ((C8244 + C8243) * C51078 + (C8242 + C8241) * C2227) +
             C14620 * C51079 - (C8650 + C8649) * C2229 -
             (C8652 + C8651) * C2226) *
                C51045 +
            ((C8649 + C8650) * C2228 - (C8966 * C51078 + C8965 * C2227) +
             (C8651 + C8652) * C51079 -
             (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                 C2229 -
             (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                 C2226) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C51045 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C14207 * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             C14208 * C50869) *
                C51045 +
            (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
             C14206 * C50869) *
                C50966) *
               C2447 +
           ((C14619 * C1771 -
             ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
             C14620 * C50869) *
                C51045 +
            ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C10231 * C51045 +
            (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C2447 +
           (((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
             (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
                C51045 +
            ((C8978 + C8979) * C1770 + (C8980 + C8981) * C1768 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C1771 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C51045 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C2447 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C51045 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C14899 + C14900) * C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C14901 + C14902) * C50869) *
                C51045 +
            ((C15434 + C15433) * C1771 -
             ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C2447 +
           ((C14887 * C1771 -
             ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
             C14888 * C50869) *
                C51045 +
            ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C1770 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C1768 -
             (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
                C51045 +
            ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C1771 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C2447 +
           (((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
             (C13990 + C13989) * C1771 - (C13992 + C13991) * C50869) *
                C51045 +
            ((C13989 + C13990) * C1770 + (C13991 + C13992) * C1768 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C1771 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C51031 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C51074 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C51031) *
              C51075 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C51031 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C51031 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C50841) *
              C51074 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C50841 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C51031) *
              C51075 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
            (C186 + C187) * C50902 * C111) *
               C51031 -
           (((C117 * C688 + C50886 * C690) * C50805 +
             (C117 * C687 + C50886 * C689) * C118) *
                C50902 * C111 +
            (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             (C5712 * C118 + C5713 * C50805) * C5337 +
             (C5714 * C118 + C5715 * C50805) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C51031 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            (((C117 * C1312 + C50886 * C1319) * C50805 +
              (C117 * C1307 + C50886 * C1311) * C118) *
                 C5338 +
             ((C117 * C975 + C50886 * C984) * C50805 +
              (C117 * C969 + C50886 * C974) * C118) *
                 C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C50841) *
              C51074 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C5876 + C5877) * C5337 +
             (C5884 + C5885) * C5338) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C51031) *
              C51075 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50757) *
               C51031 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C5338 +
             (C1013 * C50805 + C1012 * C118) * C5337 + C692 * C5336) *
                C50757 +
            ((C5885 + C5884) * C5338 + (C5877 + C5876) * C5337 + C693 * C5336) *
                C2447) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C804 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
             (C2883 + C2884 + C2885) * C804 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C804 -
             ((C2689 + C2690 + C2691) * C51032 +
              (C2692 + C2693 + C2694) * C803) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C296 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C804 -
             ((C2495 + C2496 + C2497) * C51032 +
              (C2498 + C2499 + C2500) * C803) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C803 + (C3056 + C3057 + C3058) * C51032 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C804 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 -
             (C117 * C490 + C50886 * C500) * C804 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
            C839 * C111) *
               C51031 +
           (((C117 * C969 + C50886 * C974) * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
            (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
            (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
               C50841) *
              C296 +
          (((C812 - (C811 + C810) + C813) * C50902 * C108 +
            (C816 - (C815 + C814) + C817) * C50902 * C109 +
            (C820 - (C819 + C818) + C821) * C50902 * C110 +
            (C834 - (C824 + C825) + C835) * C50902 * C111) *
               C51031 +
           ((C993 + C992 - C1014 - C1015) * C50902 * C108 +
            (C999 + C998 - C1016 - C1017) * C50902 * C109 +
            (C1005 + C1004 - C1018 - C1019) * C50902 * C110 +
            (C700 * C803 + C701 * C51032 -
             (C117 * C973 + C50886 * C982) * C804 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C5336 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C5337 +
             (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                 C5338) *
                C2447 +
            ((C810 + C811 - C812 - C813) * C5336 +
             (C6032 + C6033 - C6034 - C6035) * C5337 +
             (C6036 + C6037 - C6038 - C6039) * C5338) *
                C50757) *
               C51031 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C5336 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C5337 +
             ((C117 * C4737 + C50886 * C4741) * C804 -
              (C6267 * C51032 + C6266 * C803) +
              (C117 * C4743 + C50886 * C4749) * C50869) *
                 C5338) *
                C2447 +
            ((C1014 - (C992 + C993) + C1015) * C5336 +
             (C6254 - (C6255 + C6256) + C6257) * C5337 +
             (C6270 - (C6260 + C6261) + C6271) * C5338) *
                C50757) *
               C50841) *
              C296 +
          ((((C812 - (C811 + C810) + C813) * C5336 +
             (C6034 - (C6033 + C6032) + C6035) * C5337 +
             (C6038 - (C6037 + C6036) + C6039) * C5338) *
                C2447 +
            ((C816 - (C815 + C814) + C817) * C5336 +
             (C6040 - (C6041 + C6042) + C6043) * C5337 +
             (C6044 - (C6045 + C6046) + C6047) * C5338) *
                C50757) *
               C51031 +
           (((C993 + C992 - C1014 - C1015) * C5336 +
             (C6256 + C6255 - C6254 - C6257) * C5337 +
             (C6261 + C6260 - C6270 - C6271) * C5338) *
                C2447 +
            ((C999 + C998 - C1016 - C1017) * C5336 +
             (C1010 * C803 + C1011 * C51032 - C5882 * C804 - C5883 * C50869) *
                 C5337 +
             (C5882 * C803 + C5883 * C51032 -
              (C117 * C6241 + C50886 * C6242) * C804 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C5338) *
                C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50886 * C126) * C118 +
                (C117 * C127 + C50886 * C140) * C50805) *
                   C50902 * C108 +
               (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
                  C50790 * C113 -
              (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
               (C179 + C178) * C50902 * C108) *
                  C50790 * C114 +
              (C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
               (C186 + C187) * C50902 * C111) *
                  C50790 * C115 -
              (((C117 * C138 + C50886 * C146) * C50805 +
                (C117 * C125 + C50886 * C139) * C118) *
                   C50902 * C111 +
               (C187 + C186) * C50902 * C110 + C194 * C109 + C195 * C108) *
                  C50790 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C118 +
                 (C117 * C127 + C50886 * C140) * C50805) *
                    C50902 * C108 +
                (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
                   C293 -
               ((C375 + C376) * C50902 * C111 + (C377 + C378) * C50902 * C110 +
                (C379 + C380) * C50902 * C109 +
                ((C117 * C314 + C50886 * C331) * C50805 +
                 (C117 * C301 + C50886 * C315) * C118) *
                    C50902 * C108) *
                   C294 +
               (((C117 * C302 + C50886 * C316) * C118 +
                 (C117 * C317 + C50886 * C332) * C50805) *
                    C50902 * C108 +
                (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
                (C385 + C386) * C50902 * C111) *
                   C295) *
                  C296 +
              (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
                (C376 + C375) * C50902 * C110 +
                ((C117 * C306 + C50886 * C324) * C118 +
                 (C117 * C325 + C50886 * C336) * C50805) *
                    C50902 * C111) *
                   C294 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
                (C179 + C178) * C50902 * C108) *
                   C293 -
               (((C117 * C326 + C50886 * C337) * C50805 +
                 (C117 * C307 + C50886 * C327) * C118) *
                    C50902 * C111 +
                (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
                (C382 + C381) * C50902 * C108) *
                   C295) *
                  C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 -
            (C117 * C490 + C50886 * C500) * C488 -
            (C117 * C501 + C50886 * C520) * C485 +
            (C117 * C491 + C50886 * C502) * C489 +
            (C117 * C503 + C50886 * C521) * C486) *
               C50902 * C108 +
           (C531 + C532 - C573 - C574 + C575 + C576) * C50902 * C109 +
           (C541 + C542 - C577 - C578 + C579 + C580) * C50902 * C110 +
           (C551 + C552 - C581 - C582 + C583 + C584) * C50902 * C111) *
              C50790 * C296 +
          ((C573 - (C532 + C531) + C574 - C575 - C576) * C50902 * C108 +
           (C577 - (C542 + C541) + C578 - C579 - C580) * C50902 * C109 +
           (C581 - (C552 + C551) + C582 - C583 - C584) * C50902 * C110 +
           ((C117 * C498 + C50886 * C516) * C488 - (C174 * C484 + C175 * C487) +
            (C117 * C517 + C50886 * C528) * C485 -
            (C117 * C499 + C50886 * C518) * C489 -
            (C117 * C519 + C50886 * C529) * C486) *
               C50902 * C111) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C50790 * C113 -
          (((C2495 + C2496 + C2497) * C50805 + (C2498 + C2499 + C2500) * C118) *
               C50902 * C50757 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C50902 * C2447) *
              C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50805) *
               C50902 * C50757) *
              C50790 * C115 -
          (((C2451 * C326 + C2446 * C337 + C2450 * C325 + C2445 * C336 +
             C2449 * C134 + C2444 * C144) *
                C50805 +
            (C2451 * C307 + C2446 * C327 + C2450 * C306 + C2445 * C324 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50902 * C50757 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C50902 * C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C293 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C2449 * C299 + C2444 * C311 + C2450 * C304 + C2445 * C320 +
              C2451 * C1194 + C2446 * C1200) *
                 C118 +
             (C2449 * C310 + C2444 * C329 + C2450 * C321 + C2445 * C334 +
              C2451 * C1199 + C2446 * C1206) *
                 C50805) *
                C50902 * C50757) *
               C294 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C293 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C488 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C485 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C489 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C486) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C487 + (C2492 + C2493 + C2494) * C484 -
            (C2883 + C2884 + C2885) * C488 - (C2886 + C2887 + C2888) * C485 +
            (C2889 + C2890 + C2891) * C489 + (C2892 + C2893 + C2894) * C486) *
               C50902 * C50757) *
              C50790 * C296 +
          (((C2885 + C2884 + C2883) * C488 -
            ((C2494 + C2493 + C2492) * C484 + (C2491 + C2490 + C2489) * C487) +
            (C2888 + C2887 + C2886) * C485 - (C2891 + C2890 + C2889) * C489 -
            (C2894 + C2893 + C2892) * C486) *
               C50902 * C2447 +
           ((C2449 * C494 + C2444 * C508 + C2450 * C971 + C2445 * C978 +
             C2451 * C1656 + C2446 * C1662) *
                C488 -
            ((C2495 + C2496 + C2497) * C484 + (C2498 + C2499 + C2500) * C487) +
            (C2449 * C509 + C2444 * C524 + C2450 * C979 + C2445 * C986 +
             C2451 * C1663 + C2446 * C1668) *
                C485 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C489 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C486) *
               C50902 * C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C5336 +
            ((C117 * C490 + C50886 * C500) * C118 +
             (C117 * C501 + C50886 * C520) * C50805) *
                C5337 +
            ((C117 * C491 + C50886 * C502) * C118 +
             (C117 * C503 + C50886 * C521) * C50805) *
                C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50757) *
              C50790 * C113 -
          (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
            (C181 + C180) * C5336) *
               C50757 +
           ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
            (C179 + C178) * C5336) *
               C2447) *
              C50790 * C114 +
          ((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
               C2447 +
           (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
               C50757) *
              C50790 * C115 -
          ((((C117 * C519 + C50886 * C529) * C50805 +
             (C117 * C499 + C50886 * C518) * C118) *
                C5338 +
            (C831 * C50805 + C830 * C118) * C5337 + C190 * C5336) *
               C50757 +
           ((C5351 + C5350) * C5338 + (C5349 + C5348) * C5337 + C191 * C5336) *
               C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             ((C117 * C490 + C50886 * C500) * C118 +
              (C117 * C501 + C50886 * C520) * C50805) *
                 C5337 +
             ((C117 * C491 + C50886 * C502) * C118 +
              (C117 * C503 + C50886 * C521) * C50805) *
                 C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C293 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            (((C117 * C1312 + C50886 * C1319) * C50805 +
              (C117 * C1307 + C50886 * C1311) * C118) *
                 C5338 +
             ((C117 * C975 + C50886 * C984) * C50805 +
              (C117 * C969 + C50886 * C974) * C118) *
                 C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C5336 +
             ((C117 * C1654 + C50886 * C1658) * C118 +
              (C117 * C1659 + C50886 * C1666) * C50805) *
                 C5337 +
             ((C117 * C2846 + C50886 * C2849) * C118 +
              (C117 * C2850 + C50886 * C2855) * C50805) *
                 C5338) *
                C2447 +
            ((C381 + C382) * C5336 + (C5520 + C5521) * C5337 +
             (C5522 + C5523) * C5338) *
                C50757) *
               C295) *
              C296 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C1010 * C118 + C1011 * C50805) * C5337 +
             ((C117 * C1309 + C50886 * C1315) * C118 +
              (C117 * C1316 + C50886 * C1321) * C50805) *
                 C5338) *
                C50757) *
               C294 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C293 -
           ((((C117 * C2854 + C50886 * C2857) * C50805 +
              (C117 * C2848 + C50886 * C2853) * C118) *
                 C5338 +
             ((C117 * C1663 + C50886 * C1668) * C50805 +
              (C117 * C1656 + C50886 * C1662) * C118) *
                 C5337 +
             (C384 + C383) * C5336) *
                C50757 +
            ((C5523 + C5522) * C5338 + (C5521 + C5520) * C5337 +
             (C382 + C381) * C5336) *
                C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C5336 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C5337 +
            (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
             (C117 * C5669 + C50886 * C5672) * C489 +
             (C117 * C5673 + C50886 * C5678) * C486) *
                C5338) *
               C2447 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C5336 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C5337 +
            (C5702 + C5703 - C5726 - C5727 + C5728 + C5729) * C5338) *
               C50757) *
              C50790 * C296 +
          (((C573 - (C532 + C531) + C574 - C575 - C576) * C5336 +
            (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C5337 +
            (C5726 - (C5703 + C5702) + C5727 - C5728 - C5729) * C5338) *
               C2447 +
           ((C577 - (C542 + C541) + C578 - C579 - C580) * C5336 +
            (C567 * C488 - (C566 * C484 + C565 * C487) + C568 * C485 -
             C5722 * C489 - C5723 * C486) *
                C5337 +
            (C5722 * C488 - (C568 * C484 + C567 * C487) + C5723 * C485 -
             (C117 * C5671 + C50886 * C5676) * C489 -
             (C117 * C5677 + C50886 * C5680) * C486) *
                C5338) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C804 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
            (C2883 + C2884 + C2885) * C804 - (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C51074 +
          (((C2885 + C2884 + C2883) * C804 -
            ((C2494 + C2493 + C2492) * C51032 +
             (C2491 + C2490 + C2489) * C803) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C804 -
            ((C2495 + C2496 + C2497) * C51032 +
             (C2498 + C2499 + C2500) * C803) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C51075 +
          (((C2500 + C2499 + C2498) * C803 + (C2497 + C2496 + C2495) * C51032 -
            (C3219 + C3218 + C3217) * C804 - (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C803 + (C2504 + C2505 + C2506) * C51032 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C804 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 -
            (C117 * C490 + C50886 * C500) * C804 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
           C839 * C111) *
              C50790 * C51074 +
          ((C812 - (C811 + C810) + C813) * C50902 * C108 +
           (C816 - (C815 + C814) + C817) * C50902 * C109 +
           (C820 - (C819 + C818) + C821) * C50902 * C110 +
           (C834 - (C824 + C825) + C835) * C50902 * C111) *
              C50790 * C51075 +
          (C838 * C108 + C839 * C109 +
           (C825 + C824 - C834 - C835) * C50902 * C110 +
           (C176 * C803 + C177 * C51032 - (C117 * C805 + C50886 * C806) * C804 -
            (C117 * C807 + C50886 * C808) * C50869) *
               C50902 * C111) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C5337 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C810 + C811 - C812 - C813) * C5336 +
            (C6032 + C6033 - C6034 - C6035) * C5337 +
            (C6036 + C6037 - C6038 - C6039) * C5338) *
               C50757) *
              C50790 * C51074 +
          (((C812 - (C811 + C810) + C813) * C5336 +
            (C6034 - (C6033 + C6032) + C6035) * C5337 +
            (C6038 - (C6037 + C6036) + C6039) * C5338) *
               C2447 +
           ((C816 - (C815 + C814) + C817) * C5336 +
            (C6040 - (C6041 + C6042) + C6043) * C5337 +
            (C6044 - (C6045 + C6046) + C6047) * C5338) *
               C50757) *
              C50790 * C51075 +
          ((C836 * C5336 + (C6042 + C6041 - C6040 - C6043) * C5337 +
            (C6046 + C6045 - C6044 - C6047) * C5338) *
               C2447 +
           (C837 * C5336 +
            (C569 * C803 + C570 * C51032 - C571 * C804 - C572 * C50869) *
                C5337 +
            (C571 * C803 + C572 * C51032 -
             (C117 * C1971 + C50886 * C1978) * C804 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C5338) *
               C50757) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C293 -
           ((C375 + C376) * C50902 * C111 + (C377 + C378) * C50902 * C110 +
            (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C294 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C50902 * C108 +
            (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
            (C385 + C386) * C50902 * C111) *
               C295) *
              C296 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 +
            ((C117 * C306 + C50886 * C324) * C118 +
             (C117 * C325 + C50886 * C336) * C50805) *
                C50902 * C111) *
               C294 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C293 -
           (((C117 * C326 + C50886 * C337) * C50805 +
             (C117 * C307 + C50886 * C327) * C118) *
                C50902 * C111 +
            (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
            (C382 + C381) * C50902 * C108) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C50790 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
           (C179 + C178) * C50902 * C108) *
              C50790 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
           (C186 + C187) * C50902 * C111) *
              C50790 * C115 -
          (((C117 * C138 + C50886 * C146) * C50805 +
            (C117 * C125 + C50886 * C139) * C118) *
               C50902 * C111 +
           (C187 + C186) * C50902 * C110 + C194 * C109 + C195 * C108) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C50790 * C113 -
          (((C2495 + C2496 + C2497) * C50805 + (C2498 + C2499 + C2500) * C118) *
               C50902 * C50757 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C50902 * C2447) *
              C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50805) *
               C50902 * C50757) *
              C50790 * C115 -
          (((C2451 * C326 + C2446 * C337 + C2450 * C325 + C2445 * C336 +
             C2449 * C134 + C2444 * C144) *
                C50805 +
            (C2451 * C307 + C2446 * C327 + C2450 * C306 + C2445 * C324 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50902 * C50757 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C50902 * C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C293 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C2449 * C299 + C2444 * C311 + C2450 * C304 + C2445 * C320 +
              C2451 * C1194 + C2446 * C1200) *
                 C118 +
             (C2449 * C310 + C2444 * C329 + C2450 * C321 + C2445 * C334 +
              C2451 * C1199 + C2446 * C1206) *
                 C50805) *
                C50902 * C50757) *
               C294 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C293 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C5336 +
            ((C117 * C490 + C50886 * C500) * C118 +
             (C117 * C501 + C50886 * C520) * C50805) *
                C5337 +
            ((C117 * C491 + C50886 * C502) * C118 +
             (C117 * C503 + C50886 * C521) * C50805) *
                C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50757) *
              C50790 * C113 -
          (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
            (C181 + C180) * C5336) *
               C50757 +
           ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
            (C179 + C178) * C5336) *
               C2447) *
              C50790 * C114 +
          ((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
               C2447 +
           (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
               C50757) *
              C50790 * C115 -
          ((((C117 * C519 + C50886 * C529) * C50805 +
             (C117 * C499 + C50886 * C518) * C118) *
                C5338 +
            (C831 * C50805 + C830 * C118) * C5337 + C190 * C5336) *
               C50757 +
           ((C5351 + C5350) * C5338 + (C5349 + C5348) * C5337 + C191 * C5336) *
               C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             ((C117 * C490 + C50886 * C500) * C118 +
              (C117 * C501 + C50886 * C520) * C50805) *
                 C5337 +
             ((C117 * C491 + C50886 * C502) * C118 +
              (C117 * C503 + C50886 * C521) * C50805) *
                 C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C293 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            (((C117 * C1312 + C50886 * C1319) * C50805 +
              (C117 * C1307 + C50886 * C1311) * C118) *
                 C5338 +
             ((C117 * C975 + C50886 * C984) * C50805 +
              (C117 * C969 + C50886 * C974) * C118) *
                 C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C5336 +
             ((C117 * C1654 + C50886 * C1658) * C118 +
              (C117 * C1659 + C50886 * C1666) * C50805) *
                 C5337 +
             ((C117 * C2846 + C50886 * C2849) * C118 +
              (C117 * C2850 + C50886 * C2855) * C50805) *
                 C5338) *
                C2447 +
            ((C381 + C382) * C5336 + (C5520 + C5521) * C5337 +
             (C5522 + C5523) * C5338) *
                C50757) *
               C295) *
              C296 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C1010 * C118 + C1011 * C50805) * C5337 +
             ((C117 * C1309 + C50886 * C1315) * C118 +
              (C117 * C1316 + C50886 * C1321) * C50805) *
                 C5338) *
                C50757) *
               C294 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C293 -
           ((((C117 * C2854 + C50886 * C2857) * C50805 +
              (C117 * C2848 + C50886 * C2853) * C118) *
                 C5338 +
             ((C117 * C1663 + C50886 * C1668) * C50805 +
              (C117 * C1656 + C50886 * C1662) * C118) *
                 C5337 +
             (C384 + C383) * C5336) *
                C50757 +
            ((C5523 + C5522) * C5338 + (C5521 + C5520) * C5337 +
             (C382 + C381) * C5336) *
                C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C51076 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C51077 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C1423) *
              C51023 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C51077 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C51076 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C51076 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C51077 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C50902 * C108 +
            (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
            (C385 + C386) * C50902 * C111) *
               C1423) *
              C51023 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C51077 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C51076 -
           (((C117 * C326 + C50886 * C337) * C50805 +
             (C117 * C307 + C50886 * C327) * C118) *
                C50902 * C111 +
            (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
            (C382 + C381) * C50902 * C108) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             (C5712 * C118 + C5713 * C50805) * C5337 +
             (C5714 * C118 + C5715 * C50805) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C51076 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C5338 +
             (C6265 * C50805 + C6264 * C118) * C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C51077 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C5336 +
             ((C117 * C1654 + C50886 * C1658) * C118 +
              (C117 * C1659 + C50886 * C1666) * C50805) *
                 C5337 +
             ((C117 * C2846 + C50886 * C2849) * C118 +
              (C117 * C2850 + C50886 * C2855) * C50805) *
                 C5338) *
                C2447 +
            ((C381 + C382) * C5336 + (C5520 + C5521) * C5337 +
             (C5522 + C5523) * C5338) *
                C50757) *
               C1423) *
              C51023 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C5876 + C5877) * C5337 +
             (C5884 + C5885) * C5338) *
                C50757) *
               C51077 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C51076 -
           ((((C117 * C2854 + C50886 * C2857) * C50805 +
              (C117 * C2848 + C50886 * C2853) * C118) *
                 C5338 +
             ((C117 * C1663 + C50886 * C1668) * C50805 +
              (C117 * C1656 + C50886 * C1662) * C118) *
                 C5337 +
             (C384 + C383) * C5336) *
                C50757 +
            ((C5523 + C5522) * C5338 + (C5521 + C5520) * C5337 +
             (C382 + C381) * C5336) *
                C2447) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C804 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
            (C2883 + C2884 + C2885) * C804 - (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C51076 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C804 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51032 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C803) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C804 -
            ((C2689 + C2690 + C2691) * C51032 +
             (C2692 + C2693 + C2694) * C803) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C51077 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C803 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C51032 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C804 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C803 + (C2698 + C2699 + C2700) * C51032 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C804 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 -
            (C117 * C490 + C50886 * C500) * C804 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
           C839 * C111) *
              C51076 +
          (((C117 * C969 + C50886 * C974) * C804 -
            ((C117 * C314 + C50886 * C331) * C51032 +
             (C117 * C301 + C50886 * C315) * C803) +
            (C117 * C975 + C50886 * C984) * C50869) *
               C50902 * C108 +
           (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
           (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
           (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
              C51077 +
          (((C117 * C302 + C50886 * C316) * C803 +
            (C117 * C317 + C50886 * C332) * C51032 -
            (C117 * C1654 + C50886 * C1658) * C804 -
            (C117 * C1659 + C50886 * C1666) * C50869) *
               C50902 * C108 +
           (C369 * C803 + C370 * C51032 -
            (C117 * C1655 + C50886 * C1660) * C804 -
            (C117 * C1661 + C50886 * C1667) * C50869) *
               C50902 * C109 +
           (C371 * C803 + C372 * C51032 -
            (C117 * C1656 + C50886 * C1662) * C804 -
            (C117 * C1663 + C50886 * C1668) * C50869) *
               C50902 * C110 +
           (C373 * C803 + C374 * C51032 -
            (C117 * C1657 + C50886 * C1664) * C804 -
            (C117 * C1665 + C50886 * C1669) * C50869) *
               C50902 * C111) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C5337 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C810 + C811 - C812 - C813) * C5336 +
            (C6032 + C6033 - C6034 - C6035) * C5337 +
            (C6036 + C6037 - C6038 - C6039) * C5338) *
               C50757) *
              C51076 +
          (((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C5336 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C5337 +
            (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                C5338) *
               C2447 +
           ((C1014 - (C992 + C993) + C1015) * C5336 +
            (C6254 - (C6255 + C6256) + C6257) * C5337 +
            (C6270 - (C6260 + C6261) + C6271) * C5338) *
               C50757) *
              C51077 +
          ((((C117 * C302 + C50886 * C316) * C803 +
             (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
             C7171 * C50869) *
                C5336 +
            (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
                C5337 +
            (C7172 * C803 + C7173 * C51032 -
             (C117 * C4736 + C50886 * C4740) * C804 -
             (C117 * C4742 + C50886 * C4748) * C50869) *
                C5338) *
               C2447 +
           ((C369 * C803 + C370 * C51032 - C5514 * C804 - C5515 * C50869) *
                C5336 +
            (C5514 * C803 + C5515 * C51032 - C5516 * C804 - C5517 * C50869) *
                C5337 +
            (C5516 * C803 + C5517 * C51032 -
             (C117 * C4738 + C50886 * C4744) * C804 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C5338) *
               C50757) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C118 +
                 (C117 * C127 + C50886 * C140) * C50805) *
                    C50902 * C108 +
                (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
                   C1117 -
               (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
                ((C117 * C314 + C50886 * C331) * C50805 +
                 (C117 * C301 + C50886 * C315) * C118) *
                    C50902 * C108) *
                   C50841) *
                  C1119 +
              (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
                (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
                   C50841 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
                (C179 + C178) * C50902 * C108) *
                   C1117) *
                  C1120 +
              ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
                (C186 + C187) * C50902 * C111) *
                   C1117 -
               (((C117 * C688 + C50886 * C690) * C50805 +
                 (C117 * C687 + C50886 * C689) * C118) *
                    C50902 * C111 +
                (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
                   C50841) *
                  C1121) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50886 * C126) * C118 +
                (C117 * C127 + C50886 * C140) * C50805) *
                   C50902 * C108 +
               (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
                  C1188 -
              (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
               ((C117 * C314 + C50886 * C331) * C50805 +
                (C117 * C301 + C50886 * C315) * C118) *
                   C50902 * C108) *
                  C1189 +
              (((C117 * C302 + C50886 * C316) * C118 +
                (C117 * C317 + C50886 * C332) * C50805) *
                   C50902 * C108 +
               (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
               (C385 + C386) * C50902 * C111) *
                  C1190 -
              (((C117 * C1197 + C50886 * C1205) * C50805 +
                (C117 * C1193 + C50886 * C1198) * C118) *
                   C50902 * C111 +
               ((C117 * C1199 + C50886 * C1206) * C50805 +
                (C117 * C1194 + C50886 * C1200) * C118) *
                   C50902 * C110 +
               ((C117 * C1201 + C50886 * C1207) * C50805 +
                (C117 * C1195 + C50886 * C1202) * C118) *
                   C50902 * C109 +
               ((C117 * C1203 + C50886 * C1208) * C50805 +
                (C117 * C1196 + C50886 * C1204) * C118) *
                   C50902 * C108) *
                  C1191) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 -
            (C117 * C490 + C50886 * C500) * C488 -
            (C117 * C501 + C50886 * C520) * C485 +
            (C117 * C491 + C50886 * C502) * C489 +
            (C117 * C503 + C50886 * C521) * C486) *
               C50902 * C108 +
           (C531 + C532 - C573 - C574 + C575 + C576) * C50902 * C109 +
           (C541 + C542 - C577 - C578 + C579 + C580) * C50902 * C110 +
           (C551 + C552 - C581 - C582 + C583 + C584) * C50902 * C111) *
              C1117 +
          (((C117 * C969 + C50886 * C974) * C488 -
            ((C117 * C314 + C50886 * C331) * C484 +
             (C117 * C301 + C50886 * C315) * C487) +
            (C117 * C975 + C50886 * C984) * C485 -
            (C117 * C1307 + C50886 * C1311) * C489 -
            (C117 * C1312 + C50886 * C1319) * C486) *
               C50902 * C108 +
           (C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
            (C117 * C1308 + C50886 * C1313) * C489 -
            (C117 * C1314 + C50886 * C1320) * C486) *
               C50902 * C109 +
           (C1010 * C488 - (C365 * C484 + C366 * C487) + C1011 * C485 -
            (C117 * C1309 + C50886 * C1315) * C489 -
            (C117 * C1316 + C50886 * C1321) * C486) *
               C50902 * C110 +
           (C1012 * C488 - (C363 * C484 + C364 * C487) + C1013 * C485 -
            (C117 * C1310 + C50886 * C1317) * C489 -
            (C117 * C1318 + C50886 * C1322) * C486) *
               C50902 * C111) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C1188 -
          (((C2689 + C2690 + C2691) * C50805 + (C2692 + C2693 + C2694) * C118) *
               C50902 * C50757 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C50902 * C2447) *
              C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C118 + (C2698 + C2699 + C2700) * C50805) *
               C50902 * C50757) *
              C1190 -
          (((C2451 * C3692 + C2446 * C3696 + C2450 * C2658 + C2445 * C2662 +
             C2449 * C1201 + C2444 * C1207) *
                C50805 +
            (C2451 * C3690 + C2446 * C3693 + C2450 * C2653 + C2445 * C2657 +
             C2449 * C1195 + C2444 * C1202) *
                C118) *
               C50902 * C50757 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C50902 * C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C488 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C485 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C489 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C486) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C487 + (C2492 + C2493 + C2494) * C484 -
            (C2883 + C2884 + C2885) * C488 - (C2886 + C2887 + C2888) * C485 +
            (C2889 + C2890 + C2891) * C489 + (C2892 + C2893 + C2894) * C486) *
               C50902 * C50757) *
              C1117 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C488 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C484 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C487) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C485 -
            (C2451 * C3844 + C2446 * C3846 + C2450 * C2846 + C2445 * C2849 +
             C2449 * C1307 + C2444 * C1311) *
                C489 -
            (C2451 * C3847 + C2446 * C3850 + C2450 * C2850 + C2445 * C2855 +
             C2449 * C1312 + C2444 * C1319) *
                C486) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C488 -
            ((C2689 + C2690 + C2691) * C484 + (C2692 + C2693 + C2694) * C487) +
            (C3444 + C3445 + C3446) * C485 -
            (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
             C2449 * C1308 + C2444 * C1313) *
                C489 -
            (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
             C2449 * C1314 + C2444 * C1320) *
                C486) *
               C50902 * C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             (C5712 * C118 + C5713 * C50805) * C5337 +
             (C5714 * C118 + C5715 * C50805) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C1117 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C5338 +
             (C6265 * C50805 + C6264 * C118) * C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C5876 + C5877) * C5337 +
             (C5884 + C5885) * C5338) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C1117) *
              C1120 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50757) *
               C1117 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C5338 +
             (C1013 * C50805 + C1012 * C118) * C5337 + C692 * C5336) *
                C50757 +
            ((C5885 + C5884) * C5338 + (C5877 + C5876) * C5337 + C693 * C5336) *
                C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C5336 +
            (C5712 * C118 + C5713 * C50805) * C5337 +
            (C5714 * C118 + C5715 * C50805) * C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50757) *
              C1188 -
          (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
            (C379 + C380) * C5336) *
               C50757 +
           ((C6267 * C50805 + C6266 * C118) * C5338 +
            (C6265 * C50805 + C6264 * C118) * C5337 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C5336) *
               C2447) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C5336 +
            ((C117 * C1654 + C50886 * C1658) * C118 +
             (C117 * C1659 + C50886 * C1666) * C50805) *
                C5337 +
            ((C117 * C2846 + C50886 * C2849) * C118 +
             (C117 * C2850 + C50886 * C2855) * C50805) *
                C5338) *
               C2447 +
           ((C381 + C382) * C5336 + (C5520 + C5521) * C5337 +
            (C5522 + C5523) * C5338) *
               C50757) *
              C1190 -
          ((((C117 * C3849 + C50886 * C3851) * C50805 +
             (C117 * C3845 + C50886 * C3848) * C118) *
                C5338 +
            ((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C5337 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C5336) *
               C50757 +
           (((C117 * C3847 + C50886 * C3850) * C50805 +
             (C117 * C3844 + C50886 * C3846) * C118) *
                C5338 +
            ((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C5337 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C5336) *
               C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C5336 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C5337 +
            (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
             (C117 * C5669 + C50886 * C5672) * C489 +
             (C117 * C5673 + C50886 * C5678) * C486) *
                C5338) *
               C2447 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C5336 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C5337 +
            (C5702 + C5703 - C5726 - C5727 + C5728 + C5729) * C5338) *
               C50757) *
              C1117 +
          (((C6264 * C488 -
             ((C117 * C314 + C50886 * C331) * C484 +
              (C117 * C301 + C50886 * C315) * C487) +
             C6265 * C485 - C6266 * C489 - C6267 * C486) *
                C5336 +
            (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
             C6674 * C489 - C6675 * C486) *
                C5337 +
            (C6674 * C488 - (C6267 * C484 + C6266 * C487) + C6675 * C485 -
             (C117 * C6661 + C50886 * C6663) * C489 -
             (C117 * C6664 + C50886 * C6667) * C486) *
                C5338) *
               C2447 +
           ((C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
             C5513 * C489 - C5512 * C486) *
                C5336 +
            (C5513 * C488 - (C1009 * C484 + C1008 * C487) + C5512 * C485 -
             C6268 * C489 - C6269 * C486) *
                C5337 +
            (C6268 * C488 - (C5512 * C484 + C5513 * C487) + C6269 * C485 -
             (C117 * C6662 + C50886 * C6665) * C489 -
             (C117 * C6666 + C50886 * C6668) * C486) *
                C5338) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C804 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
             (C2883 + C2884 + C2885) * C804 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C1117 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C804 -
             ((C2689 + C2690 + C2691) * C51032 +
              (C2692 + C2693 + C2694) * C803) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C804 -
             ((C2495 + C2496 + C2497) * C51032 +
              (C2498 + C2499 + C2500) * C803) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C1117 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C803 + (C3056 + C3057 + C3058) * C51032 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C804 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 -
             (C117 * C490 + C50886 * C500) * C804 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
            C839 * C111) *
               C1117 +
           (((C117 * C969 + C50886 * C974) * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
            (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
            (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
               C50841) *
              C51023 +
          (((C812 - (C811 + C810) + C813) * C50902 * C108 +
            (C816 - (C815 + C814) + C817) * C50902 * C109 +
            (C820 - (C819 + C818) + C821) * C50902 * C110 +
            (C834 - (C824 + C825) + C835) * C50902 * C111) *
               C1117 +
           ((C993 + C992 - C1014 - C1015) * C50902 * C108 +
            (C999 + C998 - C1016 - C1017) * C50902 * C109 +
            (C1005 + C1004 - C1018 - C1019) * C50902 * C110 +
            (C700 * C803 + C701 * C51032 -
             (C117 * C973 + C50886 * C982) * C804 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C5336 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C5337 +
             (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                 C5338) *
                C2447 +
            ((C810 + C811 - C812 - C813) * C5336 +
             (C6032 + C6033 - C6034 - C6035) * C5337 +
             (C6036 + C6037 - C6038 - C6039) * C5338) *
                C50757) *
               C1117 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C5336 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C5337 +
             (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                 C5338) *
                C2447 +
            ((C1014 - (C992 + C993) + C1015) * C5336 +
             (C6254 - (C6255 + C6256) + C6257) * C5337 +
             (C6270 - (C6260 + C6261) + C6271) * C5338) *
                C50757) *
               C50841) *
              C51023 +
          ((((C812 - (C811 + C810) + C813) * C5336 +
             (C6034 - (C6033 + C6032) + C6035) * C5337 +
             (C6038 - (C6037 + C6036) + C6039) * C5338) *
                C2447 +
            ((C816 - (C815 + C814) + C817) * C5336 +
             (C6040 - (C6041 + C6042) + C6043) * C5337 +
             (C6044 - (C6045 + C6046) + C6047) * C5338) *
                C50757) *
               C1117 +
           (((C993 + C992 - C1014 - C1015) * C5336 +
             (C6256 + C6255 - C6254 - C6257) * C5337 +
             (C6261 + C6260 - C6270 - C6271) * C5338) *
                C2447 +
            ((C999 + C998 - C1016 - C1017) * C5336 +
             (C1010 * C803 + C1011 * C51032 - C5882 * C804 - C5883 * C50869) *
                 C5337 +
             (C5882 * C803 + C5883 * C51032 -
              (C117 * C6241 + C50886 * C6242) * C804 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C5338) *
                C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C1188 -
          (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
           ((C117 * C314 + C50886 * C331) * C50805 +
            (C117 * C301 + C50886 * C315) * C118) *
               C50902 * C108) *
              C1189 +
          (((C117 * C302 + C50886 * C316) * C118 +
            (C117 * C317 + C50886 * C332) * C50805) *
               C50902 * C108 +
           (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
           (C385 + C386) * C50902 * C111) *
              C1190 -
          (((C117 * C1197 + C50886 * C1205) * C50805 +
            (C117 * C1193 + C50886 * C1198) * C118) *
               C50902 * C111 +
           ((C117 * C1199 + C50886 * C1206) * C50805 +
            (C117 * C1194 + C50886 * C1200) * C118) *
               C50902 * C110 +
           ((C117 * C1201 + C50886 * C1207) * C50805 +
            (C117 * C1195 + C50886 * C1202) * C118) *
               C50902 * C109 +
           ((C117 * C1203 + C50886 * C1208) * C50805 +
            (C117 * C1196 + C50886 * C1204) * C118) *
               C50902 * C108) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C1117 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C50841) *
              C1119 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C50841 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C1117) *
              C1120 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
            (C186 + C187) * C50902 * C111) *
               C1117 -
           (((C117 * C688 + C50886 * C690) * C50805 +
             (C117 * C687 + C50886 * C689) * C118) *
                C50902 * C111 +
            (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C1188 -
          (((C2689 + C2690 + C2691) * C50805 + (C2692 + C2693 + C2694) * C118) *
               C50902 * C50757 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C50902 * C2447) *
              C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C118 + (C2698 + C2699 + C2700) * C50805) *
               C50902 * C50757) *
              C1190 -
          (((C2451 * C3692 + C2446 * C3696 + C2450 * C2658 + C2445 * C2662 +
             C2449 * C1201 + C2444 * C1207) *
                C50805 +
            (C2451 * C3690 + C2446 * C3693 + C2450 * C2653 + C2445 * C2657 +
             C2449 * C1195 + C2444 * C1202) *
                C118) *
               C50902 * C50757 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C50902 * C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C5336 +
             (C5712 * C118 + C5713 * C50805) * C5337 +
             (C5714 * C118 + C5715 * C50805) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50757) *
               C1117 -
           (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
             (C379 + C380) * C5336) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C5338 +
             (C6265 * C50805 + C6264 * C118) * C5337 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C5336) *
                C2447) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C5336 + (C5503 + C5502) * C5337 +
             (C5519 + C5518) * C5338) *
                C2447 +
            ((C378 + C377) * C5336 + (C5876 + C5877) * C5337 +
             (C5884 + C5885) * C5338) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50757 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C1117) *
              C1120 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50757) *
               C1117 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C5338 +
             (C1013 * C50805 + C1012 * C118) * C5337 + C692 * C5336) *
                C50757 +
            ((C5885 + C5884) * C5338 + (C5877 + C5876) * C5337 + C693 * C5336) *
                C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C5336 +
            (C5712 * C118 + C5713 * C50805) * C5337 +
            (C5714 * C118 + C5715 * C50805) * C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50757) *
              C1188 -
          (((C5518 + C5519) * C5338 + (C5502 + C5503) * C5337 +
            (C379 + C380) * C5336) *
               C50757 +
           ((C6267 * C50805 + C6266 * C118) * C5338 +
            (C6265 * C50805 + C6264 * C118) * C5337 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C5336) *
               C2447) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C5336 +
            ((C117 * C1654 + C50886 * C1658) * C118 +
             (C117 * C1659 + C50886 * C1666) * C50805) *
                C5337 +
            ((C117 * C2846 + C50886 * C2849) * C118 +
             (C117 * C2850 + C50886 * C2855) * C50805) *
                C5338) *
               C2447 +
           ((C381 + C382) * C5336 + (C5520 + C5521) * C5337 +
            (C5522 + C5523) * C5338) *
               C50757) *
              C1190 -
          ((((C117 * C3849 + C50886 * C3851) * C50805 +
             (C117 * C3845 + C50886 * C3848) * C118) *
                C5338 +
            ((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C5337 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C5336) *
               C50757 +
           (((C117 * C3847 + C50886 * C3850) * C50805 +
             (C117 * C3844 + C50886 * C3846) * C118) *
                C5338 +
            ((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C5337 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C5336) *
               C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C1770 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C1768 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C1771 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
             (C2883 + C2884 + C2885) * C1771 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C1771 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C1768 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C1770) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C1771 -
             ((C2689 + C2690 + C2691) * C1768 +
              (C2692 + C2693 + C2694) * C1770) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C1771 -
             ((C2494 + C2493 + C2492) * C1768 +
              (C2491 + C2490 + C2489) * C1770) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C1771 -
             ((C2495 + C2496 + C2497) * C1768 +
              (C2498 + C2499 + C2500) * C1770) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2694 + C2693 + C2692) * C1770 + (C2691 + C2690 + C2689) * C1768 -
             (C3443 + C3442 + C3441) * C1771 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C1770 + (C3056 + C3057 + C3058) * C1768 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C1771 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 -
             (C117 * C490 + C50886 * C500) * C1771 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
            C1796 * C111) *
               C51031 +
           (((C117 * C969 + C50886 * C974) * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C2115 - (C2116 + C2117) + C2118) * C50902 * C109 +
            (C2119 - (C2120 + C2121) + C2122) * C50902 * C110 +
            (C2123 - (C2124 + C2125) + C2126) * C50902 * C111) *
               C50841) *
              C51023 +
          (((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
            (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
            (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
            (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
               C51031 +
           ((C2117 + C2116 - C2115 - C2118) * C50902 * C108 +
            (C2121 + C2120 - C2119 - C2122) * C50902 * C109 +
            (C2125 + C2124 - C2123 - C2126) * C50902 * C110 +
            (C700 * C1770 + C701 * C1768 -
             (C117 * C973 + C50886 * C982) * C1771 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C1770 +
              (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
              C5713 * C50869) *
                 C5336 +
             (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                 C5337 +
             (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                 C5338) *
                C2447 +
            ((C1773 + C1774 - C1775 - C1776) * C5336 +
             (C7320 + C7321 - C7322 - C7323) * C5337 +
             (C7324 + C7325 - C7326 - C7327) * C5338) *
                C50757) *
               C51031 +
           (((C6264 * C1771 -
              ((C117 * C314 + C50886 * C331) * C1768 +
               (C117 * C301 + C50886 * C315) * C1770) +
              C6265 * C50869) *
                 C5336 +
             (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
              C6267 * C50869) *
                 C5337 +
             (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) +
              C6675 * C50869) *
                 C5338) *
                C2447 +
            ((C2115 - (C2116 + C2117) + C2118) * C5336 +
             (C7788 - (C7789 + C7790) + C7791) * C5337 +
             (C7792 - (C7793 + C7794) + C7795) * C5338) *
                C50757) *
               C50841) *
              C51023 +
          ((((C1775 - (C1774 + C1773) + C1776) * C5336 +
             (C7322 - (C7321 + C7320) + C7323) * C5337 +
             (C7326 - (C7325 + C7324) + C7327) * C5338) *
                C2447 +
            ((C1779 - (C1778 + C1777) + C1780) * C5336 +
             (C7328 - (C7329 + C7330) + C7331) * C5337 +
             (C7332 - (C7333 + C7334) + C7335) * C5338) *
                C50757) *
               C51031 +
           (((C2117 + C2116 - C2115 - C2118) * C5336 +
             (C7790 + C7789 - C7788 - C7791) * C5337 +
             (C7794 + C7793 - C7792 - C7795) * C5338) *
                C2447 +
            ((C2121 + C2120 - C2119 - C2122) * C5336 +
             (C1010 * C1770 + C1011 * C1768 - C5882 * C1771 - C5883 * C50869) *
                 C5337 +
             (C5882 * C1770 + C5883 * C1768 -
              (C117 * C6241 + C50886 * C6242) * C1771 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C5338) *
                C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C2228 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C51079 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C2229 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C2226) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C2227 + (C2492 + C2493 + C2494) * C51078 -
            (C2883 + C2884 + C2885) * C2228 - (C2886 + C2887 + C2888) * C51079 +
            (C2889 + C2890 + C2891) * C2229 + (C2892 + C2893 + C2894) * C2226) *
               C50902 * C50757) *
              C51031 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C2228 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51078 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C2227) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C51079 -
            (C2451 * C3844 + C2446 * C3846 + C2450 * C2846 + C2445 * C2849 +
             C2449 * C1307 + C2444 * C1311) *
                C2229 -
            (C2451 * C3847 + C2446 * C3850 + C2450 * C2850 + C2445 * C2855 +
             C2449 * C1312 + C2444 * C1319) *
                C2226) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C2228 -
            ((C2689 + C2690 + C2691) * C51078 +
             (C2692 + C2693 + C2694) * C2227) +
            (C3444 + C3445 + C3446) * C51079 -
            (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
             C2449 * C1308 + C2444 * C1313) *
                C2229 -
            (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
             C2449 * C1314 + C2444 * C1320) *
                C2226) *
               C50902 * C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 -
            (C117 * C490 + C50886 * C500) * C2228 -
            (C117 * C501 + C50886 * C520) * C51079 +
            (C117 * C491 + C50886 * C502) * C2229 +
            (C117 * C503 + C50886 * C521) * C2226) *
               C50902 * C108 +
           (C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C50902 * C109 +
           (C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C50902 * C110 +
           (C2243 + C2244 - C2245 - C2246 + C2247 + C2248) * C50902 * C111) *
              C51031 +
          (((C117 * C969 + C50886 * C974) * C2228 -
            ((C117 * C314 + C50886 * C331) * C51078 +
             (C117 * C301 + C50886 * C315) * C2227) +
            (C117 * C975 + C50886 * C984) * C51079 -
            (C117 * C1307 + C50886 * C1311) * C2229 -
            (C117 * C1312 + C50886 * C1319) * C2226) *
               C50902 * C108 +
           (C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
            (C117 * C1308 + C50886 * C1313) * C2229 -
            (C117 * C1314 + C50886 * C1320) * C2226) *
               C50902 * C109 +
           (C1010 * C2228 - (C365 * C51078 + C366 * C2227) + C1011 * C51079 -
            (C117 * C1309 + C50886 * C1315) * C2229 -
            (C117 * C1316 + C50886 * C1321) * C2226) *
               C50902 * C110 +
           (C1012 * C2228 - (C363 * C51078 + C364 * C2227) + C1013 * C51079 -
            (C117 * C1310 + C50886 * C1317) * C2229 -
            (C117 * C1318 + C50886 * C1322) * C2226) *
               C50902 * C111) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C5336 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C5337 +
            (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 - C5717 * C51079 +
             C7592 * C2229 + C7593 * C2226) *
                C5338) *
               C2447 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C5336 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C5337 +
            (C7948 + C7949 - C7950 - C7951 + C7952 + C7953) * C5338) *
               C50757) *
              C51031 +
          (((C6264 * C2228 -
             ((C117 * C314 + C50886 * C331) * C51078 +
              (C117 * C301 + C50886 * C315) * C2227) +
             C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
                C5336 +
            (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) + C6267 * C51079 -
             C6674 * C2229 - C6675 * C2226) *
                C5337 +
            (C6674 * C2228 - (C6267 * C51078 + C6266 * C2227) + C6675 * C51079 -
             (C117 * C6661 + C50886 * C6663) * C2229 -
             (C117 * C6664 + C50886 * C6667) * C2226) *
                C5338) *
               C2447 +
           ((C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
             C5513 * C2229 - C5512 * C2226) *
                C5336 +
            (C5513 * C2228 - (C1009 * C51078 + C1008 * C2227) + C5512 * C51079 -
             C6268 * C2229 - C6269 * C2226) *
                C5337 +
            (C6268 * C2228 - (C5512 * C51078 + C5513 * C2227) + C6269 * C51079 -
             (C117 * C6662 + C50886 * C6665) * C2229 -
             (C117 * C6666 + C50886 * C6668) * C2226) *
                C5338) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50886 * C126) * C1770 +
                (C117 * C127 + C50886 * C140) * C1768 -
                (C117 * C490 + C50886 * C500) * C1771 -
                (C117 * C501 + C50886 * C520) * C50869) *
                   C50902 * C108 +
               (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
               C1796 * C111) *
                  C50790 * C1119 +
              ((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
               (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
               (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
               (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
                  C50790 * C1120 +
              (C1795 * C108 + C1796 * C109 +
               (C1787 + C1786 - C1785 - C1788) * C50902 * C110 +
               (C176 * C1770 + C177 * C1768 -
                (C117 * C805 + C50886 * C806) * C1771 -
                (C117 * C807 + C50886 * C808) * C50869) *
                   C50902 * C111) *
                  C50790 * C1121) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50886 * C126) * C1770 +
                (C117 * C127 + C50886 * C140) * C1768 -
                (C117 * C490 + C50886 * C500) * C1771 -
                (C117 * C501 + C50886 * C520) * C50869) *
                   C50902 * C108 +
               (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
               C1796 * C111) *
                  C293 +
              (((C117 * C969 + C50886 * C974) * C1771 -
                ((C117 * C314 + C50886 * C331) * C1768 +
                 (C117 * C301 + C50886 * C315) * C1770) +
                (C117 * C975 + C50886 * C984) * C50869) *
                   C50902 * C108 +
               (C1008 * C1771 - (C367 * C1768 + C368 * C1770) +
                C1009 * C50869) *
                   C50902 * C109 +
               (C1010 * C1771 - (C365 * C1768 + C366 * C1770) +
                C1011 * C50869) *
                   C50902 * C110 +
               (C1012 * C1771 - (C363 * C1768 + C364 * C1770) +
                C1013 * C50869) *
                   C50902 * C111) *
                  C294 +
              (((C117 * C302 + C50886 * C316) * C1770 +
                (C117 * C317 + C50886 * C332) * C1768 -
                (C117 * C1654 + C50886 * C1658) * C1771 -
                (C117 * C1659 + C50886 * C1666) * C50869) *
                   C50902 * C108 +
               (C369 * C1770 + C370 * C1768 -
                (C117 * C1655 + C50886 * C1660) * C1771 -
                (C117 * C1661 + C50886 * C1667) * C50869) *
                   C50902 * C109 +
               (C371 * C1770 + C372 * C1768 -
                (C117 * C1656 + C50886 * C1662) * C1771 -
                (C117 * C1663 + C50886 * C1668) * C50869) *
                   C50902 * C110 +
               (C373 * C1770 + C374 * C1768 -
                (C117 * C1657 + C50886 * C1664) * C1771 -
                (C117 * C1665 + C50886 * C1669) * C50869) *
                   C50902 * C111) *
                  C295) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50886 * C126) * C1964 +
           (C117 * C127 + C50886 * C140) * C1960 -
           (C117 * C490 + C50886 * C500) * C1965 -
           (C117 * C501 + C50886 * C520) * C1961 +
           (C117 * C491 + C50886 * C502) * C1966 +
           (C117 * C503 + C50886 * C521) * C1962 -
           (C117 * C1968 + C50886 * C1972) * C1967 -
           (C117 * C1973 + C50886 * C1980) * C1963) *
              C50902 * C108 +
          (C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
           C563 * C1966 + C564 * C1962 -
           (C117 * C1969 + C50886 * C1974) * C1967 -
           (C117 * C1975 + C50886 * C1981) * C1963) *
              C50902 * C109 +
          (C170 * C1964 + C171 * C1960 - C565 * C1965 - C566 * C1961 +
           C567 * C1966 + C568 * C1962 -
           (C117 * C1970 + C50886 * C1976) * C1967 -
           (C117 * C1977 + C50886 * C1982) * C1963) *
              C50902 * C110 +
          (C172 * C1964 + C173 * C1960 - C569 * C1965 - C570 * C1961 +
           C571 * C1966 + C572 * C1962 -
           (C117 * C1971 + C50886 * C1978) * C1967 -
           (C117 * C1979 + C50886 * C1983) * C1963) *
              C50902 * C111) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C1771 -
            ((C2495 + C2496 + C2497) * C1768 +
             (C2498 + C2499 + C2500) * C1770) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C1770 + (C2504 + C2505 + C2506) * C1768 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C1771 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C293 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C1771 -
            ((C2689 + C2690 + C2691) * C1768 +
             (C2692 + C2693 + C2694) * C1770) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C1771 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C1770 + (C2698 + C2699 + C2700) * C1768 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C1771 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
            C2451 * C302 + C2446 * C316) *
               C1964 +
           (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
            C2451 * C317 + C2446 * C332) *
               C1960 -
           (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
            C2449 * C490 + C2444 * C500) *
               C1965 -
           (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
            C2449 * C501 + C2444 * C520) *
               C1961 +
           (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
            C2451 * C2846 + C2446 * C2849) *
               C1966 +
           (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
            C2451 * C2850 + C2446 * C2855) *
               C1962 -
           (C2451 * C4736 + C2446 * C4740 + C2450 * C4737 + C2445 * C4741 +
            C2449 * C1968 + C2444 * C1972) *
               C1967 -
           (C2451 * C4742 + C2446 * C4748 + C2450 * C4743 + C2445 * C4749 +
            C2449 * C1973 + C2444 * C1980) *
               C1963) *
              C50902 * C2447 +
          ((C2489 + C2490 + C2491) * C1964 + (C2492 + C2493 + C2494) * C1960 -
           (C2883 + C2884 + C2885) * C1965 - (C2886 + C2887 + C2888) * C1961 +
           (C2889 + C2890 + C2891) * C1966 + (C2892 + C2893 + C2894) * C1962 -
           (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
            C2449 * C1969 + C2444 * C1974) *
               C1967 -
           (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
            C2449 * C1975 + C2444 * C1981) *
               C1963) *
              C50902 * C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C5337 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C1773 + C1774 - C1775 - C1776) * C5336 +
            (C7320 + C7321 - C7322 - C7323) * C5337 +
            (C7324 + C7325 - C7326 - C7327) * C5338) *
               C50757) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C5336 +
            (C7322 - (C7321 + C7320) + C7323) * C5337 +
            (C7326 - (C7325 + C7324) + C7327) * C5338) *
               C2447 +
           ((C1779 - (C1778 + C1777) + C1780) * C5336 +
            (C7328 - (C7329 + C7330) + C7331) * C5337 +
            (C7332 - (C7333 + C7334) + C7335) * C5338) *
               C50757) *
              C50790 * C1120 +
          ((C1793 * C5336 + (C7330 + C7329 - C7328 - C7331) * C5337 +
            (C7334 + C7333 - C7332 - C7335) * C5338) *
               C2447 +
           (C1794 * C5336 +
            (C569 * C1770 + C570 * C1768 - C571 * C1771 - C572 * C50869) *
                C5337 +
            (C571 * C1770 + C572 * C1768 -
             (C117 * C1971 + C50886 * C1978) * C1771 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C5338) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C5337 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C1773 + C1774 - C1775 - C1776) * C5336 +
            (C7320 + C7321 - C7322 - C7323) * C5337 +
            (C7324 + C7325 - C7326 - C7327) * C5338) *
               C50757) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C5336 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C5337 +
            (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
                C5338) *
               C2447 +
           ((C2115 - (C2116 + C2117) + C2118) * C5336 +
            (C5513 * C1771 - (C1009 * C1768 + C1008 * C1770) + C5512 * C50869) *
                C5337 +
            (C6268 * C1771 - (C5512 * C1768 + C5513 * C1770) + C6269 * C50869) *
                C5338) *
               C50757) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C5336 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C5337 +
            (C7172 * C1770 + C7173 * C1768 -
             (C117 * C4736 + C50886 * C4740) * C1771 -
             (C117 * C4742 + C50886 * C4748) * C50869) *
                C5338) *
               C2447 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C5336 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C5337 +
            (C5516 * C1770 + C5517 * C1768 -
             (C117 * C4738 + C50886 * C4744) * C1771 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C5338) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1964 +
            (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
            C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
            C5717 * C1963) *
               C5336 +
           (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
            C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
               C5337 +
           (C5714 * C1964 + C5715 * C1960 - C5716 * C1965 - C5717 * C1961 +
            C7592 * C1966 + C7593 * C1962 -
            (C117 * C7579 + C50886 * C7581) * C1967 -
            (C117 * C7582 + C50886 * C7585) * C1963) *
               C5338) *
              C2447 +
          ((C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
            C563 * C1966 + C564 * C1962 - C5718 * C1967 - C5719 * C1963) *
               C5336 +
           (C561 * C1964 + C562 * C1960 - C563 * C1965 - C564 * C1961 +
            C5718 * C1966 + C5719 * C1962 - C5720 * C1967 - C5721 * C1963) *
               C5337 +
           (C563 * C1964 + C564 * C1960 - C5718 * C1965 - C5719 * C1961 +
            C5720 * C1966 + C5721 * C1962 -
            (C117 * C7580 + C50886 * C7583) * C1967 -
            (C117 * C7584 + C50886 * C7586) * C1963) *
               C5338) *
              C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C2228 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C51079 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C2229 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C2226) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C2227 + (C2492 + C2493 + C2494) * C51078 -
            (C2883 + C2884 + C2885) * C2228 - (C2886 + C2887 + C2888) * C51079 +
            (C2889 + C2890 + C2891) * C2229 + (C2892 + C2893 + C2894) * C2226) *
               C50902 * C50757) *
              C50790 * C51023 +
          (((C2885 + C2884 + C2883) * C2228 -
            ((C2494 + C2493 + C2492) * C51078 +
             (C2491 + C2490 + C2489) * C2227) +
            (C2888 + C2887 + C2886) * C51079 - (C2891 + C2890 + C2889) * C2229 -
            (C2894 + C2893 + C2892) * C2226) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C2228 -
            ((C2495 + C2496 + C2497) * C51078 +
             (C2498 + C2499 + C2500) * C2227) +
            (C3220 + C3221 + C3222) * C51079 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C2229 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C2226) *
               C50902 * C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 -
            (C117 * C490 + C50886 * C500) * C2228 -
            (C117 * C501 + C50886 * C520) * C51079 +
            (C117 * C491 + C50886 * C502) * C2229 +
            (C117 * C503 + C50886 * C521) * C2226) *
               C50902 * C108 +
           (C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C50902 * C109 +
           (C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C50902 * C110 +
           (C2243 + C2244 - C2245 - C2246 + C2247 + C2248) * C50902 * C111) *
              C50790 * C51023 +
          ((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C50902 * C108 +
           (C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C50902 * C109 +
           (C2245 - (C2244 + C2243) + C2246 - C2247 - C2248) * C50902 * C110 +
           (C830 * C2228 - (C174 * C51078 + C175 * C2227) + C831 * C51079 -
            (C117 * C499 + C50886 * C518) * C2229 -
            (C117 * C519 + C50886 * C529) * C2226) *
               C50902 * C111) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C5336 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C5337 +
            (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 - C5717 * C51079 +
             C7592 * C2229 + C7593 * C2226) *
                C5338) *
               C2447 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C5336 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C5337 +
            (C7948 + C7949 - C7950 - C7951 + C7952 + C7953) * C5338) *
               C50757) *
              C50790 * C51023 +
          (((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C5336 +
            (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C5337 +
            (C7950 - (C7949 + C7948) + C7951 - C7952 - C7953) * C5338) *
               C2447 +
           ((C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C5336 +
            (C567 * C2228 - (C566 * C51078 + C565 * C2227) + C568 * C51079 -
             C5722 * C2229 - C5723 * C2226) *
                C5337 +
            (C5722 * C2228 - (C568 * C51078 + C567 * C2227) + C5723 * C51079 -
             (C117 * C5671 + C50886 * C5676) * C2229 -
             (C117 * C5677 + C50886 * C5680) * C2226) *
                C5338) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C293 +
          (((C117 * C969 + C50886 * C974) * C1771 -
            ((C117 * C314 + C50886 * C331) * C1768 +
             (C117 * C301 + C50886 * C315) * C1770) +
            (C117 * C975 + C50886 * C984) * C50869) *
               C50902 * C108 +
           (C1008 * C1771 - (C367 * C1768 + C368 * C1770) + C1009 * C50869) *
               C50902 * C109 +
           (C1010 * C1771 - (C365 * C1768 + C366 * C1770) + C1011 * C50869) *
               C50902 * C110 +
           (C1012 * C1771 - (C363 * C1768 + C364 * C1770) + C1013 * C50869) *
               C50902 * C111) *
              C294 +
          (((C117 * C302 + C50886 * C316) * C1770 +
            (C117 * C317 + C50886 * C332) * C1768 -
            (C117 * C1654 + C50886 * C1658) * C1771 -
            (C117 * C1659 + C50886 * C1666) * C50869) *
               C50902 * C108 +
           (C369 * C1770 + C370 * C1768 -
            (C117 * C1655 + C50886 * C1660) * C1771 -
            (C117 * C1661 + C50886 * C1667) * C50869) *
               C50902 * C109 +
           (C371 * C1770 + C372 * C1768 -
            (C117 * C1656 + C50886 * C1662) * C1771 -
            (C117 * C1663 + C50886 * C1668) * C50869) *
               C50902 * C110 +
           (C373 * C1770 + C374 * C1768 -
            (C117 * C1657 + C50886 * C1664) * C1771 -
            (C117 * C1665 + C50886 * C1669) * C50869) *
               C50902 * C111) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C50790 * C1119 +
          ((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
           (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
           (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
           (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
              C50790 * C1120 +
          (C1795 * C108 + C1796 * C109 +
           (C1787 + C1786 - C1785 - C1788) * C50902 * C110 +
           (C176 * C1770 + C177 * C1768 -
            (C117 * C805 + C50886 * C806) * C1771 -
            (C117 * C807 + C50886 * C808) * C50869) *
               C50902 * C111) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C1771 -
            ((C2495 + C2496 + C2497) * C1768 +
             (C2498 + C2499 + C2500) * C1770) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C1770 + (C2504 + C2505 + C2506) * C1768 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C1771 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C293 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C1771 -
            ((C2689 + C2690 + C2691) * C1768 +
             (C2692 + C2693 + C2694) * C1770) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C1771 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C1770 + (C2698 + C2699 + C2700) * C1768 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C1771 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C5337 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C1773 + C1774 - C1775 - C1776) * C5336 +
            (C7320 + C7321 - C7322 - C7323) * C5337 +
            (C7324 + C7325 - C7326 - C7327) * C5338) *
               C50757) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C5336 +
            (C7322 - (C7321 + C7320) + C7323) * C5337 +
            (C7326 - (C7325 + C7324) + C7327) * C5338) *
               C2447 +
           ((C1779 - (C1778 + C1777) + C1780) * C5336 +
            (C7328 - (C7329 + C7330) + C7331) * C5337 +
            (C7332 - (C7333 + C7334) + C7335) * C5338) *
               C50757) *
              C50790 * C1120 +
          ((C1793 * C5336 + (C7330 + C7329 - C7328 - C7331) * C5337 +
            (C7334 + C7333 - C7332 - C7335) * C5338) *
               C2447 +
           (C1794 * C5336 +
            (C569 * C1770 + C570 * C1768 - C571 * C1771 - C572 * C50869) *
                C5337 +
            (C571 * C1770 + C572 * C1768 -
             (C117 * C1971 + C50886 * C1978) * C1771 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C5338) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C5336 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C5337 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C5338) *
               C2447 +
           ((C1773 + C1774 - C1775 - C1776) * C5336 +
            (C7320 + C7321 - C7322 - C7323) * C5337 +
            (C7324 + C7325 - C7326 - C7327) * C5338) *
               C50757) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C5336 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C5337 +
            (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
                C5338) *
               C2447 +
           ((C2115 - (C2116 + C2117) + C2118) * C5336 +
            (C5513 * C1771 - (C1009 * C1768 + C1008 * C1770) + C5512 * C50869) *
                C5337 +
            (C6268 * C1771 - (C5512 * C1768 + C5513 * C1770) + C6269 * C50869) *
                C5338) *
               C50757) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C5336 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C5337 +
            (C7172 * C1770 + C7173 * C1768 -
             (C117 * C4736 + C50886 * C4740) * C1771 -
             (C117 * C4742 + C50886 * C4748) * C50869) *
                C5338) *
               C2447 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C5336 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C5337 +
            (C5516 * C1770 + C5517 * C1768 -
             (C117 * C4738 + C50886 * C4744) * C1771 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C5338) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C51031 -
           (C11530 * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C50841) *
              C51074 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 + (C11527 + C11528) * C50966) * C8201) *
               C50841 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C51031) *
              C51075 +
          ((C11071 * C51072 +
            (C189 * C51045 + (C5348 + C5349) * C50966) * C51073 +
            ((C185 + C184) * C51045 + (C11067 + C11068) * C50966) * C8201) *
               C51031 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C51045) *
                C8201 +
            ((C11528 + C11527) * C50966 + C692 * C51045) * C51073 +
            C11530 * C51072) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C51045 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C51072 +
            ((C810 + C811 - C812 - C813) * C51045 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C51073 +
            C11686 * C8201) *
               C51031 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C51045 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C51072 +
            ((C1014 - (C992 + C993) + C1015) * C51045 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C51073 +
            ((C1016 - (C998 + C999) + C1017) * C51045 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C8201) *
               C50841) *
              C296 +
          ((((C812 - (C811 + C810) + C813) * C51045 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C51072 +
            ((C816 - (C815 + C814) + C817) * C51045 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C51073 +
            ((C820 - (C819 + C818) + C821) * C51045 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C8201) *
               C51031 +
           (((C993 + C992 - C1014 - C1015) * C51045 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C51072 +
            ((C999 + C998 - C1016 - C1017) * C51045 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C51073 +
            ((C1005 + C1004 - C1018 - C1019) * C51045 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C293 -
           (((C5877 + C5876) * C50966 + C693 * C51045) * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C51045 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C51072 +
            ((C381 + C382) * C51045 + (C5520 + C5521) * C50966) * C51073 +
            ((C383 + C384) * C51045 + (C11225 + C11226) * C50966) * C8201) *
               C295) *
              C296 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 +
             (C1012 * C118 + C1013 * C50805) * C50966) *
                C8201) *
               C294 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C293 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C51045) *
                C8201 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C51045) * C51073 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C51045) * C51072) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51045 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C51072 +
           ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
           C11071 * C8201) *
              C50790 * C113 -
          (C11072 * C8201 +
           ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
           ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
              C50790 * C114 +
          (C11071 * C51072 +
           (C189 * C51045 + (C5348 + C5349) * C50966) * C51073 +
           ((C185 + C184) * C51045 + (C11067 + C11068) * C50966) * C8201) *
              C50790 * C115 -
          ((((C117 * C807 + C50886 * C808) * C50805 +
             (C117 * C805 + C50886 * C806) * C118) *
                C50966 +
            (C187 + C186) * C51045) *
               C8201 +
           ((C11068 + C11067) * C50966 + C190 * C51045) * C51073 +
           C11072 * C51072) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C51045 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C51072 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C51045 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C51073 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C51045 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C8201) *
              C50790 * C296 +
          (((C573 - (C532 + C531) + C574 - C575 - C576) * C51045 +
            (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C50966) *
               C51072 +
           ((C577 - (C542 + C541) + C578 - C579 - C580) * C51045 +
            (C11375 - (C11374 + C11373) + C11376 - C11377 - C11378) * C50966) *
               C51073 +
           ((C581 - (C552 + C551) + C582 - C583 - C584) * C51045 +
            (C571 * C488 - (C570 * C484 + C569 * C487) + C572 * C485 -
             (C117 * C1971 + C50886 * C1978) * C489 -
             (C117 * C1979 + C50886 * C1983) * C486) *
                C50966) *
               C8201) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C810 + C811 - C812 - C813) * C51045 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C51073 +
           C11686 * C8201) *
              C50790 * C51074 +
          (((C812 - (C811 + C810) + C813) * C51045 +
            (C6034 - (C6033 + C6032) + C6035) * C50966) *
               C51072 +
           ((C816 - (C815 + C814) + C817) * C51045 +
            (C6040 - (C6041 + C6042) + C6043) * C50966) *
               C51073 +
           ((C820 - (C819 + C818) + C821) * C51045 +
            (C11679 - (C11680 + C11681) + C11682) * C50966) *
               C8201) *
              C50790 * C51075 +
          (C11686 * C51072 +
           (C837 * C51045 + (C11681 + C11680 - C11679 - C11682) * C50966) *
               C51073 +
           ((C825 + C824 - C834 - C835) * C51045 +
            (C830 * C803 + C831 * C51032 -
             (C117 * C499 + C50886 * C518) * C804 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C8201) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51045 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C51072 +
           ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
           C11071 * C8201) *
              C50790 * C113 -
          (C11072 * C8201 +
           ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
           ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
              C50790 * C114 +
          (C11071 * C51072 +
           (C189 * C51045 + (C5348 + C5349) * C50966) * C51073 +
           ((C185 + C184) * C51045 + (C11067 + C11068) * C50966) * C8201) *
              C50790 * C115 -
          ((((C117 * C807 + C50886 * C808) * C50805 +
             (C117 * C805 + C50886 * C806) * C118) *
                C50966 +
            (C187 + C186) * C51045) *
               C8201 +
           ((C11068 + C11067) * C50966 + C190 * C51045) * C51073 +
           C11072 * C51072) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C293 -
           (((C5877 + C5876) * C50966 + C693 * C51045) * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C51045 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C51072 +
            ((C381 + C382) * C51045 + (C5520 + C5521) * C50966) * C51073 +
            ((C383 + C384) * C51045 + (C11225 + C11226) * C50966) * C8201) *
               C295) *
              C296 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 +
             (C1012 * C118 + C1013 * C50805) * C50966) *
                C8201) *
               C294 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C293 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C51045) *
                C8201 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C51045) * C51073 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C51045) * C51072) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C51076 -
           (C11530 * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C51077 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C51045 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C51072 +
            ((C381 + C382) * C51045 + (C5520 + C5521) * C50966) * C51073 +
            ((C383 + C384) * C51045 + (C11225 + C11226) * C50966) * C8201) *
               C1423) *
              C51023 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 + (C11527 + C11528) * C50966) * C8201) *
               C51077 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C51076 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C51045) *
                C8201 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C51045) * C51073 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C51045) * C51072) *
               C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C810 + C811 - C812 - C813) * C51045 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C51073 +
           C11686 * C8201) *
              C51076 +
          (((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C51045 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C50966) *
               C51072 +
           ((C1014 - (C992 + C993) + C1015) * C51045 +
            (C6254 - (C6255 + C6256) + C6257) * C50966) *
               C51073 +
           ((C1016 - (C998 + C999) + C1017) * C51045 +
            (C11881 - (C11882 + C11883) + C11884) * C50966) *
               C8201) *
              C51077 +
          ((((C117 * C302 + C50886 * C316) * C803 +
             (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
             C7171 * C50869) *
                C51045 +
            (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
                C50966) *
               C51072 +
           ((C369 * C803 + C370 * C51032 - C5514 * C804 - C5515 * C50869) *
                C51045 +
            (C5514 * C803 + C5515 * C51032 - C5516 * C804 - C5517 * C50869) *
                C50966) *
               C51073 +
           ((C371 * C803 + C372 * C51032 - C11223 * C804 - C11224 * C50869) *
                C51045 +
            (C11223 * C803 + C11224 * C51032 -
             (C117 * C2848 + C50886 * C2853) * C804 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C8201) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51045 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C51072 +
           ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
           C11071 * C8201) *
              C1188 -
          (C11530 * C8201 +
           ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
           ((C6265 * C50805 + C6264 * C118) * C50966 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C51045) *
               C51072) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C51045 +
            (C7170 * C118 + C7171 * C50805) * C50966) *
               C51072 +
           ((C381 + C382) * C51045 + (C5520 + C5521) * C50966) * C51073 +
           ((C383 + C384) * C51045 + (C11225 + C11226) * C50966) * C8201) *
              C1190 -
          ((((C117 * C3424 + C50886 * C3427) * C50805 +
             (C117 * C3418 + C50886 * C3423) * C118) *
                C50966 +
            ((C117 * C1199 + C50886 * C1206) * C50805 +
             (C117 * C1194 + C50886 * C1200) * C118) *
                C51045) *
               C8201 +
           (((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C50966 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C51045) *
               C51073 +
           (((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C50966 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C51045) *
               C51072) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C1117 -
           (C11530 * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 + (C11527 + C11528) * C50966) * C8201) *
               C50841 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C1117) *
              C1120 +
          ((C11071 * C51072 +
            (C189 * C51045 + (C5348 + C5349) * C50966) * C51073 +
            ((C185 + C184) * C51045 + (C11067 + C11068) * C50966) * C8201) *
               C1117 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C51045) *
                C8201 +
            ((C11528 + C11527) * C50966 + C692 * C51045) * C51073 +
            C11530 * C51072) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C51045 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C51072 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C51045 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C51073 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C51045 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C8201) *
              C1117 +
          (((C6264 * C488 -
             ((C117 * C314 + C50886 * C331) * C484 +
              (C117 * C301 + C50886 * C315) * C487) +
             C6265 * C485 - C6266 * C489 - C6267 * C486) *
                C51045 +
            (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
             C6674 * C489 - C6675 * C486) *
                C50966) *
               C51072 +
           ((C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
             C5513 * C489 - C5512 * C486) *
                C51045 +
            (C5513 * C488 - (C1009 * C484 + C1008 * C487) + C5512 * C485 -
             C6268 * C489 - C6269 * C486) *
                C50966) *
               C51073 +
           ((C1010 * C488 - (C365 * C484 + C366 * C487) + C1011 * C485 -
             C5882 * C489 - C5883 * C486) *
                C51045 +
            (C5882 * C488 - (C1011 * C484 + C1010 * C487) + C5883 * C485 -
             (C117 * C6241 + C50886 * C6242) * C489 -
             (C117 * C6243 + C50886 * C6244) * C486) *
                C50966) *
               C8201) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C51045 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C51072 +
            ((C810 + C811 - C812 - C813) * C51045 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C51073 +
            C11686 * C8201) *
               C1117 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C51045 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C51072 +
            ((C1014 - (C992 + C993) + C1015) * C51045 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C51073 +
            ((C1016 - (C998 + C999) + C1017) * C51045 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C8201) *
               C50841) *
              C51023 +
          ((((C812 - (C811 + C810) + C813) * C51045 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C51072 +
            ((C816 - (C815 + C814) + C817) * C51045 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C51073 +
            ((C820 - (C819 + C818) + C821) * C51045 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C8201) *
               C1117 +
           (((C993 + C992 - C1014 - C1015) * C51045 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C51072 +
            ((C999 + C998 - C1016 - C1017) * C51045 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C51073 +
            ((C1005 + C1004 - C1018 - C1019) * C51045 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51045 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C51072 +
            ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
            C11071 * C8201) *
               C1117 -
           (C11530 * C8201 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51045) *
                C51072) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C51045 + (C5503 + C5502) * C50966) * C51072 +
            ((C378 + C377) * C51045 + (C5876 + C5877) * C50966) * C51073 +
            ((C376 + C375) * C51045 + (C11527 + C11528) * C50966) * C8201) *
               C50841 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C51045) * C51073 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C51045) * C51072) *
               C1117) *
              C1120 +
          ((C11071 * C51072 +
            (C189 * C51045 + (C5348 + C5349) * C50966) * C51073 +
            ((C185 + C184) * C51045 + (C11067 + C11068) * C50966) * C8201) *
               C1117 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C51045) *
                C8201 +
            ((C11528 + C11527) * C50966 + C692 * C51045) * C51073 +
            C11530 * C51072) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51045 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C51072 +
           ((C178 + C179) * C51045 + (C5340 + C5341) * C50966) * C51073 +
           C11071 * C8201) *
              C1188 -
          (C11530 * C8201 +
           ((C5502 + C5503) * C50966 + (C379 + C380) * C51045) * C51073 +
           ((C6265 * C50805 + C6264 * C118) * C50966 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C51045) *
               C51072) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C51045 +
            (C7170 * C118 + C7171 * C50805) * C50966) *
               C51072 +
           ((C381 + C382) * C51045 + (C5520 + C5521) * C50966) * C51073 +
           ((C383 + C384) * C51045 + (C11225 + C11226) * C50966) * C8201) *
              C1190 -
          ((((C117 * C3424 + C50886 * C3427) * C50805 +
             (C117 * C3418 + C50886 * C3423) * C118) *
                C50966 +
            ((C117 * C1199 + C50886 * C1206) * C50805 +
             (C117 * C1194 + C50886 * C1200) * C118) *
                C51045) *
               C8201 +
           (((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C50966 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C51045) *
               C51073 +
           (((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C50966 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C51045) *
               C51072) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C1770 +
              (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
              C5713 * C50869) *
                 C51045 +
             (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                 C50966) *
                C51072 +
            ((C1773 + C1774 - C1775 - C1776) * C51045 +
             (C7320 + C7321 - C7322 - C7323) * C50966) *
                C51073 +
            C12916 * C8201) *
               C51031 +
           (((C6264 * C1771 -
              ((C117 * C314 + C50886 * C331) * C1768 +
               (C117 * C301 + C50886 * C315) * C1770) +
              C6265 * C50869) *
                 C51045 +
             (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
              C6267 * C50869) *
                 C50966) *
                C51072 +
            ((C2115 - (C2116 + C2117) + C2118) * C51045 +
             (C7788 - (C7789 + C7790) + C7791) * C50966) *
                C51073 +
            ((C2119 - (C2120 + C2121) + C2122) * C51045 +
             (C13355 - (C13356 + C13357) + C13358) * C50966) *
                C8201) *
               C50841) *
              C51023 +
          ((((C1775 - (C1774 + C1773) + C1776) * C51045 +
             (C7322 - (C7321 + C7320) + C7323) * C50966) *
                C51072 +
            ((C1779 - (C1778 + C1777) + C1780) * C51045 +
             (C7328 - (C7329 + C7330) + C7331) * C50966) *
                C51073 +
            ((C1783 - (C1782 + C1781) + C1784) * C51045 +
             (C12909 - (C12910 + C12911) + C12912) * C50966) *
                C8201) *
               C51031 +
           (((C2117 + C2116 - C2115 - C2118) * C51045 +
             (C7790 + C7789 - C7788 - C7791) * C50966) *
                C51072 +
            ((C2121 + C2120 - C2119 - C2122) * C51045 +
             (C13357 + C13356 - C13355 - C13358) * C50966) *
                C51073 +
            ((C2125 + C2124 - C2123 - C2126) * C51045 +
             (C1012 * C1770 + C1013 * C1768 -
              (C117 * C1310 + C50886 * C1317) * C1771 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C8201) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C51045 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C51072 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C51045 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C51073 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C51045 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C8201) *
              C51031 +
          (((C6264 * C2228 -
             ((C117 * C314 + C50886 * C331) * C51078 +
              (C117 * C301 + C50886 * C315) * C2227) +
             C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
                C51045 +
            (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) + C6267 * C51079 -
             C6674 * C2229 - C6675 * C2226) *
                C50966) *
               C51072 +
           ((C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
             C5513 * C2229 - C5512 * C2226) *
                C51045 +
            (C5513 * C2228 - (C1009 * C51078 + C1008 * C2227) + C5512 * C51079 -
             C6268 * C2229 - C6269 * C2226) *
                C50966) *
               C51073 +
           ((C1010 * C2228 - (C365 * C51078 + C366 * C2227) + C1011 * C51079 -
             C5882 * C2229 - C5883 * C2226) *
                C51045 +
            (C5882 * C2228 - (C1011 * C51078 + C1010 * C2227) + C5883 * C51079 -
             (C117 * C6241 + C50886 * C6242) * C2229 -
             (C117 * C6243 + C50886 * C6244) * C2226) *
                C50966) *
               C8201) *
              C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C1773 + C1774 - C1775 - C1776) * C51045 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C51073 +
           C12916 * C8201) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C51045 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C50966) *
               C51072 +
           ((C2115 - (C2116 + C2117) + C2118) * C51045 +
            (C7788 - (C7789 + C7790) + C7791) * C50966) *
               C51073 +
           ((C2119 - (C2120 + C2121) + C2122) * C51045 +
            (C5882 * C1771 - (C1011 * C1768 + C1010 * C1770) + C5883 * C50869) *
                C50966) *
               C8201) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C51045 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C50966) *
               C51072 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C51045 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C50966) *
               C51073 +
           ((C371 * C1770 + C372 * C1768 - C11223 * C1771 - C11224 * C50869) *
                C51045 +
            (C11223 * C1770 + C11224 * C1768 -
             (C117 * C2848 + C50886 * C2853) * C1771 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C8201) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C1773 + C1774 - C1775 - C1776) * C51045 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C51073 +
           C12916 * C8201) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C51045 +
            (C7322 - (C7321 + C7320) + C7323) * C50966) *
               C51072 +
           ((C1779 - (C1778 + C1777) + C1780) * C51045 +
            (C7328 - (C7329 + C7330) + C7331) * C50966) *
               C51073 +
           ((C1783 - (C1782 + C1781) + C1784) * C51045 +
            (C12909 - (C12910 + C12911) + C12912) * C50966) *
               C8201) *
              C50790 * C1120 +
          (C12916 * C51072 +
           (C1794 * C51045 + (C12911 + C12910 - C12909 - C12912) * C50966) *
               C51073 +
           ((C1787 + C1786 - C1785 - C1788) * C51045 +
            (C830 * C1770 + C831 * C1768 -
             (C117 * C499 + C50886 * C518) * C1771 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C8201) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1964 +
            (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
            C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
            C5717 * C1963) *
               C51045 +
           (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
            C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
               C50966) *
              C51072 +
          ((C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
            C563 * C1966 + C564 * C1962 - C5718 * C1967 - C5719 * C1963) *
               C51045 +
           (C561 * C1964 + C562 * C1960 - C563 * C1965 - C564 * C1961 +
            C5718 * C1966 + C5719 * C1962 - C5720 * C1967 - C5721 * C1963) *
               C50966) *
              C51073 +
          ((C170 * C1964 + C171 * C1960 - C565 * C1965 - C566 * C1961 +
            C567 * C1966 + C568 * C1962 - C5722 * C1967 - C5723 * C1963) *
               C51045 +
           (C565 * C1964 + C566 * C1960 - C567 * C1965 - C568 * C1961 +
            C5722 * C1966 + C5723 * C1962 -
            (C117 * C5671 + C50886 * C5676) * C1967 -
            (C117 * C5677 + C50886 * C5680) * C1963) *
               C50966) *
              C8201) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C51045 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C51072 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C51045 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C51073 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C51045 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C8201) *
              C50790 * C51023 +
          (((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C51045 +
            (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C50966) *
               C51072 +
           ((C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C51045 +
            (C13507 - (C13506 + C13505) + C13508 - C13509 - C13510) * C50966) *
               C51073 +
           ((C2245 - (C2244 + C2243) + C2246 - C2247 - C2248) * C51045 +
            (C571 * C2228 - (C570 * C51078 + C569 * C2227) + C572 * C51079 -
             (C117 * C1971 + C50886 * C1978) * C2229 -
             (C117 * C1979 + C50886 * C1983) * C2226) *
                C50966) *
               C8201) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C1773 + C1774 - C1775 - C1776) * C51045 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C51073 +
           C12916 * C8201) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C51045 +
            (C7322 - (C7321 + C7320) + C7323) * C50966) *
               C51072 +
           ((C1779 - (C1778 + C1777) + C1780) * C51045 +
            (C7328 - (C7329 + C7330) + C7331) * C50966) *
               C51073 +
           ((C1783 - (C1782 + C1781) + C1784) * C51045 +
            (C12909 - (C12910 + C12911) + C12912) * C50966) *
               C8201) *
              C50790 * C1120 +
          (C12916 * C51072 +
           (C1794 * C51045 + (C12911 + C12910 - C12909 - C12912) * C50966) *
               C51073 +
           ((C1787 + C1786 - C1785 - C1788) * C51045 +
            (C830 * C1770 + C831 * C1768 -
             (C117 * C499 + C50886 * C518) * C1771 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C8201) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51045 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C51072 +
           ((C1773 + C1774 - C1775 - C1776) * C51045 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C51073 +
           C12916 * C8201) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C51045 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C50966) *
               C51072 +
           ((C2115 - (C2116 + C2117) + C2118) * C51045 +
            (C7788 - (C7789 + C7790) + C7791) * C50966) *
               C51073 +
           ((C2119 - (C2120 + C2121) + C2122) * C51045 +
            (C5882 * C1771 - (C1011 * C1768 + C1010 * C1770) + C5883 * C50869) *
                C50966) *
               C8201) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C51045 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C50966) *
               C51072 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C51045 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C50966) *
               C51073 +
           ((C371 * C1770 + C372 * C1768 - C11223 * C1771 - C11224 * C50869) *
                C51045 +
            (C11223 * C1770 + C11224 * C1768 -
             (C117 * C2848 + C50886 * C2853) * C1771 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C8201) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C51031 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C50841) *
              C51074 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C50841 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C51031) *
              C51075 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
            (C186 + C187) * C50902 * C111) *
               C51031 -
           (((C117 * C688 + C50886 * C690) * C50805 +
             (C117 * C687 + C50886 * C689) * C118) *
                C50902 * C111 +
            (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C51031 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C51074 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C51031) *
              C51075 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C51031 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 -
             (C117 * C490 + C50886 * C500) * C804 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
            C839 * C111) *
               C51031 +
           (((C117 * C969 + C50886 * C974) * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
            (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
            (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
               C50841) *
              C296 +
          (((C812 - (C811 + C810) + C813) * C50902 * C108 +
            (C816 - (C815 + C814) + C817) * C50902 * C109 +
            (C820 - (C819 + C818) + C821) * C50902 * C110 +
            (C834 - (C824 + C825) + C835) * C50902 * C111) *
               C51031 +
           ((C993 + C992 - C1014 - C1015) * C50902 * C108 +
            (C999 + C998 - C1016 - C1017) * C50902 * C109 +
            (C1005 + C1004 - C1018 - C1019) * C50902 * C110 +
            (C700 * C803 + C701 * C51032 -
             (C117 * C973 + C50886 * C982) * C804 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C804 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
             (C2883 + C2884 + C2885) * C804 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C804 -
             ((C2689 + C2690 + C2691) * C51032 +
              (C2692 + C2693 + C2694) * C803) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C296 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C804 -
             ((C2495 + C2496 + C2497) * C51032 +
              (C2498 + C2499 + C2500) * C803) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C803 + (C3056 + C3057 + C3058) * C51032 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C804 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C293 -
           ((C375 + C376) * C50902 * C111 + (C377 + C378) * C50902 * C110 +
            (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C294 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C50902 * C108 +
            (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
            (C385 + C386) * C50902 * C111) *
               C295) *
              C296 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 +
            ((C117 * C306 + C50886 * C324) * C118 +
             (C117 * C325 + C50886 * C336) * C50805) *
                C50902 * C111) *
               C294 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C293 -
           (((C117 * C326 + C50886 * C337) * C50805 +
             (C117 * C307 + C50886 * C327) * C118) *
                C50902 * C111 +
            (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
            (C382 + C381) * C50902 * C108) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C50790 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
           (C179 + C178) * C50902 * C108) *
              C50790 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
           (C186 + C187) * C50902 * C111) *
              C50790 * C115 -
          (((C117 * C138 + C50886 * C146) * C50805 +
            (C117 * C125 + C50886 * C139) * C118) *
               C50902 * C111 +
           (C187 + C186) * C50902 * C110 + C194 * C109 + C195 * C108) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 -
            (C117 * C490 + C50886 * C500) * C488 -
            (C117 * C501 + C50886 * C520) * C485 +
            (C117 * C491 + C50886 * C502) * C489 +
            (C117 * C503 + C50886 * C521) * C486) *
               C50902 * C108 +
           (C531 + C532 - C573 - C574 + C575 + C576) * C50902 * C109 +
           (C541 + C542 - C577 - C578 + C579 + C580) * C50902 * C110 +
           (C551 + C552 - C581 - C582 + C583 + C584) * C50902 * C111) *
              C50790 * C296 +
          ((C573 - (C532 + C531) + C574 - C575 - C576) * C50902 * C108 +
           (C577 - (C542 + C541) + C578 - C579 - C580) * C50902 * C109 +
           (C581 - (C552 + C551) + C582 - C583 - C584) * C50902 * C110 +
           ((C117 * C498 + C50886 * C516) * C488 - (C174 * C484 + C175 * C487) +
            (C117 * C517 + C50886 * C528) * C485 -
            (C117 * C499 + C50886 * C518) * C489 -
            (C117 * C519 + C50886 * C529) * C486) *
               C50902 * C111) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C50790 * C113 -
          (((C2495 + C2496 + C2497) * C50805 + (C2498 + C2499 + C2500) * C118) *
               C50902 * C50757 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C50902 * C2447) *
              C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50805) *
               C50902 * C50757) *
              C50790 * C115 -
          (((C2451 * C326 + C2446 * C337 + C2450 * C325 + C2445 * C336 +
             C2449 * C134 + C2444 * C144) *
                C50805 +
            (C2451 * C307 + C2446 * C327 + C2450 * C306 + C2445 * C324 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50902 * C50757 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C50902 * C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C293 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C2449 * C299 + C2444 * C311 + C2450 * C304 + C2445 * C320 +
              C2451 * C1194 + C2446 * C1200) *
                 C118 +
             (C2449 * C310 + C2444 * C329 + C2450 * C321 + C2445 * C334 +
              C2451 * C1199 + C2446 * C1206) *
                 C50805) *
                C50902 * C50757) *
               C294 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C293 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C488 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C485 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C489 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C486) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C487 + (C2492 + C2493 + C2494) * C484 -
            (C2883 + C2884 + C2885) * C488 - (C2886 + C2887 + C2888) * C485 +
            (C2889 + C2890 + C2891) * C489 + (C2892 + C2893 + C2894) * C486) *
               C50902 * C50757) *
              C50790 * C296 +
          (((C2885 + C2884 + C2883) * C488 -
            ((C2494 + C2493 + C2492) * C484 + (C2491 + C2490 + C2489) * C487) +
            (C2888 + C2887 + C2886) * C485 - (C2891 + C2890 + C2889) * C489 -
            (C2894 + C2893 + C2892) * C486) *
               C50902 * C2447 +
           ((C2449 * C494 + C2444 * C508 + C2450 * C971 + C2445 * C978 +
             C2451 * C1656 + C2446 * C1662) *
                C488 -
            ((C2495 + C2496 + C2497) * C484 + (C2498 + C2499 + C2500) * C487) +
            (C2449 * C509 + C2444 * C524 + C2450 * C979 + C2445 * C986 +
             C2451 * C1663 + C2446 * C1668) *
                C485 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C489 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C486) *
               C50902 * C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 -
            (C117 * C490 + C50886 * C500) * C804 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
           C839 * C111) *
              C50790 * C51074 +
          ((C812 - (C811 + C810) + C813) * C50902 * C108 +
           (C816 - (C815 + C814) + C817) * C50902 * C109 +
           (C820 - (C819 + C818) + C821) * C50902 * C110 +
           (C834 - (C824 + C825) + C835) * C50902 * C111) *
              C50790 * C51075 +
          (C838 * C108 + C839 * C109 +
           (C825 + C824 - C834 - C835) * C50902 * C110 +
           (C176 * C803 + C177 * C51032 - (C117 * C805 + C50886 * C806) * C804 -
            (C117 * C807 + C50886 * C808) * C50869) *
               C50902 * C111) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C804 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
            (C2883 + C2884 + C2885) * C804 - (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C51074 +
          (((C2885 + C2884 + C2883) * C804 -
            ((C2494 + C2493 + C2492) * C51032 +
             (C2491 + C2490 + C2489) * C803) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C804 -
            ((C2495 + C2496 + C2497) * C51032 +
             (C2498 + C2499 + C2500) * C803) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C51075 +
          (((C2500 + C2499 + C2498) * C803 + (C2497 + C2496 + C2495) * C51032 -
            (C3219 + C3218 + C3217) * C804 - (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C803 + (C2504 + C2505 + C2506) * C51032 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C804 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C50790 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
           (C179 + C178) * C50902 * C108) *
              C50790 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
           (C186 + C187) * C50902 * C111) *
              C50790 * C115 -
          (((C117 * C138 + C50886 * C146) * C50805 +
            (C117 * C125 + C50886 * C139) * C118) *
               C50902 * C111 +
           (C187 + C186) * C50902 * C110 + C194 * C109 + C195 * C108) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C293 -
           ((C375 + C376) * C50902 * C111 + (C377 + C378) * C50902 * C110 +
            (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C294 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C50902 * C108 +
            (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
            (C385 + C386) * C50902 * C111) *
               C295) *
              C296 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 +
            ((C117 * C306 + C50886 * C324) * C118 +
             (C117 * C325 + C50886 * C336) * C50805) *
                C50902 * C111) *
               C294 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C293 -
           (((C117 * C326 + C50886 * C337) * C50805 +
             (C117 * C307 + C50886 * C327) * C118) *
                C50902 * C111 +
            (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
            (C382 + C381) * C50902 * C108) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C50790 * C113 -
          (((C2495 + C2496 + C2497) * C50805 + (C2498 + C2499 + C2500) * C118) *
               C50902 * C50757 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C50902 * C2447) *
              C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50805) *
               C50902 * C50757) *
              C50790 * C115 -
          (((C2451 * C326 + C2446 * C337 + C2450 * C325 + C2445 * C336 +
             C2449 * C134 + C2444 * C144) *
                C50805 +
            (C2451 * C307 + C2446 * C327 + C2450 * C306 + C2445 * C324 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50902 * C50757 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C50902 * C2447) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C293 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C2449 * C299 + C2444 * C311 + C2450 * C304 + C2445 * C320 +
              C2451 * C1194 + C2446 * C1200) *
                 C118 +
             (C2449 * C310 + C2444 * C329 + C2450 * C321 + C2445 * C334 +
              C2451 * C1199 + C2446 * C1206) *
                 C50805) *
                C50902 * C50757) *
               C294 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C293 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C51076 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C51077 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C50902 * C108 +
            (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
            (C385 + C386) * C50902 * C111) *
               C1423) *
              C51023 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C51077 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C51076 -
           (((C117 * C326 + C50886 * C337) * C50805 +
             (C117 * C307 + C50886 * C327) * C118) *
                C50902 * C111 +
            (C386 + C385) * C50902 * C110 + (C384 + C383) * C50902 * C109 +
            (C382 + C381) * C50902 * C108) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C51076 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C51077 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C50902 * C2447 +
            ((C2695 + C2696 + C2697) * C118 +
             (C2698 + C2699 + C2700) * C50805) *
                C50902 * C50757) *
               C1423) *
              C51023 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C51077 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C51076 -
           (((C2451 * C2659 + C2446 * C2663 + C2450 * C1199 + C2445 * C1206 +
              C2449 * C321 + C2444 * C334) *
                 C50805 +
             (C2451 * C2654 + C2446 * C2660 + C2450 * C1194 + C2445 * C1200 +
              C2449 * C304 + C2444 * C320) *
                 C118) *
                C50902 * C50757 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C50902 * C2447) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 -
            (C117 * C490 + C50886 * C500) * C804 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
           C839 * C111) *
              C51076 +
          (((C117 * C969 + C50886 * C974) * C804 -
            ((C117 * C314 + C50886 * C331) * C51032 +
             (C117 * C301 + C50886 * C315) * C803) +
            (C117 * C975 + C50886 * C984) * C50869) *
               C50902 * C108 +
           (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
           (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
           (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
              C51077 +
          (((C117 * C302 + C50886 * C316) * C803 +
            (C117 * C317 + C50886 * C332) * C51032 -
            (C117 * C1654 + C50886 * C1658) * C804 -
            (C117 * C1659 + C50886 * C1666) * C50869) *
               C50902 * C108 +
           (C369 * C803 + C370 * C51032 -
            (C117 * C1655 + C50886 * C1660) * C804 -
            (C117 * C1661 + C50886 * C1667) * C50869) *
               C50902 * C109 +
           (C371 * C803 + C372 * C51032 -
            (C117 * C1656 + C50886 * C1662) * C804 -
            (C117 * C1663 + C50886 * C1668) * C50869) *
               C50902 * C110 +
           (C373 * C803 + C374 * C51032 -
            (C117 * C1657 + C50886 * C1664) * C804 -
            (C117 * C1665 + C50886 * C1669) * C50869) *
               C50902 * C111) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C804 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
            (C2883 + C2884 + C2885) * C804 - (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C51076 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C804 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51032 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C803) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C804 -
            ((C2689 + C2690 + C2691) * C51032 +
             (C2692 + C2693 + C2694) * C803) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C51077 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C803 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C51032 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C804 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C803 + (C2698 + C2699 + C2700) * C51032 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C804 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C1188 -
          (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
           ((C117 * C314 + C50886 * C331) * C50805 +
            (C117 * C301 + C50886 * C315) * C118) *
               C50902 * C108) *
              C1189 +
          (((C117 * C302 + C50886 * C316) * C118 +
            (C117 * C317 + C50886 * C332) * C50805) *
               C50902 * C108 +
           (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
           (C385 + C386) * C50902 * C111) *
              C1190 -
          (((C117 * C1197 + C50886 * C1205) * C50805 +
            (C117 * C1193 + C50886 * C1198) * C118) *
               C50902 * C111 +
           ((C117 * C1199 + C50886 * C1206) * C50805 +
            (C117 * C1194 + C50886 * C1200) * C118) *
               C50902 * C110 +
           ((C117 * C1201 + C50886 * C1207) * C50805 +
            (C117 * C1195 + C50886 * C1202) * C118) *
               C50902 * C109 +
           ((C117 * C1203 + C50886 * C1208) * C50805 +
            (C117 * C1196 + C50886 * C1204) * C118) *
               C50902 * C108) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C1117 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C50841) *
              C1119 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C50841 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C1117) *
              C1120 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
            (C186 + C187) * C50902 * C111) *
               C1117 -
           (((C117 * C688 + C50886 * C690) * C50805 +
             (C117 * C687 + C50886 * C689) * C118) *
                C50902 * C111 +
            (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 -
            (C117 * C490 + C50886 * C500) * C488 -
            (C117 * C501 + C50886 * C520) * C485 +
            (C117 * C491 + C50886 * C502) * C489 +
            (C117 * C503 + C50886 * C521) * C486) *
               C50902 * C108 +
           (C531 + C532 - C573 - C574 + C575 + C576) * C50902 * C109 +
           (C541 + C542 - C577 - C578 + C579 + C580) * C50902 * C110 +
           (C551 + C552 - C581 - C582 + C583 + C584) * C50902 * C111) *
              C1117 +
          (((C117 * C969 + C50886 * C974) * C488 -
            ((C117 * C314 + C50886 * C331) * C484 +
             (C117 * C301 + C50886 * C315) * C487) +
            (C117 * C975 + C50886 * C984) * C485 -
            (C117 * C1307 + C50886 * C1311) * C489 -
            (C117 * C1312 + C50886 * C1319) * C486) *
               C50902 * C108 +
           (C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
            (C117 * C1308 + C50886 * C1313) * C489 -
            (C117 * C1314 + C50886 * C1320) * C486) *
               C50902 * C109 +
           (C1010 * C488 - (C365 * C484 + C366 * C487) + C1011 * C485 -
            (C117 * C1309 + C50886 * C1315) * C489 -
            (C117 * C1316 + C50886 * C1321) * C486) *
               C50902 * C110 +
           (C1012 * C488 - (C363 * C484 + C364 * C487) + C1013 * C485 -
            (C117 * C1310 + C50886 * C1317) * C489 -
            (C117 * C1318 + C50886 * C1322) * C486) *
               C50902 * C111) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C1188 -
          (((C2689 + C2690 + C2691) * C50805 + (C2692 + C2693 + C2694) * C118) *
               C50902 * C50757 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C50902 * C2447) *
              C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C118 + (C2698 + C2699 + C2700) * C50805) *
               C50902 * C50757) *
              C1190 -
          (((C2451 * C3692 + C2446 * C3696 + C2450 * C2658 + C2445 * C2662 +
             C2449 * C1201 + C2444 * C1207) *
                C50805 +
            (C2451 * C3690 + C2446 * C3693 + C2450 * C2653 + C2445 * C2657 +
             C2449 * C1195 + C2444 * C1202) *
                C118) *
               C50902 * C50757 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C50902 * C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C488 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C485 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C489 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C486) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C487 + (C2492 + C2493 + C2494) * C484 -
            (C2883 + C2884 + C2885) * C488 - (C2886 + C2887 + C2888) * C485 +
            (C2889 + C2890 + C2891) * C489 + (C2892 + C2893 + C2894) * C486) *
               C50902 * C50757) *
              C1117 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C488 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C484 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C487) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C485 -
            (C2451 * C3844 + C2446 * C3846 + C2450 * C2846 + C2445 * C2849 +
             C2449 * C1307 + C2444 * C1311) *
                C489 -
            (C2451 * C3847 + C2446 * C3850 + C2450 * C2850 + C2445 * C2855 +
             C2449 * C1312 + C2444 * C1319) *
                C486) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C488 -
            ((C2689 + C2690 + C2691) * C484 + (C2692 + C2693 + C2694) * C487) +
            (C3444 + C3445 + C3446) * C485 -
            (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
             C2449 * C1308 + C2444 * C1313) *
                C489 -
            (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
             C2449 * C1314 + C2444 * C1320) *
                C486) *
               C50902 * C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 -
             (C117 * C490 + C50886 * C500) * C804 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C810 + C811 - C812 - C813) * C50902 * C109 + C838 * C110 +
            C839 * C111) *
               C1117 +
           (((C117 * C969 + C50886 * C974) * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C1014 - (C992 + C993) + C1015) * C50902 * C109 +
            (C1016 - (C998 + C999) + C1017) * C50902 * C110 +
            (C1018 - (C1004 + C1005) + C1019) * C50902 * C111) *
               C50841) *
              C51023 +
          (((C812 - (C811 + C810) + C813) * C50902 * C108 +
            (C816 - (C815 + C814) + C817) * C50902 * C109 +
            (C820 - (C819 + C818) + C821) * C50902 * C110 +
            (C834 - (C824 + C825) + C835) * C50902 * C111) *
               C1117 +
           ((C993 + C992 - C1014 - C1015) * C50902 * C108 +
            (C999 + C998 - C1016 - C1017) * C50902 * C109 +
            (C1005 + C1004 - C1018 - C1019) * C50902 * C110 +
            (C700 * C803 + C701 * C51032 -
             (C117 * C973 + C50886 * C982) * C804 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C804 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C803 + (C2492 + C2493 + C2494) * C51032 -
             (C2883 + C2884 + C2885) * C804 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C1117 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C804 -
             ((C2689 + C2690 + C2691) * C51032 +
              (C2692 + C2693 + C2694) * C803) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C804 -
             ((C2495 + C2496 + C2497) * C51032 +
              (C2498 + C2499 + C2500) * C803) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C1117 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C803 + (C3056 + C3057 + C3058) * C51032 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C804 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C50902 * C108 +
            (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
               C1117 -
           (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C50902 * C108) *
               C50841) *
              C1119 +
          (((C380 + C379) * C50902 * C108 + (C378 + C377) * C50902 * C109 +
            (C376 + C375) * C50902 * C110 + (C702 + C703) * C50902 * C111) *
               C50841 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50902 * C109 +
            (C179 + C178) * C50902 * C108) *
               C1117) *
              C1120 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50902 * C110 +
            (C186 + C187) * C50902 * C111) *
               C1117 -
           (((C117 * C688 + C50886 * C690) * C50805 +
             (C117 * C687 + C50886 * C689) * C118) *
                C50902 * C111 +
            (C703 + C702) * C50902 * C110 + C698 * C109 + C699 * C108) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C50902 * C108 +
           (C178 + C179) * C50902 * C109 + C192 * C110 + C193 * C111) *
              C1188 -
          (C698 * C111 + C699 * C110 + (C379 + C380) * C50902 * C109 +
           ((C117 * C314 + C50886 * C331) * C50805 +
            (C117 * C301 + C50886 * C315) * C118) *
               C50902 * C108) *
              C1189 +
          (((C117 * C302 + C50886 * C316) * C118 +
            (C117 * C317 + C50886 * C332) * C50805) *
               C50902 * C108 +
           (C381 + C382) * C50902 * C109 + (C383 + C384) * C50902 * C110 +
           (C385 + C386) * C50902 * C111) *
              C1190 -
          (((C117 * C1197 + C50886 * C1205) * C50805 +
            (C117 * C1193 + C50886 * C1198) * C118) *
               C50902 * C111 +
           ((C117 * C1199 + C50886 * C1206) * C50805 +
            (C117 * C1194 + C50886 * C1200) * C118) *
               C50902 * C110 +
           ((C117 * C1201 + C50886 * C1207) * C50805 +
            (C117 * C1195 + C50886 * C1202) * C118) *
               C50902 * C109 +
           ((C117 * C1203 + C50886 * C1208) * C50805 +
            (C117 * C1196 + C50886 * C1204) * C118) *
               C50902 * C108) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2689 + C2690 + C2691) * C50805 +
             (C2692 + C2693 + C2694) * C118) *
                C50902 * C50757 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C50902 * C2447) *
               C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C118 +
             (C3056 + C3057 + C3058) * C50805) *
                C50902 * C50757) *
               C50841 -
           (((C2495 + C2496 + C2497) * C50805 +
             (C2498 + C2499 + C2500) * C118) *
                C50902 * C50757 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C50902 * C2447) *
               C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C50902 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50805) *
                C50902 * C50757) *
               C1117 -
           (((C2451 * C1197 + C2446 * C1205 + C2450 * C323 + C2445 * C335 +
              C2449 * C308 + C2444 * C328) *
                 C50805 +
             (C2451 * C1193 + C2446 * C1198 + C2450 * C305 + C2445 * C322 +
              C2449 * C298 + C2444 * C309) *
                 C118) *
                C50902 * C50757 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C50902 * C2447) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50805) *
               C50902 * C50757) *
              C1188 -
          (((C2689 + C2690 + C2691) * C50805 + (C2692 + C2693 + C2694) * C118) *
               C50902 * C50757 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C50902 * C2447) *
              C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C118 + (C2698 + C2699 + C2700) * C50805) *
               C50902 * C50757) *
              C1190 -
          (((C2451 * C3692 + C2446 * C3696 + C2450 * C2658 + C2445 * C2662 +
             C2449 * C1201 + C2444 * C1207) *
                C50805 +
            (C2451 * C3690 + C2446 * C3693 + C2450 * C2653 + C2445 * C2657 +
             C2449 * C1195 + C2444 * C1202) *
                C118) *
               C50902 * C50757 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C50902 * C2447) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 -
             (C117 * C490 + C50886 * C500) * C1771 -
             (C117 * C501 + C50886 * C520) * C50869) *
                C50902 * C108 +
            (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
            C1796 * C111) *
               C51031 +
           (((C117 * C969 + C50886 * C974) * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             (C117 * C975 + C50886 * C984) * C50869) *
                C50902 * C108 +
            (C2115 - (C2116 + C2117) + C2118) * C50902 * C109 +
            (C2119 - (C2120 + C2121) + C2122) * C50902 * C110 +
            (C2123 - (C2124 + C2125) + C2126) * C50902 * C111) *
               C50841) *
              C51023 +
          (((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
            (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
            (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
            (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
               C51031 +
           ((C2117 + C2116 - C2115 - C2118) * C50902 * C108 +
            (C2121 + C2120 - C2119 - C2122) * C50902 * C109 +
            (C2125 + C2124 - C2123 - C2126) * C50902 * C110 +
            (C700 * C1770 + C701 * C1768 -
             (C117 * C973 + C50886 * C982) * C1771 -
             (C117 * C983 + C50886 * C988) * C50869) *
                C50902 * C111) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C1770 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C1768 -
             (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
              C2449 * C490 + C2444 * C500) *
                 C1771 -
             (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
              C2449 * C501 + C2444 * C520) *
                 C50869) *
                C50902 * C2447 +
            ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
             (C2883 + C2884 + C2885) * C1771 -
             (C2886 + C2887 + C2888) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
              C2451 * C3416 + C2446 * C3419) *
                 C1771 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C1768 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C1770) +
             (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
              C2451 * C3420 + C2446 * C3425) *
                 C50869) *
                C50902 * C2447 +
            ((C3441 + C3442 + C3443) * C1771 -
             ((C2689 + C2690 + C2691) * C1768 +
              (C2692 + C2693 + C2694) * C1770) +
             (C3444 + C3445 + C3446) * C50869) *
                C50902 * C50757) *
               C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C1771 -
             ((C2494 + C2493 + C2492) * C1768 +
              (C2491 + C2490 + C2489) * C1770) +
             (C2888 + C2887 + C2886) * C50869) *
                C50902 * C2447 +
            ((C3217 + C3218 + C3219) * C1771 -
             ((C2495 + C2496 + C2497) * C1768 +
              (C2498 + C2499 + C2500) * C1770) +
             (C3220 + C3221 + C3222) * C50869) *
                C50902 * C50757) *
               C51031 +
           (((C2694 + C2693 + C2692) * C1770 + (C2691 + C2690 + C2689) * C1768 -
             (C3443 + C3442 + C3441) * C1771 -
             (C3446 + C3445 + C3444) * C50869) *
                C50902 * C2447 +
            ((C3053 + C3054 + C3055) * C1770 + (C3056 + C3057 + C3058) * C1768 -
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C1771 -
             (C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50869) *
                C50902 * C50757) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 -
            (C117 * C490 + C50886 * C500) * C2228 -
            (C117 * C501 + C50886 * C520) * C51079 +
            (C117 * C491 + C50886 * C502) * C2229 +
            (C117 * C503 + C50886 * C521) * C2226) *
               C50902 * C108 +
           (C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C50902 * C109 +
           (C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C50902 * C110 +
           (C2243 + C2244 - C2245 - C2246 + C2247 + C2248) * C50902 * C111) *
              C51031 +
          (((C117 * C969 + C50886 * C974) * C2228 -
            ((C117 * C314 + C50886 * C331) * C51078 +
             (C117 * C301 + C50886 * C315) * C2227) +
            (C117 * C975 + C50886 * C984) * C51079 -
            (C117 * C1307 + C50886 * C1311) * C2229 -
            (C117 * C1312 + C50886 * C1319) * C2226) *
               C50902 * C108 +
           (C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
            (C117 * C1308 + C50886 * C1313) * C2229 -
            (C117 * C1314 + C50886 * C1320) * C2226) *
               C50902 * C109 +
           (C1010 * C2228 - (C365 * C51078 + C366 * C2227) + C1011 * C51079 -
            (C117 * C1309 + C50886 * C1315) * C2229 -
            (C117 * C1316 + C50886 * C1321) * C2226) *
               C50902 * C110 +
           (C1012 * C2228 - (C363 * C51078 + C364 * C2227) + C1013 * C51079 -
            (C117 * C1310 + C50886 * C1317) * C2229 -
            (C117 * C1318 + C50886 * C1322) * C2226) *
               C50902 * C111) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C2228 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C51079 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C2229 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C2226) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C2227 + (C2492 + C2493 + C2494) * C51078 -
            (C2883 + C2884 + C2885) * C2228 - (C2886 + C2887 + C2888) * C51079 +
            (C2889 + C2890 + C2891) * C2229 + (C2892 + C2893 + C2894) * C2226) *
               C50902 * C50757) *
              C51031 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C2228 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51078 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C2227) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C51079 -
            (C2451 * C3844 + C2446 * C3846 + C2450 * C2846 + C2445 * C2849 +
             C2449 * C1307 + C2444 * C1311) *
                C2229 -
            (C2451 * C3847 + C2446 * C3850 + C2450 * C2850 + C2445 * C2855 +
             C2449 * C1312 + C2444 * C1319) *
                C2226) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C2228 -
            ((C2689 + C2690 + C2691) * C51078 +
             (C2692 + C2693 + C2694) * C2227) +
            (C3444 + C3445 + C3446) * C51079 -
            (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
             C2449 * C1308 + C2444 * C1313) *
                C2229 -
            (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
             C2449 * C1314 + C2444 * C1320) *
                C2226) *
               C50902 * C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C293 +
          (((C117 * C969 + C50886 * C974) * C1771 -
            ((C117 * C314 + C50886 * C331) * C1768 +
             (C117 * C301 + C50886 * C315) * C1770) +
            (C117 * C975 + C50886 * C984) * C50869) *
               C50902 * C108 +
           (C1008 * C1771 - (C367 * C1768 + C368 * C1770) + C1009 * C50869) *
               C50902 * C109 +
           (C1010 * C1771 - (C365 * C1768 + C366 * C1770) + C1011 * C50869) *
               C50902 * C110 +
           (C1012 * C1771 - (C363 * C1768 + C364 * C1770) + C1013 * C50869) *
               C50902 * C111) *
              C294 +
          (((C117 * C302 + C50886 * C316) * C1770 +
            (C117 * C317 + C50886 * C332) * C1768 -
            (C117 * C1654 + C50886 * C1658) * C1771 -
            (C117 * C1659 + C50886 * C1666) * C50869) *
               C50902 * C108 +
           (C369 * C1770 + C370 * C1768 -
            (C117 * C1655 + C50886 * C1660) * C1771 -
            (C117 * C1661 + C50886 * C1667) * C50869) *
               C50902 * C109 +
           (C371 * C1770 + C372 * C1768 -
            (C117 * C1656 + C50886 * C1662) * C1771 -
            (C117 * C1663 + C50886 * C1668) * C50869) *
               C50902 * C110 +
           (C373 * C1770 + C374 * C1768 -
            (C117 * C1657 + C50886 * C1664) * C1771 -
            (C117 * C1665 + C50886 * C1669) * C50869) *
               C50902 * C111) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C50790 * C1119 +
          ((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
           (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
           (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
           (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
              C50790 * C1120 +
          (C1795 * C108 + C1796 * C109 +
           (C1787 + C1786 - C1785 - C1788) * C50902 * C110 +
           (C176 * C1770 + C177 * C1768 -
            (C117 * C805 + C50886 * C806) * C1771 -
            (C117 * C807 + C50886 * C808) * C50869) *
               C50902 * C111) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50886 * C126) * C1964 +
           (C117 * C127 + C50886 * C140) * C1960 -
           (C117 * C490 + C50886 * C500) * C1965 -
           (C117 * C501 + C50886 * C520) * C1961 +
           (C117 * C491 + C50886 * C502) * C1966 +
           (C117 * C503 + C50886 * C521) * C1962 -
           (C117 * C1968 + C50886 * C1972) * C1967 -
           (C117 * C1973 + C50886 * C1980) * C1963) *
              C50902 * C108 +
          (C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
           C563 * C1966 + C564 * C1962 -
           (C117 * C1969 + C50886 * C1974) * C1967 -
           (C117 * C1975 + C50886 * C1981) * C1963) *
              C50902 * C109 +
          (C170 * C1964 + C171 * C1960 - C565 * C1965 - C566 * C1961 +
           C567 * C1966 + C568 * C1962 -
           (C117 * C1970 + C50886 * C1976) * C1967 -
           (C117 * C1977 + C50886 * C1982) * C1963) *
              C50902 * C110 +
          (C172 * C1964 + C173 * C1960 - C569 * C1965 - C570 * C1961 +
           C571 * C1966 + C572 * C1962 -
           (C117 * C1971 + C50886 * C1978) * C1967 -
           (C117 * C1979 + C50886 * C1983) * C1963) *
              C50902 * C111) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C1771 -
            ((C2495 + C2496 + C2497) * C1768 +
             (C2498 + C2499 + C2500) * C1770) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C1770 + (C2504 + C2505 + C2506) * C1768 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C1771 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C293 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C1771 -
            ((C2689 + C2690 + C2691) * C1768 +
             (C2692 + C2693 + C2694) * C1770) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C1771 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C1770 + (C2698 + C2699 + C2700) * C1768 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C1771 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
            C2451 * C302 + C2446 * C316) *
               C1964 +
           (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
            C2451 * C317 + C2446 * C332) *
               C1960 -
           (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
            C2449 * C490 + C2444 * C500) *
               C1965 -
           (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
            C2449 * C501 + C2444 * C520) *
               C1961 +
           (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
            C2451 * C2846 + C2446 * C2849) *
               C1966 +
           (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
            C2451 * C2850 + C2446 * C2855) *
               C1962 -
           (C2451 * C4736 + C2446 * C4740 + C2450 * C4737 + C2445 * C4741 +
            C2449 * C1968 + C2444 * C1972) *
               C1967 -
           (C2451 * C4742 + C2446 * C4748 + C2450 * C4743 + C2445 * C4749 +
            C2449 * C1973 + C2444 * C1980) *
               C1963) *
              C50902 * C2447 +
          ((C2489 + C2490 + C2491) * C1964 + (C2492 + C2493 + C2494) * C1960 -
           (C2883 + C2884 + C2885) * C1965 - (C2886 + C2887 + C2888) * C1961 +
           (C2889 + C2890 + C2891) * C1966 + (C2892 + C2893 + C2894) * C1962 -
           (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
            C2449 * C1969 + C2444 * C1974) *
               C1967 -
           (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
            C2449 * C1975 + C2444 * C1981) *
               C1963) *
              C50902 * C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 -
            (C117 * C490 + C50886 * C500) * C2228 -
            (C117 * C501 + C50886 * C520) * C51079 +
            (C117 * C491 + C50886 * C502) * C2229 +
            (C117 * C503 + C50886 * C521) * C2226) *
               C50902 * C108 +
           (C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C50902 * C109 +
           (C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C50902 * C110 +
           (C2243 + C2244 - C2245 - C2246 + C2247 + C2248) * C50902 * C111) *
              C50790 * C51023 +
          ((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C50902 * C108 +
           (C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C50902 * C109 +
           (C2245 - (C2244 + C2243) + C2246 - C2247 - C2248) * C50902 * C110 +
           (C830 * C2228 - (C174 * C51078 + C175 * C2227) + C831 * C51079 -
            (C117 * C499 + C50886 * C518) * C2229 -
            (C117 * C519 + C50886 * C529) * C2226) *
               C50902 * C111) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C2228 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C51079 +
            (C2449 * C491 + C2444 * C502 + C2450 * C1307 + C2445 * C1311 +
             C2451 * C2846 + C2446 * C2849) *
                C2229 +
            (C2449 * C503 + C2444 * C521 + C2450 * C1312 + C2445 * C1319 +
             C2451 * C2850 + C2446 * C2855) *
                C2226) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C2227 + (C2492 + C2493 + C2494) * C51078 -
            (C2883 + C2884 + C2885) * C2228 - (C2886 + C2887 + C2888) * C51079 +
            (C2889 + C2890 + C2891) * C2229 + (C2892 + C2893 + C2894) * C2226) *
               C50902 * C50757) *
              C50790 * C51023 +
          (((C2885 + C2884 + C2883) * C2228 -
            ((C2494 + C2493 + C2492) * C51078 +
             (C2491 + C2490 + C2489) * C2227) +
            (C2888 + C2887 + C2886) * C51079 - (C2891 + C2890 + C2889) * C2229 -
            (C2894 + C2893 + C2892) * C2226) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C2228 -
            ((C2495 + C2496 + C2497) * C51078 +
             (C2498 + C2499 + C2500) * C2227) +
            (C3220 + C3221 + C3222) * C51079 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C2229 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C2226) *
               C50902 * C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C50790 * C1119 +
          ((C1775 - (C1774 + C1773) + C1776) * C50902 * C108 +
           (C1779 - (C1778 + C1777) + C1780) * C50902 * C109 +
           (C1783 - (C1782 + C1781) + C1784) * C50902 * C110 +
           (C1785 - (C1786 + C1787) + C1788) * C50902 * C111) *
              C50790 * C1120 +
          (C1795 * C108 + C1796 * C109 +
           (C1787 + C1786 - C1785 - C1788) * C50902 * C110 +
           (C176 * C1770 + C177 * C1768 -
            (C117 * C805 + C50886 * C806) * C1771 -
            (C117 * C807 + C50886 * C808) * C50869) *
               C50902 * C111) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 -
            (C117 * C490 + C50886 * C500) * C1771 -
            (C117 * C501 + C50886 * C520) * C50869) *
               C50902 * C108 +
           (C1773 + C1774 - C1775 - C1776) * C50902 * C109 + C1795 * C110 +
           C1796 * C111) *
              C293 +
          (((C117 * C969 + C50886 * C974) * C1771 -
            ((C117 * C314 + C50886 * C331) * C1768 +
             (C117 * C301 + C50886 * C315) * C1770) +
            (C117 * C975 + C50886 * C984) * C50869) *
               C50902 * C108 +
           (C1008 * C1771 - (C367 * C1768 + C368 * C1770) + C1009 * C50869) *
               C50902 * C109 +
           (C1010 * C1771 - (C365 * C1768 + C366 * C1770) + C1011 * C50869) *
               C50902 * C110 +
           (C1012 * C1771 - (C363 * C1768 + C364 * C1770) + C1013 * C50869) *
               C50902 * C111) *
              C294 +
          (((C117 * C302 + C50886 * C316) * C1770 +
            (C117 * C317 + C50886 * C332) * C1768 -
            (C117 * C1654 + C50886 * C1658) * C1771 -
            (C117 * C1659 + C50886 * C1666) * C50869) *
               C50902 * C108 +
           (C369 * C1770 + C370 * C1768 -
            (C117 * C1655 + C50886 * C1660) * C1771 -
            (C117 * C1661 + C50886 * C1667) * C50869) *
               C50902 * C109 +
           (C371 * C1770 + C372 * C1768 -
            (C117 * C1656 + C50886 * C1662) * C1771 -
            (C117 * C1663 + C50886 * C1668) * C50869) *
               C50902 * C110 +
           (C373 * C1770 + C374 * C1768 -
            (C117 * C1657 + C50886 * C1664) * C1771 -
            (C117 * C1665 + C50886 * C1669) * C50869) *
               C50902 * C111) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C50902 * C2447 +
           ((C3217 + C3218 + C3219) * C1771 -
            ((C2495 + C2496 + C2497) * C1768 +
             (C2498 + C2499 + C2500) * C1770) +
            (C3220 + C3221 + C3222) * C50869) *
               C50902 * C50757) *
              C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C50902 * C2447 +
           ((C2501 + C2502 + C2503) * C1770 + (C2504 + C2505 + C2506) * C1768 -
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C1771 -
            (C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50869) *
               C50902 * C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C2451 * C1654 + C2446 * C1658 + C2450 * C969 + C2445 * C974 +
             C2449 * C490 + C2444 * C500) *
                C1771 -
            (C2451 * C1659 + C2446 * C1666 + C2450 * C975 + C2445 * C984 +
             C2449 * C501 + C2444 * C520) *
                C50869) *
               C50902 * C2447 +
           ((C2489 + C2490 + C2491) * C1770 + (C2492 + C2493 + C2494) * C1768 -
            (C2883 + C2884 + C2885) * C1771 -
            (C2886 + C2887 + C2888) * C50869) *
               C50902 * C50757) *
              C293 +
          (((C2449 * C969 + C2444 * C974 + C2450 * C1654 + C2445 * C1658 +
             C2451 * C3416 + C2446 * C3419) *
                C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C2449 * C975 + C2444 * C984 + C2450 * C1659 + C2445 * C1666 +
             C2451 * C3420 + C2446 * C3425) *
                C50869) *
               C50902 * C2447 +
           ((C3441 + C3442 + C3443) * C1771 -
            ((C2689 + C2690 + C2691) * C1768 +
             (C2692 + C2693 + C2694) * C1770) +
            (C3444 + C3445 + C3446) * C50869) *
               C50902 * C50757) *
              C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C2451 * C4338 + C2446 * C4340 + C2450 * C3416 + C2445 * C3419 +
             C2449 * C1654 + C2444 * C1658) *
                C1771 -
            (C2451 * C4341 + C2446 * C4344 + C2450 * C3420 + C2445 * C3425 +
             C2449 * C1659 + C2444 * C1666) *
                C50869) *
               C50902 * C2447 +
           ((C2695 + C2696 + C2697) * C1770 + (C2698 + C2699 + C2700) * C1768 -
            (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
             C2449 * C1655 + C2444 * C1660) *
                C1771 -
            (C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
             C2449 * C1661 + C2444 * C1667) *
                C50869) *
               C50902 * C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C51031 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C50841) *
                      C51074 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50805) *
                        C50902 * C50757) *
                       C50841 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C51031) *
                      C51075 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C50902 * C51016 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50805) *
                        C50902 * C50757) *
                       C51031 -
                   (((C24803 * C1197 + C24798 * C1205 + C24802 * C323 +
                      C51081 * C335 + C24801 * C308 + C51080 * C328) *
                         C50805 +
                     (C24803 * C1193 + C24798 * C1198 + C24802 * C305 +
                      C51081 * C322 + C24801 * C298 + C51080 * C309) *
                         C118) *
                        C50902 * C50757 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50902 * C51016) *
                       C50841) *
                      C686)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C803 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51032 -
                     (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                      C51081 * C974 + C24801 * C490 + C51080 * C500) *
                         C804 -
                     (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                      C51081 * C984 + C24801 * C501 + C51080 * C520) *
                         C50869) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C803 +
                     (C24844 + C24845 + C24846) * C51032 -
                     (C25211 + C25212 + C25213) * C804 -
                     (C25214 + C25215 + C25216) * C50869) *
                        C50902 * C50757) *
                       C51031 +
                   (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                      C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                         C804 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C51032 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C803) +
                     (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                      C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                         C50869) *
                        C50902 * C51016 +
                    ((C25757 + C25758 + C25759) * C804 -
                     ((C25029 + C25030 + C25031) * C51032 +
                      (C25032 + C25033 + C25034) * C803) +
                     (C25760 + C25761 + C25762) * C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C296 +
                  ((((C25213 + C25212 + C25211) * C804 -
                     ((C24846 + C24845 + C24844) * C51032 +
                      (C24843 + C24842 + C24841) * C803) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C50902 * C51016 +
                    ((C25545 + C25546 + C25547) * C804 -
                     ((C24847 + C24848 + C24849) * C51032 +
                      (C24850 + C24851 + C24852) * C803) +
                     (C25548 + C25549 + C25550) * C50869) *
                        C50902 * C50757) *
                       C51031 +
                   (((C25034 + C25033 + C25032) * C803 +
                     (C25031 + C25030 + C25029) * C51032 -
                     (C25759 + C25758 + C25757) * C804 -
                     (C25762 + C25761 + C25760) * C50869) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C803 +
                     (C25384 + C25385 + C25386) * C51032 -
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C804 -
                     (C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C293 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C50902 * C51016 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50805) *
                        C50902 * C50757) *
                       C295) *
                      C296 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C24801 * C299 + C51080 * C311 + C24802 * C304 +
                      C51081 * C320 + C24803 * C1194 + C24798 * C1200) *
                         C118 +
                     (C24801 * C310 + C51080 * C329 + C24802 * C321 +
                      C51081 * C334 + C24803 * C1199 + C24798 * C1206) *
                         C50805) *
                        C50902 * C50757) *
                       C294 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C293 -
                   (((C24803 * C2659 + C24798 * C2663 + C24802 * C1199 +
                      C51081 * C1206 + C24801 * C321 + C51080 * C334) *
                         C50805 +
                     (C24803 * C2654 + C24798 * C2660 + C24802 * C1194 +
                      C51081 * C1200 + C24801 * C304 + C51080 * C320) *
                         C118) *
                        C50902 * C50757 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50902 * C51016) *
                       C295) *
                      C50778)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50805) *
                       C50902 * C50757) *
                      C50790 * C113 -
                  (((C24847 + C24848 + C24849) * C50805 +
                    (C24850 + C24851 + C24852) * C118) *
                       C50902 * C50757 +
                   ((C24846 + C24845 + C24844) * C50805 +
                    (C24843 + C24842 + C24841) * C118) *
                       C50902 * C51016) *
                      C50790 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50805) *
                       C50902 * C51016 +
                   ((C24853 + C24854 + C24855) * C118 +
                    (C24856 + C24857 + C24858) * C50805) *
                       C50902 * C50757) *
                      C50790 * C115 -
                  (((C24803 * C326 + C24798 * C337 + C24802 * C325 +
                     C51081 * C336 + C24801 * C134 + C51080 * C144) *
                        C50805 +
                    (C24803 * C307 + C24798 * C327 + C24802 * C306 +
                     C51081 * C324 + C24801 * C123 + C51080 * C135) *
                        C118) *
                       C50902 * C50757 +
                   ((C24858 + C24857 + C24856) * C50805 +
                    (C24855 + C24854 + C24853) * C118) *
                       C50902 * C51016) *
                      C50790 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C487 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C484 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C488 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C485 +
                    (C24801 * C491 + C51080 * C502 + C24802 * C1307 +
                     C51081 * C1311 + C24803 * C2846 + C24798 * C2849) *
                        C489 +
                    (C24801 * C503 + C51080 * C521 + C24802 * C1312 +
                     C51081 * C1319 + C24803 * C2850 + C24798 * C2855) *
                        C486) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C487 +
                    (C24844 + C24845 + C24846) * C484 -
                    (C25211 + C25212 + C25213) * C488 -
                    (C25214 + C25215 + C25216) * C485 +
                    (C25217 + C25218 + C25219) * C489 +
                    (C25220 + C25221 + C25222) * C486) *
                       C50902 * C50757) *
                      C50790 * C296 +
                  (((C25213 + C25212 + C25211) * C488 -
                    ((C24846 + C24845 + C24844) * C484 +
                     (C24843 + C24842 + C24841) * C487) +
                    (C25216 + C25215 + C25214) * C485 -
                    (C25219 + C25218 + C25217) * C489 -
                    (C25222 + C25221 + C25220) * C486) *
                       C50902 * C51016 +
                   ((C24801 * C494 + C51080 * C508 + C24802 * C971 +
                     C51081 * C978 + C24803 * C1656 + C24798 * C1662) *
                        C488 -
                    ((C24847 + C24848 + C24849) * C484 +
                     (C24850 + C24851 + C24852) * C487) +
                    (C24801 * C509 + C51080 * C524 + C24802 * C979 +
                     C51081 * C986 + C24803 * C1663 + C24798 * C1668) *
                        C485 -
                    (C24803 * C2848 + C24798 * C2853 + C24802 * C1309 +
                     C51081 * C1315 + C24801 * C495 + C51080 * C510) *
                        C489 -
                    (C24803 * C2854 + C24798 * C2857 + C24802 * C1316 +
                     C51081 * C1321 + C24801 * C511 + C51080 * C525) *
                        C486) *
                       C50902 * C50757) *
                      C50790 * C50778)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C803 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51032 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C804 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C803 +
                    (C24844 + C24845 + C24846) * C51032 -
                    (C25211 + C25212 + C25213) * C804 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C50790 * C51074 +
                  (((C25213 + C25212 + C25211) * C804 -
                    ((C24846 + C24845 + C24844) * C51032 +
                     (C24843 + C24842 + C24841) * C803) +
                    (C25216 + C25215 + C25214) * C50869) *
                       C50902 * C51016 +
                   ((C25545 + C25546 + C25547) * C804 -
                    ((C24847 + C24848 + C24849) * C51032 +
                     (C24850 + C24851 + C24852) * C803) +
                    (C25548 + C25549 + C25550) * C50869) *
                       C50902 * C50757) *
                      C50790 * C51075 +
                  (((C24852 + C24851 + C24850) * C803 +
                    (C24849 + C24848 + C24847) * C51032 -
                    (C25547 + C25546 + C25545) * C804 -
                    (C25550 + C25549 + C25548) * C50869) *
                       C50902 * C51016 +
                   ((C24853 + C24854 + C24855) * C803 +
                    (C24856 + C24857 + C24858) * C51032 -
                    (C24803 * C1657 + C24798 * C1664 + C24802 * C972 +
                     C51081 * C980 + C24801 * C496 + C51080 * C512) *
                        C804 -
                    (C24803 * C1665 + C24798 * C1669 + C24802 * C981 +
                     C51081 * C987 + C24801 * C513 + C51080 * C526) *
                        C50869) *
                       C50902 * C50757) *
                      C50790 * C686)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50805) *
                       C50902 * C50757) *
                      C50790 * C113 -
                  (((C24847 + C24848 + C24849) * C50805 +
                    (C24850 + C24851 + C24852) * C118) *
                       C50902 * C50757 +
                   ((C24846 + C24845 + C24844) * C50805 +
                    (C24843 + C24842 + C24841) * C118) *
                       C50902 * C51016) *
                      C50790 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50805) *
                       C50902 * C51016 +
                   ((C24853 + C24854 + C24855) * C118 +
                    (C24856 + C24857 + C24858) * C50805) *
                       C50902 * C50757) *
                      C50790 * C115 -
                  (((C24803 * C326 + C24798 * C337 + C24802 * C325 +
                     C51081 * C336 + C24801 * C134 + C51080 * C144) *
                        C50805 +
                    (C24803 * C307 + C24798 * C327 + C24802 * C306 +
                     C51081 * C324 + C24801 * C123 + C51080 * C135) *
                        C118) *
                       C50902 * C50757 +
                   ((C24858 + C24857 + C24856) * C50805 +
                    (C24855 + C24854 + C24853) * C118) *
                       C50902 * C51016) *
                      C50790 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C293 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C50902 * C51016 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50805) *
                        C50902 * C50757) *
                       C295) *
                      C296 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C24801 * C299 + C51080 * C311 + C24802 * C304 +
                      C51081 * C320 + C24803 * C1194 + C24798 * C1200) *
                         C118 +
                     (C24801 * C310 + C51080 * C329 + C24802 * C321 +
                      C51081 * C334 + C24803 * C1199 + C24798 * C1206) *
                         C50805) *
                        C50902 * C50757) *
                       C294 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C293 -
                   (((C24803 * C2659 + C24798 * C2663 + C24802 * C1199 +
                      C51081 * C1206 + C24801 * C321 + C51080 * C334) *
                         C50805 +
                     (C24803 * C2654 + C24798 * C2660 + C24802 * C1194 +
                      C51081 * C1200 + C24801 * C304 + C51080 * C320) *
                         C118) *
                        C50902 * C50757 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50902 * C51016) *
                       C295) *
                      C50778)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C51076 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C51077 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C50902 * C51016 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50805) *
                        C50902 * C50757) *
                       C1423) *
                      C51023 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50805) *
                        C50902 * C50757) *
                       C51077 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C51076 -
                   (((C24803 * C2659 + C24798 * C2663 + C24802 * C1199 +
                      C51081 * C1206 + C24801 * C321 + C51080 * C334) *
                         C50805 +
                     (C24803 * C2654 + C24798 * C2660 + C24802 * C1194 +
                      C51081 * C1200 + C24801 * C304 + C51080 * C320) *
                         C118) *
                        C50902 * C50757 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50902 * C51016) *
                       C1423) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C803 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51032 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C804 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C803 +
                    (C24844 + C24845 + C24846) * C51032 -
                    (C25211 + C25212 + C25213) * C804 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C51076 +
                  (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                     C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                        C804 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C51032 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C803) +
                    (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                     C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25757 + C25758 + C25759) * C804 -
                    ((C25029 + C25030 + C25031) * C51032 +
                     (C25032 + C25033 + C25034) * C803) +
                    (C25760 + C25761 + C25762) * C50869) *
                       C50902 * C50757) *
                      C51077 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C803 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C51032 -
                    (C24803 * C4338 + C24798 * C4340 + C24802 * C3416 +
                     C51081 * C3419 + C24801 * C1654 + C51080 * C1658) *
                        C804 -
                    (C24803 * C4341 + C24798 * C4344 + C24802 * C3420 +
                     C51081 * C3425 + C24801 * C1659 + C51080 * C1666) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25035 + C25036 + C25037) * C803 +
                    (C25038 + C25039 + C25040) * C51032 -
                    (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                     C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                        C804 -
                    (C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                     C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                        C50869) *
                       C50902 * C50757) *
                      C1423) *
                 C50773) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50805) *
                       C50902 * C50757) *
                      C1188 -
                  (((C25029 + C25030 + C25031) * C50805 +
                    (C25032 + C25033 + C25034) * C118) *
                       C50902 * C50757 +
                   ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                     C51081 * C332 + C24801 * C314 + C51080 * C331) *
                        C50805 +
                    (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                     C51081 * C316 + C24801 * C301 + C51080 * C315) *
                        C118) *
                       C50902 * C51016) *
                      C1189 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C118 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C50805) *
                       C50902 * C51016 +
                   ((C25035 + C25036 + C25037) * C118 +
                    (C25038 + C25039 + C25040) * C50805) *
                       C50902 * C50757) *
                      C1190 -
                  (((C24803 * C3692 + C24798 * C3696 + C24802 * C2658 +
                     C51081 * C2662 + C24801 * C1201 + C51080 * C1207) *
                        C50805 +
                    (C24803 * C3690 + C24798 * C3693 + C24802 * C2653 +
                     C51081 * C2657 + C24801 * C1195 + C51080 * C1202) *
                        C118) *
                       C50902 * C50757 +
                   ((C24803 * C3694 + C24798 * C3697 + C24802 * C2656 +
                     C51081 * C2661 + C24801 * C1203 + C51080 * C1208) *
                        C50805 +
                    (C24803 * C3691 + C24798 * C3695 + C24802 * C2652 +
                     C51081 * C2655 + C24801 * C1196 + C51080 * C1204) *
                        C118) *
                       C50902 * C51016) *
                      C1191) *
                 C50773) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C1117 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C50841) *
                      C1119 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50805) *
                        C50902 * C50757) *
                       C50841 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C1117) *
                      C1120 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C50902 * C51016 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50805) *
                        C50902 * C50757) *
                       C1117 -
                   (((C24803 * C1197 + C24798 * C1205 + C24802 * C323 +
                      C51081 * C335 + C24801 * C308 + C51080 * C328) *
                         C50805 +
                     (C24803 * C1193 + C24798 * C1198 + C24802 * C305 +
                      C51081 * C322 + C24801 * C298 + C51080 * C309) *
                         C118) *
                        C50902 * C50757 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50902 * C51016) *
                       C50841) *
                      C1121)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C487 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C484 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C488 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C485 +
                    (C24801 * C491 + C51080 * C502 + C24802 * C1307 +
                     C51081 * C1311 + C24803 * C2846 + C24798 * C2849) *
                        C489 +
                    (C24801 * C503 + C51080 * C521 + C24802 * C1312 +
                     C51081 * C1319 + C24803 * C2850 + C24798 * C2855) *
                        C486) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C487 +
                    (C24844 + C24845 + C24846) * C484 -
                    (C25211 + C25212 + C25213) * C488 -
                    (C25214 + C25215 + C25216) * C485 +
                    (C25217 + C25218 + C25219) * C489 +
                    (C25220 + C25221 + C25222) * C486) *
                       C50902 * C50757) *
                      C1117 +
                  (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                     C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                        C488 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C484 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C487) +
                    (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                     C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                        C485 -
                    (C24803 * C3844 + C24798 * C3846 + C24802 * C2846 +
                     C51081 * C2849 + C24801 * C1307 + C51080 * C1311) *
                        C489 -
                    (C24803 * C3847 + C24798 * C3850 + C24802 * C2850 +
                     C51081 * C2855 + C24801 * C1312 + C51080 * C1319) *
                        C486) *
                       C50902 * C51016 +
                   ((C25757 + C25758 + C25759) * C488 -
                    ((C25029 + C25030 + C25031) * C484 +
                     (C25032 + C25033 + C25034) * C487) +
                    (C25760 + C25761 + C25762) * C485 -
                    (C24803 * C3845 + C24798 * C3848 + C24802 * C2847 +
                     C51081 * C2851 + C24801 * C1308 + C51080 * C1313) *
                        C489 -
                    (C24803 * C3849 + C24798 * C3851 + C24802 * C2852 +
                     C51081 * C2856 + C24801 * C1314 + C51080 * C1320) *
                        C486) *
                       C50902 * C50757) *
                      C50841) *
                 C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C803 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51032 -
                     (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                      C51081 * C974 + C24801 * C490 + C51080 * C500) *
                         C804 -
                     (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                      C51081 * C984 + C24801 * C501 + C51080 * C520) *
                         C50869) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C803 +
                     (C24844 + C24845 + C24846) * C51032 -
                     (C25211 + C25212 + C25213) * C804 -
                     (C25214 + C25215 + C25216) * C50869) *
                        C50902 * C50757) *
                       C1117 +
                   (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                      C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                         C804 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C51032 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C803) +
                     (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                      C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                         C50869) *
                        C50902 * C51016 +
                    ((C25757 + C25758 + C25759) * C804 -
                     ((C25029 + C25030 + C25031) * C51032 +
                      (C25032 + C25033 + C25034) * C803) +
                     (C25760 + C25761 + C25762) * C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C51023 +
                  ((((C25213 + C25212 + C25211) * C804 -
                     ((C24846 + C24845 + C24844) * C51032 +
                      (C24843 + C24842 + C24841) * C803) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C50902 * C51016 +
                    ((C25545 + C25546 + C25547) * C804 -
                     ((C24847 + C24848 + C24849) * C51032 +
                      (C24850 + C24851 + C24852) * C803) +
                     (C25548 + C25549 + C25550) * C50869) *
                        C50902 * C50757) *
                       C1117 +
                   (((C25034 + C25033 + C25032) * C803 +
                     (C25031 + C25030 + C25029) * C51032 -
                     (C25759 + C25758 + C25757) * C804 -
                     (C25762 + C25761 + C25760) * C50869) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C803 +
                     (C25384 + C25385 + C25386) * C51032 -
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C804 -
                     (C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50805) *
                        C50902 * C50757) *
                       C1117 -
                   (((C25029 + C25030 + C25031) * C50805 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50902 * C50757 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C50902 * C51016) *
                       C50841) *
                      C1119 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50805) *
                        C50902 * C50757) *
                       C50841 -
                   (((C24847 + C24848 + C24849) * C50805 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50902 * C50757 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50902 * C51016) *
                       C1117) *
                      C1120 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C50902 * C51016 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50805) *
                        C50902 * C50757) *
                       C1117 -
                   (((C24803 * C1197 + C24798 * C1205 + C24802 * C323 +
                      C51081 * C335 + C24801 * C308 + C51080 * C328) *
                         C50805 +
                     (C24803 * C1193 + C24798 * C1198 + C24802 * C305 +
                      C51081 * C322 + C24801 * C298 + C51080 * C309) *
                         C118) *
                        C50902 * C50757 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50902 * C51016) *
                       C50841) *
                      C1121)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50805) *
                       C50902 * C50757) *
                      C1188 -
                  (((C25029 + C25030 + C25031) * C50805 +
                    (C25032 + C25033 + C25034) * C118) *
                       C50902 * C50757 +
                   ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                     C51081 * C332 + C24801 * C314 + C51080 * C331) *
                        C50805 +
                    (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                     C51081 * C316 + C24801 * C301 + C51080 * C315) *
                        C118) *
                       C50902 * C51016) *
                      C1189 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C118 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C50805) *
                       C50902 * C51016 +
                   ((C25035 + C25036 + C25037) * C118 +
                    (C25038 + C25039 + C25040) * C50805) *
                       C50902 * C50757) *
                      C1190 -
                  (((C24803 * C3692 + C24798 * C3696 + C24802 * C2658 +
                     C51081 * C2662 + C24801 * C1201 + C51080 * C1207) *
                        C50805 +
                    (C24803 * C3690 + C24798 * C3693 + C24802 * C2653 +
                     C51081 * C2657 + C24801 * C1195 + C51080 * C1202) *
                        C118) *
                       C50902 * C50757 +
                   ((C24803 * C3694 + C24798 * C3697 + C24802 * C2656 +
                     C51081 * C2661 + C24801 * C1203 + C51080 * C1208) *
                        C50805 +
                    (C24803 * C3691 + C24798 * C3695 + C24802 * C2652 +
                     C51081 * C2655 + C24801 * C1196 + C51080 * C1204) *
                        C118) *
                       C50902 * C51016) *
                      C1191) *
                 C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C1770 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C1768 -
                     (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                      C51081 * C974 + C24801 * C490 + C51080 * C500) *
                         C1771 -
                     (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                      C51081 * C984 + C24801 * C501 + C51080 * C520) *
                         C50869) *
                        C50902 * C51016 +
                    ((C24841 + C24842 + C24843) * C1770 +
                     (C24844 + C24845 + C24846) * C1768 -
                     (C25211 + C25212 + C25213) * C1771 -
                     (C25214 + C25215 + C25216) * C50869) *
                        C50902 * C50757) *
                       C51031 +
                   (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                      C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                         C1771 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C1768 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C1770) +
                     (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                      C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                         C50869) *
                        C50902 * C51016 +
                    ((C25757 + C25758 + C25759) * C1771 -
                     ((C25029 + C25030 + C25031) * C1768 +
                      (C25032 + C25033 + C25034) * C1770) +
                     (C25760 + C25761 + C25762) * C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C51023 +
                  ((((C25213 + C25212 + C25211) * C1771 -
                     ((C24846 + C24845 + C24844) * C1768 +
                      (C24843 + C24842 + C24841) * C1770) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C50902 * C51016 +
                    ((C25545 + C25546 + C25547) * C1771 -
                     ((C24847 + C24848 + C24849) * C1768 +
                      (C24850 + C24851 + C24852) * C1770) +
                     (C25548 + C25549 + C25550) * C50869) *
                        C50902 * C50757) *
                       C51031 +
                   (((C25034 + C25033 + C25032) * C1770 +
                     (C25031 + C25030 + C25029) * C1768 -
                     (C25759 + C25758 + C25757) * C1771 -
                     (C25762 + C25761 + C25760) * C50869) *
                        C50902 * C51016 +
                    ((C25381 + C25382 + C25383) * C1770 +
                     (C25384 + C25385 + C25386) * C1768 -
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C1771 -
                     (C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50869) *
                        C50902 * C50757) *
                       C50841) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C2227 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51078 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C2228 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C51079 +
                    (C24801 * C491 + C51080 * C502 + C24802 * C1307 +
                     C51081 * C1311 + C24803 * C2846 + C24798 * C2849) *
                        C2229 +
                    (C24801 * C503 + C51080 * C521 + C24802 * C1312 +
                     C51081 * C1319 + C24803 * C2850 + C24798 * C2855) *
                        C2226) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C2227 +
                    (C24844 + C24845 + C24846) * C51078 -
                    (C25211 + C25212 + C25213) * C2228 -
                    (C25214 + C25215 + C25216) * C51079 +
                    (C25217 + C25218 + C25219) * C2229 +
                    (C25220 + C25221 + C25222) * C2226) *
                       C50902 * C50757) *
                      C51031 +
                  (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                     C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                        C2228 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C51078 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C2227) +
                    (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                     C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                        C51079 -
                    (C24803 * C3844 + C24798 * C3846 + C24802 * C2846 +
                     C51081 * C2849 + C24801 * C1307 + C51080 * C1311) *
                        C2229 -
                    (C24803 * C3847 + C24798 * C3850 + C24802 * C2850 +
                     C51081 * C2855 + C24801 * C1312 + C51080 * C1319) *
                        C2226) *
                       C50902 * C51016 +
                   ((C25757 + C25758 + C25759) * C2228 -
                    ((C25029 + C25030 + C25031) * C51078 +
                     (C25032 + C25033 + C25034) * C2227) +
                    (C25760 + C25761 + C25762) * C51079 -
                    (C24803 * C3845 + C24798 * C3848 + C24802 * C2847 +
                     C51081 * C2851 + C24801 * C1308 + C51080 * C1313) *
                        C2229 -
                    (C24803 * C3849 + C24798 * C3851 + C24802 * C2852 +
                     C51081 * C2856 + C24801 * C1314 + C51080 * C1320) *
                        C2226) *
                       C50902 * C50757) *
                      C50841) *
                 C50773) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C1770 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C1768 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C1771 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C1770 +
                    (C24844 + C24845 + C24846) * C1768 -
                    (C25211 + C25212 + C25213) * C1771 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C293 +
                  (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                     C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                        C1771 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C1768 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C1770) +
                    (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                     C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25757 + C25758 + C25759) * C1771 -
                    ((C25029 + C25030 + C25031) * C1768 +
                     (C25032 + C25033 + C25034) * C1770) +
                    (C25760 + C25761 + C25762) * C50869) *
                       C50902 * C50757) *
                      C294 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C1770 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C1768 -
                    (C24803 * C4338 + C24798 * C4340 + C24802 * C3416 +
                     C51081 * C3419 + C24801 * C1654 + C51080 * C1658) *
                        C1771 -
                    (C24803 * C4341 + C24798 * C4344 + C24802 * C3420 +
                     C51081 * C3425 + C24801 * C1659 + C51080 * C1666) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25035 + C25036 + C25037) * C1770 +
                    (C25038 + C25039 + C25040) * C1768 -
                    (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                     C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                        C1771 -
                    (C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                     C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                        C50869) *
                       C50902 * C50757) *
                      C295) *
                 C50773) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C1770 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C1768 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C1771 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C1770 +
                    (C24844 + C24845 + C24846) * C1768 -
                    (C25211 + C25212 + C25213) * C1771 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C50790 * C1119 +
                  (((C25213 + C25212 + C25211) * C1771 -
                    ((C24846 + C24845 + C24844) * C1768 +
                     (C24843 + C24842 + C24841) * C1770) +
                    (C25216 + C25215 + C25214) * C50869) *
                       C50902 * C51016 +
                   ((C25545 + C25546 + C25547) * C1771 -
                    ((C24847 + C24848 + C24849) * C1768 +
                     (C24850 + C24851 + C24852) * C1770) +
                    (C25548 + C25549 + C25550) * C50869) *
                       C50902 * C50757) *
                      C50790 * C1120 +
                  (((C24852 + C24851 + C24850) * C1770 +
                    (C24849 + C24848 + C24847) * C1768 -
                    (C25547 + C25546 + C25545) * C1771 -
                    (C25550 + C25549 + C25548) * C50869) *
                       C50902 * C51016 +
                   ((C24853 + C24854 + C24855) * C1770 +
                    (C24856 + C24857 + C24858) * C1768 -
                    (C24803 * C1657 + C24798 * C1664 + C24802 * C972 +
                     C51081 * C980 + C24801 * C496 + C51080 * C512) *
                        C1771 -
                    (C24803 * C1665 + C24798 * C1669 + C24802 * C981 +
                     C51081 * C987 + C24801 * C513 + C51080 * C526) *
                        C50869) *
                       C50902 * C50757) *
                      C50790 * C1121)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                    C51081 * C315 + C24803 * C302 + C24798 * C316) *
                       C1964 +
                   (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                    C51081 * C331 + C24803 * C317 + C24798 * C332) *
                       C1960 -
                   (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                    C51081 * C974 + C24801 * C490 + C51080 * C500) *
                       C1965 -
                   (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                    C51081 * C984 + C24801 * C501 + C51080 * C520) *
                       C1961 +
                   (C24801 * C491 + C51080 * C502 + C24802 * C1307 +
                    C51081 * C1311 + C24803 * C2846 + C24798 * C2849) *
                       C1966 +
                   (C24801 * C503 + C51080 * C521 + C24802 * C1312 +
                    C51081 * C1319 + C24803 * C2850 + C24798 * C2855) *
                       C1962 -
                   (C24803 * C4736 + C24798 * C4740 + C24802 * C4737 +
                    C51081 * C4741 + C24801 * C1968 + C51080 * C1972) *
                       C1967 -
                   (C24803 * C4742 + C24798 * C4748 + C24802 * C4743 +
                    C51081 * C4749 + C24801 * C1973 + C51080 * C1980) *
                       C1963) *
                      C50902 * C51016 +
                  ((C24841 + C24842 + C24843) * C1964 +
                   (C24844 + C24845 + C24846) * C1960 -
                   (C25211 + C25212 + C25213) * C1965 -
                   (C25214 + C25215 + C25216) * C1961 +
                   (C25217 + C25218 + C25219) * C1966 +
                   (C25220 + C25221 + C25222) * C1962 -
                   (C24803 * C4738 + C24798 * C4744 + C24802 * C4739 +
                    C51081 * C4745 + C24801 * C1969 + C51080 * C1974) *
                       C1967 -
                   (C24803 * C4746 + C24798 * C4750 + C24802 * C4747 +
                    C51081 * C4751 + C24801 * C1975 + C51080 * C1981) *
                       C1963) *
                      C50902 * C50757) *
                 C50790 * C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C2227 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51078 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C2228 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C51079 +
                    (C24801 * C491 + C51080 * C502 + C24802 * C1307 +
                     C51081 * C1311 + C24803 * C2846 + C24798 * C2849) *
                        C2229 +
                    (C24801 * C503 + C51080 * C521 + C24802 * C1312 +
                     C51081 * C1319 + C24803 * C2850 + C24798 * C2855) *
                        C2226) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C2227 +
                    (C24844 + C24845 + C24846) * C51078 -
                    (C25211 + C25212 + C25213) * C2228 -
                    (C25214 + C25215 + C25216) * C51079 +
                    (C25217 + C25218 + C25219) * C2229 +
                    (C25220 + C25221 + C25222) * C2226) *
                       C50902 * C50757) *
                      C50790 * C51023 +
                  (((C25213 + C25212 + C25211) * C2228 -
                    ((C24846 + C24845 + C24844) * C51078 +
                     (C24843 + C24842 + C24841) * C2227) +
                    (C25216 + C25215 + C25214) * C51079 -
                    (C25219 + C25218 + C25217) * C2229 -
                    (C25222 + C25221 + C25220) * C2226) *
                       C50902 * C51016 +
                   ((C25545 + C25546 + C25547) * C2228 -
                    ((C24847 + C24848 + C24849) * C51078 +
                     (C24850 + C24851 + C24852) * C2227) +
                    (C25548 + C25549 + C25550) * C51079 -
                    (C24803 * C2848 + C24798 * C2853 + C24802 * C1309 +
                     C51081 * C1315 + C24801 * C495 + C51080 * C510) *
                        C2229 -
                    (C24803 * C2854 + C24798 * C2857 + C24802 * C1316 +
                     C51081 * C1321 + C24801 * C511 + C51080 * C525) *
                        C2226) *
                       C50902 * C50757) *
                      C50790 * C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C1770 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C1768 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C1771 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C1770 +
                    (C24844 + C24845 + C24846) * C1768 -
                    (C25211 + C25212 + C25213) * C1771 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C50790 * C1119 +
                  (((C25213 + C25212 + C25211) * C1771 -
                    ((C24846 + C24845 + C24844) * C1768 +
                     (C24843 + C24842 + C24841) * C1770) +
                    (C25216 + C25215 + C25214) * C50869) *
                       C50902 * C51016 +
                   ((C25545 + C25546 + C25547) * C1771 -
                    ((C24847 + C24848 + C24849) * C1768 +
                     (C24850 + C24851 + C24852) * C1770) +
                    (C25548 + C25549 + C25550) * C50869) *
                       C50902 * C50757) *
                      C50790 * C1120 +
                  (((C24852 + C24851 + C24850) * C1770 +
                    (C24849 + C24848 + C24847) * C1768 -
                    (C25547 + C25546 + C25545) * C1771 -
                    (C25550 + C25549 + C25548) * C50869) *
                       C50902 * C51016 +
                   ((C24853 + C24854 + C24855) * C1770 +
                    (C24856 + C24857 + C24858) * C1768 -
                    (C24803 * C1657 + C24798 * C1664 + C24802 * C972 +
                     C51081 * C980 + C24801 * C496 + C51080 * C512) *
                        C1771 -
                    (C24803 * C1665 + C24798 * C1669 + C24802 * C981 +
                     C51081 * C987 + C24801 * C513 + C51080 * C526) *
                        C50869) *
                       C50902 * C50757) *
                      C50790 * C1121)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C1770 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C1768 -
                    (C24803 * C1654 + C24798 * C1658 + C24802 * C969 +
                     C51081 * C974 + C24801 * C490 + C51080 * C500) *
                        C1771 -
                    (C24803 * C1659 + C24798 * C1666 + C24802 * C975 +
                     C51081 * C984 + C24801 * C501 + C51080 * C520) *
                        C50869) *
                       C50902 * C51016 +
                   ((C24841 + C24842 + C24843) * C1770 +
                    (C24844 + C24845 + C24846) * C1768 -
                    (C25211 + C25212 + C25213) * C1771 -
                    (C25214 + C25215 + C25216) * C50869) *
                       C50902 * C50757) *
                      C293 +
                  (((C24801 * C969 + C51080 * C974 + C24802 * C1654 +
                     C51081 * C1658 + C24803 * C3416 + C24798 * C3419) *
                        C1771 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C1768 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C1770) +
                    (C24801 * C975 + C51080 * C984 + C24802 * C1659 +
                     C51081 * C1666 + C24803 * C3420 + C24798 * C3425) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25757 + C25758 + C25759) * C1771 -
                    ((C25029 + C25030 + C25031) * C1768 +
                     (C25032 + C25033 + C25034) * C1770) +
                    (C25760 + C25761 + C25762) * C50869) *
                       C50902 * C50757) *
                      C294 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C1770 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C1768 -
                    (C24803 * C4338 + C24798 * C4340 + C24802 * C3416 +
                     C51081 * C3419 + C24801 * C1654 + C51080 * C1658) *
                        C1771 -
                    (C24803 * C4341 + C24798 * C4344 + C24802 * C3420 +
                     C51081 * C3425 + C24801 * C1659 + C51080 * C1666) *
                        C50869) *
                       C50902 * C51016 +
                   ((C25035 + C25036 + C25037) * C1770 +
                    (C25038 + C25039 + C25040) * C1768 -
                    (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                     C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                        C1771 -
                    (C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                     C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                        C50869) *
                       C50902 * C50757) *
                      C295) *
                 C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C118 +
                     (C31450 + C31449 + C31448) * C50805) *
                        C50966) *
                       C50752 * C51031 -
                   (((C24803 * C3420 + C24798 * C3425 + C24802 * C1659 +
                      C51081 * C1666 + C24801 * C975 + C51080 * C984) *
                         C50805 +
                     (C24803 * C3416 + C24798 * C3419 + C24802 * C1654 +
                      C51081 * C1658 + C24801 * C969 + C51080 * C974) *
                         C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C50841) *
                      C51074 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C50841 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C51031) *
                      C51075 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C51045 +
                    ((C25545 + C25546 + C25547) * C118 +
                     (C25548 + C25549 + C25550) * C50805) *
                        C50966) *
                       C50752 * C51031 -
                   (((C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50805 +
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C118) *
                        C50966 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C51045) *
                       C50752 * C50841) *
                      C686)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C803 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51032 -
                     (C31445 + C31446 + C31447) * C804 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C803 +
                     (C31450 + C31449 + C31448) * C51032 -
                     (C31453 + C31452 + C31451) * C804 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C51031 +
                   (((C31955 + C31956 + C31957) * C804 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C51032 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C803) +
                     (C31958 + C31959 + C31960) * C50869) *
                        C51045 +
                    ((C24801 * C1307 + C51080 * C1311 + C24802 * C2846 +
                      C51081 * C2849 + C24803 * C3844 + C24798 * C3846) *
                         C804 -
                     ((C31960 + C31959 + C31958) * C51032 +
                      (C31957 + C31956 + C31955) * C803) +
                     (C24801 * C1312 + C51080 * C1319 + C24802 * C2850 +
                      C51081 * C2855 + C24803 * C3847 + C24798 * C3850) *
                         C50869) *
                        C50966) *
                       C50752 * C50841) *
                      C296 +
                  ((((C25213 + C25212 + C25211) * C804 -
                     ((C24846 + C24845 + C24844) * C51032 +
                      (C24843 + C24842 + C24841) * C803) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C51045 +
                    ((C25217 + C25218 + C25219) * C804 -
                     ((C25214 + C25215 + C25216) * C51032 +
                      (C25211 + C25212 + C25213) * C803) +
                     (C25220 + C25221 + C25222) * C50869) *
                        C50966) *
                       C50752 * C51031 +
                   (((C25034 + C25033 + C25032) * C803 +
                     (C25031 + C25030 + C25029) * C51032 -
                     (C25759 + C25758 + C25757) * C804 -
                     (C25762 + C25761 + C25760) * C50869) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C803 +
                     (C25760 + C25761 + C25762) * C51032 -
                     (C24803 * C3845 + C24798 * C3848 + C24802 * C2847 +
                      C51081 * C2851 + C24801 * C1308 + C51080 * C1313) *
                         C804 -
                     (C24803 * C3849 + C24798 * C3851 + C24802 * C2852 +
                      C51081 * C2856 + C24801 * C1314 + C51080 * C1320) *
                         C50869) *
                        C50966) *
                       C50752 * C50841) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C24801 * C490 + C51080 * C500 + C24802 * C969 +
                      C51081 * C974 + C24803 * C1654 + C24798 * C1658) *
                         C118 +
                     (C24801 * C501 + C51080 * C520 + C24802 * C975 +
                      C51081 * C984 + C24803 * C1659 + C24798 * C1666) *
                         C50805) *
                        C50966) *
                       C50752 * C293 -
                   (((C24803 * C3420 + C24798 * C3425 + C24802 * C1659 +
                      C51081 * C1666 + C24801 * C975 + C51080 * C984) *
                         C50805 +
                     (C24803 * C3416 + C24798 * C3419 + C24802 * C1654 +
                      C51081 * C1658 + C24801 * C969 + C51080 * C974) *
                         C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C51045 +
                    ((C24801 * C1654 + C51080 * C1658 + C24802 * C3416 +
                      C51081 * C3419 + C24803 * C4338 + C24798 * C4340) *
                         C118 +
                     (C24801 * C1659 + C51080 * C1666 + C24802 * C3420 +
                      C51081 * C3425 + C24803 * C4341 + C24798 * C4344) *
                         C50805) *
                        C50966) *
                       C50752 * C295) *
                      C296 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C294 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C293 -
                   (((C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                      C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                         C50805 +
                     (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                      C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                         C118) *
                        C50966 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C51045) *
                       C50752 * C295) *
                      C50778)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C51045 +
                   ((C24801 * C490 + C51080 * C500 + C24802 * C969 +
                     C51081 * C974 + C24803 * C1654 + C24798 * C1658) *
                        C118 +
                    (C24801 * C501 + C51080 * C520 + C24802 * C975 +
                     C51081 * C984 + C24803 * C1659 + C24798 * C1666) *
                        C50805) *
                       C50966) *
                      C50752 * C50790 * C113 -
                  (((C25214 + C25215 + C25216) * C50805 +
                    (C25211 + C25212 + C25213) * C118) *
                       C50966 +
                   ((C24846 + C24845 + C24844) * C50805 +
                    (C24843 + C24842 + C24841) * C118) *
                       C51045) *
                      C50752 * C50790 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50805) *
                       C51045 +
                   ((C25545 + C25546 + C25547) * C118 +
                    (C25548 + C25549 + C25550) * C50805) *
                       C50966) *
                      C50752 * C50790 * C115 -
                  (((C24803 * C1665 + C24798 * C1669 + C24802 * C981 +
                     C51081 * C987 + C24801 * C513 + C51080 * C526) *
                        C50805 +
                    (C24803 * C1657 + C24798 * C1664 + C24802 * C972 +
                     C51081 * C980 + C24801 * C496 + C51080 * C512) *
                        C118) *
                       C50966 +
                   ((C24858 + C24857 + C24856) * C50805 +
                    (C24855 + C24854 + C24853) * C118) *
                       C51045) *
                      C50752 * C50790 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C487 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C484 -
                    (C31445 + C31446 + C31447) * C488 -
                    (C31448 + C31449 + C31450) * C485 +
                    (C31451 + C31452 + C31453) * C489 +
                    (C31454 + C31455 + C31456) * C486) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C487 +
                    (C31450 + C31449 + C31448) * C484 -
                    (C31453 + C31452 + C31451) * C488 -
                    (C31456 + C31455 + C31454) * C485 +
                    (C24801 * C1968 + C51080 * C1972 + C24802 * C4737 +
                     C51081 * C4741 + C24803 * C4736 + C24798 * C4740) *
                        C489 +
                    (C24801 * C1973 + C51080 * C1980 + C24802 * C4743 +
                     C51081 * C4749 + C24803 * C4742 + C24798 * C4748) *
                        C486) *
                       C50966) *
                      C50752 * C50790 * C296 +
                  (((C25213 + C25212 + C25211) * C488 -
                    ((C24846 + C24845 + C24844) * C484 +
                     (C24843 + C24842 + C24841) * C487) +
                    (C25216 + C25215 + C25214) * C485 -
                    (C25219 + C25218 + C25217) * C489 -
                    (C25222 + C25221 + C25220) * C486) *
                       C51045 +
                   ((C25217 + C25218 + C25219) * C488 -
                    ((C25214 + C25215 + C25216) * C484 +
                     (C25211 + C25212 + C25213) * C487) +
                    (C25220 + C25221 + C25222) * C485 -
                    (C24803 * C4738 + C24798 * C4744 + C24802 * C4739 +
                     C51081 * C4745 + C24801 * C1969 + C51080 * C1974) *
                        C489 -
                    (C24803 * C4746 + C24798 * C4750 + C24802 * C4747 +
                     C51081 * C4751 + C24801 * C1975 + C51080 * C1981) *
                        C486) *
                       C50966) *
                      C50752 * C50790 * C50778)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C803 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51032 -
                    (C31445 + C31446 + C31447) * C804 -
                    (C31448 + C31449 + C31450) * C50869) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C803 +
                    (C31450 + C31449 + C31448) * C51032 -
                    (C31453 + C31452 + C31451) * C804 -
                    (C31456 + C31455 + C31454) * C50869) *
                       C50966) *
                      C50752 * C50790 * C51074 +
                  (((C25213 + C25212 + C25211) * C804 -
                    ((C24846 + C24845 + C24844) * C51032 +
                     (C24843 + C24842 + C24841) * C803) +
                    (C25216 + C25215 + C25214) * C50869) *
                       C51045 +
                   ((C25217 + C25218 + C25219) * C804 -
                    ((C25214 + C25215 + C25216) * C51032 +
                     (C25211 + C25212 + C25213) * C803) +
                    (C25220 + C25221 + C25222) * C50869) *
                       C50966) *
                      C50752 * C50790 * C51075 +
                  (((C24852 + C24851 + C24850) * C803 +
                    (C24849 + C24848 + C24847) * C51032 -
                    (C25547 + C25546 + C25545) * C804 -
                    (C25550 + C25549 + C25548) * C50869) *
                       C51045 +
                   ((C25545 + C25546 + C25547) * C803 +
                    (C25548 + C25549 + C25550) * C51032 -
                    (C24803 * C2848 + C24798 * C2853 + C24802 * C1309 +
                     C51081 * C1315 + C24801 * C495 + C51080 * C510) *
                        C804 -
                    (C24803 * C2854 + C24798 * C2857 + C24802 * C1316 +
                     C51081 * C1321 + C24801 * C511 + C51080 * C525) *
                        C50869) *
                       C50966) *
                      C50752 * C50790 * C686)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C51045 +
                   ((C24801 * C490 + C51080 * C500 + C24802 * C969 +
                     C51081 * C974 + C24803 * C1654 + C24798 * C1658) *
                        C118 +
                    (C24801 * C501 + C51080 * C520 + C24802 * C975 +
                     C51081 * C984 + C24803 * C1659 + C24798 * C1666) *
                        C50805) *
                       C50966) *
                      C50752 * C50790 * C113 -
                  (((C25214 + C25215 + C25216) * C50805 +
                    (C25211 + C25212 + C25213) * C118) *
                       C50966 +
                   ((C24846 + C24845 + C24844) * C50805 +
                    (C24843 + C24842 + C24841) * C118) *
                       C51045) *
                      C50752 * C50790 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50805) *
                       C51045 +
                   ((C25545 + C25546 + C25547) * C118 +
                    (C25548 + C25549 + C25550) * C50805) *
                       C50966) *
                      C50752 * C50790 * C115 -
                  (((C24803 * C1665 + C24798 * C1669 + C24802 * C981 +
                     C51081 * C987 + C24801 * C513 + C51080 * C526) *
                        C50805 +
                    (C24803 * C1657 + C24798 * C1664 + C24802 * C972 +
                     C51081 * C980 + C24801 * C496 + C51080 * C512) *
                        C118) *
                       C50966 +
                   ((C24858 + C24857 + C24856) * C50805 +
                    (C24855 + C24854 + C24853) * C118) *
                       C51045) *
                      C50752 * C50790 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C24801 * C490 + C51080 * C500 + C24802 * C969 +
                      C51081 * C974 + C24803 * C1654 + C24798 * C1658) *
                         C118 +
                     (C24801 * C501 + C51080 * C520 + C24802 * C975 +
                      C51081 * C984 + C24803 * C1659 + C24798 * C1666) *
                         C50805) *
                        C50966) *
                       C50752 * C293 -
                   (((C24803 * C3420 + C24798 * C3425 + C24802 * C1659 +
                      C51081 * C1666 + C24801 * C975 + C51080 * C984) *
                         C50805 +
                     (C24803 * C3416 + C24798 * C3419 + C24802 * C1654 +
                      C51081 * C1658 + C24801 * C969 + C51080 * C974) *
                         C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C51045 +
                    ((C24801 * C1654 + C51080 * C1658 + C24802 * C3416 +
                      C51081 * C3419 + C24803 * C4338 + C24798 * C4340) *
                         C118 +
                     (C24801 * C1659 + C51080 * C1666 + C24802 * C3420 +
                      C51081 * C3425 + C24803 * C4341 + C24798 * C4344) *
                         C50805) *
                        C50966) *
                       C50752 * C295) *
                      C296 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C294 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C293 -
                   (((C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                      C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                         C50805 +
                     (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                      C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                         C118) *
                        C50966 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C51045) *
                       C50752 * C295) *
                      C50778)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C118 +
                     (C31450 + C31449 + C31448) * C50805) *
                        C50966) *
                       C50752 * C51076 -
                   (((C31960 + C31959 + C31958) * C50805 +
                     (C31957 + C31956 + C31955) * C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C51077 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C118 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C50805) *
                        C51045 +
                    ((C24801 * C1654 + C51080 * C1658 + C24802 * C3416 +
                      C51081 * C3419 + C24803 * C4338 + C24798 * C4340) *
                         C118 +
                     (C24801 * C1659 + C51080 * C1666 + C24802 * C3420 +
                      C51081 * C3425 + C24803 * C4341 + C24798 * C4344) *
                         C50805) *
                        C50966) *
                       C50752 * C1423) *
                      C51023 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C51077 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C51076 -
                   (((C24803 * C4343 + C24798 * C4345 + C24802 * C3422 +
                      C51081 * C3426 + C24801 * C1661 + C51080 * C1667) *
                         C50805 +
                     (C24803 * C4339 + C24798 * C4342 + C24802 * C3417 +
                      C51081 * C3421 + C24801 * C1655 + C51080 * C1660) *
                         C118) *
                        C50966 +
                    ((C25040 + C25039 + C25038) * C50805 +
                     (C25037 + C25036 + C25035) * C118) *
                        C51045) *
                       C50752 * C1423) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C803 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C51032 -
                    (C31445 + C31446 + C31447) * C804 -
                    (C31448 + C31449 + C31450) * C50869) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C803 +
                    (C31450 + C31449 + C31448) * C51032 -
                    (C31453 + C31452 + C31451) * C804 -
                    (C31456 + C31455 + C31454) * C50869) *
                       C50966) *
                      C50752 * C51076 +
                  (((C31955 + C31956 + C31957) * C804 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C51032 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C803) +
                    (C31958 + C31959 + C31960) * C50869) *
                       C51045 +
                   ((C32365 + C32364 + C32363) * C804 -
                    ((C31960 + C31959 + C31958) * C51032 +
                     (C31957 + C31956 + C31955) * C803) +
                    (C32368 + C32367 + C32366) * C50869) *
                       C50966) *
                      C50752 * C51077 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C803 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C51032 -
                    (C32867 + C32868 + C32869) * C804 -
                    (C32870 + C32871 + C32872) * C50869) *
                       C51045 +
                   ((C32869 + C32868 + C32867) * C803 +
                    (C32872 + C32871 + C32870) * C51032 -
                    (C24803 * C20996 + C24798 * C20997 + C24802 * C3844 +
                     C51081 * C3846 + C24801 * C2846 + C51080 * C2849) *
                        C804 -
                    (C24803 * C20998 + C24798 * C20999 + C24802 * C3847 +
                     C51081 * C3850 + C24801 * C2850 + C51080 * C2855) *
                        C50869) *
                       C50966) *
                      C50752 * C1423) *
                 C50773) /
                (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C118 +
                    (C31450 + C31449 + C31448) * C50805) *
                       C50966) *
                      C50752 * C1188 -
                  (((C31960 + C31959 + C31958) * C50805 +
                    (C31957 + C31956 + C31955) * C118) *
                       C50966 +
                   ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                     C51081 * C332 + C24801 * C314 + C51080 * C331) *
                        C50805 +
                    (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                     C51081 * C316 + C24801 * C301 + C51080 * C315) *
                        C118) *
                       C51045) *
                      C50752 * C1189 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C118 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C50805) *
                       C51045 +
                   ((C24801 * C1654 + C51080 * C1658 + C24802 * C3416 +
                     C51081 * C3419 + C24803 * C4338 + C24798 * C4340) *
                        C118 +
                    (C24801 * C1659 + C51080 * C1666 + C24802 * C3420 +
                     C51081 * C3425 + C24803 * C4341 + C24798 * C4344) *
                        C50805) *
                       C50966) *
                      C50752 * C1190 -
                  (((C24803 * C21328 + C24798 * C21329 + C24802 * C4341 +
                     C51081 * C4344 + C24801 * C3420 + C51080 * C3425) *
                        C50805 +
                    (C24803 * C21326 + C24798 * C21327 + C24802 * C4338 +
                     C51081 * C4340 + C24801 * C3416 + C51080 * C3419) *
                        C118) *
                       C50966 +
                   ((C24803 * C3694 + C24798 * C3697 + C24802 * C2656 +
                     C51081 * C2661 + C24801 * C1203 + C51080 * C1208) *
                        C50805 +
                    (C24803 * C3691 + C24798 * C3695 + C24802 * C2652 +
                     C51081 * C2655 + C24801 * C1196 + C51080 * C1204) *
                        C118) *
                       C51045) *
                      C50752 * C1191) *
                 C50773) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C118 +
                     (C31450 + C31449 + C31448) * C50805) *
                        C50966) *
                       C50752 * C1117 -
                   (((C31960 + C31959 + C31958) * C50805 +
                     (C31957 + C31956 + C31955) * C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C50841) *
                      C1119 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C50841 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C1117) *
                      C1120 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C51045 +
                    ((C25545 + C25546 + C25547) * C118 +
                     (C25548 + C25549 + C25550) * C50805) *
                        C50966) *
                       C50752 * C1117 -
                   (((C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50805 +
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C118) *
                        C50966 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C51045) *
                       C50752 * C50841) *
                      C1121)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C487 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C484 -
                    (C31445 + C31446 + C31447) * C488 -
                    (C31448 + C31449 + C31450) * C485 +
                    (C31451 + C31452 + C31453) * C489 +
                    (C31454 + C31455 + C31456) * C486) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C487 +
                    (C31450 + C31449 + C31448) * C484 -
                    (C31453 + C31452 + C31451) * C488 -
                    (C31456 + C31455 + C31454) * C485 +
                    (C24801 * C1968 + C51080 * C1972 + C24802 * C4737 +
                     C51081 * C4741 + C24803 * C4736 + C24798 * C4740) *
                        C489 +
                    (C24801 * C1973 + C51080 * C1980 + C24802 * C4743 +
                     C51081 * C4749 + C24803 * C4742 + C24798 * C4748) *
                        C486) *
                       C50966) *
                      C50752 * C1117 +
                  (((C31955 + C31956 + C31957) * C488 -
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C484 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C487) +
                    (C31958 + C31959 + C31960) * C485 -
                    (C32363 + C32364 + C32365) * C489 -
                    (C32366 + C32367 + C32368) * C486) *
                       C51045 +
                   ((C32365 + C32364 + C32363) * C488 -
                    ((C31960 + C31959 + C31958) * C484 +
                     (C31957 + C31956 + C31955) * C487) +
                    (C32368 + C32367 + C32366) * C485 -
                    (C24803 * C21592 + C24798 * C21593 + C24802 * C4736 +
                     C51081 * C4740 + C24801 * C4737 + C51080 * C4741) *
                        C489 -
                    (C24803 * C21594 + C24798 * C21595 + C24802 * C4742 +
                     C51081 * C4748 + C24801 * C4743 + C51080 * C4749) *
                        C486) *
                       C50966) *
                      C50752 * C50841) *
                 C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C803 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51032 -
                     (C31445 + C31446 + C31447) * C804 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C803 +
                     (C31450 + C31449 + C31448) * C51032 -
                     (C31453 + C31452 + C31451) * C804 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C1117 +
                   (((C31955 + C31956 + C31957) * C804 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C51032 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C803) +
                     (C31958 + C31959 + C31960) * C50869) *
                        C51045 +
                    ((C32365 + C32364 + C32363) * C804 -
                     ((C31960 + C31959 + C31958) * C51032 +
                      (C31957 + C31956 + C31955) * C803) +
                     (C32368 + C32367 + C32366) * C50869) *
                        C50966) *
                       C50752 * C50841) *
                      C51023 +
                  ((((C25213 + C25212 + C25211) * C804 -
                     ((C24846 + C24845 + C24844) * C51032 +
                      (C24843 + C24842 + C24841) * C803) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C51045 +
                    ((C25217 + C25218 + C25219) * C804 -
                     ((C25214 + C25215 + C25216) * C51032 +
                      (C25211 + C25212 + C25213) * C803) +
                     (C25220 + C25221 + C25222) * C50869) *
                        C50966) *
                       C50752 * C1117 +
                   (((C25034 + C25033 + C25032) * C803 +
                     (C25031 + C25030 + C25029) * C51032 -
                     (C25759 + C25758 + C25757) * C804 -
                     (C25762 + C25761 + C25760) * C50869) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C803 +
                     (C25760 + C25761 + C25762) * C51032 -
                     (C24803 * C3845 + C24798 * C3848 + C24802 * C2847 +
                      C51081 * C2851 + C24801 * C1308 + C51080 * C1313) *
                         C804 -
                     (C24803 * C3849 + C24798 * C3851 + C24802 * C2852 +
                      C51081 * C2856 + C24801 * C1314 + C51080 * C1320) *
                         C50869) *
                        C50966) *
                       C50752 * C50841) *
                      C50778)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C118 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C50805) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C118 +
                     (C31450 + C31449 + C31448) * C50805) *
                        C50966) *
                       C50752 * C1117 -
                   (((C31960 + C31959 + C31958) * C50805 +
                     (C31957 + C31956 + C31955) * C118) *
                        C50966 +
                    ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                      C51081 * C332 + C24801 * C314 + C51080 * C331) *
                         C50805 +
                     (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                      C51081 * C316 + C24801 * C301 + C51080 * C315) *
                         C118) *
                        C51045) *
                       C50752 * C50841) *
                      C1119 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50805) *
                        C51045 +
                    ((C25757 + C25758 + C25759) * C118 +
                     (C25760 + C25761 + C25762) * C50805) *
                        C50966) *
                       C50752 * C50841 -
                   (((C25214 + C25215 + C25216) * C50805 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50966 +
                    ((C24846 + C24845 + C24844) * C50805 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51045) *
                       C50752 * C1117) *
                      C1120 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50805) *
                        C51045 +
                    ((C25545 + C25546 + C25547) * C118 +
                     (C25548 + C25549 + C25550) * C50805) *
                        C50966) *
                       C50752 * C1117 -
                   (((C24803 * C3424 + C24798 * C3427 + C24802 * C1663 +
                      C51081 * C1668 + C24801 * C979 + C51080 * C986) *
                         C50805 +
                     (C24803 * C3418 + C24798 * C3423 + C24802 * C1656 +
                      C51081 * C1662 + C24801 * C971 + C51080 * C978) *
                         C118) *
                        C50966 +
                    ((C25386 + C25385 + C25384) * C50805 +
                     (C25383 + C25382 + C25381) * C118) *
                        C51045) *
                       C50752 * C50841) *
                      C1121)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C118 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C50805) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C118 +
                    (C31450 + C31449 + C31448) * C50805) *
                       C50966) *
                      C50752 * C1188 -
                  (((C31960 + C31959 + C31958) * C50805 +
                    (C31957 + C31956 + C31955) * C118) *
                       C50966 +
                   ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                     C51081 * C332 + C24801 * C314 + C51080 * C331) *
                        C50805 +
                    (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                     C51081 * C316 + C24801 * C301 + C51080 * C315) *
                        C118) *
                       C51045) *
                      C50752 * C1189 +
                  (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                     C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                        C118 +
                    (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                     C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                        C50805) *
                       C51045 +
                   ((C24801 * C1654 + C51080 * C1658 + C24802 * C3416 +
                     C51081 * C3419 + C24803 * C4338 + C24798 * C4340) *
                        C118 +
                    (C24801 * C1659 + C51080 * C1666 + C24802 * C3420 +
                     C51081 * C3425 + C24803 * C4341 + C24798 * C4344) *
                        C50805) *
                       C50966) *
                      C50752 * C1190 -
                  (((C24803 * C21328 + C24798 * C21329 + C24802 * C4341 +
                     C51081 * C4344 + C24801 * C3420 + C51080 * C3425) *
                        C50805 +
                    (C24803 * C21326 + C24798 * C21327 + C24802 * C4338 +
                     C51081 * C4340 + C24801 * C3416 + C51080 * C3419) *
                        C118) *
                       C50966 +
                   ((C24803 * C3694 + C24798 * C3697 + C24802 * C2656 +
                     C51081 * C2661 + C24801 * C1203 + C51080 * C1208) *
                        C50805 +
                    (C24803 * C3691 + C24798 * C3695 + C24802 * C2652 +
                     C51081 * C2655 + C24801 * C1196 + C51080 * C1204) *
                        C118) *
                       C51045) *
                      C50752 * C1191) *
                 C50773) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                       C51081 * C315 + C24803 * C302 + C24798 * C316) *
                          C1770 +
                      (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                       C51081 * C331 + C24803 * C317 + C24798 * C332) *
                          C1768 -
                      (C31445 + C31446 + C31447) * C1771 -
                      (C31448 + C31449 + C31450) * C50869) *
                         C51045 +
                     ((C31447 + C31446 + C31445) * C1770 +
                      (C31450 + C31449 + C31448) * C1768 -
                      (C31453 + C31452 + C31451) * C1771 -
                      (C31456 + C31455 + C31454) * C50869) *
                         C50966) *
                        C50752 * C51031 +
                    (((C31955 + C31956 + C31957) * C1771 -
                      ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                        C51081 * C332 + C24801 * C314 + C51080 * C331) *
                           C1768 +
                       (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                        C51081 * C316 + C24801 * C301 + C51080 * C315) *
                           C1770) +
                      (C31958 + C31959 + C31960) * C50869) *
                         C51045 +
                     ((C32365 + C32364 + C32363) * C1771 -
                      ((C31960 + C31959 + C31958) * C1768 +
                       (C31957 + C31956 + C31955) * C1770) +
                      (C32368 + C32367 + C32366) * C50869) *
                         C50966) *
                        C50752 * C50841) *
                       C51023 +
                   ((((C25213 + C25212 + C25211) * C1771 -
                      ((C24846 + C24845 + C24844) * C1768 +
                       (C24843 + C24842 + C24841) * C1770) +
                      (C25216 + C25215 + C25214) * C50869) *
                         C51045 +
                     ((C25217 + C25218 + C25219) * C1771 -
                      ((C25214 + C25215 + C25216) * C1768 +
                       (C25211 + C25212 + C25213) * C1770) +
                      (C25220 + C25221 + C25222) * C50869) *
                         C50966) *
                        C50752 * C51031 +
                    (((C25034 + C25033 + C25032) * C1770 +
                      (C25031 + C25030 + C25029) * C1768 -
                      (C25759 + C25758 + C25757) * C1771 -
                      (C25762 + C25761 + C25760) * C50869) *
                         C51045 +
                     ((C25757 + C25758 + C25759) * C1770 +
                      (C25760 + C25761 + C25762) * C1768 -
                      (C24803 * C3845 + C24798 * C3848 + C24802 * C2847 +
                       C51081 * C2851 + C24801 * C1308 + C51080 * C1313) *
                          C1771 -
                      (C24803 * C3849 + C24798 * C3851 + C24802 * C2852 +
                       C51081 * C2856 + C24801 * C1314 + C51080 * C1320) *
                          C50869) *
                         C50966) *
                        C50752 * C50841) *
                       C50778)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C2227 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51078 -
                     (C31445 + C31446 + C31447) * C2228 -
                     (C31448 + C31449 + C31450) * C51079 +
                     (C31451 + C31452 + C31453) * C2229 +
                     (C31454 + C31455 + C31456) * C2226) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C2227 +
                     (C31450 + C31449 + C31448) * C51078 -
                     (C31453 + C31452 + C31451) * C2228 -
                     (C31456 + C31455 + C31454) * C51079 +
                     (C33277 + C33276 + C33275) * C2229 +
                     (C33280 + C33279 + C33278) * C2226) *
                        C50966) *
                       C50752 * C51031 +
                   (((C31955 + C31956 + C31957) * C2228 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C51078 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C2227) +
                     (C31958 + C31959 + C31960) * C51079 -
                     (C32363 + C32364 + C32365) * C2229 -
                     (C32366 + C32367 + C32368) * C2226) *
                        C51045 +
                    ((C32365 + C32364 + C32363) * C2228 -
                     ((C31960 + C31959 + C31958) * C51078 +
                      (C31957 + C31956 + C31955) * C2227) +
                     (C32368 + C32367 + C32366) * C51079 -
                     (C24803 * C21592 + C24798 * C21593 + C24802 * C4736 +
                      C51081 * C4740 + C24801 * C4737 + C51080 * C4741) *
                         C2229 -
                     (C24803 * C21594 + C24798 * C21595 + C24802 * C4742 +
                      C51081 * C4748 + C24801 * C4743 + C51080 * C4749) *
                         C2226) *
                        C50966) *
                       C50752 * C50841) *
                  C50773) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C1770 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C1768 -
                     (C31445 + C31446 + C31447) * C1771 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C1770 +
                     (C31450 + C31449 + C31448) * C1768 -
                     (C31453 + C31452 + C31451) * C1771 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C293 +
                   (((C31955 + C31956 + C31957) * C1771 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C1768 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C1770) +
                     (C31958 + C31959 + C31960) * C50869) *
                        C51045 +
                    ((C32365 + C32364 + C32363) * C1771 -
                     ((C31960 + C31959 + C31958) * C1768 +
                      (C31957 + C31956 + C31955) * C1770) +
                     (C32368 + C32367 + C32366) * C50869) *
                        C50966) *
                       C50752 * C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C1770 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C1768 -
                     (C32867 + C32868 + C32869) * C1771 -
                     (C32870 + C32871 + C32872) * C50869) *
                        C51045 +
                    ((C32869 + C32868 + C32867) * C1770 +
                     (C32872 + C32871 + C32870) * C1768 -
                     (C24803 * C20996 + C24798 * C20997 + C24802 * C3844 +
                      C51081 * C3846 + C24801 * C2846 + C51080 * C2849) *
                         C1771 -
                     (C24803 * C20998 + C24798 * C20999 + C24802 * C3847 +
                      C51081 * C3850 + C24801 * C2850 + C51080 * C2855) *
                         C50869) *
                        C50966) *
                       C50752 * C295) *
                  C50773) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C1770 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C1768 -
                     (C31445 + C31446 + C31447) * C1771 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C1770 +
                     (C31450 + C31449 + C31448) * C1768 -
                     (C31453 + C31452 + C31451) * C1771 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C50790 * C1119 +
                   (((C25213 + C25212 + C25211) * C1771 -
                     ((C24846 + C24845 + C24844) * C1768 +
                      (C24843 + C24842 + C24841) * C1770) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C51045 +
                    ((C25217 + C25218 + C25219) * C1771 -
                     ((C25214 + C25215 + C25216) * C1768 +
                      (C25211 + C25212 + C25213) * C1770) +
                     (C25220 + C25221 + C25222) * C50869) *
                        C50966) *
                       C50752 * C50790 * C1120 +
                   (((C24852 + C24851 + C24850) * C1770 +
                     (C24849 + C24848 + C24847) * C1768 -
                     (C25547 + C25546 + C25545) * C1771 -
                     (C25550 + C25549 + C25548) * C50869) *
                        C51045 +
                    ((C25545 + C25546 + C25547) * C1770 +
                     (C25548 + C25549 + C25550) * C1768 -
                     (C24803 * C2848 + C24798 * C2853 + C24802 * C1309 +
                      C51081 * C1315 + C24801 * C495 + C51080 * C510) *
                         C1771 -
                     (C24803 * C2854 + C24798 * C2857 + C24802 * C1316 +
                      C51081 * C1321 + C24801 * C511 + C51080 * C525) *
                         C50869) *
                        C50966) *
                       C50752 * C50790 * C1121)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                     C51081 * C315 + C24803 * C302 + C24798 * C316) *
                        C1964 +
                    (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                     C51081 * C331 + C24803 * C317 + C24798 * C332) *
                        C1960 -
                    (C31445 + C31446 + C31447) * C1965 -
                    (C31448 + C31449 + C31450) * C1961 +
                    (C31451 + C31452 + C31453) * C1966 +
                    (C31454 + C31455 + C31456) * C1962 -
                    (C33275 + C33276 + C33277) * C1967 -
                    (C33278 + C33279 + C33280) * C1963) *
                       C51045 +
                   ((C31447 + C31446 + C31445) * C1964 +
                    (C31450 + C31449 + C31448) * C1960 -
                    (C31453 + C31452 + C31451) * C1965 -
                    (C31456 + C31455 + C31454) * C1961 +
                    (C33277 + C33276 + C33275) * C1966 +
                    (C33280 + C33279 + C33278) * C1962 -
                    (C24803 * C23276 + C24798 * C23277 + C24802 * C6661 +
                     C51081 * C6663 + C24801 * C5669 + C51080 * C5672) *
                        C1967 -
                    (C24803 * C23278 + C24798 * C23279 + C24802 * C6664 +
                     C51081 * C6667 + C24801 * C5673 + C51080 * C5678) *
                        C1963) *
                       C50966) *
                  C50752 * C50790 * C50773) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C2227 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C51078 -
                     (C31445 + C31446 + C31447) * C2228 -
                     (C31448 + C31449 + C31450) * C51079 +
                     (C31451 + C31452 + C31453) * C2229 +
                     (C31454 + C31455 + C31456) * C2226) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C2227 +
                     (C31450 + C31449 + C31448) * C51078 -
                     (C31453 + C31452 + C31451) * C2228 -
                     (C31456 + C31455 + C31454) * C51079 +
                     (C33277 + C33276 + C33275) * C2229 +
                     (C33280 + C33279 + C33278) * C2226) *
                        C50966) *
                       C50752 * C50790 * C51023 +
                   (((C25213 + C25212 + C25211) * C2228 -
                     ((C24846 + C24845 + C24844) * C51078 +
                      (C24843 + C24842 + C24841) * C2227) +
                     (C25216 + C25215 + C25214) * C51079 -
                     (C25219 + C25218 + C25217) * C2229 -
                     (C25222 + C25221 + C25220) * C2226) *
                        C51045 +
                    ((C25217 + C25218 + C25219) * C2228 -
                     ((C25214 + C25215 + C25216) * C51078 +
                      (C25211 + C25212 + C25213) * C2227) +
                     (C25220 + C25221 + C25222) * C51079 -
                     (C24803 * C4738 + C24798 * C4744 + C24802 * C4739 +
                      C51081 * C4745 + C24801 * C1969 + C51080 * C1974) *
                         C2229 -
                     (C24803 * C4746 + C24798 * C4750 + C24802 * C4747 +
                      C51081 * C4751 + C24801 * C1975 + C51080 * C1981) *
                         C2226) *
                        C50966) *
                       C50752 * C50790 * C50778)) /
                 (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C1770 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C1768 -
                     (C31445 + C31446 + C31447) * C1771 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C1770 +
                     (C31450 + C31449 + C31448) * C1768 -
                     (C31453 + C31452 + C31451) * C1771 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C50790 * C1119 +
                   (((C25213 + C25212 + C25211) * C1771 -
                     ((C24846 + C24845 + C24844) * C1768 +
                      (C24843 + C24842 + C24841) * C1770) +
                     (C25216 + C25215 + C25214) * C50869) *
                        C51045 +
                    ((C25217 + C25218 + C25219) * C1771 -
                     ((C25214 + C25215 + C25216) * C1768 +
                      (C25211 + C25212 + C25213) * C1770) +
                     (C25220 + C25221 + C25222) * C50869) *
                        C50966) *
                       C50752 * C50790 * C1120 +
                   (((C24852 + C24851 + C24850) * C1770 +
                     (C24849 + C24848 + C24847) * C1768 -
                     (C25547 + C25546 + C25545) * C1771 -
                     (C25550 + C25549 + C25548) * C50869) *
                        C51045 +
                    ((C25545 + C25546 + C25547) * C1770 +
                     (C25548 + C25549 + C25550) * C1768 -
                     (C24803 * C2848 + C24798 * C2853 + C24802 * C1309 +
                      C51081 * C1315 + C24801 * C495 + C51080 * C510) *
                         C1771 -
                     (C24803 * C2854 + C24798 * C2857 + C24802 * C1316 +
                      C51081 * C1321 + C24801 * C511 + C51080 * C525) *
                         C50869) *
                        C50966) *
                       C50752 * C50790 * C1121)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51080 * C126 + C24802 * C301 +
                      C51081 * C315 + C24803 * C302 + C24798 * C316) *
                         C1770 +
                     (C24801 * C127 + C51080 * C140 + C24802 * C314 +
                      C51081 * C331 + C24803 * C317 + C24798 * C332) *
                         C1768 -
                     (C31445 + C31446 + C31447) * C1771 -
                     (C31448 + C31449 + C31450) * C50869) *
                        C51045 +
                    ((C31447 + C31446 + C31445) * C1770 +
                     (C31450 + C31449 + C31448) * C1768 -
                     (C31453 + C31452 + C31451) * C1771 -
                     (C31456 + C31455 + C31454) * C50869) *
                        C50966) *
                       C50752 * C293 +
                   (((C31955 + C31956 + C31957) * C1771 -
                     ((C24803 * C1203 + C24798 * C1208 + C24802 * C317 +
                       C51081 * C332 + C24801 * C314 + C51080 * C331) *
                          C1768 +
                      (C24803 * C1196 + C24798 * C1204 + C24802 * C302 +
                       C51081 * C316 + C24801 * C301 + C51080 * C315) *
                          C1770) +
                     (C31958 + C31959 + C31960) * C50869) *
                        C51045 +
                    ((C32365 + C32364 + C32363) * C1771 -
                     ((C31960 + C31959 + C31958) * C1768 +
                      (C31957 + C31956 + C31955) * C1770) +
                     (C32368 + C32367 + C32366) * C50869) *
                        C50966) *
                       C50752 * C294 +
                   (((C24801 * C302 + C51080 * C316 + C24802 * C1196 +
                      C51081 * C1204 + C24803 * C2652 + C24798 * C2655) *
                         C1770 +
                     (C24801 * C317 + C51080 * C332 + C24802 * C1203 +
                      C51081 * C1208 + C24803 * C2656 + C24798 * C2661) *
                         C1768 -
                     (C32867 + C32868 + C32869) * C1771 -
                     (C32870 + C32871 + C32872) * C50869) *
                        C51045 +
                    ((C32869 + C32868 + C32867) * C1770 +
                     (C32872 + C32871 + C32870) * C1768 -
                     (C24803 * C20996 + C24798 * C20997 + C24802 * C3844 +
                      C51081 * C3846 + C24801 * C2846 + C51080 * C2849) *
                         C1771 -
                     (C24803 * C20998 + C24798 * C20999 + C24802 * C3847 +
                      C51081 * C3850 + C24801 * C2850 + C51080 * C2855) *
                         C50869) *
                        C50966) *
                       C50752 * C295) *
                  C50773) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C51031 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C51074 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C51031) *
              C51075 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C51031 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C51031 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C50841) *
              C51074 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C50841 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C51031) *
              C51075 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
                C17372) *
               C51031 -
           (((C17374 * C326 + C50938 * C337 + C17373 * C325 + C17368 * C336) *
                 C50805 +
             (C17374 * C307 + C50938 * C327 + C17373 * C306 + C17368 * C324) *
                 C118) *
                C50902 * C17372 +
            ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C50902 *
                C17371 +
            C17987 * C17370) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
            (C22363 * C118 + C22364 * C50805) * C5338) *
               C50752 * C51031 -
           (((C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
              C17368 * C1319) *
                 C50805 +
             (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
              C17368 * C1311) *
                 C118) *
                C5338 +
            ((C17374 * C1659 + C50938 * C1666 + C17373 * C975 + C17368 * C984) *
                 C50805 +
             (C17374 * C1654 + C50938 * C1658 + C17373 * C969 + C17368 * C974) *
                 C118) *
                C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C50841) *
              C51074 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C17373 * C1308 + C17368 * C1313 + C17374 * C2847 +
              C50938 * C2851) *
                 C118 +
             (C17373 * C1314 + C17368 * C1320 + C17374 * C2852 +
              C50938 * C2856) *
                 C50805) *
                C5338) *
               C50752 * C50841 -
           ((C22338 * C50805 + C22337 * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C51031) *
              C51075 +
          ((C17432 * C5336 +
            ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C5337 +
            ((C17820 + C17821) * C118 + (C17822 + C17823) * C50805) * C5338) *
               C50752 * C51031 -
           (((C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
              C17368 * C1321) *
                 C50805 +
             (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
              C17368 * C1315) *
                 C118) *
                C5338 +
            ((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C5337 +
            C17986 * C5336) *
               C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C803 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C51032 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C804 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C804 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C51032 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C803) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C296 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C804 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C51032 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C803) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C803 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C51032 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C804 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C804 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C18155 * C17372) *
               C51031 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C804 -
             ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C296 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C804 -
             ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C51031 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
             (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C803 + (C17984 + C17985) * C51032 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C804 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                C5336 +
            ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
             (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                C5337 +
            (C22363 * C803 + C22364 * C51032 - (C22356 + C22355) * C804 -
             (C22358 + C22357) * C50869) *
                C5338) *
               C50752 * C51031 +
           (((C22875 + C22876) * C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C22877 + C22878) * C50869) *
                C5336 +
            ((C22879 + C22880) * C804 -
             ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
             (C22881 + C22882) * C50869) *
                C5337 +
            ((C17373 * C4737 + C17368 * C4741 + C17374 * C4736 +
              C50938 * C4740) *
                 C804 -
             ((C22882 + C22881) * C51032 + (C22880 + C22879) * C803) +
             (C17373 * C4743 + C17368 * C4749 + C17374 * C4742 +
              C50938 * C4748) *
                 C50869) *
                C5338) *
               C50752 * C50841) *
              C296 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C5336 +
            ((C17812 + C17813) * C804 -
             ((C17810 + C17811) * C51032 + (C17808 + C17809) * C803) +
             (C17814 + C17815) * C50869) *
                C5337 +
            ((C22360 + C22359) * C804 - (C22338 * C51032 + C22337 * C803) +
             (C22362 + C22361) * C50869) *
                C5338) *
               C50752 * C51031 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C5336 +
            ((C18366 + C18367) * C803 + (C18368 + C18369) * C51032 -
             (C22883 + C22884) * C804 - (C22885 + C22886) * C50869) *
                C5337 +
            ((C22884 + C22883) * C803 + (C22886 + C22885) * C51032 -
             (C17374 * C4738 + C50938 * C4744 + C17373 * C4739 +
              C17368 * C4745) *
                 C804 -
             (C17374 * C4746 + C50938 * C4750 + C17373 * C4747 +
              C17368 * C4751) *
                 C50869) *
                C5338) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50938 * C315) *
                    C118 +
                (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                 C50938 * C331) *
                    C50805) *
                   C50902 * C17370 +
               ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) *
                   C50902 * C17371 +
               C17434 * C17372) *
                  C50790 * C113 -
              (C17435 * C17372 +
               ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) *
                   C50902 * C17371 +
               ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) *
                   C50902 * C17370) *
                  C50790 * C114 +
              (C17434 * C17370 +
               ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) *
                   C50902 * C17371 +
               ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) *
                   C50902 * C17372) *
                  C50790 * C115 -
              (((C17374 * C688 + C50938 * C690 + C17373 * C137 +
                 C17368 * C145) *
                    C50805 +
                (C17374 * C687 + C50938 * C689 + C17373 * C124 +
                 C17368 * C136) *
                    C118) *
                   C50902 * C17372 +
               ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) *
                   C50902 * C17371 +
               C17435 * C17370) *
                  C50790 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                  C50938 * C315) *
                     C118 +
                 (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                  C50938 * C331) *
                     C50805) *
                    C50902 * C17370 +
                ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) *
                    C50902 * C17371 +
                C17434 * C17372) *
                   C293 -
               (((C17614 + C17615) * C50805 + (C17616 + C17617) * C118) *
                    C50902 * C17372 +
                ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) *
                    C50902 * C17371 +
                ((C17374 * C317 + C50938 * C332 + C17373 * C314 +
                  C17368 * C331) *
                     C50805 +
                 (C17374 * C302 + C50938 * C316 + C17373 * C301 +
                  C17368 * C315) *
                     C118) *
                    C50902 * C17370) *
                   C294 +
               (((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
                  C50938 * C1204) *
                     C118 +
                 (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
                  C50938 * C1208) *
                     C50805) *
                    C50902 * C17370 +
                ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) *
                    C50902 * C17371 +
                ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) *
                    C50902 * C17372) *
                   C295) *
                  C296 +
              ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) *
                    C50902 * C17370 +
                ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) *
                    C50902 * C17371 +
                ((C17373 * C298 + C17368 * C309 + C17374 * C305 +
                  C50938 * C322) *
                     C118 +
                 (C17373 * C308 + C17368 * C328 + C17374 * C323 +
                  C50938 * C335) *
                     C50805) *
                    C50902 * C17372) *
                   C294 -
               (C17435 * C17372 +
                ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) *
                    C50902 * C17371 +
                ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) *
                    C50902 * C17370) *
                   C293 -
               (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 +
                  C17368 * C335) *
                     C50805 +
                 (C17374 * C1193 + C50938 * C1198 + C17373 * C305 +
                  C17368 * C322) *
                     C118) *
                    C50902 * C17372 +
                ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) *
                    C50902 * C17371 +
                ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) *
                    C50902 * C17370) *
                   C295) *
                  C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C488 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C485 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C489 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
            (C17808 + C17809) * C488 - (C17810 + C17811) * C485 +
            (C17812 + C17813) * C489 + (C17814 + C17815) * C486) *
               C50902 * C17371 +
           (C17424 * C487 + C17425 * C484 - (C17816 + C17817) * C488 -
            (C17818 + C17819) * C485 + (C17820 + C17821) * C489 +
            (C17822 + C17823) * C486) *
               C50902 * C17372) *
              C50790 * C296 +
          (((C17809 + C17808) * C488 -
            ((C17411 + C17410) * C484 + (C17409 + C17408) * C487) +
            (C17811 + C17810) * C485 - (C17813 + C17812) * C489 -
            (C17815 + C17814) * C486) *
               C50902 * C17370 +
           ((C17817 + C17816) * C488 -
            ((C17415 + C17414) * C484 + (C17413 + C17412) * C487) +
            (C17819 + C17818) * C485 - (C17821 + C17820) * C489 -
            (C17823 + C17822) * C486) *
               C50902 * C17371 +
           ((C17373 * C496 + C17368 * C512 + C17374 * C972 + C50938 * C980) *
                C488 -
            (C17426 * C484 + C17427 * C487) +
            (C17373 * C513 + C17368 * C526 + C17374 * C981 + C50938 * C987) *
                C485 -
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C489 -
            (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C486) *
               C50902 * C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C50790 * C113 -
          ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
            C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
               C50805 +
           (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
            C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50902 * C50752 * C50790 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C50805) *
              C50902 * C50752 * C50790 * C115 -
          ((C20207 * C1197 + C20202 * C1205 + C20206 * C323 + C20201 * C335 +
            C20205 * C308 + C20200 * C328 + C20204 * C133 + C20199 * C143) *
               C50805 +
           (C20207 * C1193 + C20202 * C1198 + C20206 * C305 + C20201 * C322 +
            C20205 * C298 + C20200 * C309 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50902 * C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C293 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C294 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C295) *
              C296 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C294 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C293 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C487 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C484 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C488 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C485 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C489 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C486) *
              C50902 * C50752 * C50790 * C296 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C488 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C484 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C487) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C485 -
           (C20207 * C3845 + C20202 * C3848 + C20206 * C2847 + C20201 * C2851 +
            C20205 * C1308 + C20200 * C1313 + C20204 * C493 + C20199 * C506) *
               C489 -
           (C20207 * C3849 + C20202 * C3851 + C20206 * C2852 + C20201 * C2856 +
            C20205 * C1314 + C20200 * C1320 + C20204 * C507 + C20199 * C523) *
               C486) *
              C50902 * C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C5336 +
           ((C17373 * C490 + C17368 * C500 + C17374 * C969 + C50938 * C974) *
                C118 +
            (C17373 * C501 + C17368 * C520 + C17374 * C975 + C50938 * C984) *
                C50805) *
               C5337 +
           ((C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C118 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C50805) *
               C5338) *
              C50752 * C50790 * C113 -
          (((C17815 + C17814) * C50805 + (C17813 + C17812) * C118) * C5338 +
           ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
           ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
              C50752 * C50790 * C114 +
          (C17432 * C5336 +
           ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C5337 +
           ((C17820 + C17821) * C118 + (C17822 + C17823) * C50805) * C5338) *
              C50752 * C50790 * C115 -
          (((C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C50805 +
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C118) *
               C5338 +
           ((C18152 + C18151) * C50805 + (C18150 + C18149) * C118) * C5337 +
           C17433 * C5336) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C17373 * C490 + C17368 * C500 + C17374 * C969 + C50938 * C974) *
                 C118 +
             (C17373 * C501 + C17368 * C520 + C17374 * C975 + C50938 * C984) *
                 C50805) *
                C5337 +
            ((C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                 C118 +
             (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                 C50805) *
                C5338) *
               C50752 * C293 -
           (((C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
              C17368 * C1319) *
                 C50805 +
             (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
              C17368 * C1311) *
                 C118) *
                C5338 +
            ((C17374 * C1659 + C50938 * C1666 + C17373 * C975 + C17368 * C984) *
                 C50805 +
             (C17374 * C1654 + C50938 * C1658 + C17373 * C969 + C17368 * C974) *
                 C118) *
                C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C294 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C5336 +
            ((C17373 * C1654 + C17368 * C1658 + C17374 * C3416 +
              C50938 * C3419) *
                 C118 +
             (C17373 * C1659 + C17368 * C1666 + C17374 * C3420 +
              C50938 * C3425) *
                 C50805) *
                C5337 +
            ((C17373 * C2846 + C17368 * C2849 + C17374 * C3844 +
              C50938 * C3846) *
                 C118 +
             (C17373 * C2850 + C17368 * C2855 + C17374 * C3847 +
              C50938 * C3850) *
                 C50805) *
                C5338) *
               C50752 * C295) *
              C296 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C17373 * C1308 + C17368 * C1313 + C17374 * C2847 +
              C50938 * C2851) *
                 C118 +
             (C17373 * C1314 + C17368 * C1320 + C17374 * C2852 +
              C50938 * C2856) *
                 C50805) *
                C5338) *
               C50752 * C294 -
           (((C17815 + C17814) * C50805 + (C17813 + C17812) * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C293 -
           (((C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50805 +
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C118) *
                C5338 +
            ((C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
              C17368 * C1667) *
                 C50805 +
             (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
              C17368 * C1660) *
                 C118) *
                C5337 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C5336) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C22347 + C22348) * C488 - (C22349 + C22350) * C485 +
            C22363 * C489 + C22364 * C486) *
               C5336 +
           ((C22348 + C22347) * C487 + (C22350 + C22349) * C484 -
            (C22352 + C22351) * C488 - (C22354 + C22353) * C485 +
            (C22355 + C22356) * C489 + (C22357 + C22358) * C486) *
               C5337 +
           (C22363 * C487 + C22364 * C484 - (C22356 + C22355) * C488 -
            (C22358 + C22357) * C485 +
            (C17373 * C5669 + C17368 * C5672 + C17374 * C6661 +
             C50938 * C6663) *
                C489 +
            (C17373 * C5673 + C17368 * C5678 + C17374 * C6664 +
             C50938 * C6667) *
                C486) *
               C5338) *
              C50752 * C50790 * C296 +
          (((C17809 + C17808) * C488 -
            ((C17411 + C17410) * C484 + (C17409 + C17408) * C487) +
            (C17811 + C17810) * C485 - C22337 * C489 - C22338 * C486) *
               C5336 +
           ((C17812 + C17813) * C488 -
            ((C17810 + C17811) * C484 + (C17808 + C17809) * C487) +
            (C17814 + C17815) * C485 - (C22359 + C22360) * C489 -
            (C22361 + C22362) * C486) *
               C5337 +
           ((C22360 + C22359) * C488 - (C22338 * C484 + C22337 * C487) +
            (C22362 + C22361) * C485 -
            (C17374 * C6662 + C50938 * C6665 + C17373 * C5670 +
             C17368 * C5674) *
                C489 -
            (C17374 * C6666 + C50938 * C6668 + C17373 * C5675 +
             C17368 * C5679) *
                C486) *
               C5338) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C803 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51032 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C804 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C51074 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C804 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C51032 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C803) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C51075 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C803 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C51032 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C804 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C804 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
            (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C18155 * C17372) *
              C50790 * C51074 +
          (((C17809 + C17808) * C804 -
            ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
            (C17811 + C17810) * C50869) *
               C50902 * C17370 +
           ((C17817 + C17816) * C804 -
            ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
            (C17819 + C17818) * C50869) *
               C50902 * C17371 +
           ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
            (C18151 + C18152) * C50869) *
               C50902 * C17372) *
              C50790 * C51075 +
          (C18155 * C17370 +
           ((C17419 + C17418) * C803 + (C17417 + C17416) * C51032 -
            (C18150 + C18149) * C804 - (C18152 + C18151) * C50869) *
               C50902 * C17371 +
           ((C17420 + C17421) * C803 + (C17422 + C17423) * C51032 -
            (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                C804 -
            (C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                C50869) *
               C50902 * C17372) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
            (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C803 + C22364 * C51032 - (C22356 + C22355) * C804 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C50790 * C51074 +
          (((C17809 + C17808) * C804 -
            ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
            (C17811 + C17810) * C50869) *
               C5336 +
           ((C17812 + C17813) * C804 -
            ((C17810 + C17811) * C51032 + (C17808 + C17809) * C803) +
            (C17814 + C17815) * C50869) *
               C5337 +
           ((C22360 + C22359) * C804 - (C22338 * C51032 + C22337 * C803) +
            (C22362 + C22361) * C50869) *
               C5338) *
              C50752 * C50790 * C51075 +
          (C18154 * C5336 +
           ((C17817 + C17816) * C803 + (C17819 + C17818) * C51032 -
            (C17821 + C17820) * C804 - (C17823 + C17822) * C50869) *
               C5337 +
           ((C17820 + C17821) * C803 + (C17822 + C17823) * C51032 -
            (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 +
             C17368 * C1976) *
                C804 -
            (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 +
             C17368 * C1982) *
                C50869) *
               C5338) *
              C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C293 -
           (((C17614 + C17615) * C50805 + (C17616 + C17617) * C118) * C50902 *
                C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C294 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C17370 +
            ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
                C17371 +
            ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
                C17372) *
               C295) *
              C296 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17373 * C298 + C17368 * C309 + C17374 * C305 + C50938 * C322) *
                 C118 +
             (C17373 * C308 + C17368 * C328 + C17374 * C323 + C50938 * C335) *
                 C50805) *
                C50902 * C17372) *
               C294 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C293 -
           (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 + C17368 * C335) *
                 C50805 +
             (C17374 * C1193 + C50938 * C1198 + C17373 * C305 + C17368 * C322) *
                 C118) *
                C50902 * C17372 +
            ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C50902 *
                C17371 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C50902 *
                C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C50790 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
               C17371 +
           ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
               C17370) *
              C50790 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
               C17372) *
              C50790 * C115 -
          (((C17374 * C688 + C50938 * C690 + C17373 * C137 + C17368 * C145) *
                C50805 +
            (C17374 * C687 + C50938 * C689 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50902 * C17372 +
           ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) * C50902 *
               C17371 +
           C17435 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C50790 * C113 -
          ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
            C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
               C50805 +
           (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
            C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50902 * C50752 * C50790 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C50805) *
              C50902 * C50752 * C50790 * C115 -
          ((C20207 * C1197 + C20202 * C1205 + C20206 * C323 + C20201 * C335 +
            C20205 * C308 + C20200 * C328 + C20204 * C133 + C20199 * C143) *
               C50805 +
           (C20207 * C1193 + C20202 * C1198 + C20206 * C305 + C20201 * C322 +
            C20205 * C298 + C20200 * C309 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50902 * C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C293 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C294 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C295) *
              C296 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C294 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C293 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C5336 +
           ((C17373 * C490 + C17368 * C500 + C17374 * C969 + C50938 * C974) *
                C118 +
            (C17373 * C501 + C17368 * C520 + C17374 * C975 + C50938 * C984) *
                C50805) *
               C5337 +
           ((C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C118 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C50805) *
               C5338) *
              C50752 * C50790 * C113 -
          (((C17815 + C17814) * C50805 + (C17813 + C17812) * C118) * C5338 +
           ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
           ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
              C50752 * C50790 * C114 +
          (C17432 * C5336 +
           ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C5337 +
           ((C17820 + C17821) * C118 + (C17822 + C17823) * C50805) * C5338) *
              C50752 * C50790 * C115 -
          (((C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C50805 +
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C118) *
               C5338 +
           ((C18152 + C18151) * C50805 + (C18150 + C18149) * C118) * C5337 +
           C17433 * C5336) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C17373 * C490 + C17368 * C500 + C17374 * C969 + C50938 * C974) *
                 C118 +
             (C17373 * C501 + C17368 * C520 + C17374 * C975 + C50938 * C984) *
                 C50805) *
                C5337 +
            ((C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                 C118 +
             (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                 C50805) *
                C5338) *
               C50752 * C293 -
           (((C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
              C17368 * C1319) *
                 C50805 +
             (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
              C17368 * C1311) *
                 C118) *
                C5338 +
            ((C17374 * C1659 + C50938 * C1666 + C17373 * C975 + C17368 * C984) *
                 C50805 +
             (C17374 * C1654 + C50938 * C1658 + C17373 * C969 + C17368 * C974) *
                 C118) *
                C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C294 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C5336 +
            ((C17373 * C1654 + C17368 * C1658 + C17374 * C3416 +
              C50938 * C3419) *
                 C118 +
             (C17373 * C1659 + C17368 * C1666 + C17374 * C3420 +
              C50938 * C3425) *
                 C50805) *
                C5337 +
            ((C17373 * C2846 + C17368 * C2849 + C17374 * C3844 +
              C50938 * C3846) *
                 C118 +
             (C17373 * C2850 + C17368 * C2855 + C17374 * C3847 +
              C50938 * C3850) *
                 C50805) *
                C5338) *
               C50752 * C295) *
              C296 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C17373 * C1308 + C17368 * C1313 + C17374 * C2847 +
              C50938 * C2851) *
                 C118 +
             (C17373 * C1314 + C17368 * C1320 + C17374 * C2852 +
              C50938 * C2856) *
                 C50805) *
                C5338) *
               C50752 * C294 -
           (((C17815 + C17814) * C50805 + (C17813 + C17812) * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C293 -
           (((C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50805 +
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C118) *
                C5338 +
            ((C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
              C17368 * C1667) *
                 C50805 +
             (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
              C17368 * C1660) *
                 C118) *
                C5337 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C5336) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C51076 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C51077 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C1423) *
              C51023 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C51077 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C51076 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C51076 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C51077 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C17370 +
            ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
                C17371 +
            ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
                C17372) *
               C1423) *
              C51023 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C51077 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C51076 -
           (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 + C17368 * C335) *
                 C50805 +
             (C17374 * C1193 + C50938 * C1198 + C17373 * C305 + C17368 * C322) *
                 C118) *
                C50902 * C17372 +
            ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C50902 *
                C17371 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C50902 *
                C17370) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
            (C22363 * C118 + C22364 * C50805) * C5338) *
               C50752 * C51076 -
           ((C23282 * C50805 + C23281 * C118) * C5338 +
            ((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C51077 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C5336 +
            ((C17373 * C1654 + C17368 * C1658 + C17374 * C3416 +
              C50938 * C3419) *
                 C118 +
             (C17373 * C1659 + C17368 * C1666 + C17374 * C3420 +
              C50938 * C3425) *
                 C50805) *
                C5337 +
            ((C17373 * C2846 + C17368 * C2849 + C17374 * C3844 +
              C50938 * C3846) *
                 C118 +
             (C17373 * C2850 + C17368 * C2855 + C17374 * C3847 +
              C50938 * C3850) *
                 C50805) *
                C5338) *
               C50752 * C1423) *
              C51023 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C22884 + C22883) * C118 + (C22886 + C22885) * C50805) * C5338) *
               C50752 * C51077 -
           ((C22338 * C50805 + C22337 * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C51076 -
           (((C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50805 +
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C118) *
                C5338 +
            ((C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
              C17368 * C1667) *
                 C50805 +
             (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
              C17368 * C1660) *
                 C118) *
                C5337 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C5336) *
               C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C803 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51032 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C804 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C51076 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C804 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C51032 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C803) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C51077 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C803 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C51032 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C804 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C804 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
            (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C18155 * C17372) *
              C51076 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C804 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51032 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C803) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C18366 + C18367) * C804 -
            ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
            (C18368 + C18369) * C50869) *
               C50902 * C17371 +
           ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
            (C18372 + C18373) * C50869) *
               C50902 * C17372) *
              C51077 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C803 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C51032 -
            (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
             C17368 * C1658) *
                C804 -
            (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
             C17368 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C17622 + C17623) * C803 + (C17624 + C17625) * C51032 -
            (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
             C17368 * C1660) *
                C804 -
            (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
             C17368 * C1667) *
                C50869) *
               C50902 * C17371 +
           ((C17626 + C17627) * C803 + (C17628 + C17629) * C51032 -
            (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
             C17368 * C1662) *
                C804 -
            (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
             C17368 * C1668) *
                C50869) *
               C50902 * C17372) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
            (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C803 + C22364 * C51032 - (C22356 + C22355) * C804 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C51076 +
          (((C22875 + C22876) * C804 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51032 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C803) +
            (C22877 + C22878) * C50869) *
               C5336 +
           ((C22879 + C22880) * C804 -
            ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
            (C22881 + C22882) * C50869) *
               C5337 +
           ((C23292 + C23291) * C804 - (C23282 * C51032 + C23281 * C803) +
            (C23294 + C23293) * C50869) *
               C5338) *
              C50752 * C51077 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C803 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C51032 -
            (C23797 + C23798) * C804 - (C23799 + C23800) * C50869) *
               C5336 +
           ((C23798 + C23797) * C803 + (C23800 + C23799) * C51032 -
            (C23801 + C23802) * C804 - (C23803 + C23804) * C50869) *
               C5337 +
           ((C23802 + C23801) * C803 + (C23804 + C23803) * C51032 -
            (C17374 * C21592 + C50938 * C21593 + C17373 * C4736 +
             C17368 * C4740) *
                C804 -
            (C17374 * C21594 + C50938 * C21595 + C17373 * C4742 +
             C17368 * C4748) *
                C50869) *
               C5338) *
              C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                  C50938 * C315) *
                     C118 +
                 (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                  C50938 * C331) *
                     C50805) *
                    C50902 * C17370 +
                ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) *
                    C50902 * C17371 +
                C17434 * C17372) *
                   C1117 -
               (C17987 * C17372 +
                ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) *
                    C50902 * C17371 +
                ((C17374 * C317 + C50938 * C332 + C17373 * C314 +
                  C17368 * C331) *
                     C50805 +
                 (C17374 * C302 + C50938 * C316 + C17373 * C301 +
                  C17368 * C315) *
                     C118) *
                    C50902 * C17370) *
                   C50841) *
                  C1119 +
              ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) *
                    C50902 * C17370 +
                ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) *
                    C50902 * C17371 +
                ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) *
                    C50902 * C17372) *
                   C50841 -
               (C17435 * C17372 +
                ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) *
                    C50902 * C17371 +
                ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) *
                    C50902 * C17370) *
                   C1117) *
                  C1120 +
              ((C17434 * C17370 +
                ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) *
                    C50902 * C17371 +
                ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) *
                    C50902 * C17372) *
                   C1117 -
               (((C17374 * C326 + C50938 * C337 + C17373 * C325 +
                  C17368 * C336) *
                     C50805 +
                 (C17374 * C307 + C50938 * C327 + C17373 * C306 +
                  C17368 * C324) *
                     C118) *
                    C50902 * C17372 +
                ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) *
                    C50902 * C17371 +
                C17987 * C17370) *
                   C50841) *
                  C1121) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50938 * C315) *
                    C118 +
                (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                 C50938 * C331) *
                    C50805) *
                   C50902 * C17370 +
               ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) *
                   C50902 * C17371 +
               C17434 * C17372) *
                  C1188 -
              (C17987 * C17372 +
               ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) *
                   C50902 * C17371 +
               ((C17374 * C317 + C50938 * C332 + C17373 * C314 +
                 C17368 * C331) *
                    C50805 +
                (C17374 * C302 + C50938 * C316 + C17373 * C301 +
                 C17368 * C315) *
                    C118) *
                   C50902 * C17370) *
                  C1189 +
              (((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
                 C50938 * C1204) *
                    C118 +
                (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
                 C50938 * C1208) *
                    C50805) *
                   C50902 * C17370 +
               ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) *
                   C50902 * C17371 +
               ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) *
                   C50902 * C17372) *
                  C1190 -
              (((C17374 * C2659 + C50938 * C2663 + C17373 * C1199 +
                 C17368 * C1206) *
                    C50805 +
                (C17374 * C2654 + C50938 * C2660 + C17373 * C1194 +
                 C17368 * C1200) *
                    C118) *
                   C50902 * C17372 +
               ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
                 C17368 * C1207) *
                    C50805 +
                (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
                 C17368 * C1202) *
                    C118) *
                   C50902 * C17371 +
               ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
                 C17368 * C1208) *
                    C50805 +
                (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
                 C17368 * C1204) *
                    C118) *
                   C50902 * C17370) *
                  C1191) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C488 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C485 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C489 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
            (C17808 + C17809) * C488 - (C17810 + C17811) * C485 +
            (C17812 + C17813) * C489 + (C17814 + C17815) * C486) *
               C50902 * C17371 +
           (C17424 * C487 + C17425 * C484 - C18136 * C488 - C18137 * C485 +
            (C17820 + C17821) * C489 + (C17822 + C17823) * C486) *
               C50902 * C17372) *
              C1117 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C488 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C484 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C487) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C485 -
            (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
             C17368 * C1311) *
                C489 -
            (C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
             C17368 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C18366 + C18367) * C488 -
            ((C17618 + C17619) * C484 + (C17620 + C17621) * C487) +
            (C18368 + C18369) * C485 -
            (C17374 * C2847 + C50938 * C2851 + C17373 * C1308 +
             C17368 * C1313) *
                C489 -
            (C17374 * C2852 + C50938 * C2856 + C17373 * C1314 +
             C17368 * C1320) *
                C486) *
               C50902 * C17371 +
           ((C18370 + C18371) * C488 - (C17970 * C484 + C17971 * C487) +
            (C18372 + C18373) * C485 -
            (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
             C17368 * C1315) *
                C489 -
            (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
             C17368 * C1321) *
                C486) *
               C50902 * C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C1119 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C1117) *
              C1120 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C1188 -
          ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
            C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
               C50805 +
           (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
            C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
               C118) *
              C50902 * C50752 * C1189 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C118 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C50805) *
              C50902 * C50752 * C1190 -
          ((C20207 * C20895 + C20202 * C20897 + C20206 * C3694 +
            C20201 * C3697 + C20205 * C2656 + C20200 * C2661 + C20204 * C1203 +
            C20199 * C1208) *
               C50805 +
           (C20207 * C20894 + C20202 * C20896 + C20206 * C3691 +
            C20201 * C3695 + C20205 * C2652 + C20200 * C2655 + C20204 * C1196 +
            C20199 * C1204) *
               C118) *
              C50902 * C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C487 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C484 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C488 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C485 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C489 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C486) *
              C50902 * C50752 * C1117 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C488 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C484 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C487) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C485 -
           (C20207 * C20996 + C20202 * C20997 + C20206 * C3844 +
            C20201 * C3846 + C20205 * C2846 + C20200 * C2849 + C20204 * C1307 +
            C20199 * C1311) *
               C489 -
           (C20207 * C20998 + C20202 * C20999 + C20206 * C3847 +
            C20201 * C3850 + C20205 * C2850 + C20200 * C2855 + C20204 * C1312 +
            C20199 * C1319) *
               C486) *
              C50902 * C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
            (C22363 * C118 + C22364 * C50805) * C5338) *
               C50752 * C1117 -
           (((C22882 + C22881) * C50805 + (C22880 + C22879) * C118) * C5338 +
            ((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C50841) *
              C1119 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C22884 + C22883) * C118 + (C22886 + C22885) * C50805) * C5338) *
               C50752 * C50841 -
           ((C22338 * C50805 + C22337 * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C1117) *
              C1120 +
          ((C17432 * C5336 +
            ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C5337 +
            ((C17820 + C17821) * C118 + (C17822 + C17823) * C50805) * C5338) *
               C50752 * C1117 -
           (((C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
              C17368 * C1321) *
                 C50805 +
             (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
              C17368 * C1315) *
                 C118) *
                C5338 +
            ((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C5337 +
            C17986 * C5336) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C5336 +
           ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
           (C22363 * C118 + C22364 * C50805) * C5338) *
              C50752 * C1188 -
          (((C22882 + C22881) * C50805 + (C22880 + C22879) * C118) * C5338 +
           ((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C5337 +
           ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                C50805 +
            (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                C118) *
               C5336) *
              C50752 * C1189 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C118 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C50805) *
               C5336 +
           ((C17373 * C1654 + C17368 * C1658 + C17374 * C3416 +
             C50938 * C3419) *
                C118 +
            (C17373 * C1659 + C17368 * C1666 + C17374 * C3420 +
             C50938 * C3425) *
                C50805) *
               C5337 +
           ((C17373 * C2846 + C17368 * C2849 + C17374 * C3844 +
             C50938 * C3846) *
                C118 +
            (C17373 * C2850 + C17368 * C2855 + C17374 * C3847 +
             C50938 * C3850) *
                C50805) *
               C5338) *
              C50752 * C1190 -
          (((C17374 * C20998 + C50938 * C20999 + C17373 * C3847 +
             C17368 * C3850) *
                C50805 +
            (C17374 * C20996 + C50938 * C20997 + C17373 * C3844 +
             C17368 * C3846) *
                C118) *
               C5338 +
           ((C17374 * C4341 + C50938 * C4344 + C17373 * C3420 +
             C17368 * C3425) *
                C50805 +
            (C17374 * C4338 + C50938 * C4340 + C17373 * C3416 +
             C17368 * C3419) *
                C118) *
               C5337 +
           ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
             C17368 * C1208) *
                C50805 +
            (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
             C17368 * C1204) *
                C118) *
               C5336) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C22347 + C22348) * C488 - (C22349 + C22350) * C485 +
            C22363 * C489 + C22364 * C486) *
               C5336 +
           ((C22348 + C22347) * C487 + (C22350 + C22349) * C484 -
            (C22352 + C22351) * C488 - (C22354 + C22353) * C485 +
            (C22355 + C22356) * C489 + (C22357 + C22358) * C486) *
               C5337 +
           (C22363 * C487 + C22364 * C484 - (C22356 + C22355) * C488 -
            (C22358 + C22357) * C485 +
            (C17373 * C5669 + C17368 * C5672 + C17374 * C6661 +
             C50938 * C6663) *
                C489 +
            (C17373 * C5673 + C17368 * C5678 + C17374 * C6664 +
             C50938 * C6667) *
                C486) *
               C5338) *
              C50752 * C1117 +
          (((C22875 + C22876) * C488 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C484 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C487) +
            (C22877 + C22878) * C485 - C23281 * C489 - C23282 * C486) *
               C5336 +
           ((C22879 + C22880) * C488 -
            ((C22878 + C22877) * C484 + (C22876 + C22875) * C487) +
            (C22881 + C22882) * C485 - (C23291 + C23292) * C489 -
            (C23293 + C23294) * C486) *
               C5337 +
           ((C23292 + C23291) * C488 - (C23282 * C484 + C23281 * C487) +
            (C23294 + C23293) * C485 -
            (C17374 * C23276 + C50938 * C23277 + C17373 * C6661 +
             C17368 * C6663) *
                C489 -
            (C17374 * C23278 + C50938 * C23279 + C17373 * C6664 +
             C17368 * C6667) *
                C486) *
               C5338) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C803 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C51032 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C804 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C1117 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C804 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C51032 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C803) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C51023 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C804 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C51032 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C803) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C1117 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C803 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C51032 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C804 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C804 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C18155 * C17372) *
               C1117 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C804 -
             ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C51023 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C804 -
             ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C1117 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
             (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C803 + (C17984 + C17985) * C51032 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C804 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                C5336 +
            ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
             (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                C5337 +
            (C22363 * C803 + C22364 * C51032 - (C22356 + C22355) * C804 -
             (C22358 + C22357) * C50869) *
                C5338) *
               C50752 * C1117 +
           (((C22875 + C22876) * C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C22877 + C22878) * C50869) *
                C5336 +
            ((C22879 + C22880) * C804 -
             ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
             (C22881 + C22882) * C50869) *
                C5337 +
            ((C23292 + C23291) * C804 - (C23282 * C51032 + C23281 * C803) +
             (C23294 + C23293) * C50869) *
                C5338) *
               C50752 * C50841) *
              C51023 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C5336 +
            ((C17812 + C17813) * C804 -
             ((C17810 + C17811) * C51032 + (C17808 + C17809) * C803) +
             (C17814 + C17815) * C50869) *
                C5337 +
            ((C22360 + C22359) * C804 - (C22338 * C51032 + C22337 * C803) +
             (C22362 + C22361) * C50869) *
                C5338) *
               C50752 * C1117 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C5336 +
            ((C18366 + C18367) * C803 + (C18368 + C18369) * C51032 -
             (C22883 + C22884) * C804 - (C22885 + C22886) * C50869) *
                C5337 +
            ((C22884 + C22883) * C803 + (C22886 + C22885) * C51032 -
             (C17374 * C4738 + C50938 * C4744 + C17373 * C4739 +
              C17368 * C4745) *
                 C804 -
             (C17374 * C4746 + C50938 * C4750 + C17373 * C4747 +
              C17368 * C4751) *
                 C50869) *
                C5338) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C1188 -
          (C17987 * C17372 +
           ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
               C17371 +
           ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                C50805 +
            (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                C118) *
               C50902 * C17370) *
              C1189 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C118 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C50805) *
               C50902 * C17370 +
           ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
               C17371 +
           ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
               C17372) *
              C1190 -
          (((C17374 * C2659 + C50938 * C2663 + C17373 * C1199 +
             C17368 * C1206) *
                C50805 +
            (C17374 * C2654 + C50938 * C2660 + C17373 * C1194 +
             C17368 * C1200) *
                C118) *
               C50902 * C17372 +
           ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
             C17368 * C1207) *
                C50805 +
            (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
             C17368 * C1202) *
                C118) *
               C50902 * C17371 +
           ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
             C17368 * C1208) *
                C50805 +
            (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
             C17368 * C1204) *
                C118) *
               C50902 * C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C1117 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C50841) *
              C1119 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C50841 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C1117) *
              C1120 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
                C17372) *
               C1117 -
           (((C17374 * C326 + C50938 * C337 + C17373 * C325 + C17368 * C336) *
                 C50805 +
             (C17374 * C307 + C50938 * C327 + C17373 * C306 + C17368 * C324) *
                 C118) *
                C50902 * C17372 +
            ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C50902 *
                C17371 +
            C17987 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C1119 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C1117) *
              C1120 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C1188 -
          ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
            C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
               C50805 +
           (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
            C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
               C118) *
              C50902 * C50752 * C1189 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C118 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C50805) *
              C50902 * C50752 * C1190 -
          ((C20207 * C20895 + C20202 * C20897 + C20206 * C3694 +
            C20201 * C3697 + C20205 * C2656 + C20200 * C2661 + C20204 * C1203 +
            C20199 * C1208) *
               C50805 +
           (C20207 * C20894 + C20202 * C20896 + C20206 * C3691 +
            C20201 * C3695 + C20205 * C2652 + C20200 * C2655 + C20204 * C1196 +
            C20199 * C1204) *
               C118) *
              C50902 * C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C5336 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
            (C22363 * C118 + C22364 * C50805) * C5338) *
               C50752 * C1117 -
           (((C22882 + C22881) * C50805 + (C22880 + C22879) * C118) * C5338 +
            ((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C5337 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C5336) *
               C50752 * C50841) *
              C1119 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C5336 +
            ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C5337 +
            ((C22884 + C22883) * C118 + (C22886 + C22885) * C50805) * C5338) *
               C50752 * C50841 -
           ((C22338 * C50805 + C22337 * C118) * C5338 +
            ((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C5337 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C5336) *
               C50752 * C1117) *
              C1120 +
          ((C17432 * C5336 +
            ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C5337 +
            ((C17820 + C17821) * C118 + (C17822 + C17823) * C50805) * C5338) *
               C50752 * C1117 -
           (((C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
              C17368 * C1321) *
                 C50805 +
             (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
              C17368 * C1315) *
                 C118) *
                C5338 +
            ((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C5337 +
            C17986 * C5336) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C5336 +
           ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C5337 +
           (C22363 * C118 + C22364 * C50805) * C5338) *
              C50752 * C1188 -
          (((C22882 + C22881) * C50805 + (C22880 + C22879) * C118) * C5338 +
           ((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C5337 +
           ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                C50805 +
            (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                C118) *
               C5336) *
              C50752 * C1189 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C118 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C50805) *
               C5336 +
           ((C17373 * C1654 + C17368 * C1658 + C17374 * C3416 +
             C50938 * C3419) *
                C118 +
            (C17373 * C1659 + C17368 * C1666 + C17374 * C3420 +
             C50938 * C3425) *
                C50805) *
               C5337 +
           ((C17373 * C2846 + C17368 * C2849 + C17374 * C3844 +
             C50938 * C3846) *
                C118 +
            (C17373 * C2850 + C17368 * C2855 + C17374 * C3847 +
             C50938 * C3850) *
                C50805) *
               C5338) *
              C50752 * C1190 -
          (((C17374 * C20998 + C50938 * C20999 + C17373 * C3847 +
             C17368 * C3850) *
                C50805 +
            (C17374 * C20996 + C50938 * C20997 + C17373 * C3844 +
             C17368 * C3846) *
                C118) *
               C5338 +
           ((C17374 * C4341 + C50938 * C4344 + C17373 * C3420 +
             C17368 * C3425) *
                C50805 +
            (C17374 * C4338 + C50938 * C4340 + C17373 * C3416 +
             C17368 * C3419) *
                C118) *
               C5337 +
           ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
             C17368 * C1208) *
                C50805 +
            (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
             C17368 * C1204) *
                C118) *
               C5336) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C1770 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C1768 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C1771 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C1771 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C1768 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C1770) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C51023 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C1771 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C1768 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C1770) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C1770 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C1768 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C1771 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C1771 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C19403 * C17372) *
               C51031 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C1771 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C1768 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C1770) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C1771 -
             ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C51023 +
          ((((C17809 + C17808) * C1771 -
             ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C1771 -
             ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C51031 +
           (((C17621 + C17620) * C1770 + (C17619 + C17618) * C1768 -
             (C18367 + C18366) * C1771 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C1770 + (C17615 + C17614) * C1768 -
             (C18371 + C18370) * C1771 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C1770 + (C17984 + C17985) * C1768 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C1771 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                C5336 +
            ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
             (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                C5337 +
            (C22363 * C1770 + C22364 * C1768 - C24199 * C1771 -
             C24200 * C50869) *
                C5338) *
               C50752 * C51031 +
           (((C22875 + C22876) * C1771 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C1768 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C1770) +
             (C22877 + C22878) * C50869) *
                C5336 +
            ((C22879 + C22880) * C1771 -
             ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
             (C22881 + C22882) * C50869) *
                C5337 +
            ((C23292 + C23291) * C1771 - (C23282 * C1768 + C23281 * C1770) +
             (C23294 + C23293) * C50869) *
                C5338) *
               C50752 * C50841) *
              C51023 +
          ((((C17809 + C17808) * C1771 -
             ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
             (C17811 + C17810) * C50869) *
                C5336 +
            ((C17812 + C17813) * C1771 -
             ((C17810 + C17811) * C1768 + (C17808 + C17809) * C1770) +
             (C17814 + C17815) * C50869) *
                C5337 +
            ((C22360 + C22359) * C1771 - (C22338 * C1768 + C22337 * C1770) +
             (C22362 + C22361) * C50869) *
                C5338) *
               C50752 * C51031 +
           (((C17621 + C17620) * C1770 + (C17619 + C17618) * C1768 -
             (C18367 + C18366) * C1771 - (C18369 + C18368) * C50869) *
                C5336 +
            ((C18366 + C18367) * C1770 + (C18368 + C18369) * C1768 -
             (C22883 + C22884) * C1771 - (C22885 + C22886) * C50869) *
                C5337 +
            ((C22884 + C22883) * C1770 + (C22886 + C22885) * C1768 -
             (C17374 * C4738 + C50938 * C4744 + C17373 * C4739 +
              C17368 * C4745) *
                 C1771 -
             (C17374 * C4746 + C50938 * C4750 + C17373 * C4747 +
              C17368 * C4751) *
                 C50869) *
                C5338) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C2227 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51078 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C2228 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C51079 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C2229 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C2226) *
              C50902 * C50752 * C51031 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C2228 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C51078 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C2227) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C51079 -
           (C20207 * C20996 + C20202 * C20997 + C20206 * C3844 +
            C20201 * C3846 + C20205 * C2846 + C20200 * C2849 + C20204 * C1307 +
            C20199 * C1311) *
               C2229 -
           (C20207 * C20998 + C20202 * C20999 + C20206 * C3847 +
            C20201 * C3850 + C20205 * C2850 + C20200 * C2855 + C20204 * C1312 +
            C20199 * C1319) *
               C2226) *
              C50902 * C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C2228 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C51079 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C2229 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
            (C17808 + C17809) * C2228 - (C17810 + C17811) * C51079 +
            (C17812 + C17813) * C2229 + (C17814 + C17815) * C2226) *
               C50902 * C17371 +
           (C17424 * C2227 + C17425 * C51078 - C18136 * C2228 -
            C18137 * C51079 + (C17820 + C17821) * C2229 +
            (C17822 + C17823) * C2226) *
               C50902 * C17372) *
              C51031 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C2228 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51078 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C2227) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C51079 -
            (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
             C17368 * C1311) *
                C2229 -
            (C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
             C17368 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C18366 + C18367) * C2228 -
            ((C17618 + C17619) * C51078 + (C17620 + C17621) * C2227) +
            (C18368 + C18369) * C51079 -
            (C17374 * C2847 + C50938 * C2851 + C17373 * C1308 +
             C17368 * C1313) *
                C2229 -
            (C17374 * C2852 + C50938 * C2856 + C17373 * C1314 +
             C17368 * C1320) *
                C2226) *
               C50902 * C17371 +
           ((C18370 + C18371) * C2228 - (C17970 * C51078 + C17971 * C2227) +
            (C18372 + C18373) * C51079 -
            (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
             C17368 * C1315) *
                C2229 -
            (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
             C17368 * C1321) *
                C2226) *
               C50902 * C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C22347 + C22348) * C2228 - (C22349 + C22350) * C51079 +
            C22363 * C2229 + C22364 * C2226) *
               C5336 +
           ((C22348 + C22347) * C2227 + (C22350 + C22349) * C51078 -
            (C22352 + C22351) * C2228 - (C22354 + C22353) * C51079 +
            (C22355 + C22356) * C2229 + (C22357 + C22358) * C2226) *
               C5337 +
           (C22363 * C2227 + C22364 * C51078 - C24199 * C2228 -
            C24200 * C51079 + (C24210 + C24209) * C2229 +
            (C24212 + C24211) * C2226) *
               C5338) *
              C50752 * C51031 +
          (((C22875 + C22876) * C2228 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51078 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C2227) +
            (C22877 + C22878) * C51079 - C23281 * C2229 - C23282 * C2226) *
               C5336 +
           ((C22879 + C22880) * C2228 -
            ((C22878 + C22877) * C51078 + (C22876 + C22875) * C2227) +
            (C22881 + C22882) * C51079 - (C23291 + C23292) * C2229 -
            (C23293 + C23294) * C2226) *
               C5337 +
           ((C23292 + C23291) * C2228 - (C23282 * C51078 + C23281 * C2227) +
            (C23294 + C23293) * C51079 -
            (C17374 * C23276 + C50938 * C23277 + C17373 * C6661 +
             C17368 * C6663) *
                C2229 -
            (C17374 * C23278 + C50938 * C23279 + C17373 * C6664 +
             C17368 * C6667) *
                C2226) *
               C5338) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50938 * C315) *
                    C1770 +
                (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                 C50938 * C331) *
                    C1768 -
                (C17374 * C969 + C50938 * C974 + C17373 * C490 +
                 C17368 * C500) *
                    C1771 -
                (C17374 * C975 + C50938 * C984 + C17373 * C501 +
                 C17368 * C520) *
                    C50869) *
                   C50902 * C17370 +
               ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
                (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
                   C50902 * C17371 +
               C19403 * C17372) *
                  C50790 * C1119 +
              (((C17809 + C17808) * C1771 -
                ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
                (C17811 + C17810) * C50869) *
                   C50902 * C17370 +
               ((C17817 + C17816) * C1771 -
                ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
                (C17819 + C17818) * C50869) *
                   C50902 * C17371 +
               ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
                (C18151 + C18152) * C50869) *
                   C50902 * C17372) *
                  C50790 * C1120 +
              (C19403 * C17370 +
               ((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
                (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
                   C50902 * C17371 +
               ((C17420 + C17421) * C1770 + (C17422 + C17423) * C1768 -
                (C17374 * C973 + C50938 * C982 + C17373 * C498 +
                 C17368 * C516) *
                    C1771 -
                (C17374 * C983 + C50938 * C988 + C17373 * C517 +
                 C17368 * C528) *
                    C50869) *
                   C50902 * C17372) *
                  C50790 * C1121) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50938 * C315) *
                    C1770 +
                (C17373 * C127 + C17368 * C140 + C17374 * C314 +
                 C50938 * C331) *
                    C1768 -
                (C17374 * C969 + C50938 * C974 + C17373 * C490 +
                 C17368 * C500) *
                    C1771 -
                (C17374 * C975 + C50938 * C984 + C17373 * C501 +
                 C17368 * C520) *
                    C50869) *
                   C50902 * C17370 +
               ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
                (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
                   C50902 * C17371 +
               C19403 * C17372) *
                  C293 +
              (((C17373 * C969 + C17368 * C974 + C17374 * C1654 +
                 C50938 * C1658) *
                    C1771 -
                ((C17374 * C317 + C50938 * C332 + C17373 * C314 +
                  C17368 * C331) *
                     C1768 +
                 (C17374 * C302 + C50938 * C316 + C17373 * C301 +
                  C17368 * C315) *
                     C1770) +
                (C17373 * C975 + C17368 * C984 + C17374 * C1659 +
                 C50938 * C1666) *
                    C50869) *
                   C50902 * C17370 +
               ((C18366 + C18367) * C1771 -
                ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
                (C18368 + C18369) * C50869) *
                   C50902 * C17371 +
               ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
                (C18372 + C18373) * C50869) *
                   C50902 * C17372) *
                  C294 +
              (((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
                 C50938 * C1204) *
                    C1770 +
                (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
                 C50938 * C1208) *
                    C1768 -
                (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
                 C17368 * C1658) *
                    C1771 -
                (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
                 C17368 * C1666) *
                    C50869) *
                   C50902 * C17370 +
               ((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
                (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
                 C17368 * C1660) *
                    C1771 -
                (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
                 C17368 * C1667) *
                    C50869) *
                   C50902 * C17371 +
               ((C17626 + C17627) * C1770 + (C17628 + C17629) * C1768 -
                (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
                 C17368 * C1662) *
                    C1771 -
                (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
                 C17368 * C1668) *
                    C50869) *
                   C50902 * C17372) *
                  C295) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
               C1964 +
           (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
               C1960 -
           (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
               C1965 -
           (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
               C1961 +
           (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
               C1966 +
           (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
               C1962 -
           (C17374 * C4737 + C50938 * C4741 + C17373 * C1968 + C17368 * C1972) *
               C1967 -
           (C17374 * C4743 + C50938 * C4749 + C17373 * C1973 + C17368 * C1980) *
               C1963) *
              C50902 * C17370 +
          ((C17408 + C17409) * C1964 + (C17410 + C17411) * C1960 -
           (C17808 + C17809) * C1965 - (C17810 + C17811) * C1961 +
           (C17812 + C17813) * C1966 + (C17814 + C17815) * C1962 -
           (C17374 * C4739 + C50938 * C4745 + C17373 * C1969 + C17368 * C1974) *
               C1967 -
           (C17374 * C4747 + C50938 * C4751 + C17373 * C1975 + C17368 * C1981) *
               C1963) *
              C50902 * C17371 +
          (C17424 * C1964 + C17425 * C1960 - C18136 * C1965 - C18137 * C1961 +
           (C17820 + C17821) * C1966 + (C17822 + C17823) * C1962 -
           (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 + C17368 * C1976) *
               C1967 -
           (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 + C17368 * C1982) *
               C1963) *
              C50902 * C17372) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C1119 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C1771 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C1768 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C1770) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C1120 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C1770 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C1768 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C1771 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C293 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C1771 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C1768 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C1770) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C294 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C1770 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C1768 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C1771 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
           C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
              C1964 +
          (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
           C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
              C1960 -
          (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
           C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
              C1965 -
          (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
           C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
              C1961 +
          (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
           C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
              C1966 +
          (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
           C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
              C1962 -
          (C20207 * C21592 + C20202 * C21593 + C20206 * C4736 + C20201 * C4740 +
           C20205 * C4737 + C20200 * C4741 + C20204 * C1968 + C20199 * C1972) *
              C1967 -
          (C20207 * C21594 + C20202 * C21595 + C20206 * C4742 + C20201 * C4748 +
           C20205 * C4743 + C20200 * C4749 + C20204 * C1973 + C20199 * C1980) *
              C1963) *
         C50902 * C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
            (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C1770 + C22364 * C1768 - (C22356 + C22355) * C1771 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C50790 * C1119 +
          (((C17809 + C17808) * C1771 -
            ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
            (C17811 + C17810) * C50869) *
               C5336 +
           ((C17812 + C17813) * C1771 -
            ((C17810 + C17811) * C1768 + (C17808 + C17809) * C1770) +
            (C17814 + C17815) * C50869) *
               C5337 +
           ((C22360 + C22359) * C1771 - (C22338 * C1768 + C22337 * C1770) +
            (C22362 + C22361) * C50869) *
               C5338) *
              C50752 * C50790 * C1120 +
          (C19402 * C5336 +
           ((C17817 + C17816) * C1770 + (C17819 + C17818) * C1768 -
            (C17821 + C17820) * C1771 - (C17823 + C17822) * C50869) *
               C5337 +
           ((C17820 + C17821) * C1770 + (C17822 + C17823) * C1768 -
            (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 +
             C17368 * C1976) *
                C1771 -
            (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 +
             C17368 * C1982) *
                C50869) *
               C5338) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
            (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C1770 + C22364 * C1768 - (C22356 + C22355) * C1771 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C293 +
          (((C22875 + C22876) * C1771 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C1768 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C1770) +
            (C22877 + C22878) * C50869) *
               C5336 +
           ((C22879 + C22880) * C1771 -
            ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
            (C22881 + C22882) * C50869) *
               C5337 +
           ((C23292 + C23291) * C1771 - (C23282 * C1768 + C23281 * C1770) +
            (C23294 + C23293) * C50869) *
               C5338) *
              C50752 * C294 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C1770 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C1768 -
            (C23797 + C23798) * C1771 - (C23799 + C23800) * C50869) *
               C5336 +
           ((C23798 + C23797) * C1770 + (C23800 + C23799) * C1768 -
            (C23801 + C23802) * C1771 - (C23803 + C23804) * C50869) *
               C5337 +
           ((C23802 + C23801) * C1770 + (C23804 + C23803) * C1768 -
            (C17374 * C21592 + C50938 * C21593 + C17373 * C4736 +
             C17368 * C4740) *
                C1771 -
            (C17374 * C21594 + C50938 * C21595 + C17373 * C4742 +
             C17368 * C4748) *
                C50869) *
               C5338) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
               C1964 +
           (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
               C1960 -
           (C22347 + C22348) * C1965 - (C22349 + C22350) * C1961 +
           C22363 * C1966 + C22364 * C1962 - C24199 * C1967 - C24200 * C1963) *
              C5336 +
          ((C22348 + C22347) * C1964 + (C22350 + C22349) * C1960 -
           (C22352 + C22351) * C1965 - (C22354 + C22353) * C1961 +
           (C22355 + C22356) * C1966 + (C22357 + C22358) * C1962 -
           (C24209 + C24210) * C1967 - (C24211 + C24212) * C1963) *
              C5337 +
          (C22363 * C1964 + C22364 * C1960 - C24199 * C1965 - C24200 * C1961 +
           (C24210 + C24209) * C1966 + (C24212 + C24211) * C1962 -
           (C17374 * C24194 + C50938 * C24195 + C17373 * C7579 +
            C17368 * C7581) *
               C1967 -
           (C17374 * C24196 + C50938 * C24197 + C17373 * C7582 +
            C17368 * C7585) *
               C1963) *
              C5338) *
         C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C2227 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51078 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C2228 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C51079 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C2229 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C2226) *
              C50902 * C50752 * C50790 * C51023 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C2228 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C51078 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C2227) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C51079 -
           (C20207 * C3845 + C20202 * C3848 + C20206 * C2847 + C20201 * C2851 +
            C20205 * C1308 + C20200 * C1313 + C20204 * C493 + C20199 * C506) *
               C2229 -
           (C20207 * C3849 + C20202 * C3851 + C20206 * C2852 + C20201 * C2856 +
            C20205 * C1314 + C20200 * C1320 + C20204 * C507 + C20199 * C523) *
               C2226) *
              C50902 * C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C2228 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C51079 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C2229 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
            (C17808 + C17809) * C2228 - (C17810 + C17811) * C51079 +
            (C17812 + C17813) * C2229 + (C17814 + C17815) * C2226) *
               C50902 * C17371 +
           (C17424 * C2227 + C17425 * C51078 - C18136 * C2228 -
            C18137 * C51079 + (C17820 + C17821) * C2229 +
            (C17822 + C17823) * C2226) *
               C50902 * C17372) *
              C50790 * C51023 +
          (((C17809 + C17808) * C2228 -
            ((C17411 + C17410) * C51078 + (C17409 + C17408) * C2227) +
            (C17811 + C17810) * C51079 - (C17813 + C17812) * C2229 -
            (C17815 + C17814) * C2226) *
               C50902 * C17370 +
           ((C17817 + C17816) * C2228 -
            ((C17415 + C17414) * C51078 + (C17413 + C17412) * C2227) +
            (C17819 + C17818) * C51079 - (C17821 + C17820) * C2229 -
            (C17823 + C17822) * C2226) *
               C50902 * C17371 +
           ((C18149 + C18150) * C2228 - (C17426 * C51078 + C17427 * C2227) +
            (C18151 + C18152) * C51079 -
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C2229 -
            (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C2226) *
               C50902 * C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C22347 + C22348) * C2228 - (C22349 + C22350) * C51079 +
            C22363 * C2229 + C22364 * C2226) *
               C5336 +
           ((C22348 + C22347) * C2227 + (C22350 + C22349) * C51078 -
            (C22352 + C22351) * C2228 - (C22354 + C22353) * C51079 +
            (C22355 + C22356) * C2229 + (C22357 + C22358) * C2226) *
               C5337 +
           (C22363 * C2227 + C22364 * C51078 - C24199 * C2228 -
            C24200 * C51079 + (C24210 + C24209) * C2229 +
            (C24212 + C24211) * C2226) *
               C5338) *
              C50752 * C50790 * C51023 +
          (((C17809 + C17808) * C2228 -
            ((C17411 + C17410) * C51078 + (C17409 + C17408) * C2227) +
            (C17811 + C17810) * C51079 - C22337 * C2229 - C22338 * C2226) *
               C5336 +
           ((C17812 + C17813) * C2228 -
            ((C17810 + C17811) * C51078 + (C17808 + C17809) * C2227) +
            (C17814 + C17815) * C51079 - (C22359 + C22360) * C2229 -
            (C22361 + C22362) * C2226) *
               C5337 +
           ((C22360 + C22359) * C2228 - (C22338 * C51078 + C22337 * C2227) +
            (C22362 + C22361) * C51079 -
            (C17374 * C6662 + C50938 * C6665 + C17373 * C5670 +
             C17368 * C5674) *
                C2229 -
            (C17374 * C6666 + C50938 * C6668 + C17373 * C5675 +
             C17368 * C5679) *
                C2226) *
               C5338) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C293 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C1771 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C1768 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C1770) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C18366 + C18367) * C1771 -
            ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
            (C18368 + C18369) * C50869) *
               C50902 * C17371 +
           ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
            (C18372 + C18373) * C50869) *
               C50902 * C17372) *
              C294 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C1770 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C1768 -
            (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
             C17368 * C1658) *
                C1771 -
            (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
             C17368 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
            (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
             C17368 * C1660) *
                C1771 -
            (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
             C17368 * C1667) *
                C50869) *
               C50902 * C17371 +
           ((C17626 + C17627) * C1770 + (C17628 + C17629) * C1768 -
            (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
             C17368 * C1662) *
                C1771 -
            (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
             C17368 * C1668) *
                C50869) *
               C50902 * C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C50790 * C1119 +
          (((C17809 + C17808) * C1771 -
            ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
            (C17811 + C17810) * C50869) *
               C50902 * C17370 +
           ((C17817 + C17816) * C1771 -
            ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
            (C17819 + C17818) * C50869) *
               C50902 * C17371 +
           ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
            (C18151 + C18152) * C50869) *
               C50902 * C17372) *
              C50790 * C1120 +
          (C19403 * C17370 +
           ((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
            (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
               C50902 * C17371 +
           ((C17420 + C17421) * C1770 + (C17422 + C17423) * C1768 -
            (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                C1771 -
            (C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                C50869) *
               C50902 * C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C1119 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C1771 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C1768 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C1770) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C1120 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C1770 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C1768 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C1771 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C293 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C1771 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C1768 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C1770) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C294 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C1770 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C1768 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C1771 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
            (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C1770 + C22364 * C1768 - (C22356 + C22355) * C1771 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C50790 * C1119 +
          (((C17809 + C17808) * C1771 -
            ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
            (C17811 + C17810) * C50869) *
               C5336 +
           ((C17812 + C17813) * C1771 -
            ((C17810 + C17811) * C1768 + (C17808 + C17809) * C1770) +
            (C17814 + C17815) * C50869) *
               C5337 +
           ((C22360 + C22359) * C1771 - (C22338 * C1768 + C22337 * C1770) +
            (C22362 + C22361) * C50869) *
               C5338) *
              C50752 * C50790 * C1120 +
          (C19402 * C5336 +
           ((C17817 + C17816) * C1770 + (C17819 + C17818) * C1768 -
            (C17821 + C17820) * C1771 - (C17823 + C17822) * C50869) *
               C5337 +
           ((C17820 + C17821) * C1770 + (C17822 + C17823) * C1768 -
            (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 +
             C17368 * C1976) *
                C1771 -
            (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 +
             C17368 * C1982) *
                C50869) *
               C5338) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
               C5336 +
           ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
            (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
               C5337 +
           (C22363 * C1770 + C22364 * C1768 - (C22356 + C22355) * C1771 -
            (C22358 + C22357) * C50869) *
               C5338) *
              C50752 * C293 +
          (((C22875 + C22876) * C1771 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C1768 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C1770) +
            (C22877 + C22878) * C50869) *
               C5336 +
           ((C22879 + C22880) * C1771 -
            ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
            (C22881 + C22882) * C50869) *
               C5337 +
           ((C23292 + C23291) * C1771 - (C23282 * C1768 + C23281 * C1770) +
            (C23294 + C23293) * C50869) *
               C5338) *
              C50752 * C294 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C1770 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C1768 -
            (C23797 + C23798) * C1771 - (C23799 + C23800) * C50869) *
               C5336 +
           ((C23798 + C23797) * C1770 + (C23800 + C23799) * C1768 -
            (C23801 + C23802) * C1771 - (C23803 + C23804) * C50869) *
               C5337 +
           ((C23802 + C23801) * C1770 + (C23804 + C23803) * C1768 -
            (C17374 * C21592 + C50938 * C21593 + C17373 * C4736 +
             C17368 * C4740) *
                C1771 -
            (C17374 * C21594 + C50938 * C21595 + C17373 * C4742 +
             C17368 * C4748) *
                C50869) *
               C5338) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             (C28049 * C118 + C28050 * C50805) * C50966) *
                C50757) *
               C51031 -
           ((((C18369 + C18368) * C50805 + (C18367 + C18366) * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C50841) *
              C51074 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            ((C28046 * C50805 + C28045 * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C51031) *
              C51075 +
          (((C17432 * C51045 +
             ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C50966) *
                C51016 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C51045 +
             ((C18149 + C18150) * C118 + (C18151 + C18152) * C50805) * C50966) *
                C50757) *
               C51031 -
           ((((C17374 * C1665 + C50938 * C1669 + C17373 * C981 +
               C17368 * C987) *
                  C50805 +
              (C17374 * C1657 + C50938 * C1664 + C17373 * C972 +
               C17368 * C980) *
                  C118) *
                 C50966 +
             ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C51045) *
                C50757 +
            (((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C50966 +
             C17986 * C51045) *
                C51016) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C803 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C51032 -
              (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                 C51045 +
             ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
              (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                 C50966) *
                C51016 +
            (((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
              C28045 * C804 - C28046 * C50869) *
                 C51045 +
             (C28049 * C803 + C28050 * C51032 - C22337 * C804 -
              C22338 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C22875 + C22876) * C804 -
              ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                   C51032 +
               (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                   C803) +
              (C22877 + C22878) * C50869) *
                 C51045 +
             ((C22879 + C22880) * C804 -
              ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
              (C22881 + C22882) * C50869) *
                 C50966) *
                C51016 +
            ((C28699 * C804 -
              ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
              C28700 * C50869) *
                 C51045 +
             ((C22884 + C22883) * C804 - (C28701 * C51032 + C28702 * C803) +
              (C22886 + C22885) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C296 +
          ((((C28049 * C804 -
              ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
              C28050 * C50869) *
                 C51045 +
             (C28047 * C804 - (C28046 * C51032 + C28045 * C803) +
              C28048 * C50869) *
                 C50966) *
                C51016 +
            ((C28439 * C804 -
              ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
              C28440 * C50869) *
                 C51045 +
             ((C17820 + C17821) * C804 - (C18137 * C51032 + C18136 * C803) +
              (C17822 + C17823) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
              C28702 * C804 - C28701 * C50869) *
                 C51045 +
             (C28699 * C803 + C28700 * C51032 - (C22883 + C22884) * C804 -
              (C22885 + C22886) * C50869) *
                 C50966) *
                C51016 +
            (((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
              (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                 C51045 +
             ((C18370 + C18371) * C803 + (C18372 + C18373) * C51032 -
              (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
               C17368 * C1315) *
                  C804 -
              (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
               C17368 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             ((C17809 + C17808) * C118 + (C17811 + C17810) * C50805) * C50966) *
                C50757) *
               C293 -
           ((((C18369 + C18368) * C50805 + (C18367 + C18366) * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C294 +
           ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
               C50938 * C1204) *
                  C118 +
              (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
               C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C23798 + C23797) * C118 + (C23800 + C23799) * C50805) * C50966) *
                C51016 +
            (((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C51045 +
             ((C27847 + C27848) * C118 + (C27849 + C27850) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            (((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C293 -
           ((((C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
               C17368 * C1668) *
                  C50805 +
              (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
               C17368 * C1662) *
                  C118) *
                 C50966 +
             ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C51045) *
                C50757 +
            (((C27850 + C27849) * C50805 + (C27848 + C27847) * C118) * C50966 +
             ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C51045) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
               C51016 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
            ((C17809 + C17808) * C118 + (C17811 + C17810) * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C18137 * C50805 + C18136 * C118) * C50966 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
               C50757 +
           (((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C50966 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
               C51016) *
              C50790 * C114 +
          ((C17432 * C51045 +
            ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C50966) *
               C51016 +
           (((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C51045 +
            ((C18149 + C18150) * C118 + (C18151 + C18152) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                 C50805 +
             (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                 C118) *
                C50966 +
            ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) * C51045) *
               C50757 +
           (((C18152 + C18151) * C50805 + (C18150 + C18149) * C118) * C50966 +
            C17433 * C51045) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C487 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C484 -
             (C22347 + C22348) * C488 - (C22349 + C22350) * C485 +
             C22363 * C489 + C22364 * C486) *
                C51045 +
            ((C22348 + C22347) * C487 + (C22350 + C22349) * C484 -
             (C22352 + C22351) * C488 - (C22354 + C22353) * C485 +
             (C22355 + C22356) * C489 + (C22357 + C22358) * C486) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
             C28045 * C488 - C28046 * C485 + C28047 * C489 + C28048 * C486) *
                C51045 +
            (C28049 * C487 + C28050 * C484 - C22337 * C488 - C22338 * C485 +
             (C22360 + C22359) * C489 + (C22362 + C22361) * C486) *
                C50966) *
               C50757) *
              C50790 * C296 +
          (((C28049 * C488 -
             ((C17411 + C17410) * C484 + (C17409 + C17408) * C487) +
             C28050 * C485 - C22337 * C489 - C22338 * C486) *
                C51045 +
            (C28047 * C488 - (C28046 * C484 + C28045 * C487) + C28048 * C485 -
             (C22359 + C22360) * C489 - (C22361 + C22362) * C486) *
                C50966) *
               C51016 +
           (((C17817 + C17816) * C488 -
             ((C17415 + C17414) * C484 + (C17413 + C17412) * C487) +
             (C17819 + C17818) * C485 - (C17821 + C17820) * C489 -
             (C17823 + C17822) * C486) *
                C51045 +
            ((C17820 + C17821) * C488 - (C18137 * C484 + C18136 * C487) +
             (C17822 + C17823) * C485 -
             (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 +
              C17368 * C1976) *
                 C489 -
             (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 +
              C17368 * C1982) *
                 C486) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
             (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             C28045 * C804 - C28046 * C50869) *
                C51045 +
            (C28049 * C803 + C28050 * C51032 - C22337 * C804 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C50790 * C51074 +
          (((C28049 * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             C28050 * C50869) *
                C51045 +
            (C28047 * C804 - (C28046 * C51032 + C28045 * C803) +
             C28048 * C50869) *
                C50966) *
               C51016 +
           ((C28439 * C804 -
             ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
             C28440 * C50869) *
                C51045 +
            ((C17820 + C17821) * C804 - (C18137 * C51032 + C18136 * C803) +
             (C17822 + C17823) * C50869) *
                C50966) *
               C50757) *
              C50790 * C51075 +
          ((C18154 * C51045 +
            (C28439 * C803 + C28440 * C51032 - (C17821 + C17820) * C804 -
             (C17823 + C17822) * C50869) *
                C50966) *
               C51016 +
           (((C17419 + C17418) * C803 + (C17417 + C17416) * C51032 -
             (C18150 + C18149) * C804 - (C18152 + C18151) * C50869) *
                C51045 +
            ((C18149 + C18150) * C803 + (C18151 + C18152) * C51032 -
             (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                 C804 -
             (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
               C51016 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
            ((C17809 + C17808) * C118 + (C17811 + C17810) * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C18137 * C50805 + C18136 * C118) * C50966 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
               C50757 +
           (((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C50966 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
               C51016) *
              C50790 * C114 +
          ((C17432 * C51045 +
            ((C17817 + C17816) * C118 + (C17819 + C17818) * C50805) * C50966) *
               C51016 +
           (((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C51045 +
            ((C18149 + C18150) * C118 + (C18151 + C18152) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                 C50805 +
             (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                 C118) *
                C50966 +
            ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) * C51045) *
               C50757 +
           (((C18152 + C18151) * C50805 + (C18150 + C18149) * C118) * C50966 +
            C17433 * C51045) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             ((C17809 + C17808) * C118 + (C17811 + C17810) * C50805) * C50966) *
                C50757) *
               C293 -
           ((((C18369 + C18368) * C50805 + (C18367 + C18366) * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C294 +
           ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
               C50938 * C1204) *
                  C118 +
              (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
               C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C23798 + C23797) * C118 + (C23800 + C23799) * C50805) * C50966) *
                C51016 +
            (((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C51045 +
             ((C27847 + C27848) * C118 + (C27849 + C27850) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             ((C18366 + C18367) * C118 + (C18368 + C18369) * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            (((C17810 + C17811) * C50805 + (C17808 + C17809) * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C293 -
           ((((C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
               C17368 * C1668) *
                  C50805 +
              (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
               C17368 * C1662) *
                  C118) *
                 C50966 +
             ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C51045) *
                C50757 +
            (((C27850 + C27849) * C50805 + (C27848 + C27847) * C118) * C50966 +
             ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C51045) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             (C28049 * C118 + C28050 * C50805) * C50966) *
                C50757) *
               C51076 -
           (((C28701 * C50805 + C28702 * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C51077 +
           ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 +
               C50938 * C1204) *
                  C118 +
              (C17373 * C317 + C17368 * C332 + C17374 * C1203 +
               C50938 * C1208) *
                  C50805) *
                 C51045 +
             ((C23798 + C23797) * C118 + (C23800 + C23799) * C50805) * C50966) *
                C51016 +
            (((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C51045 +
             ((C27847 + C27848) * C118 + (C27849 + C27850) * C50805) * C50966) *
                C50757) *
               C1423) *
              C51023 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             (C28699 * C118 + C28700 * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C51077 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            ((C28046 * C50805 + C28045 * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C51076 -
           ((((C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
               C17368 * C1668) *
                  C50805 +
              (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
               C17368 * C1662) *
                  C118) *
                 C50966 +
             ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C51045) *
                C50757 +
            (((C27850 + C27849) * C50805 + (C27848 + C27847) * C118) * C50966 +
             ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C51045) *
                C51016) *
               C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
             (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             C28045 * C804 - C28046 * C50869) *
                C51045 +
            (C28049 * C803 + C28050 * C51032 - C22337 * C804 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C51076 +
          ((((C22875 + C22876) * C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C22877 + C22878) * C50869) *
                C51045 +
            ((C22879 + C22880) * C804 -
             ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
             (C22881 + C22882) * C50869) *
                C50966) *
               C51016 +
           ((C28699 * C804 -
             ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
             C28700 * C50869) *
                C51045 +
            ((C22884 + C22883) * C804 - (C28701 * C51032 + C28702 * C803) +
             (C22886 + C22885) * C50869) *
                C50966) *
               C50757) *
              C51077 +
          ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C803 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C51032 -
             (C23797 + C23798) * C804 - (C23799 + C23800) * C50869) *
                C51045 +
            ((C23798 + C23797) * C803 + (C23800 + C23799) * C51032 -
             (C23801 + C23802) * C804 - (C23803 + C23804) * C50869) *
                C50966) *
               C51016 +
           (((C17622 + C17623) * C803 + (C17624 + C17625) * C51032 -
             (C27848 + C27847) * C804 - (C27850 + C27849) * C50869) *
                C51045 +
            ((C27847 + C27848) * C803 + (C27849 + C27850) * C51032 -
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C804 -
             (C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
               C51016 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
            (C28049 * C118 + C28050 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C28701 * C50805 + C28702 * C118) * C50966 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
               C50757 +
           (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C51045) *
               C51016) *
              C1189 +
          ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C51045 +
            ((C23798 + C23797) * C118 + (C23800 + C23799) * C50805) * C50966) *
               C51016 +
           (((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C51045 +
            ((C27847 + C27848) * C118 + (C27849 + C27850) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C17374 * C4343 + C50938 * C4345 + C17373 * C3422 +
              C17368 * C3426) *
                 C50805 +
             (C17374 * C4339 + C50938 * C4342 + C17373 * C3417 +
              C17368 * C3421) *
                 C118) *
                C50966 +
            ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
              C17368 * C1207) *
                 C50805 +
             (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
              C17368 * C1202) *
                 C118) *
                C51045) *
               C50757 +
           (((C17374 * C4341 + C50938 * C4344 + C17373 * C3420 +
              C17368 * C3425) *
                 C50805 +
             (C17374 * C4338 + C50938 * C4340 + C17373 * C3416 +
              C17368 * C3419) *
                 C118) *
                C50966 +
            ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
              C17368 * C1208) *
                 C50805 +
             (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
              C17368 * C1204) *
                 C118) *
                C51045) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             (C28049 * C118 + C28050 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C28701 * C50805 + C28702 * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C50841) *
              C1119 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             (C28699 * C118 + C28700 * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            ((C28046 * C50805 + C28045 * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C1117) *
              C1120 +
          (((C17432 * C51045 + (C28439 * C118 + C28440 * C50805) * C50966) *
                C51016 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C51045 +
             ((C18149 + C18150) * C118 + (C18151 + C18152) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C17374 * C1665 + C50938 * C1669 + C17373 * C981 +
               C17368 * C987) *
                  C50805 +
              (C17374 * C1657 + C50938 * C1664 + C17373 * C972 +
               C17368 * C980) *
                  C118) *
                 C50966 +
             ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C51045) *
                C50757 +
            (((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C50966 +
             C17986 * C51045) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C487 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C484 -
             (C22347 + C22348) * C488 - (C22349 + C22350) * C485 +
             C22363 * C489 + C22364 * C486) *
                C51045 +
            ((C22348 + C22347) * C487 + (C22350 + C22349) * C484 -
             (C22352 + C22351) * C488 - (C22354 + C22353) * C485 +
             (C22355 + C22356) * C489 + (C22357 + C22358) * C486) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
             C28045 * C488 - C28046 * C485 + C28047 * C489 + C28048 * C486) *
                C51045 +
            (C28049 * C487 + C28050 * C484 - C22337 * C488 - C22338 * C485 +
             (C22360 + C22359) * C489 + (C22362 + C22361) * C486) *
                C50966) *
               C50757) *
              C1117 +
          ((((C22875 + C22876) * C488 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C484 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C487) +
             (C22877 + C22878) * C485 - C23281 * C489 - C23282 * C486) *
                C51045 +
            ((C22879 + C22880) * C488 -
             ((C22878 + C22877) * C484 + (C22876 + C22875) * C487) +
             (C22881 + C22882) * C485 - (C23291 + C23292) * C489 -
             (C23293 + C23294) * C486) *
                C50966) *
               C51016 +
           ((C28699 * C488 -
             ((C17618 + C17619) * C484 + (C17620 + C17621) * C487) +
             C28700 * C485 - (C22883 + C22884) * C489 -
             (C22885 + C22886) * C486) *
                C51045 +
            ((C22884 + C22883) * C488 - (C28701 * C484 + C28702 * C487) +
             (C22886 + C22885) * C485 -
             (C17374 * C4738 + C50938 * C4744 + C17373 * C4739 +
              C17368 * C4745) *
                 C489 -
             (C17374 * C4746 + C50938 * C4750 + C17373 * C4747 +
              C17368 * C4751) *
                 C486) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C803 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C51032 -
              (C22347 + C22348) * C804 - (C22349 + C22350) * C50869) *
                 C51045 +
             ((C22348 + C22347) * C803 + (C22350 + C22349) * C51032 -
              (C22352 + C22351) * C804 - (C22354 + C22353) * C50869) *
                 C50966) *
                C51016 +
            (((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
              C28045 * C804 - C28046 * C50869) *
                 C51045 +
             (C28049 * C803 + C28050 * C51032 - C22337 * C804 -
              C22338 * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C22875 + C22876) * C804 -
              ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                   C51032 +
               (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                   C803) +
              (C22877 + C22878) * C50869) *
                 C51045 +
             ((C22879 + C22880) * C804 -
              ((C22878 + C22877) * C51032 + (C22876 + C22875) * C803) +
              (C22881 + C22882) * C50869) *
                 C50966) *
                C51016 +
            ((C28699 * C804 -
              ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
              C28700 * C50869) *
                 C51045 +
             ((C22884 + C22883) * C804 - (C28701 * C51032 + C28702 * C803) +
              (C22886 + C22885) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C28049 * C804 -
              ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
              C28050 * C50869) *
                 C51045 +
             (C28047 * C804 - (C28046 * C51032 + C28045 * C803) +
              C28048 * C50869) *
                 C50966) *
                C51016 +
            ((C28439 * C804 -
              ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
              C28440 * C50869) *
                 C51045 +
             ((C17820 + C17821) * C804 - (C18137 * C51032 + C18136 * C803) +
              (C17822 + C17823) * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
              C28702 * C804 - C28701 * C50869) *
                 C51045 +
             (C28699 * C803 + C28700 * C51032 - (C22883 + C22884) * C804 -
              (C22885 + C22886) * C50869) *
                 C50966) *
                C51016 +
            (((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
              (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                 C51045 +
             ((C18370 + C18371) * C803 + (C18372 + C18373) * C51032 -
              (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
               C17368 * C1315) *
                  C804 -
              (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
               C17368 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C50805) *
                 C51045 +
             ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
                C51016 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
             (C28049 * C118 + C28050 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C28701 * C50805 + C28702 * C118) * C50966 +
             ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
                C50757 +
            (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C50805 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C118) *
                 C51045) *
                C51016) *
               C50841) *
              C1119 +
          (((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C51045 +
             (C28699 * C118 + C28700 * C50805) * C50966) *
                C51016 +
            (((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C51045 +
             ((C18370 + C18371) * C118 + (C18372 + C18373) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C18137 * C50805 + C18136 * C118) * C50966 +
             ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C51045) *
                C50757 +
            ((C28046 * C50805 + C28045 * C118) * C50966 +
             ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C51045) *
                C51016) *
               C1117) *
              C1120 +
          (((C17432 * C51045 + (C28439 * C118 + C28440 * C50805) * C50966) *
                C51016 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C51045 +
             ((C18149 + C18150) * C118 + (C18151 + C18152) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C17374 * C1665 + C50938 * C1669 + C17373 * C981 +
               C17368 * C987) *
                  C50805 +
              (C17374 * C1657 + C50938 * C1664 + C17373 * C972 +
               C17368 * C980) *
                  C118) *
                 C50966 +
             ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C51045) *
                C50757 +
            (((C18373 + C18372) * C50805 + (C18371 + C18370) * C118) * C50966 +
             C17986 * C51045) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C51045 +
            ((C22348 + C22347) * C118 + (C22350 + C22349) * C50805) * C50966) *
               C51016 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C51045 +
            (C28049 * C118 + C28050 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C28701 * C50805 + C28702 * C118) * C50966 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C51045) *
               C50757 +
           (((C22878 + C22877) * C50805 + (C22876 + C22875) * C118) * C50966 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C51045) *
               C51016) *
              C1189 +
          ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C51045 +
            ((C23798 + C23797) * C118 + (C23800 + C23799) * C50805) * C50966) *
               C51016 +
           (((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C51045 +
            ((C27847 + C27848) * C118 + (C27849 + C27850) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C17374 * C4343 + C50938 * C4345 + C17373 * C3422 +
              C17368 * C3426) *
                 C50805 +
             (C17374 * C4339 + C50938 * C4342 + C17373 * C3417 +
              C17368 * C3421) *
                 C118) *
                C50966 +
            ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
              C17368 * C1207) *
                 C50805 +
             (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
              C17368 * C1202) *
                 C118) *
                C51045) *
               C50757 +
           (((C17374 * C4341 + C50938 * C4344 + C17373 * C3420 +
              C17368 * C3425) *
                 C50805 +
             (C17374 * C4338 + C50938 * C4340 + C17373 * C3416 +
              C17368 * C3419) *
                 C118) *
                C50966 +
            ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
              C17368 * C1208) *
                 C50805 +
             (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
              C17368 * C1204) *
                 C118) *
                C51045) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                  C1770 +
              (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                  C1768 -
              (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                 C51045 +
             ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
              (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                 C50966) *
                C51016 +
            (((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
              C28045 * C1771 - C28046 * C50869) *
                 C51045 +
             (C28049 * C1770 + C28050 * C1768 - C22337 * C1771 -
              C22338 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C22875 + C22876) * C1771 -
              ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                   C1768 +
               (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                   C1770) +
              (C22877 + C22878) * C50869) *
                 C51045 +
             ((C22879 + C22880) * C1771 -
              ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
              (C22881 + C22882) * C50869) *
                 C50966) *
                C51016 +
            ((C28699 * C1771 -
              ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
              C28700 * C50869) *
                 C51045 +
             ((C22884 + C22883) * C1771 - (C28701 * C1768 + C28702 * C1770) +
              (C22886 + C22885) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C28049 * C1771 -
              ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
              C28050 * C50869) *
                 C51045 +
             (C28047 * C1771 - (C28046 * C1768 + C28045 * C1770) +
              C28048 * C50869) *
                 C50966) *
                C51016 +
            ((C28439 * C1771 -
              ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
              C28440 * C50869) *
                 C51045 +
             ((C17820 + C17821) * C1771 - (C18137 * C1768 + C18136 * C1770) +
              (C17822 + C17823) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C17621 + C17620) * C1770 + (C17619 + C17618) * C1768 -
              C28702 * C1771 - C28701 * C50869) *
                 C51045 +
             (C28699 * C1770 + C28700 * C1768 - (C22883 + C22884) * C1771 -
              (C22885 + C22886) * C50869) *
                 C50966) *
                C51016 +
            (((C17617 + C17616) * C1770 + (C17615 + C17614) * C1768 -
              (C18371 + C18370) * C1771 - (C18373 + C18372) * C50869) *
                 C51045 +
             ((C18370 + C18371) * C1770 + (C18372 + C18373) * C1768 -
              (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
               C17368 * C1315) *
                  C1771 -
              (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
               C17368 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C2227 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51078 -
             (C22347 + C22348) * C2228 - (C22349 + C22350) * C51079 +
             C22363 * C2229 + C22364 * C2226) *
                C51045 +
            ((C22348 + C22347) * C2227 + (C22350 + C22349) * C51078 -
             (C22352 + C22351) * C2228 - (C22354 + C22353) * C51079 +
             (C22355 + C22356) * C2229 + (C22357 + C22358) * C2226) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
             C28045 * C2228 - C28046 * C51079 + C28047 * C2229 +
             C28048 * C2226) *
                C51045 +
            (C28049 * C2227 + C28050 * C51078 - C22337 * C2228 -
             C22338 * C51079 + (C22360 + C22359) * C2229 +
             (C22362 + C22361) * C2226) *
                C50966) *
               C50757) *
              C51031 +
          ((((C22875 + C22876) * C2228 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51078 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C2227) +
             (C22877 + C22878) * C51079 - C23281 * C2229 - C23282 * C2226) *
                C51045 +
            ((C22879 + C22880) * C2228 -
             ((C22878 + C22877) * C51078 + (C22876 + C22875) * C2227) +
             (C22881 + C22882) * C51079 - (C23291 + C23292) * C2229 -
             (C23293 + C23294) * C2226) *
                C50966) *
               C51016 +
           ((C28699 * C2228 -
             ((C17618 + C17619) * C51078 + (C17620 + C17621) * C2227) +
             C28700 * C51079 - (C22883 + C22884) * C2229 -
             (C22885 + C22886) * C2226) *
                C51045 +
            ((C22884 + C22883) * C2228 - (C28701 * C51078 + C28702 * C2227) +
             (C22886 + C22885) * C51079 -
             (C17374 * C4738 + C50938 * C4744 + C17373 * C4739 +
              C17368 * C4745) *
                 C2229 -
             (C17374 * C4746 + C50938 * C4750 + C17373 * C4747 +
              C17368 * C4751) *
                 C2226) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
             (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             C28045 * C1771 - C28046 * C50869) *
                C51045 +
            (C28049 * C1770 + C28050 * C1768 - C22337 * C1771 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C22875 + C22876) * C1771 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C1768 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C1770) +
             (C22877 + C22878) * C50869) *
                C51045 +
            ((C22879 + C22880) * C1771 -
             ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
             (C22881 + C22882) * C50869) *
                C50966) *
               C51016 +
           ((C28699 * C1771 -
             ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
             C28700 * C50869) *
                C51045 +
            ((C22884 + C22883) * C1771 - (C28701 * C1768 + C28702 * C1770) +
             (C22886 + C22885) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C1770 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C1768 -
             (C23797 + C23798) * C1771 - (C23799 + C23800) * C50869) *
                C51045 +
            ((C23798 + C23797) * C1770 + (C23800 + C23799) * C1768 -
             (C23801 + C23802) * C1771 - (C23803 + C23804) * C50869) *
                C50966) *
               C51016 +
           (((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
             (C27848 + C27847) * C1771 - (C27850 + C27849) * C50869) *
                C51045 +
            ((C27847 + C27848) * C1770 + (C27849 + C27850) * C1768 -
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C1771 -
             (C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
             (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             C28045 * C1771 - C28046 * C50869) *
                C51045 +
            (C28049 * C1770 + C28050 * C1768 - C22337 * C1771 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C28049 * C1771 -
             ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
             C28050 * C50869) *
                C51045 +
            (C28047 * C1771 - (C28046 * C1768 + C28045 * C1770) +
             C28048 * C50869) *
                C50966) *
               C51016 +
           ((C28439 * C1771 -
             ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
             C28440 * C50869) *
                C51045 +
            ((C17820 + C17821) * C1771 - (C18137 * C1768 + C18136 * C1770) +
             (C17822 + C17823) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C19402 * C51045 +
            (C28439 * C1770 + C28440 * C1768 - (C17821 + C17820) * C1771 -
             (C17823 + C17822) * C50869) *
                C50966) *
               C51016 +
           (((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
             (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
                C51045 +
            ((C18149 + C18150) * C1770 + (C18151 + C18152) * C1768 -
             (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                 C1771 -
             (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1964 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1960 -
            (C22347 + C22348) * C1965 - (C22349 + C22350) * C1961 +
            C22363 * C1966 + C22364 * C1962 - C24199 * C1967 - C24200 * C1963) *
               C51045 +
           ((C22348 + C22347) * C1964 + (C22350 + C22349) * C1960 -
            (C22352 + C22351) * C1965 - (C22354 + C22353) * C1961 +
            (C22355 + C22356) * C1966 + (C22357 + C22358) * C1962 -
            (C24209 + C24210) * C1967 - (C24211 + C24212) * C1963) *
               C50966) *
              C51016 +
          (((C17408 + C17409) * C1964 + (C17410 + C17411) * C1960 -
            C28045 * C1965 - C28046 * C1961 + C28047 * C1966 + C28048 * C1962 -
            (C22359 + C22360) * C1967 - (C22361 + C22362) * C1963) *
               C51045 +
           (C28049 * C1964 + C28050 * C1960 - C22337 * C1965 - C22338 * C1961 +
            (C22360 + C22359) * C1966 + (C22362 + C22361) * C1962 -
            (C17374 * C6662 + C50938 * C6665 + C17373 * C5670 +
             C17368 * C5674) *
                C1967 -
            (C17374 * C6666 + C50938 * C6668 + C17373 * C5675 +
             C17368 * C5679) *
                C1963) *
               C50966) *
              C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C2227 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51078 -
             (C22347 + C22348) * C2228 - (C22349 + C22350) * C51079 +
             C22363 * C2229 + C22364 * C2226) *
                C51045 +
            ((C22348 + C22347) * C2227 + (C22350 + C22349) * C51078 -
             (C22352 + C22351) * C2228 - (C22354 + C22353) * C51079 +
             (C22355 + C22356) * C2229 + (C22357 + C22358) * C2226) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
             C28045 * C2228 - C28046 * C51079 + C28047 * C2229 +
             C28048 * C2226) *
                C51045 +
            (C28049 * C2227 + C28050 * C51078 - C22337 * C2228 -
             C22338 * C51079 + (C22360 + C22359) * C2229 +
             (C22362 + C22361) * C2226) *
                C50966) *
               C50757) *
              C50790 * C51023 +
          (((C28049 * C2228 -
             ((C17411 + C17410) * C51078 + (C17409 + C17408) * C2227) +
             C28050 * C51079 - C22337 * C2229 - C22338 * C2226) *
                C51045 +
            (C28047 * C2228 - (C28046 * C51078 + C28045 * C2227) +
             C28048 * C51079 - (C22359 + C22360) * C2229 -
             (C22361 + C22362) * C2226) *
                C50966) *
               C51016 +
           ((C28439 * C2228 -
             ((C17415 + C17414) * C51078 + (C17413 + C17412) * C2227) +
             C28440 * C51079 - (C17821 + C17820) * C2229 -
             (C17823 + C17822) * C2226) *
                C51045 +
            ((C17820 + C17821) * C2228 - (C18137 * C51078 + C18136 * C2227) +
             (C17822 + C17823) * C51079 -
             (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 +
              C17368 * C1976) *
                 C2229 -
             (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 +
              C17368 * C1982) *
                 C2226) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
             (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             C28045 * C1771 - C28046 * C50869) *
                C51045 +
            (C28049 * C1770 + C28050 * C1768 - C22337 * C1771 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C28049 * C1771 -
             ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
             C28050 * C50869) *
                C51045 +
            (C28047 * C1771 - (C28046 * C1768 + C28045 * C1770) +
             C28048 * C50869) *
                C50966) *
               C51016 +
           ((C28439 * C1771 -
             ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
             C28440 * C50869) *
                C51045 +
            ((C17820 + C17821) * C1771 - (C18137 * C1768 + C18136 * C1770) +
             (C17822 + C17823) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C19402 * C51045 +
            (C28439 * C1770 + C28440 * C1768 - (C17821 + C17820) * C1771 -
             (C17823 + C17822) * C50869) *
                C50966) *
               C51016 +
           (((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
             (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
                C51045 +
            ((C18149 + C18150) * C1770 + (C18151 + C18152) * C1768 -
             (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                 C1771 -
             (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C22347 + C22348) * C1771 - (C22349 + C22350) * C50869) *
                C51045 +
            ((C22348 + C22347) * C1770 + (C22350 + C22349) * C1768 -
             (C22352 + C22351) * C1771 - (C22354 + C22353) * C50869) *
                C50966) *
               C51016 +
           (((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             C28045 * C1771 - C28046 * C50869) *
                C51045 +
            (C28049 * C1770 + C28050 * C1768 - C22337 * C1771 -
             C22338 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C22875 + C22876) * C1771 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C1768 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C1770) +
             (C22877 + C22878) * C50869) *
                C51045 +
            ((C22879 + C22880) * C1771 -
             ((C22878 + C22877) * C1768 + (C22876 + C22875) * C1770) +
             (C22881 + C22882) * C50869) *
                C50966) *
               C51016 +
           ((C28699 * C1771 -
             ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
             C28700 * C50869) *
                C51045 +
            ((C22884 + C22883) * C1771 - (C28701 * C1768 + C28702 * C1770) +
             (C22886 + C22885) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C1770 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C1768 -
             (C23797 + C23798) * C1771 - (C23799 + C23800) * C50869) *
                C51045 +
            ((C23798 + C23797) * C1770 + (C23800 + C23799) * C1768 -
             (C23801 + C23802) * C1771 - (C23803 + C23804) * C50869) *
                C50966) *
               C51016 +
           (((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
             (C27848 + C27847) * C1771 - (C27850 + C27849) * C50869) *
                C51045 +
            ((C27847 + C27848) * C1770 + (C27849 + C27850) * C1768 -
             (C17374 * C3845 + C50938 * C3848 + C17373 * C2847 +
              C17368 * C2851) *
                 C1771 -
             (C17374 * C3849 + C50938 * C3851 + C17373 * C2852 +
              C17368 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C51031 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C50841) *
              C51074 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C50841 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C51031) *
              C51075 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
                C17372) *
               C51031 -
           (((C17374 * C326 + C50938 * C337 + C17373 * C325 + C17368 * C336) *
                 C50805 +
             (C17374 * C307 + C50938 * C327 + C17373 * C306 + C17368 * C324) *
                 C118) *
                C50902 * C17372 +
            ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C50902 *
                C17371 +
            C17987 * C17370) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C51031 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C51074 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C51031) *
              C51075 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C51031 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C804 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C18155 * C17372) *
               C51031 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C804 -
             ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C296 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C804 -
             ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C51031 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
             (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C803 + (C17984 + C17985) * C51032 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C804 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C803 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C51032 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C804 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C804 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C51032 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C803) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C296 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C804 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C51032 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C803) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C803 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C51032 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C804 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C293 -
           (((C17614 + C17615) * C50805 + (C17616 + C17617) * C118) * C50902 *
                C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C294 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C17370 +
            ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
                C17371 +
            ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
                C17372) *
               C295) *
              C296 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17373 * C298 + C17368 * C309 + C17374 * C305 + C50938 * C322) *
                 C118 +
             (C17373 * C308 + C17368 * C328 + C17374 * C323 + C50938 * C335) *
                 C50805) *
                C50902 * C17372) *
               C294 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C293 -
           (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 + C17368 * C335) *
                 C50805 +
             (C17374 * C1193 + C50938 * C1198 + C17373 * C305 + C17368 * C322) *
                 C118) *
                C50902 * C17372 +
            ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C50902 *
                C17371 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C50902 *
                C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C50790 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
               C17371 +
           ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
               C17370) *
              C50790 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
               C17372) *
              C50790 * C115 -
          (((C17374 * C688 + C50938 * C690 + C17373 * C137 + C17368 * C145) *
                C50805 +
            (C17374 * C687 + C50938 * C689 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50902 * C17372 +
           ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) * C50902 *
               C17371 +
           C17435 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C488 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C485 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C489 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
            (C17808 + C17809) * C488 - (C17810 + C17811) * C485 +
            (C17812 + C17813) * C489 + (C17814 + C17815) * C486) *
               C50902 * C17371 +
           (C17424 * C487 + C17425 * C484 - (C17816 + C17817) * C488 -
            (C17818 + C17819) * C485 + (C17820 + C17821) * C489 +
            (C17822 + C17823) * C486) *
               C50902 * C17372) *
              C50790 * C296 +
          (((C17809 + C17808) * C488 -
            ((C17411 + C17410) * C484 + (C17409 + C17408) * C487) +
            (C17811 + C17810) * C485 - (C17813 + C17812) * C489 -
            (C17815 + C17814) * C486) *
               C50902 * C17370 +
           ((C17817 + C17816) * C488 -
            ((C17415 + C17414) * C484 + (C17413 + C17412) * C487) +
            (C17819 + C17818) * C485 - (C17821 + C17820) * C489 -
            (C17823 + C17822) * C486) *
               C50902 * C17371 +
           ((C17373 * C496 + C17368 * C512 + C17374 * C972 + C50938 * C980) *
                C488 -
            (C17426 * C484 + C17427 * C487) +
            (C17373 * C513 + C17368 * C526 + C17374 * C981 + C50938 * C987) *
                C485 -
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C489 -
            (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C486) *
               C50902 * C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C50790 * C113 -
          ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
            C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
               C50805 +
           (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
            C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50902 * C50752 * C50790 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C50805) *
              C50902 * C50752 * C50790 * C115 -
          ((C20207 * C1197 + C20202 * C1205 + C20206 * C323 + C20201 * C335 +
            C20205 * C308 + C20200 * C328 + C20204 * C133 + C20199 * C143) *
               C50805 +
           (C20207 * C1193 + C20202 * C1198 + C20206 * C305 + C20201 * C322 +
            C20205 * C298 + C20200 * C309 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50902 * C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C293 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C294 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C295) *
              C296 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C294 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C293 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C487 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C484 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C488 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C485 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C489 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C486) *
              C50902 * C50752 * C50790 * C296 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C488 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C484 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C487) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C485 -
           (C20207 * C3845 + C20202 * C3848 + C20206 * C2847 + C20201 * C2851 +
            C20205 * C1308 + C20200 * C1313 + C20204 * C493 + C20199 * C506) *
               C489 -
           (C20207 * C3849 + C20202 * C3851 + C20206 * C2852 + C20201 * C2856 +
            C20205 * C1314 + C20200 * C1320 + C20204 * C507 + C20199 * C523) *
               C486) *
              C50902 * C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C804 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
            (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C18155 * C17372) *
              C50790 * C51074 +
          (((C17809 + C17808) * C804 -
            ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
            (C17811 + C17810) * C50869) *
               C50902 * C17370 +
           ((C17817 + C17816) * C804 -
            ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
            (C17819 + C17818) * C50869) *
               C50902 * C17371 +
           ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
            (C18151 + C18152) * C50869) *
               C50902 * C17372) *
              C50790 * C51075 +
          (C18155 * C17370 +
           ((C17419 + C17418) * C803 + (C17417 + C17416) * C51032 -
            (C18150 + C18149) * C804 - (C18152 + C18151) * C50869) *
               C50902 * C17371 +
           ((C17420 + C17421) * C803 + (C17422 + C17423) * C51032 -
            (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                C804 -
            (C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                C50869) *
               C50902 * C17372) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C803 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51032 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C804 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C51074 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C804 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C51032 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C803) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C51075 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C803 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C51032 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C804 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C50790 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
               C17371 +
           ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
               C17370) *
              C50790 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
               C17372) *
              C50790 * C115 -
          (((C17374 * C688 + C50938 * C690 + C17373 * C137 + C17368 * C145) *
                C50805 +
            (C17374 * C687 + C50938 * C689 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50902 * C17372 +
           ((C17423 + C17422) * C50805 + (C17421 + C17420) * C118) * C50902 *
               C17371 +
           C17435 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C293 -
           (((C17614 + C17615) * C50805 + (C17616 + C17617) * C118) * C50902 *
                C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C294 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C17370 +
            ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
                C17371 +
            ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
                C17372) *
               C295) *
              C296 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17373 * C298 + C17368 * C309 + C17374 * C305 + C50938 * C322) *
                 C118 +
             (C17373 * C308 + C17368 * C328 + C17374 * C323 + C50938 * C335) *
                 C50805) *
                C50902 * C17372) *
               C294 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C293 -
           (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 + C17368 * C335) *
                 C50805 +
             (C17374 * C1193 + C50938 * C1198 + C17373 * C305 + C17368 * C322) *
                 C118) *
                C50902 * C17372 +
            ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C50902 *
                C17371 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C50902 *
                C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C50790 * C113 -
          ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
            C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
               C50805 +
           (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
            C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50902 * C50752 * C50790 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C50805) *
              C50902 * C50752 * C50790 * C115 -
          ((C20207 * C1197 + C20202 * C1205 + C20206 * C323 + C20201 * C335 +
            C20205 * C308 + C20200 * C328 + C20204 * C133 + C20199 * C143) *
               C50805 +
           (C20207 * C1193 + C20202 * C1198 + C20206 * C305 + C20201 * C322 +
            C20205 * C298 + C20200 * C309 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50902 * C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C293 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C294 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C295) *
              C296 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C294 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C293 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C51076 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C51077 +
           (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                 C118 +
             (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                 C50805) *
                C50902 * C17370 +
            ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
                C17371 +
            ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
                C17372) *
               C1423) *
              C51023 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C51077 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C51076 -
           (((C17374 * C1197 + C50938 * C1205 + C17373 * C323 + C17368 * C335) *
                 C50805 +
             (C17374 * C1193 + C50938 * C1198 + C17373 * C305 + C17368 * C322) *
                 C118) *
                C50902 * C17372 +
            ((C17629 + C17628) * C50805 + (C17627 + C17626) * C118) * C50902 *
                C17371 +
            ((C17625 + C17624) * C50805 + (C17623 + C17622) * C118) * C50902 *
                C17370) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C51076 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C51077 +
           ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
             C20206 * C2652 + C20201 * C2655 + C20207 * C3691 +
             C20202 * C3695) *
                C118 +
            (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
             C20206 * C2656 + C20201 * C2661 + C20207 * C3694 +
             C20202 * C3697) *
                C50805) *
               C50902 * C50752 * C1423) *
              C51023 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C51077 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C51076 -
           ((C20207 * C3692 + C20202 * C3696 + C20206 * C2658 + C20201 * C2662 +
             C20205 * C1201 + C20200 * C1207 + C20204 * C319 + C20199 * C333) *
                C50805 +
            (C20207 * C3690 + C20202 * C3693 + C20206 * C2653 + C20201 * C2657 +
             C20205 * C1195 + C20200 * C1202 + C20204 * C303 + C20199 * C318) *
                C118) *
               C50902 * C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C803 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51032 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C804 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
            (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C18155 * C17372) *
              C51076 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C804 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51032 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C803) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C18366 + C18367) * C804 -
            ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
            (C18368 + C18369) * C50869) *
               C50902 * C17371 +
           ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
            (C18372 + C18373) * C50869) *
               C50902 * C17372) *
              C51077 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C803 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C51032 -
            (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
             C17368 * C1658) *
                C804 -
            (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
             C17368 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C17622 + C17623) * C803 + (C17624 + C17625) * C51032 -
            (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
             C17368 * C1660) *
                C804 -
            (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
             C17368 * C1667) *
                C50869) *
               C50902 * C17371 +
           ((C17626 + C17627) * C803 + (C17628 + C17629) * C51032 -
            (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
             C17368 * C1662) *
                C804 -
            (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
             C17368 * C1668) *
                C50869) *
               C50902 * C17372) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C803 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51032 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C804 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C51076 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C804 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C51032 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C803) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C51077 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C803 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C51032 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C804 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C1188 -
          (C17987 * C17372 +
           ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
               C17371 +
           ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                C50805 +
            (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                C118) *
               C50902 * C17370) *
              C1189 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C118 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C50805) *
               C50902 * C17370 +
           ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
               C17371 +
           ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
               C17372) *
              C1190 -
          (((C17374 * C2659 + C50938 * C2663 + C17373 * C1199 +
             C17368 * C1206) *
                C50805 +
            (C17374 * C2654 + C50938 * C2660 + C17373 * C1194 +
             C17368 * C1200) *
                C118) *
               C50902 * C17372 +
           ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
             C17368 * C1207) *
                C50805 +
            (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
             C17368 * C1202) *
                C118) *
               C50902 * C17371 +
           ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
             C17368 * C1208) *
                C50805 +
            (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
             C17368 * C1204) *
                C118) *
               C50902 * C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C1117 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C50841) *
              C1119 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C50841 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C1117) *
              C1120 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
                C17372) *
               C1117 -
           (((C17374 * C326 + C50938 * C337 + C17373 * C325 + C17368 * C336) *
                 C50805 +
             (C17374 * C307 + C50938 * C327 + C17373 * C306 + C17368 * C324) *
                 C118) *
                C50902 * C17372 +
            ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C50902 *
                C17371 +
            C17987 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C487 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C484 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C488 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C485 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C489 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C17408 + C17409) * C487 + (C17410 + C17411) * C484 -
            (C17808 + C17809) * C488 - (C17810 + C17811) * C485 +
            (C17812 + C17813) * C489 + (C17814 + C17815) * C486) *
               C50902 * C17371 +
           (C17424 * C487 + C17425 * C484 - C18136 * C488 - C18137 * C485 +
            (C17820 + C17821) * C489 + (C17822 + C17823) * C486) *
               C50902 * C17372) *
              C1117 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C488 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C484 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C487) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C485 -
            (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
             C17368 * C1311) *
                C489 -
            (C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
             C17368 * C1319) *
                C486) *
               C50902 * C17370 +
           ((C18366 + C18367) * C488 -
            ((C17618 + C17619) * C484 + (C17620 + C17621) * C487) +
            (C18368 + C18369) * C485 -
            (C17374 * C2847 + C50938 * C2851 + C17373 * C1308 +
             C17368 * C1313) *
                C489 -
            (C17374 * C2852 + C50938 * C2856 + C17373 * C1314 +
             C17368 * C1320) *
                C486) *
               C50902 * C17371 +
           ((C18370 + C18371) * C488 - (C17970 * C484 + C17971 * C487) +
            (C18372 + C18373) * C485 -
            (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
             C17368 * C1315) *
                C489 -
            (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
             C17368 * C1321) *
                C486) *
               C50902 * C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C1119 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C1117) *
              C1120 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C1188 -
          ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
            C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
               C50805 +
           (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
            C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
               C118) *
              C50902 * C50752 * C1189 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C118 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C50805) *
              C50902 * C50752 * C1190 -
          ((C20207 * C20895 + C20202 * C20897 + C20206 * C3694 +
            C20201 * C3697 + C20205 * C2656 + C20200 * C2661 + C20204 * C1203 +
            C20199 * C1208) *
               C50805 +
           (C20207 * C20894 + C20202 * C20896 + C20206 * C3691 +
            C20201 * C3695 + C20205 * C2652 + C20200 * C2655 + C20204 * C1196 +
            C20199 * C1204) *
               C118) *
              C50902 * C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C487 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C484 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C488 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C485 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C489 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C486) *
              C50902 * C50752 * C1117 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C488 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C484 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C487) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C485 -
           (C20207 * C20996 + C20202 * C20997 + C20206 * C3844 +
            C20201 * C3846 + C20205 * C2846 + C20200 * C2849 + C20204 * C1307 +
            C20199 * C1311) *
               C489 -
           (C20207 * C20998 + C20202 * C20999 + C20206 * C3847 +
            C20201 * C3850 + C20205 * C2850 + C20200 * C2855 + C20204 * C1312 +
            C20199 * C1319) *
               C486) *
              C50902 * C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C803 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C51032 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C804 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C803 + (C17410 + C17411) * C51032 -
             (C17808 + C17809) * C804 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C18155 * C17372) *
               C1117 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C804 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C51032 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C803) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C804 -
             ((C17618 + C17619) * C51032 + (C17620 + C17621) * C803) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C804 - (C17970 * C51032 + C17971 * C803) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C51023 +
          ((((C17809 + C17808) * C804 -
             ((C17411 + C17410) * C51032 + (C17409 + C17408) * C803) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C804 -
             ((C17415 + C17414) * C51032 + (C17413 + C17412) * C803) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C804 - (C17426 * C51032 + C17427 * C803) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C1117 +
           (((C17621 + C17620) * C803 + (C17619 + C17618) * C51032 -
             (C18367 + C18366) * C804 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C803 + (C17615 + C17614) * C51032 -
             (C18371 + C18370) * C804 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C803 + (C17984 + C17985) * C51032 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C804 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C803 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C51032 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C804 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C1117 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C804 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C51032 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C803) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C51023 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C804 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C51032 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C803) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C1117 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C803 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C51032 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C804 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C50805) *
                C50902 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
                C17371 +
            C17434 * C17372) *
               C1117 -
           (C17987 * C17372 +
            ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
                C17371 +
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C50805 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C118) *
                C50902 * C17370) *
               C50841) *
              C1119 +
          ((((C17621 + C17620) * C118 + (C17619 + C17618) * C50805) * C50902 *
                C17370 +
            ((C17617 + C17616) * C118 + (C17615 + C17614) * C50805) * C50902 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50805) * C50902 *
                C17372) *
               C50841 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50805 + (C17413 + C17412) * C118) * C50902 *
                C17371 +
            ((C17411 + C17410) * C50805 + (C17409 + C17408) * C118) * C50902 *
                C17370) *
               C1117) *
              C1120 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50805) * C50902 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50805) * C50902 *
                C17372) *
               C1117 -
           (((C17374 * C326 + C50938 * C337 + C17373 * C325 + C17368 * C336) *
                 C50805 +
             (C17374 * C307 + C50938 * C327 + C17373 * C306 + C17368 * C324) *
                 C118) *
                C50902 * C17372 +
            ((C17985 + C17984) * C50805 + (C17983 + C17982) * C118) * C50902 *
                C17371 +
            C17987 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C50805) *
               C50902 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50805) * C50902 *
               C17371 +
           C17434 * C17372) *
              C1188 -
          (C17987 * C17372 +
           ((C17618 + C17619) * C50805 + (C17620 + C17621) * C118) * C50902 *
               C17371 +
           ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                C50805 +
            (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                C118) *
               C50902 * C17370) *
              C1189 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C118 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C50805) *
               C50902 * C17370 +
           ((C17622 + C17623) * C118 + (C17624 + C17625) * C50805) * C50902 *
               C17371 +
           ((C17626 + C17627) * C118 + (C17628 + C17629) * C50805) * C50902 *
               C17372) *
              C1190 -
          (((C17374 * C2659 + C50938 * C2663 + C17373 * C1199 +
             C17368 * C1206) *
                C50805 +
            (C17374 * C2654 + C50938 * C2660 + C17373 * C1194 +
             C17368 * C1200) *
                C118) *
               C50902 * C17372 +
           ((C17374 * C2658 + C50938 * C2662 + C17373 * C1201 +
             C17368 * C1207) *
                C50805 +
            (C17374 * C2653 + C50938 * C2657 + C17373 * C1195 +
             C17368 * C1202) *
                C118) *
               C50902 * C17371 +
           ((C17374 * C2656 + C50938 * C2661 + C17373 * C1203 +
             C17368 * C1208) *
                C50805 +
            (C17374 * C2652 + C50938 * C2655 + C17373 * C1196 +
             C17368 * C1204) *
                C118) *
               C50902 * C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C50805 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C118) *
               C50902 * C50752 * C50841) *
              C1119 +
          (((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C118 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C50805) *
               C50902 * C50752 * C50841 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C50805 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50902 * C50752 * C1117) *
              C1120 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
             C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
             C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
                C50805) *
               C50902 * C50752 * C1117 -
           ((C20207 * C2659 + C20202 * C2663 + C20206 * C1199 + C20201 * C1206 +
             C20205 * C321 + C20200 * C334 + C20204 * C310 + C20199 * C329) *
                C50805 +
            (C20207 * C2654 + C20202 * C2660 + C20206 * C1194 + C20201 * C1200 +
             C20205 * C304 + C20200 * C320 + C20204 * C299 + C20199 * C311) *
                C118) *
               C50902 * C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C50805) *
              C50902 * C50752 * C1188 -
          ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
            C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
               C50805 +
           (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
            C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
               C118) *
              C50902 * C50752 * C1189 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C118 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C50805) *
              C50902 * C50752 * C1190 -
          ((C20207 * C20895 + C20202 * C20897 + C20206 * C3694 +
            C20201 * C3697 + C20205 * C2656 + C20200 * C2661 + C20204 * C1203 +
            C20199 * C1208) *
               C50805 +
           (C20207 * C20894 + C20202 * C20896 + C20206 * C3691 +
            C20201 * C3695 + C20205 * C2652 + C20200 * C2655 + C20204 * C1196 +
            C20199 * C1204) *
               C118) *
              C50902 * C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                 C1770 +
             (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                 C1768 -
             (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                 C1771 -
             (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                 C50869) *
                C50902 * C17370 +
            ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
             (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
                C50902 * C17371 +
            C19403 * C17372) *
               C51031 +
           (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                 C1771 -
             ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                  C1768 +
              (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                  C1770) +
             (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                 C50869) *
                C50902 * C17370 +
            ((C18366 + C18367) * C1771 -
             ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
             (C18368 + C18369) * C50869) *
                C50902 * C17371 +
            ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
             (C18372 + C18373) * C50869) *
                C50902 * C17372) *
               C50841) *
              C51023 +
          ((((C17809 + C17808) * C1771 -
             ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
             (C17811 + C17810) * C50869) *
                C50902 * C17370 +
            ((C17817 + C17816) * C1771 -
             ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
             (C17819 + C17818) * C50869) *
                C50902 * C17371 +
            ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
             (C18151 + C18152) * C50869) *
                C50902 * C17372) *
               C51031 +
           (((C17621 + C17620) * C1770 + (C17619 + C17618) * C1768 -
             (C18367 + C18366) * C1771 - (C18369 + C18368) * C50869) *
                C50902 * C17370 +
            ((C17617 + C17616) * C1770 + (C17615 + C17614) * C1768 -
             (C18371 + C18370) * C1771 - (C18373 + C18372) * C50869) *
                C50902 * C17371 +
            ((C17982 + C17983) * C1770 + (C17984 + C17985) * C1768 -
             (C17374 * C1657 + C50938 * C1664 + C17373 * C972 + C17368 * C980) *
                 C1771 -
             (C17374 * C1665 + C50938 * C1669 + C17373 * C981 + C17368 * C987) *
                 C50869) *
                C50902 * C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
             C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
                C1770 +
            (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
             C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
                C1768 -
            (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
             C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
                C1771 -
            (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
             C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
             C20206 * C3416 + C20201 * C3419 + C20207 * C4338 +
             C20202 * C4340) *
                C1771 -
            ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 +
              C20201 * C1208 + C20205 * C317 + C20200 * C332 + C20204 * C314 +
              C20199 * C331) *
                 C1768 +
             (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 +
              C20201 * C1204 + C20205 * C302 + C20200 * C316 + C20204 * C301 +
              C20199 * C315) *
                 C1770) +
            (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
             C20206 * C3420 + C20201 * C3425 + C20207 * C4341 +
             C20202 * C4344) *
                C50869) *
               C50902 * C50752 * C50841) *
              C51023 +
          (((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
             C20206 * C1655 + C20201 * C1660 + C20207 * C3417 +
             C20202 * C3421) *
                C1771 -
            ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
              C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                 C1768 +
             (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
              C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                 C1770) +
            (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
             C20206 * C1661 + C20201 * C1667 + C20207 * C3422 +
             C20202 * C3426) *
                C50869) *
               C50902 * C50752 * C51031 +
           ((C20204 * C300 + C20199 * C313 + C20205 * C303 + C20200 * C318 +
             C20206 * C1195 + C20201 * C1202 + C20207 * C2653 +
             C20202 * C2657) *
                C1770 +
            (C20204 * C312 + C20199 * C330 + C20205 * C319 + C20200 * C333 +
             C20206 * C1201 + C20201 * C1207 + C20207 * C2658 +
             C20202 * C2662) *
                C1768 -
            (C20207 * C4339 + C20202 * C4342 + C20206 * C3417 + C20201 * C3421 +
             C20205 * C1655 + C20200 * C1660 + C20204 * C970 + C20199 * C976) *
                C1771 -
            (C20207 * C4343 + C20202 * C4345 + C20206 * C3422 + C20201 * C3426 +
             C20205 * C1661 + C20200 * C1667 + C20204 * C977 + C20199 * C985) *
                C50869) *
               C50902 * C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C2228 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C51079 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C2229 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
            (C17808 + C17809) * C2228 - (C17810 + C17811) * C51079 +
            (C17812 + C17813) * C2229 + (C17814 + C17815) * C2226) *
               C50902 * C17371 +
           (C17424 * C2227 + C17425 * C51078 - C18136 * C2228 -
            C18137 * C51079 + (C17820 + C17821) * C2229 +
            (C17822 + C17823) * C2226) *
               C50902 * C17372) *
              C51031 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C2228 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C51078 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C2227) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C51079 -
            (C17374 * C2846 + C50938 * C2849 + C17373 * C1307 +
             C17368 * C1311) *
                C2229 -
            (C17374 * C2850 + C50938 * C2855 + C17373 * C1312 +
             C17368 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C18366 + C18367) * C2228 -
            ((C17618 + C17619) * C51078 + (C17620 + C17621) * C2227) +
            (C18368 + C18369) * C51079 -
            (C17374 * C2847 + C50938 * C2851 + C17373 * C1308 +
             C17368 * C1313) *
                C2229 -
            (C17374 * C2852 + C50938 * C2856 + C17373 * C1314 +
             C17368 * C1320) *
                C2226) *
               C50902 * C17371 +
           ((C18370 + C18371) * C2228 - (C17970 * C51078 + C17971 * C2227) +
            (C18372 + C18373) * C51079 -
            (C17374 * C2848 + C50938 * C2853 + C17373 * C1309 +
             C17368 * C1315) *
                C2229 -
            (C17374 * C2854 + C50938 * C2857 + C17373 * C1316 +
             C17368 * C1321) *
                C2226) *
               C50902 * C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C2227 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51078 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C2228 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C51079 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C2229 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C2226) *
              C50902 * C50752 * C51031 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C2228 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C51078 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C2227) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C51079 -
           (C20207 * C20996 + C20202 * C20997 + C20206 * C3844 +
            C20201 * C3846 + C20205 * C2846 + C20200 * C2849 + C20204 * C1307 +
            C20199 * C1311) *
               C2229 -
           (C20207 * C20998 + C20202 * C20999 + C20206 * C3847 +
            C20201 * C3850 + C20205 * C2850 + C20200 * C2855 + C20204 * C1312 +
            C20199 * C1319) *
               C2226) *
              C50902 * C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C293 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C1771 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C1768 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C1770) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C18366 + C18367) * C1771 -
            ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
            (C18368 + C18369) * C50869) *
               C50902 * C17371 +
           ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
            (C18372 + C18373) * C50869) *
               C50902 * C17372) *
              C294 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C1770 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C1768 -
            (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
             C17368 * C1658) *
                C1771 -
            (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
             C17368 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
            (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
             C17368 * C1660) *
                C1771 -
            (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
             C17368 * C1667) *
                C50869) *
               C50902 * C17371 +
           ((C17626 + C17627) * C1770 + (C17628 + C17629) * C1768 -
            (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
             C17368 * C1662) *
                C1771 -
            (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
             C17368 * C1668) *
                C50869) *
               C50902 * C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C50790 * C1119 +
          (((C17809 + C17808) * C1771 -
            ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
            (C17811 + C17810) * C50869) *
               C50902 * C17370 +
           ((C17817 + C17816) * C1771 -
            ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
            (C17819 + C17818) * C50869) *
               C50902 * C17371 +
           ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
            (C18151 + C18152) * C50869) *
               C50902 * C17372) *
              C50790 * C1120 +
          (C19403 * C17370 +
           ((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
            (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
               C50902 * C17371 +
           ((C17420 + C17421) * C1770 + (C17422 + C17423) * C1768 -
            (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                C1771 -
            (C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                C50869) *
               C50902 * C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
               C1964 +
           (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
               C1960 -
           (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
               C1965 -
           (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
               C1961 +
           (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
               C1966 +
           (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
               C1962 -
           (C17374 * C4737 + C50938 * C4741 + C17373 * C1968 + C17368 * C1972) *
               C1967 -
           (C17374 * C4743 + C50938 * C4749 + C17373 * C1973 + C17368 * C1980) *
               C1963) *
              C50902 * C17370 +
          ((C17408 + C17409) * C1964 + (C17410 + C17411) * C1960 -
           (C17808 + C17809) * C1965 - (C17810 + C17811) * C1961 +
           (C17812 + C17813) * C1966 + (C17814 + C17815) * C1962 -
           (C17374 * C4739 + C50938 * C4745 + C17373 * C1969 + C17368 * C1974) *
               C1967 -
           (C17374 * C4747 + C50938 * C4751 + C17373 * C1975 + C17368 * C1981) *
               C1963) *
              C50902 * C17371 +
          (C17424 * C1964 + C17425 * C1960 - C18136 * C1965 - C18137 * C1961 +
           (C17820 + C17821) * C1966 + (C17822 + C17823) * C1962 -
           (C17374 * C6241 + C50938 * C6242 + C17373 * C1970 + C17368 * C1976) *
               C1967 -
           (C17374 * C6243 + C50938 * C6244 + C17373 * C1977 + C17368 * C1982) *
               C1963) *
              C50902 * C17372) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C1119 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C1771 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C1768 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C1770) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C1120 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C1770 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C1768 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C1771 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C293 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C1771 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C1768 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C1770) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C294 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C1770 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C1768 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C1771 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
           C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
              C1964 +
          (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
           C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
              C1960 -
          (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
           C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
              C1965 -
          (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
           C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
              C1961 +
          (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
           C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
              C1966 +
          (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
           C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
              C1962 -
          (C20207 * C21592 + C20202 * C21593 + C20206 * C4736 + C20201 * C4740 +
           C20205 * C4737 + C20200 * C4741 + C20204 * C1968 + C20199 * C1972) *
              C1967 -
          (C20207 * C21594 + C20202 * C21595 + C20206 * C4742 + C20201 * C4748 +
           C20205 * C4743 + C20200 * C4749 + C20204 * C1973 + C20199 * C1980) *
              C1963) *
         C50902 * C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C2227 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C51078 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C2228 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C51079 +
            (C17373 * C491 + C17368 * C502 + C17374 * C1307 + C50938 * C1311) *
                C2229 +
            (C17373 * C503 + C17368 * C521 + C17374 * C1312 + C50938 * C1319) *
                C2226) *
               C50902 * C17370 +
           ((C17408 + C17409) * C2227 + (C17410 + C17411) * C51078 -
            (C17808 + C17809) * C2228 - (C17810 + C17811) * C51079 +
            (C17812 + C17813) * C2229 + (C17814 + C17815) * C2226) *
               C50902 * C17371 +
           (C17424 * C2227 + C17425 * C51078 - C18136 * C2228 -
            C18137 * C51079 + (C17820 + C17821) * C2229 +
            (C17822 + C17823) * C2226) *
               C50902 * C17372) *
              C50790 * C51023 +
          (((C17809 + C17808) * C2228 -
            ((C17411 + C17410) * C51078 + (C17409 + C17408) * C2227) +
            (C17811 + C17810) * C51079 - (C17813 + C17812) * C2229 -
            (C17815 + C17814) * C2226) *
               C50902 * C17370 +
           ((C17817 + C17816) * C2228 -
            ((C17415 + C17414) * C51078 + (C17413 + C17412) * C2227) +
            (C17819 + C17818) * C51079 - (C17821 + C17820) * C2229 -
            (C17823 + C17822) * C2226) *
               C50902 * C17371 +
           ((C18149 + C18150) * C2228 - (C17426 * C51078 + C17427 * C2227) +
            (C18151 + C18152) * C51079 -
            (C17374 * C1310 + C50938 * C1317 + C17373 * C497 + C17368 * C514) *
                C2229 -
            (C17374 * C1318 + C50938 * C1322 + C17373 * C515 + C17368 * C527) *
                C2226) *
               C50902 * C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C2227 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C51078 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C2228 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C51079 +
           (C20204 * C491 + C20199 * C502 + C20205 * C1307 + C20200 * C1311 +
            C20206 * C2846 + C20201 * C2849 + C20207 * C3844 + C20202 * C3846) *
               C2229 +
           (C20204 * C503 + C20199 * C521 + C20205 * C1312 + C20200 * C1319 +
            C20206 * C2850 + C20201 * C2855 + C20207 * C3847 + C20202 * C3850) *
               C2226) *
              C50902 * C50752 * C50790 * C51023 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C2228 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C51078 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C2227) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C51079 -
           (C20207 * C3845 + C20202 * C3848 + C20206 * C2847 + C20201 * C2851 +
            C20205 * C1308 + C20200 * C1313 + C20204 * C493 + C20199 * C506) *
               C2229 -
           (C20207 * C3849 + C20202 * C3851 + C20206 * C2852 + C20201 * C2856 +
            C20205 * C1314 + C20200 * C1320 + C20204 * C507 + C20199 * C523) *
               C2226) *
              C50902 * C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C50790 * C1119 +
          (((C17809 + C17808) * C1771 -
            ((C17411 + C17410) * C1768 + (C17409 + C17408) * C1770) +
            (C17811 + C17810) * C50869) *
               C50902 * C17370 +
           ((C17817 + C17816) * C1771 -
            ((C17415 + C17414) * C1768 + (C17413 + C17412) * C1770) +
            (C17819 + C17818) * C50869) *
               C50902 * C17371 +
           ((C18149 + C18150) * C1771 - (C17426 * C1768 + C17427 * C1770) +
            (C18151 + C18152) * C50869) *
               C50902 * C17372) *
              C50790 * C1120 +
          (C19403 * C17370 +
           ((C17419 + C17418) * C1770 + (C17417 + C17416) * C1768 -
            (C18150 + C18149) * C1771 - (C18152 + C18151) * C50869) *
               C50902 * C17371 +
           ((C17420 + C17421) * C1770 + (C17422 + C17423) * C1768 -
            (C17374 * C973 + C50938 * C982 + C17373 * C498 + C17368 * C516) *
                C1771 -
            (C17374 * C983 + C50938 * C988 + C17373 * C517 + C17368 * C528) *
                C50869) *
               C50902 * C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50938 * C315) *
                C1770 +
            (C17373 * C127 + C17368 * C140 + C17374 * C314 + C50938 * C331) *
                C1768 -
            (C17374 * C969 + C50938 * C974 + C17373 * C490 + C17368 * C500) *
                C1771 -
            (C17374 * C975 + C50938 * C984 + C17373 * C501 + C17368 * C520) *
                C50869) *
               C50902 * C17370 +
           ((C17408 + C17409) * C1770 + (C17410 + C17411) * C1768 -
            (C17808 + C17809) * C1771 - (C17810 + C17811) * C50869) *
               C50902 * C17371 +
           C19403 * C17372) *
              C293 +
          (((C17373 * C969 + C17368 * C974 + C17374 * C1654 + C50938 * C1658) *
                C1771 -
            ((C17374 * C317 + C50938 * C332 + C17373 * C314 + C17368 * C331) *
                 C1768 +
             (C17374 * C302 + C50938 * C316 + C17373 * C301 + C17368 * C315) *
                 C1770) +
            (C17373 * C975 + C17368 * C984 + C17374 * C1659 + C50938 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C18366 + C18367) * C1771 -
            ((C17618 + C17619) * C1768 + (C17620 + C17621) * C1770) +
            (C18368 + C18369) * C50869) *
               C50902 * C17371 +
           ((C18370 + C18371) * C1771 - (C17970 * C1768 + C17971 * C1770) +
            (C18372 + C18373) * C50869) *
               C50902 * C17372) *
              C294 +
          (((C17373 * C302 + C17368 * C316 + C17374 * C1196 + C50938 * C1204) *
                C1770 +
            (C17373 * C317 + C17368 * C332 + C17374 * C1203 + C50938 * C1208) *
                C1768 -
            (C17374 * C3416 + C50938 * C3419 + C17373 * C1654 +
             C17368 * C1658) *
                C1771 -
            (C17374 * C3420 + C50938 * C3425 + C17373 * C1659 +
             C17368 * C1666) *
                C50869) *
               C50902 * C17370 +
           ((C17622 + C17623) * C1770 + (C17624 + C17625) * C1768 -
            (C17374 * C3417 + C50938 * C3421 + C17373 * C1655 +
             C17368 * C1660) *
                C1771 -
            (C17374 * C3422 + C50938 * C3426 + C17373 * C1661 +
             C17368 * C1667) *
                C50869) *
               C50902 * C17371 +
           ((C17626 + C17627) * C1770 + (C17628 + C17629) * C1768 -
            (C17374 * C3418 + C50938 * C3423 + C17373 * C1656 +
             C17368 * C1662) *
                C1771 -
            (C17374 * C3424 + C50938 * C3427 + C17373 * C1663 +
             C17368 * C1668) *
                C50869) *
               C50902 * C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C50790 * C1119 +
          ((C20204 * C492 + C20199 * C504 + C20205 * C970 + C20200 * C976 +
            C20206 * C1655 + C20201 * C1660 + C20207 * C3417 + C20202 * C3421) *
               C1771 -
           ((C20207 * C1201 + C20202 * C1207 + C20206 * C319 + C20201 * C333 +
             C20205 * C312 + C20200 * C330 + C20204 * C129 + C20199 * C141) *
                C1768 +
            (C20207 * C1195 + C20202 * C1202 + C20206 * C303 + C20201 * C318 +
             C20205 * C300 + C20200 * C313 + C20204 * C120 + C20199 * C128) *
                C1770) +
           (C20204 * C505 + C20199 * C522 + C20205 * C977 + C20200 * C985 +
            C20206 * C1661 + C20201 * C1667 + C20207 * C3422 + C20202 * C3426) *
               C50869) *
              C50902 * C50752 * C50790 * C1120 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C311 +
            C20206 * C304 + C20201 * C320 + C20207 * C1194 + C20202 * C1200) *
               C1770 +
           (C20204 * C131 + C20199 * C142 + C20205 * C310 + C20200 * C329 +
            C20206 * C321 + C20201 * C334 + C20207 * C1199 + C20202 * C1206) *
               C1768 -
           (C20207 * C3418 + C20202 * C3423 + C20206 * C1656 + C20201 * C1662 +
            C20205 * C971 + C20200 * C978 + C20204 * C494 + C20199 * C508) *
               C1771 -
           (C20207 * C3424 + C20202 * C3427 + C20206 * C1663 + C20201 * C1668 +
            C20205 * C979 + C20200 * C986 + C20204 * C509 + C20199 * C524) *
               C50869) *
              C50902 * C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C315 +
            C20206 * C302 + C20201 * C316 + C20207 * C1196 + C20202 * C1204) *
               C1770 +
           (C20204 * C127 + C20199 * C140 + C20205 * C314 + C20200 * C331 +
            C20206 * C317 + C20201 * C332 + C20207 * C1203 + C20202 * C1208) *
               C1768 -
           (C20207 * C3416 + C20202 * C3419 + C20206 * C1654 + C20201 * C1658 +
            C20205 * C969 + C20200 * C974 + C20204 * C490 + C20199 * C500) *
               C1771 -
           (C20207 * C3420 + C20202 * C3425 + C20206 * C1659 + C20201 * C1666 +
            C20205 * C975 + C20200 * C984 + C20204 * C501 + C20199 * C520) *
               C50869) *
              C50902 * C50752 * C293 +
          ((C20204 * C969 + C20199 * C974 + C20205 * C1654 + C20200 * C1658 +
            C20206 * C3416 + C20201 * C3419 + C20207 * C4338 + C20202 * C4340) *
               C1771 -
           ((C20207 * C2656 + C20202 * C2661 + C20206 * C1203 + C20201 * C1208 +
             C20205 * C317 + C20200 * C332 + C20204 * C314 + C20199 * C331) *
                C1768 +
            (C20207 * C2652 + C20202 * C2655 + C20206 * C1196 + C20201 * C1204 +
             C20205 * C302 + C20200 * C316 + C20204 * C301 + C20199 * C315) *
                C1770) +
           (C20204 * C975 + C20199 * C984 + C20205 * C1659 + C20200 * C1666 +
            C20206 * C3420 + C20201 * C3425 + C20207 * C4341 + C20202 * C4344) *
               C50869) *
              C50902 * C50752 * C294 +
          ((C20204 * C302 + C20199 * C316 + C20205 * C1196 + C20200 * C1204 +
            C20206 * C2652 + C20201 * C2655 + C20207 * C3691 + C20202 * C3695) *
               C1770 +
           (C20204 * C317 + C20199 * C332 + C20205 * C1203 + C20200 * C1208 +
            C20206 * C2656 + C20201 * C2661 + C20207 * C3694 + C20202 * C3697) *
               C1768 -
           (C20207 * C21326 + C20202 * C21327 + C20206 * C4338 +
            C20201 * C4340 + C20205 * C3416 + C20200 * C3419 + C20204 * C1654 +
            C20199 * C1658) *
               C1771 -
           (C20207 * C21328 + C20202 * C21329 + C20206 * C4341 +
            C20201 * C4344 + C20205 * C3420 + C20200 * C3425 + C20204 * C1659 +
            C20199 * C1666) *
               C50869) *
              C50902 * C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C51031 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C50841) *
              C51074 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C51031) *
              C51075 +
          (((C8261 * C33864 + (C14619 * C118 + C14620 * C50805) * C50966) *
                C51016 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C33864 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C51031 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C33864) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C33864) *
                C51016) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C803 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C51032 -
              (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                 C33864 +
             ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
              (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                 C50966) *
                C51016 +
            (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
              C14203 * C804 - C14204 * C50869) *
                 C33864 +
             (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C14899 + C14900) * C804 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C51032 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C803) +
              (C14901 + C14902) * C50869) *
                 C33864 +
             ((C15434 + C15433) * C804 -
              ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
              (C15436 + C15435) * C50869) *
                 C50966) *
                C51016 +
            ((C14887 * C804 -
              ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
              C14888 * C50869) *
                 C33864 +
             ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C296 +
          ((((C14207 * C804 -
              ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
              C14208 * C50869) *
                 C33864 +
             (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
              C14206 * C50869) *
                 C50966) *
                C51016 +
            ((C14619 * C804 -
              ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
              C14620 * C50869) *
                 C33864 +
             ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
              C14894 * C804 - C14893 * C50869) *
                 C33864 +
             (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C51016 +
            (((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
              (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                 C33864 +
             ((C9199 + C9200) * C803 + (C9201 + C9202) * C51032 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C804 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C293 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C294 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C33864 +
             ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C50966) *
                C51016 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C33864 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C293 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C33864) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C33864) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C33864 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C51016 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C8966 * C50805 + C8965 * C118) * C50966 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
               C50757 +
           ((C14204 * C50805 + C14203 * C118) * C50966 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
               C51016) *
              C50790 * C114 +
          ((C8261 * C33864 + (C14619 * C118 + C14620 * C50805) * C50966) *
               C51016 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C33864 +
            ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                 C50805 +
             (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                 C118) *
                C50966 +
            ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C33864) *
               C50757 +
           (((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C50966 +
            C8262 * C33864) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C487 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C484 -
             (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
             (C14223 + C14224) * C489 + (C14225 + C14226) * C486) *
                C33864 +
            ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
             (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
             (C16622 + C16621) * C489 + (C16624 + C16623) * C486) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C487 + (C8239 + C8240) * C484 - C14203 * C488 -
             C14204 * C485 + C14205 * C489 + C14206 * C486) *
                C33864 +
            (C14207 * C487 + C14208 * C484 - C14209 * C488 - C14210 * C485 +
             (C14227 + C14228) * C489 + (C14229 + C14230) * C486) *
                C50966) *
               C50757) *
              C50790 * C296 +
          (((C14207 * C488 - ((C8240 + C8239) * C484 + (C8238 + C8237) * C487) +
             C14208 * C485 - C14209 * C489 - C14210 * C486) *
                C33864 +
            (C14205 * C488 - (C14204 * C484 + C14203 * C487) + C14206 * C485 -
             (C14228 + C14227) * C489 - (C14230 + C14229) * C486) *
                C50966) *
               C51016 +
           ((C14619 * C488 - ((C8244 + C8243) * C484 + (C8242 + C8241) * C487) +
             C14620 * C485 - (C8650 + C8649) * C489 - (C8652 + C8651) * C486) *
                C33864 +
            ((C8649 + C8650) * C488 - (C8966 * C484 + C8965 * C487) +
             (C8651 + C8652) * C485 -
             (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                 C489 -
             (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                 C486) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 - C14203 * C804 -
             C14204 * C50869) *
                C33864 +
            (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C51074 +
          (((C14207 * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             C14208 * C50869) *
                C33864 +
            (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
             C14206 * C50869) *
                C50966) *
               C51016 +
           ((C14619 * C804 -
             ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
             C14620 * C50869) *
                C33864 +
            ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C51075 +
          ((C8983 * C33864 +
            (C14619 * C803 + C14620 * C51032 - (C8650 + C8649) * C804 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C51016 +
           (((C8248 + C8247) * C803 + (C8246 + C8245) * C51032 -
             (C8979 + C8978) * C804 - (C8981 + C8980) * C50869) *
                C33864 +
            ((C8978 + C8979) * C803 + (C8980 + C8981) * C51032 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C804 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C33864 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C51016 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C50790 * C113 -
          (((C8966 * C50805 + C8965 * C118) * C50966 +
            ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
               C50757 +
           ((C14204 * C50805 + C14203 * C118) * C50966 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
               C51016) *
              C50790 * C114 +
          ((C8261 * C33864 + (C14619 * C118 + C14620 * C50805) * C50966) *
               C51016 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C33864 +
            ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
               C50757) *
              C50790 * C115 -
          ((((C8203 * C983 + C50938 * C988 + C8202 * C517 + C51044 * C528) *
                 C50805 +
             (C8203 * C973 + C50938 * C982 + C8202 * C498 + C51044 * C516) *
                 C118) *
                C50966 +
            ((C8252 + C8251) * C50805 + (C8250 + C8249) * C118) * C33864) *
               C50757 +
           (((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C50966 +
            C8262 * C33864) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C293 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C294 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C33864 +
             ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C50966) *
                C51016 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C33864 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C295) *
              C296 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C294 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C293 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C33864) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C33864) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C51076 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C51077 +
           ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                  C118 +
              (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                  C50805) *
                 C33864 +
             ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C50966) *
                C51016 +
            (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C33864 +
             ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
                C50757) *
               C1423) *
              C51023 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C51077 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C51076 -
           ((((C8203 * C3424 + C50938 * C3427 + C8202 * C1663 +
               C51044 * C1668) *
                  C50805 +
              (C8203 * C3418 + C50938 * C3423 + C8202 * C1656 +
               C51044 * C1662) *
                  C118) *
                 C50966 +
             ((C8458 + C8457) * C50805 + (C8456 + C8455) * C118) * C33864) *
                C50757 +
            (((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C50966 +
             ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C33864) *
                C51016) *
               C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 - C14203 * C804 -
             C14204 * C50869) *
                C33864 +
            (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C51076 +
          ((((C14899 + C14900) * C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C14901 + C14902) * C50869) *
                C33864 +
            ((C15434 + C15433) * C804 -
             ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C51016 +
           ((C14887 * C804 -
             ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
             C14888 * C50869) *
                C33864 +
            ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C51077 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C803 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C51032 -
             (C16091 + C16092) * C804 - (C16093 + C16094) * C50869) *
                C33864 +
            ((C16092 + C16091) * C803 + (C16094 + C16093) * C51032 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C804 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C51016 +
           (((C8451 + C8452) * C803 + (C8453 + C8454) * C51032 -
             (C13990 + C13989) * C804 - (C13992 + C13991) * C50869) *
                C33864 +
            ((C13989 + C13990) * C803 + (C13991 + C13992) * C51032 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C804 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C33864 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C51016 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C14893 * C50805 + C14894 * C118) * C50966 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
               C50757 +
           (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C33864) *
               C51016) *
              C1189 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C33864 +
            ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C50966) *
               C51016 +
           (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C33864 +
            ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C8203 * C4343 + C50938 * C4345 + C8202 * C3422 + C51044 * C3426) *
                 C50805 +
             (C8203 * C4339 + C50938 * C4342 + C8202 * C3417 + C51044 * C3421) *
                 C118) *
                C50966 +
            ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                 C50805 +
             (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                 C118) *
                C33864) *
               C50757 +
           (((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                 C50805 +
             (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                 C118) *
                C50966 +
            ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                 C50805 +
             (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                 C118) *
                C33864) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C50841) *
              C1119 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C1117) *
              C1120 +
          (((C8261 * C33864 + (C14619 * C118 + C14620 * C50805) * C50966) *
                C51016 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C33864 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C33864) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C33864) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C487 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C484 -
             (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
             (C14223 + C14224) * C489 + (C14225 + C14226) * C486) *
                C33864 +
            ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
             (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
             (C16622 + C16621) * C489 + (C16624 + C16623) * C486) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C487 + (C8239 + C8240) * C484 - C14203 * C488 -
             C14204 * C485 + C14205 * C489 + C14206 * C486) *
                C33864 +
            (C14207 * C487 + C14208 * C484 - C14209 * C488 - C14210 * C485 +
             (C14227 + C14228) * C489 + (C14229 + C14230) * C486) *
                C50966) *
               C50757) *
              C1117 +
          ((((C14899 + C14900) * C488 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C484 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C487) +
             (C14901 + C14902) * C485 - (C15433 + C15434) * C489 -
             (C15435 + C15436) * C486) *
                C33864 +
            ((C15434 + C15433) * C488 -
             ((C14902 + C14901) * C484 + (C14900 + C14899) * C487) +
             (C15436 + C15435) * C485 -
             (C8203 * C4736 + C50938 * C4740 + C8202 * C4737 + C51044 * C4741) *
                 C489 -
             (C8203 * C4742 + C50938 * C4748 + C8202 * C4743 + C51044 * C4749) *
                 C486) *
                C50966) *
               C51016 +
           ((C14887 * C488 - ((C8447 + C8448) * C484 + (C8449 + C8450) * C487) +
             C14888 * C485 - (C14904 + C14903) * C489 -
             (C14906 + C14905) * C486) *
                C33864 +
            ((C14903 + C14904) * C488 - (C14893 * C484 + C14894 * C487) +
             (C14905 + C14906) * C485 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C489 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C486) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C803 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C51032 -
              (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                 C33864 +
             ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
              (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                 C50966) *
                C51016 +
            (((C8237 + C8238) * C803 + (C8239 + C8240) * C51032 -
              C14203 * C804 - C14204 * C50869) *
                 C33864 +
             (C14207 * C803 + C14208 * C51032 - C14209 * C804 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C14899 + C14900) * C804 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C51032 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C803) +
              (C14901 + C14902) * C50869) *
                 C33864 +
             ((C15434 + C15433) * C804 -
              ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
              (C15436 + C15435) * C50869) *
                 C50966) *
                C51016 +
            ((C14887 * C804 -
              ((C8447 + C8448) * C51032 + (C8449 + C8450) * C803) +
              C14888 * C50869) *
                 C33864 +
             ((C14903 + C14904) * C804 - (C14893 * C51032 + C14894 * C803) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C14207 * C804 -
              ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
              C14208 * C50869) *
                 C33864 +
             (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
              C14206 * C50869) *
                 C50966) *
                C51016 +
            ((C14619 * C804 -
              ((C8244 + C8243) * C51032 + (C8242 + C8241) * C803) +
              C14620 * C50869) *
                 C33864 +
             ((C8649 + C8650) * C804 - (C8966 * C51032 + C8965 * C803) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C1117 +
           ((((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 -
              C14894 * C804 - C14893 * C50869) *
                 C33864 +
             (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C51016 +
            (((C8446 + C8445) * C803 + (C8444 + C8443) * C51032 -
              (C9200 + C9199) * C804 - (C9202 + C9201) * C50869) *
                 C33864 +
             ((C9199 + C9200) * C803 + (C9201 + C9202) * C51032 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C804 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C118 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C50805) *
                 C33864 +
             ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
                C51016 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
             (C14207 * C118 + C14208 * C50805) * C50966) *
                C50757) *
               C1117 -
           (((C14893 * C50805 + C14894 * C118) * C50966 +
             ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
                C50757 +
            (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C50805 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C118) *
                 C33864) *
                C51016) *
               C50841) *
              C1119 +
          (((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C33864 +
             (C14887 * C118 + C14888 * C50805) * C50966) *
                C51016 +
            (((C8446 + C8445) * C118 + (C8444 + C8443) * C50805) * C33864 +
             ((C9199 + C9200) * C118 + (C9201 + C9202) * C50805) * C50966) *
                C50757) *
               C50841 -
           (((C8966 * C50805 + C8965 * C118) * C50966 +
             ((C8244 + C8243) * C50805 + (C8242 + C8241) * C118) * C33864) *
                C50757 +
            ((C14204 * C50805 + C14203 * C118) * C50966 +
             ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C33864) *
                C51016) *
               C1117) *
              C1120 +
          (((C8261 * C33864 + (C14619 * C118 + C14620 * C50805) * C50966) *
                C51016 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50805) * C33864 +
             ((C8978 + C8979) * C118 + (C8980 + C8981) * C50805) * C50966) *
                C50757) *
               C1117 -
           ((((C8203 * C1665 + C50938 * C1669 + C8202 * C981 + C51044 * C987) *
                  C50805 +
              (C8203 * C1657 + C50938 * C1664 + C8202 * C972 + C51044 * C980) *
                  C118) *
                 C50966 +
             ((C8814 + C8813) * C50805 + (C8812 + C8811) * C118) * C33864) *
                C50757 +
            (((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C50966 +
             C8815 * C33864) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C33864 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C50966) *
               C51016 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50805) * C33864 +
            (C14207 * C118 + C14208 * C50805) * C50966) *
               C50757) *
              C1188 -
          (((C14893 * C50805 + C14894 * C118) * C50966 +
            ((C8447 + C8448) * C50805 + (C8449 + C8450) * C118) * C33864) *
               C50757 +
           (((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C50966 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C33864) *
               C51016) *
              C1189 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C33864 +
            ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C50966) *
               C51016 +
           (((C8451 + C8452) * C118 + (C8453 + C8454) * C50805) * C33864 +
            ((C13989 + C13990) * C118 + (C13991 + C13992) * C50805) * C50966) *
               C50757) *
              C1190 -
          ((((C8203 * C4343 + C50938 * C4345 + C8202 * C3422 + C51044 * C3426) *
                 C50805 +
             (C8203 * C4339 + C50938 * C4342 + C8202 * C3417 + C51044 * C3421) *
                 C118) *
                C50966 +
            ((C8203 * C2658 + C50938 * C2662 + C8202 * C1201 + C51044 * C1207) *
                 C50805 +
             (C8203 * C2653 + C50938 * C2657 + C8202 * C1195 + C51044 * C1202) *
                 C118) *
                C33864) *
               C50757 +
           (((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                 C50805 +
             (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                 C118) *
                C50966 +
            ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                 C50805 +
             (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                 C118) *
                C33864) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                  C1770 +
              (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                  C1768 -
              (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                 C33864 +
             ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
              (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                 C50966) *
                C51016 +
            (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
              C14203 * C1771 - C14204 * C50869) *
                 C33864 +
             (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
              C14210 * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C14899 + C14900) * C1771 -
              ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                   C1768 +
               (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                   C1770) +
              (C14901 + C14902) * C50869) *
                 C33864 +
             ((C15434 + C15433) * C1771 -
              ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
              (C15436 + C15435) * C50869) *
                 C50966) *
                C51016 +
            ((C14887 * C1771 -
              ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
              C14888 * C50869) *
                 C33864 +
             ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
              (C14905 + C14906) * C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C51023 +
          ((((C14207 * C1771 -
              ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
              C14208 * C50869) *
                 C33864 +
             (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
              C14206 * C50869) *
                 C50966) *
                C51016 +
            ((C14619 * C1771 -
              ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
              C14620 * C50869) *
                 C33864 +
             ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
              (C8651 + C8652) * C50869) *
                 C50966) *
                C50757) *
               C51031 +
           ((((C8450 + C8449) * C1770 + (C8448 + C8447) * C1768 -
              C14894 * C1771 - C14893 * C50869) *
                 C33864 +
             (C14887 * C1770 + C14888 * C1768 - (C14904 + C14903) * C1771 -
              (C14906 + C14905) * C50869) *
                 C50966) *
                C51016 +
            (((C8446 + C8445) * C1770 + (C8444 + C8443) * C1768 -
              (C9200 + C9199) * C1771 - (C9202 + C9201) * C50869) *
                 C33864 +
             ((C9199 + C9200) * C1770 + (C9201 + C9202) * C1768 -
              (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 +
               C51044 * C1315) *
                  C1771 -
              (C8203 * C2854 + C50938 * C2857 + C8202 * C1316 +
               C51044 * C1321) *
                  C50869) *
                 C50966) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C2227 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51078 -
             (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
             (C14223 + C14224) * C2229 + (C14225 + C14226) * C2226) *
                C33864 +
            ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
             (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
             (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
             C14203 * C2228 - C14204 * C51079 + C14205 * C2229 +
             C14206 * C2226) *
                C33864 +
            (C14207 * C2227 + C14208 * C51078 - C14209 * C2228 -
             C14210 * C51079 + (C14227 + C14228) * C2229 +
             (C14229 + C14230) * C2226) *
                C50966) *
               C50757) *
              C51031 +
          ((((C14899 + C14900) * C2228 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51078 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C2227) +
             (C14901 + C14902) * C51079 - (C15433 + C15434) * C2229 -
             (C15435 + C15436) * C2226) *
                C33864 +
            ((C15434 + C15433) * C2228 -
             ((C14902 + C14901) * C51078 + (C14900 + C14899) * C2227) +
             (C15436 + C15435) * C51079 -
             (C8203 * C4736 + C50938 * C4740 + C8202 * C4737 + C51044 * C4741) *
                 C2229 -
             (C8203 * C4742 + C50938 * C4748 + C8202 * C4743 + C51044 * C4749) *
                 C2226) *
                C50966) *
               C51016 +
           ((C14887 * C2228 -
             ((C8447 + C8448) * C51078 + (C8449 + C8450) * C2227) +
             C14888 * C51079 - (C14904 + C14903) * C2229 -
             (C14906 + C14905) * C2226) *
                C33864 +
            ((C14903 + C14904) * C2228 - (C14893 * C51078 + C14894 * C2227) +
             (C14905 + C14906) * C51079 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C2229 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C2226) *
                C50966) *
               C50757) *
              C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C33864 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C14899 + C14900) * C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C14901 + C14902) * C50869) *
                C33864 +
            ((C15434 + C15433) * C1771 -
             ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C51016 +
           ((C14887 * C1771 -
             ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
             C14888 * C50869) *
                C33864 +
            ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C1770 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C1768 -
             (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
                C33864 +
            ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C1771 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C51016 +
           (((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
             (C13990 + C13989) * C1771 - (C13992 + C13991) * C50869) *
                C33864 +
            ((C13989 + C13990) * C1770 + (C13991 + C13992) * C1768 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C1771 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C33864 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C14207 * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             C14208 * C50869) *
                C33864 +
            (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
             C14206 * C50869) *
                C50966) *
               C51016 +
           ((C14619 * C1771 -
             ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
             C14620 * C50869) *
                C33864 +
            ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C10231 * C33864 +
            (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C51016 +
           (((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
             (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
                C33864 +
            ((C8978 + C8979) * C1770 + (C8980 + C8981) * C1768 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C1771 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1964 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1960 -
            (C14219 + C14220) * C1965 - (C14221 + C14222) * C1961 +
            (C14223 + C14224) * C1966 + (C14225 + C14226) * C1962 -
            (C16621 + C16622) * C1967 - (C16623 + C16624) * C1963) *
               C33864 +
           ((C14220 + C14219) * C1964 + (C14222 + C14221) * C1960 -
            (C14224 + C14223) * C1965 - (C14226 + C14225) * C1961 +
            (C16622 + C16621) * C1966 + (C16624 + C16623) * C1962 -
            (C8203 * C6661 + C50938 * C6663 + C8202 * C5669 + C51044 * C5672) *
                C1967 -
            (C8203 * C6664 + C50938 * C6667 + C8202 * C5673 + C51044 * C5678) *
                C1963) *
               C50966) *
              C51016 +
          (((C8237 + C8238) * C1964 + (C8239 + C8240) * C1960 - C14203 * C1965 -
            C14204 * C1961 + C14205 * C1966 + C14206 * C1962 -
            (C14228 + C14227) * C1967 - (C14230 + C14229) * C1963) *
               C33864 +
           (C14207 * C1964 + C14208 * C1960 - C14209 * C1965 - C14210 * C1961 +
            (C14227 + C14228) * C1966 + (C14229 + C14230) * C1962 -
            (C8203 * C6662 + C50938 * C6665 + C8202 * C5670 + C51044 * C5674) *
                C1967 -
            (C8203 * C6666 + C50938 * C6668 + C8202 * C5675 + C51044 * C5679) *
                C1963) *
               C50966) *
              C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C2227 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51078 -
             (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
             (C14223 + C14224) * C2229 + (C14225 + C14226) * C2226) *
                C33864 +
            ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
             (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
             (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C2227 + (C8239 + C8240) * C51078 -
             C14203 * C2228 - C14204 * C51079 + C14205 * C2229 +
             C14206 * C2226) *
                C33864 +
            (C14207 * C2227 + C14208 * C51078 - C14209 * C2228 -
             C14210 * C51079 + (C14227 + C14228) * C2229 +
             (C14229 + C14230) * C2226) *
                C50966) *
               C50757) *
              C50790 * C51023 +
          (((C14207 * C2228 -
             ((C8240 + C8239) * C51078 + (C8238 + C8237) * C2227) +
             C14208 * C51079 - C14209 * C2229 - C14210 * C2226) *
                C33864 +
            (C14205 * C2228 - (C14204 * C51078 + C14203 * C2227) +
             C14206 * C51079 - (C14228 + C14227) * C2229 -
             (C14230 + C14229) * C2226) *
                C50966) *
               C51016 +
           ((C14619 * C2228 -
             ((C8244 + C8243) * C51078 + (C8242 + C8241) * C2227) +
             C14620 * C51079 - (C8650 + C8649) * C2229 -
             (C8652 + C8651) * C2226) *
                C33864 +
            ((C8649 + C8650) * C2228 - (C8966 * C51078 + C8965 * C2227) +
             (C8651 + C8652) * C51079 -
             (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                 C2229 -
             (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                 C2226) *
                C50966) *
               C50757) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C33864 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C50790 * C1119 +
          (((C14207 * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             C14208 * C50869) *
                C33864 +
            (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
             C14206 * C50869) *
                C50966) *
               C51016 +
           ((C14619 * C1771 -
             ((C8244 + C8243) * C1768 + (C8242 + C8241) * C1770) +
             C14620 * C50869) *
                C33864 +
            ((C8649 + C8650) * C1771 - (C8966 * C1768 + C8965 * C1770) +
             (C8651 + C8652) * C50869) *
                C50966) *
               C50757) *
              C50790 * C1120 +
          ((C10231 * C33864 +
            (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
             (C8652 + C8651) * C50869) *
                C50966) *
               C51016 +
           (((C8248 + C8247) * C1770 + (C8246 + C8245) * C1768 -
             (C8979 + C8978) * C1771 - (C8981 + C8980) * C50869) *
                C33864 +
            ((C8978 + C8979) * C1770 + (C8980 + C8981) * C1768 -
             (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                 C1771 -
             (C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                 C50869) *
                C50966) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C33864 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C50966) *
               C51016 +
           (((C8237 + C8238) * C1770 + (C8239 + C8240) * C1768 -
             C14203 * C1771 - C14204 * C50869) *
                C33864 +
            (C14207 * C1770 + C14208 * C1768 - C14209 * C1771 -
             C14210 * C50869) *
                C50966) *
               C50757) *
              C293 +
          ((((C14899 + C14900) * C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C14901 + C14902) * C50869) *
                C33864 +
            ((C15434 + C15433) * C1771 -
             ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
             (C15436 + C15435) * C50869) *
                C50966) *
               C51016 +
           ((C14887 * C1771 -
             ((C8447 + C8448) * C1768 + (C8449 + C8450) * C1770) +
             C14888 * C50869) *
                C33864 +
            ((C14903 + C14904) * C1771 - (C14893 * C1768 + C14894 * C1770) +
             (C14905 + C14906) * C50869) *
                C50966) *
               C50757) *
              C294 +
          ((((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C1770 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C1768 -
             (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
                C33864 +
            ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
             (C8203 * C3844 + C50938 * C3846 + C8202 * C2846 + C51044 * C2849) *
                 C1771 -
             (C8203 * C3847 + C50938 * C3850 + C8202 * C2850 + C51044 * C2855) *
                 C50869) *
                C50966) *
               C51016 +
           (((C8451 + C8452) * C1770 + (C8453 + C8454) * C1768 -
             (C13990 + C13989) * C1771 - (C13992 + C13991) * C50869) *
                C33864 +
            ((C13989 + C13990) * C1770 + (C13991 + C13992) * C1768 -
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C1771 -
             (C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50869) *
                C50966) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            (C47451 * C118 + C47452 * C50805) * C44529) *
               C50752 * C51031 -
           (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C50841) *
              C51074 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C50841 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C51031) *
              C51075 +
          ((C8261 * C51082 + (C14619 * C118 + C14620 * C50805) * C51083 +
            ((C8649 + C8650) * C118 + (C8651 + C8652) * C50805) * C44529) *
               C50752 * C51031 -
           (((C8203 * C2854 + C50938 * C2857 + C8202 * C1316 + C51044 * C1321) *
                 C50805 +
             (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 + C51044 * C1315) *
                 C118) *
                C44529 +
            ((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C51083 +
            C8815 * C51082) *
               C50752 * C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C51082 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C51083 +
            (C47451 * C803 + C47452 * C51032 - (C16621 + C16622) * C804 -
             (C16623 + C16624) * C50869) *
                C44529) *
               C50752 * C51031 +
           (((C14899 + C14900) * C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C14901 + C14902) * C50869) *
                C51082 +
            ((C15434 + C15433) * C804 -
             ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
             (C15436 + C15435) * C50869) *
                C51083 +
            ((C8202 * C4737 + C51044 * C4741 + C8203 * C4736 + C50938 * C4740) *
                 C804 -
             ((C15435 + C15436) * C51032 + (C15433 + C15434) * C803) +
             (C8202 * C4743 + C51044 * C4749 + C8203 * C4742 + C50938 * C4748) *
                 C50869) *
                C44529) *
               C50752 * C50841) *
              C296 +
          (((C14207 * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             C14208 * C50869) *
                C51082 +
            (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
             C14206 * C50869) *
                C51083 +
            ((C14227 + C14228) * C804 - (C14210 * C51032 + C14209 * C803) +
             (C14229 + C14230) * C50869) *
                C44529) *
               C50752 * C51031 +
           (((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 - C14894 * C804 -
             C14893 * C50869) *
                C51082 +
            (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
             (C14906 + C14905) * C50869) *
                C51083 +
            ((C14903 + C14904) * C803 + (C14905 + C14906) * C51032 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C804 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C50869) *
                C44529) *
               C50752 * C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            ((C14223 + C14224) * C118 + (C14225 + C14226) * C50805) * C44529) *
               C50752 * C293 -
           (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C294 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C51082 +
            ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C51083 +
            ((C8202 * C2846 + C51044 * C2849 + C8203 * C3844 + C50938 * C3846) *
                 C118 +
             (C8202 * C2850 + C51044 * C2855 + C8203 * C3847 + C50938 * C3850) *
                 C50805) *
                C44529) *
               C50752 * C295) *
              C296 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C294 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C293 -
           (((C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50805 +
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C118) *
                C44529 +
            ((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C51083 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51082) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C51082 +
           ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
           ((C14223 + C14224) * C118 + (C14225 + C14226) * C50805) * C44529) *
              C50752 * C50790 * C113 -
          ((C14210 * C50805 + C14209 * C118) * C44529 +
           (C14204 * C50805 + C14203 * C118) * C51083 +
           ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
              C50752 * C50790 * C114 +
          (C8261 * C51082 + (C14619 * C118 + C14620 * C50805) * C51083 +
           ((C8649 + C8650) * C118 + (C8651 + C8652) * C50805) * C44529) *
              C50752 * C50790 * C115 -
          (((C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                C50805 +
            (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                C118) *
               C44529 +
           ((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C51083 +
           C8262 * C51082) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C487 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C484 -
            (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
            C47451 * C489 + C47452 * C486) *
               C51082 +
           ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
            (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
            (C16622 + C16621) * C489 + (C16624 + C16623) * C486) *
               C51083 +
           (C47451 * C487 + C47452 * C484 - (C16621 + C16622) * C488 -
            (C16623 + C16624) * C485 +
            (C8202 * C5669 + C51044 * C5672 + C8203 * C6661 + C50938 * C6663) *
                C489 +
            (C8202 * C5673 + C51044 * C5678 + C8203 * C6664 + C50938 * C6667) *
                C486) *
               C44529) *
              C50752 * C50790 * C296 +
          ((C14207 * C488 - ((C8240 + C8239) * C484 + (C8238 + C8237) * C487) +
            C14208 * C485 - C14209 * C489 - C14210 * C486) *
               C51082 +
           (C14205 * C488 - (C14204 * C484 + C14203 * C487) + C14206 * C485 -
            (C14228 + C14227) * C489 - (C14230 + C14229) * C486) *
               C51083 +
           ((C14227 + C14228) * C488 - (C14210 * C484 + C14209 * C487) +
            (C14229 + C14230) * C485 -
            (C8203 * C6662 + C50938 * C6665 + C8202 * C5670 + C51044 * C5674) *
                C489 -
            (C8203 * C6666 + C50938 * C6668 + C8202 * C5675 + C51044 * C5679) *
                C486) *
               C44529) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C803 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51032 -
            (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
            (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C803 + C47452 * C51032 - (C16621 + C16622) * C804 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C50790 * C51074 +
          ((C14207 * C804 -
            ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
            C14208 * C50869) *
               C51082 +
           (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
            C14206 * C50869) *
               C51083 +
           ((C14227 + C14228) * C804 - (C14210 * C51032 + C14209 * C803) +
            (C14229 + C14230) * C50869) *
               C44529) *
              C50752 * C50790 * C51075 +
          (C8983 * C51082 +
           (C14619 * C803 + C14620 * C51032 - (C8650 + C8649) * C804 -
            (C8652 + C8651) * C50869) *
               C51083 +
           ((C8649 + C8650) * C803 + (C8651 + C8652) * C51032 -
            (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                C804 -
            (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                C50869) *
               C44529) *
              C50752 * C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C51082 +
           ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
           ((C14223 + C14224) * C118 + (C14225 + C14226) * C50805) * C44529) *
              C50752 * C50790 * C113 -
          ((C14210 * C50805 + C14209 * C118) * C44529 +
           (C14204 * C50805 + C14203 * C118) * C51083 +
           ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
              C50752 * C50790 * C114 +
          (C8261 * C51082 + (C14619 * C118 + C14620 * C50805) * C51083 +
           ((C8649 + C8650) * C118 + (C8651 + C8652) * C50805) * C44529) *
              C50752 * C50790 * C115 -
          (((C8203 * C1318 + C50938 * C1322 + C8202 * C515 + C51044 * C527) *
                C50805 +
            (C8203 * C1310 + C50938 * C1317 + C8202 * C497 + C51044 * C514) *
                C118) *
               C44529 +
           ((C8981 + C8980) * C50805 + (C8979 + C8978) * C118) * C51083 +
           C8262 * C51082) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            ((C14223 + C14224) * C118 + (C14225 + C14226) * C50805) * C44529) *
               C50752 * C293 -
           (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C294 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C51082 +
            ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C51083 +
            ((C8202 * C2846 + C51044 * C2849 + C8203 * C3844 + C50938 * C3846) *
                 C118 +
             (C8202 * C2850 + C51044 * C2855 + C8203 * C3847 + C50938 * C3850) *
                 C50805) *
                C44529) *
               C50752 * C295) *
              C296 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C294 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C293 -
           (((C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50805 +
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C118) *
                C44529 +
            ((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C51083 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51082) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            (C47451 * C118 + C47452 * C50805) * C44529) *
               C50752 * C51076 -
           ((C48330 * C50805 + C48329 * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C51077 +
           (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                 C118 +
             (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                 C50805) *
                C51082 +
            ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C51083 +
            ((C8202 * C2846 + C51044 * C2849 + C8203 * C3844 + C50938 * C3846) *
                 C118 +
             (C8202 * C2850 + C51044 * C2855 + C8203 * C3847 + C50938 * C3850) *
                 C50805) *
                C44529) *
               C50752 * C1423) *
              C51023 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C51077 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C51076 -
           (((C8203 * C3849 + C50938 * C3851 + C8202 * C2852 + C51044 * C2856) *
                 C50805 +
             (C8203 * C3845 + C50938 * C3848 + C8202 * C2847 + C51044 * C2851) *
                 C118) *
                C44529 +
            ((C13992 + C13991) * C50805 + (C13990 + C13989) * C118) * C51083 +
            ((C8454 + C8453) * C50805 + (C8452 + C8451) * C118) * C51082) *
               C50752 * C1423) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C803 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51032 -
            (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
            (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C803 + C47452 * C51032 - (C16621 + C16622) * C804 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C51076 +
          (((C14899 + C14900) * C804 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C51032 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C803) +
            (C14901 + C14902) * C50869) *
               C51082 +
           ((C15434 + C15433) * C804 -
            ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
            (C15436 + C15435) * C50869) *
               C51083 +
           ((C48340 + C48339) * C804 - (C48330 * C51032 + C48329 * C803) +
            (C48342 + C48341) * C50869) *
               C44529) *
              C50752 * C51077 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C803 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C51032 -
            (C16091 + C16092) * C804 - (C16093 + C16094) * C50869) *
               C51082 +
           ((C16092 + C16091) * C803 + (C16094 + C16093) * C51032 -
            (C48837 + C48838) * C804 - (C48839 + C48840) * C50869) *
               C51083 +
           ((C48838 + C48837) * C803 + (C48840 + C48839) * C51032 -
            (C8203 * C21592 + C50938 * C21593 + C8202 * C4736 +
             C51044 * C4740) *
                C804 -
            (C8203 * C21594 + C50938 * C21595 + C8202 * C4742 +
             C51044 * C4748) *
                C50869) *
               C44529) *
              C50752 * C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C51082 +
           ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
           (C47451 * C118 + C47452 * C50805) * C44529) *
              C50752 * C1188 -
          (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
           ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
           ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                C50805 +
            (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                C118) *
               C51082) *
              C50752 * C1189 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C118 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C50805) *
               C51082 +
           ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C51083 +
           ((C8202 * C2846 + C51044 * C2849 + C8203 * C3844 + C50938 * C3846) *
                C118 +
            (C8202 * C2850 + C51044 * C2855 + C8203 * C3847 + C50938 * C3850) *
                C50805) *
               C44529) *
              C50752 * C1190 -
          (((C8203 * C20998 + C50938 * C20999 + C8202 * C3847 +
             C51044 * C3850) *
                C50805 +
            (C8203 * C20996 + C50938 * C20997 + C8202 * C3844 +
             C51044 * C3846) *
                C118) *
               C44529 +
           ((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                C50805 +
            (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                C118) *
               C51083 +
           ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                C50805 +
            (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                C118) *
               C51082) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            (C47451 * C118 + C47452 * C50805) * C44529) *
               C50752 * C1117 -
           (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C50841) *
              C1119 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C50841 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C1117) *
              C1120 +
          ((C8261 * C51082 + (C14619 * C118 + C14620 * C50805) * C51083 +
            ((C8649 + C8650) * C118 + (C8651 + C8652) * C50805) * C44529) *
               C50752 * C1117 -
           (((C8203 * C2854 + C50938 * C2857 + C8202 * C1316 + C51044 * C1321) *
                 C50805 +
             (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 + C51044 * C1315) *
                 C118) *
                C44529 +
            ((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C51083 +
            C8815 * C51082) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C487 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C484 -
            (C14219 + C14220) * C488 - (C14221 + C14222) * C485 +
            C47451 * C489 + C47452 * C486) *
               C51082 +
           ((C14220 + C14219) * C487 + (C14222 + C14221) * C484 -
            (C14224 + C14223) * C488 - (C14226 + C14225) * C485 +
            (C16622 + C16621) * C489 + (C16624 + C16623) * C486) *
               C51083 +
           (C47451 * C487 + C47452 * C484 - (C16621 + C16622) * C488 -
            (C16623 + C16624) * C485 +
            (C8202 * C5669 + C51044 * C5672 + C8203 * C6661 + C50938 * C6663) *
                C489 +
            (C8202 * C5673 + C51044 * C5678 + C8203 * C6664 + C50938 * C6667) *
                C486) *
               C44529) *
              C50752 * C1117 +
          (((C14899 + C14900) * C488 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C484 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C487) +
            (C14901 + C14902) * C485 - C48329 * C489 - C48330 * C486) *
               C51082 +
           ((C15434 + C15433) * C488 -
            ((C14902 + C14901) * C484 + (C14900 + C14899) * C487) +
            (C15436 + C15435) * C485 - (C48339 + C48340) * C489 -
            (C48341 + C48342) * C486) *
               C51083 +
           ((C48340 + C48339) * C488 - (C48330 * C484 + C48329 * C487) +
            (C48342 + C48341) * C485 -
            (C8203 * C23276 + C50938 * C23277 + C8202 * C6661 +
             C51044 * C6663) *
                C489 -
            (C8203 * C23278 + C50938 * C23279 + C8202 * C6664 +
             C51044 * C6667) *
                C486) *
               C44529) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C803 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C51032 -
             (C14219 + C14220) * C804 - (C14221 + C14222) * C50869) *
                C51082 +
            ((C14220 + C14219) * C803 + (C14222 + C14221) * C51032 -
             (C14224 + C14223) * C804 - (C14226 + C14225) * C50869) *
                C51083 +
            (C47451 * C803 + C47452 * C51032 - (C16621 + C16622) * C804 -
             (C16623 + C16624) * C50869) *
                C44529) *
               C50752 * C1117 +
           (((C14899 + C14900) * C804 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C51032 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C803) +
             (C14901 + C14902) * C50869) *
                C51082 +
            ((C15434 + C15433) * C804 -
             ((C14902 + C14901) * C51032 + (C14900 + C14899) * C803) +
             (C15436 + C15435) * C50869) *
                C51083 +
            ((C48340 + C48339) * C804 - (C48330 * C51032 + C48329 * C803) +
             (C48342 + C48341) * C50869) *
                C44529) *
               C50752 * C50841) *
              C51023 +
          (((C14207 * C804 -
             ((C8240 + C8239) * C51032 + (C8238 + C8237) * C803) +
             C14208 * C50869) *
                C51082 +
            (C14205 * C804 - (C14204 * C51032 + C14203 * C803) +
             C14206 * C50869) *
                C51083 +
            ((C14227 + C14228) * C804 - (C14210 * C51032 + C14209 * C803) +
             (C14229 + C14230) * C50869) *
                C44529) *
               C50752 * C1117 +
           (((C8450 + C8449) * C803 + (C8448 + C8447) * C51032 - C14894 * C804 -
             C14893 * C50869) *
                C51082 +
            (C14887 * C803 + C14888 * C51032 - (C14904 + C14903) * C804 -
             (C14906 + C14905) * C50869) *
                C51083 +
            ((C14903 + C14904) * C803 + (C14905 + C14906) * C51032 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C804 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C50869) *
                C44529) *
               C50752 * C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C118 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C50805) *
                C51082 +
            ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
            (C47451 * C118 + C47452 * C50805) * C44529) *
               C50752 * C1117 -
           (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
            ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C50805 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C118) *
                C51082) *
               C50752 * C50841) *
              C1119 +
          ((((C8450 + C8449) * C118 + (C8448 + C8447) * C50805) * C51082 +
            (C14887 * C118 + C14888 * C50805) * C51083 +
            ((C14903 + C14904) * C118 + (C14905 + C14906) * C50805) * C44529) *
               C50752 * C50841 -
           ((C14210 * C50805 + C14209 * C118) * C44529 +
            (C14204 * C50805 + C14203 * C118) * C51083 +
            ((C8240 + C8239) * C50805 + (C8238 + C8237) * C118) * C51082) *
               C50752 * C1117) *
              C1120 +
          ((C8261 * C51082 + (C14619 * C118 + C14620 * C50805) * C51083 +
            ((C8649 + C8650) * C118 + (C8651 + C8652) * C50805) * C44529) *
               C50752 * C1117 -
           (((C8203 * C2854 + C50938 * C2857 + C8202 * C1316 + C51044 * C1321) *
                 C50805 +
             (C8203 * C2848 + C50938 * C2853 + C8202 * C1309 + C51044 * C1315) *
                 C118) *
                C44529 +
            ((C9202 + C9201) * C50805 + (C9200 + C9199) * C118) * C51083 +
            C8815 * C51082) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C118 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C50805) *
               C51082 +
           ((C14220 + C14219) * C118 + (C14222 + C14221) * C50805) * C51083 +
           (C47451 * C118 + C47452 * C50805) * C44529) *
              C50752 * C1188 -
          (((C15435 + C15436) * C50805 + (C15433 + C15434) * C118) * C44529 +
           ((C14902 + C14901) * C50805 + (C14900 + C14899) * C118) * C51083 +
           ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                C50805 +
            (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                C118) *
               C51082) *
              C50752 * C1189 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C118 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C50805) *
               C51082 +
           ((C16092 + C16091) * C118 + (C16094 + C16093) * C50805) * C51083 +
           ((C8202 * C2846 + C51044 * C2849 + C8203 * C3844 + C50938 * C3846) *
                C118 +
            (C8202 * C2850 + C51044 * C2855 + C8203 * C3847 + C50938 * C3850) *
                C50805) *
               C44529) *
              C50752 * C1190 -
          (((C8203 * C20998 + C50938 * C20999 + C8202 * C3847 +
             C51044 * C3850) *
                C50805 +
            (C8203 * C20996 + C50938 * C20997 + C8202 * C3844 +
             C51044 * C3846) *
                C118) *
               C44529 +
           ((C8203 * C4341 + C50938 * C4344 + C8202 * C3420 + C51044 * C3425) *
                C50805 +
            (C8203 * C4338 + C50938 * C4340 + C8202 * C3416 + C51044 * C3419) *
                C118) *
               C51083 +
           ((C8203 * C2656 + C50938 * C2661 + C8202 * C1203 + C51044 * C1208) *
                C50805 +
            (C8203 * C2652 + C50938 * C2655 + C8202 * C1196 + C51044 * C1204) *
                C118) *
               C51082) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                 C1770 +
             (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                 C1768 -
             (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
                C51082 +
            ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
             (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
                C51083 +
            (C47451 * C1770 + C47452 * C1768 - C49231 * C1771 -
             C49232 * C50869) *
                C44529) *
               C50752 * C51031 +
           (((C14899 + C14900) * C1771 -
             ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                  C1768 +
              (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                  C1770) +
             (C14901 + C14902) * C50869) *
                C51082 +
            ((C15434 + C15433) * C1771 -
             ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
             (C15436 + C15435) * C50869) *
                C51083 +
            ((C48340 + C48339) * C1771 - (C48330 * C1768 + C48329 * C1770) +
             (C48342 + C48341) * C50869) *
                C44529) *
               C50752 * C50841) *
              C51023 +
          (((C14207 * C1771 -
             ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
             C14208 * C50869) *
                C51082 +
            (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
             C14206 * C50869) *
                C51083 +
            ((C14227 + C14228) * C1771 - (C14210 * C1768 + C14209 * C1770) +
             (C14229 + C14230) * C50869) *
                C44529) *
               C50752 * C51031 +
           (((C8450 + C8449) * C1770 + (C8448 + C8447) * C1768 -
             C14894 * C1771 - C14893 * C50869) *
                C51082 +
            (C14887 * C1770 + C14888 * C1768 - (C14904 + C14903) * C1771 -
             (C14906 + C14905) * C50869) *
                C51083 +
            ((C14903 + C14904) * C1770 + (C14905 + C14906) * C1768 -
             (C8203 * C4738 + C50938 * C4744 + C8202 * C4739 + C51044 * C4745) *
                 C1771 -
             (C8203 * C4746 + C50938 * C4750 + C8202 * C4747 + C51044 * C4751) *
                 C50869) *
                C44529) *
               C50752 * C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C2227 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51078 -
            (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
            C47451 * C2229 + C47452 * C2226) *
               C51082 +
           ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
            (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
            (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
               C51083 +
           (C47451 * C2227 + C47452 * C51078 - C49231 * C2228 -
            C49232 * C51079 + (C49242 + C49241) * C2229 +
            (C49244 + C49243) * C2226) *
               C44529) *
              C50752 * C51031 +
          (((C14899 + C14900) * C2228 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C51078 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C2227) +
            (C14901 + C14902) * C51079 - C48329 * C2229 - C48330 * C2226) *
               C51082 +
           ((C15434 + C15433) * C2228 -
            ((C14902 + C14901) * C51078 + (C14900 + C14899) * C2227) +
            (C15436 + C15435) * C51079 - (C48339 + C48340) * C2229 -
            (C48341 + C48342) * C2226) *
               C51083 +
           ((C48340 + C48339) * C2228 - (C48330 * C51078 + C48329 * C2227) +
            (C48342 + C48341) * C51079 -
            (C8203 * C23276 + C50938 * C23277 + C8202 * C6661 +
             C51044 * C6663) *
                C2229 -
            (C8203 * C23278 + C50938 * C23279 + C8202 * C6664 +
             C51044 * C6667) *
                C2226) *
               C44529) *
              C50752 * C50841) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
            (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C1770 + C47452 * C1768 - (C16621 + C16622) * C1771 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C293 +
          (((C14899 + C14900) * C1771 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C1768 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C1770) +
            (C14901 + C14902) * C50869) *
               C51082 +
           ((C15434 + C15433) * C1771 -
            ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
            (C15436 + C15435) * C50869) *
               C51083 +
           ((C48340 + C48339) * C1771 - (C48330 * C1768 + C48329 * C1770) +
            (C48342 + C48341) * C50869) *
               C44529) *
              C50752 * C294 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C1770 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C1768 -
            (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
               C51082 +
           ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
            (C48837 + C48838) * C1771 - (C48839 + C48840) * C50869) *
               C51083 +
           ((C48838 + C48837) * C1770 + (C48840 + C48839) * C1768 -
            (C8203 * C21592 + C50938 * C21593 + C8202 * C4736 +
             C51044 * C4740) *
                C1771 -
            (C8203 * C21594 + C50938 * C21595 + C8202 * C4742 +
             C51044 * C4748) *
                C50869) *
               C44529) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
            (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C1770 + C47452 * C1768 - (C16621 + C16622) * C1771 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C50790 * C1119 +
          ((C14207 * C1771 -
            ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
            C14208 * C50869) *
               C51082 +
           (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
            C14206 * C50869) *
               C51083 +
           ((C14227 + C14228) * C1771 - (C14210 * C1768 + C14209 * C1770) +
            (C14229 + C14230) * C50869) *
               C44529) *
              C50752 * C50790 * C1120 +
          (C10231 * C51082 +
           (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
            (C8652 + C8651) * C50869) *
               C51083 +
           ((C8649 + C8650) * C1770 + (C8651 + C8652) * C1768 -
            (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                C1771 -
            (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                C50869) *
               C44529) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
               C1964 +
           (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
               C1960 -
           (C14219 + C14220) * C1965 - (C14221 + C14222) * C1961 +
           C47451 * C1966 + C47452 * C1962 - C49231 * C1967 - C49232 * C1963) *
              C51082 +
          ((C14220 + C14219) * C1964 + (C14222 + C14221) * C1960 -
           (C14224 + C14223) * C1965 - (C14226 + C14225) * C1961 +
           (C16622 + C16621) * C1966 + (C16624 + C16623) * C1962 -
           (C49241 + C49242) * C1967 - (C49243 + C49244) * C1963) *
              C51083 +
          (C47451 * C1964 + C47452 * C1960 - C49231 * C1965 - C49232 * C1961 +
           (C49242 + C49241) * C1966 + (C49244 + C49243) * C1962 -
           (C8203 * C24194 + C50938 * C24195 + C8202 * C7579 + C51044 * C7581) *
               C1967 -
           (C8203 * C24196 + C50938 * C24197 + C8202 * C7582 + C51044 * C7585) *
               C1963) *
              C44529) *
         C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C2227 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C51078 -
            (C14219 + C14220) * C2228 - (C14221 + C14222) * C51079 +
            C47451 * C2229 + C47452 * C2226) *
               C51082 +
           ((C14220 + C14219) * C2227 + (C14222 + C14221) * C51078 -
            (C14224 + C14223) * C2228 - (C14226 + C14225) * C51079 +
            (C16622 + C16621) * C2229 + (C16624 + C16623) * C2226) *
               C51083 +
           (C47451 * C2227 + C47452 * C51078 - C49231 * C2228 -
            C49232 * C51079 + (C49242 + C49241) * C2229 +
            (C49244 + C49243) * C2226) *
               C44529) *
              C50752 * C50790 * C51023 +
          ((C14207 * C2228 -
            ((C8240 + C8239) * C51078 + (C8238 + C8237) * C2227) +
            C14208 * C51079 - C14209 * C2229 - C14210 * C2226) *
               C51082 +
           (C14205 * C2228 - (C14204 * C51078 + C14203 * C2227) +
            C14206 * C51079 - (C14228 + C14227) * C2229 -
            (C14230 + C14229) * C2226) *
               C51083 +
           ((C14227 + C14228) * C2228 - (C14210 * C51078 + C14209 * C2227) +
            (C14229 + C14230) * C51079 -
            (C8203 * C6662 + C50938 * C6665 + C8202 * C5670 + C51044 * C5674) *
                C2229 -
            (C8203 * C6666 + C50938 * C6668 + C8202 * C5675 + C51044 * C5679) *
                C2226) *
               C44529) *
              C50752 * C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
            (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C1770 + C47452 * C1768 - (C16621 + C16622) * C1771 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C50790 * C1119 +
          ((C14207 * C1771 -
            ((C8240 + C8239) * C1768 + (C8238 + C8237) * C1770) +
            C14208 * C50869) *
               C51082 +
           (C14205 * C1771 - (C14204 * C1768 + C14203 * C1770) +
            C14206 * C50869) *
               C51083 +
           ((C14227 + C14228) * C1771 - (C14210 * C1768 + C14209 * C1770) +
            (C14229 + C14230) * C50869) *
               C44529) *
              C50752 * C50790 * C1120 +
          (C10231 * C51082 +
           (C14619 * C1770 + C14620 * C1768 - (C8650 + C8649) * C1771 -
            (C8652 + C8651) * C50869) *
               C51083 +
           ((C8649 + C8650) * C1770 + (C8651 + C8652) * C1768 -
            (C8203 * C6241 + C50938 * C6242 + C8202 * C1970 + C51044 * C1976) *
                C1771 -
            (C8203 * C6243 + C50938 * C6244 + C8202 * C1977 + C51044 * C1982) *
                C50869) *
               C44529) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51044 * C126 + C8203 * C301 + C50938 * C315) *
                C1770 +
            (C8202 * C127 + C51044 * C140 + C8203 * C314 + C50938 * C331) *
                C1768 -
            (C14219 + C14220) * C1771 - (C14221 + C14222) * C50869) *
               C51082 +
           ((C14220 + C14219) * C1770 + (C14222 + C14221) * C1768 -
            (C14224 + C14223) * C1771 - (C14226 + C14225) * C50869) *
               C51083 +
           (C47451 * C1770 + C47452 * C1768 - (C16621 + C16622) * C1771 -
            (C16623 + C16624) * C50869) *
               C44529) *
              C50752 * C293 +
          (((C14899 + C14900) * C1771 -
            ((C8203 * C317 + C50938 * C332 + C8202 * C314 + C51044 * C331) *
                 C1768 +
             (C8203 * C302 + C50938 * C316 + C8202 * C301 + C51044 * C315) *
                 C1770) +
            (C14901 + C14902) * C50869) *
               C51082 +
           ((C15434 + C15433) * C1771 -
            ((C14902 + C14901) * C1768 + (C14900 + C14899) * C1770) +
            (C15436 + C15435) * C50869) *
               C51083 +
           ((C48340 + C48339) * C1771 - (C48330 * C1768 + C48329 * C1770) +
            (C48342 + C48341) * C50869) *
               C44529) *
              C50752 * C294 +
          (((C8202 * C302 + C51044 * C316 + C8203 * C1196 + C50938 * C1204) *
                C1770 +
            (C8202 * C317 + C51044 * C332 + C8203 * C1203 + C50938 * C1208) *
                C1768 -
            (C16091 + C16092) * C1771 - (C16093 + C16094) * C50869) *
               C51082 +
           ((C16092 + C16091) * C1770 + (C16094 + C16093) * C1768 -
            (C48837 + C48838) * C1771 - (C48839 + C48840) * C50869) *
               C51083 +
           ((C48838 + C48837) * C1770 + (C48840 + C48839) * C1768 -
            (C8203 * C21592 + C50938 * C21593 + C8202 * C4736 +
             C51044 * C4740) *
                C1771 -
            (C8203 * C21594 + C50938 * C21595 + C8202 * C4742 +
             C51044 * C4748) *
                C50869) *
               C44529) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C51031 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C51074 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C51031) *
              C51075 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C51031 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C51031 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C50841) *
              C51074 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C50841 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C51031) *
              C51075 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
               C51031 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C33864) *
                C17372 +
            ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
            C34313 * C17370) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C51031 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C50841) *
              C51074 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C50841 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C51031) *
              C51075 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5722 * C118 + C5723 * C50805) * C39216) *
               C50752 * C51031 -
           (((C117 * C6243 + C50886 * C6244) * C50805 +
             (C117 * C6241 + C50886 * C6242) * C118) *
                C39216 +
            (C5885 + C5884) * C39215 + C11525 * C39214 + C693 * C39213) *
               C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C36826 + C36827 + C36828) * C804 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C803 +
             (C36831 + C36830 + C36829) * C51032 -
             (C36834 + C36833 + C36832) * C804 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C37336 + C37337 + C37338) * C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C2449 * C1307 + C2444 * C1311 + C2450 * C2846 + C2445 * C2849 +
              C2451 * C3844 + C2446 * C3846) *
                 C804 -
             ((C37341 + C37340 + C37339) * C51032 +
              (C37338 + C37337 + C37336) * C803) +
             (C2449 * C1312 + C2444 * C1319 + C2450 * C2850 + C2445 * C2855 +
              C2451 * C3847 + C2446 * C3850) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C296 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C804 -
             ((C2886 + C2887 + C2888) * C51032 +
              (C2883 + C2884 + C2885) * C803) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C803 + (C3444 + C3445 + C3446) * C51032 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C804 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C810 + C811 - C812 - C813) * C33864 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C17371 +
            C34462 * C17372) *
               C51031 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C1014 - (C992 + C993) + C1015) * C33864 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C17371 +
            ((C1016 - (C998 + C999) + C1017) * C33864 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C17372) *
               C50841) *
              C296 +
          ((((C812 - (C811 + C810) + C813) * C33864 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C17370 +
            ((C816 - (C815 + C814) + C817) * C33864 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C17371 +
            ((C820 - (C819 + C818) + C821) * C33864 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C17372) *
               C51031 +
           (((C993 + C992 - C1014 - C1015) * C33864 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C17370 +
            ((C999 + C998 - C1016 - C1017) * C33864 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C17371 +
            ((C1005 + C1004 - C1018 - C1019) * C33864 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C39213 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C39214 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C39215 +
            (C5716 * C803 + C5717 * C51032 - C7592 * C804 - C7593 * C50869) *
                C39216) *
               C50752 * C51031 +
           ((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C39213 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C39214 +
            (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                C39215 +
            ((C117 * C6661 + C50886 * C6663) * C804 -
             (C6675 * C51032 + C6674 * C803) +
             (C117 * C6664 + C50886 * C6667) * C50869) *
                C39216) *
               C50752 * C50841) *
              C296 +
          (((C812 - (C811 + C810) + C813) * C39213 +
            (C6034 - (C6033 + C6032) + C6035) * C39214 +
            (C6038 - (C6037 + C6036) + C6039) * C39215 +
            (C5720 * C804 - (C5719 * C51032 + C5718 * C803) + C5721 * C50869) *
                C39216) *
               C50752 * C51031 +
           ((C993 + C992 - C1014 - C1015) * C39213 +
            (C6256 + C6255 - C6254 - C6257) * C39214 +
            (C6261 + C6260 - C6270 - C6271) * C39215 +
            (C6268 * C803 + C6269 * C51032 -
             (C117 * C6662 + C50886 * C6665) * C804 -
             (C117 * C6666 + C50886 * C6668) * C50869) *
                C39216) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C118 +
                 (C117 * C127 + C50886 * C140) * C50805) *
                    C33864 +
                (C5712 * C118 + C5713 * C50805) * C50966) *
                   C17370 +
               ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
               C33871 * C17372) *
                  C50790 * C113 -
              (C33872 * C17372 +
               ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
               ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
                  C50790 * C114 +
              (C33871 * C17370 +
               (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
               ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
                  C50790 * C115 -
              ((((C117 * C807 + C50886 * C808) * C50805 +
                 (C117 * C805 + C50886 * C806) * C118) *
                    C50966 +
                (C187 + C186) * C33864) *
                   C17372 +
               ((C11068 + C11067) * C50966 + C190 * C33864) * C17371 +
               C33872 * C17370) *
                  C50790 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50886 * C126) * C118 +
                  (C117 * C127 + C50886 * C140) * C50805) *
                     C33864 +
                 (C5712 * C118 + C5713 * C50805) * C50966) *
                    C17370 +
                ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
                C33871 * C17372) *
                   C293 -
               ((C11525 * C50966 + C693 * C33864) * C17372 +
                ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
                ((C6265 * C50805 + C6264 * C118) * C50966 +
                 ((C117 * C314 + C50886 * C331) * C50805 +
                  (C117 * C301 + C50886 * C315) * C118) *
                     C33864) *
                    C17370) *
                   C294 +
               ((((C117 * C302 + C50886 * C316) * C118 +
                  (C117 * C317 + C50886 * C332) * C50805) *
                     C33864 +
                 (C7170 * C118 + C7171 * C50805) * C50966) *
                    C17370 +
                ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
                ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) *
                    C17372) *
                   C295) *
                  C296 +
              ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
                ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
                ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) *
                    C17372) *
                   C294 -
               (C33872 * C17372 +
                ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
                ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
                   C293 -
               ((((C117 * C1665 + C50886 * C1669) * C50805 +
                  (C117 * C1657 + C50886 * C1664) * C118) *
                     C50966 +
                 (C386 + C385) * C33864) *
                    C17372 +
                ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
                ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
                   C295) *
                  C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C33864 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C17370 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C33864 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C17371 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C33864 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C17372) *
              C50790 * C296 +
          (((C573 - (C532 + C531) + C574 - C575 - C576) * C33864 +
            (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C50966) *
               C17370 +
           ((C577 - (C542 + C541) + C578 - C579 - C580) * C33864 +
            (C11375 - (C11374 + C11373) + C11376 - C11377 - C11378) * C50966) *
               C17371 +
           ((C581 - (C552 + C551) + C582 - C583 - C584) * C33864 +
            (C571 * C488 - (C570 * C484 + C569 * C487) + C572 * C485 -
             (C117 * C1971 + C50886 * C1978) * C489 -
             (C117 * C1979 + C50886 * C1983) * C486) *
                C50966) *
               C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
             C2451 * C1654 + C2446 * C1658) *
                C118 +
            (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
             C2451 * C1659 + C2446 * C1666) *
                C50805) *
               C50966) *
              C50752 * C50790 * C113 -
          (((C2886 + C2887 + C2888) * C50805 + (C2883 + C2884 + C2885) * C118) *
               C50966 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50752 * C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C33864 +
           ((C3217 + C3218 + C3219) * C118 + (C3220 + C3221 + C3222) * C50805) *
               C50966) *
              C50752 * C50790 * C115 -
          (((C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50805 +
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C118) *
               C50966 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
              C2451 * C1654 + C2446 * C1658) *
                 C118 +
             (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
              C2451 * C1659 + C2446 * C1666) *
                 C50805) *
                C50966) *
               C50752 * C293 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C294 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C293 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C36826 + C36827 + C36828) * C488 -
            (C36829 + C36830 + C36831) * C485 +
            (C36832 + C36833 + C36834) * C489 +
            (C36835 + C36836 + C36837) * C486) *
               C33864 +
           ((C36828 + C36827 + C36826) * C487 +
            (C36831 + C36830 + C36829) * C484 -
            (C36834 + C36833 + C36832) * C488 -
            (C36837 + C36836 + C36835) * C485 +
            (C2449 * C1968 + C2444 * C1972 + C2450 * C4737 + C2445 * C4741 +
             C2451 * C4736 + C2446 * C4740) *
                C489 +
            (C2449 * C1973 + C2444 * C1980 + C2450 * C4743 + C2445 * C4749 +
             C2451 * C4742 + C2446 * C4748) *
                C486) *
               C50966) *
              C50752 * C50790 * C296 +
          (((C2885 + C2884 + C2883) * C488 -
            ((C2494 + C2493 + C2492) * C484 + (C2491 + C2490 + C2489) * C487) +
            (C2888 + C2887 + C2886) * C485 - (C2891 + C2890 + C2889) * C489 -
            (C2894 + C2893 + C2892) * C486) *
               C33864 +
           ((C2889 + C2890 + C2891) * C488 -
            ((C2886 + C2887 + C2888) * C484 + (C2883 + C2884 + C2885) * C487) +
            (C2892 + C2893 + C2894) * C485 -
            (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
             C2449 * C1969 + C2444 * C1974) *
                C489 -
            (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
             C2449 * C1975 + C2444 * C1981) *
                C486) *
               C50966) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C39213 +
           (C5712 * C118 + C5713 * C50805) * C39214 +
           (C5714 * C118 + C5715 * C50805) * C39215 +
           (C5716 * C118 + C5717 * C50805) * C39216) *
              C50752 * C50790 * C113 -
          ((C5719 * C50805 + C5718 * C118) * C39216 + (C5343 + C5342) * C39215 +
           (C5341 + C5340) * C39214 + (C179 + C178) * C39213) *
              C50752 * C50790 * C114 +
          (C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
           (C5722 * C118 + C5723 * C50805) * C39216) *
              C50752 * C50790 * C115 -
          (((C117 * C1979 + C50886 * C1983) * C50805 +
            (C117 * C1971 + C50886 * C1978) * C118) *
               C39216 +
           (C5351 + C5350) * C39215 + C11065 * C39214 + C191 * C39213) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C293 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C294 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C39213 +
            (C7170 * C118 + C7171 * C50805) * C39214 +
            (C7172 * C118 + C7173 * C50805) * C39215 +
            ((C117 * C4736 + C50886 * C4740) * C118 +
             (C117 * C4742 + C50886 * C4748) * C50805) *
                C39216) *
               C50752 * C295) *
              C296 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C294 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C293 -
           (((C117 * C4746 + C50886 * C4750) * C50805 +
             (C117 * C4738 + C50886 * C4744) * C118) *
                C39216 +
            (C5523 + C5522) * C39215 + (C5521 + C5520) * C39214 +
            (C382 + C381) * C39213) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 - C5713 * C485 +
            C5714 * C489 + C5715 * C486) *
               C39213 +
           (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
            C5716 * C489 + C5717 * C486) *
               C39214 +
           (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
            C7592 * C489 + C7593 * C486) *
               C39215 +
           (C5716 * C487 + C5717 * C484 - C7592 * C488 - C7593 * C485 +
            (C117 * C7579 + C50886 * C7581) * C489 +
            (C117 * C7582 + C50886 * C7585) * C486) *
               C39216) *
              C50752 * C50790 * C296 +
          ((C573 - (C532 + C531) + C574 - C575 - C576) * C39213 +
           (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C39214 +
           (C5726 - (C5703 + C5702) + C5727 - C5728 - C5729) * C39215 +
           (C5720 * C488 - (C5719 * C484 + C5718 * C487) + C5721 * C485 -
            (C117 * C7580 + C50886 * C7583) * C489 -
            (C117 * C7584 + C50886 * C7586) * C486) *
               C39216) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C36826 + C36827 + C36828) * C804 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C803 +
            (C36831 + C36830 + C36829) * C51032 -
            (C36834 + C36833 + C36832) * C804 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C51074 +
          (((C2885 + C2884 + C2883) * C804 -
            ((C2494 + C2493 + C2492) * C51032 +
             (C2491 + C2490 + C2489) * C803) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C804 -
            ((C2886 + C2887 + C2888) * C51032 +
             (C2883 + C2884 + C2885) * C803) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C51075 +
          (((C2500 + C2499 + C2498) * C803 + (C2497 + C2496 + C2495) * C51032 -
            (C3219 + C3218 + C3217) * C804 - (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C803 + (C3220 + C3221 + C3222) * C51032 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C804 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C810 + C811 - C812 - C813) * C33864 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C17371 +
           C34462 * C17372) *
              C50790 * C51074 +
          (((C812 - (C811 + C810) + C813) * C33864 +
            (C6034 - (C6033 + C6032) + C6035) * C50966) *
               C17370 +
           ((C816 - (C815 + C814) + C817) * C33864 +
            (C6040 - (C6041 + C6042) + C6043) * C50966) *
               C17371 +
           ((C820 - (C819 + C818) + C821) * C33864 +
            (C11679 - (C11680 + C11681) + C11682) * C50966) *
               C17372) *
              C50790 * C51075 +
          (C34462 * C17370 +
           (C837 * C33864 + (C11681 + C11680 - C11679 - C11682) * C50966) *
               C17371 +
           ((C825 + C824 - C834 - C835) * C33864 +
            (C830 * C803 + C831 * C51032 -
             (C117 * C499 + C50886 * C518) * C804 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C17372) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
               C39214 +
           (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
               C39215 +
           (C5716 * C803 + C5717 * C51032 - C7592 * C804 - C7593 * C50869) *
               C39216) *
              C50752 * C50790 * C51074 +
          ((C812 - (C811 + C810) + C813) * C39213 +
           (C6034 - (C6033 + C6032) + C6035) * C39214 +
           (C6038 - (C6037 + C6036) + C6039) * C39215 +
           (C5720 * C804 - (C5719 * C51032 + C5718 * C803) + C5721 * C50869) *
               C39216) *
              C50752 * C50790 * C51075 +
          (C836 * C39213 + C11684 * C39214 +
           (C6046 + C6045 - C6044 - C6047) * C39215 +
           (C5722 * C803 + C5723 * C51032 -
            (C117 * C5671 + C50886 * C5676) * C804 -
            (C117 * C5677 + C50886 * C5680) * C50869) *
               C39216) *
              C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C293 -
           ((C11525 * C50966 + C693 * C33864) * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C33864 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C17370 +
            ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
            ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
               C295) *
              C296 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C294 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C293 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C33864) *
                C17372 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C50790 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
              C50790 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
              C50790 * C115 -
          ((((C117 * C807 + C50886 * C808) * C50805 +
             (C117 * C805 + C50886 * C806) * C118) *
                C50966 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50966 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
             C2451 * C1654 + C2446 * C1658) *
                C118 +
            (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
             C2451 * C1659 + C2446 * C1666) *
                C50805) *
               C50966) *
              C50752 * C50790 * C113 -
          (((C2886 + C2887 + C2888) * C50805 + (C2883 + C2884 + C2885) * C118) *
               C50966 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50752 * C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C33864 +
           ((C3217 + C3218 + C3219) * C118 + (C3220 + C3221 + C3222) * C50805) *
               C50966) *
              C50752 * C50790 * C115 -
          (((C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50805 +
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C118) *
               C50966 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
              C2451 * C1654 + C2446 * C1658) *
                 C118 +
             (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
              C2451 * C1659 + C2446 * C1666) *
                 C50805) *
                C50966) *
               C50752 * C293 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C294 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C293 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C39213 +
           (C5712 * C118 + C5713 * C50805) * C39214 +
           (C5714 * C118 + C5715 * C50805) * C39215 +
           (C5716 * C118 + C5717 * C50805) * C39216) *
              C50752 * C50790 * C113 -
          ((C5719 * C50805 + C5718 * C118) * C39216 + (C5343 + C5342) * C39215 +
           (C5341 + C5340) * C39214 + (C179 + C178) * C39213) *
              C50752 * C50790 * C114 +
          (C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
           (C5722 * C118 + C5723 * C50805) * C39216) *
              C50752 * C50790 * C115 -
          (((C117 * C1979 + C50886 * C1983) * C50805 +
            (C117 * C1971 + C50886 * C1978) * C118) *
               C39216 +
           (C5351 + C5350) * C39215 + C11065 * C39214 + C191 * C39213) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C293 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C294 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C39213 +
            (C7170 * C118 + C7171 * C50805) * C39214 +
            (C7172 * C118 + C7173 * C50805) * C39215 +
            ((C117 * C4736 + C50886 * C4740) * C118 +
             (C117 * C4742 + C50886 * C4748) * C50805) *
                C39216) *
               C50752 * C295) *
              C296 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C294 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C293 -
           (((C117 * C4746 + C50886 * C4750) * C50805 +
             (C117 * C4738 + C50886 * C4744) * C118) *
                C39216 +
            (C5523 + C5522) * C39215 + (C5521 + C5520) * C39214 +
            (C382 + C381) * C39213) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C51076 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C51077 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C1423) *
              C51023 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C51077 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C51076 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C51076 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C51077 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C33864 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C17370 +
            ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
            ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
               C1423) *
              C51023 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C51077 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C51076 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C33864) *
                C17372 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C51076 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C51077 +
           (((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C39213 +
            (C7170 * C118 + C7171 * C50805) * C39214 +
            (C7172 * C118 + C7173 * C50805) * C39215 +
            ((C117 * C4736 + C50886 * C4740) * C118 +
             (C117 * C4742 + C50886 * C4748) * C50805) *
                C39216) *
               C50752 * C1423) *
              C51023 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C51077 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C51076 -
           (((C117 * C4746 + C50886 * C4750) * C50805 +
             (C117 * C4738 + C50886 * C4744) * C118) *
                C39216 +
            (C5523 + C5522) * C39215 + (C5521 + C5520) * C39214 +
            (C382 + C381) * C39213) *
               C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C36826 + C36827 + C36828) * C804 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C803 +
            (C36831 + C36830 + C36829) * C51032 -
            (C36834 + C36833 + C36832) * C804 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C51076 +
          (((C37336 + C37337 + C37338) * C804 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51032 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C803) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C804 -
            ((C37341 + C37340 + C37339) * C51032 +
             (C37338 + C37337 + C37336) * C803) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C51077 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C803 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C51032 -
            (C38248 + C38249 + C38250) * C804 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C803 +
            (C38253 + C38252 + C38251) * C51032 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C804 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C810 + C811 - C812 - C813) * C33864 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C17371 +
           C34462 * C17372) *
              C51076 +
          (((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C33864 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C50966) *
               C17370 +
           ((C1014 - (C992 + C993) + C1015) * C33864 +
            (C6254 - (C6255 + C6256) + C6257) * C50966) *
               C17371 +
           ((C1016 - (C998 + C999) + C1017) * C33864 +
            (C11881 - (C11882 + C11883) + C11884) * C50966) *
               C17372) *
              C51077 +
          ((((C117 * C302 + C50886 * C316) * C803 +
             (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
             C7171 * C50869) *
                C33864 +
            (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
                C50966) *
               C17370 +
           ((C369 * C803 + C370 * C51032 - C5514 * C804 - C5515 * C50869) *
                C33864 +
            (C5514 * C803 + C5515 * C51032 - C5516 * C804 - C5517 * C50869) *
                C50966) *
               C17371 +
           ((C371 * C803 + C372 * C51032 - C11223 * C804 - C11224 * C50869) *
                C33864 +
            (C11223 * C803 + C11224 * C51032 -
             (C117 * C2848 + C50886 * C2853) * C804 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C17372) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C803 +
            (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
               C39214 +
           (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
               C39215 +
           (C5716 * C803 + C5717 * C51032 - C7592 * C804 - C7593 * C50869) *
               C39216) *
              C50752 * C51076 +
          ((C6264 * C804 -
            ((C117 * C314 + C50886 * C331) * C51032 +
             (C117 * C301 + C50886 * C315) * C803) +
            C6265 * C50869) *
               C39213 +
           (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
               C39214 +
           (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
               C39215 +
           (C40006 * C804 - (C6675 * C51032 + C6674 * C803) + C40007 * C50869) *
               C39216) *
              C50752 * C51077 +
          (((C117 * C302 + C50886 * C316) * C803 +
            (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
            C7171 * C50869) *
               C39213 +
           (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
               C39214 +
           (C7172 * C803 + C7173 * C51032 - C40338 * C804 - C40339 * C50869) *
               C39215 +
           (C40338 * C803 + C40339 * C51032 -
            (C117 * C23276 + C50886 * C23277) * C804 -
            (C117 * C23278 + C50886 * C23279) * C50869) *
               C39216) *
              C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50886 * C126) * C118 +
                  (C117 * C127 + C50886 * C140) * C50805) *
                     C33864 +
                 (C5712 * C118 + C5713 * C50805) * C50966) *
                    C17370 +
                ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
                C33871 * C17372) *
                   C1117 -
               (C34313 * C17372 +
                ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
                ((C6265 * C50805 + C6264 * C118) * C50966 +
                 ((C117 * C314 + C50886 * C331) * C50805 +
                  (C117 * C301 + C50886 * C315) * C118) *
                     C33864) *
                    C17370) *
                   C50841) *
                  C1119 +
              ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
                ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
                ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) *
                    C17372) *
                   C50841 -
               (C33872 * C17372 +
                ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
                ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
                   C1117) *
                  C1120 +
              ((C33871 * C17370 +
                (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
                ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) *
                    C17372) *
                   C1117 -
               ((((C117 * C983 + C50886 * C988) * C50805 +
                  (C117 * C973 + C50886 * C982) * C118) *
                     C50966 +
                 (C703 + C702) * C33864) *
                    C17372 +
                ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
                C34313 * C17370) *
                   C50841) *
                  C1121) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C118 +
                 (C117 * C127 + C50886 * C140) * C50805) *
                    C33864 +
                (C5712 * C118 + C5713 * C50805) * C50966) *
                   C17370 +
               ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
               C33871 * C17372) *
                  C1188 -
              (C34313 * C17372 +
               ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
               ((C6265 * C50805 + C6264 * C118) * C50966 +
                ((C117 * C314 + C50886 * C331) * C50805 +
                 (C117 * C301 + C50886 * C315) * C118) *
                    C33864) *
                   C17370) *
                  C1189 +
              ((((C117 * C302 + C50886 * C316) * C118 +
                 (C117 * C317 + C50886 * C332) * C50805) *
                    C33864 +
                (C7170 * C118 + C7171 * C50805) * C50966) *
                   C17370 +
               ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
               ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
                  C1190 -
              ((((C117 * C3424 + C50886 * C3427) * C50805 +
                 (C117 * C3418 + C50886 * C3423) * C118) *
                    C50966 +
                ((C117 * C1199 + C50886 * C1206) * C50805 +
                 (C117 * C1194 + C50886 * C1200) * C118) *
                    C33864) *
                   C17372 +
               (((C117 * C3422 + C50886 * C3426) * C50805 +
                 (C117 * C3417 + C50886 * C3421) * C118) *
                    C50966 +
                ((C117 * C1201 + C50886 * C1207) * C50805 +
                 (C117 * C1195 + C50886 * C1202) * C118) *
                    C33864) *
                   C17371 +
               (((C117 * C3420 + C50886 * C3425) * C50805 +
                 (C117 * C3416 + C50886 * C3419) * C118) *
                    C50966 +
                ((C117 * C1203 + C50886 * C1208) * C50805 +
                 (C117 * C1196 + C50886 * C1204) * C118) *
                    C33864) *
                   C17370) *
                  C1191) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C33864 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C17370 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C33864 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C17371 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C33864 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C17372) *
              C1117 +
          (((C6264 * C488 -
             ((C117 * C314 + C50886 * C331) * C484 +
              (C117 * C301 + C50886 * C315) * C487) +
             C6265 * C485 - C6266 * C489 - C6267 * C486) *
                C33864 +
            (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
             C6674 * C489 - C6675 * C486) *
                C50966) *
               C17370 +
           ((C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
             C5513 * C489 - C5512 * C486) *
                C33864 +
            (C5513 * C488 - (C1009 * C484 + C1008 * C487) + C5512 * C485 -
             C6268 * C489 - C6269 * C486) *
                C50966) *
               C17371 +
           ((C1010 * C488 - (C365 * C484 + C366 * C487) + C1011 * C485 -
             C5882 * C489 - C5883 * C486) *
                C33864 +
            (C5882 * C488 - (C1011 * C484 + C1010 * C487) + C5883 * C485 -
             (C117 * C6241 + C50886 * C6242) * C489 -
             (C117 * C6243 + C50886 * C6244) * C486) *
                C50966) *
               C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C36828 + C36827 + C36826) * C118 +
            (C36831 + C36830 + C36829) * C50805) *
               C50966) *
              C50752 * C1188 -
          (((C37341 + C37340 + C37339) * C50805 +
            (C37338 + C37337 + C37336) * C118) *
               C50966 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C33864) *
              C50752 * C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C33864 +
           ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
             C2451 * C4338 + C2446 * C4340) *
                C118 +
            (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
             C2451 * C4341 + C2446 * C4344) *
                C50805) *
               C50966) *
              C50752 * C1190 -
          (((C2451 * C21328 + C2446 * C21329 + C2450 * C4341 + C2445 * C4344 +
             C2449 * C3420 + C2444 * C3425) *
                C50805 +
            (C2451 * C21326 + C2446 * C21327 + C2450 * C4338 + C2445 * C4340 +
             C2449 * C3416 + C2444 * C3419) *
                C118) *
               C50966 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C33864) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C36826 + C36827 + C36828) * C488 -
            (C36829 + C36830 + C36831) * C485 +
            (C36832 + C36833 + C36834) * C489 +
            (C36835 + C36836 + C36837) * C486) *
               C33864 +
           ((C36828 + C36827 + C36826) * C487 +
            (C36831 + C36830 + C36829) * C484 -
            (C36834 + C36833 + C36832) * C488 -
            (C36837 + C36836 + C36835) * C485 +
            (C2449 * C1968 + C2444 * C1972 + C2450 * C4737 + C2445 * C4741 +
             C2451 * C4736 + C2446 * C4740) *
                C489 +
            (C2449 * C1973 + C2444 * C1980 + C2450 * C4743 + C2445 * C4749 +
             C2451 * C4742 + C2446 * C4748) *
                C486) *
               C50966) *
              C50752 * C1117 +
          (((C37336 + C37337 + C37338) * C488 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C484 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C487) +
            (C37339 + C37340 + C37341) * C485 -
            (C37744 + C37745 + C37746) * C489 -
            (C37747 + C37748 + C37749) * C486) *
               C33864 +
           ((C37746 + C37745 + C37744) * C488 -
            ((C37341 + C37340 + C37339) * C484 +
             (C37338 + C37337 + C37336) * C487) +
            (C37749 + C37748 + C37747) * C485 -
            (C2451 * C21592 + C2446 * C21593 + C2450 * C4736 + C2445 * C4740 +
             C2449 * C4737 + C2444 * C4741) *
                C489 -
            (C2451 * C21594 + C2446 * C21595 + C2450 * C4742 + C2445 * C4748 +
             C2449 * C4743 + C2444 * C4749) *
                C486) *
               C50966) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C1117 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C50841) *
              C1119 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C50841 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C1117) *
              C1120 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5722 * C118 + C5723 * C50805) * C39216) *
               C50752 * C1117 -
           (((C117 * C6243 + C50886 * C6244) * C50805 +
             (C117 * C6241 + C50886 * C6242) * C118) *
                C39216 +
            (C5885 + C5884) * C39215 + C11525 * C39214 + C693 * C39213) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C39213 +
           (C5712 * C118 + C5713 * C50805) * C39214 +
           (C5714 * C118 + C5715 * C50805) * C39215 +
           (C5716 * C118 + C5717 * C50805) * C39216) *
              C50752 * C1188 -
          ((C6675 * C50805 + C6674 * C118) * C39216 +
           (C6267 * C50805 + C6266 * C118) * C39215 +
           (C6265 * C50805 + C6264 * C118) * C39214 +
           ((C117 * C314 + C50886 * C331) * C50805 +
            (C117 * C301 + C50886 * C315) * C118) *
               C39213) *
              C50752 * C1189 +
          (((C117 * C302 + C50886 * C316) * C118 +
            (C117 * C317 + C50886 * C332) * C50805) *
               C39213 +
           (C7170 * C118 + C7171 * C50805) * C39214 +
           (C7172 * C118 + C7173 * C50805) * C39215 +
           ((C117 * C4736 + C50886 * C4740) * C118 +
            (C117 * C4742 + C50886 * C4748) * C50805) *
               C39216) *
              C50752 * C1190 -
          (((C117 * C21594 + C50886 * C21595) * C50805 +
            (C117 * C21592 + C50886 * C21593) * C118) *
               C39216 +
           ((C117 * C3847 + C50886 * C3850) * C50805 +
            (C117 * C3844 + C50886 * C3846) * C118) *
               C39215 +
           ((C117 * C3420 + C50886 * C3425) * C50805 +
            (C117 * C3416 + C50886 * C3419) * C118) *
               C39214 +
           ((C117 * C1203 + C50886 * C1208) * C50805 +
            (C117 * C1196 + C50886 * C1204) * C118) *
               C39213) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C487 +
            (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 - C5713 * C485 +
            C5714 * C489 + C5715 * C486) *
               C39213 +
           (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
            C5716 * C489 + C5717 * C486) *
               C39214 +
           (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
            C7592 * C489 + C7593 * C486) *
               C39215 +
           (C5716 * C487 + C5717 * C484 - C7592 * C488 - C7593 * C485 +
            (C117 * C7579 + C50886 * C7581) * C489 +
            (C117 * C7582 + C50886 * C7585) * C486) *
               C39216) *
              C50752 * C1117 +
          ((C6264 * C488 -
            ((C117 * C314 + C50886 * C331) * C484 +
             (C117 * C301 + C50886 * C315) * C487) +
            C6265 * C485 - C6266 * C489 - C6267 * C486) *
               C39213 +
           (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
            C6674 * C489 - C6675 * C486) *
               C39214 +
           (C6674 * C488 - (C6267 * C484 + C6266 * C487) + C6675 * C485 -
            C40006 * C489 - C40007 * C486) *
               C39215 +
           (C40006 * C488 - (C6675 * C484 + C6674 * C487) + C40007 * C485 -
            (C117 * C24194 + C50886 * C24195) * C489 -
            (C117 * C24196 + C50886 * C24197) * C486) *
               C39216) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C36826 + C36827 + C36828) * C804 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C803 +
             (C36831 + C36830 + C36829) * C51032 -
             (C36834 + C36833 + C36832) * C804 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C1117 +
           (((C37336 + C37337 + C37338) * C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C37746 + C37745 + C37744) * C804 -
             ((C37341 + C37340 + C37339) * C51032 +
              (C37338 + C37337 + C37336) * C803) +
             (C37749 + C37748 + C37747) * C50869) *
                C50966) *
               C50752 * C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C804 -
             ((C2886 + C2887 + C2888) * C51032 +
              (C2883 + C2884 + C2885) * C803) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C1117 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C803 + (C3444 + C3445 + C3446) * C51032 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C804 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C810 + C811 - C812 - C813) * C33864 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C17371 +
            C34462 * C17372) *
               C1117 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C1014 - (C992 + C993) + C1015) * C33864 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C17371 +
            ((C1016 - (C998 + C999) + C1017) * C33864 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C17372) *
               C50841) *
              C51023 +
          ((((C812 - (C811 + C810) + C813) * C33864 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C17370 +
            ((C816 - (C815 + C814) + C817) * C33864 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C17371 +
            ((C820 - (C819 + C818) + C821) * C33864 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C17372) *
               C1117 +
           (((C993 + C992 - C1014 - C1015) * C33864 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C17370 +
            ((C999 + C998 - C1016 - C1017) * C33864 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C17371 +
            ((C1005 + C1004 - C1018 - C1019) * C33864 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C39213 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C39214 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C39215 +
            (C5716 * C803 + C5717 * C51032 - C7592 * C804 - C7593 * C50869) *
                C39216) *
               C50752 * C1117 +
           ((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C39213 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C39214 +
            (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                C39215 +
            (C40006 * C804 - (C6675 * C51032 + C6674 * C803) +
             C40007 * C50869) *
                C39216) *
               C50752 * C50841) *
              C51023 +
          (((C812 - (C811 + C810) + C813) * C39213 +
            (C6034 - (C6033 + C6032) + C6035) * C39214 +
            (C6038 - (C6037 + C6036) + C6039) * C39215 +
            (C5720 * C804 - (C5719 * C51032 + C5718 * C803) + C5721 * C50869) *
                C39216) *
               C50752 * C1117 +
           ((C993 + C992 - C1014 - C1015) * C39213 +
            (C6256 + C6255 - C6254 - C6257) * C39214 +
            (C6261 + C6260 - C6270 - C6271) * C39215 +
            (C6268 * C803 + C6269 * C51032 -
             (C117 * C6662 + C50886 * C6665) * C804 -
             (C117 * C6666 + C50886 * C6668) * C50869) *
                C39216) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C1188 -
          (C34313 * C17372 +
           ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
           ((C6265 * C50805 + C6264 * C118) * C50966 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C33864) *
               C17370) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C33864 +
            (C7170 * C118 + C7171 * C50805) * C50966) *
               C17370 +
           ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
           ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
              C1190 -
          ((((C117 * C3424 + C50886 * C3427) * C50805 +
             (C117 * C3418 + C50886 * C3423) * C118) *
                C50966 +
            ((C117 * C1199 + C50886 * C1206) * C50805 +
             (C117 * C1194 + C50886 * C1200) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C50966 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C50966 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C33864) *
               C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C1117 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C50841 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C1117) *
              C1120 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
               C1117 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C33864) *
                C17372 +
            ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
            C34313 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C36828 + C36827 + C36826) * C118 +
            (C36831 + C36830 + C36829) * C50805) *
               C50966) *
              C50752 * C1188 -
          (((C37341 + C37340 + C37339) * C50805 +
            (C37338 + C37337 + C37336) * C118) *
               C50966 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C33864) *
              C50752 * C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C33864 +
           ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
             C2451 * C4338 + C2446 * C4340) *
                C118 +
            (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
             C2451 * C4341 + C2446 * C4344) *
                C50805) *
               C50966) *
              C50752 * C1190 -
          (((C2451 * C21328 + C2446 * C21329 + C2450 * C4341 + C2445 * C4344 +
             C2449 * C3420 + C2444 * C3425) *
                C50805 +
            (C2451 * C21326 + C2446 * C21327 + C2450 * C4338 + C2445 * C4340 +
             C2449 * C3416 + C2444 * C3419) *
                C118) *
               C50966 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C33864) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C39213 +
            (C5712 * C118 + C5713 * C50805) * C39214 +
            (C5714 * C118 + C5715 * C50805) * C39215 +
            (C5716 * C118 + C5717 * C50805) * C39216) *
               C50752 * C1117 -
           ((C6675 * C50805 + C6674 * C118) * C39216 +
            (C6267 * C50805 + C6266 * C118) * C39215 +
            (C6265 * C50805 + C6264 * C118) * C39214 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C39213) *
               C50752 * C50841) *
              C1119 +
          (((C380 + C379) * C39213 + (C5503 + C5502) * C39214 +
            (C5519 + C5518) * C39215 +
            (C6268 * C118 + C6269 * C50805) * C39216) *
               C50752 * C50841 -
           ((C5719 * C50805 + C5718 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50752 * C1117) *
              C1120 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5722 * C118 + C5723 * C50805) * C39216) *
               C50752 * C1117 -
           (((C117 * C6243 + C50886 * C6244) * C50805 +
             (C117 * C6241 + C50886 * C6242) * C118) *
                C39216 +
            (C5885 + C5884) * C39215 + C11525 * C39214 + C693 * C39213) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C118 +
            (C117 * C127 + C50886 * C140) * C50805) *
               C39213 +
           (C5712 * C118 + C5713 * C50805) * C39214 +
           (C5714 * C118 + C5715 * C50805) * C39215 +
           (C5716 * C118 + C5717 * C50805) * C39216) *
              C50752 * C1188 -
          ((C6675 * C50805 + C6674 * C118) * C39216 +
           (C6267 * C50805 + C6266 * C118) * C39215 +
           (C6265 * C50805 + C6264 * C118) * C39214 +
           ((C117 * C314 + C50886 * C331) * C50805 +
            (C117 * C301 + C50886 * C315) * C118) *
               C39213) *
              C50752 * C1189 +
          (((C117 * C302 + C50886 * C316) * C118 +
            (C117 * C317 + C50886 * C332) * C50805) *
               C39213 +
           (C7170 * C118 + C7171 * C50805) * C39214 +
           (C7172 * C118 + C7173 * C50805) * C39215 +
           ((C117 * C4736 + C50886 * C4740) * C118 +
            (C117 * C4742 + C50886 * C4748) * C50805) *
               C39216) *
              C50752 * C1190 -
          (((C117 * C21594 + C50886 * C21595) * C50805 +
            (C117 * C21592 + C50886 * C21593) * C118) *
               C39216 +
           ((C117 * C3847 + C50886 * C3850) * C50805 +
            (C117 * C3844 + C50886 * C3846) * C118) *
               C39215 +
           ((C117 * C3420 + C50886 * C3425) * C50805 +
            (C117 * C3416 + C50886 * C3419) * C118) *
               C39214 +
           ((C117 * C1203 + C50886 * C1208) * C50805 +
            (C117 * C1196 + C50886 * C1204) * C118) *
               C39213) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C1770 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C1768 -
             (C36826 + C36827 + C36828) * C1771 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C1770 +
             (C36831 + C36830 + C36829) * C1768 -
             (C36834 + C36833 + C36832) * C1771 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C37336 + C37337 + C37338) * C1771 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C1768 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C1770) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C37746 + C37745 + C37744) * C1771 -
             ((C37341 + C37340 + C37339) * C1768 +
              (C37338 + C37337 + C37336) * C1770) +
             (C37749 + C37748 + C37747) * C50869) *
                C50966) *
               C50752 * C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C1771 -
             ((C2494 + C2493 + C2492) * C1768 +
              (C2491 + C2490 + C2489) * C1770) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C1771 -
             ((C2886 + C2887 + C2888) * C1768 +
              (C2883 + C2884 + C2885) * C1770) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C2694 + C2693 + C2692) * C1770 + (C2691 + C2690 + C2689) * C1768 -
             (C3443 + C3442 + C3441) * C1771 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C1770 + (C3444 + C3445 + C3446) * C1768 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C1771 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C1770 +
              (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C1773 + C1774 - C1775 - C1776) * C33864 +
             (C7320 + C7321 - C7322 - C7323) * C50966) *
                C17371 +
            C35681 * C17372) *
               C51031 +
           (((C6264 * C1771 -
              ((C117 * C314 + C50886 * C331) * C1768 +
               (C117 * C301 + C50886 * C315) * C1770) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
              C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C2115 - (C2116 + C2117) + C2118) * C33864 +
             (C7788 - (C7789 + C7790) + C7791) * C50966) *
                C17371 +
            ((C2119 - (C2120 + C2121) + C2122) * C33864 +
             (C13355 - (C13356 + C13357) + C13358) * C50966) *
                C17372) *
               C50841) *
              C51023 +
          ((((C1775 - (C1774 + C1773) + C1776) * C33864 +
             (C7322 - (C7321 + C7320) + C7323) * C50966) *
                C17370 +
            ((C1779 - (C1778 + C1777) + C1780) * C33864 +
             (C7328 - (C7329 + C7330) + C7331) * C50966) *
                C17371 +
            ((C1783 - (C1782 + C1781) + C1784) * C33864 +
             (C12909 - (C12910 + C12911) + C12912) * C50966) *
                C17372) *
               C51031 +
           (((C2117 + C2116 - C2115 - C2118) * C33864 +
             (C7790 + C7789 - C7788 - C7791) * C50966) *
                C17370 +
            ((C2121 + C2120 - C2119 - C2122) * C33864 +
             (C13357 + C13356 - C13355 - C13358) * C50966) *
                C17371 +
            ((C2125 + C2124 - C2123 - C2126) * C33864 +
             (C1012 * C1770 + C1013 * C1768 -
              (C117 * C1310 + C50886 * C1317) * C1771 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C39213 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C39214 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C39215 +
            (C5716 * C1770 + C5717 * C1768 - C7592 * C1771 - C7593 * C50869) *
                C39216) *
               C50752 * C51031 +
           ((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C39213 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C39214 +
            (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
                C39215 +
            (C40006 * C1771 - (C6675 * C1768 + C6674 * C1770) +
             C40007 * C50869) *
                C39216) *
               C50752 * C50841) *
              C51023 +
          (((C1775 - (C1774 + C1773) + C1776) * C39213 +
            (C7322 - (C7321 + C7320) + C7323) * C39214 +
            (C7326 - (C7325 + C7324) + C7327) * C39215 +
            (C5720 * C1771 - (C5719 * C1768 + C5718 * C1770) + C5721 * C50869) *
                C39216) *
               C50752 * C51031 +
           ((C2117 + C2116 - C2115 - C2118) * C39213 +
            (C7790 + C7789 - C7788 - C7791) * C39214 +
            (C7794 + C7793 - C7792 - C7795) * C39215 +
            (C6268 * C1770 + C6269 * C1768 -
             (C117 * C6662 + C50886 * C6665) * C1771 -
             (C117 * C6666 + C50886 * C6668) * C50869) *
                C39216) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C36826 + C36827 + C36828) * C2228 -
            (C36829 + C36830 + C36831) * C51079 +
            (C36832 + C36833 + C36834) * C2229 +
            (C36835 + C36836 + C36837) * C2226) *
               C33864 +
           ((C36828 + C36827 + C36826) * C2227 +
            (C36831 + C36830 + C36829) * C51078 -
            (C36834 + C36833 + C36832) * C2228 -
            (C36837 + C36836 + C36835) * C51079 +
            (C38658 + C38657 + C38656) * C2229 +
            (C38661 + C38660 + C38659) * C2226) *
               C50966) *
              C50752 * C51031 +
          (((C37336 + C37337 + C37338) * C2228 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51078 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C2227) +
            (C37339 + C37340 + C37341) * C51079 -
            (C37744 + C37745 + C37746) * C2229 -
            (C37747 + C37748 + C37749) * C2226) *
               C33864 +
           ((C37746 + C37745 + C37744) * C2228 -
            ((C37341 + C37340 + C37339) * C51078 +
             (C37338 + C37337 + C37336) * C2227) +
            (C37749 + C37748 + C37747) * C51079 -
            (C2451 * C21592 + C2446 * C21593 + C2450 * C4736 + C2445 * C4740 +
             C2449 * C4737 + C2444 * C4741) *
                C2229 -
            (C2451 * C21594 + C2446 * C21595 + C2450 * C4742 + C2445 * C4748 +
             C2449 * C4743 + C2444 * C4749) *
                C2226) *
               C50966) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C33864 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C17370 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C33864 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C17371 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C33864 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C17372) *
              C51031 +
          (((C6264 * C2228 -
             ((C117 * C314 + C50886 * C331) * C51078 +
              (C117 * C301 + C50886 * C315) * C2227) +
             C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
                C33864 +
            (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) + C6267 * C51079 -
             C6674 * C2229 - C6675 * C2226) *
                C50966) *
               C17370 +
           ((C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
             C5513 * C2229 - C5512 * C2226) *
                C33864 +
            (C5513 * C2228 - (C1009 * C51078 + C1008 * C2227) + C5512 * C51079 -
             C6268 * C2229 - C6269 * C2226) *
                C50966) *
               C17371 +
           ((C1010 * C2228 - (C365 * C51078 + C366 * C2227) + C1011 * C51079 -
             C5882 * C2229 - C5883 * C2226) *
                C33864 +
            (C5882 * C2228 - (C1011 * C51078 + C1010 * C2227) + C5883 * C51079 -
             (C117 * C6241 + C50886 * C6242) * C2229 -
             (C117 * C6243 + C50886 * C6244) * C2226) *
                C50966) *
               C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
            C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
               C39213 +
           (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
            C5716 * C2229 + C5717 * C2226) *
               C39214 +
           (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 - C5717 * C51079 +
            C7592 * C2229 + C7593 * C2226) *
               C39215 +
           (C5716 * C2227 + C5717 * C51078 - C7592 * C2228 - C7593 * C51079 +
            C40610 * C2229 + C40611 * C2226) *
               C39216) *
              C50752 * C51031 +
          ((C6264 * C2228 -
            ((C117 * C314 + C50886 * C331) * C51078 +
             (C117 * C301 + C50886 * C315) * C2227) +
            C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
               C39213 +
           (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) + C6267 * C51079 -
            C6674 * C2229 - C6675 * C2226) *
               C39214 +
           (C6674 * C2228 - (C6267 * C51078 + C6266 * C2227) + C6675 * C51079 -
            C40006 * C2229 - C40007 * C2226) *
               C39215 +
           (C40006 * C2228 - (C6675 * C51078 + C6674 * C2227) +
            C40007 * C51079 - (C117 * C24194 + C50886 * C24195) * C2229 -
            (C117 * C24196 + C50886 * C24197) * C2226) *
               C39216) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C1770 +
                 (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
                 C5713 * C50869) *
                    C33864 +
                (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 -
                 C5715 * C50869) *
                    C50966) *
                   C17370 +
               ((C1773 + C1774 - C1775 - C1776) * C33864 +
                (C7320 + C7321 - C7322 - C7323) * C50966) *
                   C17371 +
               C35681 * C17372) *
                  C50790 * C1119 +
              (((C1775 - (C1774 + C1773) + C1776) * C33864 +
                (C7322 - (C7321 + C7320) + C7323) * C50966) *
                   C17370 +
               ((C1779 - (C1778 + C1777) + C1780) * C33864 +
                (C7328 - (C7329 + C7330) + C7331) * C50966) *
                   C17371 +
               ((C1783 - (C1782 + C1781) + C1784) * C33864 +
                (C12909 - (C12910 + C12911) + C12912) * C50966) *
                   C17372) *
                  C50790 * C1120 +
              (C35681 * C17370 +
               (C1794 * C33864 + (C12911 + C12910 - C12909 - C12912) * C50966) *
                   C17371 +
               ((C1787 + C1786 - C1785 - C1788) * C33864 +
                (C830 * C1770 + C831 * C1768 -
                 (C117 * C499 + C50886 * C518) * C1771 -
                 (C117 * C519 + C50886 * C529) * C50869) *
                    C50966) *
                   C17372) *
                  C50790 * C1121) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50886 * C126) * C1770 +
                 (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
                 C5713 * C50869) *
                    C33864 +
                (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 -
                 C5715 * C50869) *
                    C50966) *
                   C17370 +
               ((C1773 + C1774 - C1775 - C1776) * C33864 +
                (C7320 + C7321 - C7322 - C7323) * C50966) *
                   C17371 +
               C35681 * C17372) *
                  C293 +
              (((C6264 * C1771 -
                 ((C117 * C314 + C50886 * C331) * C1768 +
                  (C117 * C301 + C50886 * C315) * C1770) +
                 C6265 * C50869) *
                    C33864 +
                (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
                 C6267 * C50869) *
                    C50966) *
                   C17370 +
               ((C2115 - (C2116 + C2117) + C2118) * C33864 +
                (C7788 - (C7789 + C7790) + C7791) * C50966) *
                   C17371 +
               ((C2119 - (C2120 + C2121) + C2122) * C33864 +
                (C13355 - (C13356 + C13357) + C13358) * C50966) *
                   C17372) *
                  C294 +
              ((((C117 * C302 + C50886 * C316) * C1770 +
                 (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
                 C7171 * C50869) *
                    C33864 +
                (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 -
                 C7173 * C50869) *
                    C50966) *
                   C17370 +
               ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                    C33864 +
                (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 -
                 C5517 * C50869) *
                    C50966) *
                   C17371 +
               ((C371 * C1770 + C372 * C1768 - C11223 * C1771 -
                 C11224 * C50869) *
                    C33864 +
                (C11223 * C1770 + C11224 * C1768 -
                 (C117 * C2848 + C50886 * C2853) * C1771 -
                 (C117 * C2854 + C50886 * C2857) * C50869) *
                    C50966) *
                   C17372) *
                  C295) *
             C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1964 +
            (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
            C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
            C5717 * C1963) *
               C33864 +
           (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
            C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
               C50966) *
              C17370 +
          ((C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
            C563 * C1966 + C564 * C1962 - C5718 * C1967 - C5719 * C1963) *
               C33864 +
           (C561 * C1964 + C562 * C1960 - C563 * C1965 - C564 * C1961 +
            C5718 * C1966 + C5719 * C1962 - C5720 * C1967 - C5721 * C1963) *
               C50966) *
              C17371 +
          ((C170 * C1964 + C171 * C1960 - C565 * C1965 - C566 * C1961 +
            C567 * C1966 + C568 * C1962 - C5722 * C1967 - C5723 * C1963) *
               C33864 +
           (C565 * C1964 + C566 * C1960 - C567 * C1965 - C568 * C1961 +
            C5722 * C1966 + C5723 * C1962 -
            (C117 * C5671 + C50886 * C5676) * C1967 -
            (C117 * C5677 + C50886 * C5680) * C1963) *
               C50966) *
              C17372) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C1771 -
            ((C2886 + C2887 + C2888) * C1768 +
             (C2883 + C2884 + C2885) * C1770) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C1770 + (C3220 + C3221 + C3222) * C1768 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C1771 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C293 +
          (((C37336 + C37337 + C37338) * C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C1771 -
            ((C37341 + C37340 + C37339) * C1768 +
             (C37338 + C37337 + C37336) * C1770) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C38248 + C38249 + C38250) * C1771 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C1770 +
            (C38253 + C38252 + C38251) * C1768 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C1771 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
            C2451 * C302 + C2446 * C316) *
               C1964 +
           (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
            C2451 * C317 + C2446 * C332) *
               C1960 -
           (C36826 + C36827 + C36828) * C1965 -
           (C36829 + C36830 + C36831) * C1961 +
           (C36832 + C36833 + C36834) * C1966 +
           (C36835 + C36836 + C36837) * C1962 -
           (C38656 + C38657 + C38658) * C1967 -
           (C38659 + C38660 + C38661) * C1963) *
              C33864 +
          ((C36828 + C36827 + C36826) * C1964 +
           (C36831 + C36830 + C36829) * C1960 -
           (C36834 + C36833 + C36832) * C1965 -
           (C36837 + C36836 + C36835) * C1961 +
           (C38658 + C38657 + C38656) * C1966 +
           (C38661 + C38660 + C38659) * C1962 -
           (C2451 * C23276 + C2446 * C23277 + C2450 * C6661 + C2445 * C6663 +
            C2449 * C5669 + C2444 * C5672) *
               C1967 -
           (C2451 * C23278 + C2446 * C23279 + C2450 * C6664 + C2445 * C6667 +
            C2449 * C5673 + C2444 * C5678) *
               C1963) *
              C50966) *
         C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
               C39214 +
           (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
               C39215 +
           (C5716 * C1770 + C5717 * C1768 - C7592 * C1771 - C7593 * C50869) *
               C39216) *
              C50752 * C50790 * C1119 +
          ((C1775 - (C1774 + C1773) + C1776) * C39213 +
           (C7322 - (C7321 + C7320) + C7323) * C39214 +
           (C7326 - (C7325 + C7324) + C7327) * C39215 +
           (C5720 * C1771 - (C5719 * C1768 + C5718 * C1770) + C5721 * C50869) *
               C39216) *
              C50752 * C50790 * C1120 +
          (C1793 * C39213 + C12914 * C39214 +
           (C7334 + C7333 - C7332 - C7335) * C39215 +
           (C5722 * C1770 + C5723 * C1768 -
            (C117 * C5671 + C50886 * C5676) * C1771 -
            (C117 * C5677 + C50886 * C5680) * C50869) *
               C39216) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
               C39214 +
           (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
               C39215 +
           (C5716 * C1770 + C5717 * C1768 - C7592 * C1771 - C7593 * C50869) *
               C39216) *
              C50752 * C293 +
          ((C6264 * C1771 -
            ((C117 * C314 + C50886 * C331) * C1768 +
             (C117 * C301 + C50886 * C315) * C1770) +
            C6265 * C50869) *
               C39213 +
           (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
               C39214 +
           (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
               C39215 +
           (C40006 * C1771 - (C6675 * C1768 + C6674 * C1770) +
            C40007 * C50869) *
               C39216) *
              C50752 * C294 +
          (((C117 * C302 + C50886 * C316) * C1770 +
            (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
            C7171 * C50869) *
               C39213 +
           (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
               C39214 +
           (C7172 * C1770 + C7173 * C1768 - C40338 * C1771 - C40339 * C50869) *
               C39215 +
           (C40338 * C1770 + C40339 * C1768 -
            (C117 * C23276 + C50886 * C23277) * C1771 -
            (C117 * C23278 + C50886 * C23279) * C50869) *
               C39216) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50886 * C126) * C1964 +
           (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
           C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
           C5717 * C1963) *
              C39213 +
          (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
           C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
              C39214 +
          (C5714 * C1964 + C5715 * C1960 - C5716 * C1965 - C5717 * C1961 +
           C7592 * C1966 + C7593 * C1962 - C40610 * C1967 - C40611 * C1963) *
              C39215 +
          (C5716 * C1964 + C5717 * C1960 - C7592 * C1965 - C7593 * C1961 +
           C40610 * C1966 + C40611 * C1962 -
           (C117 * C40601 + C50886 * C40602) * C1967 -
           (C117 * C40603 + C50886 * C40604) * C1963) *
              C39216) *
         C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C36826 + C36827 + C36828) * C2228 -
            (C36829 + C36830 + C36831) * C51079 +
            (C36832 + C36833 + C36834) * C2229 +
            (C36835 + C36836 + C36837) * C2226) *
               C33864 +
           ((C36828 + C36827 + C36826) * C2227 +
            (C36831 + C36830 + C36829) * C51078 -
            (C36834 + C36833 + C36832) * C2228 -
            (C36837 + C36836 + C36835) * C51079 +
            (C38658 + C38657 + C38656) * C2229 +
            (C38661 + C38660 + C38659) * C2226) *
               C50966) *
              C50752 * C50790 * C51023 +
          (((C2885 + C2884 + C2883) * C2228 -
            ((C2494 + C2493 + C2492) * C51078 +
             (C2491 + C2490 + C2489) * C2227) +
            (C2888 + C2887 + C2886) * C51079 - (C2891 + C2890 + C2889) * C2229 -
            (C2894 + C2893 + C2892) * C2226) *
               C33864 +
           ((C2889 + C2890 + C2891) * C2228 -
            ((C2886 + C2887 + C2888) * C51078 +
             (C2883 + C2884 + C2885) * C2227) +
            (C2892 + C2893 + C2894) * C51079 -
            (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
             C2449 * C1969 + C2444 * C1974) *
                C2229 -
            (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
             C2449 * C1975 + C2444 * C1981) *
                C2226) *
               C50966) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C33864 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C17370 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C33864 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C17371 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C33864 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C17372) *
              C50790 * C51023 +
          (((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C33864 +
            (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C50966) *
               C17370 +
           ((C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C33864 +
            (C13507 - (C13506 + C13505) + C13508 - C13509 - C13510) * C50966) *
               C17371 +
           ((C2245 - (C2244 + C2243) + C2246 - C2247 - C2248) * C33864 +
            (C571 * C2228 - (C570 * C51078 + C569 * C2227) + C572 * C51079 -
             (C117 * C1971 + C50886 * C1978) * C2229 -
             (C117 * C1979 + C50886 * C1983) * C2226) *
                C50966) *
               C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C2227 +
            (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
            C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
               C39213 +
           (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
            C5716 * C2229 + C5717 * C2226) *
               C39214 +
           (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 - C5717 * C51079 +
            C7592 * C2229 + C7593 * C2226) *
               C39215 +
           (C5716 * C2227 + C5717 * C51078 - C7592 * C2228 - C7593 * C51079 +
            C40610 * C2229 + C40611 * C2226) *
               C39216) *
              C50752 * C50790 * C51023 +
          ((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C39213 +
           (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C39214 +
           (C7950 - (C7949 + C7948) + C7951 - C7952 - C7953) * C39215 +
           (C5720 * C2228 - (C5719 * C51078 + C5718 * C2227) + C5721 * C51079 -
            (C117 * C7580 + C50886 * C7583) * C2229 -
            (C117 * C7584 + C50886 * C7586) * C2226) *
               C39216) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C33864 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C50966) *
               C17370 +
           ((C2115 - (C2116 + C2117) + C2118) * C33864 +
            (C7788 - (C7789 + C7790) + C7791) * C50966) *
               C17371 +
           ((C2119 - (C2120 + C2121) + C2122) * C33864 +
            (C13355 - (C13356 + C13357) + C13358) * C50966) *
               C17372) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C33864 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C50966) *
               C17370 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C33864 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C50966) *
               C17371 +
           ((C371 * C1770 + C372 * C1768 - C11223 * C1771 - C11224 * C50869) *
                C33864 +
            (C11223 * C1770 + C11224 * C1768 -
             (C117 * C2848 + C50886 * C2853) * C1771 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C33864 +
            (C7322 - (C7321 + C7320) + C7323) * C50966) *
               C17370 +
           ((C1779 - (C1778 + C1777) + C1780) * C33864 +
            (C7328 - (C7329 + C7330) + C7331) * C50966) *
               C17371 +
           ((C1783 - (C1782 + C1781) + C1784) * C33864 +
            (C12909 - (C12910 + C12911) + C12912) * C50966) *
               C17372) *
              C50790 * C1120 +
          (C35681 * C17370 +
           (C1794 * C33864 + (C12911 + C12910 - C12909 - C12912) * C50966) *
               C17371 +
           ((C1787 + C1786 - C1785 - C1788) * C33864 +
            (C830 * C1770 + C831 * C1768 -
             (C117 * C499 + C50886 * C518) * C1771 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C1771 -
            ((C2886 + C2887 + C2888) * C1768 +
             (C2883 + C2884 + C2885) * C1770) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C1770 + (C3220 + C3221 + C3222) * C1768 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C1771 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C293 +
          (((C37336 + C37337 + C37338) * C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C1771 -
            ((C37341 + C37340 + C37339) * C1768 +
             (C37338 + C37337 + C37336) * C1770) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C38248 + C38249 + C38250) * C1771 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C1770 +
            (C38253 + C38252 + C38251) * C1768 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C1771 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
               C39214 +
           (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
               C39215 +
           (C5716 * C1770 + C5717 * C1768 - C7592 * C1771 - C7593 * C50869) *
               C39216) *
              C50752 * C50790 * C1119 +
          ((C1775 - (C1774 + C1773) + C1776) * C39213 +
           (C7322 - (C7321 + C7320) + C7323) * C39214 +
           (C7326 - (C7325 + C7324) + C7327) * C39215 +
           (C5720 * C1771 - (C5719 * C1768 + C5718 * C1770) + C5721 * C50869) *
               C39216) *
              C50752 * C50790 * C1120 +
          (C1793 * C39213 + C12914 * C39214 +
           (C7334 + C7333 - C7332 - C7335) * C39215 +
           (C5722 * C1770 + C5723 * C1768 -
            (C117 * C5671 + C50886 * C5676) * C1771 -
            (C117 * C5677 + C50886 * C5680) * C50869) *
               C39216) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1770 +
            (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
            C5713 * C50869) *
               C39213 +
           (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
               C39214 +
           (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
               C39215 +
           (C5716 * C1770 + C5717 * C1768 - C7592 * C1771 - C7593 * C50869) *
               C39216) *
              C50752 * C293 +
          ((C6264 * C1771 -
            ((C117 * C314 + C50886 * C331) * C1768 +
             (C117 * C301 + C50886 * C315) * C1770) +
            C6265 * C50869) *
               C39213 +
           (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
               C39214 +
           (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
               C39215 +
           (C40006 * C1771 - (C6675 * C1768 + C6674 * C1770) +
            C40007 * C50869) *
               C39216) *
              C50752 * C294 +
          (((C117 * C302 + C50886 * C316) * C1770 +
            (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
            C7171 * C50869) *
               C39213 +
           (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
               C39214 +
           (C7172 * C1770 + C7173 * C1768 - C40338 * C1771 - C40339 * C50869) *
               C39215 +
           (C40338 * C1770 + C40339 * C1768 -
            (C117 * C23276 + C50886 * C23277) * C1771 -
            (C117 * C23278 + C50886 * C23279) * C50869) *
               C39216) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51082 +
             (C5712 * C118 + C5713 * C50805) * C51083 +
             (C5714 * C118 + C5715 * C50805) * C44529) *
                C51016 +
            ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
             (C5342 + C5343) * C44529) *
                C50757) *
               C51031 -
           (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
             (C379 + C380) * C51082) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C44529 +
             (C6265 * C50805 + C6264 * C118) * C51083 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51082) *
                C51016) *
               C50841) *
              C51074 +
          ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
             (C5519 + C5518) * C44529) *
                C51016 +
            ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
             (C5884 + C5885) * C44529) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
             (C181 + C180) * C51082) *
                C50757 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
             (C179 + C178) * C51082) *
                C51016) *
               C51031) *
              C51075 +
          (((C188 * C51082 + C11064 * C51083 + (C5345 + C5344) * C44529) *
                C51016 +
            (C189 * C51082 + (C5348 + C5349) * C51083 +
             (C5350 + C5351) * C44529) *
                C50757) *
               C51031 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C44529 +
             (C11528 + C11527) * C51083 + C692 * C51082) *
                C50757 +
            ((C5885 + C5884) * C44529 + C11525 * C51083 + C693 * C51082) *
                C51016) *
               C50841) *
              C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C51082 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C51083 +
             (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                 C44529) *
                C51016 +
            ((C810 + C811 - C812 - C813) * C51082 +
             (C6032 + C6033 - C6034 - C6035) * C51083 +
             (C6036 + C6037 - C6038 - C6039) * C44529) *
                C50757) *
               C51031 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C51082 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C51083 +
             (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                 C44529) *
                C51016 +
            ((C1014 - (C992 + C993) + C1015) * C51082 +
             (C6254 - (C6255 + C6256) + C6257) * C51083 +
             (C6270 - (C6260 + C6261) + C6271) * C44529) *
                C50757) *
               C50841) *
              C296 +
          ((((C812 - (C811 + C810) + C813) * C51082 +
             (C6034 - (C6033 + C6032) + C6035) * C51083 +
             (C6038 - (C6037 + C6036) + C6039) * C44529) *
                C51016 +
            ((C816 - (C815 + C814) + C817) * C51082 +
             (C6040 - (C6041 + C6042) + C6043) * C51083 +
             (C6044 - (C6045 + C6046) + C6047) * C44529) *
                C50757) *
               C51031 +
           (((C993 + C992 - C1014 - C1015) * C51082 +
             (C6256 + C6255 - C6254 - C6257) * C51083 +
             (C6261 + C6260 - C6270 - C6271) * C44529) *
                C51016 +
            ((C999 + C998 - C1016 - C1017) * C51082 +
             (C11883 + C11882 - C11881 - C11884) * C51083 +
             (C5882 * C803 + C5883 * C51032 -
              (C117 * C6241 + C50886 * C6242) * C804 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C44529) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51082 +
             (C5712 * C118 + C5713 * C50805) * C51083 +
             (C5714 * C118 + C5715 * C50805) * C44529) *
                C51016 +
            ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
             (C5342 + C5343) * C44529) *
                C50757) *
               C293 -
           (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
             (C379 + C380) * C51082) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C44529 +
             (C6265 * C50805 + C6264 * C118) * C51083 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51082) *
                C51016) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C51082 +
             (C7170 * C118 + C7171 * C50805) * C51083 +
             (C7172 * C118 + C7173 * C50805) * C44529) *
                C51016 +
            ((C381 + C382) * C51082 + (C5520 + C5521) * C51083 +
             (C5522 + C5523) * C44529) *
                C50757) *
               C295) *
              C296 +
          ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
             (C5519 + C5518) * C44529) *
                C51016 +
            ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
             (C5884 + C5885) * C44529) *
                C50757) *
               C294 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
             (C181 + C180) * C51082) *
                C50757 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
             (C179 + C178) * C51082) *
                C51016) *
               C293 -
           ((((C117 * C2854 + C50886 * C2857) * C50805 +
              (C117 * C2848 + C50886 * C2853) * C118) *
                 C44529 +
             (C11226 + C11225) * C51083 + (C384 + C383) * C51082) *
                C50757 +
            ((C5523 + C5522) * C44529 + (C5521 + C5520) * C51083 +
             (C382 + C381) * C51082) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51082 +
            (C5712 * C118 + C5713 * C50805) * C51083 +
            (C5714 * C118 + C5715 * C50805) * C44529) *
               C51016 +
           ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
            (C5342 + C5343) * C44529) *
               C50757) *
              C50790 * C113 -
          (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
            (C181 + C180) * C51082) *
               C50757 +
           ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
            (C179 + C178) * C51082) *
               C51016) *
              C50790 * C114 +
          ((C188 * C51082 + C11064 * C51083 + (C5345 + C5344) * C44529) *
               C51016 +
           (C189 * C51082 + (C5348 + C5349) * C51083 +
            (C5350 + C5351) * C44529) *
               C50757) *
              C50790 * C115 -
          ((((C117 * C519 + C50886 * C529) * C50805 +
             (C117 * C499 + C50886 * C518) * C118) *
                C44529 +
            (C11068 + C11067) * C51083 + C190 * C51082) *
               C50757 +
           ((C5351 + C5350) * C44529 + C11065 * C51083 + C191 * C51082) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C51082 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C51083 +
            (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
             C7592 * C489 + C7593 * C486) *
                C44529) *
               C51016 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C51082 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C51083 +
            (C5702 + C5703 - C5726 - C5727 + C5728 + C5729) * C44529) *
               C50757) *
              C50790 * C296 +
          (((C573 - (C532 + C531) + C574 - C575 - C576) * C51082 +
            (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C51083 +
            (C5726 - (C5703 + C5702) + C5727 - C5728 - C5729) * C44529) *
               C51016 +
           ((C577 - (C542 + C541) + C578 - C579 - C580) * C51082 +
            (C11375 - (C11374 + C11373) + C11376 - C11377 - C11378) * C51083 +
            (C5722 * C488 - (C568 * C484 + C567 * C487) + C5723 * C485 -
             (C117 * C5671 + C50886 * C5676) * C489 -
             (C117 * C5677 + C50886 * C5680) * C486) *
                C44529) *
               C50757) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C51083 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C810 + C811 - C812 - C813) * C51082 +
            (C6032 + C6033 - C6034 - C6035) * C51083 +
            (C6036 + C6037 - C6038 - C6039) * C44529) *
               C50757) *
              C50790 * C51074 +
          (((C812 - (C811 + C810) + C813) * C51082 +
            (C6034 - (C6033 + C6032) + C6035) * C51083 +
            (C6038 - (C6037 + C6036) + C6039) * C44529) *
               C51016 +
           ((C816 - (C815 + C814) + C817) * C51082 +
            (C6040 - (C6041 + C6042) + C6043) * C51083 +
            (C6044 - (C6045 + C6046) + C6047) * C44529) *
               C50757) *
              C50790 * C51075 +
          ((C836 * C51082 + C11684 * C51083 +
            (C6046 + C6045 - C6044 - C6047) * C44529) *
               C51016 +
           (C837 * C51082 + (C11681 + C11680 - C11679 - C11682) * C51083 +
            (C571 * C803 + C572 * C51032 -
             (C117 * C1971 + C50886 * C1978) * C804 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C44529) *
               C50757) *
              C50790 * C686)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51082 +
            (C5712 * C118 + C5713 * C50805) * C51083 +
            (C5714 * C118 + C5715 * C50805) * C44529) *
               C51016 +
           ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
            (C5342 + C5343) * C44529) *
               C50757) *
              C50790 * C113 -
          (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
            (C181 + C180) * C51082) *
               C50757 +
           ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
            (C179 + C178) * C51082) *
               C51016) *
              C50790 * C114 +
          ((C188 * C51082 + C11064 * C51083 + (C5345 + C5344) * C44529) *
               C51016 +
           (C189 * C51082 + (C5348 + C5349) * C51083 +
            (C5350 + C5351) * C44529) *
               C50757) *
              C50790 * C115 -
          ((((C117 * C519 + C50886 * C529) * C50805 +
             (C117 * C499 + C50886 * C518) * C118) *
                C44529 +
            (C11068 + C11067) * C51083 + C190 * C51082) *
               C50757 +
           ((C5351 + C5350) * C44529 + C11065 * C51083 + C191 * C51082) *
               C51016) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51082 +
             (C5712 * C118 + C5713 * C50805) * C51083 +
             (C5714 * C118 + C5715 * C50805) * C44529) *
                C51016 +
            ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
             (C5342 + C5343) * C44529) *
                C50757) *
               C293 -
           (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
             (C379 + C380) * C51082) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C44529 +
             (C6265 * C50805 + C6264 * C118) * C51083 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51082) *
                C51016) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C51082 +
             (C7170 * C118 + C7171 * C50805) * C51083 +
             (C7172 * C118 + C7173 * C50805) * C44529) *
                C51016 +
            ((C381 + C382) * C51082 + (C5520 + C5521) * C51083 +
             (C5522 + C5523) * C44529) *
                C50757) *
               C295) *
              C296 +
          ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
             (C5519 + C5518) * C44529) *
                C51016 +
            ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
             (C5884 + C5885) * C44529) *
                C50757) *
               C294 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
             (C181 + C180) * C51082) *
                C50757 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
             (C179 + C178) * C51082) *
                C51016) *
               C293 -
           ((((C117 * C2854 + C50886 * C2857) * C50805 +
              (C117 * C2848 + C50886 * C2853) * C118) *
                 C44529 +
             (C11226 + C11225) * C51083 + (C384 + C383) * C51082) *
                C50757 +
            ((C5523 + C5522) * C44529 + (C5521 + C5520) * C51083 +
             (C382 + C381) * C51082) *
                C51016) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50886 * C126) * C118 +
                       (C117 * C127 + C50886 * C140) * C50805) *
                          C51082 +
                      (C5712 * C118 + C5713 * C50805) * C51083 +
                      (C5714 * C118 + C5715 * C50805) * C44529) *
                         C51016 +
                     ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
                      (C5342 + C5343) * C44529) *
                         C50757) *
                        C51076 -
                    (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
                      (C379 + C380) * C51082) *
                         C50757 +
                     ((C6267 * C50805 + C6266 * C118) * C44529 +
                      (C6265 * C50805 + C6264 * C118) * C51083 +
                      ((C117 * C314 + C50886 * C331) * C50805 +
                       (C117 * C301 + C50886 * C315) * C118) *
                          C51082) *
                         C51016) *
                        C51077 +
                    ((((C117 * C302 + C50886 * C316) * C118 +
                       (C117 * C317 + C50886 * C332) * C50805) *
                          C51082 +
                      (C7170 * C118 + C7171 * C50805) * C51083 +
                      (C7172 * C118 + C7173 * C50805) * C44529) *
                         C51016 +
                     ((C381 + C382) * C51082 + (C5520 + C5521) * C51083 +
                      (C5522 + C5523) * C44529) *
                         C50757) *
                        C1423) *
                       C51023 +
                   ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
                      (C5519 + C5518) * C44529) *
                         C51016 +
                     ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
                      (C5884 + C5885) * C44529) *
                         C50757) *
                        C51077 -
                    (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
                      (C181 + C180) * C51082) *
                         C50757 +
                     ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
                      (C179 + C178) * C51082) *
                         C51016) *
                        C51076 -
                    ((((C117 * C2854 + C50886 * C2857) * C50805 +
                       (C117 * C2848 + C50886 * C2853) * C118) *
                          C44529 +
                      (C11226 + C11225) * C51083 + (C384 + C383) * C51082) *
                         C50757 +
                     ((C5523 + C5522) * C44529 + (C5521 + C5520) * C51083 +
                      (C382 + C381) * C51082) *
                         C51016) *
                        C1423) *
                       C50778)) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C51083 +
            (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C810 + C811 - C812 - C813) * C51082 +
            (C6032 + C6033 - C6034 - C6035) * C51083 +
            (C6036 + C6037 - C6038 - C6039) * C44529) *
               C50757) *
              C51076 +
          (((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C51082 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C51083 +
            (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                C44529) *
               C51016 +
           ((C1014 - (C992 + C993) + C1015) * C51082 +
            (C6254 - (C6255 + C6256) + C6257) * C51083 +
            (C6270 - (C6260 + C6261) + C6271) * C44529) *
               C50757) *
              C51077 +
          ((((C117 * C302 + C50886 * C316) * C803 +
             (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
             C7171 * C50869) *
                C51082 +
            (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
                C51083 +
            (C7172 * C803 + C7173 * C51032 - C40338 * C804 - C40339 * C50869) *
                C44529) *
               C51016 +
           ((C369 * C803 + C370 * C51032 - C5514 * C804 - C5515 * C50869) *
                C51082 +
            (C5514 * C803 + C5515 * C51032 - C5516 * C804 - C5517 * C50869) *
                C51083 +
            (C5516 * C803 + C5517 * C51032 -
             (C117 * C4738 + C50886 * C4744) * C804 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C44529) *
               C50757) *
              C1423) *
         C50773) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51082 +
            (C5712 * C118 + C5713 * C50805) * C51083 +
            (C5714 * C118 + C5715 * C50805) * C44529) *
               C51016 +
           ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
            (C5342 + C5343) * C44529) *
               C50757) *
              C1188 -
          (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
            (C379 + C380) * C51082) *
               C50757 +
           ((C6267 * C50805 + C6266 * C118) * C44529 +
            (C6265 * C50805 + C6264 * C118) * C51083 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C51082) *
               C51016) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C51082 +
            (C7170 * C118 + C7171 * C50805) * C51083 +
            (C7172 * C118 + C7173 * C50805) * C44529) *
               C51016 +
           ((C381 + C382) * C51082 + (C5520 + C5521) * C51083 +
            (C5522 + C5523) * C44529) *
               C50757) *
              C1190 -
          ((((C117 * C3849 + C50886 * C3851) * C50805 +
             (C117 * C3845 + C50886 * C3848) * C118) *
                C44529 +
            ((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C51083 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C51082) *
               C50757 +
           (((C117 * C3847 + C50886 * C3850) * C50805 +
             (C117 * C3844 + C50886 * C3846) * C118) *
                C44529 +
            ((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C51083 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C51082) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51082 +
             (C5712 * C118 + C5713 * C50805) * C51083 +
             (C5714 * C118 + C5715 * C50805) * C44529) *
                C51016 +
            ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
             (C5342 + C5343) * C44529) *
                C50757) *
               C1117 -
           (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
             (C379 + C380) * C51082) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C44529 +
             (C6265 * C50805 + C6264 * C118) * C51083 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51082) *
                C51016) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
             (C5519 + C5518) * C44529) *
                C51016 +
            ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
             (C5884 + C5885) * C44529) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
             (C181 + C180) * C51082) *
                C50757 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
             (C179 + C178) * C51082) *
                C51016) *
               C1117) *
              C1120 +
          (((C188 * C51082 + C11064 * C51083 + (C5345 + C5344) * C44529) *
                C51016 +
            (C189 * C51082 + (C5348 + C5349) * C51083 +
             (C5350 + C5351) * C44529) *
                C50757) *
               C1117 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C44529 +
             (C11528 + C11527) * C51083 + C692 * C51082) *
                C50757 +
            ((C5885 + C5884) * C44529 + C11525 * C51083 + C693 * C51082) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C51082 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C51083 +
            (C5714 * C487 + C5715 * C484 - C5716 * C488 - C5717 * C485 +
             C7592 * C489 + C7593 * C486) *
                C44529) *
               C51016 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C51082 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C51083 +
            (C5702 + C5703 - C5726 - C5727 + C5728 + C5729) * C44529) *
               C50757) *
              C1117 +
          (((C6264 * C488 -
             ((C117 * C314 + C50886 * C331) * C484 +
              (C117 * C301 + C50886 * C315) * C487) +
             C6265 * C485 - C6266 * C489 - C6267 * C486) *
                C51082 +
            (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
             C6674 * C489 - C6675 * C486) *
                C51083 +
            (C6674 * C488 - (C6267 * C484 + C6266 * C487) + C6675 * C485 -
             C40006 * C489 - C40007 * C486) *
                C44529) *
               C51016 +
           ((C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
             C5513 * C489 - C5512 * C486) *
                C51082 +
            (C5513 * C488 - (C1009 * C484 + C1008 * C487) + C5512 * C485 -
             C6268 * C489 - C6269 * C486) *
                C51083 +
            (C6268 * C488 - (C5512 * C484 + C5513 * C487) + C6269 * C485 -
             (C117 * C6662 + C50886 * C6665) * C489 -
             (C117 * C6666 + C50886 * C6668) * C486) *
                C44529) *
               C50757) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C51082 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C51083 +
             (C5714 * C803 + C5715 * C51032 - C5716 * C804 - C5717 * C50869) *
                 C44529) *
                C51016 +
            ((C810 + C811 - C812 - C813) * C51082 +
             (C6032 + C6033 - C6034 - C6035) * C51083 +
             (C6036 + C6037 - C6038 - C6039) * C44529) *
                C50757) *
               C1117 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C51082 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C51083 +
             (C6674 * C804 - (C6267 * C51032 + C6266 * C803) + C6675 * C50869) *
                 C44529) *
                C51016 +
            ((C1014 - (C992 + C993) + C1015) * C51082 +
             (C6254 - (C6255 + C6256) + C6257) * C51083 +
             (C6270 - (C6260 + C6261) + C6271) * C44529) *
                C50757) *
               C50841) *
              C51023 +
          ((((C812 - (C811 + C810) + C813) * C51082 +
             (C6034 - (C6033 + C6032) + C6035) * C51083 +
             (C6038 - (C6037 + C6036) + C6039) * C44529) *
                C51016 +
            ((C816 - (C815 + C814) + C817) * C51082 +
             (C6040 - (C6041 + C6042) + C6043) * C51083 +
             (C6044 - (C6045 + C6046) + C6047) * C44529) *
                C50757) *
               C1117 +
           (((C993 + C992 - C1014 - C1015) * C51082 +
             (C6256 + C6255 - C6254 - C6257) * C51083 +
             (C6261 + C6260 - C6270 - C6271) * C44529) *
                C51016 +
            ((C999 + C998 - C1016 - C1017) * C51082 +
             (C11883 + C11882 - C11881 - C11884) * C51083 +
             (C5882 * C803 + C5883 * C51032 -
              (C117 * C6241 + C50886 * C6242) * C804 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C44529) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C51082 +
             (C5712 * C118 + C5713 * C50805) * C51083 +
             (C5714 * C118 + C5715 * C50805) * C44529) *
                C51016 +
            ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
             (C5342 + C5343) * C44529) *
                C50757) *
               C1117 -
           (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
             (C379 + C380) * C51082) *
                C50757 +
            ((C6267 * C50805 + C6266 * C118) * C44529 +
             (C6265 * C50805 + C6264 * C118) * C51083 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C51082) *
                C51016) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C51082 + (C5503 + C5502) * C51083 +
             (C5519 + C5518) * C44529) *
                C51016 +
            ((C378 + C377) * C51082 + (C5876 + C5877) * C51083 +
             (C5884 + C5885) * C44529) *
                C50757) *
               C50841 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51083 +
             (C181 + C180) * C51082) *
                C50757 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51083 +
             (C179 + C178) * C51082) *
                C51016) *
               C1117) *
              C1120 +
          (((C188 * C51082 + C11064 * C51083 + (C5345 + C5344) * C44529) *
                C51016 +
            (C189 * C51082 + (C5348 + C5349) * C51083 +
             (C5350 + C5351) * C44529) *
                C50757) *
               C1117 -
           ((((C117 * C1318 + C50886 * C1322) * C50805 +
              (C117 * C1310 + C50886 * C1317) * C118) *
                 C44529 +
             (C11528 + C11527) * C51083 + C692 * C51082) *
                C50757 +
            ((C5885 + C5884) * C44529 + C11525 * C51083 + C693 * C51082) *
                C51016) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C51082 +
            (C5712 * C118 + C5713 * C50805) * C51083 +
            (C5714 * C118 + C5715 * C50805) * C44529) *
               C51016 +
           ((C178 + C179) * C51082 + (C5340 + C5341) * C51083 +
            (C5342 + C5343) * C44529) *
               C50757) *
              C1188 -
          (((C5518 + C5519) * C44529 + (C5502 + C5503) * C51083 +
            (C379 + C380) * C51082) *
               C50757 +
           ((C6267 * C50805 + C6266 * C118) * C44529 +
            (C6265 * C50805 + C6264 * C118) * C51083 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C51082) *
               C51016) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C51082 +
            (C7170 * C118 + C7171 * C50805) * C51083 +
            (C7172 * C118 + C7173 * C50805) * C44529) *
               C51016 +
           ((C381 + C382) * C51082 + (C5520 + C5521) * C51083 +
            (C5522 + C5523) * C44529) *
               C50757) *
              C1190 -
          ((((C117 * C3849 + C50886 * C3851) * C50805 +
             (C117 * C3845 + C50886 * C3848) * C118) *
                C44529 +
            ((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C51083 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C51082) *
               C50757 +
           (((C117 * C3847 + C50886 * C3850) * C50805 +
             (C117 * C3844 + C50886 * C3846) * C118) *
                C44529 +
            ((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C51083 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C51082) *
               C51016) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C1770 +
              (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
              C5713 * C50869) *
                 C51082 +
             (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                 C51083 +
             (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                 C44529) *
                C51016 +
            ((C1773 + C1774 - C1775 - C1776) * C51082 +
             (C7320 + C7321 - C7322 - C7323) * C51083 +
             (C7324 + C7325 - C7326 - C7327) * C44529) *
                C50757) *
               C51031 +
           (((C6264 * C1771 -
              ((C117 * C314 + C50886 * C331) * C1768 +
               (C117 * C301 + C50886 * C315) * C1770) +
              C6265 * C50869) *
                 C51082 +
             (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
              C6267 * C50869) *
                 C51083 +
             (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) +
              C6675 * C50869) *
                 C44529) *
                C51016 +
            ((C2115 - (C2116 + C2117) + C2118) * C51082 +
             (C7788 - (C7789 + C7790) + C7791) * C51083 +
             (C7792 - (C7793 + C7794) + C7795) * C44529) *
                C50757) *
               C50841) *
              C51023 +
          ((((C1775 - (C1774 + C1773) + C1776) * C51082 +
             (C7322 - (C7321 + C7320) + C7323) * C51083 +
             (C7326 - (C7325 + C7324) + C7327) * C44529) *
                C51016 +
            ((C1779 - (C1778 + C1777) + C1780) * C51082 +
             (C7328 - (C7329 + C7330) + C7331) * C51083 +
             (C7332 - (C7333 + C7334) + C7335) * C44529) *
                C50757) *
               C51031 +
           (((C2117 + C2116 - C2115 - C2118) * C51082 +
             (C7790 + C7789 - C7788 - C7791) * C51083 +
             (C7794 + C7793 - C7792 - C7795) * C44529) *
                C51016 +
            ((C2121 + C2120 - C2119 - C2122) * C51082 +
             (C13357 + C13356 - C13355 - C13358) * C51083 +
             (C5882 * C1770 + C5883 * C1768 -
              (C117 * C6241 + C50886 * C6242) * C1771 -
              (C117 * C6243 + C50886 * C6244) * C50869) *
                 C44529) *
                C50757) *
               C50841) *
              C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50886 * C126) * C2227 +
                      (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
                      C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                         C51082 +
                     (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 -
                      C5715 * C51079 + C5716 * C2229 + C5717 * C2226) *
                         C51083 +
                     (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 -
                      C5717 * C51079 + C7592 * C2229 + C7593 * C2226) *
                         C44529) *
                        C51016 +
                    ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C51082 +
                     (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C51083 +
                     (C7948 + C7949 - C7950 - C7951 + C7952 + C7953) * C44529) *
                        C50757) *
                       C51031 +
                   (((C6264 * C2228 -
                      ((C117 * C314 + C50886 * C331) * C51078 +
                       (C117 * C301 + C50886 * C315) * C2227) +
                      C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
                         C51082 +
                     (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) +
                      C6267 * C51079 - C6674 * C2229 - C6675 * C2226) *
                         C51083 +
                     (C6674 * C2228 - (C6267 * C51078 + C6266 * C2227) +
                      C6675 * C51079 - C40006 * C2229 - C40007 * C2226) *
                         C44529) *
                        C51016 +
                    ((C1008 * C2228 - (C367 * C51078 + C368 * C2227) +
                      C1009 * C51079 - C5513 * C2229 - C5512 * C2226) *
                         C51082 +
                     (C5513 * C2228 - (C1009 * C51078 + C1008 * C2227) +
                      C5512 * C51079 - C6268 * C2229 - C6269 * C2226) *
                         C51083 +
                     (C6268 * C2228 - (C5512 * C51078 + C5513 * C2227) +
                      C6269 * C51079 - (C117 * C6662 + C50886 * C6665) * C2229 -
                      (C117 * C6666 + C50886 * C6668) * C2226) *
                         C44529) *
                        C50757) *
                       C50841) *
                  C50773) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C51083 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C1773 + C1774 - C1775 - C1776) * C51082 +
            (C7320 + C7321 - C7322 - C7323) * C51083 +
            (C7324 + C7325 - C7326 - C7327) * C44529) *
               C50757) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C51082 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C51083 +
            (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
                C44529) *
               C51016 +
           ((C2115 - (C2116 + C2117) + C2118) * C51082 +
            (C7788 - (C7789 + C7790) + C7791) * C51083 +
            (C7792 - (C7793 + C7794) + C7795) * C44529) *
               C50757) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C51082 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C51083 +
            (C7172 * C1770 + C7173 * C1768 - C40338 * C1771 - C40339 * C50869) *
                C44529) *
               C51016 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C51082 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C51083 +
            (C5516 * C1770 + C5517 * C1768 -
             (C117 * C4738 + C50886 * C4744) * C1771 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C44529) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C51083 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C1773 + C1774 - C1775 - C1776) * C51082 +
            (C7320 + C7321 - C7322 - C7323) * C51083 +
            (C7324 + C7325 - C7326 - C7327) * C44529) *
               C50757) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C51082 +
            (C7322 - (C7321 + C7320) + C7323) * C51083 +
            (C7326 - (C7325 + C7324) + C7327) * C44529) *
               C51016 +
           ((C1779 - (C1778 + C1777) + C1780) * C51082 +
            (C7328 - (C7329 + C7330) + C7331) * C51083 +
            (C7332 - (C7333 + C7334) + C7335) * C44529) *
               C50757) *
              C50790 * C1120 +
          ((C1793 * C51082 + C12914 * C51083 +
            (C7334 + C7333 - C7332 - C7335) * C44529) *
               C51016 +
           (C1794 * C51082 + (C12911 + C12910 - C12909 - C12912) * C51083 +
            (C571 * C1770 + C572 * C1768 -
             (C117 * C1971 + C50886 * C1978) * C1771 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C44529) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1964 +
            (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
            C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
            C5717 * C1963) *
               C51082 +
           (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
            C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
               C51083 +
           (C5714 * C1964 + C5715 * C1960 - C5716 * C1965 - C5717 * C1961 +
            C7592 * C1966 + C7593 * C1962 - C40610 * C1967 - C40611 * C1963) *
               C44529) *
              C51016 +
          ((C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
            C563 * C1966 + C564 * C1962 - C5718 * C1967 - C5719 * C1963) *
               C51082 +
           (C561 * C1964 + C562 * C1960 - C563 * C1965 - C564 * C1961 +
            C5718 * C1966 + C5719 * C1962 - C5720 * C1967 - C5721 * C1963) *
               C51083 +
           (C563 * C1964 + C564 * C1960 - C5718 * C1965 - C5719 * C1961 +
            C5720 * C1966 + C5721 * C1962 -
            (C117 * C7580 + C50886 * C7583) * C1967 -
            (C117 * C7584 + C50886 * C7586) * C1963) *
               C44529) *
              C50757) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C51082 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C51083 +
            (C5714 * C2227 + C5715 * C51078 - C5716 * C2228 - C5717 * C51079 +
             C7592 * C2229 + C7593 * C2226) *
                C44529) *
               C51016 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C51082 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C51083 +
            (C7948 + C7949 - C7950 - C7951 + C7952 + C7953) * C44529) *
               C50757) *
              C50790 * C51023 +
          (((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C51082 +
            (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C51083 +
            (C7950 - (C7949 + C7948) + C7951 - C7952 - C7953) * C44529) *
               C51016 +
           ((C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C51082 +
            (C13507 - (C13506 + C13505) + C13508 - C13509 - C13510) * C51083 +
            (C5722 * C2228 - (C568 * C51078 + C567 * C2227) + C5723 * C51079 -
             (C117 * C5671 + C50886 * C5676) * C2229 -
             (C117 * C5677 + C50886 * C5680) * C2226) *
                C44529) *
               C50757) *
              C50790 * C50778)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C51083 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C1773 + C1774 - C1775 - C1776) * C51082 +
            (C7320 + C7321 - C7322 - C7323) * C51083 +
            (C7324 + C7325 - C7326 - C7327) * C44529) *
               C50757) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C51082 +
            (C7322 - (C7321 + C7320) + C7323) * C51083 +
            (C7326 - (C7325 + C7324) + C7327) * C44529) *
               C51016 +
           ((C1779 - (C1778 + C1777) + C1780) * C51082 +
            (C7328 - (C7329 + C7330) + C7331) * C51083 +
            (C7332 - (C7333 + C7334) + C7335) * C44529) *
               C50757) *
              C50790 * C1120 +
          ((C1793 * C51082 + C12914 * C51083 +
            (C7334 + C7333 - C7332 - C7335) * C44529) *
               C51016 +
           (C1794 * C51082 + (C12911 + C12910 - C12909 - C12912) * C51083 +
            (C571 * C1770 + C572 * C1768 -
             (C117 * C1971 + C50886 * C1978) * C1771 -
             (C117 * C1979 + C50886 * C1983) * C50869) *
                C44529) *
               C50757) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C51082 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C51083 +
            (C5714 * C1770 + C5715 * C1768 - C5716 * C1771 - C5717 * C50869) *
                C44529) *
               C51016 +
           ((C1773 + C1774 - C1775 - C1776) * C51082 +
            (C7320 + C7321 - C7322 - C7323) * C51083 +
            (C7324 + C7325 - C7326 - C7327) * C44529) *
               C50757) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C51082 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C51083 +
            (C6674 * C1771 - (C6267 * C1768 + C6266 * C1770) + C6675 * C50869) *
                C44529) *
               C51016 +
           ((C2115 - (C2116 + C2117) + C2118) * C51082 +
            (C7788 - (C7789 + C7790) + C7791) * C51083 +
            (C7792 - (C7793 + C7794) + C7795) * C44529) *
               C50757) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C51082 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C51083 +
            (C7172 * C1770 + C7173 * C1768 - C40338 * C1771 - C40339 * C50869) *
                C44529) *
               C51016 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C51082 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C51083 +
            (C5516 * C1770 + C5517 * C1768 -
             (C117 * C4738 + C50886 * C4744) * C1771 -
             (C117 * C4746 + C50886 * C4750) * C50869) *
                C44529) *
               C50757) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C51031 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C50841) *
              C51074 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C50841 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C51031) *
              C51075 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
               C51031 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C33864) *
                C17372 +
            ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
            C34313 * C17370) *
               C50841) *
              C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C51031 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C51074 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C51031) *
              C51075 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C51031 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C810 + C811 - C812 - C813) * C33864 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C17371 +
            C34462 * C17372) *
               C51031 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C1014 - (C992 + C993) + C1015) * C33864 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C17371 +
            ((C1016 - (C998 + C999) + C1017) * C33864 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C17372) *
               C50841) *
              C296 +
          ((((C812 - (C811 + C810) + C813) * C33864 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C17370 +
            ((C816 - (C815 + C814) + C817) * C33864 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C17371 +
            ((C820 - (C819 + C818) + C821) * C33864 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C17372) *
               C51031 +
           (((C993 + C992 - C1014 - C1015) * C33864 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C17370 +
            ((C999 + C998 - C1016 - C1017) * C33864 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C17371 +
            ((C1005 + C1004 - C1018 - C1019) * C33864 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C36826 + C36827 + C36828) * C804 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C803 +
             (C36831 + C36830 + C36829) * C51032 -
             (C36834 + C36833 + C36832) * C804 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C37336 + C37337 + C37338) * C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C2449 * C1307 + C2444 * C1311 + C2450 * C2846 + C2445 * C2849 +
              C2451 * C3844 + C2446 * C3846) *
                 C804 -
             ((C37341 + C37340 + C37339) * C51032 +
              (C37338 + C37337 + C37336) * C803) +
             (C2449 * C1312 + C2444 * C1319 + C2450 * C2850 + C2445 * C2855 +
              C2451 * C3847 + C2446 * C3850) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C296 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C804 -
             ((C2886 + C2887 + C2888) * C51032 +
              (C2883 + C2884 + C2885) * C803) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C803 + (C3444 + C3445 + C3446) * C51032 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C804 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C293 -
           ((C11525 * C50966 + C693 * C33864) * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C33864 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C17370 +
            ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
            ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
               C295) *
              C296 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C294 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C293 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C33864) *
                C17372 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C50790 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
              C50790 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
              C50790 * C115 -
          ((((C117 * C807 + C50886 * C808) * C50805 +
             (C117 * C805 + C50886 * C806) * C118) *
                C50966 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50966 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C33864 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C17370 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C33864 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C17371 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C33864 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C17372) *
              C50790 * C296 +
          (((C573 - (C532 + C531) + C574 - C575 - C576) * C33864 +
            (C5696 - (C5695 + C5694) + C5697 - C5724 - C5725) * C50966) *
               C17370 +
           ((C577 - (C542 + C541) + C578 - C579 - C580) * C33864 +
            (C11375 - (C11374 + C11373) + C11376 - C11377 - C11378) * C50966) *
               C17371 +
           ((C581 - (C552 + C551) + C582 - C583 - C584) * C33864 +
            (C571 * C488 - (C570 * C484 + C569 * C487) + C572 * C485 -
             (C117 * C1971 + C50886 * C1978) * C489 -
             (C117 * C1979 + C50886 * C1983) * C486) *
                C50966) *
               C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
             C2451 * C1654 + C2446 * C1658) *
                C118 +
            (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
             C2451 * C1659 + C2446 * C1666) *
                C50805) *
               C50966) *
              C50752 * C50790 * C113 -
          (((C2886 + C2887 + C2888) * C50805 + (C2883 + C2884 + C2885) * C118) *
               C50966 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50752 * C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C33864 +
           ((C3217 + C3218 + C3219) * C118 + (C3220 + C3221 + C3222) * C50805) *
               C50966) *
              C50752 * C50790 * C115 -
          (((C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50805 +
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C118) *
               C50966 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
              C2451 * C1654 + C2446 * C1658) *
                 C118 +
             (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
              C2451 * C1659 + C2446 * C1666) *
                 C50805) *
                C50966) *
               C50752 * C293 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C294 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C293 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C36826 + C36827 + C36828) * C488 -
            (C36829 + C36830 + C36831) * C485 +
            (C36832 + C36833 + C36834) * C489 +
            (C36835 + C36836 + C36837) * C486) *
               C33864 +
           ((C36828 + C36827 + C36826) * C487 +
            (C36831 + C36830 + C36829) * C484 -
            (C36834 + C36833 + C36832) * C488 -
            (C36837 + C36836 + C36835) * C485 +
            (C2449 * C1968 + C2444 * C1972 + C2450 * C4737 + C2445 * C4741 +
             C2451 * C4736 + C2446 * C4740) *
                C489 +
            (C2449 * C1973 + C2444 * C1980 + C2450 * C4743 + C2445 * C4749 +
             C2451 * C4742 + C2446 * C4748) *
                C486) *
               C50966) *
              C50752 * C50790 * C296 +
          (((C2885 + C2884 + C2883) * C488 -
            ((C2494 + C2493 + C2492) * C484 + (C2491 + C2490 + C2489) * C487) +
            (C2888 + C2887 + C2886) * C485 - (C2891 + C2890 + C2889) * C489 -
            (C2894 + C2893 + C2892) * C486) *
               C33864 +
           ((C2889 + C2890 + C2891) * C488 -
            ((C2886 + C2887 + C2888) * C484 + (C2883 + C2884 + C2885) * C487) +
            (C2892 + C2893 + C2894) * C485 -
            (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
             C2449 * C1969 + C2444 * C1974) *
                C489 -
            (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
             C2449 * C1975 + C2444 * C1981) *
                C486) *
               C50966) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C810 + C811 - C812 - C813) * C33864 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C17371 +
           C34462 * C17372) *
              C50790 * C51074 +
          (((C812 - (C811 + C810) + C813) * C33864 +
            (C6034 - (C6033 + C6032) + C6035) * C50966) *
               C17370 +
           ((C816 - (C815 + C814) + C817) * C33864 +
            (C6040 - (C6041 + C6042) + C6043) * C50966) *
               C17371 +
           ((C820 - (C819 + C818) + C821) * C33864 +
            (C11679 - (C11680 + C11681) + C11682) * C50966) *
               C17372) *
              C50790 * C51075 +
          (C34462 * C17370 +
           (C837 * C33864 + (C11681 + C11680 - C11679 - C11682) * C50966) *
               C17371 +
           ((C825 + C824 - C834 - C835) * C33864 +
            (C830 * C803 + C831 * C51032 -
             (C117 * C499 + C50886 * C518) * C804 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C17372) *
              C50790 * C686)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C36826 + C36827 + C36828) * C804 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C803 +
            (C36831 + C36830 + C36829) * C51032 -
            (C36834 + C36833 + C36832) * C804 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C51074 +
          (((C2885 + C2884 + C2883) * C804 -
            ((C2494 + C2493 + C2492) * C51032 +
             (C2491 + C2490 + C2489) * C803) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C804 -
            ((C2886 + C2887 + C2888) * C51032 +
             (C2883 + C2884 + C2885) * C803) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C51075 +
          (((C2500 + C2499 + C2498) * C803 + (C2497 + C2496 + C2495) * C51032 -
            (C3219 + C3218 + C3217) * C804 - (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C803 + (C3220 + C3221 + C3222) * C51032 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C804 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C686)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C50790 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
              C50790 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
              C50790 * C115 -
          ((((C117 * C807 + C50886 * C808) * C50805 +
             (C117 * C805 + C50886 * C806) * C118) *
                C50966 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50966 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50790 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C293 -
           ((C11525 * C50966 + C693 * C33864) * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C294 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C33864 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C17370 +
            ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
            ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
               C295) *
              C296 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C294 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C293 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C33864) *
                C17372 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
               C295) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
             C2451 * C1654 + C2446 * C1658) *
                C118 +
            (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
             C2451 * C1659 + C2446 * C1666) *
                C50805) *
               C50966) *
              C50752 * C50790 * C113 -
          (((C2886 + C2887 + C2888) * C50805 + (C2883 + C2884 + C2885) * C118) *
               C50966 +
           ((C2494 + C2493 + C2492) * C50805 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50752 * C50790 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50805) *
               C33864 +
           ((C3217 + C3218 + C3219) * C118 + (C3220 + C3221 + C3222) * C50805) *
               C50966) *
              C50752 * C50790 * C115 -
          (((C2451 * C1665 + C2446 * C1669 + C2450 * C981 + C2445 * C987 +
             C2449 * C513 + C2444 * C526) *
                C50805 +
            (C2451 * C1657 + C2446 * C1664 + C2450 * C972 + C2445 * C980 +
             C2449 * C496 + C2444 * C512) *
                C118) *
               C50966 +
           ((C2506 + C2505 + C2504) * C50805 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50752 * C50790 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C2449 * C490 + C2444 * C500 + C2450 * C969 + C2445 * C974 +
              C2451 * C1654 + C2446 * C1658) *
                 C118 +
             (C2449 * C501 + C2444 * C520 + C2450 * C975 + C2445 * C984 +
              C2451 * C1659 + C2446 * C1666) *
                 C50805) *
                C50966) *
               C50752 * C293 -
           (((C2451 * C3420 + C2446 * C3425 + C2450 * C1659 + C2445 * C1666 +
              C2449 * C975 + C2444 * C984) *
                 C50805 +
             (C2451 * C3416 + C2446 * C3419 + C2450 * C1654 + C2445 * C1658 +
              C2449 * C969 + C2444 * C974) *
                 C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C294 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C295) *
              C296 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C294 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C293 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C295) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C51076 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C51077 +
           ((((C117 * C302 + C50886 * C316) * C118 +
              (C117 * C317 + C50886 * C332) * C50805) *
                 C33864 +
             (C7170 * C118 + C7171 * C50805) * C50966) *
                C17370 +
            ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
            ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
               C1423) *
              C51023 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C51077 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C51076 -
           ((((C117 * C1665 + C50886 * C1669) * C50805 +
              (C117 * C1657 + C50886 * C1664) * C118) *
                 C50966 +
             (C386 + C385) * C33864) *
                C17372 +
            ((C11226 + C11225) * C50966 + (C384 + C383) * C33864) * C17371 +
            ((C5521 + C5520) * C50966 + (C382 + C381) * C33864) * C17370) *
               C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C51076 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C51077 +
           (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
              C2451 * C2652 + C2446 * C2655) *
                 C118 +
             (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
              C2451 * C2656 + C2446 * C2661) *
                 C50805) *
                C33864 +
            ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
              C2451 * C4338 + C2446 * C4340) *
                 C118 +
             (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
              C2451 * C4341 + C2446 * C4344) *
                 C50805) *
                C50966) *
               C50752 * C1423) *
              C51023 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C51077 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C51076 -
           (((C2451 * C4343 + C2446 * C4345 + C2450 * C3422 + C2445 * C3426 +
              C2449 * C1661 + C2444 * C1667) *
                 C50805 +
             (C2451 * C4339 + C2446 * C4342 + C2450 * C3417 + C2445 * C3421 +
              C2449 * C1655 + C2444 * C1660) *
                 C118) *
                C50966 +
            ((C2700 + C2699 + C2698) * C50805 +
             (C2697 + C2696 + C2695) * C118) *
                C33864) *
               C50752 * C1423) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C803 +
             (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C810 + C811 - C812 - C813) * C33864 +
            (C6032 + C6033 - C6034 - C6035) * C50966) *
               C17371 +
           C34462 * C17372) *
              C51076 +
          (((C6264 * C804 -
             ((C117 * C314 + C50886 * C331) * C51032 +
              (C117 * C301 + C50886 * C315) * C803) +
             C6265 * C50869) *
                C33864 +
            (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                C50966) *
               C17370 +
           ((C1014 - (C992 + C993) + C1015) * C33864 +
            (C6254 - (C6255 + C6256) + C6257) * C50966) *
               C17371 +
           ((C1016 - (C998 + C999) + C1017) * C33864 +
            (C11881 - (C11882 + C11883) + C11884) * C50966) *
               C17372) *
              C51077 +
          ((((C117 * C302 + C50886 * C316) * C803 +
             (C117 * C317 + C50886 * C332) * C51032 - C7170 * C804 -
             C7171 * C50869) *
                C33864 +
            (C7170 * C803 + C7171 * C51032 - C7172 * C804 - C7173 * C50869) *
                C50966) *
               C17370 +
           ((C369 * C803 + C370 * C51032 - C5514 * C804 - C5515 * C50869) *
                C33864 +
            (C5514 * C803 + C5515 * C51032 - C5516 * C804 - C5517 * C50869) *
                C50966) *
               C17371 +
           ((C371 * C803 + C372 * C51032 - C11223 * C804 - C11224 * C50869) *
                C33864 +
            (C11223 * C803 + C11224 * C51032 -
             (C117 * C2848 + C50886 * C2853) * C804 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C17372) *
              C1423) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C803 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51032 -
            (C36826 + C36827 + C36828) * C804 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C803 +
            (C36831 + C36830 + C36829) * C51032 -
            (C36834 + C36833 + C36832) * C804 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C51076 +
          (((C37336 + C37337 + C37338) * C804 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51032 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C803) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C804 -
            ((C37341 + C37340 + C37339) * C51032 +
             (C37338 + C37337 + C37336) * C803) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C51077 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C803 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C51032 -
            (C38248 + C38249 + C38250) * C804 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C803 +
            (C38253 + C38252 + C38251) * C51032 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C804 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C1423) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C1188 -
          (C34313 * C17372 +
           ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
           ((C6265 * C50805 + C6264 * C118) * C50966 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C33864) *
               C17370) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C33864 +
            (C7170 * C118 + C7171 * C50805) * C50966) *
               C17370 +
           ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
           ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
              C1190 -
          ((((C117 * C3424 + C50886 * C3427) * C50805 +
             (C117 * C3418 + C50886 * C3423) * C118) *
                C50966 +
            ((C117 * C1199 + C50886 * C1206) * C50805 +
             (C117 * C1194 + C50886 * C1200) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C50966 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C50966 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C33864) *
               C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C1117 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C50841 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C1117) *
              C1120 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
               C1117 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C33864) *
                C17372 +
            ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
            C34313 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C487 +
             (C117 * C127 + C50886 * C140) * C484 - C5712 * C488 -
             C5713 * C485 + C5714 * C489 + C5715 * C486) *
                C33864 +
            (C5712 * C487 + C5713 * C484 - C5714 * C488 - C5715 * C485 +
             C5716 * C489 + C5717 * C486) *
                C50966) *
               C17370 +
           ((C531 + C532 - C573 - C574 + C575 + C576) * C33864 +
            (C5694 + C5695 - C5696 - C5697 + C5724 + C5725) * C50966) *
               C17371 +
           ((C541 + C542 - C577 - C578 + C579 + C580) * C33864 +
            (C11373 + C11374 - C11375 - C11376 + C11377 + C11378) * C50966) *
               C17372) *
              C1117 +
          (((C6264 * C488 -
             ((C117 * C314 + C50886 * C331) * C484 +
              (C117 * C301 + C50886 * C315) * C487) +
             C6265 * C485 - C6266 * C489 - C6267 * C486) *
                C33864 +
            (C6266 * C488 - (C6265 * C484 + C6264 * C487) + C6267 * C485 -
             C6674 * C489 - C6675 * C486) *
                C50966) *
               C17370 +
           ((C1008 * C488 - (C367 * C484 + C368 * C487) + C1009 * C485 -
             C5513 * C489 - C5512 * C486) *
                C33864 +
            (C5513 * C488 - (C1009 * C484 + C1008 * C487) + C5512 * C485 -
             C6268 * C489 - C6269 * C486) *
                C50966) *
               C17371 +
           ((C1010 * C488 - (C365 * C484 + C366 * C487) + C1011 * C485 -
             C5882 * C489 - C5883 * C486) *
                C33864 +
            (C5882 * C488 - (C1011 * C484 + C1010 * C487) + C5883 * C485 -
             (C117 * C6241 + C50886 * C6242) * C489 -
             (C117 * C6243 + C50886 * C6244) * C486) *
                C50966) *
               C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C36828 + C36827 + C36826) * C118 +
            (C36831 + C36830 + C36829) * C50805) *
               C50966) *
              C50752 * C1188 -
          (((C37341 + C37340 + C37339) * C50805 +
            (C37338 + C37337 + C37336) * C118) *
               C50966 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C33864) *
              C50752 * C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C33864 +
           ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
             C2451 * C4338 + C2446 * C4340) *
                C118 +
            (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
             C2451 * C4341 + C2446 * C4344) *
                C50805) *
               C50966) *
              C50752 * C1190 -
          (((C2451 * C21328 + C2446 * C21329 + C2450 * C4341 + C2445 * C4344 +
             C2449 * C3420 + C2444 * C3425) *
                C50805 +
            (C2451 * C21326 + C2446 * C21327 + C2450 * C4338 + C2445 * C4340 +
             C2449 * C3416 + C2444 * C3419) *
                C118) *
               C50966 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C33864) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C487 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C484 -
            (C36826 + C36827 + C36828) * C488 -
            (C36829 + C36830 + C36831) * C485 +
            (C36832 + C36833 + C36834) * C489 +
            (C36835 + C36836 + C36837) * C486) *
               C33864 +
           ((C36828 + C36827 + C36826) * C487 +
            (C36831 + C36830 + C36829) * C484 -
            (C36834 + C36833 + C36832) * C488 -
            (C36837 + C36836 + C36835) * C485 +
            (C2449 * C1968 + C2444 * C1972 + C2450 * C4737 + C2445 * C4741 +
             C2451 * C4736 + C2446 * C4740) *
                C489 +
            (C2449 * C1973 + C2444 * C1980 + C2450 * C4743 + C2445 * C4749 +
             C2451 * C4742 + C2446 * C4748) *
                C486) *
               C50966) *
              C50752 * C1117 +
          (((C37336 + C37337 + C37338) * C488 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C484 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C487) +
            (C37339 + C37340 + C37341) * C485 -
            (C37744 + C37745 + C37746) * C489 -
            (C37747 + C37748 + C37749) * C486) *
               C33864 +
           ((C37746 + C37745 + C37744) * C488 -
            ((C37341 + C37340 + C37339) * C484 +
             (C37338 + C37337 + C37336) * C487) +
            (C37749 + C37748 + C37747) * C485 -
            (C2451 * C21592 + C2446 * C21593 + C2450 * C4736 + C2445 * C4740 +
             C2449 * C4737 + C2444 * C4741) *
                C489 -
            (C2451 * C21594 + C2446 * C21595 + C2450 * C4742 + C2445 * C4748 +
             C2449 * C4743 + C2444 * C4749) *
                C486) *
               C50966) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C803 +
              (C117 * C127 + C50886 * C140) * C51032 - C5712 * C804 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C803 + C5713 * C51032 - C5714 * C804 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C810 + C811 - C812 - C813) * C33864 +
             (C6032 + C6033 - C6034 - C6035) * C50966) *
                C17371 +
            C34462 * C17372) *
               C1117 +
           (((C6264 * C804 -
              ((C117 * C314 + C50886 * C331) * C51032 +
               (C117 * C301 + C50886 * C315) * C803) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C804 - (C6265 * C51032 + C6264 * C803) + C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C1014 - (C992 + C993) + C1015) * C33864 +
             (C6254 - (C6255 + C6256) + C6257) * C50966) *
                C17371 +
            ((C1016 - (C998 + C999) + C1017) * C33864 +
             (C11881 - (C11882 + C11883) + C11884) * C50966) *
                C17372) *
               C50841) *
              C51023 +
          ((((C812 - (C811 + C810) + C813) * C33864 +
             (C6034 - (C6033 + C6032) + C6035) * C50966) *
                C17370 +
            ((C816 - (C815 + C814) + C817) * C33864 +
             (C6040 - (C6041 + C6042) + C6043) * C50966) *
                C17371 +
            ((C820 - (C819 + C818) + C821) * C33864 +
             (C11679 - (C11680 + C11681) + C11682) * C50966) *
                C17372) *
               C1117 +
           (((C993 + C992 - C1014 - C1015) * C33864 +
             (C6256 + C6255 - C6254 - C6257) * C50966) *
                C17370 +
            ((C999 + C998 - C1016 - C1017) * C33864 +
             (C11883 + C11882 - C11881 - C11884) * C50966) *
                C17371 +
            ((C1005 + C1004 - C1018 - C1019) * C33864 +
             (C1012 * C803 + C1013 * C51032 -
              (C117 * C1310 + C50886 * C1317) * C804 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C803 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C51032 -
             (C36826 + C36827 + C36828) * C804 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C803 +
             (C36831 + C36830 + C36829) * C51032 -
             (C36834 + C36833 + C36832) * C804 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C1117 +
           (((C37336 + C37337 + C37338) * C804 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C51032 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C803) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C37746 + C37745 + C37744) * C804 -
             ((C37341 + C37340 + C37339) * C51032 +
              (C37338 + C37337 + C37336) * C803) +
             (C37749 + C37748 + C37747) * C50869) *
                C50966) *
               C50752 * C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C804 -
             ((C2494 + C2493 + C2492) * C51032 +
              (C2491 + C2490 + C2489) * C803) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C804 -
             ((C2886 + C2887 + C2888) * C51032 +
              (C2883 + C2884 + C2885) * C803) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C1117 +
           (((C2694 + C2693 + C2692) * C803 + (C2691 + C2690 + C2689) * C51032 -
             (C3443 + C3442 + C3441) * C804 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C803 + (C3444 + C3445 + C3446) * C51032 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C804 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C118 +
              (C117 * C127 + C50886 * C140) * C50805) *
                 C33864 +
             (C5712 * C118 + C5713 * C50805) * C50966) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
            C33871 * C17372) *
               C1117 -
           (C34313 * C17372 +
            ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
            ((C6265 * C50805 + C6264 * C118) * C50966 +
             ((C117 * C314 + C50886 * C331) * C50805 +
              (C117 * C301 + C50886 * C315) * C118) *
                 C33864) *
                C17370) *
               C50841) *
              C1119 +
          ((((C380 + C379) * C33864 + (C5503 + C5502) * C50966) * C17370 +
            ((C378 + C377) * C33864 + (C5876 + C5877) * C50966) * C17371 +
            ((C376 + C375) * C33864 + (C11527 + C11528) * C50966) * C17372) *
               C50841 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50966 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50966 + (C179 + C178) * C33864) * C17370) *
               C1117) *
              C1120 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50966) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50966) * C17372) *
               C1117 -
           ((((C117 * C983 + C50886 * C988) * C50805 +
              (C117 * C973 + C50886 * C982) * C118) *
                 C50966 +
             (C703 + C702) * C33864) *
                C17372 +
            ((C11528 + C11527) * C50966 + C692 * C33864) * C17371 +
            C34313 * C17370) *
               C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C118 +
             (C117 * C127 + C50886 * C140) * C50805) *
                C33864 +
            (C5712 * C118 + C5713 * C50805) * C50966) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50966) * C17371 +
           C33871 * C17372) *
              C1188 -
          (C34313 * C17372 +
           ((C5502 + C5503) * C50966 + (C379 + C380) * C33864) * C17371 +
           ((C6265 * C50805 + C6264 * C118) * C50966 +
            ((C117 * C314 + C50886 * C331) * C50805 +
             (C117 * C301 + C50886 * C315) * C118) *
                C33864) *
               C17370) *
              C1189 +
          ((((C117 * C302 + C50886 * C316) * C118 +
             (C117 * C317 + C50886 * C332) * C50805) *
                C33864 +
            (C7170 * C118 + C7171 * C50805) * C50966) *
               C17370 +
           ((C381 + C382) * C33864 + (C5520 + C5521) * C50966) * C17371 +
           ((C383 + C384) * C33864 + (C11225 + C11226) * C50966) * C17372) *
              C1190 -
          ((((C117 * C3424 + C50886 * C3427) * C50805 +
             (C117 * C3418 + C50886 * C3423) * C118) *
                C50966 +
            ((C117 * C1199 + C50886 * C1206) * C50805 +
             (C117 * C1194 + C50886 * C1200) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3422 + C50886 * C3426) * C50805 +
             (C117 * C3417 + C50886 * C3421) * C118) *
                C50966 +
            ((C117 * C1201 + C50886 * C1207) * C50805 +
             (C117 * C1195 + C50886 * C1202) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3420 + C50886 * C3425) * C50805 +
             (C117 * C3416 + C50886 * C3419) * C118) *
                C50966 +
            ((C117 * C1203 + C50886 * C1208) * C50805 +
             (C117 * C1196 + C50886 * C1204) * C118) *
                C33864) *
               C17370) *
              C1191) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C50805) *
                C33864 +
            ((C36828 + C36827 + C36826) * C118 +
             (C36831 + C36830 + C36829) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C37341 + C37340 + C37339) * C50805 +
             (C37338 + C37337 + C37336) * C118) *
                C50966 +
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C50805 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C118) *
                C33864) *
               C50752 * C50841) *
              C1119 +
          ((((C2694 + C2693 + C2692) * C118 +
             (C2691 + C2690 + C2689) * C50805) *
                C33864 +
            ((C3441 + C3442 + C3443) * C118 +
             (C3444 + C3445 + C3446) * C50805) *
                C50966) *
               C50752 * C50841 -
           (((C2886 + C2887 + C2888) * C50805 +
             (C2883 + C2884 + C2885) * C118) *
                C50966 +
            ((C2494 + C2493 + C2492) * C50805 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50752 * C1117) *
              C1120 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50805) *
                C33864 +
            ((C3217 + C3218 + C3219) * C118 +
             (C3220 + C3221 + C3222) * C50805) *
                C50966) *
               C50752 * C1117 -
           (((C2451 * C3424 + C2446 * C3427 + C2450 * C1663 + C2445 * C1668 +
              C2449 * C979 + C2444 * C986) *
                 C50805 +
             (C2451 * C3418 + C2446 * C3423 + C2450 * C1656 + C2445 * C1662 +
              C2449 * C971 + C2444 * C978) *
                 C118) *
                C50966 +
            ((C3058 + C3057 + C3056) * C50805 +
             (C3055 + C3054 + C3053) * C118) *
                C33864) *
               C50752 * C50841) *
              C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C50805) *
               C33864 +
           ((C36828 + C36827 + C36826) * C118 +
            (C36831 + C36830 + C36829) * C50805) *
               C50966) *
              C50752 * C1188 -
          (((C37341 + C37340 + C37339) * C50805 +
            (C37338 + C37337 + C37336) * C118) *
               C50966 +
           ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
             C2449 * C314 + C2444 * C331) *
                C50805 +
            (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
             C2449 * C301 + C2444 * C315) *
                C118) *
               C33864) *
              C50752 * C1189 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C118 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C50805) *
               C33864 +
           ((C2449 * C1654 + C2444 * C1658 + C2450 * C3416 + C2445 * C3419 +
             C2451 * C4338 + C2446 * C4340) *
                C118 +
            (C2449 * C1659 + C2444 * C1666 + C2450 * C3420 + C2445 * C3425 +
             C2451 * C4341 + C2446 * C4344) *
                C50805) *
               C50966) *
              C50752 * C1190 -
          (((C2451 * C21328 + C2446 * C21329 + C2450 * C4341 + C2445 * C4344 +
             C2449 * C3420 + C2444 * C3425) *
                C50805 +
            (C2451 * C21326 + C2446 * C21327 + C2450 * C4338 + C2445 * C4340 +
             C2449 * C3416 + C2444 * C3419) *
                C118) *
               C50966 +
           ((C2451 * C3694 + C2446 * C3697 + C2450 * C2656 + C2445 * C2661 +
             C2449 * C1203 + C2444 * C1208) *
                C50805 +
            (C2451 * C3691 + C2446 * C3695 + C2450 * C2652 + C2445 * C2655 +
             C2449 * C1196 + C2444 * C1204) *
                C118) *
               C33864) *
              C50752 * C1191) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50886 * C126) * C1770 +
              (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
              C5713 * C50869) *
                 C33864 +
             (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                 C50966) *
                C17370 +
            ((C1773 + C1774 - C1775 - C1776) * C33864 +
             (C7320 + C7321 - C7322 - C7323) * C50966) *
                C17371 +
            C35681 * C17372) *
               C51031 +
           (((C6264 * C1771 -
              ((C117 * C314 + C50886 * C331) * C1768 +
               (C117 * C301 + C50886 * C315) * C1770) +
              C6265 * C50869) *
                 C33864 +
             (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) +
              C6267 * C50869) *
                 C50966) *
                C17370 +
            ((C2115 - (C2116 + C2117) + C2118) * C33864 +
             (C7788 - (C7789 + C7790) + C7791) * C50966) *
                C17371 +
            ((C2119 - (C2120 + C2121) + C2122) * C33864 +
             (C13355 - (C13356 + C13357) + C13358) * C50966) *
                C17372) *
               C50841) *
              C51023 +
          ((((C1775 - (C1774 + C1773) + C1776) * C33864 +
             (C7322 - (C7321 + C7320) + C7323) * C50966) *
                C17370 +
            ((C1779 - (C1778 + C1777) + C1780) * C33864 +
             (C7328 - (C7329 + C7330) + C7331) * C50966) *
                C17371 +
            ((C1783 - (C1782 + C1781) + C1784) * C33864 +
             (C12909 - (C12910 + C12911) + C12912) * C50966) *
                C17372) *
               C51031 +
           (((C2117 + C2116 - C2115 - C2118) * C33864 +
             (C7790 + C7789 - C7788 - C7791) * C50966) *
                C17370 +
            ((C2121 + C2120 - C2119 - C2122) * C33864 +
             (C13357 + C13356 - C13355 - C13358) * C50966) *
                C17371 +
            ((C2125 + C2124 - C2123 - C2126) * C33864 +
             (C1012 * C1770 + C1013 * C1768 -
              (C117 * C1310 + C50886 * C1317) * C1771 -
              (C117 * C1318 + C50886 * C1322) * C50869) *
                 C50966) *
                C17372) *
               C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
              C2451 * C302 + C2446 * C316) *
                 C1770 +
             (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
              C2451 * C317 + C2446 * C332) *
                 C1768 -
             (C36826 + C36827 + C36828) * C1771 -
             (C36829 + C36830 + C36831) * C50869) *
                C33864 +
            ((C36828 + C36827 + C36826) * C1770 +
             (C36831 + C36830 + C36829) * C1768 -
             (C36834 + C36833 + C36832) * C1771 -
             (C36837 + C36836 + C36835) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C37336 + C37337 + C37338) * C1771 -
             ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
               C2449 * C314 + C2444 * C331) *
                  C1768 +
              (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
               C2449 * C301 + C2444 * C315) *
                  C1770) +
             (C37339 + C37340 + C37341) * C50869) *
                C33864 +
            ((C37746 + C37745 + C37744) * C1771 -
             ((C37341 + C37340 + C37339) * C1768 +
              (C37338 + C37337 + C37336) * C1770) +
             (C37749 + C37748 + C37747) * C50869) *
                C50966) *
               C50752 * C50841) *
              C51023 +
          ((((C2885 + C2884 + C2883) * C1771 -
             ((C2494 + C2493 + C2492) * C1768 +
              (C2491 + C2490 + C2489) * C1770) +
             (C2888 + C2887 + C2886) * C50869) *
                C33864 +
            ((C2889 + C2890 + C2891) * C1771 -
             ((C2886 + C2887 + C2888) * C1768 +
              (C2883 + C2884 + C2885) * C1770) +
             (C2892 + C2893 + C2894) * C50869) *
                C50966) *
               C50752 * C51031 +
           (((C2694 + C2693 + C2692) * C1770 + (C2691 + C2690 + C2689) * C1768 -
             (C3443 + C3442 + C3441) * C1771 -
             (C3446 + C3445 + C3444) * C50869) *
                C33864 +
            ((C3441 + C3442 + C3443) * C1770 + (C3444 + C3445 + C3446) * C1768 -
             (C2451 * C3845 + C2446 * C3848 + C2450 * C2847 + C2445 * C2851 +
              C2449 * C1308 + C2444 * C1313) *
                 C1771 -
             (C2451 * C3849 + C2446 * C3851 + C2450 * C2852 + C2445 * C2856 +
              C2449 * C1314 + C2444 * C1320) *
                 C50869) *
                C50966) *
               C50752 * C50841) *
              C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C33864 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C17370 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C33864 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C17371 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C33864 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C17372) *
              C51031 +
          (((C6264 * C2228 -
             ((C117 * C314 + C50886 * C331) * C51078 +
              (C117 * C301 + C50886 * C315) * C2227) +
             C6265 * C51079 - C6266 * C2229 - C6267 * C2226) *
                C33864 +
            (C6266 * C2228 - (C6265 * C51078 + C6264 * C2227) + C6267 * C51079 -
             C6674 * C2229 - C6675 * C2226) *
                C50966) *
               C17370 +
           ((C1008 * C2228 - (C367 * C51078 + C368 * C2227) + C1009 * C51079 -
             C5513 * C2229 - C5512 * C2226) *
                C33864 +
            (C5513 * C2228 - (C1009 * C51078 + C1008 * C2227) + C5512 * C51079 -
             C6268 * C2229 - C6269 * C2226) *
                C50966) *
               C17371 +
           ((C1010 * C2228 - (C365 * C51078 + C366 * C2227) + C1011 * C51079 -
             C5882 * C2229 - C5883 * C2226) *
                C33864 +
            (C5882 * C2228 - (C1011 * C51078 + C1010 * C2227) + C5883 * C51079 -
             (C117 * C6241 + C50886 * C6242) * C2229 -
             (C117 * C6243 + C50886 * C6244) * C2226) *
                C50966) *
               C17372) *
              C50841) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C36826 + C36827 + C36828) * C2228 -
            (C36829 + C36830 + C36831) * C51079 +
            (C36832 + C36833 + C36834) * C2229 +
            (C36835 + C36836 + C36837) * C2226) *
               C33864 +
           ((C36828 + C36827 + C36826) * C2227 +
            (C36831 + C36830 + C36829) * C51078 -
            (C36834 + C36833 + C36832) * C2228 -
            (C36837 + C36836 + C36835) * C51079 +
            (C38658 + C38657 + C38656) * C2229 +
            (C38661 + C38660 + C38659) * C2226) *
               C50966) *
              C50752 * C51031 +
          (((C37336 + C37337 + C37338) * C2228 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C51078 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C2227) +
            (C37339 + C37340 + C37341) * C51079 -
            (C37744 + C37745 + C37746) * C2229 -
            (C37747 + C37748 + C37749) * C2226) *
               C33864 +
           ((C37746 + C37745 + C37744) * C2228 -
            ((C37341 + C37340 + C37339) * C51078 +
             (C37338 + C37337 + C37336) * C2227) +
            (C37749 + C37748 + C37747) * C51079 -
            (C2451 * C21592 + C2446 * C21593 + C2450 * C4736 + C2445 * C4740 +
             C2449 * C4737 + C2444 * C4741) *
                C2229 -
            (C2451 * C21594 + C2446 * C21595 + C2450 * C4742 + C2445 * C4748 +
             C2449 * C4743 + C2444 * C4749) *
                C2226) *
               C50966) *
              C50752 * C50841) *
         C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C33864 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C50966) *
               C17370 +
           ((C2115 - (C2116 + C2117) + C2118) * C33864 +
            (C7788 - (C7789 + C7790) + C7791) * C50966) *
               C17371 +
           ((C2119 - (C2120 + C2121) + C2122) * C33864 +
            (C13355 - (C13356 + C13357) + C13358) * C50966) *
               C17372) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C33864 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C50966) *
               C17370 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C33864 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C50966) *
               C17371 +
           ((C371 * C1770 + C372 * C1768 - C11223 * C1771 - C11224 * C50869) *
                C33864 +
            (C11223 * C1770 + C11224 * C1768 -
             (C117 * C2848 + C50886 * C2853) * C1771 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C33864 +
            (C7322 - (C7321 + C7320) + C7323) * C50966) *
               C17370 +
           ((C1779 - (C1778 + C1777) + C1780) * C33864 +
            (C7328 - (C7329 + C7330) + C7331) * C50966) *
               C17371 +
           ((C1783 - (C1782 + C1781) + C1784) * C33864 +
            (C12909 - (C12910 + C12911) + C12912) * C50966) *
               C17372) *
              C50790 * C1120 +
          (C35681 * C17370 +
           (C1794 * C33864 + (C12911 + C12910 - C12909 - C12912) * C50966) *
               C17371 +
           ((C1787 + C1786 - C1785 - C1788) * C33864 +
            (C830 * C1770 + C831 * C1768 -
             (C117 * C499 + C50886 * C518) * C1771 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50886 * C126) * C1964 +
            (C117 * C127 + C50886 * C140) * C1960 - C5712 * C1965 -
            C5713 * C1961 + C5714 * C1966 + C5715 * C1962 - C5716 * C1967 -
            C5717 * C1963) *
               C33864 +
           (C5712 * C1964 + C5713 * C1960 - C5714 * C1965 - C5715 * C1961 +
            C5716 * C1966 + C5717 * C1962 - C7592 * C1967 - C7593 * C1963) *
               C50966) *
              C17370 +
          ((C168 * C1964 + C169 * C1960 - C561 * C1965 - C562 * C1961 +
            C563 * C1966 + C564 * C1962 - C5718 * C1967 - C5719 * C1963) *
               C33864 +
           (C561 * C1964 + C562 * C1960 - C563 * C1965 - C564 * C1961 +
            C5718 * C1966 + C5719 * C1962 - C5720 * C1967 - C5721 * C1963) *
               C50966) *
              C17371 +
          ((C170 * C1964 + C171 * C1960 - C565 * C1965 - C566 * C1961 +
            C567 * C1966 + C568 * C1962 - C5722 * C1967 - C5723 * C1963) *
               C33864 +
           (C565 * C1964 + C566 * C1960 - C567 * C1965 - C568 * C1961 +
            C5722 * C1966 + C5723 * C1962 -
            (C117 * C5671 + C50886 * C5676) * C1967 -
            (C117 * C5677 + C50886 * C5680) * C1963) *
               C50966) *
              C17372) *
         C50790 * C50773) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C1771 -
            ((C2886 + C2887 + C2888) * C1768 +
             (C2883 + C2884 + C2885) * C1770) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C1770 + (C3220 + C3221 + C3222) * C1768 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C1771 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C293 +
          (((C37336 + C37337 + C37338) * C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C1771 -
            ((C37341 + C37340 + C37339) * C1768 +
             (C37338 + C37337 + C37336) * C1770) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C38248 + C38249 + C38250) * C1771 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C1770 +
            (C38253 + C38252 + C38251) * C1768 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C1771 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
            C2451 * C302 + C2446 * C316) *
               C1964 +
           (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
            C2451 * C317 + C2446 * C332) *
               C1960 -
           (C36826 + C36827 + C36828) * C1965 -
           (C36829 + C36830 + C36831) * C1961 +
           (C36832 + C36833 + C36834) * C1966 +
           (C36835 + C36836 + C36837) * C1962 -
           (C38656 + C38657 + C38658) * C1967 -
           (C38659 + C38660 + C38661) * C1963) *
              C33864 +
          ((C36828 + C36827 + C36826) * C1964 +
           (C36831 + C36830 + C36829) * C1960 -
           (C36834 + C36833 + C36832) * C1965 -
           (C36837 + C36836 + C36835) * C1961 +
           (C38658 + C38657 + C38656) * C1966 +
           (C38661 + C38660 + C38659) * C1962 -
           (C2451 * C23276 + C2446 * C23277 + C2450 * C6661 + C2445 * C6663 +
            C2449 * C5669 + C2444 * C5672) *
               C1967 -
           (C2451 * C23278 + C2446 * C23279 + C2450 * C6664 + C2445 * C6667 +
            C2449 * C5673 + C2444 * C5678) *
               C1963) *
              C50966) *
         C50752 * C50790 * C50773) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C2227 +
             (C117 * C127 + C50886 * C140) * C51078 - C5712 * C2228 -
             C5713 * C51079 + C5714 * C2229 + C5715 * C2226) *
                C33864 +
            (C5712 * C2227 + C5713 * C51078 - C5714 * C2228 - C5715 * C51079 +
             C5716 * C2229 + C5717 * C2226) *
                C50966) *
               C17370 +
           ((C2231 + C2232 - C2233 - C2234 + C2235 + C2236) * C33864 +
            (C7942 + C7943 - C7944 - C7945 + C7946 + C7947) * C50966) *
               C17371 +
           ((C2237 + C2238 - C2239 - C2240 + C2241 + C2242) * C33864 +
            (C13505 + C13506 - C13507 - C13508 + C13509 + C13510) * C50966) *
               C17372) *
              C50790 * C51023 +
          (((C2233 - (C2232 + C2231) + C2234 - C2235 - C2236) * C33864 +
            (C7944 - (C7943 + C7942) + C7945 - C7946 - C7947) * C50966) *
               C17370 +
           ((C2239 - (C2238 + C2237) + C2240 - C2241 - C2242) * C33864 +
            (C13507 - (C13506 + C13505) + C13508 - C13509 - C13510) * C50966) *
               C17371 +
           ((C2245 - (C2244 + C2243) + C2246 - C2247 - C2248) * C33864 +
            (C571 * C2228 - (C570 * C51078 + C569 * C2227) + C572 * C51079 -
             (C117 * C1971 + C50886 * C1978) * C2229 -
             (C117 * C1979 + C50886 * C1983) * C2226) *
                C50966) *
               C17372) *
              C50790 * C50778)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C2227 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C51078 -
            (C36826 + C36827 + C36828) * C2228 -
            (C36829 + C36830 + C36831) * C51079 +
            (C36832 + C36833 + C36834) * C2229 +
            (C36835 + C36836 + C36837) * C2226) *
               C33864 +
           ((C36828 + C36827 + C36826) * C2227 +
            (C36831 + C36830 + C36829) * C51078 -
            (C36834 + C36833 + C36832) * C2228 -
            (C36837 + C36836 + C36835) * C51079 +
            (C38658 + C38657 + C38656) * C2229 +
            (C38661 + C38660 + C38659) * C2226) *
               C50966) *
              C50752 * C50790 * C51023 +
          (((C2885 + C2884 + C2883) * C2228 -
            ((C2494 + C2493 + C2492) * C51078 +
             (C2491 + C2490 + C2489) * C2227) +
            (C2888 + C2887 + C2886) * C51079 - (C2891 + C2890 + C2889) * C2229 -
            (C2894 + C2893 + C2892) * C2226) *
               C33864 +
           ((C2889 + C2890 + C2891) * C2228 -
            ((C2886 + C2887 + C2888) * C51078 +
             (C2883 + C2884 + C2885) * C2227) +
            (C2892 + C2893 + C2894) * C51079 -
            (C2451 * C4738 + C2446 * C4744 + C2450 * C4739 + C2445 * C4745 +
             C2449 * C1969 + C2444 * C1974) *
                C2229 -
            (C2451 * C4746 + C2446 * C4750 + C2450 * C4747 + C2445 * C4751 +
             C2449 * C1975 + C2444 * C1981) *
                C2226) *
               C50966) *
              C50752 * C50790 * C50778)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C50790 * C1119 +
          (((C1775 - (C1774 + C1773) + C1776) * C33864 +
            (C7322 - (C7321 + C7320) + C7323) * C50966) *
               C17370 +
           ((C1779 - (C1778 + C1777) + C1780) * C33864 +
            (C7328 - (C7329 + C7330) + C7331) * C50966) *
               C17371 +
           ((C1783 - (C1782 + C1781) + C1784) * C33864 +
            (C12909 - (C12910 + C12911) + C12912) * C50966) *
               C17372) *
              C50790 * C1120 +
          (C35681 * C17370 +
           (C1794 * C33864 + (C12911 + C12910 - C12909 - C12912) * C50966) *
               C17371 +
           ((C1787 + C1786 - C1785 - C1788) * C33864 +
            (C830 * C1770 + C831 * C1768 -
             (C117 * C499 + C50886 * C518) * C1771 -
             (C117 * C519 + C50886 * C529) * C50869) *
                C50966) *
               C17372) *
              C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50886 * C126) * C1770 +
             (C117 * C127 + C50886 * C140) * C1768 - C5712 * C1771 -
             C5713 * C50869) *
                C33864 +
            (C5712 * C1770 + C5713 * C1768 - C5714 * C1771 - C5715 * C50869) *
                C50966) *
               C17370 +
           ((C1773 + C1774 - C1775 - C1776) * C33864 +
            (C7320 + C7321 - C7322 - C7323) * C50966) *
               C17371 +
           C35681 * C17372) *
              C293 +
          (((C6264 * C1771 -
             ((C117 * C314 + C50886 * C331) * C1768 +
              (C117 * C301 + C50886 * C315) * C1770) +
             C6265 * C50869) *
                C33864 +
            (C6266 * C1771 - (C6265 * C1768 + C6264 * C1770) + C6267 * C50869) *
                C50966) *
               C17370 +
           ((C2115 - (C2116 + C2117) + C2118) * C33864 +
            (C7788 - (C7789 + C7790) + C7791) * C50966) *
               C17371 +
           ((C2119 - (C2120 + C2121) + C2122) * C33864 +
            (C13355 - (C13356 + C13357) + C13358) * C50966) *
               C17372) *
              C294 +
          ((((C117 * C302 + C50886 * C316) * C1770 +
             (C117 * C317 + C50886 * C332) * C1768 - C7170 * C1771 -
             C7171 * C50869) *
                C33864 +
            (C7170 * C1770 + C7171 * C1768 - C7172 * C1771 - C7173 * C50869) *
                C50966) *
               C17370 +
           ((C369 * C1770 + C370 * C1768 - C5514 * C1771 - C5515 * C50869) *
                C33864 +
            (C5514 * C1770 + C5515 * C1768 - C5516 * C1771 - C5517 * C50869) *
                C50966) *
               C17371 +
           ((C371 * C1770 + C372 * C1768 - C11223 * C1771 - C11224 * C50869) *
                C33864 +
            (C11223 * C1770 + C11224 * C1768 -
             (C117 * C2848 + C50886 * C2853) * C1771 -
             (C117 * C2854 + C50886 * C2857) * C50869) *
                C50966) *
               C17372) *
              C295) *
         C50773) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C50790 * C1119 +
          (((C2885 + C2884 + C2883) * C1771 -
            ((C2494 + C2493 + C2492) * C1768 +
             (C2491 + C2490 + C2489) * C1770) +
            (C2888 + C2887 + C2886) * C50869) *
               C33864 +
           ((C2889 + C2890 + C2891) * C1771 -
            ((C2886 + C2887 + C2888) * C1768 +
             (C2883 + C2884 + C2885) * C1770) +
            (C2892 + C2893 + C2894) * C50869) *
               C50966) *
              C50752 * C50790 * C1120 +
          (((C2500 + C2499 + C2498) * C1770 + (C2497 + C2496 + C2495) * C1768 -
            (C3219 + C3218 + C3217) * C1771 -
            (C3222 + C3221 + C3220) * C50869) *
               C33864 +
           ((C3217 + C3218 + C3219) * C1770 + (C3220 + C3221 + C3222) * C1768 -
            (C2451 * C2848 + C2446 * C2853 + C2450 * C1309 + C2445 * C1315 +
             C2449 * C495 + C2444 * C510) *
                C1771 -
            (C2451 * C2854 + C2446 * C2857 + C2450 * C1316 + C2445 * C1321 +
             C2449 * C511 + C2444 * C525) *
                C50869) *
               C50966) *
              C50752 * C50790 * C1121)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C315 +
             C2451 * C302 + C2446 * C316) *
                C1770 +
            (C2449 * C127 + C2444 * C140 + C2450 * C314 + C2445 * C331 +
             C2451 * C317 + C2446 * C332) *
                C1768 -
            (C36826 + C36827 + C36828) * C1771 -
            (C36829 + C36830 + C36831) * C50869) *
               C33864 +
           ((C36828 + C36827 + C36826) * C1770 +
            (C36831 + C36830 + C36829) * C1768 -
            (C36834 + C36833 + C36832) * C1771 -
            (C36837 + C36836 + C36835) * C50869) *
               C50966) *
              C50752 * C293 +
          (((C37336 + C37337 + C37338) * C1771 -
            ((C2451 * C1203 + C2446 * C1208 + C2450 * C317 + C2445 * C332 +
              C2449 * C314 + C2444 * C331) *
                 C1768 +
             (C2451 * C1196 + C2446 * C1204 + C2450 * C302 + C2445 * C316 +
              C2449 * C301 + C2444 * C315) *
                 C1770) +
            (C37339 + C37340 + C37341) * C50869) *
               C33864 +
           ((C37746 + C37745 + C37744) * C1771 -
            ((C37341 + C37340 + C37339) * C1768 +
             (C37338 + C37337 + C37336) * C1770) +
            (C37749 + C37748 + C37747) * C50869) *
               C50966) *
              C50752 * C294 +
          (((C2449 * C302 + C2444 * C316 + C2450 * C1196 + C2445 * C1204 +
             C2451 * C2652 + C2446 * C2655) *
                C1770 +
            (C2449 * C317 + C2444 * C332 + C2450 * C1203 + C2445 * C1208 +
             C2451 * C2656 + C2446 * C2661) *
                C1768 -
            (C38248 + C38249 + C38250) * C1771 -
            (C38251 + C38252 + C38253) * C50869) *
               C33864 +
           ((C38250 + C38249 + C38248) * C1770 +
            (C38253 + C38252 + C38251) * C1768 -
            (C2451 * C20996 + C2446 * C20997 + C2450 * C3844 + C2445 * C3846 +
             C2449 * C2846 + C2444 * C2849) *
                C1771 -
            (C2451 * C20998 + C2446 * C20999 + C2450 * C3847 + C2445 * C3850 +
             C2449 * C2850 + C2444 * C2855) *
                C50869) *
               C50966) *
              C50752 * C295) *
         C50773) /
            (p * q * std::sqrt(p + q));
}
