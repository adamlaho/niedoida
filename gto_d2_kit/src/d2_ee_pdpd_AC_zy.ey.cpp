/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AC_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_13_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49694 = ce * de;
    const double C49693 = ce + de;
    const double C49692 = 0 * de;
    const double C49691 = yC - yD;
    const double C49722 = 0 * ce;
    const double C49717 = 0 * de;
    const double C49760 = ae * be;
    const double C49759 = ae + be;
    const double C49758 = 0 * be;
    const double C49757 = zA - zB;
    const double C49788 = 0 * ae;
    const double C49783 = 0 * be;
    const double C49823 = yP - yQ;
    const double C49822 = zP - zQ;
    const double C49821 = p + q;
    const double C49820 = p * q;
    const double C49832 = bs[4];
    const double C49830 = xP - xQ;
    const double C49838 = bs[5];
    const double C49845 = bs[6];
    const double C49857 = bs[7];
    const double C49873 = bs[3];
    const double C50389 = bs[2];
    const double C119 = bs[0];
    const double C50756 = xA - xB;
    const double C50777 = xC - xD;
    const double C50813 = zC - zD;
    const double C50899 = yA - yB;
    const double C49695 = std::pow(C49693, 2);
    const double C49718 = 2 * C49693;
    const double C49696 = C49694 * C49691;
    const double C49719 = C49691 * C49692;
    const double C50798 = std::pow(C49691, 2);
    const double C50850 = C49691 * de;
    const double C50849 = C49691 * ce;
    const double C49727 = C49722 / C49693;
    const double C49761 = std::pow(C49759, 2);
    const double C49784 = 2 * C49759;
    const double C49833 = C49693 * C49759;
    const double C140 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (zP - zQ) * (yP - yQ) * ae * ce) /
                         C49693) /
                        C49759;
    const double C141 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (zP - zQ) * (yP - yQ) * ae * ce) /
                         C49693) /
                        C49759;
    const double C49762 = C49760 * C49757;
    const double C49785 = C49757 * C49758;
    const double C50911 = std::pow(C49757, 2);
    const double C50975 = C49757 * be;
    const double C50974 = C49757 * ae;
    const double C49793 = C49788 / C49759;
    const double C49913 = C49823 * ce;
    const double C50009 = std::pow(C49823, 2);
    const double C49825 = C49822 * C49823;
    const double C49874 = C49822 * ae;
    const double C50161 = std::pow(C49822, 2);
    const double C49824 = 2 * C49820;
    const double C49839 = std::pow(C49830, 2);
    const double C50759 = C50756 * be;
    const double C50758 = C50756 * ae;
    const double C50757 = std::pow(C50756, 2);
    const double C50780 = C50777 * de;
    const double C50779 = C50777 * ce;
    const double C50778 = std::pow(C50777, 2);
    const double C50814 = std::pow(C50813, 2);
    const double C50878 = C50813 * de;
    const double C50877 = C50813 * ce;
    const double C50900 = std::pow(C50899, 2);
    const double C50949 = C50899 * be;
    const double C50948 = C50899 * ae;
    const double C49697 = 2 * C49695;
    const double C51040 = 4 * C49695;
    const double C50788 = std::pow(C49718, -1);
    const double C51042 = std::pow(C49718, -2);
    const double C49724 = C49719 / C49693;
    const double C50799 = C50798 * C49694;
    const double C49763 = 2 * C49761;
    const double C51033 = 4 * C49761;
    const double C50767 = std::pow(C49784, -1);
    const double C51055 = std::pow(C49784, -2);
    const double C49790 = C49785 / C49759;
    const double C50912 = C50911 * C49760;
    const double C49915 = C49832 * C49913;
    const double C49918 = C49838 * C49913;
    const double C49922 = C49873 * C49913;
    const double C49931 = C49845 * C49913;
    const double C49943 = C49857 * C49913;
    const double C49827 = C49825 * ae;
    const double C49875 = C49873 * C49874;
    const double C49879 = C49832 * C49874;
    const double C49884 = C49838 * C49874;
    const double C49891 = C49845 * C49874;
    const double C49902 = C49857 * C49874;
    const double C49826 = C49824 / C49821;
    const double C126 = (-(bs[1] * C49874 * C49824) / C49821) / C49759;
    const double C127 = (bs[1] * C49913 * C49824) / (C49821 * C49693);
    const double C120 = -(C49830 * bs[1] * C49824) / C49821;
    const double C297 = -(C49823 * bs[1] * C49824) / C49821;
    const double C496 = -(C49822 * bs[1] * C49824) / C49821;
    const double C50760 = C50757 * C49760;
    const double C50781 = C50778 * C49694;
    const double C50815 = C50814 * C49694;
    const double C50901 = C50900 * C49760;
    const double C49721 = C49692 / C49697;
    const double C49725 = C49717 / C49697;
    const double C49728 = 0 - C49724;
    const double C50800 = C50799 / C49693;
    const double C49787 = C49758 / C49763;
    const double C49791 = C49783 / C49763;
    const double C49794 = 0 - C49790;
    const double C50913 = C50912 / C49759;
    const double C49828 = C49827 * ce;
    const double C49831 = std::pow(C49826, 4);
    const double C49837 = -C49826;
    const double C49844 = std::pow(C49826, 6);
    const double C50390 = std::pow(C49826, 2);
    const double C128 =
        (C49830 * std::pow(C49826, 2) * bs[2] * C49874) / C49759;
    const double C129 =
        -(C49830 * std::pow(C49826, 2) * bs[2] * C49913) / C49693;
    const double C307 =
        (C49823 * std::pow(C49826, 2) * bs[2] * C49874) / C49759;
    const double C308 =
        (ce * bs[1] * C49824) / (C49821 * C49693) -
        (C49823 * std::pow(C49826, 2) * bs[2] * C49913) / C49693;
    const double C50761 = C50760 / C49759;
    const double C50782 = C50781 / C49693;
    const double C50816 = C50815 / C49693;
    const double C50902 = C50901 / C49759;
    const double C49731 = C49728 * ce;
    const double C50801 = -C50800;
    const double C49797 = C49794 * ae;
    const double C50914 = -C50913;
    const double C49834 = C49832 * C49828;
    const double C49841 = C49838 * C49828;
    const double C49847 = C49845 * C49828;
    const double C49860 = C49857 * C49828;
    const double C142 =
        (-(std::pow(C49826, 4) * bs[4] * C49828 * std::pow(xP - xQ, 2)) /
         C49693) /
            C49759 -
        (std::pow(-C49826, 3) * bs[3] * C49828) / (C49693 * C49759);
    const double C49880 = C49831 * C49879;
    const double C49916 = C49831 * C49915;
    const double C49961 = C49832 * C49831;
    const double C49840 = std::pow(C49837, 5);
    const double C49856 = std::pow(C49837, 7);
    const double C49872 = std::pow(C49837, 3);
    const double C327 =
        (-(C49823 * std::pow(C49837, 3) * bs[3] * C49828) / C49693) / C49759 -
        (std::pow(C49826, 2) * bs[2] * C49822 * ae * ce) / C49833;
    const double C49893 = C49844 * C49891;
    const double C49933 = C49844 * C49931;
    const double C49988 = C49845 * C49844;
    const double C50391 = C50389 * C50390;
    const double C510 = -(C49822 * C50390 * C50389 * C49913) / C49693;
    const double C511 = (C49822 * C50390 * C50389 * C49874) / C49759 -
                        (ae * bs[1] * C49824) / (C49821 * C49759);
    const double C50762 = -C50761;
    const double C50783 = -C50782;
    const double C50817 = -C50816;
    const double C50903 = -C50902;
    const double C49733 = C49731 / C49693;
    const double C50802 = std::exp(C50801);
    const double C49799 = C49797 / C49759;
    const double C50915 = std::exp(C50914);
    const double C49835 = C49831 * C49834;
    const double C49848 = C49844 * C49847;
    const double C49881 = C49830 * C49880;
    const double C50008 = C49880 * ce;
    const double C50006 = C49823 * C49880;
    const double C50538 = C49822 * C49880;
    const double C49925 = C49830 * C49916;
    const double C49970 = C49823 * C49916;
    const double C50160 = ae * C49916;
    const double C50158 = C49822 * C49916;
    const double C49976 = C49830 * C49961;
    const double C50039 = C49823 * C49961;
    const double C50038 = C49961 * ce;
    const double C50401 = C49961 * C49839;
    const double C50489 = C49961 * C50009;
    const double C50541 = C49961 * C50161;
    const double C50598 = C49822 * C49961;
    const double C50597 = C49961 * ae;
    const double C49842 = C49840 * C49841;
    const double C49885 = C49840 * C49884;
    const double C49919 = C49840 * C49918;
    const double C49963 = C49838 * C49840;
    const double C49862 = C49856 * C49860;
    const double C49904 = C49856 * C49902;
    const double C49946 = C49856 * C49943;
    const double C49876 = C49872 * C49875;
    const double C49923 = C49872 * C49922;
    const double C49971 = C49873 * C49872;
    const double C526 =
        (-(C49822 * C49872 * C49873 * C49828) / C49693) / C49759 -
        (ae * std::pow(C49826, 2) * bs[2] * C49913) / C49833;
    const double C49894 = C49893 * C49839;
    const double C49901 = C49830 * C49893;
    const double C50070 = C49893 * C50009;
    const double C50256 = C49893 * ce;
    const double C50254 = C49823 * C49893;
    const double C50646 = C49822 * C49893;
    const double C49935 = C49933 * C49839;
    const double C49942 = C49830 * C49933;
    const double C50113 = C49823 * C49933;
    const double C50232 = C49933 * C50161;
    const double C50343 = ae * C49933;
    const double C50341 = C49822 * C49933;
    const double C49990 = C49988 * C49839;
    const double C50133 = C49830 * C49988;
    const double C50287 = C49988 * C50009;
    const double C50286 = C49823 * C49988;
    const double C50285 = C49988 * ce;
    const double C50650 = C49988 * C50161;
    const double C121 = C50391 * C49839 - (bs[1] * C49824) / C49821;
    const double C298 = C50391 * C50009 - (bs[1] * C49824) / C49821;
    const double C299 = C49823 * C49830 * C50391;
    const double C492 = C49822 * C49830 * C50391;
    const double C497 = C50391 * C50161 - (bs[1] * C49824) / C49821;
    const double C961 = C49822 * C49823 * C50391;
    const double C50763 = std::exp(C50762);
    const double C50784 = std::exp(C50783);
    const double C50818 = std::exp(C50817);
    const double C50904 = std::exp(C50903);
    const double C49735 = C49733 - C49725;
    const double C49698 = C49696 * C50802;
    const double C118 = -(2 * ce * de * (yC - yD) * C50802) / (ce + de);
    const double C50851 = C50802 * C50849;
    const double C50854 = C50788 * C50802;
    const double C51046 = C50802 * C50850;
    const double C51041 = C50802 / C49718;
    const double C291 = C51042 * C50802;
    const double C49801 = C49799 - C49791;
    const double C155 = C50915 * C142;
    const double C151 = C50915 * C141;
    const double C149 = C50915 * C128;
    const double C2613 = C50915 * C327;
    const double C2611 = C50915 * C307;
    const double C49764 = C49762 * C50915;
    const double C117 = -(2 * ae * be * (zA - zB) * C50915) / (ae + be);
    const double C50976 = C50915 * C50974;
    const double C50979 = C50767 * C50915;
    const double C51063 = C50915 * C50975;
    const double C51056 = C50915 / C49784;
    const double C5343 = C51055 * C50915;
    const double C143 =
        (-2 * C49830 * C49835) / C49833 +
        C49830 *
            ((-(std::pow(-C49826, 5) * bs[5] * C49828 * std::pow(C49830, 2)) /
              C49693) /
                 C49759 -
             C49835 / C49833);
    const double C522 = (-(C49822 * C49830 * C49835) / C49693) / C49759 -
                        (ae * C49830 * C49872 * C49873 * C49823 * ce) / C49833;
    const double C49849 = C49848 * C49839;
    const double C49858 = C49848 / C49833;
    const double C49855 = C49830 * C49848;
    const double C50068 = C49823 * C49848;
    const double C50230 = C49822 * C49848;
    const double C50011 = C50008 / C49833;
    const double C50163 = C50160 / C49833;
    const double C49977 = C49976 * ce;
    const double C50407 = 2 * C49976;
    const double C50463 = C49823 * C49976;
    const double C50548 = C49822 * C49976;
    const double C50547 = C49976 * ae;
    const double C50041 = C50039 * ce;
    const double C50513 = 2 * C50039;
    const double C50566 = C49822 * C50039;
    const double C50565 = C50039 * ae;
    const double C50603 = 2 * C50598;
    const double C50601 = C50598 * ae;
    const double C49846 = C49842 / C49833;
    const double C49966 = C49830 * C49842;
    const double C50007 = C49823 * C49842;
    const double C50159 = C49822 * C49842;
    const double C144 =
        3 * ((-(C49842 * C49839) / C49693) / C49759 - C49835 / C49833) +
        C49830 * ((-2 * C49830 * C49842) / C49833 +
                  C49830 * ((-(std::pow(C49826, 6) * bs[6] * C49828 * C49839) /
                             C49693) /
                                C49759 -
                            C49842 / C49833));
    const double C330 =
        (-(C49823 * C49881 * ce) / C49693) / C49759 -
        (C49830 * C49835) / C49833 +
        C49823 * ((-(C49823 * C49830 * C49842) / C49693) / C49759 -
                  (C49881 * ce) / C49833);
    const double C523 =
        C49822 * ((-(C49842 * C49839) / C49693) / C49759 - C49835 / C49833) -
        (ae * (C49831 * C49832 * C49913 * C49839 + C49872 * C49873 * C49913)) /
            C49833;
    const double C528 =
        (-(ae * C49822 * C49925) / C49693) / C49759 -
        (C49830 * C49835) / C49833 +
        C49822 * ((-(C49822 * C49830 * C49842) / C49693) / C49759 -
                  (ae * C49925) / C49833);
    const double C977 =
        C49822 * ((-(C49823 * C49830 * C49842) / C49693) / C49759 -
                  (C49881 * ce) / C49833) -
        (ae * (C49823 * C49925 + C49830 * C49873 * C49872 * ce)) / C49833;
    const double C49886 = C49885 * C49839;
    const double C49890 = C49830 * C49885;
    const double C50012 = C49885 * C50009;
    const double C50069 = C49885 * ce;
    const double C50067 = C49823 * C49885;
    const double C50596 = C49822 * C49885;
    const double C49927 = C49919 * C49839;
    const double C49930 = C49830 * C49919;
    const double C50037 = C49823 * C49919;
    const double C50164 = C49919 * C50161;
    const double C50231 = ae * C49919;
    const double C50229 = C49822 * C49919;
    const double C49981 = C49963 * C49839;
    const double C49987 = C49830 * C49963;
    const double C50116 = C49963 * C50009;
    const double C50115 = C49823 * C49963;
    const double C50114 = C49963 * ce;
    const double C50599 = C49963 * C50161;
    const double C50648 = C49822 * C49963;
    const double C50647 = C49963 * ae;
    const double C49863 = C49862 * C49839;
    const double C50090 = C49830 * C49862;
    const double C50255 = C49823 * C49862;
    const double C50342 = C49822 * C49862;
    const double C49905 = C49904 * C49839;
    const double C50092 = C49830 * C49904;
    const double C50258 = C49904 * C50009;
    const double C49948 = C49946 * C49839;
    const double C50132 = C49830 * C49946;
    const double C50284 = C49823 * C49946;
    const double C50345 = C49946 * C50161;
    const double C328 = (-(C49823 * C49876 * ce) / C49693) / C49759 -
                        (C49872 * C49873 * C49828) / C49833 +
                        C49823 * ((-(C49823 * C49835) / C49693) / C49759 -
                                  (C49876 * ce) / C49833);
    const double C329 = (-(C49823 * C49830 * C49835) / C49693) / C49759 -
                        (C49830 * C49876 * ce) / C49833;
    const double C331 =
        C49823 * ((-(C49842 * C49839) / C49693) / C49759 - C49835 / C49833) -
        ((C49876 + C49880 * C49839) * ce) / C49833;
    const double C1225 =
        2 * ((-(C49823 * C49835) / C49693) / C49759 - (C49876 * ce) / C49833) -
        ((C49876 + C49880 * std::pow(C49823, 2)) * ce) / C49833 +
        C49823 *
            ((-(C49823 * C49880 * ce) / C49693) / C49759 - C49835 / C49833 +
             C49823 * ((-(C49823 * C49842) / C49693) / C49759 -
                       (C49880 * ce) / C49833));
    const double C130 =
        (std::pow(C49826, 2) * bs[2] * C49874 + C49876 * C49839) / C49759;
    const double C132 =
        (2 * C49830 * C49876 + C49830 * (C49876 + C49880 * C49839)) / C49759;
    const double C309 =
        (std::pow(C49826, 2) * bs[2] * C49874 + C49876 * C50009) / C49759;
    const double C311 = (C49823 * C49830 * C49876) / C49759;
    const double C313 = (C49830 * C49876 + C49881 * C50009) / C49759;
    const double C315 = (C49823 * (C49876 + C49880 * C49839)) / C49759;
    const double C502 =
        (C49822 * C49830 * C49876 + C49830 * C50391 * ae) / C49759;
    const double C512 =
        (C50390 * C50389 * C49874 + C49822 * (C49822 * C49876 + C50391 * ae) +
         C49822 * C50391 * ae) /
        C49759;
    const double C966 =
        (C49822 * C49823 * C49876 + C49823 * C50391 * ae) / C49759;
    const double C1217 =
        (2 * C49823 * C49876 + C49823 * (C49876 + C49880 * C50009)) / C49759;
    const double C527 = (-(ae * C49822 * C49923) / C49693) / C49759 -
                        (C49872 * C49873 * C49828) / C49833 +
                        C49822 * ((-(C49822 * C49835) / C49693) / C49759 -
                                  (ae * C49923) / C49833);
    const double C976 =
        C49822 *
            ((-(C49823 * C49835) / C49693) / C49759 - (C49876 * ce) / C49833) -
        (ae * (C49823 * C49923 + bs[2] * std::pow(C49826, 2) * ce)) / C49833;
    const double C2006 =
        2 * ((-(C49822 * C49835) / C49693) / C49759 - (ae * C49923) / C49833) -
        (ae * (C49916 * std::pow(C49822, 2) + C49923)) / C49833 +
        C49822 *
            ((-(ae * C49822 * C49916) / C49693) / C49759 - C49835 / C49833 +
             C49822 * ((-(C49822 * C49842) / C49693) / C49759 -
                       (ae * C49916) / C49833));
    const double C131 =
        -(C49923 * C49839 + std::pow(C49826, 2) * bs[2] * C49913) / C49693;
    const double C133 = (-2 * C49830 * C49923) / C49693 -
                        (C49830 * (C49916 * C49839 + C49923)) / C49693;
    const double C310 = -(C49823 * (C49823 * C49923 + C50391 * ce) +
                          C50390 * C50389 * C49913 + C49823 * C50391 * ce) /
                        C49693;
    const double C312 =
        -(C49823 * C49830 * C49923 + C49830 * C50391 * ce) / C49693;
    const double C503 = -(C49822 * C49830 * C49923) / C49693;
    const double C505 = -(C49822 * (C49916 * C49839 + C49923)) / C49693;
    const double C513 = -(C49923 * C50161 + C50390 * C50389 * C49913) / C49693;
    const double C515 = -(C49925 * C50161 + C49830 * C49923) / C49693;
    const double C967 = -(C49822 * (C49823 * C49923 + C50391 * ce)) / C49693;
    const double C2001 = (-2 * C49822 * C49923) / C49693 -
                         (C49822 * (C49916 * C50161 + C49923)) / C49693;
    const double C49972 = C49971 * ce;
    const double C50396 = C49830 * C49971;
    const double C50402 = C49971 + C50401;
    const double C50460 = C49823 * C49971;
    const double C50490 = C49971 + C50489;
    const double C50540 = C49822 * C49971;
    const double C50539 = C49971 * ae;
    const double C50543 = C49971 + C50541;
    const double C316 = -(C49823 * (C49916 * C49839 + C49923) +
                          (C50391 + C49971 * C49839) * ce) /
                        C49693;
    const double C504 = (C49822 * (C49876 + C49880 * C49839) +
                         (C50391 + C49971 * C49839) * ae) /
                        C49759;
    const double C1711 = (C49822 * (C49876 + C49880 * C50009) +
                          (C50391 + C49971 * C50009) * ae) /
                         C49759;
    const double C2002 =
        (2 * (C49822 * C49876 + C50391 * ae) +
         C49822 * (C49876 + C49822 * (C49822 * C49880 + C49971 * ae) +
                   C49822 * C49971 * ae) +
         (C50391 + C49971 * C50161) * ae) /
        C49759;
    const double C122 =
        2 * C49830 * C50391 + C49830 * (C50391 + C49971 * C49839);
    const double C301 = C49823 * (C50391 + C49971 * C49839);
    const double C493 = C49822 * (C50391 + C49971 * C49839);
    const double C1213 =
        2 * C49823 * C50391 + C49823 * (C50391 + C49971 * C50009);
    const double C1707 = C49822 * (C50391 + C49971 * C50009);
    const double C1994 =
        2 * C49822 * C50391 + C49822 * (C50391 + C49971 * C50161);
    const double C49895 = C49885 + C49894;
    const double C49903 = 2 * C49901;
    const double C50021 = C49901 * C50009;
    const double C50091 = C49901 * ce;
    const double C50088 = C49823 * C49901;
    const double C50581 = C49822 * C49901;
    const double C50075 = C49885 + C50070;
    const double C50262 = C50256 / C49833;
    const double C50263 = 2 * C50254;
    const double C50260 = C50254 * ce;
    const double C50630 = C49822 * C50254;
    const double C49936 = C49935 + C49919;
    const double C49945 = -2 * C49942;
    const double C50046 = C49823 * C49942;
    const double C50173 = C49942 * C50161;
    const double C50208 = ae * C49942;
    const double C50206 = C49822 * C49942;
    const double C50237 = C50232 + C49919;
    const double C50349 = C50343 / C49833;
    const double C50351 = -2 * C50341;
    const double C50347 = ae * C50341;
    const double C49991 = C49963 + C49990;
    const double C50138 = C50133 * C50009;
    const double C50137 = C49823 * C50133;
    const double C50136 = C50133 * ce;
    const double C50584 = C50133 * C50161;
    const double C50293 = C49963 + C50287;
    const double C50292 = C50286 * ce;
    const double C50633 = C50286 * C50161;
    const double C50654 = C49963 + C50650;
    const double C50764 = C50763 * C50758;
    const double C50768 = C50767 * C50763;
    const double C51030 = C50763 * C50759;
    const double C51027 = C50763 / C49784;
    const double C17340 = C51055 * C50763;
    const double C50785 = C50784 * C50779;
    const double C50789 = C50788 * C50784;
    const double C51037 = C50784 * C50780;
    const double C51034 = C50784 / C49718;
    const double C1113 = C51042 * C50784;
    const double C50879 = C50818 * C50877;
    const double C50882 = C50788 * C50818;
    const double C51050 = C50818 * C50878;
    const double C51043 = C50818 / C49718;
    const double C491 = C51042 * C50818;
    const double C50950 = C50904 * C50948;
    const double C50953 = C50767 * C50904;
    const double C51059 = C50904 * C50949;
    const double C51054 = C50904 / C49784;
    const double C2438 = C51055 * C50904;
    const double C49723 = C49698 / C49695;
    const double C49720 = 2 * C49698;
    const double C296 = ((0 * ce) / C49693 - C49698 / C49695) / (2 * C49693) +
                        (0 * ce) / C49693;
    const double C683 =
        ((C50802 - (C49691 * 2 * C49698) / C49693) * ce) / C49693 -
        C49692 / C49697;
    const double C684 = (0 * ce) / C49693 - C49698 / C49695;
    const double C1114 =
        (-C49692 / C49693) / (2 * C49693) -
        ((C50802 - (C49691 * 2 * C49698) / C49693) * de) / C49693;
    const double C1115 =
        (-(2 * C49698) / C49693) / (2 * C49693) - (0 * de) / C49693;
    const double C51048 = C50851 / C49697;
    const double C51047 = C50851 * C50850;
    const double C51044 = C50851 / C49693;
    const double C290 = (2 * C50788 * C50851) / C49693;
    const double C295 =
        (((C50802 - (C49691 * 2 * C49698) / C49693) * ce) / C49693 -
         C49692 / C49697) /
            (2 * C49693) +
        ((C49691 * ((0 * ce) / C49693 - C49698 / C49695) + C50854) * ce) /
            C49693;
    const double C51049 = C50854 * C50850;
    const double C1207 = C50854 / C51040;
    const double C1443 = C50854 / C49718;
    const double C51073 = C51046 / C49693;
    const double C289 = (C50802 * std::pow(C50849, 2)) / C49695 + C51041;
    const double C49789 = C49764 / C49761;
    const double C49786 = 2 * C49764;
    const double C5346 = ((0 * ae) / C49759 - C49764 / C49761) / (2 * C49759) +
                         (0 * ae) / C49759;
    const double C10871 =
        ((C50915 - (C49757 * 2 * C49764) / C49759) * ae) / C49759 -
        C49758 / C49763;
    const double C10872 = (0 * ae) / C49759 - C49764 / C49761;
    const double C33315 =
        (-C49758 / C49759) / (2 * C49759) -
        ((C50915 - (C49757 * 2 * C49764) / C49759) * be) / C49759;
    const double C33316 =
        (-(2 * C49764) / C49759) / (2 * C49759) - (0 * be) / C49759;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C340 = C117 * C299;
    const double C533 = C117 * C492;
    const double C2614 = C117 * C298;
    const double C2612 = C117 * C308;
    const double C2610 = C117 * C297;
    const double C3366 = C117 * C961;
    const double C51065 = C50976 / C49763;
    const double C51064 = C50976 * C50975;
    const double C51058 = C50976 / C49759;
    const double C5342 = (2 * C50767 * C50976) / C49759;
    const double C5345 =
        (((C50915 - (C49757 * 2 * C49764) / C49759) * ae) / C49759 -
         C49758 / C49763) /
            (2 * C49759) +
        ((C49757 * ((0 * ae) / C49759 - C49764 / C49761) + C50979) * ae) /
            C49759;
    const double C51066 = C50979 * C50975;
    const double C38907 = C50979 / C51033;
    const double C44230 = C50979 / C49784;
    const double C51082 = C51063 / C49759;
    const double C5341 = (C50915 * std::pow(C50974, 2)) / C49761 + C51056;
    const double C159 = C50915 * C143;
    const double C536 = C50915 * C522;
    const double C10881 = C50979 * C522;
    const double C33325 = C50979 * C522;
    const double C49850 = C49849 / C49693;
    const double C49859 = -2 * C49855;
    const double C50019 = C49823 * C49855;
    const double C50089 = C49855 / C49833;
    const double C50171 = C49822 * C49855;
    const double C50072 = C50068 / C49693;
    const double C50234 = C50230 / C49693;
    const double C50010 = C50007 / C49693;
    const double C50162 = C50159 / C49693;
    const double C161 = C50915 * C144;
    const double C347 = C50915 * C330;
    const double C540 = C50915 * C523;
    const double C10889 = C50979 * C523;
    const double C33333 = C50979 * C523;
    const double C548 = C50915 * C528;
    const double C5359 = C5343 * C528;
    const double C11279 = C50979 * C528;
    const double C33723 = C50979 * C528;
    const double C987 = C50915 * C977;
    const double C11083 = C50979 * C977;
    const double C33527 = C50979 * C977;
    const double C49887 = C49880 + C49886;
    const double C49892 = 2 * C49890;
    const double C50020 = C49890 * ce;
    const double C50018 = C49823 * C49890;
    const double C1226 =
        2 * ((-(C49823 * C49966) / C49693) / C49759 - (C49881 * ce) / C49833) -
        ((C49881 + C49890 * std::pow(C49823, 2)) * ce) / C49833 +
        C49823 *
            ((-(C49823 * C49890 * ce) / C49693) / C49759 - C49966 / C49833 +
             C49823 * ((-(C49823 * C49855) / C49693) / C49759 -
                       (C49890 * ce) / C49833));
    const double C50546 = C49822 * C49890;
    const double C1219 =
        (2 * C49823 * C49881 + C49823 * (C49881 + C49890 * C50009)) / C49759;
    const double C50014 = C49880 + C50012;
    const double C50073 = C50069 / C49833;
    const double C50074 = 2 * C50067;
    const double C50071 = C50067 * ce;
    const double C50564 = C49822 * C50067;
    const double C50600 = C50596 + C50597;
    const double C49928 = C49927 + C49916;
    const double C49932 = -2 * C49930;
    const double C49975 = C49823 * C49930;
    const double C50172 = ae * C49930;
    const double C50170 = C49822 * C49930;
    const double C2005 =
        2 * ((-(C49822 * C49966) / C49693) / C49759 - (ae * C49925) / C49833) -
        (ae * (C49930 * std::pow(C49822, 2) + C49925)) / C49833 +
        C49822 *
            ((-(ae * C49822 * C49930) / C49693) / C49759 - C49966 / C49833 +
             C49822 * ((-(C49822 * C49855) / C49693) / C49759 -
                       (ae * C49930) / C49833));
    const double C1999 = (-2 * C49822 * C49925) / C49693 -
                         (C49822 * (C49930 * C50161 + C49925)) / C49693;
    const double C50040 = C50037 + C50038;
    const double C50166 = C50164 + C49916;
    const double C50235 = C50231 / C49833;
    const double C50236 = -2 * C50229;
    const double C50233 = ae * C50229;
    const double C49982 = C49961 + C49981;
    const double C49989 = 2 * C49987;
    const double C50048 = C49823 * C49987;
    const double C50047 = C49987 * ce;
    const double C50493 = C49987 * C50009;
    const double C50549 = C49987 * C50161;
    const double C50583 = C49822 * C49987;
    const double C50582 = C49987 * ae;
    const double C50120 = C49961 + C50116;
    const double C50119 = C50115 * ce;
    const double C50288 = 2 * C50115;
    const double C50567 = C50115 * C50161;
    const double C50632 = C49822 * C50115;
    const double C50631 = C50115 * ae;
    const double C50118 = C50113 + C50114;
    const double C50602 = C49961 + C50599;
    const double C50655 = 2 * C50648;
    const double C50653 = C50648 * ae;
    const double C50652 = C50646 + C50647;
    const double C49864 = C49863 / C49693;
    const double C50094 = C49823 * C50090;
    const double C50207 = C49822 * C50090;
    const double C50261 = C50255 / C49693;
    const double C50348 = C50342 / C49693;
    const double C49906 = C49893 + C49905;
    const double C50097 = C50092 * C50009;
    const double C50264 = C49893 + C50258;
    const double C49949 = C49948 + C49933;
    const double C50135 = C49823 * C50132;
    const double C50209 = C50132 * C50161;
    const double C50291 = C50284 + C50285;
    const double C50352 = C50345 + C49933;
    const double C2617 = C50915 * C328;
    const double C343 = C50915 * C329;
    const double C353 = C50915 * C331;
    const double C2621 = C50915 * C1225;
    const double C153 = C50915 * C130;
    const double C157 = C50915 * C132;
    const double C2615 = C50915 * C309;
    const double C341 = C50915 * C311;
    const double C345 = C50915 * C313;
    const double C351 = C50915 * C315;
    const double C534 = C50915 * C502;
    const double C10877 = C50979 * C502;
    const double C33321 = C50979 * C502;
    const double C3367 = C50915 * C966;
    const double C13952 = C50979 * C966;
    const double C36316 = C50979 * C966;
    const double C2619 = C50915 * C1217;
    const double C3369 = C50915 * C976;
    const double C13956 = C50979 * C976;
    const double C36320 = C50979 * C976;
    const double C154 = C117 * C131;
    const double C158 = C117 * C133;
    const double C2616 = C117 * C310;
    const double C342 = C117 * C312;
    const double C535 = C117 * C503;
    const double C539 = C117 * C505;
    const double C547 = C117 * C515;
    const double C3368 = C117 * C967;
    const double C49973 = C49970 + C49972;
    const double C314 = -(C49823 * (C49823 * C49925 + C50396 * ce) +
                          C49830 * C49923 + C49823 * C50396 * ce) /
                        C49693;
    const double C514 =
        (C49830 * C49876 + C49822 * (C49822 * C49881 + C50396 * ae) +
         C49822 * C50396 * ae) /
        C49759;
    const double C968 =
        (C49822 * C49823 * C49881 + C49823 * C50396 * ae) / C49759;
    const double C969 = -(C49822 * (C49823 * C49925 + C50396 * ce)) / C49693;
    const double C1713 = (C49822 * (C49881 + C49890 * C50009) +
                          (C50396 + C49976 * C50009) * ae) /
                         C49759;
    const double C2000 =
        (2 * (C49822 * C49881 + C50396 * ae) +
         C49822 * (C49881 + C49822 * (C49822 * C49890 + C49976 * ae) +
                   C49822 * C49976 * ae) +
         (C50396 + C49976 * C50161) * ae) /
        C49759;
    const double C300 = C49830 * C50391 + C50396 * C50009;
    const double C498 = C49830 * C50391 + C50396 * C50161;
    const double C962 = C49822 * C49823 * C50396;
    const double C1214 =
        2 * C49823 * C50396 + C49823 * (C50396 + C49976 * C50009);
    const double C1328 = C49823 * C50396 + C50463 * C50161;
    const double C1708 = C49822 * (C50396 + C49976 * C50009);
    const double C1993 =
        2 * C49822 * C50396 + C49822 * (C50396 + C49976 * C50161);
    const double C123 = 3 * (C50391 + C49971 * C49839) +
                        C49830 * (2 * C50396 + C49830 * C50402);
    const double C302 = C50391 + C49971 * C49839 + C50402 * C50009;
    const double C303 = C49823 * (2 * C50396 + C49830 * C50402);
    const double C494 = C49822 * (2 * C50396 + C49830 * C50402);
    const double C499 = C50391 + C49971 * C49839 + C50402 * C50161;
    const double C963 = C49822 * C49823 * C50402;
    const double C1331 =
        (C49823 * C49876 + C49822 * (C49822 * C50006 + C50460 * ae) +
         C49822 * C50460 * ae) /
        C49759;
    const double C4752 =
        (2 * (C49822 * C50006 + C50460 * ae) +
         C49822 * (C50006 + C49822 * (C49822 * C50067 + C50039 * ae) +
                   C49822 * C50039 * ae) +
         (C50460 + C50039 * C50161) * ae) /
        C49759;
    const double C1327 = C49823 * C50391 + C50460 * C50161;
    const double C4744 =
        2 * C49822 * C50460 + C49822 * (C50460 + C50039 * C50161);
    const double C2597 = 3 * (C50391 + C49971 * C50009) +
                         C49823 * (2 * C50460 + C49823 * C50490);
    const double C2803 = C50391 + C49971 * C50009 + C50490 * C50161;
    const double C3353 = C49822 * (2 * C50460 + C49823 * C50490);
    const double C50542 = C50538 + C50539;
    const double C5729 = 3 * (C50391 + C49971 * C50161) +
                         C49822 * (2 * C50540 + C49822 * C50543);
    const double C352 = C117 * C316;
    const double C538 = C50915 * C504;
    const double C10885 = C50979 * C504;
    const double C33329 = C50979 * C504;
    const double C3371 = C50915 * C1711;
    const double C13962 = C50979 * C1711;
    const double C36326 = C50979 * C1711;
    const double C156 = C117 * C122;
    const double C350 = C117 * C301;
    const double C537 = C117 * C493;
    const double C2618 = C117 * C1213;
    const double C3370 = C117 * C1707;
    const double C49896 = C49830 * C49895;
    const double C49900 = 3 * C49895;
    const double C50031 = C49895 * ce;
    const double C50029 = C49823 * C49895;
    const double C50555 = C49822 * C49895;
    const double C50024 = C49890 + C50021;
    const double C50095 = C50091 / C49833;
    const double C50096 = 2 * C50088;
    const double C50093 = C50088 * ce;
    const double C50572 = C49822 * C50088;
    const double C50078 = C49823 * C50075;
    const double C50257 = 3 * C50075;
    const double C50253 = C50075 * ce;
    const double C50621 = C49822 * C50075;
    const double C50266 = C50260 / C49693;
    const double C49937 = C49830 * C49936;
    const double C49941 = -3 * C49936;
    const double C49980 = C49823 * C49936;
    const double C50183 = ae * C49936;
    const double C50181 = C49822 * C49936;
    const double C49947 = C49945 / C49693;
    const double C50176 = C50173 + C49930;
    const double C50212 = C50208 / C49833;
    const double C50213 = -2 * C50206;
    const double C50210 = ae * C50206;
    const double C50241 = C49822 * C50237;
    const double C50344 = -3 * C50237;
    const double C50340 = ae * C50237;
    const double C50356 = C50351 / C49693;
    const double C50354 = C50347 / C49693;
    const double C49992 = C49830 * C49991;
    const double C50057 = C49823 * C49991;
    const double C50056 = C49991 * ce;
    const double C50497 = C49991 * C50009;
    const double C50558 = C49991 * C50161;
    const double C50141 = C49987 + C50138;
    const double C50140 = C50137 * ce;
    const double C50575 = C50137 * C50161;
    const double C50587 = C49987 + C50584;
    const double C50296 = C49823 * C50293;
    const double C50295 = C50293 * ce;
    const double C50624 = C50293 * C50161;
    const double C50636 = C50115 + C50633;
    const double C50657 = C49822 * C50654;
    const double C51031 = C50764 / C49763;
    const double C51029 = C50764 / C49759;
    const double C51028 = C50764 * C50759;
    const double C17339 = (2 * C50767 * C50764) / C49759;
    const double C51032 = C50768 * C50759;
    const double C110 = C50768 / C51033;
    const double C8189 = C50768 / C49784;
    const double C51068 = C51030 / C49759;
    const double C17338 = (C50763 * std::pow(C50758, 2)) / C49761 + C51027;
    const double C51038 = C50785 / C49697;
    const double C51036 = C50785 / C49693;
    const double C51035 = C50785 * C50780;
    const double C1112 = (2 * C50788 * C50785) / C49693;
    const double C51039 = C50789 * C50780;
    const double C115 = C50789 / C51040;
    const double C682 = C50789 / C49718;
    const double C51071 = C51037 / C49693;
    const double C1111 = (C50784 * std::pow(C50779, 2)) / C49695 + C51034;
    const double C51052 = C50879 / C49697;
    const double C51051 = C50879 * C50878;
    const double C51045 = C50879 / C49693;
    const double C490 = (2 * C50788 * C50879) / C49693;
    const double C51053 = C50882 * C50878;
    const double C1990 = C50882 / C51040;
    const double C2237 = C50882 / C49718;
    const double C51076 = C51050 / C49693;
    const double C489 = (C50818 * std::pow(C50877, 2)) / C49695 + C51043;
    const double C51061 = C50950 / C49763;
    const double C51060 = C50950 * C50949;
    const double C51057 = C50950 / C49759;
    const double C2437 = (2 * C50767 * C50950) / C49759;
    const double C51062 = C50953 * C50949;
    const double C19943 = C50953 / C51033;
    const double C24522 = C50953 / C49784;
    const double C51079 = C51059 / C49759;
    const double C2436 = (C50904 * std::pow(C50948, 2)) / C49761 + C51054;
    const double C49730 = C49727 - C49723;
    const double C49726 = C49691 * C49720;
    const double C51074 = C51047 / C49695;
    const double C294 =
        (((0 - (C49691 * C49692) / C49693) * ce) / C49693 - (0 * de) / C49697) /
            (2 * C49693) +
        ((C49691 * (((C50802 - (C49691 * 2 * C49698) / C49693) * ce) / C49693 -
                    C49692 / C49697) +
          C51044) *
         ce) /
            C49693 +
        (0 * ce) / C49693 - C49698 / C49695;
    const double C51075 = C51049 / C49693;
    const double C1109 = -C51073;
    const double C49796 = C49793 - C49789;
    const double C49792 = C49757 * C49786;
    const double C5358 = C5346 * C515;
    const double C10896 = C10871 * C122;
    const double C10892 = C10871 * C133;
    const double C10886 = C10871 * C131;
    const double C10882 = C10871 * C121;
    const double C10878 = C10871 * C129;
    const double C10874 = C10871 * C120;
    const double C11100 = C10871 * C316;
    const double C11096 = C10871 * C301;
    const double C11084 = C10871 * C312;
    const double C11080 = C10871 * C299;
    const double C11292 = C10871 * C515;
    const double C11284 = C10871 * C505;
    const double C11280 = C10871 * C493;
    const double C11276 = C10871 * C503;
    const double C11272 = C10871 * C492;
    const double C13963 = C10871 * C310;
    const double C13959 = C10871 * C298;
    const double C13957 = C10871 * C308;
    const double C13953 = C10871 * C297;
    const double C14853 = C10871 * C967;
    const double C14849 = C10871 * C961;
    const double C15203 = C10871 * C1213;
    const double C16067 = C10871 * C1707;
    const double C10888 = C10872 * C505;
    const double C10884 = C10872 * C493;
    const double C10880 = C10872 * C503;
    const double C10876 = C10872 * C492;
    const double C11278 = C10872 * C515;
    const double C13961 = C10872 * C1707;
    const double C13955 = C10872 * C967;
    const double C13951 = C10872 * C961;
    const double C33340 = C33315 * C122;
    const double C33336 = C33315 * C133;
    const double C33330 = C33315 * C131;
    const double C33326 = C33315 * C121;
    const double C33322 = C33315 * C129;
    const double C33318 = C33315 * C120;
    const double C33544 = C33315 * C316;
    const double C33540 = C33315 * C301;
    const double C33528 = C33315 * C312;
    const double C33524 = C33315 * C299;
    const double C33736 = C33315 * C515;
    const double C33728 = C33315 * C505;
    const double C33724 = C33315 * C493;
    const double C33720 = C33315 * C503;
    const double C33716 = C33315 * C492;
    const double C36331 = C33315 * C1213;
    const double C36327 = C33315 * C310;
    const double C36323 = C33315 * C298;
    const double C36321 = C33315 * C308;
    const double C36317 = C33315 * C297;
    const double C37007 = C33315 * C1707;
    const double C37003 = C33315 * C967;
    const double C36999 = C33315 * C961;
    const double C33332 = C33316 * C505;
    const double C33328 = C33316 * C493;
    const double C33324 = C33316 * C503;
    const double C33320 = C33316 * C492;
    const double C33722 = C33316 * C515;
    const double C36325 = C33316 * C1707;
    const double C36319 = C33316 * C967;
    const double C36315 = C33316 * C961;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2641 = C2612 + C2613;
    const double C2640 = C2610 + C2611;
    const double C51083 = C51064 / C49761;
    const double C10903 = C51058 * C144;
    const double C10897 = C51058 * C132;
    const double C10893 = C51058 * C143;
    const double C10887 = C51058 * C142;
    const double C10883 = C51058 * C130;
    const double C10879 = C51058 * C141;
    const double C10875 = C51058 * C128;
    const double C11101 = C51058 * C331;
    const double C11097 = C51058 * C315;
    const double C11091 = C51058 * C330;
    const double C11087 = C51058 * C313;
    const double C11085 = C51058 * C329;
    const double C11081 = C51058 * C311;
    const double C11293 = C51058 * C528;
    const double C11285 = C51058 * C523;
    const double C11281 = C51058 * C504;
    const double C11277 = C51058 * C522;
    const double C11273 = C51058 * C502;
    const double C11849 = C51058 * C977;
    const double C13964 = C51058 * C328;
    const double C13960 = C51058 * C309;
    const double C13958 = C51058 * C327;
    const double C13954 = C51058 * C307;
    const double C14854 = C51058 * C976;
    const double C14850 = C51058 * C966;
    const double C15208 = C51058 * C1225;
    const double C15204 = C51058 * C1217;
    const double C16068 = C51058 * C1711;
    const double C5344 =
        (((0 - (C49757 * C49758) / C49759) * ae) / C49759 - (0 * be) / C49763) /
            (2 * C49759) +
        ((C49757 * (((C50915 - (C49757 * 2 * C49764) / C49759) * ae) / C49759 -
                    C49758 / C49763) +
          C51058) *
         ae) /
            C49759 +
        (0 * ae) / C49759 - C49764 / C49761;
    const double C5369 = C5342 * C504;
    const double C5363 = C5342 * C523;
    const double C5357 = C5342 * C522;
    const double C5351 = C5342 * C502;
    const double C5557 = C5342 * C977;
    const double C5751 = C5342 * C528;
    const double C21936 = C5342 * C1711;
    const double C21930 = C5342 * C976;
    const double C21924 = C5342 * C966;
    const double C5368 = C5345 * C493;
    const double C5362 = C5345 * C505;
    const double C5356 = C5345 * C503;
    const double C5350 = C5345 * C492;
    const double C5750 = C5345 * C515;
    const double C21935 = C5345 * C1707;
    const double C21929 = C5345 * C967;
    const double C21923 = C5345 * C961;
    const double C51084 = C51066 / C49759;
    const double C44246 = C44230 * C528;
    const double C33313 = -C51082;
    const double C5379 = C5341 * C143;
    const double C5373 = C5341 * C132;
    const double C5371 = C5341 * C130;
    const double C5365 = C5341 * C142;
    const double C5355 = C5341 * C141;
    const double C5349 = C5341 * C128;
    const double C5567 = C5341 * C330;
    const double C5561 = C5341 * C313;
    const double C5559 = C5341 * C329;
    const double C5553 = C5341 * C311;
    const double C5761 = C5341 * C528;
    const double C5749 = C5341 * C522;
    const double C5743 = C5341 * C502;
    const double C5931 = C5341 * C331;
    const double C5925 = C5341 * C315;
    const double C6095 = C5341 * C523;
    const double C6089 = C5341 * C504;
    const double C6311 = C5341 * C977;
    const double C21940 = C5341 * C328;
    const double C21934 = C5341 * C309;
    const double C21932 = C5341 * C327;
    const double C21926 = C5341 * C307;
    const double C22596 = C5341 * C976;
    const double C22590 = C5341 * C966;
    const double C22862 = C5341 * C1225;
    const double C22856 = C5341 * C1217;
    const double C23528 = C5341 * C1711;
    const double C49851 = -C49850;
    const double C49861 = C49859 / C49833;
    const double C50022 = C50019 / C49693;
    const double C50174 = C50171 / C49693;
    const double C50077 = -C50072;
    const double C50239 = -C50234;
    const double C50013 = -C50010;
    const double C50165 = -C50162;
    const double C135 = (3 * (C49876 + C49880 * C49839) +
                         C49830 * (2 * C49881 + C49830 * C49887)) /
                        C49759;
    const double C317 = (C49876 + C49880 * C49839 + C49887 * C50009) / C49759;
    const double C319 = (C49823 * (2 * C49881 + C49830 * C49887)) / C49759;
    const double C506 = (C49822 * (2 * C49881 + C49830 * C49887) +
                         (2 * C50396 + C49830 * C50402) * ae) /
                        C49759;
    const double C516 =
        (C49876 + C49880 * C49839 + C49822 * (C49822 * C49887 + C50402 * ae) +
         C49822 * C50402 * ae) /
        C49759;
    const double C970 =
        (C49822 * C49823 * C49887 + C49823 * C50402 * ae) / C49759;
    const double C1221 =
        (2 * C49823 * C49887 + C49823 * (C49887 + C49895 * C50009)) / C49759;
    const double C50023 = C50020 / C49833;
    const double C1333 =
        (C49823 * C49881 + C49822 * (C49822 * C50018 + C50463 * ae) +
         C49822 * C50463 * ae) /
        C49759;
    const double C2629 = C50915 * C1226;
    const double C13980 = C51058 * C1226;
    const double C50550 = C50546 + C50547;
    const double C2627 = C50915 * C1219;
    const double C13976 = C51058 * C1219;
    const double C2600 = (3 * (C49876 + C49880 * C50009) +
                          C49823 * (2 * C50006 + C49823 * C50014)) /
                         C49759;
    const double C2806 =
        (C49876 + C49880 * C50009 + C49822 * (C49822 * C50014 + C50490 * ae) +
         C49822 * C50490 * ae) /
        C49759;
    const double C3356 = (C49822 * (2 * C50006 + C49823 * C50014) +
                          (2 * C50460 + C49823 * C50490) * ae) /
                         C49759;
    const double C50076 = C50071 / C49693;
    const double C50568 = C50564 + C50565;
    const double C50604 = C49822 * C50600;
    const double C50645 = 2 * C50600;
    const double C134 =
        (-3 * (C49916 * C49839 + C49923)) / C49693 +
        C49830 * ((-2 * C49925) / C49693 - (C49830 * C49928) / C49693);
    const double C318 = -(C49823 * (C49823 * C49928 + C50402 * ce) +
                          C49916 * C49839 + C49923 + C49823 * C50402 * ce) /
                        C49693;
    const double C320 =
        C49823 * ((-2 * C49925) / C49693 - (C49830 * C49928) / C49693) -
        ((2 * C50396 + C49830 * C50402) * ce) / C49693;
    const double C507 =
        C49822 * ((-2 * C49925) / C49693 - (C49830 * C49928) / C49693);
    const double C517 = -(C49928 * C50161 + C49916 * C49839 + C49923) / C49693;
    const double C971 = -(C49822 * (C49823 * C49928 + C50402 * ce)) / C49693;
    const double C1997 = (-2 * C49822 * C49928) / C49693 -
                         (C49822 * (C49936 * C50161 + C49928)) / C49693;
    const double C49934 = C49932 / C49693;
    const double C49978 = C49975 + C49977;
    const double C50175 = C50172 / C49833;
    const double C5763 = C5342 * C2005;
    const double C5753 = C5343 * C2005;
    const double C11295 = C50979 * C2005;
    const double C33739 = C50979 * C2005;
    const double C44628 = C44230 * C2005;
    const double C5762 = C5345 * C1999;
    const double C5752 = C5346 * C1999;
    const double C11294 = C10872 * C1999;
    const double C33738 = C33316 * C1999;
    const double C50042 = C49823 * C50040;
    const double C50112 = -2 * C50040;
    const double C50192 = ae * C50040;
    const double C50190 = C49822 * C50040;
    const double C5733 =
        (-3 * (C49916 * C50161 + C49923)) / C49693 +
        C49822 * ((-2 * C50158) / C49693 - (C49822 * C50166) / C49693);
    const double C50240 = C50236 / C49693;
    const double C50238 = C50233 / C49693;
    const double C49983 = C49982 * ce;
    const double C50408 = C49830 * C49982;
    const double C50414 = 3 * C49982;
    const double C50466 = C49823 * C49982;
    const double C50557 = C49822 * C49982;
    const double C50556 = C49982 * ae;
    const double C1715 = (C49822 * (C49887 + C49895 * C50009) +
                          (C50402 + C49982 * C50009) * ae) /
                         C49759;
    const double C1998 =
        (2 * (C49822 * C49887 + C50402 * ae) +
         C49822 * (C49887 + C49822 * (C49822 * C49895 + C49982 * ae) +
                   C49822 * C49982 * ae) +
         (C50402 + C49982 * C50161) * ae) /
        C49759;
    const double C1215 =
        2 * C49823 * C50402 + C49823 * (C50402 + C49982 * C50009);
    const double C1709 = C49822 * (C50402 + C49982 * C50009);
    const double C1992 =
        2 * C49822 * C50402 + C49822 * (C50402 + C49982 * C50161);
    const double C50050 = C50048 * ce;
    const double C50518 = 2 * C50048;
    const double C50574 = C49822 * C50048;
    const double C50573 = C50048 * ae;
    const double C4750 =
        (2 * (C49822 * C50018 + C50463 * ae) +
         C49822 * (C50018 + C49822 * (C49822 * C50088 + C50048 * ae) +
                   C49822 * C50048 * ae) +
         (C50463 + C50048 * C50161) * ae) /
        C49759;
    const double C4743 =
        2 * C49822 * C50463 + C49822 * (C50463 + C50048 * C50161);
    const double C50049 = C50046 + C50047;
    const double C50494 = C49976 + C50493;
    const double C50551 = C49976 + C50549;
    const double C50588 = 2 * C50583;
    const double C50586 = C50583 * ae;
    const double C50585 = C50581 + C50582;
    const double C50122 = C50120 * ce;
    const double C50514 = C49823 * C50120;
    const double C50611 = 3 * C50120;
    const double C50623 = C49822 * C50120;
    const double C50622 = C50120 * ae;
    const double C4748 =
        (2 * (C49822 * C50014 + C50490 * ae) +
         C49822 * (C50014 + C49822 * (C49822 * C50075 + C50120 * ae) +
                   C49822 * C50120 * ae) +
         (C50490 + C50120 * C50161) * ae) /
        C49759;
    const double C4742 =
        2 * C49822 * C50490 + C49822 * (C50490 + C50120 * C50161);
    const double C50569 = C50039 + C50567;
    const double C50637 = 2 * C50632;
    const double C50635 = C50632 * ae;
    const double C50634 = C50630 + C50631;
    const double C50121 = C49823 * C50118;
    const double C50193 = C50118 * C50161;
    const double C50283 = -2 * C50118;
    const double C50323 = ae * C50118;
    const double C50321 = C49822 * C50118;
    const double C50605 = C49822 * C50602;
    const double C50651 = 3 * C50602;
    const double C50649 = C50602 * ae;
    const double C50656 = C49822 * C50652;
    const double C49865 = -C49864;
    const double C50099 = C50094 / C49693;
    const double C50211 = C50207 / C49693;
    const double C50267 = -C50261;
    const double C50355 = -C50348;
    const double C49907 = C49830 * C49906;
    const double C50032 = C49906 * C50009;
    const double C50100 = C49901 + C50097;
    const double C50268 = C49823 * C50264;
    const double C49950 = C49830 * C49949;
    const double C50055 = C49823 * C49949;
    const double C50184 = C49949 * C50161;
    const double C50139 = C50135 + C50136;
    const double C50214 = C50209 + C49942;
    const double C50294 = C49823 * C50291;
    const double C50324 = C50291 * C50161;
    const double C50357 = C49822 * C50352;
    const double C170 = C152 + C153;
    const double C2642 = C2614 + C2615;
    const double C368 = C340 + C341;
    const double C557 = C533 + C534;
    const double C3384 = C3366 + C3367;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C2643 = C2616 + C2617;
    const double C369 = C342 + C343;
    const double C558 = C535 + C536;
    const double C560 = C539 + C540;
    const double C564 = C547 + C548;
    const double C3385 = C3368 + C3369;
    const double C1339 =
        (-(C49823 * C49835) / C49693) / C49759 - (C49876 * ce) / C49833 -
        (ae * C49822 * C49973) / C49833 +
        C49822 * (C49822 * ((-(C49823 * C49842) / C49693) / C49759 -
                            (C49880 * ce) / C49833) -
                  (ae * C49973) / C49833);
    const double C1719 =
        C49822 *
            ((-(C49823 * C49880 * ce) / C49693) / C49759 - C49835 / C49833 +
             C49823 * ((-(C49823 * C49842) / C49693) / C49759 -
                       (C49880 * ce) / C49833)) -
        (ae * (C49823 * C49973 + C49923 + C49823 * C49971 * ce)) / C49833;
    const double C1218 =
        (-2 * (C49823 * C49923 + C50391 * ce)) / C49693 -
        (C49823 * (C49823 * C49973 + C49923 + C49823 * C49971 * ce)) / C49693 -
        ((C50391 + C49971 * C50009) * ce) / C49693;
    const double C1332 =
        -(C49973 * C50161 + C49823 * C49923 + C50391 * ce) / C49693;
    const double C1712 =
        -(C49822 * (C49823 * C49973 + C49923 + C50460 * ce)) / C49693;
    const double C4751 = (-2 * C49822 * C49973) / C49693 -
                         (C49822 * (C50040 * C50161 + C49973)) / C49693;
    const double C346 = C117 * C314;
    const double C11090 = C10871 * C314;
    const double C33534 = C33315 * C314;
    const double C546 = C50915 * C514;
    const double C5353 = C5343 * C514;
    const double C5755 = C5341 * C514;
    const double C5745 = C5342 * C514;
    const double C11289 = C51058 * C514;
    const double C11275 = C50979 * C514;
    const double C33719 = C50979 * C514;
    const double C44240 = C44230 * C514;
    const double C983 = C50915 * C968;
    const double C5551 = C5342 * C968;
    const double C6305 = C5341 * C968;
    const double C11079 = C50979 * C968;
    const double C11845 = C51058 * C968;
    const double C33523 = C50979 * C968;
    const double C986 = C117 * C969;
    const double C5556 = C5345 * C969;
    const double C11082 = C10872 * C969;
    const double C11848 = C10871 * C969;
    const double C33526 = C33316 * C969;
    const double C34292 = C33315 * C969;
    const double C2819 = C50915 * C1713;
    const double C5563 = C5342 * C1713;
    const double C11089 = C50979 * C1713;
    const double C14860 = C51058 * C1713;
    const double C33533 = C50979 * C1713;
    const double C5757 = C5342 * C2000;
    const double C5747 = C5343 * C2000;
    const double C11291 = C50979 * C2000;
    const double C33735 = C50979 * C2000;
    const double C44622 = C44230 * C2000;
    const double C344 = C117 * C300;
    const double C11086 = C10871 * C300;
    const double C33530 = C33315 * C300;
    const double C545 = C117 * C498;
    const double C5352 = C5346 * C498;
    const double C5744 = C5345 * C498;
    const double C11288 = C10871 * C498;
    const double C11274 = C10872 * C498;
    const double C33732 = C33315 * C498;
    const double C33718 = C33316 * C498;
    const double C982 = C117 * C962;
    const double C5550 = C5345 * C962;
    const double C11078 = C10872 * C962;
    const double C11844 = C10871 * C962;
    const double C33522 = C33316 * C962;
    const double C34288 = C33315 * C962;
    const double C2626 = C117 * C1214;
    const double C13975 = C10871 * C1214;
    const double C36343 = C33315 * C1214;
    const double C2822 = C117 * C1328;
    const double C5548 = C5346 * C1328;
    const double C6306 = C5345 * C1328;
    const double C11846 = C10872 * C1328;
    const double C14189 = C10871 * C1328;
    const double C34290 = C33316 * C1328;
    const double C41139 = C33315 * C1328;
    const double C2818 = C117 * C1708;
    const double C5562 = C5345 * C1708;
    const double C11088 = C10872 * C1708;
    const double C14859 = C10871 * C1708;
    const double C33532 = C33316 * C1708;
    const double C37017 = C33315 * C1708;
    const double C5756 = C5345 * C1993;
    const double C5746 = C5346 * C1993;
    const double C11290 = C10872 * C1993;
    const double C33734 = C33316 * C1993;
    const double C162 = C117 * C123;
    const double C10898 = C10871 * C123;
    const double C33342 = C33315 * C123;
    const double C354 = C117 * C302;
    const double C11102 = C10871 * C302;
    const double C33546 = C33315 * C302;
    const double C360 = C117 * C303;
    const double C11470 = C10871 * C303;
    const double C33914 = C33315 * C303;
    const double C541 = C117 * C494;
    const double C5374 = C5345 * C494;
    const double C10894 = C10872 * C494;
    const double C11633 = C10871 * C494;
    const double C33338 = C33316 * C494;
    const double C34077 = C33315 * C494;
    const double C549 = C117 * C499;
    const double C5366 = C5346 * C499;
    const double C6090 = C5345 * C499;
    const double C11296 = C10871 * C499;
    const double C11282 = C10872 * C499;
    const double C33740 = C33315 * C499;
    const double C33726 = C33316 * C499;
    const double C988 = C117 * C963;
    const double C5926 = C5345 * C963;
    const double C11094 = C10872 * C963;
    const double C11852 = C10871 * C963;
    const double C33538 = C33316 * C963;
    const double C34296 = C33315 * C963;
    const double C3821 = C50915 * C1331;
    const double C14852 = C50979 * C1331;
    const double C15410 = C51058 * C1331;
    const double C21922 = C5343 * C1331;
    const double C22592 = C5342 * C1331;
    const double C23024 = C5341 * C1331;
    const double C37002 = C50979 * C1331;
    const double C47190 = C44230 * C1331;
    const double C15408 = C50979 * C4752;
    const double C22594 = C5343 * C4752;
    const double C23022 = C5342 * C4752;
    const double C37440 = C50979 * C4752;
    const double C47862 = C44230 * C4752;
    const double C3820 = C117 * C1327;
    const double C14851 = C10872 * C1327;
    const double C15409 = C10871 * C1327;
    const double C21921 = C5346 * C1327;
    const double C22591 = C5345 * C1327;
    const double C37001 = C33316 * C1327;
    const double C37441 = C33315 * C1327;
    const double C15407 = C10872 * C4744;
    const double C22593 = C5346 * C4744;
    const double C23021 = C5345 * C4744;
    const double C37439 = C33316 * C4744;
    const double C3660 = C117 * C2597;
    const double C31672 = C10871 * C2597;
    const double C37283 = C33315 * C2597;
    const double C3824 = C117 * C2803;
    const double C16065 = C10872 * C2803;
    const double C21937 = C5346 * C2803;
    const double C23525 = C5345 * C2803;
    const double C31830 = C10871 * C2803;
    const double C37009 = C33316 * C2803;
    const double C37449 = C33315 * C2803;
    const double C4346 = C117 * C3353;
    const double C15201 = C10872 * C3353;
    const double C22853 = C5345 * C3353;
    const double C32330 = C10871 * C3353;
    const double C36333 = C33316 * C3353;
    const double C37953 = C33315 * C3353;
    const double C5732 =
        (3 * (C49876 + C49822 * C50542 + C50540 * ae) +
         C49822 * (2 * C50542 +
                   C49822 * (C49880 + C49822 * (C49822 * C49885 + C49961 * ae) +
                             C49822 * C49961 * ae) +
                   C50543 * ae) +
         (2 * C50540 + C49822 * C50543) * ae) /
        C49759;
    const double C373 = C352 + C353;
    const double C172 = C156 + C157;
    const double C372 = C350 + C351;
    const double C559 = C537 + C538;
    const double C2644 = C2618 + C2619;
    const double C3386 = C3370 + C3371;
    const double C49897 = C49892 + C49896;
    const double C50033 = C50031 / C49833;
    const double C2602 = (3 * (C49881 + C49890 * C50009) +
                          C49823 * (2 * C50018 + C49823 * C50024)) /
                         C49759;
    const double C50098 = C50093 / C49693;
    const double C50081 = C50074 + C50078;
    const double C50259 = C50253 / C49833;
    const double C50269 = -C50266;
    const double C49938 = C49937 / C49693;
    const double C49944 = C49941 / C49693;
    const double C50185 = C50183 / C49833;
    const double C5735 =
        (-3 * (C49930 * C50161 + C49925)) / C49693 +
        C49822 * ((-2 * C50170) / C49693 - (C49822 * C50176) / C49693);
    const double C50217 = C50213 / C49693;
    const double C50215 = C50210 / C49693;
    const double C50244 = C50241 / C49693;
    const double C50350 = C50344 / C49693;
    const double C50346 = C50340 / C49833;
    const double C50358 = -C50354;
    const double C49993 = C49989 + C49992;
    const double C50059 = C50057 * ce;
    const double C50498 = C49982 + C50497;
    const double C50560 = C49982 + C50558;
    const double C50143 = C50141 * ce;
    const double C50519 = C49823 * C50141;
    const double C50577 = C50048 + C50575;
    const double C50590 = C49822 * C50587;
    const double C50299 = C50288 + C50296;
    const double C50298 = C50295 / C49693;
    const double C50626 = C50120 + C50624;
    const double C50639 = C49822 * C50636;
    const double C50659 = C50655 + C50657;
    const double C51067 = C51028 / C49761;
    const double C51069 = C51032 / C49759;
    const double C2434 = -C51068;
    const double C51070 = C51035 / C49695;
    const double C51072 = C51039 / C49693;
    const double C292 = -C51071;
    const double C51077 = C51051 / C49695;
    const double C51078 = C51053 / C49693;
    const double C1821 = -C51076;
    const double C51080 = C51060 / C49761;
    const double C51081 = C51062 / C49759;
    const double C17341 = -C51079;
    const double C1212 =
        (C49730 / C49718 - (0 * de) / C49693) / C49718 + (0 * ce) / C49693;
    const double C1448 = C49730 / C49718 - (0 * de) / C49693;
    const double C49729 = C49726 / C49693;
    const double C51089 = C51041 - C51074;
    const double C51090 = C51048 - C51075;
    const double C38911 =
        (C49796 / C49784 - (0 * be) / C49759) / C49784 + (0 * ae) / C49759;
    const double C44233 = C49796 / C49784 - (0 * be) / C49759;
    const double C49795 = C49792 / C49759;
    const double C5389 = C5358 + C5359;
    const double C10913 = C10888 + C10889;
    const double C10911 = C10884 + C10885;
    const double C10909 = C10880 + C10881;
    const double C10907 = C10876 + C10877;
    const double C11307 = C11278 + C11279;
    const double C13988 = C13961 + C13962;
    const double C13985 = C13955 + C13956;
    const double C13983 = C13951 + C13952;
    const double C33357 = C33332 + C33333;
    const double C33355 = C33328 + C33329;
    const double C33353 = C33324 + C33325;
    const double C33351 = C33320 + C33321;
    const double C33751 = C33722 + C33723;
    const double C36354 = C36325 + C36326;
    const double C36351 = C36319 + C36320;
    const double C36349 = C36315 + C36316;
    const double C179 = C169 * C50802;
    const double C339 = C169 * C289;
    const double C691 = C169 * C51044;
    const double C1118 = C169 * C1109;
    const double C178 = C168 * C118;
    const double C338 = C168 * C294;
    const double C690 = C168 * C683;
    const double C1117 = C168 * C1114;
    const double C51095 = C51056 - C51083;
    const double C10917 = C10896 + C10897;
    const double C10915 = C10892 + C10893;
    const double C10912 = C10886 + C10887;
    const double C10910 = C10882 + C10883;
    const double C10908 = C10878 + C10879;
    const double C10906 = C10874 + C10875;
    const double C11121 = C11100 + C11101;
    const double C11119 = C11096 + C11097;
    const double C11113 = C11084 + C11085;
    const double C11111 = C11080 + C11081;
    const double C11314 = C11292 + C11293;
    const double C11310 = C11284 + C11285;
    const double C11308 = C11280 + C11281;
    const double C11306 = C11276 + C11277;
    const double C11304 = C11272 + C11273;
    const double C13989 = C13963 + C13964;
    const double C13987 = C13959 + C13960;
    const double C13986 = C13957 + C13958;
    const double C13984 = C13953 + C13954;
    const double C14871 = C14853 + C14854;
    const double C14869 = C14849 + C14850;
    const double C15210 = C15203 + C15204;
    const double C16074 = C16067 + C16068;
    const double C5378 = C5344 * C133;
    const double C5372 = C5344 * C122;
    const double C5370 = C5344 * C121;
    const double C5364 = C5344 * C131;
    const double C5354 = C5344 * C129;
    const double C5348 = C5344 * C120;
    const double C5566 = C5344 * C314;
    const double C5560 = C5344 * C300;
    const double C5558 = C5344 * C312;
    const double C5552 = C5344 * C299;
    const double C5760 = C5344 * C515;
    const double C5754 = C5344 * C498;
    const double C5748 = C5344 * C503;
    const double C5742 = C5344 * C492;
    const double C5930 = C5344 * C316;
    const double C5924 = C5344 * C301;
    const double C6094 = C5344 * C505;
    const double C6088 = C5344 * C493;
    const double C6310 = C5344 * C969;
    const double C6304 = C5344 * C962;
    const double C21939 = C5344 * C310;
    const double C21933 = C5344 * C298;
    const double C21931 = C5344 * C308;
    const double C21925 = C5344 * C297;
    const double C22595 = C5344 * C967;
    const double C22589 = C5344 * C961;
    const double C22855 = C5344 * C1213;
    const double C23023 = C5344 * C1327;
    const double C23527 = C5344 * C1707;
    const double C5394 = C5368 + C5369;
    const double C5391 = C5362 + C5363;
    const double C5388 = C5356 + C5357;
    const double C5385 = C5350 + C5351;
    const double C5770 = C5750 + C5751;
    const double C21952 = C21935 + C21936;
    const double C21949 = C21929 + C21930;
    const double C21946 = C21923 + C21924;
    const double C51096 = C51065 - C51084;
    const double C33347 = C33313 * C144;
    const double C33341 = C33313 * C132;
    const double C33337 = C33313 * C143;
    const double C33331 = C33313 * C142;
    const double C33327 = C33313 * C130;
    const double C33323 = C33313 * C141;
    const double C33319 = C33313 * C128;
    const double C33545 = C33313 * C331;
    const double C33541 = C33313 * C315;
    const double C33535 = C33313 * C330;
    const double C33531 = C33313 * C313;
    const double C33529 = C33313 * C329;
    const double C33525 = C33313 * C311;
    const double C33737 = C33313 * C528;
    const double C33733 = C33313 * C514;
    const double C33729 = C33313 * C523;
    const double C33725 = C33313 * C504;
    const double C33721 = C33313 * C522;
    const double C33717 = C33313 * C502;
    const double C34293 = C33313 * C977;
    const double C34289 = C33313 * C968;
    const double C36348 = C33313 * C1226;
    const double C36344 = C33313 * C1219;
    const double C36336 = C33313 * C1225;
    const double C36332 = C33313 * C1217;
    const double C36328 = C33313 * C328;
    const double C36324 = C33313 * C309;
    const double C36322 = C33313 * C327;
    const double C36318 = C33313 * C307;
    const double C37018 = C33313 * C1713;
    const double C37008 = C33313 * C1711;
    const double C37004 = C33313 * C976;
    const double C37000 = C33313 * C966;
    const double C37442 = C33313 * C1331;
    const double C49852 = C49851 / C49759;
    const double C50025 = -C50022;
    const double C50177 = -C50174;
    const double C50080 = C50077 / C49759;
    const double C50243 = C50239 / C49759;
    const double C50015 = C50013 / C49759;
    const double C50167 = C50165 / C49759;
    const double C163 = C50915 * C135;
    const double C10899 = C51058 * C135;
    const double C33343 = C33313 * C135;
    const double C355 = C50915 * C317;
    const double C11103 = C51058 * C317;
    const double C33547 = C33313 * C317;
    const double C361 = C50915 * C319;
    const double C11471 = C51058 * C319;
    const double C33915 = C33313 * C319;
    const double C542 = C50915 * C506;
    const double C5375 = C5342 * C506;
    const double C10895 = C50979 * C506;
    const double C11634 = C51058 * C506;
    const double C33339 = C50979 * C506;
    const double C34078 = C33313 * C506;
    const double C550 = C50915 * C516;
    const double C5367 = C5343 * C516;
    const double C6091 = C5342 * C516;
    const double C11297 = C51058 * C516;
    const double C11283 = C50979 * C516;
    const double C33741 = C33313 * C516;
    const double C33727 = C50979 * C516;
    const double C44254 = C44230 * C516;
    const double C989 = C50915 * C970;
    const double C5927 = C5342 * C970;
    const double C11095 = C50979 * C970;
    const double C11853 = C51058 * C970;
    const double C33539 = C50979 * C970;
    const double C34297 = C33313 * C970;
    const double C2637 = C50915 * C1221;
    const double C2823 = C50915 * C1333;
    const double C5549 = C5343 * C1333;
    const double C6307 = C5342 * C1333;
    const double C11847 = C50979 * C1333;
    const double C14190 = C51058 * C1333;
    const double C34291 = C50979 * C1333;
    const double C41140 = C33313 * C1333;
    const double C44436 = C44230 * C1333;
    const double C3661 = C50915 * C2600;
    const double C31673 = C51058 * C2600;
    const double C37284 = C33313 * C2600;
    const double C3825 = C50915 * C2806;
    const double C16066 = C50979 * C2806;
    const double C21938 = C5343 * C2806;
    const double C23526 = C5342 * C2806;
    const double C31831 = C51058 * C2806;
    const double C37010 = C50979 * C2806;
    const double C37450 = C33313 * C2806;
    const double C47206 = C44230 * C2806;
    const double C4347 = C50915 * C3356;
    const double C15202 = C50979 * C3356;
    const double C22854 = C5342 * C3356;
    const double C32331 = C51058 * C3356;
    const double C36334 = C50979 * C3356;
    const double C37954 = C33313 * C3356;
    const double C50079 = -C50076;
    const double C50606 = C49880 + C50604;
    const double C160 = C117 * C134;
    const double C10902 = C10871 * C134;
    const double C33346 = C33315 * C134;
    const double C356 = C117 * C318;
    const double C11106 = C10871 * C318;
    const double C33550 = C33315 * C318;
    const double C362 = C117 * C320;
    const double C11474 = C10871 * C320;
    const double C33918 = C33315 * C320;
    const double C543 = C117 * C507;
    const double C5380 = C5345 * C507;
    const double C10890 = C10872 * C507;
    const double C11637 = C10871 * C507;
    const double C33334 = C33316 * C507;
    const double C34081 = C33315 * C507;
    const double C551 = C117 * C517;
    const double C5360 = C5346 * C517;
    const double C6096 = C5345 * C517;
    const double C11300 = C10871 * C517;
    const double C11286 = C10872 * C517;
    const double C33744 = C33315 * C517;
    const double C33730 = C33316 * C517;
    const double C992 = C117 * C971;
    const double C5932 = C5345 * C971;
    const double C11098 = C10872 * C971;
    const double C11856 = C10871 * C971;
    const double C33542 = C33316 * C971;
    const double C34300 = C33315 * C971;
    const double C6098 = C5346 * C1997;
    const double C11302 = C10872 * C1997;
    const double C33746 = C33316 * C1997;
    const double C1340 =
        (-(C49823 * C49966) / C49693) / C49759 - (C49881 * ce) / C49833 -
        (ae * C49822 * C49978) / C49833 +
        C49822 * (C49822 * ((-(C49823 * C49855) / C49693) / C49759 -
                            (C49890 * ce) / C49833) -
                  (ae * C49978) / C49833);
    const double C1720 =
        C49822 *
            ((-(C49823 * C49890 * ce) / C49693) / C49759 - C49966 / C49833 +
             C49823 * ((-(C49823 * C49855) / C49693) / C49759 -
                       (C49890 * ce) / C49833)) -
        (ae * (C49823 * C49978 + C49925 + C49823 * C49976 * ce)) / C49833;
    const double C1220 =
        (-2 * (C49823 * C49925 + C50396 * ce)) / C49693 -
        (C49823 * (C49823 * C49978 + C49925 + C49823 * C49976 * ce)) / C49693 -
        ((C50396 + C49976 * C50009) * ce) / C49693;
    const double C1334 =
        -(C49978 * C50161 + C49823 * C49925 + C50396 * ce) / C49693;
    const double C1714 =
        -(C49822 * (C49823 * C49978 + C49925 + C50463 * ce)) / C49693;
    const double C5776 = C5762 + C5763;
    const double C5771 = C5752 + C5753;
    const double C11315 = C11294 + C11295;
    const double C33759 = C33738 + C33739;
    const double C50043 = C50042 + C49916;
    const double C50117 = C50112 / C49693;
    const double C50194 = C50192 / C49833;
    const double C50242 = -C50238;
    const double C49984 = C49980 + C49983;
    const double C50409 = C50407 + C50408;
    const double C1335 =
        (C49823 * C49887 + C49822 * (C49822 * C50029 + C50466 * ae) +
         C49822 * C50466 * ae) /
        C49759;
    const double C6300 =
        (2 * (C49822 * C50029 + C50466 * ae) +
         C49822 * (C50029 + C49822 * (C49822 * C49823 * C49906 + C50057 * ae) +
                   C49822 * C50057 * ae) +
         (C50466 + C50057 * C50161) * ae) /
        C49759;
    const double C1329 = C49823 * C50402 + C50466 * C50161;
    const double C6299 =
        2 * C49822 * C50466 + C49822 * (C50466 + C50057 * C50161);
    const double C50559 = C50555 + C50556;
    const double C3153 = C50915 * C1715;
    const double C11105 = C50979 * C1715;
    const double C33549 = C50979 * C1715;
    const double C6093 = C5343 * C1998;
    const double C11299 = C50979 * C1998;
    const double C33743 = C50979 * C1998;
    const double C44968 = C44230 * C1998;
    const double C2636 = C117 * C1215;
    const double C3152 = C117 * C1709;
    const double C11104 = C10872 * C1709;
    const double C33548 = C33316 * C1709;
    const double C6092 = C5346 * C1992;
    const double C11298 = C10872 * C1992;
    const double C33742 = C33316 * C1992;
    const double C50576 = C50572 + C50573;
    const double C6309 = C5343 * C4750;
    const double C14192 = C50979 * C4750;
    const double C41142 = C50979 * C4750;
    const double C45180 = C44230 * C4750;
    const double C6308 = C5346 * C4743;
    const double C14191 = C10872 * C4743;
    const double C41141 = C33316 * C4743;
    const double C50051 = C49823 * C50049;
    const double C50131 = -2 * C50049;
    const double C50200 = ae * C50049;
    const double C50198 = C49822 * C50049;
    const double C4749 = (-2 * C49822 * C49978) / C49693 -
                         (C49822 * (C50049 * C50161 + C49978)) / C49693;
    const double C2808 =
        (C49881 + C49890 * C50009 + C49822 * (C49822 * C50024 + C50494 * ae) +
         C49822 * C50494 * ae) /
        C49759;
    const double C3358 = (C49822 * (2 * C50018 + C49823 * C50024) +
                          (2 * C50463 + C49823 * C50494) * ae) /
                         C49759;
    const double C2598 = 3 * (C50396 + C49976 * C50009) +
                         C49823 * (2 * C50463 + C49823 * C50494);
    const double C2804 = C50396 + C49976 * C50009 + C50494 * C50161;
    const double C3354 = C49822 * (2 * C50463 + C49823 * C50494);
    const double C4741 =
        2 * C49822 * C50494 + C49822 * (C50494 + C50141 * C50161);
    const double C5734 =
        (3 * (C49881 + C49822 * C50550 + C50548 * ae) +
         C49822 * (2 * C50550 +
                   C49822 * (C49890 + C49822 * (C49822 * C49901 + C49987 * ae) +
                             C49822 * C49987 * ae) +
                   C50551 * ae) +
         (2 * C50548 + C49822 * C50551) * ae) /
        C49759;
    const double C5730 = 3 * (C50396 + C49976 * C50161) +
                         C49822 * (2 * C50548 + C49822 * C50551);
    const double C50589 = C49822 * C50585;
    const double C50124 = C50122 / C49693;
    const double C50515 = C50513 + C50514;
    const double C50625 = C50621 + C50622;
    const double C23524 = C5343 * C4748;
    const double C31829 = C50979 * C4748;
    const double C37448 = C50979 * C4748;
    const double C48788 = C44230 * C4748;
    const double C23523 = C5346 * C4742;
    const double C31828 = C10872 * C4742;
    const double C37447 = C33316 * C4742;
    const double C6713 =
        (3 * (C50006 + C49822 * C50568 + C50566 * ae) +
         C49822 * (2 * C50568 +
                   C49822 * (C50067 + C49822 * (C49822 * C50254 + C50115 * ae) +
                             C49822 * C50115 * ae) +
                   C50569 * ae) +
         (2 * C50566 + C49822 * C50569) * ae) /
        C49759;
    const double C6711 = 3 * (C50460 + C50039 * C50161) +
                         C49822 * (2 * C50566 + C49822 * C50569);
    const double C50638 = C49822 * C50634;
    const double C50123 = C50121 + C49919;
    const double C50195 = C50193 + C50040;
    const double C50290 = C50283 / C49693;
    const double C50326 = C50323 / C49833;
    const double C50327 = -2 * C50321;
    const double C50325 = ae * C50321;
    const double C50607 = C50603 + C50605;
    const double C50658 = C49885 + C50656;
    const double C49866 = C49865 / C49759;
    const double C50102 = -C50099;
    const double C50216 = -C50211;
    const double C50270 = C50267 / C49759;
    const double C50359 = C50355 / C49759;
    const double C49908 = C49903 + C49907;
    const double C50034 = C49895 + C50032;
    const double C50103 = C49823 * C50100;
    const double C4746 =
        (2 * (C49822 * C50024 + C50494 * ae) +
         C49822 * (C50024 + C49822 * (C49822 * C50100 + C50141 * ae) +
                   C49822 * C50141 * ae) +
         (C50494 + C50141 * C50161) * ae) /
        C49759;
    const double C50271 = C50263 + C50268;
    const double C49951 = C49950 / C49693;
    const double C50058 = C50055 + C50056;
    const double C50186 = C50184 + C49936;
    const double C50142 = C49823 * C50139;
    const double C50201 = C50139 * C50161;
    const double C50218 = C49822 * C50214;
    const double C50297 = C50294 + C49933;
    const double C50328 = C50324 + C50118;
    const double C50360 = C50357 / C49693;
    const double C180 = C170 * C118;
    const double C348 = C170 * C294;
    const double C694 = C170 * C683;
    const double C1121 = C170 * C1114;
    const double C380 = C368 * C295;
    const double C692 = C368 * C684;
    const double C1119 = C368 * C1115;
    const double C2440 = C368 * C118;
    const double C2622 = C368 * C294;
    const double C2988 = C368 * C683;
    const double C3538 = C368 * C1114;
    const double C569 = C557 * C118;
    const double C985 = C557 * C683;
    const double C1600 = C557 * C1114;
    const double C181 = C171 * C50802;
    const double C349 = C171 * C289;
    const double C695 = C171 * C51044;
    const double C1122 = C171 * C1109;
    const double C183 = C173 * C50802;
    const double C359 = C173 * C289;
    const double C699 = C173 * C51044;
    const double C1126 = C173 * C1109;
    const double C381 = C369 * C290;
    const double C693 = C369 * C50854;
    const double C1120 = C369 * C50854;
    const double C2441 = C369 * C50802;
    const double C2623 = C369 * C289;
    const double C2989 = C369 * C51044;
    const double C3539 = C369 * C1109;
    const double C570 = C558 * C50802;
    const double C984 = C558 * C51044;
    const double C1599 = C558 * C1109;
    const double C572 = C560 * C50802;
    const double C990 = C560 * C51044;
    const double C1603 = C560 * C1109;
    const double C576 = C564 * C50802;
    const double C3823 = C50915 * C1339;
    const double C14856 = C50979 * C1339;
    const double C15414 = C51058 * C1339;
    const double C21928 = C5343 * C1339;
    const double C22598 = C5342 * C1339;
    const double C23030 = C5341 * C1339;
    const double C37006 = C50979 * C1339;
    const double C37446 = C33313 * C1339;
    const double C47196 = C44230 * C1339;
    const double C3373 = C50915 * C1719;
    const double C13966 = C50979 * C1719;
    const double C16072 = C51058 * C1719;
    const double C21942 = C5342 * C1719;
    const double C23534 = C5341 * C1719;
    const double C36330 = C50979 * C1719;
    const double C37012 = C33313 * C1719;
    const double C2620 = C117 * C1218;
    const double C15207 = C10871 * C1218;
    const double C22861 = C5344 * C1218;
    const double C36335 = C33315 * C1218;
    const double C3822 = C117 * C1332;
    const double C14855 = C10872 * C1332;
    const double C15413 = C10871 * C1332;
    const double C21927 = C5346 * C1332;
    const double C22597 = C5345 * C1332;
    const double C23029 = C5344 * C1332;
    const double C37005 = C33316 * C1332;
    const double C37445 = C33315 * C1332;
    const double C3372 = C117 * C1712;
    const double C13965 = C10872 * C1712;
    const double C16071 = C10871 * C1712;
    const double C21941 = C5345 * C1712;
    const double C23533 = C5344 * C1712;
    const double C36329 = C33316 * C1712;
    const double C37011 = C33315 * C1712;
    const double C15411 = C10872 * C4751;
    const double C22599 = C5346 * C4751;
    const double C23027 = C5345 * C4751;
    const double C37443 = C33316 * C4751;
    const double C371 = C346 + C347;
    const double C11116 = C11090 + C11091;
    const double C1001 = C986 + C987;
    const double C5576 = C5556 + C5557;
    const double C11112 = C11082 + C11083;
    const double C11862 = C11848 + C11849;
    const double C33556 = C33526 + C33527;
    const double C370 = C344 + C345;
    const double C11114 = C11086 + C11087;
    const double C563 = C545 + C546;
    const double C5386 = C5352 + C5353;
    const double C5767 = C5744 + C5745;
    const double C11312 = C11288 + C11289;
    const double C11305 = C11274 + C11275;
    const double C33749 = C33718 + C33719;
    const double C1000 = C982 + C983;
    const double C5573 = C5550 + C5551;
    const double C11110 = C11078 + C11079;
    const double C11860 = C11844 + C11845;
    const double C33554 = C33522 + C33523;
    const double C2646 = C2626 + C2627;
    const double C13991 = C13975 + C13976;
    const double C2830 = C2818 + C2819;
    const double C5579 = C5562 + C5563;
    const double C11115 = C11088 + C11089;
    const double C14873 = C14859 + C14860;
    const double C33559 = C33532 + C33533;
    const double C5773 = C5756 + C5757;
    const double C5768 = C5746 + C5747;
    const double C11313 = C11290 + C11291;
    const double C33757 = C33734 + C33735;
    const double C3828 = C3820 + C3821;
    const double C14870 = C14851 + C14852;
    const double C15416 = C15409 + C15410;
    const double C21945 = C21921 + C21922;
    const double C22602 = C22591 + C22592;
    const double C37024 = C37001 + C37002;
    const double C15415 = C15407 + C15408;
    const double C22603 = C22593 + C22594;
    const double C23032 = C23021 + C23022;
    const double C37455 = C37439 + C37440;
    const double C385 = C373 * C290;
    const double C697 = C373 * C50854;
    const double C1124 = C373 * C50854;
    const double C2446 = C373 * C50802;
    const double C2997 = C373 * C51044;
    const double C3547 = C373 * C1109;
    const double C8344 = C373 * C289;
    const double C182 = C172 * C118;
    const double C358 = C172 * C294;
    const double C698 = C172 * C683;
    const double C1125 = C172 * C1114;
    const double C384 = C372 * C295;
    const double C696 = C372 * C684;
    const double C1123 = C372 * C1115;
    const double C2447 = C372 * C118;
    const double C2998 = C372 * C683;
    const double C3548 = C372 * C1114;
    const double C8343 = C372 * C294;
    const double C571 = C559 * C118;
    const double C991 = C559 * C683;
    const double C1604 = C559 * C1114;
    const double C136 = (4 * (2 * C49881 + C49830 * C49887) +
                         C49830 * (3 * C49887 + C49830 * C49897)) /
                        C49759;
    const double C321 =
        (2 * C49881 + C49830 * C49887 + C49897 * C50009) / C49759;
    const double C323 = (C49823 * (3 * C49887 + C49830 * C49897)) / C49759;
    const double C2633 = C50915 * C2602;
    const double C50101 = -C50098;
    const double C3653 = (4 * (2 * C50006 + C49823 * C50014) +
                          C49823 * (3 * C50014 + C49823 * C50081)) /
                         C49759;
    const double C50272 = C50269 / C49759;
    const double C49939 = C49934 - C49938;
    const double C5764 = C5346 * C5735;
    const double C50219 = -C50215;
    const double C50247 = C50240 - C50244;
    const double C50361 = C50358 / C49759;
    const double C49994 = C49993 * ce;
    const double C50415 = C49830 * C49993;
    const double C50469 = C49823 * C49993;
    const double C2599 = 3 * (C50402 + C49982 * C50009) +
                         C49823 * (2 * C50466 + C49823 * C50498);
    const double C2805 = C50402 + C49982 * C50009 + C50498 * C50161;
    const double C3355 = C49822 * (2 * C50466 + C49823 * C50498);
    const double C5731 = 3 * (C50402 + C49982 * C50161) +
                         C49822 * (2 * C50557 + C49822 * C50560);
    const double C50145 = C50143 / C49693;
    const double C50520 = C50518 + C50519;
    const double C6712 = 3 * (C50463 + C50048 * C50161) +
                         C49822 * (2 * C50574 + C49822 * C50577);
    const double C50592 = C50588 + C50590;
    const double C50301 = C50299 * ce;
    const double C50612 = C49823 * C50299;
    const double C23014 = 3 * (C50490 + C50120 * C50161) +
                          C49822 * (2 * C50623 + C49822 * C50626);
    const double C50641 = C50637 + C50639;
    const double C50661 = C49822 * C50659;
    const double C51085 = C51027 - C51067;
    const double C51086 = C51031 - C51069;
    const double C51087 = C51034 - C51070;
    const double C51088 = C51038 - C51072;
    const double C51091 = C51043 - C51077;
    const double C51092 = C51052 - C51078;
    const double C51093 = C51054 - C51080;
    const double C51094 = C51061 - C51081;
    const double C49732 = C50802 - C49729;
    const double C1463 = C173 * C51089;
    const double C1457 = C171 * C51089;
    const double C1451 = C169 * C51089;
    const double C3979 = C369 * C51089;
    const double C9547 = C373 * C51089;
    const double C1204 =
        (C51089 * C50849) / C49693 + (C51044 - C51073) / C49718;
    const double C1459 = C373 * C51090;
    const double C1453 = C369 * C51090;
    const double C1205 =
        (C51090 * C50849) / C49693 + (2 * C50854 + C51089) / C49718;
    const double C1206 = (C50849 * C50854) / C49697 + C51090 / C49718;
    const double C44253 = C44233 * C499;
    const double C44247 = C44233 * C517;
    const double C44245 = C44233 * C515;
    const double C44239 = C44233 * C498;
    const double C44435 = C44233 * C1328;
    const double C44639 = C44233 * C5735;
    const double C44627 = C44233 * C1999;
    const double C44621 = C44233 * C1993;
    const double C44973 = C44233 * C1997;
    const double C44967 = C44233 * C1992;
    const double C45179 = C44233 * C4743;
    const double C47205 = C44233 * C2803;
    const double C47195 = C44233 * C1332;
    const double C47189 = C44233 * C1327;
    const double C47867 = C44233 * C4751;
    const double C47861 = C44233 * C4744;
    const double C48787 = C44233 * C4742;
    const double C49798 = C50915 - C49795;
    const double C44266 = C51095 * C143;
    const double C44260 = C51095 * C132;
    const double C44258 = C51095 * C130;
    const double C44252 = C51095 * C142;
    const double C44242 = C51095 * C141;
    const double C44236 = C51095 * C128;
    const double C44454 = C51095 * C330;
    const double C44448 = C51095 * C313;
    const double C44446 = C51095 * C329;
    const double C44440 = C51095 * C311;
    const double C44636 = C51095 * C528;
    const double C44630 = C51095 * C514;
    const double C44624 = C51095 * C522;
    const double C44618 = C51095 * C502;
    const double C44806 = C51095 * C331;
    const double C44800 = C51095 * C315;
    const double C44970 = C51095 * C523;
    const double C44964 = C51095 * C504;
    const double C45182 = C51095 * C977;
    const double C45176 = C51095 * C968;
    const double C47208 = C51095 * C328;
    const double C47202 = C51095 * C309;
    const double C47200 = C51095 * C327;
    const double C47194 = C51095 * C307;
    const double C47864 = C51095 * C976;
    const double C47858 = C51095 * C966;
    const double C48130 = C51095 * C1225;
    const double C48124 = C51095 * C1217;
    const double C48294 = C51095 * C1339;
    const double C48288 = C51095 * C1331;
    const double C48798 = C51095 * C1719;
    const double C48792 = C51095 * C1711;
    const double C38904 =
        (C51095 * C50974) / C49759 + (C51058 - C51082) / C49784;
    const double C10923 = C10912 + C10913;
    const double C10922 = C10910 + C10911;
    const double C30790 = C13987 + C13988;
    const double C5399 = C5378 + C5379;
    const double C5396 = C5372 + C5373;
    const double C5395 = C5370 + C5371;
    const double C5392 = C5364 + C5365;
    const double C5387 = C5354 + C5355;
    const double C5384 = C5348 + C5349;
    const double C5581 = C5566 + C5567;
    const double C5578 = C5560 + C5561;
    const double C5577 = C5558 + C5559;
    const double C5574 = C5552 + C5553;
    const double C5775 = C5760 + C5761;
    const double C5772 = C5754 + C5755;
    const double C5769 = C5748 + C5749;
    const double C5766 = C5742 + C5743;
    const double C5939 = C5930 + C5931;
    const double C5936 = C5924 + C5925;
    const double C6103 = C6094 + C6095;
    const double C6100 = C6088 + C6089;
    const double C6319 = C6310 + C6311;
    const double C6316 = C6304 + C6305;
    const double C21954 = C21939 + C21940;
    const double C21951 = C21933 + C21934;
    const double C21950 = C21931 + C21932;
    const double C21947 = C21925 + C21926;
    const double C22604 = C22595 + C22596;
    const double C22601 = C22589 + C22590;
    const double C22865 = C22855 + C22856;
    const double C23033 = C23023 + C23024;
    const double C23537 = C23527 + C23528;
    const double C44262 = C51096 * C506;
    const double C44256 = C51096 * C504;
    const double C44250 = C51096 * C523;
    const double C44244 = C51096 * C522;
    const double C44238 = C51096 * C502;
    const double C44450 = C51096 * C1713;
    const double C44444 = C51096 * C977;
    const double C44438 = C51096 * C968;
    const double C44638 = C51096 * C2005;
    const double C44632 = C51096 * C2000;
    const double C44626 = C51096 * C528;
    const double C44620 = C51096 * C514;
    const double C44802 = C51096 * C970;
    const double C44966 = C51096 * C516;
    const double C45178 = C51096 * C1333;
    const double C47210 = C51096 * C1719;
    const double C47204 = C51096 * C1711;
    const double C47198 = C51096 * C976;
    const double C47192 = C51096 * C966;
    const double C47866 = C51096 * C1339;
    const double C47860 = C51096 * C1331;
    const double C48122 = C51096 * C3356;
    const double C48286 = C51096 * C4752;
    const double C48790 = C51096 * C2806;
    const double C38905 =
        (C51096 * C50974) / C49759 + (2 * C50979 + C51095) / C49784;
    const double C38906 = (C50974 * C50979) / C49763 + C51096 / C49784;
    const double C33361 = C33340 + C33341;
    const double C33359 = C33336 + C33337;
    const double C33356 = C33330 + C33331;
    const double C33354 = C33326 + C33327;
    const double C33352 = C33322 + C33323;
    const double C33350 = C33318 + C33319;
    const double C33565 = C33544 + C33545;
    const double C33563 = C33540 + C33541;
    const double C33560 = C33534 + C33535;
    const double C33558 = C33530 + C33531;
    const double C33557 = C33528 + C33529;
    const double C33555 = C33524 + C33525;
    const double C33758 = C33736 + C33737;
    const double C33756 = C33732 + C33733;
    const double C33754 = C33728 + C33729;
    const double C33752 = C33724 + C33725;
    const double C33750 = C33720 + C33721;
    const double C33748 = C33716 + C33717;
    const double C34306 = C34292 + C34293;
    const double C34304 = C34288 + C34289;
    const double C36362 = C36343 + C36344;
    const double C36357 = C36331 + C36332;
    const double C36355 = C36327 + C36328;
    const double C36353 = C36323 + C36324;
    const double C36352 = C36321 + C36322;
    const double C36350 = C36317 + C36318;
    const double C37032 = C37017 + C37018;
    const double C37027 = C37007 + C37008;
    const double C37025 = C37003 + C37004;
    const double C37023 = C36999 + C37000;
    const double C37456 = C37441 + C37442;
    const double C49853 = C49852 - C49846;
    const double C50026 = C50025 / C49759;
    const double C50178 = C50177 / C49759;
    const double C50083 = C50080 - C50073;
    const double C50246 = C50243 - C50235;
    const double C50016 = C50015 - C50011;
    const double C50168 = C50167 - C50163;
    const double C175 = C162 + C163;
    const double C10918 = C10898 + C10899;
    const double C33362 = C33342 + C33343;
    const double C374 = C354 + C355;
    const double C11122 = C11102 + C11103;
    const double C33566 = C33546 + C33547;
    const double C376 = C360 + C361;
    const double C11481 = C11470 + C11471;
    const double C33925 = C33914 + C33915;
    const double C561 = C541 + C542;
    const double C5397 = C5374 + C5375;
    const double C10916 = C10894 + C10895;
    const double C11643 = C11633 + C11634;
    const double C33360 = C33338 + C33339;
    const double C34087 = C34077 + C34078;
    const double C565 = C549 + C550;
    const double C5393 = C5366 + C5367;
    const double C6101 = C6090 + C6091;
    const double C11316 = C11296 + C11297;
    const double C11309 = C11282 + C11283;
    const double C33760 = C33740 + C33741;
    const double C33753 = C33726 + C33727;
    const double C1002 = C988 + C989;
    const double C5937 = C5926 + C5927;
    const double C11118 = C11094 + C11095;
    const double C11864 = C11852 + C11853;
    const double C33562 = C33538 + C33539;
    const double C34308 = C34296 + C34297;
    const double C2832 = C2822 + C2823;
    const double C5572 = C5548 + C5549;
    const double C6317 = C6306 + C6307;
    const double C11861 = C11846 + C11847;
    const double C14197 = C14189 + C14190;
    const double C34305 = C34290 + C34291;
    const double C41147 = C41139 + C41140;
    const double C3664 = C3660 + C3661;
    const double C31679 = C31672 + C31673;
    const double C37290 = C37283 + C37284;
    const double C3830 = C3824 + C3825;
    const double C16073 = C16065 + C16066;
    const double C21953 = C21937 + C21938;
    const double C23536 = C23525 + C23526;
    const double C31837 = C31830 + C31831;
    const double C37028 = C37009 + C37010;
    const double C37460 = C37449 + C37450;
    const double C4350 = C4346 + C4347;
    const double C15209 = C15201 + C15202;
    const double C22864 = C22853 + C22854;
    const double C32337 = C32330 + C32331;
    const double C36358 = C36333 + C36334;
    const double C37960 = C37953 + C37954;
    const double C50082 = C50079 / C49759;
    const double C50608 = C50606 + C50601;
    const double C174 = C160 + C161;
    const double C10920 = C10902 + C10903;
    const double C33364 = C33346 + C33347;
    const double C2825 = C50915 * C1340;
    const double C5555 = C5343 * C1340;
    const double C6313 = C5342 * C1340;
    const double C11851 = C50979 * C1340;
    const double C14194 = C51058 * C1340;
    const double C34295 = C50979 * C1340;
    const double C41144 = C33313 * C1340;
    const double C44442 = C44230 * C1340;
    const double C45184 = C51096 * C1340;
    const double C2821 = C50915 * C1720;
    const double C5569 = C5342 * C1720;
    const double C11093 = C50979 * C1720;
    const double C14866 = C51058 * C1720;
    const double C33537 = C50979 * C1720;
    const double C37022 = C33313 * C1720;
    const double C44456 = C51096 * C1720;
    const double C2628 = C117 * C1220;
    const double C13979 = C10871 * C1220;
    const double C36347 = C33315 * C1220;
    const double C2824 = C117 * C1334;
    const double C5554 = C5346 * C1334;
    const double C6312 = C5345 * C1334;
    const double C11850 = C10872 * C1334;
    const double C14193 = C10871 * C1334;
    const double C34294 = C33316 * C1334;
    const double C41143 = C33315 * C1334;
    const double C44441 = C44233 * C1334;
    const double C2820 = C117 * C1714;
    const double C5568 = C5345 * C1714;
    const double C11092 = C10872 * C1714;
    const double C14865 = C10871 * C1714;
    const double C33536 = C33316 * C1714;
    const double C37021 = C33315 * C1714;
    const double C50044 = C50043 + C50041;
    const double C50245 = C50242 / C49759;
    const double C1222 =
        (-2 * (C49823 * C49928 + C50402 * ce)) / C49693 -
        (C49823 * (C49823 * C49984 + C49928 + C49823 * C49982 * ce)) / C49693 -
        ((C50402 + C49982 * C50009) * ce) / C49693;
    const double C1336 =
        -(C49984 * C50161 + C49823 * C49928 + C50402 * ce) / C49693;
    const double C1716 =
        -(C49822 * (C49823 * C49984 + C49928 + C50466 * ce)) / C49693;
    const double C508 = (C49822 * (3 * C49887 + C49830 * C49897) +
                         (3 * C50402 + C49830 * C50409) * ae) /
                        C49759;
    const double C518 =
        (2 * C49881 + C49830 * C49887 +
         C49822 * (C49822 * C49897 + C50409 * ae) + C49822 * C50409 * ae) /
        C49759;
    const double C972 =
        (C49822 * C49823 * C49897 + C49823 * C50409 * ae) / C49759;
    const double C124 = 4 * (2 * C50396 + C49830 * C50402) +
                        C49830 * (3 * C50402 + C49830 * C50409);
    const double C304 = 2 * C50396 + C49830 * C50402 + C50409 * C50009;
    const double C305 = C49823 * (3 * C50402 + C49830 * C50409);
    const double C495 = C49822 * (3 * C50402 + C49830 * C50409);
    const double C500 = 2 * C50396 + C49830 * C50402 + C50409 * C50161;
    const double C964 = C49822 * C49823 * C50409;
    const double C1216 =
        2 * C49823 * C50409 + C49823 * (C50409 + C49993 * C50009);
    const double C1710 = C49822 * (C50409 + C49993 * C50009);
    const double C1991 =
        2 * C49822 * C50409 + C49822 * (C50409 + C49993 * C50161);
    const double C5929 = C5343 * C1335;
    const double C8496 = C50915 * C1335;
    const double C11855 = C50979 * C1335;
    const double C34299 = C50979 * C1335;
    const double C44804 = C44230 * C1335;
    const double C5928 = C5346 * C1329;
    const double C8495 = C117 * C1329;
    const double C11854 = C10872 * C1329;
    const double C34298 = C33316 * C1329;
    const double C44803 = C44233 * C1329;
    const double C5737 =
        (3 * (C49887 + C49822 * C50559 + C50557 * ae) +
         C49822 * (2 * C50559 +
                   C49822 * (C49895 + C49822 * (C49822 * C49906 + C49991 * ae) +
                             C49822 * C49991 * ae) +
                   C50560 * ae) +
         (2 * C50557 + C49822 * C50560) * ae) /
        C49759;
    const double C2650 = C2636 + C2637;
    const double C3156 = C3152 + C3153;
    const double C11123 = C11104 + C11105;
    const double C33567 = C33548 + C33549;
    const double C6102 = C6092 + C6093;
    const double C11317 = C11298 + C11299;
    const double C33761 = C33742 + C33743;
    const double C6715 =
        (3 * (C50018 + C49822 * C50576 + C50574 * ae) +
         C49822 * (2 * C50576 +
                   C49822 * (C50088 +
                             C49822 * (C49822 * C49823 * C50092 + C50137 * ae) +
                             C49822 * C50137 * ae) +
                   C50577 * ae) +
         (2 * C50574 + C49822 * C50577) * ae) /
        C49759;
    const double C6318 = C6308 + C6309;
    const double C14198 = C14191 + C14192;
    const double C41148 = C41141 + C41142;
    const double C50052 = C50051 + C49930;
    const double C50134 = C50131 / C49693;
    const double C50202 = C50200 / C49833;
    const double C6314 = C5346 * C4749;
    const double C14195 = C10872 * C4749;
    const double C41145 = C33316 * C4749;
    const double C45185 = C44233 * C4749;
    const double C2827 = C50915 * C2808;
    const double C5565 = C5343 * C2808;
    const double C14862 = C50979 * C2808;
    const double C37016 = C50979 * C2808;
    const double C44452 = C44230 * C2808;
    const double C3379 = C50915 * C3358;
    const double C13978 = C50979 * C3358;
    const double C36342 = C50979 * C3358;
    const double C2632 = C117 * C2598;
    const double C2826 = C117 * C2804;
    const double C5564 = C5346 * C2804;
    const double C14861 = C10872 * C2804;
    const double C37015 = C33316 * C2804;
    const double C44451 = C44233 * C2804;
    const double C3378 = C117 * C3354;
    const double C13977 = C10872 * C3354;
    const double C36341 = C33316 * C3354;
    const double C5759 = C5343 * C5734;
    const double C44634 = C44230 * C5734;
    const double C5758 = C5346 * C5730;
    const double C44633 = C44233 * C5730;
    const double C50591 = C49890 + C50589;
    const double C3813 =
        (2 * C50006 + C49823 * C50014 +
         C49822 * (C49822 * C50081 + C50515 * ae) + C49822 * C50515 * ae) /
        C49759;
    const double C4339 = (C49822 * (3 * C50014 + C49823 * C50081) +
                          (3 * C50490 + C49823 * C50515) * ae) /
                         C49759;
    const double C3651 = 4 * (2 * C50460 + C49823 * C50490) +
                         C49823 * (3 * C50490 + C49823 * C50515);
    const double C3811 = 2 * C50460 + C49823 * C50490 + C50515 * C50161;
    const double C4337 = C49822 * (3 * C50490 + C49823 * C50515);
    const double C21346 =
        2 * C49822 * C50515 + C49822 * (C50515 + C50299 * C50161);
    const double C23015 =
        (3 * (C50014 + C49822 * C50625 + C50623 * ae) +
         C49822 * (2 * C50625 +
                   C49822 * (C50075 + C49822 * (C49822 * C50264 + C50293 * ae) +
                             C49822 * C50293 * ae) +
                   C50626 * ae) +
         (2 * C50623 + C49822 * C50626) * ae) /
        C49759;
    const double C23535 = C23523 + C23524;
    const double C31836 = C31828 + C31829;
    const double C37459 = C37447 + C37448;
    const double C23020 = C5343 * C6713;
    const double C48284 = C44230 * C6713;
    const double C23019 = C5346 * C6711;
    const double C48283 = C44233 * C6711;
    const double C50640 = C50067 + C50638;
    const double C50125 = C50123 + C50119;
    const double C6714 =
        (-3 * (C50040 * C50161 + C49973)) / C49693 +
        C49822 * ((-2 * C50190) / C49693 - (C49822 * C50195) / C49693);
    const double C50331 = C50327 / C49693;
    const double C50329 = C50325 / C49833;
    const double C7596 = 4 * (2 * C50540 + C49822 * C50543) +
                         C49822 * (3 * C50543 + C49822 * C50607);
    const double C50660 = C50658 + C50653;
    const double C49867 = C49866 - C49858;
    const double C50105 = C50102 / C49759;
    const double C50220 = C50216 / C49759;
    const double C50273 = C50270 - C50262;
    const double C50362 = C50359 - C50349;
    const double C49909 = C49830 * C49908;
    const double C1223 =
        (2 * C49823 * C49897 + C49823 * (C49897 + C49908 * C50009)) / C49759;
    const double C1717 = (C49822 * (C49897 + C49908 * C50009) +
                          (C50409 + C49993 * C50009) * ae) /
                         C49759;
    const double C1996 =
        (2 * (C49822 * C49897 + C50409 * ae) +
         C49822 * (C49897 + C49822 * (C49822 * C49908 + C49993 * ae) +
                   C49822 * C49993 * ae) +
         (C50409 + C49993 * C50161) * ae) /
        C49759;
    const double C2604 = (3 * (C49887 + C49895 * C50009) +
                          C49823 * (2 * C50029 + C49823 * C50034)) /
                         C49759;
    const double C2811 =
        (C49887 + C49895 * C50009 + C49822 * (C49822 * C50034 + C50498 * ae) +
         C49822 * C50498 * ae) /
        C49759;
    const double C3360 = (C49822 * (2 * C50029 + C49823 * C50034) +
                          (2 * C50466 + C49823 * C50498) * ae) /
                         C49759;
    const double C50106 = C50096 + C50103;
    const double C50274 = C49823 * C50271;
    const double C21348 =
        (2 * (C49822 * C50081 + C50515 * ae) +
         C49822 * (C50081 + C49822 * (C49822 * C50271 + C50299 * ae) +
                   C49822 * C50299 * ae) +
         (C50515 + C50299 * C50161) * ae) /
        C49759;
    const double C49952 = C49947 - C49951;
    const double C50060 = C49823 * C50058;
    const double C6301 = (-2 * C49822 * C49984) / C49693 -
                         (C49822 * (C50058 * C50161 + C49984)) / C49693;
    const double C5736 =
        (-3 * (C49936 * C50161 + C49928)) / C49693 +
        C49822 * ((-2 * C50181) / C49693 - (C49822 * C50186) / C49693);
    const double C50144 = C50142 + C49942;
    const double C50203 = C50201 + C50049;
    const double C50221 = C50218 / C49693;
    const double C50300 = C50297 + C50292;
    const double C50332 = C49822 * C50328;
    const double C50363 = C50356 - C50360;
    const double C188 = C180 + C181;
    const double C708 = C694 + C695;
    const double C1133 = C1121 + C1122;
    const double C2645 = C2620 + C2621;
    const double C15212 = C15207 + C15208;
    const double C22868 = C22861 + C22862;
    const double C36359 = C36335 + C36336;
    const double C3829 = C3822 + C3823;
    const double C14872 = C14855 + C14856;
    const double C15418 = C15413 + C15414;
    const double C21948 = C21927 + C21928;
    const double C22605 = C22597 + C22598;
    const double C23036 = C23029 + C23030;
    const double C37026 = C37005 + C37006;
    const double C37458 = C37445 + C37446;
    const double C3387 = C3372 + C3373;
    const double C13990 = C13965 + C13966;
    const double C16076 = C16071 + C16072;
    const double C21955 = C21941 + C21942;
    const double C23540 = C23533 + C23534;
    const double C36356 = C36329 + C36330;
    const double C37029 = C37011 + C37012;
    const double C383 = C371 * C291;
    const double C1455 = C371 * C1443;
    const double C2443 = C371 * C50802;
    const double C2631 = C371 * C289;
    const double C2625 = C371 * C290;
    const double C2993 = C371 * C51044;
    const double C2991 = C371 * C50854;
    const double C3543 = C371 * C1109;
    const double C3541 = C371 * C50854;
    const double C3985 = C371 * C51089;
    const double C3981 = C371 * C51090;
    const double C1007 = C1001 * C50854;
    const double C1601 = C1001 * C50854;
    const double C2817 = C1001 * C50802;
    const double C3375 = C1001 * C51044;
    const double C4185 = C1001 * C1109;
    const double C13972 = C11113 + C11112;
    const double C13968 = C11112 + C11113;
    const double C382 = C370 * C296;
    const double C1454 = C370 * C1448;
    const double C2442 = C370 * C118;
    const double C2630 = C370 * C294;
    const double C2624 = C370 * C295;
    const double C2992 = C370 * C683;
    const double C2990 = C370 * C684;
    const double C3542 = C370 * C1114;
    const double C3540 = C370 * C1115;
    const double C575 = C563 * C118;
    const double C1006 = C1000 * C684;
    const double C1598 = C1000 * C1115;
    const double C2816 = C1000 * C118;
    const double C3376 = C1000 * C683;
    const double C4186 = C1000 * C1114;
    const double C13971 = C11111 + C11110;
    const double C13967 = C11110 + C11111;
    const double C2654 = C2646 * C295;
    const double C2652 = C2646 * C296;
    const double C2994 = C2646 * C684;
    const double C3544 = C2646 * C1115;
    const double C3982 = C2646 * C1448;
    const double C2836 = C2830 * C118;
    const double C3381 = C2830 * C683;
    const double C3374 = C2830 * C684;
    const double C4190 = C2830 * C1114;
    const double C4184 = C2830 * C1115;
    const double C13973 = C11115 + C11114;
    const double C13969 = C11114 + C11115;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C709 = C698 + C699;
    const double C1134 = C1125 + C1126;
    const double C8193 = C2447 + C2446;
    const double C8649 = C2998 + C2997;
    const double C9149 = C3548 + C3547;
    const double C827 = C572 + C571;
    const double C165 = C50915 * C136;
    const double C365 = C50915 * C321;
    const double C703 = C50915 * C323;
    const double C50104 = C50101 / C49759;
    const double C20636 = C50915 * C3653;
    const double C50275 = C50272 - C49858;
    const double C137 =
        4 * ((-2 * C49925) / C49693 - (C49830 * C49928) / C49693) +
        C49830 * ((-3 * C49928) / C49693 + C49830 * C49939);
    const double C322 = (-2 * C49925) / C49693 - (C49830 * C49928) / C49693 +
                        C49823 * (C49823 * C49939 - (C50409 * ce) / C49693) -
                        (C49823 * C50409 * ce) / C49693;
    const double C324 = C49823 * ((-3 * C49928) / C49693 + C49830 * C49939) -
                        ((3 * C50402 + C49830 * C50409) * ce) / C49693;
    const double C509 = C49822 * ((-3 * C49928) / C49693 + C49830 * C49939);
    const double C519 =
        (-2 * C49925) / C49693 - (C49830 * C49928) / C49693 + C49939 * C50161;
    const double C973 = C49822 * (C49823 * C49939 - (C50409 * ce) / C49693);
    const double C50222 = C50219 / C49759;
    const double C7599 =
        4 * ((-2 * C50158) / C49693 - (C49822 * C50166) / C49693) +
        C49822 * ((-3 * C50166) / C49693 + C49822 * C50247);
    const double C50364 = C50361 - C49858;
    const double C49995 = C49994 / C49693;
    const double C50416 = C50414 + C50415;
    const double C1337 =
        (C49823 * C49897 + C49822 * (C49822 * C49823 * C49908 + C50469 * ae) +
         C49822 * C50469 * ae) /
        C49759;
    const double C1330 = C49823 * C50409 + C50469 * C50161;
    const double C3652 = 4 * (2 * C50463 + C49823 * C50494) +
                         C49823 * (3 * C50494 + C49823 * C50520);
    const double C3812 = 2 * C50463 + C49823 * C50494 + C50520 * C50161;
    const double C4338 = C49822 * (3 * C50494 + C49823 * C50520);
    const double C7595 = 4 * (2 * C50548 + C49822 * C50551) +
                         C49822 * (3 * C50551 + C49822 * C50592);
    const double C50303 = C50301 / C49693;
    const double C50613 = C50611 + C50612;
    const double C23930 = 4 * (2 * C50566 + C49822 * C50569) +
                          C49822 * (3 * C50569 + C49822 * C50641);
    const double C50663 = C50651 + C50661;
    const double C107 = (C51085 * C50758) / C49759 + (C51029 - C51068) / C49784;
    const double C108 =
        (C51086 * C50758) / C49759 + (2 * C50768 + C51085) / C49784;
    const double C109 = (C50758 * C50768) / C49763 + C51086 / C49784;
    const double C112 = (C51087 * C50779) / C49693 + (C51036 - C51071) / C49718;
    const double C113 =
        (C51088 * C50779) / C49693 + (2 * C50789 + C51087) / C49718;
    const double C114 = (C50779 * C50789) / C49697 + C51088 / C49718;
    const double C1987 =
        (C51091 * C50877) / C49693 + (C51045 - C51076) / C49718;
    const double C1988 =
        (C51092 * C50877) / C49693 + (2 * C50882 + C51091) / C49718;
    const double C1989 = (C50877 * C50882) / C49697 + C51092 / C49718;
    const double C19940 =
        (C51093 * C50948) / C49759 + (C51057 - C51079) / C49784;
    const double C19941 =
        (C51094 * C50948) / C49759 + (2 * C50953 + C51093) / C49784;
    const double C19942 = (C50948 * C50953) / C49763 + C51094 / C49784;
    const double C49734 = C49732 * ce;
    const double C44280 = C44253 + C44254;
    const double C44276 = C44245 + C44246;
    const double C44273 = C44239 + C44240;
    const double C44459 = C44435 + C44436;
    const double C44646 = C44627 + C44628;
    const double C44643 = C44621 + C44622;
    const double C44977 = C44967 + C44968;
    const double C45189 = C45179 + C45180;
    const double C47221 = C47205 + C47206;
    const double C47216 = C47195 + C47196;
    const double C47213 = C47189 + C47190;
    const double C47871 = C47861 + C47862;
    const double C48799 = C48787 + C48788;
    const double C49800 = C49798 * ae;
    const double C10927 = C10923 * C50802;
    const double C11467 = C10923 * C51044;
    const double C12015 = C10923 * C1109;
    const double C10926 = C10922 * C118;
    const double C11466 = C10922 * C683;
    const double C12014 = C10922 * C1114;
    const double C33367 = C33356 + C33357;
    const double C33366 = C33354 + C33355;
    const double C36339 = C33559 + C33558;
    const double C40941 = C33558 + C33559;
    const double C40944 = C33557 + C33556;
    const double C40940 = C33556 + C33557;
    const double C40943 = C33555 + C33554;
    const double C40939 = C33554 + C33555;
    const double C36365 = C36353 + C36354;
    const double C145 =
        4 * ((-2 * C49830 * C49842) / C49833 + C49830 * C49853) +
        C49830 * (3 * C49853 + C49830 * ((-2 * C49830 * C49848) / C49833 +
                                         C49830 * ((-(std::pow(C49837, 7) *
                                                      bs[7] * C49828 * C49839) /
                                                    C49693) /
                                                       C49759 -
                                                   C49848 / C49833)));
    const double C332 = (-(C49842 * C49839) / C49693) / C49759 -
                        C49835 / C49833 - (C49823 * C49887 * ce) / C49833 +
                        C49823 * (C49823 * C49853 - (C49887 * ce) / C49833);
    const double C333 =
        C49823 * ((-2 * C49830 * C49842) / C49833 + C49830 * C49853) -
        ((2 * C49881 + C49830 * C49887) * ce) / C49833;
    const double C524 =
        (((-2 * C49830 * C49916) / C49693 -
          (C49830 * (C49840 * C49838 * C49913 * C49839 + C49916)) / C49693) *
         ae) /
            C49759 +
        C49822 * ((-2 * C49830 * C49842) / C49833 + C49830 * C49853);
    const double C529 = (-(C49842 * C49839) / C49693) / C49759 -
                        C49835 / C49833 - (ae * C49822 * C49928) / C49833 +
                        C49822 * (C49822 * C49853 - (ae * C49928) / C49833);
    const double C978 =
        C49822 * (C49823 * C49853 - (C49887 * ce) / C49833) -
        (ae * (C49823 * C49928 +
               (C49873 * C49872 + C49832 * C49831 * C49839) * ce)) /
            C49833;
    const double C50027 = C50026 - C50023;
    const double C50179 = C50178 - C50175;
    const double C50085 = C49823 * C50083;
    const double C50191 = C49822 * C50083;
    const double C50252 = 2 * C50083;
    const double C50249 = C49822 * C50246;
    const double C50339 = 2 * C50246;
    const double C2606 =
        3 * ((-(C50006 * ce) / C49693) / C49759 - C49835 / C49833 +
             C49823 * C50016) -
        ((2 * C50006 + C49823 * C50014) * ce) / C49833 +
        C49823 *
            (2 * C50016 - (C50014 * ce) / C49833 +
             C49823 * ((-(C49823 * C49885 * ce) / C49693) / C49759 - C49846 +
                       C49823 * ((-(C49823 * C49848) / C49693) / C49759 -
                                 (C49885 * ce) / C49833)));
    const double C4756 =
        2 * (C49822 * C50016 - (ae * C49973) / C49833) -
        (ae * (C50040 * std::pow(C49822, 2) + C49973)) / C49833 +
        C49822 * (C50016 - (ae * C49822 * C50040) / C49833 +
                  C49822 * (C49822 * C50083 - (ae * C50040) / C49833));
    const double C5738 =
        3 * ((-(ae * C50158) / C49693) / C49759 - C49835 / C49833 +
             C49822 * C50168) +
        (((-2 * C50158) / C49693 - (C49822 * C50166) / C49693) * ae) / C49759 +
        C49822 *
            (2 * C50168 - (ae * C50166) / C49833 +
             C49822 * ((-(ae * C49822 * C49919) / C49693) / C49759 - C49846 +
                       C49822 * ((-(C49822 * C49848) / C49693) / C49759 -
                                 (ae * C49919) / C49833)));
    const double C185 = C175 * C118;
    const double C705 = C175 * C683;
    const double C1131 = C175 * C1114;
    const double C386 = C374 * C296;
    const double C1460 = C374 * C1448;
    const double C2445 = C374 * C118;
    const double C3002 = C374 * C683;
    const double C2996 = C374 * C684;
    const double C3552 = C374 * C1114;
    const double C3546 = C374 * C1115;
    const double C8345 = C374 * C295;
    const double C388 = C376 * C295;
    const double C700 = C376 * C684;
    const double C1127 = C376 * C1115;
    const double C2448 = C376 * C118;
    const double C8652 = C376 * C683;
    const double C9152 = C376 * C1114;
    const double C573 = C561 * C118;
    const double C997 = C561 * C683;
    const double C1608 = C561 * C1114;
    const double C10925 = C10916 + C10917;
    const double C33369 = C33360 + C33361;
    const double C577 = C565 * C118;
    const double C11642 = C11309 + C11308;
    const double C34086 = C33753 + C33752;
    const double C1008 = C1002 * C684;
    const double C1602 = C1002 * C1115;
    const double C3150 = C1002 * C118;
    const double C9001 = C1002 * C683;
    const double C9748 = C1002 * C1114;
    const double C11468 = C11118 + C11119;
    const double C14395 = C11119 + C11118;
    const double C33912 = C33562 + C33563;
    const double C41345 = C33563 + C33562;
    const double C2838 = C2832 * C118;
    const double C14864 = C11861 + C11860;
    const double C14857 = C11860 + C11861;
    const double C41802 = C34305 + C34304;
    const double C41799 = C34304 + C34305;
    const double C32326 = C16073 + C16074;
    const double C37949 = C37028 + C37027;
    const double C31668 = C15209 + C15210;
    const double C37279 = C36358 + C36357;
    const double C50084 = C50082 - C49846;
    const double C7600 =
        (4 * (2 * C50542 + C49822 * C50608 + C50543 * ae) +
         C49822 *
             (3 * C50608 +
              C49822 *
                  (2 * C50600 +
                   C49822 * (C49885 + C49822 * (C49822 * C49893 + C49963 * ae) +
                             C49822 * C49963 * ae) +
                   C50602 * ae) +
              C50607 * ae) +
         (3 * C50543 + C49822 * C50607) * ae) /
        C49759;
    const double C184 = C174 * C50802;
    const double C704 = C174 * C51044;
    const double C1130 = C174 * C1109;
    const double C2647 = C2628 + C2629;
    const double C13993 = C13979 + C13980;
    const double C36364 = C36347 + C36348;
    const double C2833 = C2824 + C2825;
    const double C5575 = C5554 + C5555;
    const double C6320 = C6312 + C6313;
    const double C11863 = C11850 + C11851;
    const double C14199 = C14193 + C14194;
    const double C34307 = C34294 + C34295;
    const double C41149 = C41143 + C41144;
    const double C44462 = C44441 + C44442;
    const double C2831 = C2820 + C2821;
    const double C5582 = C5568 + C5569;
    const double C11117 = C11092 + C11093;
    const double C14875 = C14865 + C14866;
    const double C33561 = C33536 + C33537;
    const double C37034 = C37021 + C37022;
    const double C2812 =
        (-(C50006 * ce) / C49693) / C49759 - C49835 / C49833 + C49823 * C50016 -
        (ae * C49822 * C50044) / C49833 +
        C49822 *
            (C49822 * ((-(C49823 * C49885 * ce) / C49693) / C49759 - C49846 +
                       C49823 * ((-(C49823 * C49848) / C49693) / C49759 -
                                 (C49885 * ce) / C49833)) -
             (ae * C50044) / C49833);
    const double C3362 =
        (((-2 * C49973) / C49693 - (C49823 * C50044) / C49693 -
          ((C49971 + C49961 * C50009) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 *
            (2 * C50016 - (C50014 * ce) / C49833 +
             C49823 * ((-(C49823 * C49885 * ce) / C49693) / C49759 - C49846 +
                       C49823 * ((-(C49823 * C49848) / C49693) / C49759 -
                                 (C49885 * ce) / C49833)));
    const double C2601 =
        (-3 * (C49823 * C49973 + C49923 + C50460 * ce)) / C49693 +
        C49823 * ((-2 * C49973) / C49693 - (C49823 * C50044) / C49693 -
                  (C50490 * ce) / C49693) -
        ((2 * C50460 + C49823 * C50490) * ce) / C49693;
    const double C2807 =
        -(C50044 * C50161 + C49823 * C49973 + C49923 + C50460 * ce) / C49693;
    const double C3357 =
        C49822 * ((-2 * C49973) / C49693 - (C49823 * C50044) / C49693 -
                  (C50490 * ce) / C49693);
    const double C50248 = C50245 - C49846;
    const double C2638 = C117 * C1222;
    const double C5934 = C5346 * C1336;
    const double C8497 = C117 * C1336;
    const double C11858 = C10872 * C1336;
    const double C34302 = C33316 * C1336;
    const double C44809 = C44233 * C1336;
    const double C3154 = C117 * C1716;
    const double C11108 = C10872 * C1716;
    const double C33552 = C33316 * C1716;
    const double C823 = C50915 * C508;
    const double C10901 = C50979 * C508;
    const double C33345 = C50979 * C508;
    const double C554 = C50915 * C518;
    const double C5377 = C5343 * C518;
    const double C11636 = C50979 * C518;
    const double C34080 = C50979 * C518;
    const double C44264 = C44230 * C518;
    const double C995 = C50915 * C972;
    const double C11473 = C50979 * C972;
    const double C33917 = C50979 * C972;
    const double C164 = C117 * C124;
    const double C364 = C117 * C304;
    const double C702 = C117 * C305;
    const double C822 = C117 * C495;
    const double C10900 = C10872 * C495;
    const double C33344 = C33316 * C495;
    const double C553 = C117 * C500;
    const double C5376 = C5346 * C500;
    const double C11635 = C10872 * C500;
    const double C34079 = C33316 * C500;
    const double C44263 = C44233 * C500;
    const double C994 = C117 * C964;
    const double C11472 = C10872 * C964;
    const double C33916 = C33316 * C964;
    const double C5938 = C5928 + C5929;
    const double C8499 = C8495 + C8496;
    const double C11865 = C11854 + C11855;
    const double C34309 = C34298 + C34299;
    const double C44813 = C44803 + C44804;
    const double C3000 = C2650 * C684;
    const double C3550 = C2650 * C1115;
    const double C8347 = C2650 * C296;
    const double C9550 = C2650 * C1448;
    const double C3158 = C3156 * C118;
    const double C8999 = C3156 * C684;
    const double C9746 = C3156 * C1115;
    const double C50053 = C50052 + C50050;
    const double C2648 = C2632 + C2633;
    const double C2834 = C2826 + C2827;
    const double C5580 = C5564 + C5565;
    const double C14874 = C14861 + C14862;
    const double C37031 = C37015 + C37016;
    const double C44467 = C44451 + C44452;
    const double C3388 = C3378 + C3379;
    const double C13992 = C13977 + C13978;
    const double C36361 = C36341 + C36342;
    const double C5774 = C5758 + C5759;
    const double C44649 = C44633 + C44634;
    const double C50593 = C50591 + C50586;
    const double C20744 = C50915 * C3813;
    const double C22852 = C5343 * C3813;
    const double C32329 = C50979 * C3813;
    const double C37952 = C50979 * C3813;
    const double C48120 = C44230 * C3813;
    const double C21080 = C50915 * C4339;
    const double C31671 = C50979 * C4339;
    const double C37282 = C50979 * C4339;
    const double C20635 = C117 * C3651;
    const double C20743 = C117 * C3811;
    const double C22851 = C5346 * C3811;
    const double C32328 = C10872 * C3811;
    const double C37951 = C33316 * C3811;
    const double C48119 = C44233 * C3811;
    const double C21079 = C117 * C4337;
    const double C31670 = C10872 * C4337;
    const double C37281 = C33316 * C4337;
    const double C23031 = C23019 + C23020;
    const double C48295 = C48283 + C48284;
    const double C50642 = C50640 + C50635;
    const double C50126 = C49823 * C50125;
    const double C50282 = -3 * C50125;
    const double C50315 = ae * C50125;
    const double C50313 = C49822 * C50125;
    const double C4747 = (-2 * C49822 * C50044) / C49693 -
                         (C49822 * (C50125 * C50161 + C50044)) / C49693;
    const double C23025 = C5346 * C6714;
    const double C48289 = C44233 * C6714;
    const double C50333 = C50083 - C50329;
    const double C50662 = C49822 * C50660;
    const double C49868 = C49830 * C49867;
    const double C50030 = C49823 * C49867;
    const double C50182 = C49822 * C49867;
    const double C1227 =
        2 * (C49823 * C49853 - (C49887 * ce) / C49833) -
        ((C49887 + C49895 * std::pow(C49823, 2)) * ce) / C49833 +
        C49823 * (C49853 - (C49823 * C49895 * ce) / C49833 +
                  C49823 * (C49823 * C49867 - (C49895 * ce) / C49833));
    const double C1341 =
        C49823 * C49853 - (C49887 * ce) / C49833 -
        (ae * C49822 * C49984) / C49833 +
        C49822 * (C49822 * (C49823 * C49867 - (C49895 * ce) / C49833) -
                  (ae * C49984) / C49833);
    const double C1721 =
        C49822 * (C49853 - (C49823 * C49895 * ce) / C49833 +
                  C49823 * (C49823 * C49867 - (C49895 * ce) / C49833)) -
        (ae * (C49823 * C49984 + C49928 + C49823 * C49982 * ce)) / C49833;
    const double C2004 =
        2 * (C49822 * C49853 - (ae * C49928) / C49833) -
        (ae * (C49936 * std::pow(C49822, 2) + C49928)) / C49833 +
        C49822 * (C49853 - (ae * C49822 * C49936) / C49833 +
                  C49822 * (C49822 * C49867 - (ae * C49936) / C49833));
    const double C50108 = C50105 - C50095;
    const double C50223 = C50220 - C50212;
    const double C50276 = C49823 * C50273;
    const double C50322 = C49822 * C50273;
    const double C50365 = C49822 * C50362;
    const double C49910 = C49900 + C49909;
    const double C3655 = (4 * (2 * C50018 + C49823 * C50024) +
                          C49823 * (3 * C50024 + C49823 * C50106)) /
                         C49759;
    const double C3815 =
        (2 * C50018 + C49823 * C50024 +
         C49822 * (C49822 * C50106 + C50520 * ae) + C49822 * C50520 * ae) /
        C49759;
    const double C4341 = (C49822 * (3 * C50024 + C49823 * C50106) +
                          (3 * C50494 + C49823 * C50520) * ae) /
                         C49759;
    const double C50277 = C50257 + C50274;
    const double C49953 = C49830 * C49952;
    const double C49986 = C49823 * C49952;
    const double C1995 =
        2 * C49822 * C49939 + C49822 * (C49939 + C49952 * C50161);
    const double C50061 = C50060 + C49936;
    const double C50146 = C50144 + C50140;
    const double C6716 =
        (-3 * (C50049 * C50161 + C49978)) / C49693 +
        C49822 * ((-2 * C50198) / C49693 - (C49822 * C50203) / C49693);
    const double C50224 = C50217 - C50221;
    const double C50302 = C49823 * C50300;
    const double C50316 = C50300 * C50161;
    const double C50335 = C50332 / C49693;
    const double C50366 = C49822 * C50363;
    const double C712 = C708 - C696;
    const double C1135 = C1133 - C1123;
    const double C30791 = C13989 + C13990;
    const double C36366 = C36355 + C36356;
    const double C50107 = C50104 - C50089;
    const double C166 = C117 * C137;
    const double C366 = C117 * C322;
    const double C706 = C117 * C324;
    const double C824 = C117 * C509;
    const double C10904 = C10872 * C509;
    const double C33348 = C33316 * C509;
    const double C555 = C117 * C519;
    const double C5382 = C5346 * C519;
    const double C11639 = C10872 * C519;
    const double C34083 = C33316 * C519;
    const double C44269 = C44233 * C519;
    const double C998 = C117 * C973;
    const double C11476 = C10872 * C973;
    const double C33920 = C33316 * C973;
    const double C50225 = C50222 - C50089;
    const double C125 = 5 * (3 * C50402 + C49830 * C50409) +
                        C49830 * (4 * C50409 + C49830 * C50416);
    const double C306 = 3 * C50402 + C49830 * C50409 + C50416 * C50009;
    const double C501 = 3 * C50402 + C49830 * C50409 + C50416 * C50161;
    const double C685 = C49823 * (4 * C50409 + C49830 * C50416);
    const double C817 = C49822 * (4 * C50409 + C49830 * C50416);
    const double C965 = C49822 * C49823 * C50416;
    const double C20630 = 5 * (3 * C50490 + C49823 * C50515) +
                          C49823 * (4 * C50515 + C49823 * C50613);
    const double C20738 = 3 * C50490 + C49823 * C50515 + C50613 * C50161;
    const double C21074 = C49822 * (4 * C50515 + C49823 * C50613);
    const double C40284 = 5 * (3 * C50543 + C49822 * C50607) +
                          C49822 * (4 * C50607 + C49822 * C50663);
    const double C49736 = C49734 / C49693;
    const double C49802 = C49800 / C49759;
    const double C10930 = C10926 + C10927;
    const double C11478 = C11466 + C11467;
    const double C12018 = C12014 + C12015;
    const double C33371 = C33367 * C50802;
    const double C33911 = C33367 * C51044;
    const double C34459 = C33367 * C1109;
    const double C33370 = C33366 * C118;
    const double C33910 = C33366 * C683;
    const double C34458 = C33366 * C1114;
    const double C167 = C50915 * C145;
    const double C357 = C50915 * C332;
    const double C11107 = C51058 * C332;
    const double C33551 = C33313 * C332;
    const double C363 = C50915 * C333;
    const double C11475 = C51058 * C333;
    const double C33919 = C33313 * C333;
    const double C544 = C50915 * C524;
    const double C5381 = C5342 * C524;
    const double C10891 = C50979 * C524;
    const double C11638 = C51058 * C524;
    const double C33335 = C50979 * C524;
    const double C34082 = C33313 * C524;
    const double C44268 = C51096 * C524;
    const double C552 = C50915 * C529;
    const double C5361 = C5343 * C529;
    const double C6097 = C5342 * C529;
    const double C11301 = C51058 * C529;
    const double C11287 = C50979 * C529;
    const double C33745 = C33313 * C529;
    const double C33731 = C50979 * C529;
    const double C44248 = C44230 * C529;
    const double C44972 = C51096 * C529;
    const double C993 = C50915 * C978;
    const double C5933 = C5342 * C978;
    const double C11099 = C50979 * C978;
    const double C11857 = C51058 * C978;
    const double C33543 = C50979 * C978;
    const double C34301 = C33313 * C978;
    const double C44808 = C51096 * C978;
    const double C2607 =
        3 * ((-(C50018 * ce) / C49693) / C49759 - C49966 / C49833 +
             C49823 * C50027) -
        ((2 * C50018 + C49823 * C50024) * ce) / C49833 +
        C49823 * (2 * C50027 - (C50024 * ce) / C49833 +
                  C49823 * ((-(C49823 * C49901 * ce) / C49693) / C49759 -
                            C49855 / C49833 +
                            C49823 * ((-(C49823 * C49830 * C49862) / C49693) /
                                          C49759 -
                                      (C49901 * ce) / C49833)));
    const double C5739 =
        3 * ((-(ae * C50170) / C49693) / C49759 - C49966 / C49833 +
             C49822 * C50179) +
        (((-2 * C50170) / C49693 - (C49822 * C50176) / C49693) * ae) / C49759 +
        C49822 *
            (2 * C50179 - (ae * C50176) / C49833 +
             C49822 * ((-(ae * C49822 * C49942) / C49693) / C49759 - C50089 +
                       C49822 * ((-(C49822 * C50090) / C49693) / C49759 -
                                 (ae * C49942) / C49833)));
    const double C50196 = C50191 - C50194;
    const double C50265 = C50252 - C50259;
    const double C50353 = C50339 - C50346;
    const double C3663 = C50915 * C2606;
    const double C31677 = C51058 * C2606;
    const double C37288 = C33313 * C2606;
    const double C15412 = C50979 * C4756;
    const double C22600 = C5343 * C4756;
    const double C23028 = C5342 * C4756;
    const double C37444 = C50979 * C4756;
    const double C47868 = C44230 * C4756;
    const double C48292 = C51096 * C4756;
    const double C8654 = C8649 - C2996;
    const double C9154 = C9149 - C3546;
    const double C713 = C709 - C700;
    const double C1136 = C1134 - C1127;
    const double C10929 = C10925 * C118;
    const double C33373 = C33369 * C118;
    const double C11648 = C11642 * C118;
    const double C34092 = C34086 * C118;
    const double C11479 = C11468 * C684;
    const double C12016 = C11468 * C1115;
    const double C33923 = C33912 * C684;
    const double C34460 = C33912 * C1115;
    const double C50086 = C50084 + C50085;
    const double C190 = C184 + C185;
    const double C2655 = C2647 * C290;
    const double C2653 = C2647 * C291;
    const double C2995 = C2647 * C50854;
    const double C3545 = C2647 * C50854;
    const double C3987 = C2647 * C51090;
    const double C3983 = C2647 * C1443;
    const double C2839 = C2833 * C50802;
    const double C14863 = C11863 + C11862;
    const double C14858 = C11862 + C11863;
    const double C41801 = C34307 + C34306;
    const double C41800 = C34306 + C34307;
    const double C2837 = C2831 * C50802;
    const double C3380 = C2831 * C51044;
    const double C3377 = C2831 * C50854;
    const double C4189 = C2831 * C1109;
    const double C4187 = C2831 * C50854;
    const double C13974 = C11117 + C11116;
    const double C13970 = C11116 + C11117;
    const double C36340 = C33561 + C33560;
    const double C40942 = C33560 + C33561;
    const double C3827 = C50915 * C2812;
    const double C16070 = C50979 * C2812;
    const double C21944 = C5343 * C2812;
    const double C23532 = C5342 * C2812;
    const double C31835 = C51058 * C2812;
    const double C37014 = C50979 * C2812;
    const double C37454 = C33313 * C2812;
    const double C47212 = C44230 * C2812;
    const double C48796 = C51096 * C2812;
    const double C4349 = C50915 * C3362;
    const double C15206 = C50979 * C3362;
    const double C22860 = C5342 * C3362;
    const double C32335 = C51058 * C3362;
    const double C36338 = C50979 * C3362;
    const double C37958 = C33313 * C3362;
    const double C48128 = C51096 * C3362;
    const double C3662 = C117 * C2601;
    const double C31676 = C10871 * C2601;
    const double C37287 = C33315 * C2601;
    const double C3826 = C117 * C2807;
    const double C16069 = C10872 * C2807;
    const double C21943 = C5346 * C2807;
    const double C23531 = C5345 * C2807;
    const double C31834 = C10871 * C2807;
    const double C37013 = C33316 * C2807;
    const double C37453 = C33315 * C2807;
    const double C47211 = C44233 * C2807;
    const double C4348 = C117 * C3357;
    const double C15205 = C10872 * C3357;
    const double C22859 = C5345 * C3357;
    const double C32334 = C10871 * C3357;
    const double C36337 = C33316 * C3357;
    const double C37957 = C33315 * C3357;
    const double C50250 = C50248 + C50249;
    const double C176 = C164 + C165;
    const double C378 = C364 + C365;
    const double C710 = C702 + C703;
    const double C828 = C822 + C823;
    const double C10919 = C10900 + C10901;
    const double C33363 = C33344 + C33345;
    const double C567 = C553 + C554;
    const double C5398 = C5376 + C5377;
    const double C11644 = C11635 + C11636;
    const double C34088 = C34079 + C34080;
    const double C44285 = C44263 + C44264;
    const double C1004 = C994 + C995;
    const double C11482 = C11472 + C11473;
    const double C33926 = C33916 + C33917;
    const double C8501 = C8499 * C118;
    const double C2813 =
        (-(C50018 * ce) / C49693) / C49759 - C49966 / C49833 + C49823 * C50027 -
        (ae * C49822 * C50053) / C49833 +
        C49822 * (C49822 * ((-(C49823 * C49901 * ce) / C49693) / C49759 -
                            C49855 / C49833 +
                            C49823 * ((-(C49823 * C49830 * C49862) / C49693) /
                                          C49759 -
                                      (C49901 * ce) / C49833)) -
                  (ae * C50053) / C49833);
    const double C3363 =
        (((-2 * C49978) / C49693 - (C49823 * C50053) / C49693 -
          ((C49976 + C49987 * C50009) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 * (2 * C50027 - (C50024 * ce) / C49833 +
                  C49823 * ((-(C49823 * C49901 * ce) / C49693) / C49759 -
                            C49855 / C49833 +
                            C49823 * ((-(C49823 * C49830 * C49862) / C49693) /
                                          C49759 -
                                      (C49901 * ce) / C49833)));
    const double C2603 =
        (-3 * (C49823 * C49978 + C49925 + C50463 * ce)) / C49693 +
        C49823 * ((-2 * C49978) / C49693 - (C49823 * C50053) / C49693 -
                  (C50494 * ce) / C49693) -
        ((2 * C50463 + C49823 * C50494) * ce) / C49693;
    const double C2809 =
        -(C50053 * C50161 + C49823 * C49978 + C49925 + C50463 * ce) / C49693;
    const double C3359 =
        C49822 * ((-2 * C49978) / C49693 - (C49823 * C50053) / C49693 -
                  (C50494 * ce) / C49693);
    const double C2656 = C2648 * C296;
    const double C3988 = C2648 * C1448;
    const double C2840 = C2834 * C118;
    const double C3390 = C3388 * C684;
    const double C4188 = C3388 * C1115;
    const double C7598 =
        (4 * (2 * C50550 + C49822 * C50593 + C50551 * ae) +
         C49822 *
             (3 * C50593 +
              C49822 *
                  (2 * C50585 +
                   C49822 * (C49901 + C49822 * (C49822 * C50092 + C50133 * ae) +
                             C49822 * C50133 * ae) +
                   C50587 * ae) +
              C50592 * ae) +
         (3 * C50551 + C49822 * C50592) * ae) /
        C49759;
    const double C20639 = C20635 + C20636;
    const double C20747 = C20743 + C20744;
    const double C22863 = C22851 + C22852;
    const double C32336 = C32328 + C32329;
    const double C37959 = C37951 + C37952;
    const double C48131 = C48119 + C48120;
    const double C21083 = C21079 + C21080;
    const double C31678 = C31670 + C31671;
    const double C37289 = C37281 + C37282;
    const double C23932 =
        (4 * (2 * C50568 + C49822 * C50642 + C50569 * ae) +
         C49822 * (3 * C50642 +
                   C49822 * (2 * C50634 +
                             C49822 * (C50254 +
                                       C49822 * (C49822 * C49823 * C49904 +
                                                 C50286 * ae) +
                                       C49822 * C50286 * ae) +
                             C50636 * ae) +
                   C50641 * ae) +
         (3 * C50569 + C49822 * C50641) * ae) /
        C49759;
    const double C50127 = C50126 / C49693;
    const double C50289 = C50282 / C49693;
    const double C50317 = C50315 / C49833;
    const double C23529 = C5346 * C4747;
    const double C31832 = C10872 * C4747;
    const double C37451 = C33316 * C4747;
    const double C48793 = C44233 * C4747;
    const double C50664 = C50645 + C50662;
    const double C49869 = C49861 + C49868;
    const double C50035 = C50030 - C50033;
    const double C50187 = C50182 - C50185;
    const double C2639 = C50915 * C1227;
    const double C5935 = C5343 * C1341;
    const double C8498 = C50915 * C1341;
    const double C11859 = C50979 * C1341;
    const double C34303 = C50979 * C1341;
    const double C44810 = C44230 * C1341;
    const double C3155 = C50915 * C1721;
    const double C11109 = C50979 * C1721;
    const double C33553 = C50979 * C1721;
    const double C6099 = C5343 * C2004;
    const double C11303 = C50979 * C2004;
    const double C33747 = C50979 * C2004;
    const double C44974 = C44230 * C2004;
    const double C50109 = C49823 * C50108;
    const double C50199 = C49822 * C50108;
    const double C4755 =
        2 * (C49822 * C50027 - (ae * C49978) / C49833) -
        (ae * (C50049 * std::pow(C49822, 2) + C49978)) / C49833 +
        C49822 * (C50027 - (ae * C49822 * C50049) / C49833 +
                  C49822 * (C49822 * C50108 - (ae * C50049) / C49833));
    const double C50226 = C49822 * C50223;
    const double C50278 = C50275 + C50276;
    const double C50330 = C50322 - C50326;
    const double C50367 = C50364 + C50365;
    const double C139 = (5 * (3 * C49887 + C49830 * C49897) +
                         C49830 * (4 * C49897 + C49830 * C49910)) /
                        C49759;
    const double C325 =
        (3 * C49887 + C49830 * C49897 + C49910 * C50009) / C49759;
    const double C521 =
        (3 * C49887 + C49830 * C49897 +
         C49822 * (C49822 * C49910 + C50416 * ae) + C49822 * C50416 * ae) /
        C49759;
    const double C686 = (C49823 * (4 * C49897 + C49830 * C49910)) / C49759;
    const double C819 = (C49822 * (4 * C49897 + C49830 * C49910) +
                         (4 * C50409 + C49830 * C50416) * ae) /
                        C49759;
    const double C974 =
        (C49822 * C49823 * C49910 + C49823 * C50416 * ae) / C49759;
    const double C20631 = (5 * (3 * C50014 + C49823 * C50081) +
                           C49823 * (4 * C50081 + C49823 * C50277)) /
                          C49759;
    const double C20739 =
        (3 * C50014 + C49823 * C50081 +
         C49822 * (C49822 * C50277 + C50613 * ae) + C49822 * C50613 * ae) /
        C49759;
    const double C21075 = (C49822 * (4 * C50081 + C49823 * C50277) +
                           (4 * C50515 + C49823 * C50613) * ae) /
                          C49759;
    const double C49954 = C49944 + C49953;
    const double C49996 = C49986 - C49995;
    const double C50062 = C50061 + C50059;
    const double C50147 = C49823 * C50146;
    const double C4745 = (-2 * C49822 * C50053) / C49693 -
                         (C49822 * (C50146 * C50161 + C50053)) / C49693;
    const double C7597 =
        4 * ((-2 * C50170) / C49693 - (C49822 * C50176) / C49693) +
        C49822 * ((-3 * C50176) / C49693 + C49822 * C50224);
    const double C50304 = C50302 / C49693;
    const double C50318 = C50316 + C50125;
    const double C50337 = C50331 - C50335;
    const double C50368 = C50350 + C50366;
    const double C716 = C712 - C697;
    const double C1137 = C1135 - C1124;
    const double C49737 = C49736 - C49721;
    const double C49803 = C49802 - C49787;
    const double C33374 = C33370 + C33371;
    const double C33922 = C33910 + C33911;
    const double C34462 = C34458 + C34459;
    const double C177 = C166 + C167;
    const double C375 = C356 + C357;
    const double C11124 = C11106 + C11107;
    const double C33568 = C33550 + C33551;
    const double C377 = C362 + C363;
    const double C11483 = C11474 + C11475;
    const double C33927 = C33918 + C33919;
    const double C562 = C543 + C544;
    const double C5400 = C5380 + C5381;
    const double C10914 = C10890 + C10891;
    const double C11645 = C11637 + C11638;
    const double C33358 = C33334 + C33335;
    const double C34089 = C34081 + C34082;
    const double C566 = C551 + C552;
    const double C5390 = C5360 + C5361;
    const double C6104 = C6096 + C6097;
    const double C11318 = C11300 + C11301;
    const double C11311 = C11286 + C11287;
    const double C33762 = C33744 + C33745;
    const double C33755 = C33730 + C33731;
    const double C44277 = C44247 + C44248;
    const double C1003 = C992 + C993;
    const double C5940 = C5932 + C5933;
    const double C11120 = C11098 + C11099;
    const double C11866 = C11856 + C11857;
    const double C33564 = C33542 + C33543;
    const double C34310 = C34300 + C34301;
    const double C2635 = C50915 * C2607;
    const double C5765 = C5343 * C5739;
    const double C44640 = C44230 * C5739;
    const double C6717 =
        3 * (C50016 - (ae * C50190) / C49833 + C49822 * C50196) +
        (((-2 * C50190) / C49693 - (C49822 * C50195) / C49693) * ae) / C49759 +
        C49822 *
            (2 * C50196 - (ae * C50195) / C49833 +
             C49822 *
                 (C50083 - (ae * C49822 * C50118) / C49833 +
                  C49822 * (C49822 * ((-(C49823 * C49862) / C49693) / C49759 -
                                      (C49893 * ce) / C49833) -
                            (ae * C50118) / C49833)));
    const double C15417 = C15411 + C15412;
    const double C22606 = C22599 + C22600;
    const double C23035 = C23027 + C23028;
    const double C37457 = C37443 + C37444;
    const double C47874 = C47867 + C47868;
    const double C11485 = C11478 - C11479;
    const double C12019 = C12018 - C12016;
    const double C3657 =
        4 * (2 * C50016 - (C50014 * ce) / C49833 + C49823 * C50086) -
        ((3 * C50014 + C49823 * C50081) * ce) / C49833 +
        C49823 *
            (3 * C50086 - (C50081 * ce) / C49833 +
             C49823 *
                 (2 * C50083 - (C50075 * ce) / C49833 +
                  C49823 *
                      ((-(C49823 * C49893 * ce) / C49693) / C49759 - C49858 +
                       C49823 * ((-(C49823 * C49862) / C49693) / C49759 -
                                 (C49893 * ce) / C49833))));
    const double C4754 =
        2 * (C49822 * C50086 - (ae * C50044) / C49833) -
        (ae * (C50125 * std::pow(C49822, 2) + C50044)) / C49833 +
        C49822 *
            (C50086 - (ae * C49822 * C50125) / C49833 +
             C49822 *
                 (C49822 *
                      ((-(C49823 * C49893 * ce) / C49693) / C49759 - C49858 +
                       C49823 * ((-(C49823 * C49862) / C49693) / C49759 -
                                 (C49893 * ce) / C49833)) -
                  (ae * C50125) / C49833));
    const double C3665 = C3662 + C3663;
    const double C31681 = C31676 + C31677;
    const double C37292 = C37287 + C37288;
    const double C3831 = C3826 + C3827;
    const double C16075 = C16069 + C16070;
    const double C21956 = C21943 + C21944;
    const double C23539 = C23531 + C23532;
    const double C31839 = C31834 + C31835;
    const double C37030 = C37013 + C37014;
    const double C37462 = C37453 + C37454;
    const double C47224 = C47211 + C47212;
    const double C4351 = C4348 + C4349;
    const double C15211 = C15205 + C15206;
    const double C22867 = C22859 + C22860;
    const double C32339 = C32334 + C32335;
    const double C36360 = C36337 + C36338;
    const double C37962 = C37957 + C37958;
    const double C7602 =
        4 * (2 * C50168 - (ae * C50166) / C49833 + C49822 * C50250) +
        (((-3 * C50166) / C49693 + C49822 * C50247) * ae) / C49759 +
        C49822 *
            (3 * C50250 + (C50247 * ae) / C49759 +
             C49822 *
                 (2 * C50246 - (ae * C50237) / C49833 +
                  C49822 *
                      ((-(ae * C49822 * C49933) / C49693) / C49759 - C49858 +
                       C49822 * ((-(C49822 * C49862) / C49693) / C49759 -
                                 (ae * C49933) / C49833))));
    const double C186 = C176 * C118;
    const double C390 = C378 * C296;
    const double C1466 = C378 * C1448;
    const double C2450 = C378 * C118;
    const double C8650 = C378 * C684;
    const double C9150 = C378 * C1115;
    const double C714 = C710 * C684;
    const double C1129 = C710 * C1115;
    const double C8195 = C710 * C118;
    const double C830 = C828 * C118;
    const double C579 = C567 * C118;
    const double C1010 = C1004 * C684;
    const double C1606 = C1004 * C1115;
    const double C8802 = C1004 * C118;
    const double C2829 = C50915 * C2813;
    const double C5571 = C5343 * C2813;
    const double C14868 = C50979 * C2813;
    const double C37020 = C50979 * C2813;
    const double C44458 = C44230 * C2813;
    const double C3383 = C50915 * C3363;
    const double C13982 = C50979 * C3363;
    const double C36346 = C50979 * C3363;
    const double C2634 = C117 * C2603;
    const double C2828 = C117 * C2809;
    const double C5570 = C5346 * C2809;
    const double C14867 = C10872 * C2809;
    const double C37019 = C33316 * C2809;
    const double C44457 = C44233 * C2809;
    const double C3382 = C117 * C3359;
    const double C13981 = C10872 * C3359;
    const double C36345 = C33316 * C3359;
    const double C50128 = C50117 - C50127;
    const double C50665 = C50664 + C50649;
    const double C146 =
        5 * (3 * C49853 + C49830 * C49869) +
        C49830 * (4 * C49869 +
                  C49830 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))));
    const double C334 = (-2 * C49830 * C49842) / C49833 + C49830 * C49853 -
                        (C49823 * C49897 * ce) / C49833 +
                        C49823 * (C49823 * C49869 - (C49897 * ce) / C49833);
    const double C335 = C49823 * (3 * C49853 + C49830 * C49869) -
                        ((3 * C49887 + C49830 * C49897) * ce) / C49833;
    const double C336 =
        3 * C49853 + C49830 * C49869 - (C49823 * C49910 * ce) / C49833 +
        C49823 * (C49823 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))) -
                  (C49910 * ce) / C49833);
    const double C525 =
        (((-3 * (C49919 * C49839 + C49916)) / C49693 +
          C49830 * ((-2 * C49830 * C49919) / C49693 -
                    (C49830 * (C49844 * C49845 * C49913 * C49839 + C49919)) /
                        C49693)) *
         ae) /
            C49759 +
        C49822 * (3 * C49853 + C49830 * C49869);
    const double C530 = (-2 * C49830 * C49842) / C49833 + C49830 * C49853 +
                        (C49822 * C49939 * ae) / C49759 +
                        C49822 * ((C49939 * ae) / C49759 + C49822 * C49869);
    const double C688 =
        C49823 * (4 * C49869 +
                  C49830 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833)))) -
        ((4 * C49897 + C49830 * C49910) * ce) / C49833;
    const double C979 =
        ((C49823 * C49939 - ((2 * C49830 * C49961 +
                              C49830 * (C49961 + C49838 * C49840 * C49839)) *
                             ce) /
                                C49693) *
         ae) /
            C49759 +
        C49822 * (C49823 * C49869 - (C49897 * ce) / C49833);
    const double C1228 =
        2 * (C49823 * C49869 - (C49897 * ce) / C49833) -
        ((C49897 + C49908 * std::pow(C49823, 2)) * ce) / C49833 +
        C49823 * (C49869 - (C49823 * C49908 * ce) / C49833 +
                  C49823 * (C49823 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833)) -
                            (C49908 * ce) / C49833));
    const double C2003 =
        2 * ((C49939 * ae) / C49759 + C49822 * C49869) +
        ((C49939 + C49952 * std::pow(C49822, 2)) * ae) / C49759 +
        C49822 * (C49869 + (C49822 * C49952 * ae) / C49759 +
                  C49822 * ((C49952 * ae) / C49759 +
                            C49822 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))));
    const double C2608 =
        3 * (C49853 - (C50029 * ce) / C49833 + C49823 * C50035) -
        ((2 * C50029 + C49823 * C50034) * ce) / C49833 +
        C49823 * (2 * C50035 - (C50034 * ce) / C49833 +
                  C49823 * (C49867 - (C49823 * C49906 * ce) / C49833 +
                            C49823 * (C49823 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833) -
                                      (C49906 * ce) / C49833)));
    const double C6302 =
        2 * (C49822 * C50035 - (ae * C49984) / C49833) -
        (ae * (C50058 * C50161 + C49984)) / C49833 +
        C49822 * (C50035 - (ae * C49822 * C50058) / C49833 +
                  C49822 * (C49822 * (C49823 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833) -
                                      (C49906 * ce) / C49833) -
                            (ae * C50058) / C49833));
    const double C5740 =
        3 * (C49853 - (ae * C50181) / C49833 + C49822 * C50187) +
        (((-2 * C50181) / C49693 - (C49822 * C50186) / C49693) * ae) / C49759 +
        C49822 * (2 * C50187 - (ae * C50186) / C49833 +
                  C49822 * (C49867 - (ae * C49822 * C49949) / C49833 +
                            C49822 * (C49822 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833) -
                                      (ae * C49949) / C49833)));
    const double C2651 = C2638 + C2639;
    const double C5941 = C5934 + C5935;
    const double C8500 = C8497 + C8498;
    const double C11867 = C11858 + C11859;
    const double C34311 = C34302 + C34303;
    const double C44816 = C44809 + C44810;
    const double C3157 = C3154 + C3155;
    const double C11125 = C11108 + C11109;
    const double C33569 = C33552 + C33553;
    const double C6105 = C6098 + C6099;
    const double C11319 = C11302 + C11303;
    const double C33763 = C33746 + C33747;
    const double C44980 = C44973 + C44974;
    const double C50110 = C50107 + C50109;
    const double C50204 = C50199 - C50202;
    const double C6315 = C5343 * C4755;
    const double C14196 = C50979 * C4755;
    const double C41146 = C50979 * C4755;
    const double C45186 = C44230 * C4755;
    const double C50227 = C50225 + C50226;
    const double C50279 = C49823 * C50278;
    const double C50314 = C49822 * C50278;
    const double C50334 = C49822 * C50330;
    const double C50369 = C49822 * C50367;
    const double C531 =
        3 * C49853 + C49830 * C49869 + (C49822 * C49954 * ae) / C49759 +
        C49822 * ((C49954 * ae) / C49759 +
                  C49822 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))));
    const double C820 =
        ((4 * C49939 + C49830 * C49954) * ae) / C49759 +
        C49822 * (4 * C49869 +
                  C49830 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))));
    const double C980 =
        ((C49823 * C49954 -
          ((3 * (C49961 + C49963 * C49839) +
            C49830 * (2 * C49830 * C49963 +
                      C49830 * (C49963 + C49845 * C49844 * C49839))) *
           ce) /
              C49693) *
         ae) /
            C49759 +
        C49822 * (C49823 * (3 * C49867 +
                            C49830 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833))) -
                  (C49910 * ce) / C49833);
    const double C138 = 5 * ((-3 * C49928) / C49693 + C49830 * C49939) +
                        C49830 * (4 * C49939 + C49830 * C49954);
    const double C326 = (-3 * C49928) / C49693 + C49830 * C49939 +
                        C49823 * (C49823 * C49954 - (C50416 * ce) / C49693) -
                        (C49823 * C50416 * ce) / C49693;
    const double C520 =
        (-3 * C49928) / C49693 + C49830 * C49939 + C49954 * C50161;
    const double C687 = C49823 * (4 * C49939 + C49830 * C49954) -
                        ((4 * C50409 + C49830 * C50416) * ce) / C49693;
    const double C818 = C49822 * (4 * C49939 + C49830 * C49954);
    const double C975 = C49822 * (C49823 * C49954 - (C50416 * ce) / C49693);
    const double C1342 =
        C49823 * C49869 - (C49897 * ce) / C49833 +
        (C49822 * C49996 * ae) / C49759 +
        C49822 * ((C49996 * ae) / C49759 +
                  C49822 * (C49823 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833)) -
                            (C49908 * ce) / C49833));
    const double C1722 =
        ((C49939 + C49823 * C49996 - (C49823 * C49993 * ce) / C49693) * ae) /
            C49759 +
        C49822 * (C49869 - (C49823 * C49908 * ce) / C49833 +
                  C49823 * (C49823 * ((-2 * C49830 * C49862) / C49833 +
                                      C49830 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833)) -
                            (C49908 * ce) / C49833));
    const double C1224 =
        2 * (C49823 * C49939 - (C50409 * ce) / C49693) +
        C49823 * (C49939 + C49823 * C49996 - (C49823 * C49993 * ce) / C49693) -
        ((C50409 + C49993 * C50009) * ce) / C49693;
    const double C1338 =
        C49823 * C49939 - (C50409 * ce) / C49693 + C49996 * C50161;
    const double C1718 =
        C49822 * (C49939 + C49823 * C49996 - (C50469 * ce) / C49693);
    const double C2814 =
        C49853 - (C50029 * ce) / C49833 + C49823 * C50035 -
        (ae * C49822 * C50062) / C49833 +
        C49822 * (C49822 * (C49867 - (C49823 * C49906 * ce) / C49833 +
                            C49823 * (C49823 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833) -
                                      (C49906 * ce) / C49833)) -
                  (ae * C50062) / C49833);
    const double C3364 =
        (((-2 * C49984) / C49693 - (C49823 * C50062) / C49693 -
          ((C49982 + C49991 * C50009) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 * (2 * C50035 - (C50034 * ce) / C49833 +
                  C49823 * (C49867 - (C49823 * C49906 * ce) / C49833 +
                            C49823 * (C49823 * ((-(std::pow(C49826, 8) * bs[8] *
                                                   C49828 * C49839) /
                                                 C49693) /
                                                    C49759 -
                                                C49862 / C49833) -
                                      (C49906 * ce) / C49833)));
    const double C2605 =
        (-3 * (C49823 * C49984 + C49928 + C50466 * ce)) / C49693 +
        C49823 * ((-2 * C49984) / C49693 - (C49823 * C50062) / C49693 -
                  (C50498 * ce) / C49693) -
        ((2 * C50466 + C49823 * C50498) * ce) / C49693;
    const double C2810 =
        -(C50062 * C50161 + C49823 * C49984 + C49928 + C50466 * ce) / C49693;
    const double C3361 =
        C49822 * ((-2 * C49984) / C49693 - (C49823 * C50062) / C49693 -
                  (C50498 * ce) / C49693);
    const double C50148 = C50147 / C49693;
    const double C50305 = C50290 - C50304;
    const double C23016 =
        (-3 * (C50125 * C50161 + C50044)) / C49693 +
        C49822 * ((-2 * C50313) / C49693 - (C49822 * C50318) / C49693);
    const double C23931 =
        4 * ((-2 * C50190) / C49693 - (C49822 * C50195) / C49693) +
        C49822 * ((-3 * C50195) / C49693 + C49822 * C50337);
    const double C40285 = 5 * ((-3 * C50166) / C49693 + C49822 * C50247) +
                          C49822 * (4 * C50247 + C49822 * C50368);
    const double C1209 =
        ((((0 - (C49691 * C49717) / C49693) * ce) / C49693 - (0 * de) / C49697 +
          C49692 / C49693) /
             C49718 -
         ((C49691 * C49735 + 0) * de) / C49693) /
            C49718 +
        ((C49691 * (C49735 / C49718 -
                    ((C49691 * C49737 + C51044) * de) / C49693 + C49730) +
          C51089) *
         ce) /
            C49693 +
        C49737 / C49718 - ((C49691 * C49730 + C50854) * de) / C49693;
    const double C1210 =
        (C49735 / C49718 - ((C49691 * C49737 + C51044) * de) / C49693 +
         C49730) /
            C49718 +
        ((C49691 *
              (C49737 / C49718 - ((C49691 * C49730 + C50854) * de) / C49693) +
          C51090) *
         ce) /
            C49693 +
        2 * (C49730 / C49718 - (0 * de) / C49693);
    const double C1211 =
        (C49737 / C49718 - ((C49691 * C49730 + C50854) * de) / C49693) /
            C49718 +
        ((C49691 * (C49730 / C49718 - (0 * de) / C49693) + C1443) * ce) /
            C49693;
    const double C1446 =
        C49735 / C49718 - ((C49691 * C49737 + C51044) * de) / C49693 + C49730;
    const double C1447 =
        C49737 / C49718 - ((C49691 * C49730 + C50854) * de) / C49693;
    const double C38908 =
        ((((0 - (C49757 * C49783) / C49759) * ae) / C49759 - (0 * be) / C49763 +
          C49758 / C49759) /
             C49784 -
         ((C49757 * C49801 + 0) * be) / C49759) /
            C49784 +
        ((C49757 * (C49801 / C49784 -
                    ((C49757 * C49803 + C51058) * be) / C49759 + C49796) +
          C51095) *
         ae) /
            C49759 +
        C49803 / C49784 - ((C49757 * C49796 + C50979) * be) / C49759;
    const double C38909 =
        (C49801 / C49784 - ((C49757 * C49803 + C51058) * be) / C49759 +
         C49796) /
            C49784 +
        ((C49757 *
              (C49803 / C49784 - ((C49757 * C49796 + C50979) * be) / C49759) +
          C51096) *
         ae) /
            C49759 +
        2 * (C49796 / C49784 - (0 * be) / C49759);
    const double C38910 =
        (C49803 / C49784 - ((C49757 * C49796 + C50979) * be) / C49759) /
            C49784 +
        ((C49757 * (C49796 / C49784 - (0 * be) / C49759) + C44230) * ae) /
            C49759;
    const double C44231 =
        C49801 / C49784 - ((C49757 * C49803 + C51058) * be) / C49759 + C49796;
    const double C44232 =
        C49803 / C49784 - ((C49757 * C49796 + C50979) * be) / C49759;
    const double C33929 = C33922 - C33923;
    const double C34463 = C34462 - C34460;
    const double C187 = C177 * C50802;
    const double C387 = C375 * C291;
    const double C1461 = C375 * C1443;
    const double C2444 = C375 * C50802;
    const double C3001 = C375 * C51044;
    const double C2999 = C375 * C50854;
    const double C3551 = C375 * C1109;
    const double C3549 = C375 * C50854;
    const double C8346 = C375 * C290;
    const double C9549 = C375 * C51090;
    const double C389 = C377 * C290;
    const double C701 = C377 * C50854;
    const double C1128 = C377 * C50854;
    const double C1465 = C377 * C51090;
    const double C2449 = C377 * C50802;
    const double C8651 = C377 * C51044;
    const double C9151 = C377 * C1109;
    const double C574 = C562 * C50802;
    const double C996 = C562 * C51044;
    const double C1607 = C562 * C1109;
    const double C10924 = C10914 + C10915;
    const double C33368 = C33358 + C33359;
    const double C578 = C566 * C50802;
    const double C11641 = C11311 + C11310;
    const double C34085 = C33755 + C33754;
    const double C1009 = C1003 * C50854;
    const double C1605 = C1003 * C50854;
    const double C3151 = C1003 * C50802;
    const double C9000 = C1003 * C51044;
    const double C9747 = C1003 * C1109;
    const double C11469 = C11120 + C11121;
    const double C14396 = C11121 + C11120;
    const double C33913 = C33564 + C33565;
    const double C41346 = C33565 + C33564;
    const double C5777 = C5764 + C5765;
    const double C44652 = C44639 + C44640;
    const double C23026 = C5343 * C6717;
    const double C48290 = C44230 * C6717;
    const double C20638 = C50915 * C3657;
    const double C23530 = C5343 * C4754;
    const double C31833 = C50979 * C4754;
    const double C37452 = C50979 * C4754;
    const double C48794 = C44230 * C4754;
    const double C32327 = C16075 + C16076;
    const double C37950 = C37030 + C37029;
    const double C31669 = C15211 + C15212;
    const double C37280 = C36360 + C36359;
    const double C2649 = C2634 + C2635;
    const double C2835 = C2828 + C2829;
    const double C5583 = C5570 + C5571;
    const double C14876 = C14867 + C14868;
    const double C37033 = C37019 + C37020;
    const double C44470 = C44457 + C44458;
    const double C3389 = C3382 + C3383;
    const double C13994 = C13981 + C13982;
    const double C36363 = C36345 + C36346;
    const double C50129 = C50128 - C50124;
    const double C40286 =
        (5 * (3 * C50608 + C49822 * C50665 + C50607 * ae) +
         C49822 * (4 * C50665 +
                   C49822 * (3 * C50660 +
                             C49822 * (2 * C50652 +
                                       C49822 * (C49893 +
                                                 C49822 * (C49822 * C49904 +
                                                           C49988 * ae) +
                                                 C49822 * C49988 * ae) +
                                       C50654 * ae) +
                             C50659 * ae) +
                   C50663 * ae) +
         (4 * C50607 + C49822 * C50663) * ae) /
        C49759;
    const double C367 = C50915 * C334;
    const double C707 = C50915 * C335;
    const double C825 = C50915 * C525;
    const double C10905 = C50979 * C525;
    const double C33349 = C50979 * C525;
    const double C556 = C50915 * C530;
    const double C5383 = C5343 * C530;
    const double C11640 = C50979 * C530;
    const double C34084 = C50979 * C530;
    const double C44270 = C44230 * C530;
    const double C999 = C50915 * C979;
    const double C11477 = C50979 * C979;
    const double C33921 = C50979 * C979;
    const double C3003 = C2651 * C50854;
    const double C3553 = C2651 * C50854;
    const double C8348 = C2651 * C291;
    const double C9551 = C2651 * C1443;
    const double C8502 = C8500 * C50802;
    const double C3159 = C3157 * C50802;
    const double C9002 = C3157 * C50854;
    const double C9749 = C3157 * C50854;
    const double C3658 =
        4 * (2 * C50027 - (C50024 * ce) / C49833 + C49823 * C50110) -
        ((3 * C50024 + C49823 * C50106) * ce) / C49833 +
        C49823 *
            (3 * C50110 - (C50106 * ce) / C49833 +
             C49823 *
                 (2 * C50108 - (C50100 * ce) / C49833 +
                  C49823 * ((-(C49823 * C50092 * ce) / C49693) / C49759 -
                            C50090 / C49833 +
                            C49823 * ((-(C49823 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (C50092 * ce) / C49833))));
    const double C4753 =
        2 * (C49822 * C50110 - (ae * C50053) / C49833) -
        (ae * (C50146 * std::pow(C49822, 2) + C50053)) / C49833 +
        C49822 *
            (C50110 - (ae * C49822 * C50146) / C49833 +
             C49822 *
                 (C49822 * ((-(C49823 * C50092 * ce) / C49693) / C49759 -
                            C50090 / C49833 +
                            C49823 * ((-(C49823 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (C50092 * ce) / C49833)) -
                  (ae * C50146) / C49833));
    const double C6718 =
        3 * (C50027 - (ae * C50198) / C49833 + C49822 * C50204) +
        (((-2 * C50198) / C49693 - (C49822 * C50203) / C49693) * ae) / C49759 +
        C49822 *
            (2 * C50204 - (ae * C50203) / C49833 +
             C49822 *
                 (C50108 - (ae * C49822 * C50139) / C49833 +
                  C49822 * (C49822 * ((-(C49823 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (C50092 * ce) / C49833) -
                            (ae * C50139) / C49833)));
    const double C6321 = C6314 + C6315;
    const double C14200 = C14195 + C14196;
    const double C41150 = C41145 + C41146;
    const double C45192 = C45185 + C45186;
    const double C7601 =
        4 * (2 * C50179 - (ae * C50176) / C49833 + C49822 * C50227) +
        (((-3 * C50176) / C49693 + C49822 * C50224) * ae) / C49759 +
        C49822 *
            (3 * C50227 + (C50224 * ae) / C49759 +
             C49822 *
                 (2 * C50223 - (ae * C50214) / C49833 +
                  C49822 * ((-(ae * C49822 * C50132) / C49693) / C49759 -
                            C50090 / C49833 +
                            C49822 * ((-(C49822 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (ae * C50132) / C49833))));
    const double C50280 = C50265 + C50279;
    const double C50319 = C50314 - C50317;
    const double C50336 = C50333 + C50334;
    const double C50370 = C50353 + C50369;
    const double C50149 = C50134 - C50148;
    const double C50306 = C50305 - C50298;
    const double C1462 = C172 * C1446;
    const double C1456 = C170 * C1446;
    const double C1450 = C168 * C1446;
    const double C3984 = C370 * C1446;
    const double C3978 = C368 * C1446;
    const double C9546 = C372 * C1446;
    const double C1464 = C376 * C1447;
    const double C1458 = C372 * C1447;
    const double C1452 = C368 * C1447;
    const double C3986 = C2646 * C1447;
    const double C3980 = C370 * C1447;
    const double C9548 = C374 * C1447;
    const double C44265 = C44231 * C133;
    const double C44259 = C44231 * C122;
    const double C44257 = C44231 * C121;
    const double C44251 = C44231 * C131;
    const double C44241 = C44231 * C129;
    const double C44235 = C44231 * C120;
    const double C44453 = C44231 * C314;
    const double C44447 = C44231 * C300;
    const double C44445 = C44231 * C312;
    const double C44439 = C44231 * C299;
    const double C44635 = C44231 * C515;
    const double C44629 = C44231 * C498;
    const double C44623 = C44231 * C503;
    const double C44617 = C44231 * C492;
    const double C44805 = C44231 * C316;
    const double C44799 = C44231 * C301;
    const double C44969 = C44231 * C505;
    const double C44963 = C44231 * C493;
    const double C45181 = C44231 * C969;
    const double C45175 = C44231 * C962;
    const double C47207 = C44231 * C310;
    const double C47201 = C44231 * C298;
    const double C47199 = C44231 * C308;
    const double C47193 = C44231 * C297;
    const double C47863 = C44231 * C967;
    const double C47857 = C44231 * C961;
    const double C48129 = C44231 * C1218;
    const double C48123 = C44231 * C1213;
    const double C48293 = C44231 * C1332;
    const double C48287 = C44231 * C1327;
    const double C48797 = C44231 * C1712;
    const double C48791 = C44231 * C1707;
    const double C44267 = C44232 * C507;
    const double C44261 = C44232 * C494;
    const double C44255 = C44232 * C493;
    const double C44249 = C44232 * C505;
    const double C44243 = C44232 * C503;
    const double C44237 = C44232 * C492;
    const double C44455 = C44232 * C1714;
    const double C44449 = C44232 * C1708;
    const double C44443 = C44232 * C969;
    const double C44437 = C44232 * C962;
    const double C44637 = C44232 * C1999;
    const double C44631 = C44232 * C1993;
    const double C44625 = C44232 * C515;
    const double C44619 = C44232 * C498;
    const double C44807 = C44232 * C971;
    const double C44801 = C44232 * C963;
    const double C44971 = C44232 * C517;
    const double C44965 = C44232 * C499;
    const double C45183 = C44232 * C1334;
    const double C45177 = C44232 * C1328;
    const double C47209 = C44232 * C1712;
    const double C47203 = C44232 * C1707;
    const double C47197 = C44232 * C967;
    const double C47191 = C44232 * C961;
    const double C47865 = C44232 * C1332;
    const double C47859 = C44232 * C1327;
    const double C48127 = C44232 * C3357;
    const double C48121 = C44232 * C3353;
    const double C48291 = C44232 * C4751;
    const double C48285 = C44232 * C4744;
    const double C48795 = C44232 * C2807;
    const double C48789 = C44232 * C2803;
    const double C8655 = C8654 - C2999;
    const double C9155 = C9154 - C3549;
    const double C717 = C713 - C701;
    const double C1138 = C1136 - C1128;
    const double C8194 = C2449 + C2448;
    const double C826 = C574 + C573;
    const double C10928 = C10924 * C50802;
    const double C33372 = C33368 * C50802;
    const double C11647 = C11641 * C50802;
    const double C34091 = C34085 * C50802;
    const double C8804 = C3151 + C3150;
    const double C11480 = C11469 * C50854;
    const double C12017 = C11469 * C50854;
    const double C33924 = C33913 * C50854;
    const double C34461 = C33913 * C50854;
    const double C23034 = C23025 + C23026;
    const double C48298 = C48289 + C48290;
    const double C23538 = C23529 + C23530;
    const double C31838 = C31832 + C31833;
    const double C37461 = C37451 + C37452;
    const double C48802 = C48793 + C48794;
    const double C2657 = C2649 * C291;
    const double C3989 = C2649 * C1443;
    const double C2841 = C2835 * C50802;
    const double C3391 = C3389 * C50854;
    const double C4191 = C3389 * C50854;
    const double C3817 =
        2 * C50016 - (C50014 * ce) / C49833 + C49823 * C50086 +
        (C49822 * C50129 * ae) / C49759 +
        C49822 *
            ((C50129 * ae) / C49759 +
             C49822 *
                 (2 * C50083 - (C50075 * ce) / C49833 +
                  C49823 *
                      ((-(C49823 * C49893 * ce) / C49693) / C49759 - C49858 +
                       C49823 * ((-(C49823 * C49862) / C49693) / C49759 -
                                 (C49893 * ce) / C49833))));
    const double C4343 =
        (((-3 * C50044) / C49693 + C49823 * C50129 -
          ((2 * C50039 + C49823 * C50120) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 *
            (3 * C50086 - (C50081 * ce) / C49833 +
             C49823 *
                 (2 * C50083 - (C50075 * ce) / C49833 +
                  C49823 *
                      ((-(C49823 * C49893 * ce) / C49693) / C49759 - C49858 +
                       C49823 * ((-(C49823 * C49862) / C49693) / C49759 -
                                 (C49893 * ce) / C49833))));
    const double C3654 =
        4 * ((-2 * C49973) / C49693 - (C49823 * C50044) / C49693 -
             (C50490 * ce) / C49693) +
        C49823 * ((-3 * C50044) / C49693 + C49823 * C50129 -
                  (C50515 * ce) / C49693) -
        ((3 * C50490 + C49823 * C50515) * ce) / C49693;
    const double C3814 = (-2 * C49973) / C49693 - (C49823 * C50044) / C49693 -
                         (C50490 * ce) / C49693 + C50129 * C50161;
    const double C4340 = C49822 * ((-3 * C50044) / C49693 + C49823 * C50129 -
                                   (C50515 * ce) / C49693);
    const double C379 = C366 + C367;
    const double C711 = C706 + C707;
    const double C829 = C824 + C825;
    const double C10921 = C10904 + C10905;
    const double C33365 = C33348 + C33349;
    const double C568 = C555 + C556;
    const double C5401 = C5382 + C5383;
    const double C11646 = C11639 + C11640;
    const double C34090 = C34083 + C34084;
    const double C44288 = C44269 + C44270;
    const double C1005 = C998 + C999;
    const double C11484 = C11476 + C11477;
    const double C33928 = C33920 + C33921;
    const double C20633 =
        5 * (3 * C50086 - (C50081 * ce) / C49833 + C49823 * C50280) -
        ((4 * C50081 + C49823 * C50277) * ce) / C49833 +
        C49823 *
            (4 * C50280 - (C50277 * ce) / C49833 +
             C49823 *
                 (3 * C50278 - (C50271 * ce) / C49833 +
                  C49823 *
                      (2 * C50273 - (C50264 * ce) / C49833 +
                       C49823 * ((-(C49823 * C49904 * ce) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49823 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833)))));
    const double C23017 =
        3 * (C50086 - (ae * C50313) / C49833 + C49822 * C50319) +
        (((-2 * C50313) / C49693 - (C49822 * C50318) / C49693) * ae) / C49759 +
        C49822 *
            (2 * C50319 - (ae * C50318) / C49833 +
             C49822 *
                 (C50278 - (ae * C49822 * C50300) / C49833 +
                  C49822 *
                      (C49822 * ((-(C49823 * C49904 * ce) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49823 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833)) -
                       (ae * C50300) / C49833)));
    const double C23933 =
        4 * (2 * C50196 - (ae * C50195) / C49833 + C49822 * C50336) +
        (((-3 * C50195) / C49693 + C49822 * C50337) * ae) / C49759 +
        C49822 *
            (3 * C50336 + (C50337 * ae) / C49759 +
             C49822 *
                 (2 * C50330 - (ae * C50328) / C49833 +
                  C49822 *
                      (C50273 - (ae * C49822 * C50291) / C49833 +
                       C49822 * (C49822 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833) -
                                 (ae * C50291) / C49833))));
    const double C40287 =
        5 * (3 * C50250 + (C50247 * ae) / C49759 + C49822 * C50370) +
        ((4 * C50247 + C49822 * C50368) * ae) / C49759 +
        C49822 *
            (4 * C50370 + (C50368 * ae) / C49759 +
             C49822 *
                 (3 * C50367 + (C50363 * ae) / C49759 +
                  C49822 *
                      (2 * C50362 - (ae * C50352) / C49833 +
                       C49822 * ((-(ae * C49822 * C49946) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49822 * ((-(C49822 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (ae * C49946) / C49833)))));
    const double C50150 = C50149 - C50145;
    const double C50307 = C49823 * C50306;
    const double C21349 =
        2 * ((C50129 * ae) / C49759 + C49822 * C50280) +
        ((C50129 + C50306 * C50161) * ae) / C49759 +
        C49822 *
            (C50280 + (C49822 * C50306 * ae) / C49759 +
             C49822 *
                 ((C50306 * ae) / C49759 +
                  C49822 *
                      (2 * C50273 - (C50264 * ce) / C49833 +
                       C49823 * ((-(C49823 * C49904 * ce) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49823 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833)))));
    const double C21347 =
        2 * C49822 * C50129 + C49822 * (C50129 + C50306 * C50161);
    const double C44286 = C44265 + C44266;
    const double C44283 = C44259 + C44260;
    const double C44282 = C44257 + C44258;
    const double C44279 = C44251 + C44252;
    const double C44274 = C44241 + C44242;
    const double C44271 = C44235 + C44236;
    const double C44468 = C44453 + C44454;
    const double C44465 = C44447 + C44448;
    const double C44464 = C44445 + C44446;
    const double C44461 = C44439 + C44440;
    const double C44650 = C44635 + C44636;
    const double C44647 = C44629 + C44630;
    const double C44644 = C44623 + C44624;
    const double C44641 = C44617 + C44618;
    const double C44814 = C44805 + C44806;
    const double C44811 = C44799 + C44800;
    const double C44978 = C44969 + C44970;
    const double C44975 = C44963 + C44964;
    const double C45190 = C45181 + C45182;
    const double C45187 = C45175 + C45176;
    const double C47222 = C47207 + C47208;
    const double C47219 = C47201 + C47202;
    const double C47218 = C47199 + C47200;
    const double C47215 = C47193 + C47194;
    const double C47872 = C47863 + C47864;
    const double C47869 = C47857 + C47858;
    const double C48136 = C48129 + C48130;
    const double C48133 = C48123 + C48124;
    const double C48300 = C48293 + C48294;
    const double C48297 = C48287 + C48288;
    const double C48804 = C48797 + C48798;
    const double C48801 = C48791 + C48792;
    const double C44287 = C44267 + C44268;
    const double C44284 = C44261 + C44262;
    const double C44281 = C44255 + C44256;
    const double C44278 = C44249 + C44250;
    const double C44275 = C44243 + C44244;
    const double C44272 = C44237 + C44238;
    const double C44469 = C44455 + C44456;
    const double C44466 = C44449 + C44450;
    const double C44463 = C44443 + C44444;
    const double C44460 = C44437 + C44438;
    const double C44651 = C44637 + C44638;
    const double C44648 = C44631 + C44632;
    const double C44645 = C44625 + C44626;
    const double C44642 = C44619 + C44620;
    const double C44815 = C44807 + C44808;
    const double C44812 = C44801 + C44802;
    const double C44979 = C44971 + C44972;
    const double C44976 = C44965 + C44966;
    const double C45191 = C45183 + C45184;
    const double C45188 = C45177 + C45178;
    const double C47223 = C47209 + C47210;
    const double C47220 = C47203 + C47204;
    const double C47217 = C47197 + C47198;
    const double C47214 = C47191 + C47192;
    const double C47873 = C47865 + C47866;
    const double C47870 = C47859 + C47860;
    const double C48135 = C48127 + C48128;
    const double C48132 = C48121 + C48122;
    const double C48299 = C48291 + C48292;
    const double C48296 = C48285 + C48286;
    const double C48803 = C48795 + C48796;
    const double C48800 = C48789 + C48790;
    const double C10931 = C10928 + C10929;
    const double C33375 = C33372 + C33373;
    const double C11649 = C11647 + C11648;
    const double C34093 = C34091 + C34092;
    const double C11486 = C11485 - C11480;
    const double C12020 = C12019 - C12017;
    const double C33930 = C33929 - C33924;
    const double C34464 = C34463 - C34461;
    const double C20746 = C50915 * C3817;
    const double C22858 = C5343 * C3817;
    const double C32333 = C50979 * C3817;
    const double C37956 = C50979 * C3817;
    const double C48126 = C44230 * C3817;
    const double C21082 = C50915 * C4343;
    const double C31675 = C50979 * C4343;
    const double C37286 = C50979 * C4343;
    const double C20637 = C117 * C3654;
    const double C20745 = C117 * C3814;
    const double C22857 = C5346 * C3814;
    const double C32332 = C10872 * C3814;
    const double C37955 = C33316 * C3814;
    const double C48125 = C44233 * C3814;
    const double C21081 = C117 * C4340;
    const double C31674 = C10872 * C4340;
    const double C37285 = C33316 * C4340;
    const double C391 = C379 * C291;
    const double C1467 = C379 * C1443;
    const double C2451 = C379 * C50802;
    const double C8653 = C379 * C50854;
    const double C9153 = C379 * C50854;
    const double C715 = C711 * C50854;
    const double C1132 = C711 * C50854;
    const double C8196 = C711 * C50802;
    const double C831 = C829 * C50802;
    const double C580 = C568 * C50802;
    const double C1011 = C1005 * C50854;
    const double C1609 = C1005 * C50854;
    const double C8803 = C1005 * C50802;
    const double C3818 =
        2 * C50027 - (C50024 * ce) / C49833 + C49823 * C50110 +
        (C49822 * C50150 * ae) / C49759 +
        C49822 *
            ((C50150 * ae) / C49759 +
             C49822 *
                 (2 * C50108 - (C50100 * ce) / C49833 +
                  C49823 * ((-(C49823 * C50092 * ce) / C49693) / C49759 -
                            C50090 / C49833 +
                            C49823 * ((-(C49823 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (C50092 * ce) / C49833))));
    const double C4344 =
        (((-3 * C50053) / C49693 + C49823 * C50150 -
          ((2 * C50048 + C49823 * C50141) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 *
            (3 * C50110 - (C50106 * ce) / C49833 +
             C49823 *
                 (2 * C50108 - (C50100 * ce) / C49833 +
                  C49823 * ((-(C49823 * C50092 * ce) / C49693) / C49759 -
                            C50090 / C49833 +
                            C49823 * ((-(C49823 * C49830 * std::pow(C49826, 8) *
                                         bs[8] * C49828) /
                                       C49693) /
                                          C49759 -
                                      (C50092 * ce) / C49833))));
    const double C3656 =
        4 * ((-2 * C49978) / C49693 - (C49823 * C50053) / C49693 -
             (C50494 * ce) / C49693) +
        C49823 * ((-3 * C50053) / C49693 + C49823 * C50150 -
                  (C50520 * ce) / C49693) -
        ((3 * C50494 + C49823 * C50520) * ce) / C49693;
    const double C3816 = (-2 * C49978) / C49693 - (C49823 * C50053) / C49693 -
                         (C50494 * ce) / C49693 + C50150 * C50161;
    const double C4342 = C49822 * ((-3 * C50053) / C49693 + C49823 * C50150 -
                                   (C50520 * ce) / C49693);
    const double C50308 = C50289 + C50307;
    const double C20640 = C20637 + C20638;
    const double C20748 = C20745 + C20746;
    const double C22866 = C22857 + C22858;
    const double C32338 = C32332 + C32333;
    const double C37961 = C37955 + C37956;
    const double C48134 = C48125 + C48126;
    const double C21084 = C21081 + C21082;
    const double C31680 = C31674 + C31675;
    const double C37291 = C37285 + C37286;
    const double C50309 = C50308 - C50303;
    const double C20741 =
        3 * C50086 - (C50081 * ce) / C49833 + C49823 * C50280 +
        (C49822 * C50309 * ae) / C49759 +
        C49822 *
            ((C50309 * ae) / C49759 +
             C49822 *
                 (3 * C50278 - (C50271 * ce) / C49833 +
                  C49823 *
                      (2 * C50273 - (C50264 * ce) / C49833 +
                       C49823 * ((-(C49823 * C49904 * ce) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49823 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833)))));
    const double C21077 =
        ((4 * C50129 + C49823 * C50309 -
          ((3 * C50120 + C49823 * C50299) * ce) / C49693) *
         ae) /
            C49759 +
        C49822 *
            (4 * C50280 - (C50277 * ce) / C49833 +
             C49823 *
                 (3 * C50278 - (C50271 * ce) / C49833 +
                  C49823 *
                      (2 * C50273 - (C50264 * ce) / C49833 +
                       C49823 * ((-(C49823 * C49904 * ce) / C49693) / C49759 -
                                 C49862 / C49833 +
                                 C49823 * ((-(C49823 * std::pow(C49826, 8) *
                                              bs[8] * C49828) /
                                            C49693) /
                                               C49759 -
                                           (C49904 * ce) / C49833)))));
    const double C20632 =
        5 * ((-3 * C50044) / C49693 + C49823 * C50129 -
             (C50515 * ce) / C49693) +
        C49823 * (4 * C50129 + C49823 * C50309 - (C50613 * ce) / C49693) -
        ((4 * C50515 + C49823 * C50613) * ce) / C49693;
    const double C20740 = (-3 * C50044) / C49693 + C49823 * C50129 -
                          (C50515 * ce) / C49693 + C50309 * C50161;
    const double C21076 =
        C49822 * (4 * C50129 + C49823 * C50309 - (C50613 * ce) / C49693);
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C51085 +
            (C690 + C691 - C692 - C693) * C51086 + C716 * C8189) *
               C51057 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C51085 +
            (C2988 + C2989 - C2990 - C2991) * C51086 + C8655 * C8189) *
               C50953) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C51085 +
            (C696 - (C695 + C694) + C697) * C51086 +
            (C700 - (C699 + C698) + C701) * C8189) *
               C51057 +
           ((C2990 - (C2989 + C2988) + C2991) * C51085 +
            (C2996 - (C2997 + C2998) + C2999) * C51086 +
            (C8650 - (C8651 + C8652) + C8653) * C8189) *
               C50953) *
              C51088 +
          ((C716 * C51085 + C717 * C51086 +
            (C705 + C704 - C714 - C715) * C8189) *
               C51057 +
           (C8655 * C51085 + (C8652 + C8651 - C8650 - C8653) * C51086 +
            (C710 * C683 + C711 * C51044 -
             (C117 * C306 + C50915 * C325) * C684 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C8189) *
               C50953) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C51085 +
             (C690 + C691 - C692 - C693) * C51086 + C716 * C8189) *
                C51057 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C51085 +
             (C2988 + C2989 - C2990 - C2991) * C51086 + C8655 * C8189) *
                C50953) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C51085 +
             (C696 - (C695 + C694) + C697) * C51086 +
             (C700 - (C699 + C698) + C701) * C8189) *
                C51057 +
            ((C2990 - (C2989 + C2988) + C2991) * C51085 +
             (C2996 - (C2997 + C2998) + C2999) * C51086 +
             (C8650 - (C8651 + C8652) + C8653) * C8189) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C51085 +
             (C1006 - (C984 + C985) + C1007) * C51086 +
             (C1008 - (C990 + C991) + C1009) * C8189) *
                C51057 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C51085 +
             (C3374 - (C3375 + C3376) + C3377) * C51086 +
             (C8999 - (C9000 + C9001) + C9002) * C8189) *
                C50953) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C51085 +
             (C991 + C990 - C1008 - C1009) * C51086 +
             (C997 + C996 - C1010 - C1011) * C8189) *
                C51057 +
            ((C3376 + C3375 - C3374 - C3377) * C51085 +
             (C9001 + C9000 - C8999 - C9002) * C51086 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C8189) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51085 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C51086 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C8189) *
               C51057 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51085 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C51086 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C8189) *
               C50953) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C51085 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C51086 +
            (C388 - (C359 + C358) + C389 - C390 - C391) * C8189) *
               C51057 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C51085 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C51086 +
            (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
             (C117 * C1216 + C50915 * C1223) * C296 -
             (C117 * C1224 + C50915 * C1228) * C291) *
                C8189) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51085 +
            (C178 + C179) * C51086 + C188 * C8189) *
               C51057 +
           ((C2640 * C118 + C2641 * C50802) * C51085 +
            (C2440 + C2441) * C51086 + C8193 * C8189) *
               C50953) *
              C112 -
          ((C8194 * C8189 + (C2446 + C2447) * C51086 +
            (C2441 + C2440) * C51085) *
               C50953 +
           (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
               C51057) *
              C113 +
          ((C188 * C51085 + C189 * C51086 + (C185 + C184) * C8189) * C51057 +
           (C8193 * C51085 + (C2448 + C2449) * C51086 +
            (C8195 + C8196) * C8189) *
               C50953) *
              C114 -
          ((((C117 * C687 + C50915 * C688) * C50802 +
             (C117 * C685 + C50915 * C686) * C118) *
                C8189 +
            (C8196 + C8195) * C51086 + C8194 * C51085) *
               C50953 +
           ((C187 + C186) * C8189 + C190 * C51086 + C191 * C51085) * C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51085 +
             (C178 + C179) * C51086 + C188 * C8189) *
                C51057 +
            ((C2640 * C118 + C2641 * C50802) * C51085 +
             (C2440 + C2441) * C51086 + C8193 * C8189) *
                C50953) *
               C292 -
           ((C8194 * C8189 + (C2446 + C2447) * C51086 +
             (C2441 + C2440) * C51085) *
                C50953 +
            (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
                C51057) *
               C50789) *
              C489 +
          ((((C569 + C570) * C51085 + (C571 + C572) * C51086 +
             (C573 + C574) * C8189) *
                C51057 +
            ((C2816 + C2817) * C51085 + (C3150 + C3151) * C51086 +
             (C1004 * C118 + C1005 * C50802) * C8189) *
                C50953) *
               C50789 -
           (((C3151 + C3150) * C8189 + (C2817 + C2816) * C51086 +
             (C3385 * C50802 + C3384 * C118) * C51085) *
                C50953 +
            (C827 * C8189 + (C570 + C569) * C51086 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C51085) *
                C51057) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C51085 +
             (C575 + C576) * C51086 + (C577 + C578) * C8189) *
                C51057 +
            ((C3828 * C118 + C3829 * C50802) * C51085 +
             (C2838 + C2839) * C51086 + (C8501 + C8502) * C8189) *
                C50953) *
               C292 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C8189 +
             (C8502 + C8501) * C51086 + (C2839 + C2838) * C51085) *
                C50953 +
            ((C580 + C579) * C8189 + (C578 + C577) * C51086 +
             (C576 + C575) * C51085) *
                C51057) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51085 +
             (C178 + C179) * C51086 + C188 * C8189) *
                C51057 +
            ((C2640 * C118 + C2641 * C50802) * C51085 +
             (C2440 + C2441) * C51086 + C8193 * C8189) *
                C50953) *
               C51087 -
           ((C8194 * C8189 + (C2446 + C2447) * C51086 +
             (C2441 + C2440) * C51085) *
                C50953 +
            (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
                C51057) *
               C51088 +
           ((C188 * C51085 + C189 * C51086 + (C185 + C184) * C8189) * C51057 +
            (C8193 * C51085 + (C2448 + C2449) * C51086 +
             (C8195 + C8196) * C8189) *
                C50953) *
               C682) *
              C51045 +
          ((((C569 + C570) * C51085 + (C571 + C572) * C51086 +
             (C573 + C574) * C8189) *
                C51057 +
            ((C2816 + C2817) * C51085 + (C3150 + C3151) * C51086 +
             (C8802 + C8803) * C8189) *
                C50953) *
               C51088 -
           ((C8804 * C8189 + (C2817 + C2816) * C51086 +
             (C3385 * C50802 + C3384 * C118) * C51085) *
                C50953 +
            (C827 * C8189 + (C570 + C569) * C51086 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C51085) *
                C51057) *
               C51087 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C8189 +
             (C8803 + C8802) * C51086 + C8804 * C51085) *
                C50953 +
            ((C831 + C830) * C8189 + C826 * C51086 + C827 * C51085) * C51057) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51085 +
            (C178 + C179) * C51086 + C188 * C8189) *
               C51057 +
           ((C2640 * C118 + C2641 * C50802) * C51085 +
            (C2440 + C2441) * C51086 + C8193 * C8189) *
               C50953) *
              C112 -
          ((C8194 * C8189 + (C2446 + C2447) * C51086 +
            (C2441 + C2440) * C51085) *
               C50953 +
           (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
               C51057) *
              C113 +
          ((C188 * C51085 + C189 * C51086 + (C185 + C184) * C8189) * C51057 +
           (C8193 * C51085 + (C2448 + C2449) * C51086 +
            (C8195 + C8196) * C8189) *
               C50953) *
              C114 -
          ((((C117 * C687 + C50915 * C688) * C50802 +
             (C117 * C685 + C50915 * C686) * C118) *
                C8189 +
            (C8196 + C8195) * C51086 + C8194 * C51085) *
               C50953 +
           ((C187 + C186) * C8189 + C190 * C51086 + C191 * C51085) * C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51085 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C51086 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C8189) *
               C51057 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51085 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C51086 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C8189) *
               C50953) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C51085 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C51086 +
            (C388 - (C359 + C358) + C389 - C390 - C391) * C8189) *
               C51057 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C51085 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C51086 +
            (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
             (C117 * C1216 + C50915 * C1223) * C296 -
             (C117 * C1224 + C50915 * C1228) * C291) *
                C8189) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C50915 * C126) * C1446 +
                    (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
                    C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                       C51085 +
                   (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C51086 +
                   (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C8189) *
                      C51057 +
                  ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 -
                    C2643 * C51090 + C2644 * C1448 + C2645 * C1443) *
                       C51085 +
                   (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C51086 +
                   (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C8189) *
                      C50953) *
                     C51036 +
                 (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C51085 +
                   (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C51086 +
                   (C1464 - (C1463 + C1462) + C1465 - C1466 - C1467) * C8189) *
                      C51057 +
                  ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C51085 +
                   (C9548 - (C9547 + C9546) + C9549 - C9550 - C9551) * C51086 +
                   (C378 * C1447 - (C377 * C51089 + C376 * C1446) +
                    C379 * C51090 - (C117 * C1216 + C50915 * C1223) * C1448 -
                    (C117 * C1224 + C50915 * C1228) * C1443) *
                       C8189) *
                      C50953) *
                     C50789) *
                C50818) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C50915 * C126) * C1446 +
                    (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
                    C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                       C51085 +
                   (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C51086 +
                   (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C8189) *
                      C51057 +
                  ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 -
                    C2643 * C51090 + C2644 * C1448 + C2645 * C1443) *
                       C51085 +
                   (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C51086 +
                   (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C8189) *
                      C50953) *
                     C50784 * C51045 +
                 (((C3384 * C1447 -
                    ((C117 * C510 + C50915 * C526) * C51089 +
                     (C117 * C496 + C50915 * C511) * C1446) +
                    C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                       C51085 +
                   (C1000 * C1447 - (C558 * C51089 + C557 * C1446) +
                    C1001 * C51090 - C2830 * C1448 - C2831 * C1443) *
                       C51086 +
                   (C1002 * C1447 - (C560 * C51089 + C559 * C1446) +
                    C1003 * C51090 - C3156 * C1448 - C3157 * C1443) *
                       C8189) *
                      C51057 +
                  ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) +
                    C3387 * C51090 - C4350 * C1448 - C4351 * C1443) *
                       C51085 +
                   (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) +
                    C2831 * C51090 - C3388 * C1448 - C3389 * C1443) *
                       C51086 +
                   (C3156 * C1447 - (C1003 * C51089 + C1002 * C1446) +
                    C3157 * C51090 - (C117 * C3355 + C50915 * C3360) * C1448 -
                    (C117 * C3361 + C50915 * C3364) * C1443) *
                       C8189) *
                      C50953) *
                     C50784 * C50882)) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C51085 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C51086 +
           (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
            C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
               C8189) *
              C51057 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C51085 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C51086 +
           (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
            C2650 * C1211 + C2651 * C1206 -
            (C117 * C2599 + C50915 * C2604) * C1212 -
            (C117 * C2605 + C50915 * C2608) * C1207) *
               C8189) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51085 +
            (C1117 + C1118 - C1119 - C1120) * C51086 + C1137 * C8189) *
               C51057 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51085 +
            (C3538 + C3539 - C3540 - C3541) * C51086 + C9155 * C8189) *
               C50953) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C51085 +
            (C1123 - (C1122 + C1121) + C1124) * C51086 +
            (C1127 - (C1126 + C1125) + C1128) * C8189) *
               C51057 +
           ((C3540 - (C3539 + C3538) + C3541) * C51085 +
            (C3546 - (C3547 + C3548) + C3549) * C51086 +
            (C9150 - (C9151 + C9152) + C9153) * C8189) *
               C50953) *
              C1112 +
          ((C1137 * C51085 + C1138 * C51086 +
            (C1131 + C1130 - C1129 - C1132) * C8189) *
               C51057 +
           (C9155 * C51085 + (C9152 + C9151 - C9150 - C9153) * C51086 +
            (C710 * C1114 + C711 * C1109 -
             (C117 * C306 + C50915 * C325) * C1115 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C8189) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51085 +
            (C1117 + C1118 - C1119 - C1120) * C51086 + C1137 * C8189) *
               C51057 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51085 +
            (C3538 + C3539 - C3540 - C3541) * C51086 + C9155 * C8189) *
               C50953) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C51085 +
            (C1598 - (C1599 + C1600) + C1601) * C51086 +
            (C1602 - (C1603 + C1604) + C1605) * C8189) *
               C51057 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C51085 +
            (C4184 - (C4185 + C4186) + C4187) * C51086 +
            (C3156 * C1115 - (C1003 * C1109 + C1002 * C1114) + C3157 * C50854) *
                C8189) *
               C50953) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C51085 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C51086 +
            (C565 * C1114 + C566 * C1109 - C8499 * C1115 - C8500 * C50854) *
                C8189) *
               C51057 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C51085 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C51086 +
            (C8499 * C1114 + C8500 * C1109 -
             (C117 * C2805 + C50915 * C2811) * C1115 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C8189) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C51085 +
             (C1117 + C1118 - C1119 - C1120) * C51086 + C1137 * C8189) *
                C51057 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C51085 +
             (C3538 + C3539 - C3540 - C3541) * C51086 + C9155 * C8189) *
                C50953) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C51085 +
             (C1123 - (C1122 + C1121) + C1124) * C51086 +
             (C1127 - (C1126 + C1125) + C1128) * C8189) *
                C51057 +
            ((C3540 - (C3539 + C3538) + C3541) * C51085 +
             (C3546 - (C3547 + C3548) + C3549) * C51086 +
             (C9150 - (C9151 + C9152) + C9153) * C8189) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C51085 +
             (C1598 - (C1599 + C1600) + C1601) * C51086 +
             (C1602 - (C1603 + C1604) + C1605) * C8189) *
                C51057 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C51085 +
             (C4184 - (C4185 + C4186) + C4187) * C51086 +
             (C9746 - (C9747 + C9748) + C9749) * C8189) *
                C50953) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C51085 +
             (C1604 + C1603 - C1602 - C1605) * C51086 +
             (C1608 + C1607 - C1606 - C1609) * C8189) *
                C51057 +
            ((C4186 + C4185 - C4184 - C4187) * C51085 +
             (C9748 + C9747 - C9746 - C9749) * C51086 +
             (C1004 * C1114 + C1005 * C1109 -
              (C117 * C1710 + C50915 * C1717) * C1115 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C8189) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51085 +
            (C1117 + C1118 - C1119 - C1120) * C51086 + C1137 * C8189) *
               C51057 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51085 +
            (C3538 + C3539 - C3540 - C3541) * C51086 + C9155 * C8189) *
               C50953) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C51085 +
            (C1123 - (C1122 + C1121) + C1124) * C51086 +
            (C1127 - (C1126 + C1125) + C1128) * C8189) *
               C51057 +
           ((C3540 - (C3539 + C3538) + C3541) * C51085 +
            (C3546 - (C3547 + C3548) + C3549) * C51086 +
            (C9150 - (C9151 + C9152) + C9153) * C8189) *
               C50953) *
              C1112 +
          ((C1137 * C51085 + C1138 * C51086 +
            (C1131 + C1130 - C1129 - C1132) * C8189) *
               C51057 +
           (C9155 * C51085 + (C9152 + C9151 - C9150 - C9153) * C51086 +
            (C710 * C1114 + C711 * C1109 -
             (C117 * C306 + C50915 * C325) * C1115 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C8189) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C51085 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C51086 +
           (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
            C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
               C8189) *
              C51057 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C51085 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C51086 +
           (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
            C2650 * C1211 + C2651 * C1206 -
            (C117 * C2599 + C50915 * C2604) * C1212 -
            (C117 * C2605 + C50915 * C2608) * C1207) *
               C8189) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C51085 +
             (C690 + C691 - C692 - C693) * C51086 + C716 * C8189) *
                C51057 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C51085 +
             (C2988 + C2989 - C2990 - C2991) * C51086 + C8655 * C8189) *
                C50953) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C51085 +
             (C696 - (C695 + C694) + C697) * C51086 +
             (C700 - (C699 + C698) + C701) * C8189) *
                C51057 +
            ((C2990 - (C2989 + C2988) + C2991) * C51085 +
             (C2996 - (C2997 + C2998) + C2999) * C51086 +
             (C8650 - (C8651 + C8652) + C8653) * C8189) *
                C50953) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C51085 +
             (C1006 - (C984 + C985) + C1007) * C51086 +
             (C1008 - (C990 + C991) + C1009) * C8189) *
                C51057 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C51085 +
             (C3374 - (C3375 + C3376) + C3377) * C51086 +
             (C8999 - (C9000 + C9001) + C9002) * C8189) *
                C50953) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C51085 +
             (C991 + C990 - C1008 - C1009) * C51086 +
             (C997 + C996 - C1010 - C1011) * C8189) *
                C51057 +
            ((C3376 + C3375 - C3374 - C3377) * C51085 +
             (C9001 + C9000 - C8999 - C9002) * C51086 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C8189) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C51085 +
            (C690 + C691 - C692 - C693) * C51086 + C716 * C8189) *
               C51057 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C51085 +
            (C2988 + C2989 - C2990 - C2991) * C51086 + C8655 * C8189) *
               C50953) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C51085 +
            (C1006 - (C984 + C985) + C1007) * C51086 +
            (C1008 - (C990 + C991) + C1009) * C8189) *
               C51057 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C51085 +
            (C3374 - (C3375 + C3376) + C3377) * C51086 +
            (C8999 - (C9000 + C9001) + C9002) * C8189) *
               C50953) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C51085 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C51086 +
            (C565 * C683 + C566 * C51044 - C8499 * C684 - C8500 * C50854) *
                C8189) *
               C51057 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C51085 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C51086 +
            (C8499 * C683 + C8500 * C51044 -
             (C117 * C2805 + C50915 * C2811) * C684 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C8189) *
               C50953) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51085 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C51086 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C8189) *
               C51057 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51085 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C51086 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C8189) *
               C50953) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C51085 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C51086 +
            (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
             C3156 * C296 - C3157 * C291) *
                C8189) *
               C51057 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C51085 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C51086 +
            (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
             (C117 * C3355 + C50915 * C3360) * C296 -
             (C117 * C3361 + C50915 * C3364) * C291) *
                C8189) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51085 +
             (C178 + C179) * C51086 + C188 * C8189) *
                C51057 +
            ((C2640 * C118 + C2641 * C50802) * C51085 +
             (C2440 + C2441) * C51086 + C8193 * C8189) *
                C50953) *
               C1111 -
           ((C8194 * C8189 + (C2446 + C2447) * C51086 +
             (C2441 + C2440) * C51085) *
                C50953 +
            (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
                C51057) *
               C1112 +
           ((C188 * C51085 + C189 * C51086 + (C185 + C184) * C8189) * C51057 +
            (C8193 * C51085 + (C2448 + C2449) * C51086 +
             (C8195 + C8196) * C8189) *
                C50953) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C51085 + (C571 + C572) * C51086 +
             (C573 + C574) * C8189) *
                C51057 +
            ((C2816 + C2817) * C51085 + (C3150 + C3151) * C51086 +
             (C8802 + C8803) * C8189) *
                C50953) *
               C1112 -
           ((C8804 * C8189 + (C2817 + C2816) * C51086 +
             (C3385 * C50802 + C3384 * C118) * C51085) *
                C50953 +
            (C827 * C8189 + (C570 + C569) * C51086 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C51085) *
                C51057) *
               C1111 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C8189 +
             (C8803 + C8802) * C51086 + C8804 * C51085) *
                C50953 +
            ((C831 + C830) * C8189 + C826 * C51086 + C827 * C51085) * C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51085 +
            (C178 + C179) * C51086 + C188 * C8189) *
               C51057 +
           ((C2640 * C118 + C2641 * C50802) * C51085 +
            (C2440 + C2441) * C51086 + C8193 * C8189) *
               C50953) *
              C50784 * C1987 -
          ((C8804 * C8189 + (C2817 + C2816) * C51086 +
            (C3385 * C50802 + C3384 * C118) * C51085) *
               C50953 +
           (C827 * C8189 + (C570 + C569) * C51086 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C51085) *
               C51057) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C51085 +
            (C575 + C576) * C51086 + (C577 + C578) * C8189) *
               C51057 +
           ((C3828 * C118 + C3829 * C50802) * C51085 +
            (C2838 + C2839) * C51086 + (C8501 + C8502) * C8189) *
               C50953) *
              C50784 * C1989 -
          ((((C117 * C6301 + C50915 * C6302) * C50802 +
             (C117 * C6299 + C50915 * C6300) * C118) *
                C8189 +
            ((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C51086 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C51085) *
               C50953 +
           (((C117 * C1997 + C50915 * C2004) * C50802 +
             (C117 * C1992 + C50915 * C1998) * C118) *
                C8189 +
            ((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C51086 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C51085) *
               C51057) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51085 +
             (C178 + C179) * C51086 + C188 * C8189) *
                C51057 +
            ((C2640 * C118 + C2641 * C50802) * C51085 +
             (C2440 + C2441) * C51086 + C8193 * C8189) *
                C50953) *
               C51036 -
           ((C8194 * C8189 + (C2446 + C2447) * C51086 +
             (C2441 + C2440) * C51085) *
                C50953 +
            (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
                C51057) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C51085 + (C571 + C572) * C51086 +
             (C573 + C574) * C8189) *
                C51057 +
            ((C2816 + C2817) * C51085 + (C3150 + C3151) * C51086 +
             (C8802 + C8803) * C8189) *
                C50953) *
               C50789 -
           ((C8804 * C8189 + (C2817 + C2816) * C51086 +
             (C3385 * C50802 + C3384 * C118) * C51085) *
                C50953 +
            (C827 * C8189 + (C570 + C569) * C51086 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C51085) *
                C51057) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C51085 +
             (C575 + C576) * C51086 + (C577 + C578) * C8189) *
                C51057 +
            ((C3828 * C118 + C3829 * C50802) * C51085 +
             (C2838 + C2839) * C51086 + (C8501 + C8502) * C8189) *
                C50953) *
               C51036 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C8189 +
             (C8502 + C8501) * C51086 + (C2839 + C2838) * C51085) *
                C50953 +
            ((C580 + C579) * C8189 + (C578 + C577) * C51086 +
             (C576 + C575) * C51085) *
                C51057) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51085 +
             (C178 + C179) * C51086 + C188 * C8189) *
                C51057 +
            ((C2640 * C118 + C2641 * C50802) * C51085 +
             (C2440 + C2441) * C51086 + C8193 * C8189) *
                C50953) *
               C1111 -
           ((C8194 * C8189 + (C2446 + C2447) * C51086 +
             (C2441 + C2440) * C51085) *
                C50953 +
            (C191 * C8189 + (C181 + C180) * C51086 + (C179 + C178) * C51085) *
                C51057) *
               C1112 +
           ((C188 * C51085 + C189 * C51086 + (C185 + C184) * C8189) * C51057 +
            (C8193 * C51085 + (C2448 + C2449) * C51086 +
             (C8195 + C8196) * C8189) *
                C50953) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C51085 + (C571 + C572) * C51086 +
             (C573 + C574) * C8189) *
                C51057 +
            ((C2816 + C2817) * C51085 + (C3150 + C3151) * C51086 +
             (C8802 + C8803) * C8189) *
                C50953) *
               C1112 -
           ((C8804 * C8189 + (C2817 + C2816) * C51086 +
             (C3385 * C50802 + C3384 * C118) * C51085) *
                C50953 +
            (C827 * C8189 + (C570 + C569) * C51086 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C51085) *
                C51057) *
               C1111 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C8189 +
             (C8803 + C8802) * C51086 + C8804 * C51085) *
                C50953 +
            ((C831 + C830) * C8189 + C826 * C51086 + C827 * C51085) * C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51085 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C51086 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C8189) *
               C51057 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51085 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C51086 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C8189) *
               C50953) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C51085 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C51086 +
            (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
             C3156 * C296 - C3157 * C291) *
                C8189) *
               C51057 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C51085 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C51086 +
            (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
             (C117 * C3355 + C50915 * C3360) * C296 -
             (C117 * C3361 + C50915 * C3364) * C291) *
                C8189) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C2434 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             C13967 * C684 - C13968 * C50854) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C2434 +
            (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C51087 +
          (((C13971 * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             C13972 * C50854) *
                C2434 +
            (C14395 * C684 -
             ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
             C14396 * C50854) *
                C50768) *
               C51057 +
           ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
             C13970 * C50854) *
                C2434 +
            ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C51088 +
          ((C11486 * C2434 +
            ((C10917 + C10916) * C683 + (C10915 + C10914) * C51044 -
             (C11482 + C11481) * C684 - (C11484 + C11483) * C50854) *
                C50768) *
               C51057 +
           ((C14395 * C683 + C14396 * C51044 - (C11123 + C11122) * C684 -
             (C11125 + C11124) * C50854) *
                C2434 +
            ((C11481 + C11482) * C683 + (C11483 + C11484) * C51044 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C684 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C683 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C51044 -
              (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                 C2434 +
             ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
              C13967 * C684 - C13968 * C50854) *
                 C50768) *
                C51057 +
            (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
              (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                 C2434 +
             (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C292 +
           (((C13971 * C684 -
              ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
              C13972 * C50854) *
                 C2434 +
             (C14395 * C684 -
              ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
              C14396 * C50854) *
                 C50768) *
                C51057 +
            ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
              C13970 * C50854) *
                 C2434 +
             ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C14869 + C14870) * C684 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C51044 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C683) +
              (C14871 + C14872) * C50854) *
                 C2434 +
             (C14857 * C684 -
              ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
              C14858 * C50854) *
                 C50768) *
                C51057 +
            (((C10871 * C1707 + C51058 * C1711 + C10872 * C2803 +
               C50979 * C2806) *
                  C684 -
              ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
              (C10871 * C1712 + C51058 * C1719 + C10872 * C2807 +
               C50979 * C2812) *
                  C50854) *
                 C2434 +
             ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C292 +
           ((((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
              C14864 * C684 - C14863 * C50854) *
                 C2434 +
             ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
              (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                 C50768) *
                C51057 +
            ((C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
              (C14876 + C14875) * C50854) *
                 C2434 +
             ((C11864 + C11865) * C683 + (C11866 + C11867) * C51044 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C684 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C2434 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C10871 * C1213 + C51058 * C1217 + C10872 * C3353 +
              C50979 * C3356) *
                 C296 +
             (C10871 * C1218 + C51058 * C1225 + C10872 * C3357 +
              C50979 * C3362) *
                 C291) *
                C2434 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C13971 * C295 -
             ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
             C13972 * C290 - C13973 * C296 - C13974 * C291) *
                C2434 +
            ((C11119 + C11118) * C295 -
             ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
             (C11121 + C11120) * C290 - (C11123 + C11122) * C296 -
             (C11125 + C11124) * C291) *
                C50768) *
               C51057 +
           ((C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
             (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
                C2434 +
            ((C11122 + C11123) * C295 - (C11469 * C289 + C11468 * C294) +
             (C11124 + C11125) * C290 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C296 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C2434 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C51057 +
           (((C10871 * C297 + C51058 * C307 + C10872 * C961 + C50979 * C966) *
                 C118 +
             (C10871 * C308 + C51058 * C327 + C10872 * C967 + C50979 * C976) *
                 C50802) *
                C2434 +
            ((C11111 + C11110) * C118 + (C11113 + C11112) * C50802) * C50768) *
               C50953) *
              C112 -
          (((C11469 * C50802 + C11468 * C118) * C50768 +
            ((C11112 + C11113) * C50802 + (C11110 + C11111) * C118) * C2434) *
               C50953 +
           (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
               C51057) *
              C113 +
          ((C10930 * C2434 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
               C51057 +
           (((C11119 + C11118) * C118 + (C11121 + C11120) * C50802) * C2434 +
            ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                 C50802 +
             (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                 C118) *
                C50768 +
            ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C2434) *
               C50953 +
           (((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C50768 +
            C10931 * C2434) *
               C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C2434 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C51057 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C292 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C2434) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
                C51057) *
               C50789) *
              C489 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C2434 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C51057 +
            (((C11860 + C11861) * C118 + (C11862 + C11863) * C50802) * C2434 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C50789 -
           ((((C11863 + C11862) * C50802 + (C11861 + C11860) * C118) * C50768 +
             ((C10872 * C1332 + C50979 * C1339 + C10871 * C967 +
               C51058 * C976) *
                  C50802 +
              (C10872 * C1327 + C50979 * C1331 + C10871 * C961 +
               C51058 * C966) *
                  C118) *
                 C2434) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C2434) *
                C51057) *
               C292) *
              C490 +
          (((((C10871 * C497 + C51058 * C512 + C10872 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C10871 * C513 + C51058 * C527 + C10872 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C2434 +
             ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
                C51057 +
            (((C10871 * C1327 + C51058 * C1331 + C10872 * C4744 +
               C50979 * C4752) *
                  C118 +
              (C10871 * C1332 + C51058 * C1339 + C10872 * C4751 +
               C50979 * C4756) *
                  C50802) *
                 C2434 +
             ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
                C50953) *
               C292 -
           ((((C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
               C51058 * C1341) *
                  C50802 +
              (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
               C51058 * C1335) *
                  C118) *
                 C50768 +
             ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C2434) *
                C50953 +
            (((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C50768 +
             ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C2434) *
                C51057) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C2434 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C51057 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C51087 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C2434) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
                C51057) *
               C51088 +
           ((C10930 * C2434 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C51057 +
            ((C14395 * C118 + C14396 * C50802) * C2434 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C682) *
              C51045 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C2434 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C51057 +
            (((C11860 + C11861) * C118 + (C11862 + C11863) * C50802) * C2434 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C51088 -
           ((((C11863 + C11862) * C50802 + (C11861 + C11860) * C118) * C50768 +
             ((C10872 * C1332 + C50979 * C1339 + C10871 * C967 +
               C51058 * C976) *
                  C50802 +
              (C10872 * C1327 + C50979 * C1331 + C10871 * C961 +
               C51058 * C966) *
                  C118) *
                 C2434) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C2434) *
                C51057) *
               C51087 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C2434) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C2434) *
                C51057) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C2434 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C51057 +
           (((C10871 * C297 + C51058 * C307 + C10872 * C961 + C50979 * C966) *
                 C118 +
             (C10871 * C308 + C51058 * C327 + C10872 * C967 + C50979 * C976) *
                 C50802) *
                C2434 +
            ((C11111 + C11110) * C118 + (C11113 + C11112) * C50802) * C50768) *
               C50953) *
              C112 -
          (((C11469 * C50802 + C11468 * C118) * C50768 +
            ((C11112 + C11113) * C50802 + (C11110 + C11111) * C118) * C2434) *
               C50953 +
           (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
               C51057) *
              C113 +
          ((C10930 * C2434 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
               C51057 +
           (((C11119 + C11118) * C118 + (C11121 + C11120) * C50802) * C2434 +
            ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                 C50802 +
             (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                 C118) *
                C50768 +
            ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C2434) *
               C50953 +
           (((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C50768 +
            C10931 * C2434) *
               C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C2434 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C10871 * C1213 + C51058 * C1217 + C10872 * C3353 +
              C50979 * C3356) *
                 C296 +
             (C10871 * C1218 + C51058 * C1225 + C10872 * C3357 +
              C50979 * C3362) *
                 C291) *
                C2434 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C13971 * C295 -
             ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
             C13972 * C290 - C13973 * C296 - C13974 * C291) *
                C2434 +
            ((C11119 + C11118) * C295 -
             ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
             (C11121 + C11120) * C290 - (C11123 + C11122) * C296 -
             (C11125 + C11124) * C291) *
                C50768) *
               C51057 +
           ((C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
             (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
                C2434 +
            ((C11122 + C11123) * C295 - (C11469 * C289 + C11468 * C294) +
             (C11124 + C11125) * C290 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C296 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1446 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51089 -
             (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
             (C13987 + C13988) * C1448 + (C13989 + C13990) * C1443) *
                C2434 +
            ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
             C13967 * C1447 - C13968 * C51090 + C13969 * C1448 +
             C13970 * C1443) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
             (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
             (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
                C2434 +
            (C13971 * C1446 + C13972 * C51089 - C13973 * C1447 -
             C13974 * C51090 + (C13991 + C13992) * C1448 +
             (C13993 + C13994) * C1443) *
                C50768) *
               C50953) *
              C51036 +
          (((C13971 * C1447 -
             ((C10909 + C10908) * C51089 + (C10907 + C10906) * C1446) +
             C13972 * C51090 - C13973 * C1448 - C13974 * C1443) *
                C2434 +
            (C14395 * C1447 -
             ((C10913 + C10912) * C51089 + (C10911 + C10910) * C1446) +
             C14396 * C51090 - (C11123 + C11122) * C1448 -
             (C11125 + C11124) * C1443) *
                C50768) *
               C51057 +
           ((C13969 * C1447 - (C13968 * C51089 + C13967 * C1446) +
             C13970 * C51090 - (C13992 + C13991) * C1448 -
             (C13994 + C13993) * C1443) *
                C2434 +
            ((C11122 + C11123) * C1447 - (C11469 * C51089 + C11468 * C1446) +
             (C11124 + C11125) * C51090 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C1448 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C1443) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1446 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51089 -
             (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
             (C13987 + C13988) * C1448 + (C13989 + C13990) * C1443) *
                C2434 +
            ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
             C13967 * C1447 - C13968 * C51090 + C13969 * C1448 +
             C13970 * C1443) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
             (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
             (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
                C2434 +
            (C13971 * C1446 + C13972 * C51089 - C13973 * C1447 -
             C13974 * C51090 + (C13991 + C13992) * C1448 +
             (C13993 + C13994) * C1443) *
                C50768) *
               C50953) *
              C50784 * C51045 +
          ((((C14869 + C14870) * C1447 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51089 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1446) +
             (C14871 + C14872) * C51090 - (C16073 + C16074) * C1448 -
             (C16075 + C16076) * C1443) *
                C2434 +
            (C14857 * C1447 -
             ((C11307 + C11306) * C51089 + (C11305 + C11304) * C1446) +
             C14858 * C51090 - (C14874 + C14873) * C1448 -
             (C14876 + C14875) * C1443) *
                C50768) *
               C51057 +
           (((C16074 + C16073) * C1447 -
             ((C14872 + C14871) * C51089 + (C14870 + C14869) * C1446) +
             (C16076 + C16075) * C51090 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C1448 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C1443) *
                C2434 +
            ((C14873 + C14874) * C1447 - (C14863 * C51089 + C14864 * C1446) +
             (C14875 + C14876) * C51090 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C1448 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C1443) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1209 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1204 -
            (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
            (C13987 + C13988) * C1211 + (C13989 + C13990) * C1206 -
            (C15209 + C15210) * C1212 - (C15211 + C15212) * C1207) *
               C2434 +
           ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
            C13967 * C1210 - C13968 * C1205 + C13969 * C1211 + C13970 * C1206 -
            (C13992 + C13991) * C1212 - (C13994 + C13993) * C1207) *
               C50768) *
              C51057 +
          (((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
            (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
            (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
            (C10872 * C4337 + C50979 * C4339 + C10871 * C2597 +
             C51058 * C2600) *
                C1212 -
            (C10872 * C4340 + C50979 * C4343 + C10871 * C2601 +
             C51058 * C2606) *
                C1207) *
               C2434 +
           (C13971 * C1209 + C13972 * C1204 - C13973 * C1210 - C13974 * C1205 +
            (C13991 + C13992) * C1211 + (C13993 + C13994) * C1206 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C1212 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C2434 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C2434 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C13971 * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             C13972 * C50854) *
                C2434 +
            (C14395 * C1115 -
             ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
             C14396 * C50854) *
                C50768) *
               C51057 +
           ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
             C13970 * C50854) *
                C2434 +
            ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C12020 * C2434 +
            ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
             (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
                C50768) *
               C51057 +
           ((C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
             (C11125 + C11124) * C50854) *
                C2434 +
            ((C11481 + C11482) * C1114 + (C11483 + C11484) * C1109 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C1115 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C2434 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C2434 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C50784 * C489 +
          ((((C14869 + C14870) * C1115 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C1109 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1114) +
             (C14871 + C14872) * C50854) *
                C2434 +
            (C14857 * C1115 -
             ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
             C14858 * C50854) *
                C50768) *
               C51057 +
           (((C10871 * C1707 + C51058 * C1711 + C10872 * C2803 +
              C50979 * C2806) *
                 C1115 -
             ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
             (C10871 * C1712 + C51058 * C1719 + C10872 * C2807 +
              C50979 * C2812) *
                 C50854) *
                C2434 +
            ((C14873 + C14874) * C1115 - (C14863 * C1109 + C14864 * C1114) +
             (C14875 + C14876) * C50854) *
                C50768) *
               C50953) *
              C50784 * C490 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C1114 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C1109 -
             (C15415 + C15416) * C1115 - (C15417 + C15418) * C50854) *
                C2434 +
            ((C11312 + C11313) * C1114 + (C11314 + C11315) * C1109 -
             (C14198 + C14197) * C1115 - (C14200 + C14199) * C50854) *
                C50768) *
               C51057 +
           (((C15416 + C15415) * C1114 + (C15418 + C15417) * C1109 -
             (C10872 * C4742 + C50979 * C4748 + C10871 * C2803 +
              C51058 * C2806) *
                 C1115 -
             (C10872 * C4747 + C50979 * C4754 + C10871 * C2807 +
              C51058 * C2812) *
                 C50854) *
                C2434 +
            ((C14197 + C14198) * C1114 + (C14199 + C14200) * C1109 -
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C1115 -
             (C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C1114 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C1109 -
              (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                 C2434 +
             ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
              C13967 * C1115 - C13968 * C50854) *
                 C50768) *
                C51057 +
            (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
              (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                 C2434 +
             (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C13971 * C1115 -
              ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
              C13972 * C50854) *
                 C2434 +
             (C14395 * C1115 -
              ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
              C14396 * C50854) *
                 C50768) *
                C51057 +
            ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
              C13970 * C50854) *
                 C2434 +
             ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C14869 + C14870) * C1115 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C1109 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C1114) +
              (C14871 + C14872) * C50854) *
                 C2434 +
             (C14857 * C1115 -
              ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
              C14858 * C50854) *
                 C50768) *
                C51057 +
            (((C10871 * C1707 + C51058 * C1711 + C10872 * C2803 +
               C50979 * C2806) *
                  C1115 -
              ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
              (C10871 * C1712 + C51058 * C1719 + C10872 * C2807 +
               C50979 * C2812) *
                  C50854) *
                 C2434 +
             ((C14873 + C14874) * C1115 - (C14863 * C1109 + C14864 * C1114) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C11304 + C11305) * C1114 + (C11306 + C11307) * C1109 -
              C14864 * C1115 - C14863 * C50854) *
                 C2434 +
             ((C11308 + C11309) * C1114 + (C11310 + C11311) * C1109 -
              (C11865 + C11864) * C1115 - (C11867 + C11866) * C50854) *
                 C50768) *
                C51057 +
            ((C14857 * C1114 + C14858 * C1109 - (C14874 + C14873) * C1115 -
              (C14876 + C14875) * C50854) *
                 C2434 +
             ((C11864 + C11865) * C1114 + (C11866 + C11867) * C1109 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C1115 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C2434 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C2434 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C13971 * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             C13972 * C50854) *
                C2434 +
            (C14395 * C1115 -
             ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
             C14396 * C50854) *
                C50768) *
               C51057 +
           ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
             C13970 * C50854) *
                C2434 +
            ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C12020 * C2434 +
            ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
             (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
                C50768) *
               C51057 +
           ((C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
             (C11125 + C11124) * C50854) *
                C2434 +
            ((C11481 + C11482) * C1114 + (C11483 + C11484) * C1109 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C1115 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1209 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1204 -
            (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
            (C13987 + C13988) * C1211 + (C13989 + C13990) * C1206 -
            (C15209 + C15210) * C1212 - (C15211 + C15212) * C1207) *
               C2434 +
           ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
            C13967 * C1210 - C13968 * C1205 + C13969 * C1211 + C13970 * C1206 -
            (C13992 + C13991) * C1212 - (C13994 + C13993) * C1207) *
               C50768) *
              C51057 +
          (((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
            (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
            (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
            (C10872 * C4337 + C50979 * C4339 + C10871 * C2597 +
             C51058 * C2600) *
                C1212 -
            (C10872 * C4340 + C50979 * C4343 + C10871 * C2601 +
             C51058 * C2606) *
                C1207) *
               C2434 +
           (C13971 * C1209 + C13972 * C1204 - C13973 * C1210 - C13974 * C1205 +
            (C13991 + C13992) * C1211 + (C13993 + C13994) * C1206 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C1212 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C683 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C51044 -
              (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                 C2434 +
             ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
              C13967 * C684 - C13968 * C50854) *
                 C50768) *
                C51057 +
            (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
              (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                 C2434 +
             (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C13971 * C684 -
              ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
              C13972 * C50854) *
                 C2434 +
             (C14395 * C684 -
              ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
              C14396 * C50854) *
                 C50768) *
                C51057 +
            ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
              C13970 * C50854) *
                 C2434 +
             ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C1821 +
          (((((C14869 + C14870) * C684 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C51044 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C683) +
              (C14871 + C14872) * C50854) *
                 C2434 +
             (C14857 * C684 -
              ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
              C14858 * C50854) *
                 C50768) *
                C51057 +
            (((C16074 + C16073) * C684 -
              ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
              (C16076 + C16075) * C50854) *
                 C2434 +
             ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
              C14864 * C684 - C14863 * C50854) *
                 C2434 +
             ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
              (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                 C50768) *
                C51057 +
            ((C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
              (C14876 + C14875) * C50854) *
                 C2434 +
             ((C11864 + C11865) * C683 + (C11866 + C11867) * C51044 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C684 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C2434 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             C13967 * C684 - C13968 * C50854) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C2434 +
            (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C50784 * C51091 +
          ((((C14869 + C14870) * C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C14871 + C14872) * C50854) *
                C2434 +
            (C14857 * C684 -
             ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
             C14858 * C50854) *
                C50768) *
               C51057 +
           (((C16074 + C16073) * C684 -
             ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
             (C16076 + C16075) * C50854) *
                C2434 +
            ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
             (C14875 + C14876) * C50854) *
                C50768) *
               C50953) *
              C50784 * C51092 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C683 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C51044 -
             (C15415 + C15416) * C684 - (C15417 + C15418) * C50854) *
                C2434 +
            ((C11312 + C11313) * C683 + (C11314 + C11315) * C51044 -
             (C14198 + C14197) * C684 - (C14200 + C14199) * C50854) *
                C50768) *
               C51057 +
           (((C15416 + C15415) * C683 + (C15418 + C15417) * C51044 -
             (C10872 * C4742 + C50979 * C4748 + C10871 * C2803 +
              C51058 * C2806) *
                 C684 -
             (C10872 * C4747 + C50979 * C4754 + C10871 * C2807 +
              C51058 * C2812) *
                 C50854) *
                C2434 +
            ((C14197 + C14198) * C683 + (C14199 + C14200) * C51044 -
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C684 -
             (C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C2434 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C2434 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C14869 + C14870) * C295 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C289 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C294) +
             (C14871 + C14872) * C290 - (C16073 + C16074) * C296 -
             (C16075 + C16076) * C291) *
                C2434 +
            (C14857 * C295 -
             ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
             C14858 * C290 - (C14874 + C14873) * C296 -
             (C14876 + C14875) * C291) *
                C50768) *
               C51057 +
           (((C16074 + C16073) * C295 -
             ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
             (C16076 + C16075) * C290 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C296 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C291) *
                C2434 +
            ((C14873 + C14874) * C295 - (C14863 * C289 + C14864 * C294) +
             (C14875 + C14876) * C290 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C296 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C2434 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C51057 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C2434) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
                C51057) *
               C1112 +
           ((C10930 * C2434 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C51057 +
            ((C14395 * C118 + C14396 * C50802) * C2434 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C2434 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C51057 +
            ((C14857 * C118 + C14858 * C50802) * C2434 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C2434) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C2434) *
                C51057) *
               C1111 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C2434) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C2434) *
                C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C2434 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C51057 +
           (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
            (C13971 * C118 + C13972 * C50802) * C50768) *
               C50953) *
              C50784 * C1987 -
          (((C14863 * C50802 + C14864 * C118) * C50768 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C2434) *
               C50953 +
           (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C2434) *
               C51057) *
              C50784 * C1988 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C2434 +
            ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
               C51057 +
           (((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C2434 +
            ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
               C50953) *
              C50784 * C1989 -
          ((((C10872 * C6716 + C50979 * C6718 + C10871 * C4749 +
              C51058 * C4755) *
                 C50802 +
             (C10872 * C6712 + C50979 * C6715 + C10871 * C4743 +
              C51058 * C4750) *
                 C118) *
                C50768 +
            ((C10872 * C6714 + C50979 * C6717 + C10871 * C4751 +
              C51058 * C4756) *
                 C50802 +
             (C10872 * C6711 + C50979 * C6713 + C10871 * C4744 +
              C51058 * C4752) *
                 C118) *
                C2434) *
               C50953 +
           (((C10872 * C5735 + C50979 * C5739 + C10871 * C1999 +
              C51058 * C2005) *
                 C50802 +
             (C10872 * C5730 + C50979 * C5734 + C10871 * C1993 +
              C51058 * C2000) *
                 C118) *
                C50768 +
            ((C10872 * C5733 + C50979 * C5738 + C10871 * C2001 +
              C51058 * C2006) *
                 C50802 +
             (C10872 * C5729 + C50979 * C5732 + C10871 * C1994 +
              C51058 * C2002) *
                 C118) *
                C2434) *
               C51057) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C2434 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C51057 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C51036 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C2434) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
                C51057) *
               C50789) *
              C51091 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C2434 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C51057 +
            ((C14857 * C118 + C14858 * C50802) * C2434 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C50789 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C2434) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C2434) *
                C51057) *
               C51036) *
              C51092 +
          (((((C10871 * C497 + C51058 * C512 + C10872 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C10871 * C513 + C51058 * C527 + C10872 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C2434 +
             ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
                C51057 +
            (((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C2434 +
             ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
                C50953) *
               C51036 -
           ((((C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
               C51058 * C1341) *
                  C50802 +
              (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
               C51058 * C1335) *
                  C118) *
                 C50768 +
             ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C2434) *
                C50953 +
            (((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C50768 +
             ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C2434) *
                C51057) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C2434 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C51057 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C2434 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C2434) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C2434) *
                C51057) *
               C1112 +
           ((C10930 * C2434 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C51057 +
            ((C14395 * C118 + C14396 * C50802) * C2434 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C2434 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C51057 +
            ((C14857 * C118 + C14858 * C50802) * C2434 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C2434) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C2434) *
                C51057) *
               C1111 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C2434) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C2434) *
                C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C2434 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C51057 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C2434 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C14869 + C14870) * C295 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C289 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C294) +
             (C14871 + C14872) * C290 - (C16073 + C16074) * C296 -
             (C16075 + C16076) * C291) *
                C2434 +
            (C14857 * C295 -
             ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
             C14858 * C290 - (C14874 + C14873) * C296 -
             (C14876 + C14875) * C291) *
                C50768) *
               C51057 +
           (((C16074 + C16073) * C295 -
             ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
             (C16076 + C16075) * C290 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C296 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C291) *
                C2434 +
            ((C14873 + C14874) * C295 - (C14863 * C289 + C14864 * C294) +
             (C14875 + C14876) * C290 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C296 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C2434 +
            (C690 + C691 - C692 - C693) * C50768) *
               C2436 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C2434 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C2437 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C2434 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C2438) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C2434 +
            (C696 - (C695 + C694) + C697) * C50768) *
               C2436 +
           ((C2990 - (C2989 + C2988) + C2991) * C2434 +
            (C2996 - (C2997 + C2998) + C2999) * C50768) *
               C2437 +
           ((C2994 - (C2993 + C2992) + C2995) * C2434 +
            (C3000 - (C3001 + C3002) + C3003) * C50768) *
               C2438) *
              C51088 +
          ((C716 * C2434 + C717 * C50768) * C2436 +
           ((C2998 + C2997 - C2996 - C2999) * C2434 +
            (C376 * C683 + C377 * C51044 - C378 * C684 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3002 + C3001 - C3000 - C3003) * C2434 +
            (C378 * C683 + C379 * C51044 -
             (C117 * C1216 + C50915 * C1223) * C684 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 -
            (C117 * C297 + C50915 * C307) * C684 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
              C50904 * C51087 +
          ((C692 - (C691 + C690) + C693) * C107 +
           (C696 - (C695 + C694) + C697) * C108 +
           (C700 - (C699 + C698) + C701) * C109 +
           (C714 - (C704 + C705) + C715) * C110) *
              C50904 * C51088 +
          (C716 * C107 + C717 * C108 + (C705 + C704 - C714 - C715) * C109 +
           (C176 * C683 + C177 * C51044 - (C117 * C685 + C50915 * C686) * C684 -
            (C117 * C687 + C50915 * C688) * C50854) *
               C110) *
              C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C683 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51044 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C684 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C50854) *
               C2434 +
           ((C5384 + C5385 + C5386) * C683 + (C5387 + C5388 + C5389) * C51044 -
            (C5572 + C5573 + C5574) * C684 - (C5575 + C5576 + C5577) * C50854) *
               C50768) *
              C50904 * C51087 +
          (((C5574 + C5573 + C5572) * C684 -
            ((C5389 + C5388 + C5387) * C51044 +
             (C5386 + C5385 + C5384) * C683) +
            (C5577 + C5576 + C5575) * C50854) *
               C2434 +
           ((C5936 + C5937 + C5938) * C684 -
            ((C5390 + C5391 + C5392) * C51044 +
             (C5393 + C5394 + C5395) * C683) +
            (C5939 + C5940 + C5941) * C50854) *
               C50768) *
              C50904 * C51088 +
          (((C5395 + C5394 + C5393) * C683 + (C5392 + C5391 + C5390) * C51044 -
            (C5938 + C5937 + C5936) * C684 - (C5941 + C5940 + C5939) * C50854) *
               C2434 +
           ((C5396 + C5397 + C5398) * C683 + (C5399 + C5400 + C5401) * C51044 -
            (C5346 * C1330 + C5343 * C1337 + C5345 * C964 + C5342 * C972 +
             C5344 * C303 + C5341 * C319) *
                C684 -
            (C5346 * C1338 + C5343 * C1342 + C5345 * C973 + C5342 * C979 +
             C5344 * C320 + C5341 * C333) *
                C50854) *
               C50768) *
              C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C2434 +
             (C690 + C691 - C692 - C693) * C50768) *
                C2436 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C2434 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C2437 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C2434 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C2438) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C2434 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C2436 +
            ((C2990 - (C2989 + C2988) + C2991) * C2434 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C2437 +
            ((C2994 - (C2993 + C2992) + C2995) * C2434 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C2438) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C2434 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C2436 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C2434 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C2437 +
            (((C117 * C3353 + C50915 * C3356) * C684 -
              (C3387 * C51044 + C3386 * C683) +
              (C117 * C3357 + C50915 * C3362) * C50854) *
                 C2434 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C2438) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C2434 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C2436 +
            ((C3376 + C3375 - C3374 - C3377) * C2434 +
             (C1002 * C683 + C1003 * C51044 - C3156 * C684 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C3381 + C3380 - C3390 - C3391) * C2434 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 -
             (C117 * C297 + C50915 * C307) * C684 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
               C50904 * C292 +
           ((C692 - (C691 + C690) + C693) * C107 +
            (C696 - (C695 + C694) + C697) * C108 +
            (C700 - (C699 + C698) + C701) * C109 +
            (C714 - (C704 + C705) + C715) * C110) *
               C50904 * C50789) *
              C51045 +
          ((((C117 * C961 + C50915 * C966) * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C50904 * C292 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C828 * C683 + C829 * C51044 -
             (C117 * C965 + C50915 * C974) * C684 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C683 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C51044 -
             (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
              C5344 * C297 + C5341 * C307) *
                 C684 -
             (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
              C5344 * C308 + C5341 * C327) *
                 C50854) *
                C2434 +
            ((C5384 + C5385 + C5386) * C683 + (C5387 + C5388 + C5389) * C51044 -
             (C5572 + C5573 + C5574) * C684 -
             (C5575 + C5576 + C5577) * C50854) *
                C50768) *
               C50904 * C292 +
           (((C5574 + C5573 + C5572) * C684 -
             ((C5389 + C5388 + C5387) * C51044 +
              (C5386 + C5385 + C5384) * C683) +
             (C5577 + C5576 + C5575) * C50854) *
                C2434 +
            ((C5936 + C5937 + C5938) * C684 -
             ((C5390 + C5391 + C5392) * C51044 +
              (C5393 + C5394 + C5395) * C683) +
             (C5939 + C5940 + C5941) * C50854) *
                C50768) *
               C50904 * C50789) *
              C51045 +
          ((((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
              C5346 * C4744 + C5343 * C4752) *
                 C684 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C51044 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C683) +
             (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
              C5346 * C4751 + C5343 * C4756) *
                 C50854) *
                C2434 +
            ((C6316 + C6317 + C6318) * C684 -
             ((C5771 + C5770 + C5769) * C51044 +
              (C5768 + C5767 + C5766) * C683) +
             (C6319 + C6320 + C6321) * C50854) *
                C50768) *
               C50904 * C292 +
           (((C5766 + C5767 + C5768) * C683 + (C5769 + C5770 + C5771) * C51044 -
             (C6318 + C6317 + C6316) * C684 -
             (C6321 + C6320 + C6319) * C50854) *
                C2434 +
            ((C6100 + C6101 + C6102) * C683 + (C6103 + C6104 + C6105) * C51044 -
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C684 -
             (C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50854) *
                C50768) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50915 * C126) * C118 +
                (C117 * C127 + C50915 * C140) * C50802) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C50904 * C112 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C50904 * C113 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C50904 * C114 -
              (((C117 * C138 + C50915 * C146) * C50802 +
                (C117 * C125 + C50915 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C50904 * C115) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50915 * C126) * C294 +
                (C117 * C127 + C50915 * C140) * C289 -
                (C117 * C297 + C50915 * C307) * C295 -
                (C117 * C308 + C50915 * C327) * C290 +
                (C117 * C298 + C50915 * C309) * C296 +
                (C117 * C310 + C50915 * C328) * C291) *
                   C107 +
               (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
               (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
               (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
                  C50904 * C292 +
              ((C380 - (C339 + C338) + C381 - C382 - C383) * C107 +
               (C384 - (C349 + C348) + C385 - C386 - C387) * C108 +
               (C388 - (C359 + C358) + C389 - C390 - C391) * C109 +
               ((C117 * C305 + C50915 * C323) * C295 -
                (C174 * C289 + C175 * C294) +
                (C117 * C324 + C50915 * C335) * C290 -
                (C117 * C306 + C50915 * C325) * C296 -
                (C117 * C326 + C50915 * C336) * C291) *
                   C110) *
                  C50904 * C50789) *
             C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C292 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C50789) *
              C489 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            ((C117 * C495 + C50915 * C508) * C118 +
             (C117 * C509 + C50915 * C525) * C50802) *
                C110) *
               C50904 * C50789 -
           ((C574 + C573) * C110 + (C572 + C571) * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C292) *
              C490 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C107 +
            (C575 + C576) * C108 + (C577 + C578) * C109 +
            (C579 + C580) * C110) *
               C50904 * C292 -
           (((C117 * C520 + C50915 * C531) * C50802 +
             (C117 * C501 + C50915 * C521) * C118) *
                C110 +
            (C580 + C579) * C109 + (C578 + C577) * C108 +
            (C576 + C575) * C107) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           (((C117 * C297 + C50915 * C307) * C118 +
             (C117 * C308 + C50915 * C327) * C50802) *
                C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           (((C117 * C298 + C50915 * C309) * C118 +
             (C117 * C310 + C50915 * C328) * C50802) *
                C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
           ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
              C113 +
          ((C188 * C2434 + C189 * C50768) * C2436 +
           ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
           ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C2434) *
               C2438 +
           ((C711 * C50802 + C710 * C118) * C50768 + (C2449 + C2448) * C2434) *
               C2437 +
           (C190 * C50768 + C191 * C2434) * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             (C117 * C2597 + C50915 * C2600) * C296 +
             (C117 * C2601 + C50915 * C2606) * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C2434 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C2436 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C2434 +
            (C374 * C295 - (C373 * C289 + C372 * C294) + C375 * C290 -
             C2650 * C296 - C2651 * C291) *
                C50768) *
               C2437 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C2434 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C292 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C50789) *
              C489 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 +
             (C1002 * C118 + C1003 * C50802) * C50768) *
                C2437 +
            ((C2836 + C2837) * C2434 +
             ((C117 * C1709 + C50915 * C1715) * C118 +
              (C117 * C1716 + C50915 * C1721) * C50802) *
                 C50768) *
                C2438) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             ((C117 * C1712 + C50915 * C1719) * C50802 +
              (C117 * C1707 + C50915 * C1711) * C118) *
                 C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             ((C117 * C967 + C50915 * C976) * C50802 +
              (C117 * C961 + C50915 * C966) * C118) *
                 C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C2434 +
             (C575 + C576) * C50768) *
                C2436 +
            (((C117 * C1327 + C50915 * C1331) * C118 +
              (C117 * C1332 + C50915 * C1339) * C50802) *
                 C2434 +
             (C2838 + C2839) * C50768) *
                C2437 +
            (((C117 * C2803 + C50915 * C2806) * C118 +
              (C117 * C2807 + C50915 * C2812) * C50802) *
                 C2434 +
             (C2840 + C2841) * C50768) *
                C2438) *
               C292 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C2434) *
                C2438 +
            (((C117 * C1336 + C50915 * C1341) * C50802 +
              (C117 * C1329 + C50915 * C1335) * C118) *
                 C50768 +
             (C2839 + C2838) * C2434) *
                C2437 +
            ((C578 + C577) * C50768 + (C576 + C575) * C2434) * C2436) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C2434 +
           ((C5384 + C5385 + C5386) * C118 + (C5387 + C5388 + C5389) * C50802) *
               C50768) *
              C50904 * C112 -
          (((C5390 + C5391 + C5392) * C50802 + (C5393 + C5394 + C5395) * C118) *
               C50768 +
           ((C5389 + C5388 + C5387) * C50802 + (C5386 + C5385 + C5384) * C118) *
               C2434) *
              C50904 * C113 +
          (((C5395 + C5394 + C5393) * C118 + (C5392 + C5391 + C5390) * C50802) *
               C2434 +
           ((C5396 + C5397 + C5398) * C118 + (C5399 + C5400 + C5401) * C50802) *
               C50768) *
              C50904 * C114 -
          (((C5346 * C520 + C5343 * C531 + C5345 * C509 + C5342 * C525 +
             C5344 * C134 + C5341 * C144) *
                C50802 +
            (C5346 * C501 + C5343 * C521 + C5345 * C495 + C5342 * C508 +
             C5344 * C123 + C5341 * C135) *
                C118) *
               C50768 +
           ((C5401 + C5400 + C5399) * C50802 + (C5398 + C5397 + C5396) * C118) *
               C2434) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C295 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C290 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C296 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C291) *
               C2434 +
           ((C5384 + C5385 + C5386) * C294 + (C5387 + C5388 + C5389) * C289 -
            (C5572 + C5573 + C5574) * C295 - (C5575 + C5576 + C5577) * C290 +
            (C5578 + C5579 + C5580) * C296 + (C5581 + C5582 + C5583) * C291) *
               C50768) *
              C50904 * C292 +
          (((C5574 + C5573 + C5572) * C295 -
            ((C5389 + C5388 + C5387) * C289 + (C5386 + C5385 + C5384) * C294) +
            (C5577 + C5576 + C5575) * C290 - (C5580 + C5579 + C5578) * C296 -
            (C5583 + C5582 + C5581) * C291) *
               C2434 +
           ((C5344 * C301 + C5341 * C315 + C5345 * C963 + C5342 * C970 +
             C5346 * C1329 + C5343 * C1335) *
                C295 -
            ((C5390 + C5391 + C5392) * C289 + (C5393 + C5394 + C5395) * C294) +
            (C5344 * C316 + C5341 * C331 + C5345 * C971 + C5342 * C978 +
             C5346 * C1336 + C5343 * C1341) *
                C290 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C296 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C291) *
               C50768) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C2434 +
            ((C5384 + C5385 + C5386) * C118 +
             (C5387 + C5388 + C5389) * C50802) *
                C50768) *
               C50904 * C292 -
           (((C5390 + C5391 + C5392) * C50802 +
             (C5393 + C5394 + C5395) * C118) *
                C50768 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C2434) *
               C50904 * C50789) *
              C489 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C2434 +
            ((C5344 * C493 + C5341 * C504 + C5345 * C499 + C5342 * C516 +
              C5346 * C1992 + C5343 * C1998) *
                 C118 +
             (C5344 * C505 + C5341 * C523 + C5345 * C517 + C5342 * C529 +
              C5346 * C1997 + C5343 * C2004) *
                 C50802) *
                C50768) *
               C50904 * C50789 -
           (((C5771 + C5770 + C5769) * C50802 +
             (C5768 + C5767 + C5766) * C118) *
                C50768 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C2434) *
               C50904 * C292) *
              C490 +
          ((((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
              C5346 * C5729 + C5343 * C5732) *
                 C118 +
             (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
              C5346 * C5733 + C5343 * C5738) *
                 C50802) *
                C2434 +
            ((C5772 + C5773 + C5774) * C118 +
             (C5775 + C5776 + C5777) * C50802) *
                C50768) *
               C50904 * C292 -
           (((C5346 * C5736 + C5343 * C5740 + C5345 * C1997 + C5342 * C2004 +
              C5344 * C517 + C5341 * C529) *
                 C50802 +
             (C5346 * C5731 + C5343 * C5737 + C5345 * C1992 + C5342 * C1998 +
              C5344 * C499 + C5341 * C516) *
                 C118) *
                C50768 +
            ((C5777 + C5776 + C5775) * C50802 +
             (C5774 + C5773 + C5772) * C118) *
                C2434) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C51087 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C51088 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C682) *
              C51045 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C51088 -
           (((C2837 + C2836) * C50768 +
             ((C117 * C1712 + C50915 * C1719) * C50802 +
              (C117 * C1707 + C50915 * C1711) * C118) *
                 C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             ((C117 * C967 + C50915 * C976) * C50802 +
              (C117 * C961 + C50915 * C966) * C118) *
                 C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C51087 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C51087 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C51088 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50904 * C682) *
              C51045 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C51088 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C51087 -
           (((C117 * C818 + C50915 * C820) * C50802 +
             (C117 * C817 + C50915 * C819) * C118) *
                C110 +
            (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
               C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C2434 +
            ((C5384 + C5385 + C5386) * C118 +
             (C5387 + C5388 + C5389) * C50802) *
                C50768) *
               C50904 * C51087 -
           (((C5390 + C5391 + C5392) * C50802 +
             (C5393 + C5394 + C5395) * C118) *
                C50768 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C2434) *
               C50904 * C51088 +
           (((C5395 + C5394 + C5393) * C118 +
             (C5392 + C5391 + C5390) * C50802) *
                C2434 +
            ((C5396 + C5397 + C5398) * C118 +
             (C5399 + C5400 + C5401) * C50802) *
                C50768) *
               C50904 * C682) *
              C51045 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C2434 +
            ((C6100 + C6101 + C6102) * C118 +
             (C6103 + C6104 + C6105) * C50802) *
                C50768) *
               C50904 * C51088 -
           (((C5771 + C5770 + C5769) * C50802 +
             (C5768 + C5767 + C5766) * C118) *
                C50768 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C2434) *
               C50904 * C51087 -
           (((C5346 * C1995 + C5343 * C2003 + C5345 * C519 + C5342 * C530 +
              C5344 * C507 + C5341 * C524) *
                 C50802 +
             (C5346 * C1991 + C5343 * C1996 + C5345 * C500 + C5342 * C518 +
              C5344 * C494 + C5341 * C506) *
                 C118) *
                C50768 +
            ((C6105 + C6104 + C6103) * C50802 +
             (C6102 + C6101 + C6100) * C118) *
                C2434) *
               C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C107 +
           (C384 - (C349 + C348) + C385 - C386 - C387) * C108 +
           (C388 - (C359 + C358) + C389 - C390 - C391) * C109 +
           ((C117 * C305 + C50915 * C323) * C295 - (C174 * C289 + C175 * C294) +
            (C117 * C324 + C50915 * C335) * C290 -
            (C117 * C306 + C50915 * C325) * C296 -
            (C117 * C326 + C50915 * C336) * C291) *
               C110) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50904 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50904 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50904 * C114 -
          (((C117 * C138 + C50915 * C146) * C50802 +
            (C117 * C125 + C50915 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           (((C117 * C297 + C50915 * C307) * C118 +
             (C117 * C308 + C50915 * C327) * C50802) *
                C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           (((C117 * C298 + C50915 * C309) * C118 +
             (C117 * C310 + C50915 * C328) * C50802) *
                C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
           ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
              C113 +
          ((C188 * C2434 + C189 * C50768) * C2436 +
           ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
           ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C2434) *
               C2438 +
           ((C711 * C50802 + C710 * C118) * C50768 + (C2449 + C2448) * C2434) *
               C2437 +
           (C190 * C50768 + C191 * C2434) * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             (C117 * C2597 + C50915 * C2600) * C296 +
             (C117 * C2601 + C50915 * C2606) * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C2434 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C2436 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C2434 +
            (C374 * C295 - (C373 * C289 + C372 * C294) + C375 * C290 -
             C2650 * C296 - C2651 * C291) *
                C50768) *
               C2437 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C2434 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C2434 +
           ((C5384 + C5385 + C5386) * C118 + (C5387 + C5388 + C5389) * C50802) *
               C50768) *
              C50904 * C112 -
          (((C5390 + C5391 + C5392) * C50802 + (C5393 + C5394 + C5395) * C118) *
               C50768 +
           ((C5389 + C5388 + C5387) * C50802 + (C5386 + C5385 + C5384) * C118) *
               C2434) *
              C50904 * C113 +
          (((C5395 + C5394 + C5393) * C118 + (C5392 + C5391 + C5390) * C50802) *
               C2434 +
           ((C5396 + C5397 + C5398) * C118 + (C5399 + C5400 + C5401) * C50802) *
               C50768) *
              C50904 * C114 -
          (((C5346 * C520 + C5343 * C531 + C5345 * C509 + C5342 * C525 +
             C5344 * C134 + C5341 * C144) *
                C50802 +
            (C5346 * C501 + C5343 * C521 + C5345 * C495 + C5342 * C508 +
             C5344 * C123 + C5341 * C135) *
                C118) *
               C50768 +
           ((C5401 + C5400 + C5399) * C50802 + (C5398 + C5397 + C5396) * C118) *
               C2434) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C295 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C290 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C296 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C291) *
               C2434 +
           ((C5384 + C5385 + C5386) * C294 + (C5387 + C5388 + C5389) * C289 -
            (C5572 + C5573 + C5574) * C295 - (C5575 + C5576 + C5577) * C290 +
            (C5578 + C5579 + C5580) * C296 + (C5581 + C5582 + C5583) * C291) *
               C50768) *
              C50904 * C292 +
          (((C5574 + C5573 + C5572) * C295 -
            ((C5389 + C5388 + C5387) * C289 + (C5386 + C5385 + C5384) * C294) +
            (C5577 + C5576 + C5575) * C290 - (C5580 + C5579 + C5578) * C296 -
            (C5583 + C5582 + C5581) * C291) *
               C2434 +
           ((C5344 * C301 + C5341 * C315 + C5345 * C963 + C5342 * C970 +
             C5346 * C1329 + C5343 * C1335) *
                C295 -
            ((C5390 + C5391 + C5392) * C289 + (C5393 + C5394 + C5395) * C294) +
            (C5344 * C316 + C5341 * C331 + C5345 * C971 + C5342 * C978 +
             C5346 * C1336 + C5343 * C1341) *
                C290 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C296 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C291) *
               C50768) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C2434 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
               C2436 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C2434 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
               C2437 +
           ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
             C3664 * C1448 + C3665 * C1443) *
                C2434 +
            (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
               C2438) *
              C51036 +
          (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C2434 +
            (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C50768) *
               C2436 +
           ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C2434 +
            (C374 * C1447 - (C373 * C51089 + C372 * C1446) + C375 * C51090 -
             C2650 * C1448 - C2651 * C1443) *
                C50768) *
               C2437 +
           ((C3986 - (C3985 + C3984) + C3987 - C3988 - C3989) * C2434 +
            (C2650 * C1447 - (C375 * C51089 + C374 * C1446) + C2651 * C51090 -
             (C117 * C2599 + C50915 * C2604) * C1448 -
             (C117 * C2605 + C50915 * C2608) * C1443) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 -
            (C117 * C297 + C50915 * C307) * C1447 -
            (C117 * C308 + C50915 * C327) * C51090 +
            (C117 * C298 + C50915 * C309) * C1448 +
            (C117 * C310 + C50915 * C328) * C1443) *
               C107 +
           (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C108 +
           (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C109 +
           (C1462 + C1463 - C1464 - C1465 + C1466 + C1467) * C110) *
              C50904 * C51036 +
          ((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C107 +
           (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C108 +
           (C1464 - (C1463 + C1462) + C1465 - C1466 - C1467) * C109 +
           (C710 * C1447 - (C174 * C51089 + C175 * C1446) + C711 * C51090 -
            (C117 * C306 + C50915 * C325) * C1448 -
            (C117 * C326 + C50915 * C336) * C1443) *
               C110) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1446 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51089 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C1447 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C51090 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C1448 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C1443) *
               C2434 +
           ((C5384 + C5385 + C5386) * C1446 + (C5387 + C5388 + C5389) * C51089 -
            (C5572 + C5573 + C5574) * C1447 - (C5575 + C5576 + C5577) * C51090 +
            (C5578 + C5579 + C5580) * C1448 + (C5581 + C5582 + C5583) * C1443) *
               C50768) *
              C50904 * C51036 +
          (((C5574 + C5573 + C5572) * C1447 -
            ((C5389 + C5388 + C5387) * C51089 +
             (C5386 + C5385 + C5384) * C1446) +
            (C5577 + C5576 + C5575) * C51090 - (C5580 + C5579 + C5578) * C1448 -
            (C5583 + C5582 + C5581) * C1443) *
               C2434 +
           ((C5936 + C5937 + C5938) * C1447 -
            ((C5390 + C5391 + C5392) * C51089 +
             (C5393 + C5394 + C5395) * C1446) +
            (C5939 + C5940 + C5941) * C51090 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C1448 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C1443) *
               C50768) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C2434 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
               C2436 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C2434 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
               C2437 +
           ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
             C3664 * C1448 + C3665 * C1443) *
                C2434 +
            (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
               C2438) *
              C50784 * C51045 +
          (((C3384 * C1447 -
             ((C117 * C510 + C50915 * C526) * C51089 +
              (C117 * C496 + C50915 * C511) * C1446) +
             C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                C2434 +
            (C1000 * C1447 - (C558 * C51089 + C557 * C1446) + C1001 * C51090 -
             C2830 * C1448 - C2831 * C1443) *
                C50768) *
               C2436 +
           ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) + C3387 * C51090 -
             C4350 * C1448 - C4351 * C1443) *
                C2434 +
            (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) + C2831 * C51090 -
             C3388 * C1448 - C3389 * C1443) *
                C50768) *
               C2437 +
           ((C4350 * C1447 - (C3387 * C51089 + C3386 * C1446) + C4351 * C51090 -
             (C117 * C4337 + C50915 * C4339) * C1448 -
             (C117 * C4340 + C50915 * C4343) * C1443) *
                C2434 +
            (C3388 * C1447 - (C2831 * C51089 + C2830 * C1446) + C3389 * C51090 -
             (C117 * C4338 + C50915 * C4341) * C1448 -
             (C117 * C4342 + C50915 * C4344) * C1443) *
                C50768) *
               C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 -
            (C117 * C297 + C50915 * C307) * C1447 -
            (C117 * C308 + C50915 * C327) * C51090 +
            (C117 * C298 + C50915 * C309) * C1448 +
            (C117 * C310 + C50915 * C328) * C1443) *
               C107 +
           (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C108 +
           (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C109 +
           (C1462 + C1463 - C1464 - C1465 + C1466 + C1467) * C110) *
              C50904 * C50784 * C51045 +
          (((C117 * C961 + C50915 * C966) * C1447 -
            ((C117 * C510 + C50915 * C526) * C51089 +
             (C117 * C496 + C50915 * C511) * C1446) +
            (C117 * C967 + C50915 * C976) * C51090 -
            (C117 * C1707 + C50915 * C1711) * C1448 -
            (C117 * C1712 + C50915 * C1719) * C1443) *
               C107 +
           (C1000 * C1447 - (C558 * C51089 + C557 * C1446) + C1001 * C51090 -
            (C117 * C1708 + C50915 * C1713) * C1448 -
            (C117 * C1714 + C50915 * C1720) * C1443) *
               C108 +
           (C1002 * C1447 - (C560 * C51089 + C559 * C1446) + C1003 * C51090 -
            (C117 * C1709 + C50915 * C1715) * C1448 -
            (C117 * C1716 + C50915 * C1721) * C1443) *
               C109 +
           (C1004 * C1447 - (C562 * C51089 + C561 * C1446) + C1005 * C51090 -
            (C117 * C1710 + C50915 * C1717) * C1448 -
            (C117 * C1718 + C50915 * C1722) * C1443) *
               C110) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1446 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51089 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C1447 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C51090 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C1448 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C1443) *
               C2434 +
           ((C5384 + C5385 + C5386) * C1446 + (C5387 + C5388 + C5389) * C51089 -
            (C5572 + C5573 + C5574) * C1447 - (C5575 + C5576 + C5577) * C51090 +
            (C5578 + C5579 + C5580) * C1448 + (C5581 + C5582 + C5583) * C1443) *
               C50768) *
              C50904 * C50784 * C51045 +
          (((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
             C5346 * C4744 + C5343 * C4752) *
                C1447 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C51089 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C1446) +
            (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
             C5346 * C4751 + C5343 * C4756) *
                C51090 -
            (C5346 * C4742 + C5343 * C4748 + C5345 * C2803 + C5342 * C2806 +
             C5344 * C1707 + C5341 * C1711) *
                C1448 -
            (C5346 * C4747 + C5343 * C4754 + C5345 * C2807 + C5342 * C2812 +
             C5344 * C1712 + C5341 * C1719) *
                C1443) *
               C2434 +
           ((C6316 + C6317 + C6318) * C1447 -
            ((C5771 + C5770 + C5769) * C51089 +
             (C5768 + C5767 + C5766) * C1446) +
            (C6319 + C6320 + C6321) * C51090 -
            (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
             C5344 * C1708 + C5341 * C1713) *
                C1448 -
            (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
             C5344 * C1714 + C5341 * C1720) *
                C1443) *
               C50768) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50915 * C126) * C1114 +
                (C117 * C127 + C50915 * C140) * C1109 -
                (C117 * C297 + C50915 * C307) * C1115 -
                (C117 * C308 + C50915 * C327) * C50854) *
                   C107 +
               (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
               C1138 * C110) *
                  C50904 * C1111 +
              ((C1119 - (C1118 + C1117) + C1120) * C107 +
               (C1123 - (C1122 + C1121) + C1124) * C108 +
               (C1127 - (C1126 + C1125) + C1128) * C109 +
               (C1129 - (C1130 + C1131) + C1132) * C110) *
                  C50904 * C1112 +
              (C1137 * C107 + C1138 * C108 +
               (C1131 + C1130 - C1129 - C1132) * C109 +
               (C176 * C1114 + C177 * C1109 -
                (C117 * C685 + C50915 * C686) * C1115 -
                (C117 * C687 + C50915 * C688) * C50854) *
                   C110) *
                  C50904 * C1113) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C50915 * C126) * C1209 +
               (C117 * C127 + C50915 * C140) * C1204 -
               (C117 * C297 + C50915 * C307) * C1210 -
               (C117 * C308 + C50915 * C327) * C1205 +
               (C117 * C298 + C50915 * C309) * C1211 +
               (C117 * C310 + C50915 * C328) * C1206 -
               (C117 * C1213 + C50915 * C1217) * C1212 -
               (C117 * C1218 + C50915 * C1225) * C1207) *
                  C107 +
              (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
               C370 * C1211 + C371 * C1206 -
               (C117 * C1214 + C50915 * C1219) * C1212 -
               (C117 * C1220 + C50915 * C1226) * C1207) *
                  C108 +
              (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
               C374 * C1211 + C375 * C1206 -
               (C117 * C1215 + C50915 * C1221) * C1212 -
               (C117 * C1222 + C50915 * C1227) * C1207) *
                  C109 +
              (C172 * C1209 + C173 * C1204 - C376 * C1210 - C377 * C1205 +
               C378 * C1211 + C379 * C1206 -
               (C117 * C1216 + C50915 * C1223) * C1212 -
               (C117 * C1224 + C50915 * C1228) * C1207) *
                  C110) *
             C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 -
            (C117 * C297 + C50915 * C307) * C1115 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
           C1138 * C110) *
              C50904 * C50784 * C489 +
          (((C117 * C961 + C50915 * C966) * C1115 -
            ((C117 * C510 + C50915 * C526) * C1109 +
             (C117 * C496 + C50915 * C511) * C1114) +
            (C117 * C967 + C50915 * C976) * C50854) *
               C107 +
           (C1000 * C1115 - (C558 * C1109 + C557 * C1114) + C1001 * C50854) *
               C108 +
           (C1002 * C1115 - (C560 * C1109 + C559 * C1114) + C1003 * C50854) *
               C109 +
           (C1004 * C1115 - (C562 * C1109 + C561 * C1114) + C1005 * C50854) *
               C110) *
              C50904 * C50784 * C490 +
          (((C117 * C497 + C50915 * C512) * C1114 +
            (C117 * C513 + C50915 * C527) * C1109 -
            (C117 * C1327 + C50915 * C1331) * C1115 -
            (C117 * C1332 + C50915 * C1339) * C50854) *
               C107 +
           (C563 * C1114 + C564 * C1109 -
            (C117 * C1328 + C50915 * C1333) * C1115 -
            (C117 * C1334 + C50915 * C1340) * C50854) *
               C108 +
           (C565 * C1114 + C566 * C1109 -
            (C117 * C1329 + C50915 * C1335) * C1115 -
            (C117 * C1336 + C50915 * C1341) * C50854) *
               C109 +
           (C567 * C1114 + C568 * C1109 -
            (C117 * C1330 + C50915 * C1337) * C1115 -
            (C117 * C1338 + C50915 * C1342) * C50854) *
               C110) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C2434 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C2436 +
           ((C3540 - (C3539 + C3538) + C3541) * C2434 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C2437 +
           ((C3544 - (C3543 + C3542) + C3545) * C2434 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C2438) *
              C1112 +
          ((C1137 * C2434 + C1138 * C50768) * C2436 +
           ((C3548 + C3547 - C3546 - C3549) * C2434 +
            (C376 * C1114 + C377 * C1109 - C378 * C1115 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3552 + C3551 - C3550 - C3553) * C2434 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C2434 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C2436 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C2434 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C2437 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 -
            (C117 * C3651 + C50915 * C3653) * C1212 -
            (C117 * C3654 + C50915 * C3657) * C1207) *
               C2434 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C2434 +
            (C1598 - (C1599 + C1600) + C1601) * C50768) *
               C2436 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C2434 +
            (C2830 * C1115 - (C1001 * C1109 + C1000 * C1114) + C2831 * C50854) *
                C50768) *
               C2437 +
           (((C117 * C3353 + C50915 * C3356) * C1115 -
             (C3387 * C1109 + C3386 * C1114) +
             (C117 * C3357 + C50915 * C3362) * C50854) *
                C2434 +
            (C3388 * C1115 - (C2831 * C1109 + C2830 * C1114) + C3389 * C50854) *
                C50768) *
               C2438) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C2434 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C50768) *
               C2436 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C2434 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C50768) *
               C2437 +
           ((C3830 * C1114 + C3831 * C1109 -
             (C117 * C3811 + C50915 * C3813) * C1115 -
             (C117 * C3814 + C50915 * C3817) * C50854) *
                C2434 +
            (C2834 * C1114 + C2835 * C1109 -
             (C117 * C3812 + C50915 * C3815) * C1115 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C2438) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C1115 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C50854) *
               C2434 +
           ((C5384 + C5385 + C5386) * C1114 + (C5387 + C5388 + C5389) * C1109 -
            (C5572 + C5573 + C5574) * C1115 -
            (C5575 + C5576 + C5577) * C50854) *
               C50768) *
              C50904 * C1111 +
          (((C5574 + C5573 + C5572) * C1115 -
            ((C5389 + C5388 + C5387) * C1109 +
             (C5386 + C5385 + C5384) * C1114) +
            (C5577 + C5576 + C5575) * C50854) *
               C2434 +
           ((C5936 + C5937 + C5938) * C1115 -
            ((C5390 + C5391 + C5392) * C1109 +
             (C5393 + C5394 + C5395) * C1114) +
            (C5939 + C5940 + C5941) * C50854) *
               C50768) *
              C50904 * C1112 +
          (((C5395 + C5394 + C5393) * C1114 + (C5392 + C5391 + C5390) * C1109 -
            (C5938 + C5937 + C5936) * C1115 -
            (C5941 + C5940 + C5939) * C50854) *
               C2434 +
           ((C5396 + C5397 + C5398) * C1114 + (C5399 + C5400 + C5401) * C1109 -
            (C5346 * C1330 + C5343 * C1337 + C5345 * C964 + C5342 * C972 +
             C5344 * C303 + C5341 * C319) *
                C1115 -
            (C5346 * C1338 + C5343 * C1342 + C5345 * C973 + C5342 * C979 +
             C5344 * C320 + C5341 * C333) *
                C50854) *
               C50768) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
            C5346 * C497 + C5343 * C512) *
               C1209 +
           (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
            C5346 * C513 + C5343 * C527) *
               C1204 -
           (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
            C5344 * C297 + C5341 * C307) *
               C1210 -
           (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
            C5344 * C308 + C5341 * C327) *
               C1205 +
           (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
            C5346 * C2803 + C5343 * C2806) *
               C1211 +
           (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
            C5346 * C2807 + C5343 * C2812) *
               C1206 -
           (C5346 * C3811 + C5343 * C3813 + C5345 * C3353 + C5342 * C3356 +
            C5344 * C1213 + C5341 * C1217) *
               C1212 -
           (C5346 * C3814 + C5343 * C3817 + C5345 * C3357 + C5342 * C3362 +
            C5344 * C1218 + C5341 * C1225) *
               C1207) *
              C2434 +
          ((C5384 + C5385 + C5386) * C1209 + (C5387 + C5388 + C5389) * C1204 -
           (C5572 + C5573 + C5574) * C1210 - (C5575 + C5576 + C5577) * C1205 +
           (C5578 + C5579 + C5580) * C1211 + (C5581 + C5582 + C5583) * C1206 -
           (C5346 * C3812 + C5343 * C3815 + C5345 * C3354 + C5342 * C3358 +
            C5344 * C1214 + C5341 * C1219) *
               C1212 -
           (C5346 * C3816 + C5343 * C3818 + C5345 * C3359 + C5342 * C3363 +
            C5344 * C1220 + C5341 * C1226) *
               C1207) *
              C50768) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C1115 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C50854) *
               C2434 +
           ((C5384 + C5385 + C5386) * C1114 + (C5387 + C5388 + C5389) * C1109 -
            (C5572 + C5573 + C5574) * C1115 -
            (C5575 + C5576 + C5577) * C50854) *
               C50768) *
              C50904 * C50784 * C489 +
          (((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
             C5346 * C4744 + C5343 * C4752) *
                C1115 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C1109 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C1114) +
            (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
             C5346 * C4751 + C5343 * C4756) *
                C50854) *
               C2434 +
           ((C6316 + C6317 + C6318) * C1115 -
            ((C5771 + C5770 + C5769) * C1109 +
             (C5768 + C5767 + C5766) * C1114) +
            (C6319 + C6320 + C6321) * C50854) *
               C50768) *
              C50904 * C50784 * C490 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C1114 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C1109 -
            (C5346 * C6711 + C5343 * C6713 + C5345 * C4744 + C5342 * C4752 +
             C5344 * C1327 + C5341 * C1331) *
                C1115 -
            (C5346 * C6714 + C5343 * C6717 + C5345 * C4751 + C5342 * C4756 +
             C5344 * C1332 + C5341 * C1339) *
                C50854) *
               C2434 +
           ((C5772 + C5773 + C5774) * C1114 + (C5775 + C5776 + C5777) * C1109 -
            (C5346 * C6712 + C5343 * C6715 + C5345 * C4743 + C5342 * C4750 +
             C5344 * C1328 + C5341 * C1333) *
                C1115 -
            (C5346 * C6716 + C5343 * C6718 + C5345 * C4749 + C5342 * C4755 +
             C5344 * C1334 + C5341 * C1340) *
                C50854) *
               C50768) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C2434 +
             (C1117 + C1118 - C1119 - C1120) * C50768) *
                C2436 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C2434 +
             (C3538 + C3539 - C3540 - C3541) * C50768) *
                C2437 +
            ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                 C2434 +
             (C3542 + C3543 - C3544 - C3545) * C50768) *
                C2438) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C2434 +
             (C1123 - (C1122 + C1121) + C1124) * C50768) *
                C2436 +
            ((C3540 - (C3539 + C3538) + C3541) * C2434 +
             (C3546 - (C3547 + C3548) + C3549) * C50768) *
                C2437 +
            ((C3544 - (C3543 + C3542) + C3545) * C2434 +
             (C3550 - (C3551 + C3552) + C3553) * C50768) *
                C2438) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C2434 +
             (C1598 - (C1599 + C1600) + C1601) * C50768) *
                C2436 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C2434 +
             (C4184 - (C4185 + C4186) + C4187) * C50768) *
                C2437 +
            (((C117 * C3353 + C50915 * C3356) * C1115 -
              (C3387 * C1109 + C3386 * C1114) +
              (C117 * C3357 + C50915 * C3362) * C50854) *
                 C2434 +
             (C4188 - (C4189 + C4190) + C4191) * C50768) *
                C2438) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C2434 +
             (C1604 + C1603 - C1602 - C1605) * C50768) *
                C2436 +
            ((C4186 + C4185 - C4184 - C4187) * C2434 +
             (C1002 * C1114 + C1003 * C1109 - C3156 * C1115 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C4190 + C4189 - C4188 - C4191) * C2434 +
             (C3156 * C1114 + C3157 * C1109 -
              (C117 * C3355 + C50915 * C3360) * C1115 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 -
             (C117 * C297 + C50915 * C307) * C1115 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
            C1138 * C110) *
               C50904 * C51036 +
           ((C1119 - (C1118 + C1117) + C1120) * C107 +
            (C1123 - (C1122 + C1121) + C1124) * C108 +
            (C1127 - (C1126 + C1125) + C1128) * C109 +
            (C1129 - (C1130 + C1131) + C1132) * C110) *
               C50904 * C50789) *
              C51045 +
          ((((C117 * C961 + C50915 * C966) * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1598 - (C1599 + C1600) + C1601) * C108 +
            (C1602 - (C1603 + C1604) + C1605) * C109 +
            (C1606 - (C1607 + C1608) + C1609) * C110) *
               C50904 * C51036 +
           ((C1600 + C1599 - C1598 - C1601) * C107 +
            (C1604 + C1603 - C1602 - C1605) * C108 +
            (C1608 + C1607 - C1606 - C1609) * C109 +
            (C828 * C1114 + C829 * C1109 -
             (C117 * C965 + C50915 * C974) * C1115 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C1114 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C1109 -
             (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
              C5344 * C297 + C5341 * C307) *
                 C1115 -
             (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
              C5344 * C308 + C5341 * C327) *
                 C50854) *
                C2434 +
            ((C5384 + C5385 + C5386) * C1114 + (C5387 + C5388 + C5389) * C1109 -
             (C5572 + C5573 + C5574) * C1115 -
             (C5575 + C5576 + C5577) * C50854) *
                C50768) *
               C50904 * C51036 +
           (((C5574 + C5573 + C5572) * C1115 -
             ((C5389 + C5388 + C5387) * C1109 +
              (C5386 + C5385 + C5384) * C1114) +
             (C5577 + C5576 + C5575) * C50854) *
                C2434 +
            ((C5936 + C5937 + C5938) * C1115 -
             ((C5390 + C5391 + C5392) * C1109 +
              (C5393 + C5394 + C5395) * C1114) +
             (C5939 + C5940 + C5941) * C50854) *
                C50768) *
               C50904 * C50789) *
              C51045 +
          ((((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
              C5346 * C4744 + C5343 * C4752) *
                 C1115 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C1109 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C1114) +
             (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
              C5346 * C4751 + C5343 * C4756) *
                 C50854) *
                C2434 +
            ((C6316 + C6317 + C6318) * C1115 -
             ((C5771 + C5770 + C5769) * C1109 +
              (C5768 + C5767 + C5766) * C1114) +
             (C6319 + C6320 + C6321) * C50854) *
                C50768) *
               C50904 * C51036 +
           (((C5766 + C5767 + C5768) * C1114 + (C5769 + C5770 + C5771) * C1109 -
             (C6318 + C6317 + C6316) * C1115 -
             (C6321 + C6320 + C6319) * C50854) *
                C2434 +
            ((C6100 + C6101 + C6102) * C1114 + (C6103 + C6104 + C6105) * C1109 -
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C1115 -
             (C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50854) *
                C50768) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 -
           (C117 * C297 + C50915 * C307) * C1210 -
           (C117 * C308 + C50915 * C327) * C1205 +
           (C117 * C298 + C50915 * C309) * C1211 +
           (C117 * C310 + C50915 * C328) * C1206 -
           (C117 * C1213 + C50915 * C1217) * C1212 -
           (C117 * C1218 + C50915 * C1225) * C1207) *
              C107 +
          (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
           C370 * C1211 + C371 * C1206 -
           (C117 * C1214 + C50915 * C1219) * C1212 -
           (C117 * C1220 + C50915 * C1226) * C1207) *
              C108 +
          (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
           C374 * C1211 + C375 * C1206 -
           (C117 * C1215 + C50915 * C1221) * C1212 -
           (C117 * C1222 + C50915 * C1227) * C1207) *
              C109 +
          (C172 * C1209 + C173 * C1204 - C376 * C1210 - C377 * C1205 +
           C378 * C1211 + C379 * C1206 -
           (C117 * C1216 + C50915 * C1223) * C1212 -
           (C117 * C1224 + C50915 * C1228) * C1207) *
              C110) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 -
            (C117 * C297 + C50915 * C307) * C1115 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
           C1138 * C110) *
              C50904 * C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C107 +
           (C1123 - (C1122 + C1121) + C1124) * C108 +
           (C1127 - (C1126 + C1125) + C1128) * C109 +
           (C1129 - (C1130 + C1131) + C1132) * C110) *
              C50904 * C1112 +
          (C1137 * C107 + C1138 * C108 +
           (C1131 + C1130 - C1129 - C1132) * C109 +
           (C176 * C1114 + C177 * C1109 -
            (C117 * C685 + C50915 * C686) * C1115 -
            (C117 * C687 + C50915 * C688) * C50854) *
               C110) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C2434 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C2436 +
           ((C3540 - (C3539 + C3538) + C3541) * C2434 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C2437 +
           ((C3544 - (C3543 + C3542) + C3545) * C2434 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C2438) *
              C1112 +
          ((C1137 * C2434 + C1138 * C50768) * C2436 +
           ((C3548 + C3547 - C3546 - C3549) * C2434 +
            (C376 * C1114 + C377 * C1109 - C378 * C1115 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3552 + C3551 - C3550 - C3553) * C2434 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C2434 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C2436 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C2434 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C2437 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 -
            (C117 * C3651 + C50915 * C3653) * C1212 -
            (C117 * C3654 + C50915 * C3657) * C1207) *
               C2434 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C1115 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C50854) *
               C2434 +
           ((C5384 + C5385 + C5386) * C1114 + (C5387 + C5388 + C5389) * C1109 -
            (C5572 + C5573 + C5574) * C1115 -
            (C5575 + C5576 + C5577) * C50854) *
               C50768) *
              C50904 * C1111 +
          (((C5574 + C5573 + C5572) * C1115 -
            ((C5389 + C5388 + C5387) * C1109 +
             (C5386 + C5385 + C5384) * C1114) +
            (C5577 + C5576 + C5575) * C50854) *
               C2434 +
           ((C5936 + C5937 + C5938) * C1115 -
            ((C5390 + C5391 + C5392) * C1109 +
             (C5393 + C5394 + C5395) * C1114) +
            (C5939 + C5940 + C5941) * C50854) *
               C50768) *
              C50904 * C1112 +
          (((C5395 + C5394 + C5393) * C1114 + (C5392 + C5391 + C5390) * C1109 -
            (C5938 + C5937 + C5936) * C1115 -
            (C5941 + C5940 + C5939) * C50854) *
               C2434 +
           ((C5396 + C5397 + C5398) * C1114 + (C5399 + C5400 + C5401) * C1109 -
            (C5346 * C1330 + C5343 * C1337 + C5345 * C964 + C5342 * C972 +
             C5344 * C303 + C5341 * C319) *
                C1115 -
            (C5346 * C1338 + C5343 * C1342 + C5345 * C973 + C5342 * C979 +
             C5344 * C320 + C5341 * C333) *
                C50854) *
               C50768) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
            C5346 * C497 + C5343 * C512) *
               C1209 +
           (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
            C5346 * C513 + C5343 * C527) *
               C1204 -
           (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
            C5344 * C297 + C5341 * C307) *
               C1210 -
           (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
            C5344 * C308 + C5341 * C327) *
               C1205 +
           (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
            C5346 * C2803 + C5343 * C2806) *
               C1211 +
           (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
            C5346 * C2807 + C5343 * C2812) *
               C1206 -
           (C5346 * C3811 + C5343 * C3813 + C5345 * C3353 + C5342 * C3356 +
            C5344 * C1213 + C5341 * C1217) *
               C1212 -
           (C5346 * C3814 + C5343 * C3817 + C5345 * C3357 + C5342 * C3362 +
            C5344 * C1218 + C5341 * C1225) *
               C1207) *
              C2434 +
          ((C5384 + C5385 + C5386) * C1209 + (C5387 + C5388 + C5389) * C1204 -
           (C5572 + C5573 + C5574) * C1210 - (C5575 + C5576 + C5577) * C1205 +
           (C5578 + C5579 + C5580) * C1211 + (C5581 + C5582 + C5583) * C1206 -
           (C5346 * C3812 + C5343 * C3815 + C5345 * C3354 + C5342 * C3358 +
            C5344 * C1214 + C5341 * C1219) *
               C1212 -
           (C5346 * C3816 + C5343 * C3818 + C5345 * C3359 + C5342 * C3363 +
            C5344 * C1220 + C5341 * C1226) *
               C1207) *
              C50768) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C2434 +
             (C690 + C691 - C692 - C693) * C50768) *
                C2436 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C2434 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C2437 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C2434 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C2438) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C2434 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C2436 +
            ((C2990 - (C2989 + C2988) + C2991) * C2434 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C2437 +
            ((C2994 - (C2993 + C2992) + C2995) * C2434 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C2438) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C2434 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C2436 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C2434 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C2437 +
            ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                 C2434 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C2438) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C2434 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C2436 +
            ((C3376 + C3375 - C3374 - C3377) * C2434 +
             (C1002 * C683 + C1003 * C51044 - C3156 * C684 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C3381 + C3380 - C3390 - C3391) * C2434 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 -
             (C117 * C297 + C50915 * C307) * C684 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
               C50904 * C51036 +
           ((C692 - (C691 + C690) + C693) * C107 +
            (C696 - (C695 + C694) + C697) * C108 +
            (C700 - (C699 + C698) + C701) * C109 +
            (C714 - (C704 + C705) + C715) * C110) *
               C50904 * C50789) *
              C1821 +
          ((((C117 * C961 + C50915 * C966) * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C50904 * C51036 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C828 * C683 + C829 * C51044 -
             (C117 * C965 + C50915 * C974) * C684 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C683 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C51044 -
             (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
              C5344 * C297 + C5341 * C307) *
                 C684 -
             (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
              C5344 * C308 + C5341 * C327) *
                 C50854) *
                C2434 +
            ((C5384 + C5385 + C5386) * C683 + (C5387 + C5388 + C5389) * C51044 -
             (C5572 + C5573 + C5574) * C684 -
             (C5575 + C5576 + C5577) * C50854) *
                C50768) *
               C50904 * C51036 +
           (((C5574 + C5573 + C5572) * C684 -
             ((C5389 + C5388 + C5387) * C51044 +
              (C5386 + C5385 + C5384) * C683) +
             (C5577 + C5576 + C5575) * C50854) *
                C2434 +
            ((C5936 + C5937 + C5938) * C684 -
             ((C5390 + C5391 + C5392) * C51044 +
              (C5393 + C5394 + C5395) * C683) +
             (C5939 + C5940 + C5941) * C50854) *
                C50768) *
               C50904 * C50789) *
              C1821 +
          ((((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
              C5346 * C4744 + C5343 * C4752) *
                 C684 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C51044 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C683) +
             (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
              C5346 * C4751 + C5343 * C4756) *
                 C50854) *
                C2434 +
            ((C6316 + C6317 + C6318) * C684 -
             ((C5771 + C5770 + C5769) * C51044 +
              (C5768 + C5767 + C5766) * C683) +
             (C6319 + C6320 + C6321) * C50854) *
                C50768) *
               C50904 * C51036 +
           (((C5766 + C5767 + C5768) * C683 + (C5769 + C5770 + C5771) * C51044 -
             (C6318 + C6317 + C6316) * C684 -
             (C6321 + C6320 + C6319) * C50854) *
                C2434 +
            ((C6100 + C6101 + C6102) * C683 + (C6103 + C6104 + C6105) * C51044 -
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C684 -
             (C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50854) *
                C50768) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C2434 +
            (C690 + C691 - C692 - C693) * C50768) *
               C2436 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C2434 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C2437 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C2434 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C2438) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C2434 +
            (C1006 - (C984 + C985) + C1007) * C50768) *
               C2436 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C2434 +
            (C3374 - (C3375 + C3376) + C3377) * C50768) *
               C2437 +
           ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C2434 +
            (C3390 - (C3380 + C3381) + C3391) * C50768) *
               C2438) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C2434 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C50768) *
               C2436 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C2434 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C50768) *
               C2437 +
           ((C3830 * C683 + C3831 * C51044 -
             (C117 * C3811 + C50915 * C3813) * C684 -
             (C117 * C3814 + C50915 * C3817) * C50854) *
                C2434 +
            (C2834 * C683 + C2835 * C51044 -
             (C117 * C3812 + C50915 * C3815) * C684 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C2438) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 -
            (C117 * C297 + C50915 * C307) * C684 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
              C50904 * C50784 * C51091 +
          (((C117 * C961 + C50915 * C966) * C684 -
            ((C117 * C510 + C50915 * C526) * C51044 +
             (C117 * C496 + C50915 * C511) * C683) +
            (C117 * C967 + C50915 * C976) * C50854) *
               C107 +
           (C1006 - (C984 + C985) + C1007) * C108 +
           (C1008 - (C990 + C991) + C1009) * C109 +
           (C1010 - (C996 + C997) + C1011) * C110) *
              C50904 * C50784 * C51092 +
          (((C117 * C497 + C50915 * C512) * C683 +
            (C117 * C513 + C50915 * C527) * C51044 -
            (C117 * C1327 + C50915 * C1331) * C684 -
            (C117 * C1332 + C50915 * C1339) * C50854) *
               C107 +
           (C563 * C683 + C564 * C51044 -
            (C117 * C1328 + C50915 * C1333) * C684 -
            (C117 * C1334 + C50915 * C1340) * C50854) *
               C108 +
           (C565 * C683 + C566 * C51044 -
            (C117 * C1329 + C50915 * C1335) * C684 -
            (C117 * C1336 + C50915 * C1341) * C50854) *
               C109 +
           (C567 * C683 + C568 * C51044 -
            (C117 * C1330 + C50915 * C1337) * C684 -
            (C117 * C1338 + C50915 * C1342) * C50854) *
               C110) *
              C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C683 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51044 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C684 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C50854) *
               C2434 +
           ((C5384 + C5385 + C5386) * C683 + (C5387 + C5388 + C5389) * C51044 -
            (C5572 + C5573 + C5574) * C684 - (C5575 + C5576 + C5577) * C50854) *
               C50768) *
              C50904 * C50784 * C51091 +
          (((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
             C5346 * C4744 + C5343 * C4752) *
                C684 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C51044 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C683) +
            (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
             C5346 * C4751 + C5343 * C4756) *
                C50854) *
               C2434 +
           ((C6316 + C6317 + C6318) * C684 -
            ((C5771 + C5770 + C5769) * C51044 +
             (C5768 + C5767 + C5766) * C683) +
            (C6319 + C6320 + C6321) * C50854) *
               C50768) *
              C50904 * C50784 * C51092 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C683 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C51044 -
            (C5346 * C6711 + C5343 * C6713 + C5345 * C4744 + C5342 * C4752 +
             C5344 * C1327 + C5341 * C1331) *
                C684 -
            (C5346 * C6714 + C5343 * C6717 + C5345 * C4751 + C5342 * C4756 +
             C5344 * C1332 + C5341 * C1339) *
                C50854) *
               C2434 +
           ((C5772 + C5773 + C5774) * C683 + (C5775 + C5776 + C5777) * C51044 -
            (C5346 * C6712 + C5343 * C6715 + C5345 * C4743 + C5342 * C4750 +
             C5344 * C1328 + C5341 * C1333) *
                C684 -
            (C5346 * C6716 + C5343 * C6718 + C5345 * C4749 + C5342 * C4755 +
             C5344 * C1334 + C5341 * C1340) *
                C50854) *
               C50768) *
              C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50915 * C126) * C118 +
                 (C117 * C127 + C50915 * C140) * C50802) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C50904 * C1111 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C50904 * C1112 +
               (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C50904 * C1113) *
                  C1821 +
              (((C569 + C570) * C107 + (C571 + C572) * C108 +
                (C573 + C574) * C109 + (C830 + C831) * C110) *
                   C50904 * C1112 -
               (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
                ((C117 * C510 + C50915 * C526) * C50802 +
                 (C117 * C496 + C50915 * C511) * C118) *
                    C107) *
                   C50904 * C1111 -
               (((C117 * C818 + C50915 * C820) * C50802 +
                 (C117 * C817 + C50915 * C819) * C118) *
                    C110 +
                (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
                   C50904 * C1113) *
                  C50882) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50915 * C126) * C294 +
                (C117 * C127 + C50915 * C140) * C289 -
                (C117 * C297 + C50915 * C307) * C295 -
                (C117 * C308 + C50915 * C327) * C290 +
                (C117 * C298 + C50915 * C309) * C296 +
                (C117 * C310 + C50915 * C328) * C291) *
                   C107 +
               (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
               (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
               (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
                  C50904 * C50784 * C1821 +
              (((C117 * C961 + C50915 * C966) * C295 -
                ((C117 * C510 + C50915 * C526) * C289 +
                 (C117 * C496 + C50915 * C511) * C294) +
                (C117 * C967 + C50915 * C976) * C290 -
                (C117 * C1707 + C50915 * C1711) * C296 -
                (C117 * C1712 + C50915 * C1719) * C291) *
                   C107 +
               (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
                (C117 * C1708 + C50915 * C1713) * C296 -
                (C117 * C1714 + C50915 * C1720) * C291) *
                   C108 +
               (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
                (C117 * C1709 + C50915 * C1715) * C296 -
                (C117 * C1716 + C50915 * C1721) * C291) *
                   C109 +
               (C1004 * C295 - (C562 * C289 + C561 * C294) + C1005 * C290 -
                (C117 * C1710 + C50915 * C1717) * C296 -
                (C117 * C1718 + C50915 * C1722) * C291) *
                   C110) *
                  C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50904 * C50784 * C1987 -
          (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
           ((C117 * C510 + C50915 * C526) * C50802 +
            (C117 * C496 + C50915 * C511) * C118) *
               C107) *
              C50904 * C50784 * C1988 +
          (((C117 * C497 + C50915 * C512) * C118 +
            (C117 * C513 + C50915 * C527) * C50802) *
               C107 +
           (C575 + C576) * C108 + (C577 + C578) * C109 + (C579 + C580) * C110) *
              C50904 * C50784 * C1989 -
          (((C117 * C1995 + C50915 * C2003) * C50802 +
            (C117 * C1991 + C50915 * C1996) * C118) *
               C110 +
           ((C117 * C1997 + C50915 * C2004) * C50802 +
            (C117 * C1992 + C50915 * C1998) * C118) *
               C109 +
           ((C117 * C1999 + C50915 * C2005) * C50802 +
            (C117 * C1993 + C50915 * C2000) * C118) *
               C108 +
           ((C117 * C2001 + C50915 * C2006) * C50802 +
            (C117 * C1994 + C50915 * C2002) * C118) *
               C107) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C1112 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C2434 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C2436 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C2434 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C2437 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             (C117 * C4337 + C50915 * C4339) * C296 -
             (C117 * C4340 + C50915 * C4343) * C291) *
                C2434 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           ((C2640 * C118 + C2641 * C50802) * C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           ((C2642 * C118 + C2643 * C50802) * C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C50784 * C1987 -
          (((C2837 + C2836) * C50768 +
            (C3387 * C50802 + C3386 * C118) * C2434) *
               C2438 +
           ((C2817 + C2816) * C50768 +
            (C3385 * C50802 + C3384 * C118) * C2434) *
               C2437 +
           ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                      (C117 * C496 + C50915 * C511) * C118) *
                                         C2434) *
               C2436) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C2434 +
            (C575 + C576) * C50768) *
               C2436 +
           ((C3828 * C118 + C3829 * C50802) * C2434 +
            (C2838 + C2839) * C50768) *
               C2437 +
           ((C3830 * C118 + C3831 * C50802) * C2434 +
            (C2840 + C2841) * C50768) *
               C2438) *
              C50784 * C1989 -
          ((((C117 * C4745 + C50915 * C4753) * C50802 +
             (C117 * C4741 + C50915 * C4746) * C118) *
                C50768 +
            ((C117 * C4747 + C50915 * C4754) * C50802 +
             (C117 * C4742 + C50915 * C4748) * C118) *
                C2434) *
               C2438 +
           (((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C50768 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C2434) *
               C2437 +
           (((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C50768 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C2434) *
               C2436) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C5344 * C119 + C5341 * C126 + C5345 * C496 +
                                  C5342 * C511 + C5346 * C497 + C5343 * C512) *
                                     C118 +
                                 (C5344 * C127 + C5341 * C140 + C5345 * C510 +
                                  C5342 * C526 + C5346 * C513 + C5343 * C527) *
                                     C50802) *
                                    C2434 +
                                ((C5384 + C5385 + C5386) * C118 +
                                 (C5387 + C5388 + C5389) * C50802) *
                                    C50768) *
                                   C50904 * C1111 -
                               (((C5390 + C5391 + C5392) * C50802 +
                                 (C5393 + C5394 + C5395) * C118) *
                                    C50768 +
                                ((C5389 + C5388 + C5387) * C50802 +
                                 (C5386 + C5385 + C5384) * C118) *
                                    C2434) *
                                   C50904 * C1112 +
                               (((C5395 + C5394 + C5393) * C118 +
                                 (C5392 + C5391 + C5390) * C50802) *
                                    C2434 +
                                ((C5396 + C5397 + C5398) * C118 +
                                 (C5399 + C5400 + C5401) * C50802) *
                                    C50768) *
                                   C50904 * C1113) *
                                  C1821 +
                              ((((C5766 + C5767 + C5768) * C118 +
                                 (C5769 + C5770 + C5771) * C50802) *
                                    C2434 +
                                ((C6100 + C6101 + C6102) * C118 +
                                 (C6103 + C6104 + C6105) * C50802) *
                                    C50768) *
                                   C50904 * C1112 -
                               (((C5771 + C5770 + C5769) * C50802 +
                                 (C5768 + C5767 + C5766) * C118) *
                                    C50768 +
                                ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 +
                                  C5342 * C527 + C5344 * C510 + C5341 * C526) *
                                     C50802 +
                                 (C5346 * C1994 + C5343 * C2002 + C5345 * C497 +
                                  C5342 * C512 + C5344 * C496 + C5341 * C511) *
                                     C118) *
                                    C2434) *
                                   C50904 * C1111 -
                               (((C5346 * C1995 + C5343 * C2003 + C5345 * C519 +
                                  C5342 * C530 + C5344 * C507 + C5341 * C524) *
                                     C50802 +
                                 (C5346 * C1991 + C5343 * C1996 + C5345 * C500 +
                                  C5342 * C518 + C5344 * C494 + C5341 * C506) *
                                     C118) *
                                    C50768 +
                                ((C6105 + C6104 + C6103) * C50802 +
                                 (C6102 + C6101 + C6100) * C118) *
                                    C2434) *
                                   C50904 * C1113) *
                                  C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C295 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C290 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C296 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C291) *
               C2434 +
           ((C5384 + C5385 + C5386) * C294 + (C5387 + C5388 + C5389) * C289 -
            (C5572 + C5573 + C5574) * C295 - (C5575 + C5576 + C5577) * C290 +
            (C5578 + C5579 + C5580) * C296 + (C5581 + C5582 + C5583) * C291) *
               C50768) *
              C50904 * C50784 * C1821 +
          (((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
             C5346 * C4744 + C5343 * C4752) *
                C295 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C289 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C294) +
            (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
             C5346 * C4751 + C5343 * C4756) *
                C290 -
            (C5346 * C4742 + C5343 * C4748 + C5345 * C2803 + C5342 * C2806 +
             C5344 * C1707 + C5341 * C1711) *
                C296 -
            (C5346 * C4747 + C5343 * C4754 + C5345 * C2807 + C5342 * C2812 +
             C5344 * C1712 + C5341 * C1719) *
                C291) *
               C2434 +
           ((C6316 + C6317 + C6318) * C295 -
            ((C5771 + C5770 + C5769) * C289 + (C5768 + C5767 + C5766) * C294) +
            (C6319 + C6320 + C6321) * C290 -
            (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
             C5344 * C1708 + C5341 * C1713) *
                C296 -
            (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
             C5344 * C1714 + C5341 * C1720) *
                C291) *
               C50768) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C2434 +
           ((C5384 + C5385 + C5386) * C118 + (C5387 + C5388 + C5389) * C50802) *
               C50768) *
              C50904 * C50784 * C1987 -
          (((C5771 + C5770 + C5769) * C50802 + (C5768 + C5767 + C5766) * C118) *
               C50768 +
           ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
             C5344 * C510 + C5341 * C526) *
                C50802 +
            (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
             C5344 * C496 + C5341 * C511) *
                C118) *
               C2434) *
              C50904 * C50784 * C1988 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C118 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C50802) *
               C2434 +
           ((C5772 + C5773 + C5774) * C118 + (C5775 + C5776 + C5777) * C50802) *
               C50768) *
              C50904 * C50784 * C1989 -
          (((C5346 * C7597 + C5343 * C7601 + C5345 * C5735 + C5342 * C5739 +
             C5344 * C1999 + C5341 * C2005) *
                C50802 +
            (C5346 * C7595 + C5343 * C7598 + C5345 * C5730 + C5342 * C5734 +
             C5344 * C1993 + C5341 * C2000) *
                C118) *
               C50768 +
           ((C5346 * C7599 + C5343 * C7602 + C5345 * C5733 + C5342 * C5738 +
             C5344 * C2001 + C5341 * C2006) *
                C50802 +
            (C5346 * C7596 + C5343 * C7600 + C5345 * C5729 + C5342 * C5732 +
             C5344 * C1994 + C5341 * C2002) *
                C118) *
               C2434) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C51036 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C2434 +
             (C575 + C576) * C50768) *
                C2436 +
            ((C3828 * C118 + C3829 * C50802) * C2434 +
             (C2838 + C2839) * C50768) *
                C2437 +
            ((C3830 * C118 + C3831 * C50802) * C2434 +
             (C2840 + C2841) * C50768) *
                C2438) *
               C51036 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C2434) *
                C2438 +
            (((C117 * C1336 + C50915 * C1341) * C50802 +
              (C117 * C1329 + C50915 * C1335) * C118) *
                 C50768 +
             (C2839 + C2838) * C2434) *
                C2437 +
            ((C578 + C577) * C50768 + (C576 + C575) * C2434) * C2436) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C51036 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C50789) *
              C51091 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C50789 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C51036) *
              C51092 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C107 +
            (C575 + C576) * C108 + (C577 + C578) * C109 +
            (C579 + C580) * C110) *
               C50904 * C51036 -
           (((C117 * C520 + C50915 * C531) * C50802 +
             (C117 * C501 + C50915 * C521) * C118) *
                C110 +
            (C580 + C579) * C109 + (C578 + C577) * C108 +
            (C576 + C575) * C107) *
               C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C2434 +
            ((C5384 + C5385 + C5386) * C118 +
             (C5387 + C5388 + C5389) * C50802) *
                C50768) *
               C50904 * C51036 -
           (((C5390 + C5391 + C5392) * C50802 +
             (C5393 + C5394 + C5395) * C118) *
                C50768 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C2434) *
               C50904 * C50789) *
              C51091 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C2434 +
            ((C6100 + C6101 + C6102) * C118 +
             (C6103 + C6104 + C6105) * C50802) *
                C50768) *
               C50904 * C50789 -
           (((C5771 + C5770 + C5769) * C50802 +
             (C5768 + C5767 + C5766) * C118) *
                C50768 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C2434) *
               C50904 * C51036) *
              C51092 +
          ((((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
              C5346 * C5729 + C5343 * C5732) *
                 C118 +
             (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
              C5346 * C5733 + C5343 * C5738) *
                 C50802) *
                C2434 +
            ((C5772 + C5773 + C5774) * C118 +
             (C5775 + C5776 + C5777) * C50802) *
                C50768) *
               C50904 * C51036 -
           (((C5346 * C5736 + C5343 * C5740 + C5345 * C1997 + C5342 * C2004 +
              C5344 * C517 + C5341 * C529) *
                 C50802 +
             (C5346 * C5731 + C5343 * C5737 + C5345 * C1992 + C5342 * C1998 +
              C5344 * C499 + C5341 * C516) *
                 C118) *
                C50768 +
            ((C5777 + C5776 + C5775) * C50802 +
             (C5774 + C5773 + C5772) * C118) *
                C2434) *
               C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C50784 * C1821 +
          (((C117 * C961 + C50915 * C966) * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            (C117 * C967 + C50915 * C976) * C290 -
            (C117 * C1707 + C50915 * C1711) * C296 -
            (C117 * C1712 + C50915 * C1719) * C291) *
               C107 +
           (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
            (C117 * C1708 + C50915 * C1713) * C296 -
            (C117 * C1714 + C50915 * C1720) * C291) *
               C108 +
           (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
            (C117 * C1709 + C50915 * C1715) * C296 -
            (C117 * C1716 + C50915 * C1721) * C291) *
               C109 +
           (C1004 * C295 - (C562 * C289 + C561 * C294) + C1005 * C290 -
            (C117 * C1710 + C50915 * C1717) * C296 -
            (C117 * C1718 + C50915 * C1722) * C291) *
               C110) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C1111 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C1112 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50904 * C1113) *
              C1821 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C1112 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C1111 -
           (((C117 * C818 + C50915 * C820) * C50802 +
             (C117 * C817 + C50915 * C819) * C118) *
                C110 +
            (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C1112 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C2434 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C2436 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C2434 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C2437 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             (C117 * C4337 + C50915 * C4339) * C296 -
             (C117 * C4340 + C50915 * C4343) * C291) *
                C2434 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C2434 +
            ((C5384 + C5385 + C5386) * C118 +
             (C5387 + C5388 + C5389) * C50802) *
                C50768) *
               C50904 * C1111 -
           (((C5390 + C5391 + C5392) * C50802 +
             (C5393 + C5394 + C5395) * C118) *
                C50768 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C2434) *
               C50904 * C1112 +
           (((C5395 + C5394 + C5393) * C118 +
             (C5392 + C5391 + C5390) * C50802) *
                C2434 +
            ((C5396 + C5397 + C5398) * C118 +
             (C5399 + C5400 + C5401) * C50802) *
                C50768) *
               C50904 * C1113) *
              C1821 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C2434 +
            ((C6100 + C6101 + C6102) * C118 +
             (C6103 + C6104 + C6105) * C50802) *
                C50768) *
               C50904 * C1112 -
           (((C5771 + C5770 + C5769) * C50802 +
             (C5768 + C5767 + C5766) * C118) *
                C50768 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C2434) *
               C50904 * C1111 -
           (((C5346 * C1995 + C5343 * C2003 + C5345 * C519 + C5342 * C530 +
              C5344 * C507 + C5341 * C524) *
                 C50802 +
             (C5346 * C1991 + C5343 * C1996 + C5345 * C500 + C5342 * C518 +
              C5344 * C494 + C5341 * C506) *
                 C118) *
                C50768 +
            ((C6105 + C6104 + C6103) * C50802 +
             (C6102 + C6101 + C6100) * C118) *
                C2434) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C5346 * C1327 + C5343 * C1331 + C5345 * C961 + C5342 * C966 +
             C5344 * C297 + C5341 * C307) *
                C295 -
            (C5346 * C1332 + C5343 * C1339 + C5345 * C967 + C5342 * C976 +
             C5344 * C308 + C5341 * C327) *
                C290 +
            (C5344 * C298 + C5341 * C309 + C5345 * C1707 + C5342 * C1711 +
             C5346 * C2803 + C5343 * C2806) *
                C296 +
            (C5344 * C310 + C5341 * C328 + C5345 * C1712 + C5342 * C1719 +
             C5346 * C2807 + C5343 * C2812) *
                C291) *
               C2434 +
           ((C5384 + C5385 + C5386) * C294 + (C5387 + C5388 + C5389) * C289 -
            (C5572 + C5573 + C5574) * C295 - (C5575 + C5576 + C5577) * C290 +
            (C5578 + C5579 + C5580) * C296 + (C5581 + C5582 + C5583) * C291) *
               C50768) *
              C50904 * C50784 * C1821 +
          (((C5344 * C961 + C5341 * C966 + C5345 * C1327 + C5342 * C1331 +
             C5346 * C4744 + C5343 * C4752) *
                C295 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C289 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C294) +
            (C5344 * C967 + C5341 * C976 + C5345 * C1332 + C5342 * C1339 +
             C5346 * C4751 + C5343 * C4756) *
                C290 -
            (C5346 * C4742 + C5343 * C4748 + C5345 * C2803 + C5342 * C2806 +
             C5344 * C1707 + C5341 * C1711) *
                C296 -
            (C5346 * C4747 + C5343 * C4754 + C5345 * C2807 + C5342 * C2812 +
             C5344 * C1712 + C5341 * C1719) *
                C291) *
               C2434 +
           ((C6316 + C6317 + C6318) * C295 -
            ((C5771 + C5770 + C5769) * C289 + (C5768 + C5767 + C5766) * C294) +
            (C6319 + C6320 + C6321) * C290 -
            (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
             C5344 * C1708 + C5341 * C1713) *
                C296 -
            (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
             C5344 * C1714 + C5341 * C1720) *
                C291) *
               C50768) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C683 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51044 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C684 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C50854) *
               C51085 +
           ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
            (C11110 + C11111) * C684 - (C11112 + C11113) * C50854) *
               C51086 +
           C11486 * C8189) *
              C50904 * C51087 +
          (((C11111 + C11110) * C684 -
            ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
            (C11113 + C11112) * C50854) *
               C51085 +
           ((C11119 + C11118) * C684 -
            ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
            (C11121 + C11120) * C50854) *
               C51086 +
           ((C11481 + C11482) * C684 - (C10924 * C51044 + C10925 * C683) +
            (C11483 + C11484) * C50854) *
               C8189) *
              C50904 * C51088 +
          (C11486 * C51085 +
           ((C10917 + C10916) * C683 + (C10915 + C10914) * C51044 -
            (C11482 + C11481) * C684 - (C11484 + C11483) * C50854) *
               C51086 +
           ((C10918 + C10919) * C683 + (C10920 + C10921) * C51044 -
            (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                C684 -
            (C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                C50854) *
               C8189) *
              C50904 * C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                 C684 -
             (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                 C50854) *
                C51085 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             (C11110 + C11111) * C684 - (C11112 + C11113) * C50854) *
                C51086 +
            C11486 * C8189) *
               C50904 * C292 +
           (((C11111 + C11110) * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             (C11113 + C11112) * C50854) *
                C51085 +
            ((C11119 + C11118) * C684 -
             ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
             (C11121 + C11120) * C50854) *
                C51086 +
            ((C11481 + C11482) * C684 - (C10924 * C51044 + C10925 * C683) +
             (C11483 + C11484) * C50854) *
                C8189) *
               C50904 * C50789) *
              C51045 +
          ((((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                 C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                 C50854) *
                C51085 +
            ((C11860 + C11861) * C684 -
             ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
             (C11862 + C11863) * C50854) *
                C51086 +
            ((C11864 + C11865) * C684 - (C11641 * C51044 + C11642 * C683) +
             (C11866 + C11867) * C50854) *
                C8189) *
               C50904 * C292 +
           (((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
             (C11861 + C11860) * C684 - (C11863 + C11862) * C50854) *
                C51085 +
            ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
             (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                C51086 +
            ((C11643 + C11644) * C683 + (C11645 + C11646) * C51044 -
             (C10872 * C1330 + C50979 * C1337 + C10871 * C964 + C51058 * C972) *
                 C684 -
             (C10872 * C1338 + C50979 * C1342 + C10871 * C973 + C51058 * C979) *
                 C50854) *
                C8189) *
               C50904 * C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C295 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C290 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C296 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C291) *
               C51085 +
           ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
            (C11110 + C11111) * C295 - (C11112 + C11113) * C290 +
            (C11114 + C11115) * C296 + (C11116 + C11117) * C291) *
               C51086 +
           (C10922 * C294 + C10923 * C289 - (C11118 + C11119) * C295 -
            (C11120 + C11121) * C290 + (C11122 + C11123) * C296 +
            (C11124 + C11125) * C291) *
               C8189) *
              C50904 * C292 +
          (((C11111 + C11110) * C295 -
            ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
            (C11113 + C11112) * C290 - (C11115 + C11114) * C296 -
            (C11117 + C11116) * C291) *
               C51085 +
           ((C11119 + C11118) * C295 -
            ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
            (C11121 + C11120) * C290 - (C11123 + C11122) * C296 -
            (C11125 + C11124) * C291) *
               C51086 +
           ((C10871 * C303 + C51058 * C319 + C10872 * C964 + C50979 * C972) *
                C295 -
            (C10924 * C289 + C10925 * C294) +
            (C10871 * C320 + C51058 * C333 + C10872 * C973 + C50979 * C979) *
                C290 -
            (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                C296 -
            (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                C291) *
               C8189) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C51085 +
           ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
           C10930 * C8189) *
              C50904 * C112 -
          (C10931 * C8189 +
           ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
           ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
              C50904 * C113 +
          (C10930 * C51085 +
           ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C51086 +
           ((C10918 + C10919) * C118 + (C10920 + C10921) * C50802) * C8189) *
              C50904 * C114 -
          (((C10872 * C818 + C50979 * C820 + C10871 * C137 + C51058 * C145) *
                C50802 +
            (C10872 * C817 + C50979 * C819 + C10871 * C124 + C51058 * C136) *
                C118) *
               C8189 +
           ((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C51086 +
           C10931 * C51085) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51085 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
            C10930 * C8189) *
               C50904 * C292 -
           (C10931 * C8189 +
            ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
               C50904 * C50789) *
              C489 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51085 +
            ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C51086 +
            ((C10871 * C494 + C51058 * C506 + C10872 * C500 + C50979 * C518) *
                 C118 +
             (C10871 * C507 + C51058 * C524 + C10872 * C519 + C50979 * C530) *
                 C50802) *
                C8189) *
               C50904 * C50789 -
           (((C11311 + C11310) * C50802 + (C11309 + C11308) * C118) * C8189 +
            ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51085) *
               C50904 * C292) *
              C490 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C51085 +
            ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C51086 +
            ((C11316 + C11317) * C118 + (C11318 + C11319) * C50802) * C8189) *
               C50904 * C292 -
           (((C10872 * C1995 + C50979 * C2003 + C10871 * C519 + C51058 * C530) *
                 C50802 +
             (C10872 * C1991 + C50979 * C1996 + C10871 * C500 + C51058 * C518) *
                 C118) *
                C8189 +
            ((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C51086 +
            ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C51085) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51085 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
            C10930 * C8189) *
               C50904 * C51087 -
           (C10931 * C8189 +
            ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
               C50904 * C51088 +
           (C10930 * C51085 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C51086 +
            ((C10918 + C10919) * C118 + (C10920 + C10921) * C50802) * C8189) *
               C50904 * C682) *
              C51045 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51085 +
            ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C51086 +
            ((C11643 + C11644) * C118 + (C11645 + C11646) * C50802) * C8189) *
               C50904 * C51088 -
           (C11649 * C8189 +
            ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51085) *
               C50904 * C51087 -
           (((C10872 * C520 + C50979 * C531 + C10871 * C509 + C51058 * C525) *
                 C50802 +
             (C10872 * C501 + C50979 * C521 + C10871 * C495 + C51058 * C508) *
                 C118) *
                C8189 +
            ((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C51086 +
            C11649 * C51085) *
               C50904 * C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C51085 +
           ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
           C10930 * C8189) *
              C50904 * C112 -
          (C10931 * C8189 +
           ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
           ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
              C50904 * C113 +
          (C10930 * C51085 +
           ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C51086 +
           ((C10918 + C10919) * C118 + (C10920 + C10921) * C50802) * C8189) *
              C50904 * C114 -
          (((C10872 * C818 + C50979 * C820 + C10871 * C137 + C51058 * C145) *
                C50802 +
            (C10872 * C817 + C50979 * C819 + C10871 * C124 + C51058 * C136) *
                C118) *
               C8189 +
           ((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C51086 +
           C10931 * C51085) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C295 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C290 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C296 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C291) *
               C51085 +
           ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
            (C11110 + C11111) * C295 - (C11112 + C11113) * C290 +
            (C11114 + C11115) * C296 + (C11116 + C11117) * C291) *
               C51086 +
           (C10922 * C294 + C10923 * C289 - (C11118 + C11119) * C295 -
            (C11120 + C11121) * C290 + (C11122 + C11123) * C296 +
            (C11124 + C11125) * C291) *
               C8189) *
              C50904 * C292 +
          (((C11111 + C11110) * C295 -
            ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
            (C11113 + C11112) * C290 - (C11115 + C11114) * C296 -
            (C11117 + C11116) * C291) *
               C51085 +
           ((C11119 + C11118) * C295 -
            ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
            (C11121 + C11120) * C290 - (C11123 + C11122) * C296 -
            (C11125 + C11124) * C291) *
               C51086 +
           ((C10871 * C303 + C51058 * C319 + C10872 * C964 + C50979 * C972) *
                C295 -
            (C10924 * C289 + C10925 * C294) +
            (C10871 * C320 + C51058 * C333 + C10872 * C973 + C50979 * C979) *
                C290 -
            (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                C296 -
            (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                C291) *
               C8189) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1446 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51089 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C1447 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C51090 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C1448 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C1443) *
               C51085 +
           ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
            (C11110 + C11111) * C1447 - (C11112 + C11113) * C51090 +
            (C11114 + C11115) * C1448 + (C11116 + C11117) * C1443) *
               C51086 +
           (C10922 * C1446 + C10923 * C51089 - C11468 * C1447 -
            C11469 * C51090 + (C11122 + C11123) * C1448 +
            (C11124 + C11125) * C1443) *
               C8189) *
              C50904 * C51036 +
          (((C11111 + C11110) * C1447 -
            ((C10909 + C10908) * C51089 + (C10907 + C10906) * C1446) +
            (C11113 + C11112) * C51090 - (C11115 + C11114) * C1448 -
            (C11117 + C11116) * C1443) *
               C51085 +
           ((C11119 + C11118) * C1447 -
            ((C10913 + C10912) * C51089 + (C10911 + C10910) * C1446) +
            (C11121 + C11120) * C51090 - (C11123 + C11122) * C1448 -
            (C11125 + C11124) * C1443) *
               C51086 +
           ((C11481 + C11482) * C1447 - (C10924 * C51089 + C10925 * C1446) +
            (C11483 + C11484) * C51090 -
            (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                C1448 -
            (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                C1443) *
               C8189) *
              C50904 * C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1446 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51089 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C1447 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C51090 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C1448 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C1443) *
               C51085 +
           ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
            (C11110 + C11111) * C1447 - (C11112 + C11113) * C51090 +
            (C11114 + C11115) * C1448 + (C11116 + C11117) * C1443) *
               C51086 +
           (C10922 * C1446 + C10923 * C51089 - C11468 * C1447 -
            C11469 * C51090 + (C11122 + C11123) * C1448 +
            (C11124 + C11125) * C1443) *
               C8189) *
              C50904 * C50784 * C51045 +
          (((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                C1447 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C51089 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C1446) +
            (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                C51090 -
            (C10872 * C2803 + C50979 * C2806 + C10871 * C1707 +
             C51058 * C1711) *
                C1448 -
            (C10872 * C2807 + C50979 * C2812 + C10871 * C1712 +
             C51058 * C1719) *
                C1443) *
               C51085 +
           ((C11860 + C11861) * C1447 -
            ((C11307 + C11306) * C51089 + (C11305 + C11304) * C1446) +
            (C11862 + C11863) * C51090 -
            (C10872 * C2804 + C50979 * C2808 + C10871 * C1708 +
             C51058 * C1713) *
                C1448 -
            (C10872 * C2809 + C50979 * C2813 + C10871 * C1714 +
             C51058 * C1720) *
                C1443) *
               C51086 +
           ((C11864 + C11865) * C1447 - (C11641 * C51089 + C11642 * C1446) +
            (C11866 + C11867) * C51090 -
            (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
             C51058 * C1715) *
                C1448 -
            (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
             C51058 * C1721) *
                C1443) *
               C8189) *
              C50904 * C50784 * C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
               C1209 +
           (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
               C1204 -
           (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
               C1210 -
           (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
               C1205 +
           (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
               C1211 +
           (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
               C1206 -
           (C10872 * C3353 + C50979 * C3356 + C10871 * C1213 + C51058 * C1217) *
               C1212 -
           (C10872 * C3357 + C50979 * C3362 + C10871 * C1218 + C51058 * C1225) *
               C1207) *
              C51085 +
          ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
           (C11110 + C11111) * C1210 - (C11112 + C11113) * C1205 +
           (C11114 + C11115) * C1211 + (C11116 + C11117) * C1206 -
           (C10872 * C3354 + C50979 * C3358 + C10871 * C1214 + C51058 * C1219) *
               C1212 -
           (C10872 * C3359 + C50979 * C3363 + C10871 * C1220 + C51058 * C1226) *
               C1207) *
              C51086 +
          (C10922 * C1209 + C10923 * C1204 - C11468 * C1210 - C11469 * C1205 +
           (C11122 + C11123) * C1211 + (C11124 + C11125) * C1206 -
           (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 + C51058 * C1221) *
               C1212 -
           (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 + C51058 * C1227) *
               C1207) *
              C8189) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C1115 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C50854) *
               C51085 +
           ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
            (C11110 + C11111) * C1115 - (C11112 + C11113) * C50854) *
               C51086 +
           C12020 * C8189) *
              C50904 * C1111 +
          (((C11111 + C11110) * C1115 -
            ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
            (C11113 + C11112) * C50854) *
               C51085 +
           ((C11119 + C11118) * C1115 -
            ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
            (C11121 + C11120) * C50854) *
               C51086 +
           ((C11481 + C11482) * C1115 - (C10924 * C1109 + C10925 * C1114) +
            (C11483 + C11484) * C50854) *
               C8189) *
              C50904 * C1112 +
          (C12020 * C51085 +
           ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
            (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
               C51086 +
           ((C10918 + C10919) * C1114 + (C10920 + C10921) * C1109 -
            (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                C1115 -
            (C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                C50854) *
               C8189) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C1115 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C50854) *
               C51085 +
           ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
            (C11110 + C11111) * C1115 - (C11112 + C11113) * C50854) *
               C51086 +
           C12020 * C8189) *
              C50904 * C50784 * C489 +
          (((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                C1115 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C1109 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C1114) +
            (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                C50854) *
               C51085 +
           ((C11860 + C11861) * C1115 -
            ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
            (C11862 + C11863) * C50854) *
               C51086 +
           ((C11864 + C11865) * C1115 - (C11641 * C1109 + C11642 * C1114) +
            (C11866 + C11867) * C50854) *
               C8189) *
              C50904 * C50784 * C490 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C1114 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C1109 -
            (C10872 * C4744 + C50979 * C4752 + C10871 * C1327 +
             C51058 * C1331) *
                C1115 -
            (C10872 * C4751 + C50979 * C4756 + C10871 * C1332 +
             C51058 * C1339) *
                C50854) *
               C51085 +
           ((C11312 + C11313) * C1114 + (C11314 + C11315) * C1109 -
            (C10872 * C4743 + C50979 * C4750 + C10871 * C1328 +
             C51058 * C1333) *
                C1115 -
            (C10872 * C4749 + C50979 * C4755 + C10871 * C1334 +
             C51058 * C1340) *
                C50854) *
               C51086 +
           ((C11316 + C11317) * C1114 + (C11318 + C11319) * C1109 -
            (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
             C51058 * C1335) *
                C1115 -
            (C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
             C51058 * C1341) *
                C50854) *
               C8189) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                 C1115 -
             (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                 C50854) *
                C51085 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             (C11110 + C11111) * C1115 - (C11112 + C11113) * C50854) *
                C51086 +
            C12020 * C8189) *
               C50904 * C51036 +
           (((C11111 + C11110) * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             (C11113 + C11112) * C50854) *
                C51085 +
            ((C11119 + C11118) * C1115 -
             ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
             (C11121 + C11120) * C50854) *
                C51086 +
            ((C11481 + C11482) * C1115 - (C10924 * C1109 + C10925 * C1114) +
             (C11483 + C11484) * C50854) *
                C8189) *
               C50904 * C50789) *
              C51045 +
          ((((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                 C1115 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C1109 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1114) +
             (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                 C50854) *
                C51085 +
            ((C11860 + C11861) * C1115 -
             ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
             (C11862 + C11863) * C50854) *
                C51086 +
            ((C11864 + C11865) * C1115 - (C11641 * C1109 + C11642 * C1114) +
             (C11866 + C11867) * C50854) *
                C8189) *
               C50904 * C51036 +
           (((C11304 + C11305) * C1114 + (C11306 + C11307) * C1109 -
             (C11861 + C11860) * C1115 - (C11863 + C11862) * C50854) *
                C51085 +
            ((C11308 + C11309) * C1114 + (C11310 + C11311) * C1109 -
             (C11865 + C11864) * C1115 - (C11867 + C11866) * C50854) *
                C51086 +
            ((C11643 + C11644) * C1114 + (C11645 + C11646) * C1109 -
             (C10872 * C1330 + C50979 * C1337 + C10871 * C964 + C51058 * C972) *
                 C1115 -
             (C10872 * C1338 + C50979 * C1342 + C10871 * C973 + C51058 * C979) *
                 C50854) *
                C8189) *
               C50904 * C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C1115 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C50854) *
               C51085 +
           ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
            (C11110 + C11111) * C1115 - (C11112 + C11113) * C50854) *
               C51086 +
           C12020 * C8189) *
              C50904 * C1111 +
          (((C11111 + C11110) * C1115 -
            ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
            (C11113 + C11112) * C50854) *
               C51085 +
           ((C11119 + C11118) * C1115 -
            ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
            (C11121 + C11120) * C50854) *
               C51086 +
           ((C11481 + C11482) * C1115 - (C10924 * C1109 + C10925 * C1114) +
            (C11483 + C11484) * C50854) *
               C8189) *
              C50904 * C1112 +
          (C12020 * C51085 +
           ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
            (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
               C51086 +
           ((C10918 + C10919) * C1114 + (C10920 + C10921) * C1109 -
            (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                C1115 -
            (C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                C50854) *
               C8189) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
               C1209 +
           (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
               C1204 -
           (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
               C1210 -
           (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
               C1205 +
           (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
               C1211 +
           (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
               C1206 -
           (C10872 * C3353 + C50979 * C3356 + C10871 * C1213 + C51058 * C1217) *
               C1212 -
           (C10872 * C3357 + C50979 * C3362 + C10871 * C1218 + C51058 * C1225) *
               C1207) *
              C51085 +
          ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
           (C11110 + C11111) * C1210 - (C11112 + C11113) * C1205 +
           (C11114 + C11115) * C1211 + (C11116 + C11117) * C1206 -
           (C10872 * C3354 + C50979 * C3358 + C10871 * C1214 + C51058 * C1219) *
               C1212 -
           (C10872 * C3359 + C50979 * C3363 + C10871 * C1220 + C51058 * C1226) *
               C1207) *
              C51086 +
          (C10922 * C1209 + C10923 * C1204 - C11468 * C1210 - C11469 * C1205 +
           (C11122 + C11123) * C1211 + (C11124 + C11125) * C1206 -
           (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 + C51058 * C1221) *
               C1212 -
           (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 + C51058 * C1227) *
               C1207) *
              C8189) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                 C684 -
             (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                 C50854) *
                C51085 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             (C11110 + C11111) * C684 - (C11112 + C11113) * C50854) *
                C51086 +
            C11486 * C8189) *
               C50904 * C51036 +
           (((C11111 + C11110) * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             (C11113 + C11112) * C50854) *
                C51085 +
            ((C11119 + C11118) * C684 -
             ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
             (C11121 + C11120) * C50854) *
                C51086 +
            ((C11481 + C11482) * C684 - (C10924 * C51044 + C10925 * C683) +
             (C11483 + C11484) * C50854) *
                C8189) *
               C50904 * C50789) *
              C1821 +
          ((((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                 C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                 C50854) *
                C51085 +
            ((C11860 + C11861) * C684 -
             ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
             (C11862 + C11863) * C50854) *
                C51086 +
            ((C11864 + C11865) * C684 - (C11641 * C51044 + C11642 * C683) +
             (C11866 + C11867) * C50854) *
                C8189) *
               C50904 * C51036 +
           (((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
             (C11861 + C11860) * C684 - (C11863 + C11862) * C50854) *
                C51085 +
            ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
             (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                C51086 +
            ((C11643 + C11644) * C683 + (C11645 + C11646) * C51044 -
             (C10872 * C1330 + C50979 * C1337 + C10871 * C964 + C51058 * C972) *
                 C684 -
             (C10872 * C1338 + C50979 * C1342 + C10871 * C973 + C51058 * C979) *
                 C50854) *
                C8189) *
               C50904 * C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C683 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51044 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C684 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C50854) *
               C51085 +
           ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
            (C11110 + C11111) * C684 - (C11112 + C11113) * C50854) *
               C51086 +
           C11486 * C8189) *
              C50904 * C50784 * C51091 +
          (((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                C684 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C51044 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C683) +
            (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                C50854) *
               C51085 +
           ((C11860 + C11861) * C684 -
            ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
            (C11862 + C11863) * C50854) *
               C51086 +
           ((C11864 + C11865) * C684 - (C11641 * C51044 + C11642 * C683) +
            (C11866 + C11867) * C50854) *
               C8189) *
              C50904 * C50784 * C51092 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C683 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C51044 -
            (C10872 * C4744 + C50979 * C4752 + C10871 * C1327 +
             C51058 * C1331) *
                C684 -
            (C10872 * C4751 + C50979 * C4756 + C10871 * C1332 +
             C51058 * C1339) *
                C50854) *
               C51085 +
           ((C11312 + C11313) * C683 + (C11314 + C11315) * C51044 -
            (C10872 * C4743 + C50979 * C4750 + C10871 * C1328 +
             C51058 * C1333) *
                C684 -
            (C10872 * C4749 + C50979 * C4755 + C10871 * C1334 +
             C51058 * C1340) *
                C50854) *
               C51086 +
           ((C11316 + C11317) * C683 + (C11318 + C11319) * C51044 -
            (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
             C51058 * C1335) *
                C684 -
            (C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
             C51058 * C1341) *
                C50854) *
               C8189) *
              C50904 * C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C295 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C290 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C296 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C291) *
               C51085 +
           ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
            (C11110 + C11111) * C295 - (C11112 + C11113) * C290 +
            (C11114 + C11115) * C296 + (C11116 + C11117) * C291) *
               C51086 +
           (C10922 * C294 + C10923 * C289 - C11468 * C295 - C11469 * C290 +
            (C11122 + C11123) * C296 + (C11124 + C11125) * C291) *
               C8189) *
              C50904 * C50784 * C1821 +
          (((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                C295 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C289 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C294) +
            (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                C290 -
            (C10872 * C2803 + C50979 * C2806 + C10871 * C1707 +
             C51058 * C1711) *
                C296 -
            (C10872 * C2807 + C50979 * C2812 + C10871 * C1712 +
             C51058 * C1719) *
                C291) *
               C51085 +
           ((C11860 + C11861) * C295 -
            ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
            (C11862 + C11863) * C290 -
            (C10872 * C2804 + C50979 * C2808 + C10871 * C1708 +
             C51058 * C1713) *
                C296 -
            (C10872 * C2809 + C50979 * C2813 + C10871 * C1714 +
             C51058 * C1720) *
                C291) *
               C51086 +
           ((C11864 + C11865) * C295 - (C11641 * C289 + C11642 * C294) +
            (C11866 + C11867) * C290 -
            (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
             C51058 * C1715) *
                C296 -
            (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
             C51058 * C1721) *
                C291) *
               C8189) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51085 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
            C10930 * C8189) *
               C50904 * C1111 -
           (C10931 * C8189 +
            ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
               C50904 * C1112 +
           (C10930 * C51085 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C51086 +
            ((C10918 + C10919) * C118 + (C10920 + C10921) * C50802) * C8189) *
               C50904 * C1113) *
              C1821 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51085 +
            ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C51086 +
            ((C11643 + C11644) * C118 + (C11645 + C11646) * C50802) * C8189) *
               C50904 * C1112 -
           (C11649 * C8189 +
            ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51085) *
               C50904 * C1111 -
           (((C10872 * C520 + C50979 * C531 + C10871 * C509 + C51058 * C525) *
                 C50802 +
             (C10872 * C501 + C50979 * C521 + C10871 * C495 + C51058 * C508) *
                 C118) *
                C8189 +
            ((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C51086 +
            C11649 * C51085) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C51085 +
           ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
           C10930 * C8189) *
              C50904 * C50784 * C1987 -
          (C11649 * C8189 +
           ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
           ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                C50802 +
            (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                C118) *
               C51085) *
              C50904 * C50784 * C1988 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C118 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C50802) *
               C51085 +
           ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C51086 +
           ((C11316 + C11317) * C118 + (C11318 + C11319) * C50802) * C8189) *
              C50904 * C50784 * C1989 -
          (((C10872 * C5736 + C50979 * C5740 + C10871 * C1997 +
             C51058 * C2004) *
                C50802 +
            (C10872 * C5731 + C50979 * C5737 + C10871 * C1992 +
             C51058 * C1998) *
                C118) *
               C8189 +
           ((C10872 * C5735 + C50979 * C5739 + C10871 * C1999 +
             C51058 * C2005) *
                C50802 +
            (C10872 * C5730 + C50979 * C5734 + C10871 * C1993 +
             C51058 * C2000) *
                C118) *
               C51086 +
           ((C10872 * C5733 + C50979 * C5738 + C10871 * C2001 +
             C51058 * C2006) *
                C50802 +
            (C10872 * C5729 + C50979 * C5732 + C10871 * C1994 +
             C51058 * C2002) *
                C118) *
               C51085) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51085 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
            C10930 * C8189) *
               C50904 * C51036 -
           (C10931 * C8189 +
            ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
               C50904 * C50789) *
              C51091 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51085 +
            ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C51086 +
            ((C11643 + C11644) * C118 + (C11645 + C11646) * C50802) * C8189) *
               C50904 * C50789 -
           (C11649 * C8189 +
            ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51085) *
               C50904 * C51036) *
              C51092 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C51085 +
            ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C51086 +
            ((C11316 + C11317) * C118 + (C11318 + C11319) * C50802) * C8189) *
               C50904 * C51036 -
           (((C10872 * C1995 + C50979 * C2003 + C10871 * C519 + C51058 * C530) *
                 C50802 +
             (C10872 * C1991 + C50979 * C1996 + C10871 * C500 + C51058 * C518) *
                 C118) *
                C8189 +
            ((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C51086 +
            ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C51085) *
               C50904 * C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51085 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C51086 +
            C10930 * C8189) *
               C50904 * C1111 -
           (C10931 * C8189 +
            ((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C51086 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51085) *
               C50904 * C1112 +
           (C10930 * C51085 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C51086 +
            ((C10918 + C10919) * C118 + (C10920 + C10921) * C50802) * C8189) *
               C50904 * C1113) *
              C1821 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51085 +
            ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C51086 +
            ((C11643 + C11644) * C118 + (C11645 + C11646) * C50802) * C8189) *
               C50904 * C1112 -
           (C11649 * C8189 +
            ((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C51086 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51085) *
               C50904 * C1111 -
           (((C10872 * C520 + C50979 * C531 + C10871 * C509 + C51058 * C525) *
                 C50802 +
             (C10872 * C501 + C50979 * C521 + C10871 * C495 + C51058 * C508) *
                 C118) *
                C8189 +
            ((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C51086 +
            C11649 * C51085) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C10872 * C961 + C50979 * C966 + C10871 * C297 + C51058 * C307) *
                C295 -
            (C10872 * C967 + C50979 * C976 + C10871 * C308 + C51058 * C327) *
                C290 +
            (C10871 * C298 + C51058 * C309 + C10872 * C1707 + C50979 * C1711) *
                C296 +
            (C10871 * C310 + C51058 * C328 + C10872 * C1712 + C50979 * C1719) *
                C291) *
               C51085 +
           ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
            (C11110 + C11111) * C295 - (C11112 + C11113) * C290 +
            (C11114 + C11115) * C296 + (C11116 + C11117) * C291) *
               C51086 +
           (C10922 * C294 + C10923 * C289 - C11468 * C295 - C11469 * C290 +
            (C11122 + C11123) * C296 + (C11124 + C11125) * C291) *
               C8189) *
              C50904 * C50784 * C1821 +
          (((C10871 * C961 + C51058 * C966 + C10872 * C1327 + C50979 * C1331) *
                C295 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C289 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C294) +
            (C10871 * C967 + C51058 * C976 + C10872 * C1332 + C50979 * C1339) *
                C290 -
            (C10872 * C2803 + C50979 * C2806 + C10871 * C1707 +
             C51058 * C1711) *
                C296 -
            (C10872 * C2807 + C50979 * C2812 + C10871 * C1712 +
             C51058 * C1719) *
                C291) *
               C51085 +
           ((C11860 + C11861) * C295 -
            ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
            (C11862 + C11863) * C290 -
            (C10872 * C2804 + C50979 * C2808 + C10871 * C1708 +
             C51058 * C1713) *
                C296 -
            (C10872 * C2809 + C50979 * C2813 + C10871 * C1714 +
             C51058 * C1720) *
                C291) *
               C51086 +
           ((C11864 + C11865) * C295 - (C11641 * C289 + C11642 * C294) +
            (C11866 + C11867) * C290 -
            (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
             C51058 * C1715) *
                C296 -
            (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
             C51058 * C1721) *
                C291) *
               C8189) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 -
            (C117 * C297 + C50915 * C307) * C684 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
              C50904 * C51087 +
          ((C692 - (C691 + C690) + C693) * C107 +
           (C696 - (C695 + C694) + C697) * C108 +
           (C700 - (C699 + C698) + C701) * C109 +
           (C714 - (C704 + C705) + C715) * C110) *
              C50904 * C51088 +
          (C716 * C107 + C717 * C108 + (C705 + C704 - C714 - C715) * C109 +
           (C176 * C683 + C177 * C51044 - (C117 * C685 + C50915 * C686) * C684 -
            (C117 * C687 + C50915 * C688) * C50854) *
               C110) *
              C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C2434 +
            (C690 + C691 - C692 - C693) * C50768) *
               C2436 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C2434 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C2437 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C2434 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C2438) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C2434 +
            (C696 - (C695 + C694) + C697) * C50768) *
               C2436 +
           ((C2990 - (C2989 + C2988) + C2991) * C2434 +
            (C2996 - (C2997 + C2998) + C2999) * C50768) *
               C2437 +
           ((C2994 - (C2993 + C2992) + C2995) * C2434 +
            (C3000 - (C3001 + C3002) + C3003) * C50768) *
               C2438) *
              C51088 +
          ((C716 * C2434 + C717 * C50768) * C2436 +
           ((C2998 + C2997 - C2996 - C2999) * C2434 +
            (C376 * C683 + C377 * C51044 - C378 * C684 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3002 + C3001 - C3000 - C3003) * C2434 +
            (C378 * C683 + C379 * C51044 -
             (C117 * C1216 + C50915 * C1223) * C684 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 -
             (C117 * C297 + C50915 * C307) * C684 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
               C50904 * C292 +
           ((C692 - (C691 + C690) + C693) * C107 +
            (C696 - (C695 + C694) + C697) * C108 +
            (C700 - (C699 + C698) + C701) * C109 +
            (C714 - (C704 + C705) + C715) * C110) *
               C50904 * C50789) *
              C51045 +
          ((((C117 * C961 + C50915 * C966) * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C50904 * C292 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C828 * C683 + C829 * C51044 -
             (C117 * C965 + C50915 * C974) * C684 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C2434 +
             (C690 + C691 - C692 - C693) * C50768) *
                C2436 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C2434 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C2437 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C2434 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C2438) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C2434 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C2436 +
            ((C2990 - (C2989 + C2988) + C2991) * C2434 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C2437 +
            ((C2994 - (C2993 + C2992) + C2995) * C2434 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C2438) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C2434 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C2436 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C2434 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C2437 +
            (((C117 * C3353 + C50915 * C3356) * C684 -
              (C3387 * C51044 + C3386 * C683) +
              (C117 * C3357 + C50915 * C3362) * C50854) *
                 C2434 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C2438) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C2434 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C2436 +
            ((C3376 + C3375 - C3374 - C3377) * C2434 +
             (C1002 * C683 + C1003 * C51044 - C3156 * C684 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C3381 + C3380 - C3390 - C3391) * C2434 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C107 +
           (C384 - (C349 + C348) + C385 - C386 - C387) * C108 +
           (C388 - (C359 + C358) + C389 - C390 - C391) * C109 +
           ((C117 * C305 + C50915 * C323) * C295 - (C174 * C289 + C175 * C294) +
            (C117 * C324 + C50915 * C335) * C290 -
            (C117 * C306 + C50915 * C325) * C296 -
            (C117 * C326 + C50915 * C336) * C291) *
               C110) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50904 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50904 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50904 * C114 -
          (((C117 * C138 + C50915 * C146) * C50802 +
            (C117 * C125 + C50915 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C292 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C50789) *
              C489 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            ((C117 * C495 + C50915 * C508) * C118 +
             (C117 * C509 + C50915 * C525) * C50802) *
                C110) *
               C50904 * C50789 -
           ((C574 + C573) * C110 + (C572 + C571) * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C292) *
              C490 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C107 +
            (C575 + C576) * C108 + (C577 + C578) * C109 +
            (C579 + C580) * C110) *
               C50904 * C292 -
           (((C117 * C520 + C50915 * C531) * C50802 +
             (C117 * C501 + C50915 * C521) * C118) *
                C110 +
            (C580 + C579) * C109 + (C578 + C577) * C108 +
            (C576 + C575) * C107) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           (((C117 * C297 + C50915 * C307) * C118 +
             (C117 * C308 + C50915 * C327) * C50802) *
                C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           (((C117 * C298 + C50915 * C309) * C118 +
             (C117 * C310 + C50915 * C328) * C50802) *
                C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
           ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
              C113 +
          ((C188 * C2434 + C189 * C50768) * C2436 +
           ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
           ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C2434) *
               C2438 +
           ((C711 * C50802 + C710 * C118) * C50768 + (C2449 + C2448) * C2434) *
               C2437 +
           (C190 * C50768 + C191 * C2434) * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             (C117 * C2597 + C50915 * C2600) * C296 +
             (C117 * C2601 + C50915 * C2606) * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C2434 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C2436 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C2434 +
            (C374 * C295 - (C373 * C289 + C372 * C294) + C375 * C290 -
             C2650 * C296 - C2651 * C291) *
                C50768) *
               C2437 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C2434 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C292 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C50789) *
              C489 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 +
             (C1002 * C118 + C1003 * C50802) * C50768) *
                C2437 +
            ((C2836 + C2837) * C2434 +
             ((C117 * C1709 + C50915 * C1715) * C118 +
              (C117 * C1716 + C50915 * C1721) * C50802) *
                 C50768) *
                C2438) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             ((C117 * C1712 + C50915 * C1719) * C50802 +
              (C117 * C1707 + C50915 * C1711) * C118) *
                 C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             ((C117 * C967 + C50915 * C976) * C50802 +
              (C117 * C961 + C50915 * C966) * C118) *
                 C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C2434 +
             (C575 + C576) * C50768) *
                C2436 +
            (((C117 * C1327 + C50915 * C1331) * C118 +
              (C117 * C1332 + C50915 * C1339) * C50802) *
                 C2434 +
             (C2838 + C2839) * C50768) *
                C2437 +
            (((C117 * C2803 + C50915 * C2806) * C118 +
              (C117 * C2807 + C50915 * C2812) * C50802) *
                 C2434 +
             (C2840 + C2841) * C50768) *
                C2438) *
               C292 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C2434) *
                C2438 +
            (((C117 * C1336 + C50915 * C1341) * C50802 +
              (C117 * C1329 + C50915 * C1335) * C118) *
                 C50768 +
             (C2839 + C2838) * C2434) *
                C2437 +
            ((C578 + C577) * C50768 + (C576 + C575) * C2434) * C2436) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C51087 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C51088 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50904 * C682) *
              C51045 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C51088 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C51087 -
           (((C117 * C818 + C50915 * C820) * C50802 +
             (C117 * C817 + C50915 * C819) * C118) *
                C110 +
            (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
               C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C51087 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C51088 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C682) *
              C51045 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C51088 -
           (((C2837 + C2836) * C50768 +
             ((C117 * C1712 + C50915 * C1719) * C50802 +
              (C117 * C1707 + C50915 * C1711) * C118) *
                 C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             ((C117 * C967 + C50915 * C976) * C50802 +
              (C117 * C961 + C50915 * C966) * C118) *
                 C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C51087 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50904 * C112 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50904 * C113 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50904 * C114 -
          (((C117 * C138 + C50915 * C146) * C50802 +
            (C117 * C125 + C50915 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C107 +
           (C384 - (C349 + C348) + C385 - C386 - C387) * C108 +
           (C388 - (C359 + C358) + C389 - C390 - C391) * C109 +
           ((C117 * C305 + C50915 * C323) * C295 - (C174 * C289 + C175 * C294) +
            (C117 * C324 + C50915 * C335) * C290 -
            (C117 * C306 + C50915 * C325) * C296 -
            (C117 * C326 + C50915 * C336) * C291) *
               C110) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           (((C117 * C297 + C50915 * C307) * C118 +
             (C117 * C308 + C50915 * C327) * C50802) *
                C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           (((C117 * C298 + C50915 * C309) * C118 +
             (C117 * C310 + C50915 * C328) * C50802) *
                C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
           ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
              C113 +
          ((C188 * C2434 + C189 * C50768) * C2436 +
           ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
           ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C2434) *
               C2438 +
           ((C711 * C50802 + C710 * C118) * C50768 + (C2449 + C2448) * C2434) *
               C2437 +
           (C190 * C50768 + C191 * C2434) * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             (C117 * C2597 + C50915 * C2600) * C296 +
             (C117 * C2601 + C50915 * C2606) * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C2434 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C2436 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C2434 +
            (C374 * C295 - (C373 * C289 + C372 * C294) + C375 * C290 -
             C2650 * C296 - C2651 * C291) *
                C50768) *
               C2437 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C2434 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 -
            (C117 * C297 + C50915 * C307) * C1447 -
            (C117 * C308 + C50915 * C327) * C51090 +
            (C117 * C298 + C50915 * C309) * C1448 +
            (C117 * C310 + C50915 * C328) * C1443) *
               C107 +
           (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C108 +
           (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C109 +
           (C1462 + C1463 - C1464 - C1465 + C1466 + C1467) * C110) *
              C50904 * C51036 +
          ((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C107 +
           (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C108 +
           (C1464 - (C1463 + C1462) + C1465 - C1466 - C1467) * C109 +
           (C710 * C1447 - (C174 * C51089 + C175 * C1446) + C711 * C51090 -
            (C117 * C306 + C50915 * C325) * C1448 -
            (C117 * C326 + C50915 * C336) * C1443) *
               C110) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C2434 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
               C2436 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C2434 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
               C2437 +
           ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
             C3664 * C1448 + C3665 * C1443) *
                C2434 +
            (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
               C2438) *
              C51036 +
          (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C2434 +
            (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C50768) *
               C2436 +
           ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C2434 +
            (C374 * C1447 - (C373 * C51089 + C372 * C1446) + C375 * C51090 -
             C2650 * C1448 - C2651 * C1443) *
                C50768) *
               C2437 +
           ((C3986 - (C3985 + C3984) + C3987 - C3988 - C3989) * C2434 +
            (C2650 * C1447 - (C375 * C51089 + C374 * C1446) + C2651 * C51090 -
             (C117 * C2599 + C50915 * C2604) * C1448 -
             (C117 * C2605 + C50915 * C2608) * C1443) *
                C50768) *
               C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C50915 * C126) * C1446 +
                    (C117 * C127 + C50915 * C140) * C51089 -
                    (C117 * C297 + C50915 * C307) * C1447 -
                    (C117 * C308 + C50915 * C327) * C51090 +
                    (C117 * C298 + C50915 * C309) * C1448 +
                    (C117 * C310 + C50915 * C328) * C1443) *
                       C107 +
                   (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C108 +
                   (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C109 +
                   (C1462 + C1463 - C1464 - C1465 + C1466 + C1467) * C110) *
                      C50904 * C50784 * C51045 +
                  (((C117 * C961 + C50915 * C966) * C1447 -
                    ((C117 * C510 + C50915 * C526) * C51089 +
                     (C117 * C496 + C50915 * C511) * C1446) +
                    (C117 * C967 + C50915 * C976) * C51090 -
                    (C117 * C1707 + C50915 * C1711) * C1448 -
                    (C117 * C1712 + C50915 * C1719) * C1443) *
                       C107 +
                   (C1000 * C1447 - (C558 * C51089 + C557 * C1446) +
                    C1001 * C51090 - (C117 * C1708 + C50915 * C1713) * C1448 -
                    (C117 * C1714 + C50915 * C1720) * C1443) *
                       C108 +
                   (C1002 * C1447 - (C560 * C51089 + C559 * C1446) +
                    C1003 * C51090 - (C117 * C1709 + C50915 * C1715) * C1448 -
                    (C117 * C1716 + C50915 * C1721) * C1443) *
                       C109 +
                   (C1004 * C1447 - (C562 * C51089 + C561 * C1446) +
                    C1005 * C51090 - (C117 * C1710 + C50915 * C1717) * C1448 -
                    (C117 * C1718 + C50915 * C1722) * C1443) *
                       C110) *
                      C50904 * C50784 * C50882)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50915 * C126) * C1446 +
                     (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
                     C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                        C2434 +
                    (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
                       C2436 +
                   ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 -
                     C2643 * C51090 + C2644 * C1448 + C2645 * C1443) *
                        C2434 +
                    (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
                       C2437 +
                   ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 -
                     C2645 * C51090 + C3664 * C1448 + C3665 * C1443) *
                        C2434 +
                    (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
                       C2438) *
                      C50784 * C51045 +
                  (((C3384 * C1447 -
                     ((C117 * C510 + C50915 * C526) * C51089 +
                      (C117 * C496 + C50915 * C511) * C1446) +
                     C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                        C2434 +
                    (C1000 * C1447 - (C558 * C51089 + C557 * C1446) +
                     C1001 * C51090 - C2830 * C1448 - C2831 * C1443) *
                        C50768) *
                       C2436 +
                   ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) +
                     C3387 * C51090 - C4350 * C1448 - C4351 * C1443) *
                        C2434 +
                    (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) +
                     C2831 * C51090 - C3388 * C1448 - C3389 * C1443) *
                        C50768) *
                       C2437 +
                   ((C4350 * C1447 - (C3387 * C51089 + C3386 * C1446) +
                     C4351 * C51090 - (C117 * C4337 + C50915 * C4339) * C1448 -
                     (C117 * C4340 + C50915 * C4343) * C1443) *
                        C2434 +
                    (C3388 * C1447 - (C2831 * C51089 + C2830 * C1446) +
                     C3389 * C51090 - (C117 * C4338 + C50915 * C4341) * C1448 -
                     (C117 * C4342 + C50915 * C4344) * C1443) *
                        C50768) *
                       C2438) *
                      C50784 * C50882)) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 -
           (C117 * C297 + C50915 * C307) * C1210 -
           (C117 * C308 + C50915 * C327) * C1205 +
           (C117 * C298 + C50915 * C309) * C1211 +
           (C117 * C310 + C50915 * C328) * C1206 -
           (C117 * C1213 + C50915 * C1217) * C1212 -
           (C117 * C1218 + C50915 * C1225) * C1207) *
              C107 +
          (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
           C370 * C1211 + C371 * C1206 -
           (C117 * C1214 + C50915 * C1219) * C1212 -
           (C117 * C1220 + C50915 * C1226) * C1207) *
              C108 +
          (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
           C374 * C1211 + C375 * C1206 -
           (C117 * C1215 + C50915 * C1221) * C1212 -
           (C117 * C1222 + C50915 * C1227) * C1207) *
              C109 +
          (C172 * C1209 + C173 * C1204 - C376 * C1210 - C377 * C1205 +
           C378 * C1211 + C379 * C1206 -
           (C117 * C1216 + C50915 * C1223) * C1212 -
           (C117 * C1224 + C50915 * C1228) * C1207) *
              C110) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 -
            (C117 * C297 + C50915 * C307) * C1115 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
           C1138 * C110) *
              C50904 * C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C107 +
           (C1123 - (C1122 + C1121) + C1124) * C108 +
           (C1127 - (C1126 + C1125) + C1128) * C109 +
           (C1129 - (C1130 + C1131) + C1132) * C110) *
              C50904 * C1112 +
          (C1137 * C107 + C1138 * C108 +
           (C1131 + C1130 - C1129 - C1132) * C109 +
           (C176 * C1114 + C177 * C1109 -
            (C117 * C685 + C50915 * C686) * C1115 -
            (C117 * C687 + C50915 * C688) * C50854) *
               C110) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 -
            (C117 * C297 + C50915 * C307) * C1115 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
           C1138 * C110) *
              C50904 * C50784 * C489 +
          (((C117 * C961 + C50915 * C966) * C1115 -
            ((C117 * C510 + C50915 * C526) * C1109 +
             (C117 * C496 + C50915 * C511) * C1114) +
            (C117 * C967 + C50915 * C976) * C50854) *
               C107 +
           (C1000 * C1115 - (C558 * C1109 + C557 * C1114) + C1001 * C50854) *
               C108 +
           (C1002 * C1115 - (C560 * C1109 + C559 * C1114) + C1003 * C50854) *
               C109 +
           (C1004 * C1115 - (C562 * C1109 + C561 * C1114) + C1005 * C50854) *
               C110) *
              C50904 * C50784 * C490 +
          (((C117 * C497 + C50915 * C512) * C1114 +
            (C117 * C513 + C50915 * C527) * C1109 -
            (C117 * C1327 + C50915 * C1331) * C1115 -
            (C117 * C1332 + C50915 * C1339) * C50854) *
               C107 +
           (C563 * C1114 + C564 * C1109 -
            (C117 * C1328 + C50915 * C1333) * C1115 -
            (C117 * C1334 + C50915 * C1340) * C50854) *
               C108 +
           (C565 * C1114 + C566 * C1109 -
            (C117 * C1329 + C50915 * C1335) * C1115 -
            (C117 * C1336 + C50915 * C1341) * C50854) *
               C109 +
           (C567 * C1114 + C568 * C1109 -
            (C117 * C1330 + C50915 * C1337) * C1115 -
            (C117 * C1338 + C50915 * C1342) * C50854) *
               C110) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C2434 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C2436 +
           ((C3540 - (C3539 + C3538) + C3541) * C2434 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C2437 +
           ((C3544 - (C3543 + C3542) + C3545) * C2434 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C2438) *
              C1112 +
          ((C1137 * C2434 + C1138 * C50768) * C2436 +
           ((C3548 + C3547 - C3546 - C3549) * C2434 +
            (C376 * C1114 + C377 * C1109 - C378 * C1115 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3552 + C3551 - C3550 - C3553) * C2434 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C2434 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C2436 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C2434 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C2437 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 -
            (C117 * C3651 + C50915 * C3653) * C1212 -
            (C117 * C3654 + C50915 * C3657) * C1207) *
               C2434 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C2434 +
            (C1598 - (C1599 + C1600) + C1601) * C50768) *
               C2436 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C2434 +
            (C2830 * C1115 - (C1001 * C1109 + C1000 * C1114) + C2831 * C50854) *
                C50768) *
               C2437 +
           (((C117 * C3353 + C50915 * C3356) * C1115 -
             (C3387 * C1109 + C3386 * C1114) +
             (C117 * C3357 + C50915 * C3362) * C50854) *
                C2434 +
            (C3388 * C1115 - (C2831 * C1109 + C2830 * C1114) + C3389 * C50854) *
                C50768) *
               C2438) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C2434 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C50768) *
               C2436 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C2434 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C50768) *
               C2437 +
           ((C3830 * C1114 + C3831 * C1109 -
             (C117 * C3811 + C50915 * C3813) * C1115 -
             (C117 * C3814 + C50915 * C3817) * C50854) *
                C2434 +
            (C2834 * C1114 + C2835 * C1109 -
             (C117 * C3812 + C50915 * C3815) * C1115 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C2438) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 -
             (C117 * C297 + C50915 * C307) * C1115 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
            C1138 * C110) *
               C50904 * C51036 +
           ((C1119 - (C1118 + C1117) + C1120) * C107 +
            (C1123 - (C1122 + C1121) + C1124) * C108 +
            (C1127 - (C1126 + C1125) + C1128) * C109 +
            (C1129 - (C1130 + C1131) + C1132) * C110) *
               C50904 * C50789) *
              C51045 +
          ((((C117 * C961 + C50915 * C966) * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1598 - (C1599 + C1600) + C1601) * C108 +
            (C1602 - (C1603 + C1604) + C1605) * C109 +
            (C1606 - (C1607 + C1608) + C1609) * C110) *
               C50904 * C51036 +
           ((C1600 + C1599 - C1598 - C1601) * C107 +
            (C1604 + C1603 - C1602 - C1605) * C108 +
            (C1608 + C1607 - C1606 - C1609) * C109 +
            (C828 * C1114 + C829 * C1109 -
             (C117 * C965 + C50915 * C974) * C1115 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C2434 +
             (C1117 + C1118 - C1119 - C1120) * C50768) *
                C2436 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C2434 +
             (C3538 + C3539 - C3540 - C3541) * C50768) *
                C2437 +
            ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                 C2434 +
             (C3542 + C3543 - C3544 - C3545) * C50768) *
                C2438) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C2434 +
             (C1123 - (C1122 + C1121) + C1124) * C50768) *
                C2436 +
            ((C3540 - (C3539 + C3538) + C3541) * C2434 +
             (C3546 - (C3547 + C3548) + C3549) * C50768) *
                C2437 +
            ((C3544 - (C3543 + C3542) + C3545) * C2434 +
             (C3550 - (C3551 + C3552) + C3553) * C50768) *
                C2438) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C2434 +
             (C1598 - (C1599 + C1600) + C1601) * C50768) *
                C2436 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C2434 +
             (C4184 - (C4185 + C4186) + C4187) * C50768) *
                C2437 +
            (((C117 * C3353 + C50915 * C3356) * C1115 -
              (C3387 * C1109 + C3386 * C1114) +
              (C117 * C3357 + C50915 * C3362) * C50854) *
                 C2434 +
             (C4188 - (C4189 + C4190) + C4191) * C50768) *
                C2438) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C2434 +
             (C1604 + C1603 - C1602 - C1605) * C50768) *
                C2436 +
            ((C4186 + C4185 - C4184 - C4187) * C2434 +
             (C1002 * C1114 + C1003 * C1109 - C3156 * C1115 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C4190 + C4189 - C4188 - C4191) * C2434 +
             (C3156 * C1114 + C3157 * C1109 -
              (C117 * C3355 + C50915 * C3360) * C1115 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 -
            (C117 * C297 + C50915 * C307) * C1115 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C1117 + C1118 - C1119 - C1120) * C108 + C1137 * C109 +
           C1138 * C110) *
              C50904 * C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C107 +
           (C1123 - (C1122 + C1121) + C1124) * C108 +
           (C1127 - (C1126 + C1125) + C1128) * C109 +
           (C1129 - (C1130 + C1131) + C1132) * C110) *
              C50904 * C1112 +
          (C1137 * C107 + C1138 * C108 +
           (C1131 + C1130 - C1129 - C1132) * C109 +
           (C176 * C1114 + C177 * C1109 -
            (C117 * C685 + C50915 * C686) * C1115 -
            (C117 * C687 + C50915 * C688) * C50854) *
               C110) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 -
           (C117 * C297 + C50915 * C307) * C1210 -
           (C117 * C308 + C50915 * C327) * C1205 +
           (C117 * C298 + C50915 * C309) * C1211 +
           (C117 * C310 + C50915 * C328) * C1206 -
           (C117 * C1213 + C50915 * C1217) * C1212 -
           (C117 * C1218 + C50915 * C1225) * C1207) *
              C107 +
          (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
           C370 * C1211 + C371 * C1206 -
           (C117 * C1214 + C50915 * C1219) * C1212 -
           (C117 * C1220 + C50915 * C1226) * C1207) *
              C108 +
          (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
           C374 * C1211 + C375 * C1206 -
           (C117 * C1215 + C50915 * C1221) * C1212 -
           (C117 * C1222 + C50915 * C1227) * C1207) *
              C109 +
          (C172 * C1209 + C173 * C1204 - C376 * C1210 - C377 * C1205 +
           C378 * C1211 + C379 * C1206 -
           (C117 * C1216 + C50915 * C1223) * C1212 -
           (C117 * C1224 + C50915 * C1228) * C1207) *
              C110) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C2434 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C2436 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C2434 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C2437 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C2434 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C2438) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C2434 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C2436 +
           ((C3540 - (C3539 + C3538) + C3541) * C2434 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C2437 +
           ((C3544 - (C3543 + C3542) + C3545) * C2434 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C2438) *
              C1112 +
          ((C1137 * C2434 + C1138 * C50768) * C2436 +
           ((C3548 + C3547 - C3546 - C3549) * C2434 +
            (C376 * C1114 + C377 * C1109 - C378 * C1115 - C379 * C50854) *
                C50768) *
               C2437 +
           ((C3552 + C3551 - C3550 - C3553) * C2434 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C2434 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C2436 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C2434 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C2437 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 -
            (C117 * C3651 + C50915 * C3653) * C1212 -
            (C117 * C3654 + C50915 * C3657) * C1207) *
               C2434 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 -
             (C117 * C297 + C50915 * C307) * C684 -
             (C117 * C308 + C50915 * C327) * C50854) *
                C107 +
            (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
               C50904 * C51036 +
           ((C692 - (C691 + C690) + C693) * C107 +
            (C696 - (C695 + C694) + C697) * C108 +
            (C700 - (C699 + C698) + C701) * C109 +
            (C714 - (C704 + C705) + C715) * C110) *
               C50904 * C50789) *
              C1821 +
          ((((C117 * C961 + C50915 * C966) * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             (C117 * C967 + C50915 * C976) * C50854) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C50904 * C51036 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C828 * C683 + C829 * C51044 -
             (C117 * C965 + C50915 * C974) * C684 -
             (C117 * C975 + C50915 * C980) * C50854) *
                C110) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C2434 +
             (C690 + C691 - C692 - C693) * C50768) *
                C2436 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C2434 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C2437 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C2434 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C2438) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C2434 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C2436 +
            ((C2990 - (C2989 + C2988) + C2991) * C2434 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C2437 +
            ((C2994 - (C2993 + C2992) + C2995) * C2434 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C2438) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C2434 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C2436 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C2434 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C2437 +
            ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                 C2434 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C2438) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C2434 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C2436 +
            ((C3376 + C3375 - C3374 - C3377) * C2434 +
             (C1002 * C683 + C1003 * C51044 - C3156 * C684 - C3157 * C50854) *
                 C50768) *
                C2437 +
            ((C3381 + C3380 - C3390 - C3391) * C2434 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 -
            (C117 * C297 + C50915 * C307) * C684 -
            (C117 * C308 + C50915 * C327) * C50854) *
               C107 +
           (C690 + C691 - C692 - C693) * C108 + C716 * C109 + C717 * C110) *
              C50904 * C50784 * C51091 +
          (((C117 * C961 + C50915 * C966) * C684 -
            ((C117 * C510 + C50915 * C526) * C51044 +
             (C117 * C496 + C50915 * C511) * C683) +
            (C117 * C967 + C50915 * C976) * C50854) *
               C107 +
           (C1006 - (C984 + C985) + C1007) * C108 +
           (C1008 - (C990 + C991) + C1009) * C109 +
           (C1010 - (C996 + C997) + C1011) * C110) *
              C50904 * C50784 * C51092 +
          (((C117 * C497 + C50915 * C512) * C683 +
            (C117 * C513 + C50915 * C527) * C51044 -
            (C117 * C1327 + C50915 * C1331) * C684 -
            (C117 * C1332 + C50915 * C1339) * C50854) *
               C107 +
           (C563 * C683 + C564 * C51044 -
            (C117 * C1328 + C50915 * C1333) * C684 -
            (C117 * C1334 + C50915 * C1340) * C50854) *
               C108 +
           (C565 * C683 + C566 * C51044 -
            (C117 * C1329 + C50915 * C1335) * C684 -
            (C117 * C1336 + C50915 * C1341) * C50854) *
               C109 +
           (C567 * C683 + C568 * C51044 -
            (C117 * C1330 + C50915 * C1337) * C684 -
            (C117 * C1338 + C50915 * C1342) * C50854) *
               C110) *
              C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C2434 +
            (C690 + C691 - C692 - C693) * C50768) *
               C2436 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C2434 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C2437 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C2434 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C2438) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C2434 +
            (C1006 - (C984 + C985) + C1007) * C50768) *
               C2436 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C2434 +
            (C3374 - (C3375 + C3376) + C3377) * C50768) *
               C2437 +
           ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C2434 +
            (C3390 - (C3380 + C3381) + C3391) * C50768) *
               C2438) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C2434 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C50768) *
               C2436 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C2434 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C50768) *
               C2437 +
           ((C3830 * C683 + C3831 * C51044 -
             (C117 * C3811 + C50915 * C3813) * C684 -
             (C117 * C3814 + C50915 * C3817) * C50854) *
                C2434 +
            (C2834 * C683 + C2835 * C51044 -
             (C117 * C3812 + C50915 * C3815) * C684 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C2438) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C50784 * C1821 +
          (((C117 * C961 + C50915 * C966) * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            (C117 * C967 + C50915 * C976) * C290 -
            (C117 * C1707 + C50915 * C1711) * C296 -
            (C117 * C1712 + C50915 * C1719) * C291) *
               C107 +
           (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
            (C117 * C1708 + C50915 * C1713) * C296 -
            (C117 * C1714 + C50915 * C1720) * C291) *
               C108 +
           (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
            (C117 * C1709 + C50915 * C1715) * C296 -
            (C117 * C1716 + C50915 * C1721) * C291) *
               C109 +
           (C1004 * C295 - (C562 * C289 + C561 * C294) + C1005 * C290 -
            (C117 * C1710 + C50915 * C1717) * C296 -
            (C117 * C1718 + C50915 * C1722) * C291) *
               C110) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C1111 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C1112 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50904 * C1113) *
              C1821 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C1112 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C1111 -
           (((C117 * C818 + C50915 * C820) * C50802 +
             (C117 * C817 + C50915 * C819) * C118) *
                C110 +
            (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50904 * C50784 * C1987 -
          (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
           ((C117 * C510 + C50915 * C526) * C50802 +
            (C117 * C496 + C50915 * C511) * C118) *
               C107) *
              C50904 * C50784 * C1988 +
          (((C117 * C497 + C50915 * C512) * C118 +
            (C117 * C513 + C50915 * C527) * C50802) *
               C107 +
           (C575 + C576) * C108 + (C577 + C578) * C109 + (C579 + C580) * C110) *
              C50904 * C50784 * C1989 -
          (((C117 * C1995 + C50915 * C2003) * C50802 +
            (C117 * C1991 + C50915 * C1996) * C118) *
               C110 +
           ((C117 * C1997 + C50915 * C2004) * C50802 +
            (C117 * C1992 + C50915 * C1998) * C118) *
               C109 +
           ((C117 * C1999 + C50915 * C2005) * C50802 +
            (C117 * C1993 + C50915 * C2000) * C118) *
               C108 +
           ((C117 * C2001 + C50915 * C2006) * C50802 +
            (C117 * C1994 + C50915 * C2002) * C118) *
               C107) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C1112 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C2434 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C2436 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C2434 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C2437 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             (C117 * C4337 + C50915 * C4339) * C296 -
             (C117 * C4340 + C50915 * C4343) * C291) *
                C2434 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C2434 +
            (C178 + C179) * C50768) *
               C2436 +
           ((C2640 * C118 + C2641 * C50802) * C2434 +
            (C2440 + C2441) * C50768) *
               C2437 +
           ((C2642 * C118 + C2643 * C50802) * C2434 +
            (C2442 + C2443) * C50768) *
               C2438) *
              C50784 * C1987 -
          (((C2837 + C2836) * C50768 +
            (C3387 * C50802 + C3386 * C118) * C2434) *
               C2438 +
           ((C2817 + C2816) * C50768 +
            (C3385 * C50802 + C3384 * C118) * C2434) *
               C2437 +
           ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                      (C117 * C496 + C50915 * C511) * C118) *
                                         C2434) *
               C2436) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C2434 +
            (C575 + C576) * C50768) *
               C2436 +
           ((C3828 * C118 + C3829 * C50802) * C2434 +
            (C2838 + C2839) * C50768) *
               C2437 +
           ((C3830 * C118 + C3831 * C50802) * C2434 +
            (C2840 + C2841) * C50768) *
               C2438) *
              C50784 * C1989 -
          ((((C117 * C4745 + C50915 * C4753) * C50802 +
             (C117 * C4741 + C50915 * C4746) * C118) *
                C50768 +
            ((C117 * C4747 + C50915 * C4754) * C50802 +
             (C117 * C4742 + C50915 * C4748) * C118) *
                C2434) *
               C2438 +
           (((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C50768 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C2434) *
               C2437 +
           (((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C50768 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C2434) *
               C2436) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C51036 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C50789) *
              C51091 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C50789 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C51036) *
              C51092 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C107 +
            (C575 + C576) * C108 + (C577 + C578) * C109 +
            (C579 + C580) * C110) *
               C50904 * C51036 -
           (((C117 * C520 + C50915 * C531) * C50802 +
             (C117 * C501 + C50915 * C521) * C118) *
                C110 +
            (C580 + C579) * C109 + (C578 + C577) * C108 +
            (C576 + C575) * C107) *
               C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C51036 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C2434 +
             (C575 + C576) * C50768) *
                C2436 +
            ((C3828 * C118 + C3829 * C50802) * C2434 +
             (C2838 + C2839) * C50768) *
                C2437 +
            ((C3830 * C118 + C3831 * C50802) * C2434 +
             (C2840 + C2841) * C50768) *
                C2438) *
               C51036 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C2434) *
                C2438 +
            (((C117 * C1336 + C50915 * C1341) * C50802 +
              (C117 * C1329 + C50915 * C1335) * C118) *
                 C50768 +
             (C2839 + C2838) * C2434) *
                C2437 +
            ((C578 + C577) * C50768 + (C576 + C575) * C2434) * C2436) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50904 * C1111 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50904 * C1112 +
           (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50904 * C1113) *
              C1821 +
          (((C569 + C570) * C107 + (C571 + C572) * C108 + (C573 + C574) * C109 +
            (C830 + C831) * C110) *
               C50904 * C1112 -
           (C826 * C110 + C827 * C109 + (C570 + C569) * C108 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C107) *
               C50904 * C1111 -
           (((C117 * C818 + C50915 * C820) * C50802 +
             (C117 * C817 + C50915 * C819) * C118) *
                C110 +
            (C831 + C830) * C109 + C826 * C108 + C827 * C107) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 -
            (C117 * C297 + C50915 * C307) * C295 -
            (C117 * C308 + C50915 * C327) * C290 +
            (C117 * C298 + C50915 * C309) * C296 +
            (C117 * C310 + C50915 * C328) * C291) *
               C107 +
           (C338 + C339 - C380 - C381 + C382 + C383) * C108 +
           (C348 + C349 - C384 - C385 + C386 + C387) * C109 +
           (C358 + C359 - C388 - C389 + C390 + C391) * C110) *
              C50904 * C50784 * C1821 +
          (((C117 * C961 + C50915 * C966) * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            (C117 * C967 + C50915 * C976) * C290 -
            (C117 * C1707 + C50915 * C1711) * C296 -
            (C117 * C1712 + C50915 * C1719) * C291) *
               C107 +
           (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
            (C117 * C1708 + C50915 * C1713) * C296 -
            (C117 * C1714 + C50915 * C1720) * C291) *
               C108 +
           (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
            (C117 * C1709 + C50915 * C1715) * C296 -
            (C117 * C1716 + C50915 * C1721) * C291) *
               C109 +
           (C1004 * C295 - (C562 * C289 + C561 * C294) + C1005 * C290 -
            (C117 * C1710 + C50915 * C1717) * C296 -
            (C117 * C1718 + C50915 * C1722) * C291) *
               C110) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C2434 +
             (C178 + C179) * C50768) *
                C2436 +
            ((C2640 * C118 + C2641 * C50802) * C2434 +
             (C2440 + C2441) * C50768) *
                C2437 +
            ((C2642 * C118 + C2643 * C50802) * C2434 +
             (C2442 + C2443) * C50768) *
                C2438) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C2434) * C2438 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C2434) * C2437 +
            ((C181 + C180) * C50768 + (C179 + C178) * C2434) * C2436) *
               C1112 +
           ((C188 * C2434 + C189 * C50768) * C2436 +
            ((C2447 + C2446) * C2434 + (C2448 + C2449) * C50768) * C2437 +
            ((C2445 + C2444) * C2434 + (C2450 + C2451) * C50768) * C2438) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C2434 + (C571 + C572) * C50768) * C2436 +
            ((C2816 + C2817) * C2434 + (C3150 + C3151) * C50768) * C2437 +
            ((C2836 + C2837) * C2434 + (C3158 + C3159) * C50768) * C2438) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C2434) *
                C2438 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C2434) *
                C2437 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C2434) *
                C2436) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C2434) *
                C2438 +
            ((C1005 * C50802 + C1004 * C118) * C50768 +
             (C3151 + C3150) * C2434) *
                C2437 +
            (C826 * C50768 + C827 * C2434) * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C2434 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C2436 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C2434 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C2437 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C2434 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C2438) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C2434 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C2436 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C2434 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C2437 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             (C117 * C4337 + C50915 * C4339) * C296 -
             (C117 * C4340 + C50915 * C4343) * C291) *
                C2434 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C51029 +
            (C690 + C691 - C692 - C693) * C50768) *
               C51093 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C51029 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C51094 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C51029 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C24522) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C51029 +
            (C696 - (C695 + C694) + C697) * C50768) *
               C51093 +
           ((C2990 - (C2989 + C2988) + C2991) * C51029 +
            (C2996 - (C2997 + C2998) + C2999) * C50768) *
               C51094 +
           ((C2994 - (C2993 + C2992) + C2995) * C51029 +
            (C3000 - (C3001 + C3002) + C3003) * C50768) *
               C24522) *
              C51088 +
          ((C716 * C51029 + C717 * C50768) * C51093 +
           (C8655 * C51029 + (C8652 + C8651 - C8650 - C8653) * C50768) *
               C51094 +
           ((C3002 + C3001 - C3000 - C3003) * C51029 +
            (C378 * C683 + C379 * C51044 -
             (C117 * C1216 + C50915 * C1223) * C684 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C24522) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C51029 +
             (C690 + C691 - C692 - C693) * C50768) *
                C51093 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C51029 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C51094 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C51029 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C24522) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C51029 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C51093 +
            ((C2990 - (C2989 + C2988) + C2991) * C51029 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C51094 +
            ((C2994 - (C2993 + C2992) + C2995) * C51029 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C24522) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C51029 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C51093 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C51029 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C51094 +
            ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                 C51029 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C24522) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C51029 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C51093 +
            ((C3376 + C3375 - C3374 - C3377) * C51029 +
             (C9001 + C9000 - C8999 - C9002) * C50768) *
                C51094 +
            ((C3381 + C3380 - C3390 - C3391) * C51029 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51029 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C51093 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51029 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C51094 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C51029 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C24522) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C51029 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C51093 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C51029 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C50768) *
               C51094 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C51029 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C24522) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51029 +
            (C178 + C179) * C50768) *
               C51093 +
           ((C2640 * C118 + C2641 * C50802) * C51029 +
            (C2440 + C2441) * C50768) *
               C51094 +
           ((C2642 * C118 + C2643 * C50802) * C51029 +
            (C2442 + C2443) * C50768) *
               C24522) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
           ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
              C113 +
          ((C188 * C51029 + C189 * C50768) * C51093 +
           (C8193 * C51029 + (C2448 + C2449) * C50768) * C51094 +
           ((C2445 + C2444) * C51029 + (C2450 + C2451) * C50768) * C24522) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C51029) *
               C24522 +
           ((C8196 + C8195) * C50768 + C8194 * C51029) * C51094 +
           (C190 * C50768 + C191 * C51029) * C51093) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51029 +
             (C178 + C179) * C50768) *
                C51093 +
            ((C2640 * C118 + C2641 * C50802) * C51029 +
             (C2440 + C2441) * C50768) *
                C51094 +
            ((C2642 * C118 + C2643 * C50802) * C51029 +
             (C2442 + C2443) * C50768) *
                C24522) *
               C292 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
            ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
               C50789) *
              C489 +
          ((((C569 + C570) * C51029 + (C571 + C572) * C50768) * C51093 +
            ((C2816 + C2817) * C51029 + (C3150 + C3151) * C50768) * C51094 +
            ((C2836 + C2837) * C51029 + (C3158 + C3159) * C50768) * C24522) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C51029) *
                C24522 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C51029) *
                C51094 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C51029) *
                C51093) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C51029 +
             (C575 + C576) * C50768) *
                C51093 +
            ((C3828 * C118 + C3829 * C50802) * C51029 +
             (C2838 + C2839) * C50768) *
                C51094 +
            ((C3830 * C118 + C3831 * C50802) * C51029 +
             (C2840 + C2841) * C50768) *
                C24522) *
               C292 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C51029) *
                C24522 +
            ((C8502 + C8501) * C50768 + (C2839 + C2838) * C51029) * C51094 +
            ((C578 + C577) * C50768 + (C576 + C575) * C51029) * C51093) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51029 +
             (C178 + C179) * C50768) *
                C51093 +
            ((C2640 * C118 + C2641 * C50802) * C51029 +
             (C2440 + C2441) * C50768) *
                C51094 +
            ((C2642 * C118 + C2643 * C50802) * C51029 +
             (C2442 + C2443) * C50768) *
                C24522) *
               C51087 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
            ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
               C51088 +
           ((C188 * C51029 + C189 * C50768) * C51093 +
            (C8193 * C51029 + (C2448 + C2449) * C50768) * C51094 +
            ((C2445 + C2444) * C51029 + (C2450 + C2451) * C50768) * C24522) *
               C682) *
              C51045 +
          ((((C569 + C570) * C51029 + (C571 + C572) * C50768) * C51093 +
            ((C2816 + C2817) * C51029 + (C3150 + C3151) * C50768) * C51094 +
            ((C2836 + C2837) * C51029 + (C3158 + C3159) * C50768) * C24522) *
               C51088 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C51029) *
                C24522 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C51029) *
                C51094 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C51029) *
                C51093) *
               C51087 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C51029) *
                C24522 +
            ((C8803 + C8802) * C50768 + C8804 * C51029) * C51094 +
            (C826 * C50768 + C827 * C51029) * C51093) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51029 +
            (C178 + C179) * C50768) *
               C51093 +
           ((C2640 * C118 + C2641 * C50802) * C51029 +
            (C2440 + C2441) * C50768) *
               C51094 +
           ((C2642 * C118 + C2643 * C50802) * C51029 +
            (C2442 + C2443) * C50768) *
               C24522) *
              C112 -
          (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
           ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
           ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
              C113 +
          ((C188 * C51029 + C189 * C50768) * C51093 +
           (C8193 * C51029 + (C2448 + C2449) * C50768) * C51094 +
           ((C2445 + C2444) * C51029 + (C2450 + C2451) * C50768) * C24522) *
              C114 -
          ((((C117 * C326 + C50915 * C336) * C50802 +
             (C117 * C306 + C50915 * C325) * C118) *
                C50768 +
            (C2451 + C2450) * C51029) *
               C24522 +
           ((C8196 + C8195) * C50768 + C8194 * C51029) * C51094 +
           (C190 * C50768 + C191 * C51029) * C51093) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51029 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C51093 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51029 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C51094 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C51029 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C24522) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C51029 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C50768) *
               C51093 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C51029 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C50768) *
               C51094 +
           ((C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C51029 +
            (C2650 * C295 - (C375 * C289 + C374 * C294) + C2651 * C290 -
             (C117 * C2599 + C50915 * C2604) * C296 -
             (C117 * C2605 + C50915 * C2608) * C291) *
                C50768) *
               C24522) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C51029 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
               C51093 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C51029 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
               C51094 +
           ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
             C3664 * C1448 + C3665 * C1443) *
                C51029 +
            (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
               C24522) *
              C51036 +
          (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C51029 +
            (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C50768) *
               C51093 +
           ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C51029 +
            (C9548 - (C9547 + C9546) + C9549 - C9550 - C9551) * C50768) *
               C51094 +
           ((C3986 - (C3985 + C3984) + C3987 - C3988 - C3989) * C51029 +
            (C2650 * C1447 - (C375 * C51089 + C374 * C1446) + C2651 * C51090 -
             (C117 * C2599 + C50915 * C2604) * C1448 -
             (C117 * C2605 + C50915 * C2608) * C1443) *
                C50768) *
               C24522) *
              C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50915 * C126) * C1446 +
                     (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
                     C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                        C51029 +
                    (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C50768) *
                       C51093 +
                   ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 -
                     C2643 * C51090 + C2644 * C1448 + C2645 * C1443) *
                        C51029 +
                    (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C50768) *
                       C51094 +
                   ((C2642 * C1446 + C2643 * C51089 - C2644 * C1447 -
                     C2645 * C51090 + C3664 * C1448 + C3665 * C1443) *
                        C51029 +
                    (C3984 + C3985 - C3986 - C3987 + C3988 + C3989) * C50768) *
                       C24522) *
                      C50784 * C51045 +
                  (((C3384 * C1447 -
                     ((C117 * C510 + C50915 * C526) * C51089 +
                      (C117 * C496 + C50915 * C511) * C1446) +
                     C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                        C51029 +
                    (C1000 * C1447 - (C558 * C51089 + C557 * C1446) +
                     C1001 * C51090 - C2830 * C1448 - C2831 * C1443) *
                        C50768) *
                       C51093 +
                   ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) +
                     C3387 * C51090 - C4350 * C1448 - C4351 * C1443) *
                        C51029 +
                    (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) +
                     C2831 * C51090 - C3388 * C1448 - C3389 * C1443) *
                        C50768) *
                       C51094 +
                   ((C4350 * C1447 - (C3387 * C51089 + C3386 * C1446) +
                     C4351 * C51090 - C21083 * C1448 - C21084 * C1443) *
                        C51029 +
                    (C3388 * C1447 - (C2831 * C51089 + C2830 * C1446) +
                     C3389 * C51090 - (C117 * C4338 + C50915 * C4341) * C1448 -
                     (C117 * C4342 + C50915 * C4344) * C1443) *
                        C50768) *
                       C24522) *
                      C50784 * C50882)) /
                (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C51029 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C51093 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C51029 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C51094 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
               C51029 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C24522) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51029 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C51093 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51029 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C51094 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C51029 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C24522) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C51029 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C51093 +
           ((C3540 - (C3539 + C3538) + C3541) * C51029 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C51094 +
           ((C3544 - (C3543 + C3542) + C3545) * C51029 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C24522) *
              C1112 +
          ((C1137 * C51029 + C1138 * C50768) * C51093 +
           (C9155 * C51029 + (C9152 + C9151 - C9150 - C9153) * C50768) *
               C51094 +
           ((C3552 + C3551 - C3550 - C3553) * C51029 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C24522) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51029 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C51093 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51029 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C51094 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C51029 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C24522) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C51029 +
            (C1598 - (C1599 + C1600) + C1601) * C50768) *
               C51093 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C51029 +
            (C4184 - (C4185 + C4186) + C4187) * C50768) *
               C51094 +
           ((C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) + C4351 * C50854) *
                C51029 +
            (C4188 - (C4189 + C4190) + C4191) * C50768) *
               C24522) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C51029 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C50768) *
               C51093 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C51029 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C50768) *
               C51094 +
           ((C3830 * C1114 + C3831 * C1109 - C20747 * C1115 - C20748 * C50854) *
                C51029 +
            (C2834 * C1114 + C2835 * C1109 -
             (C117 * C3812 + C50915 * C3815) * C1115 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C24522) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C51029 +
             (C1117 + C1118 - C1119 - C1120) * C50768) *
                C51093 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C51029 +
             (C3538 + C3539 - C3540 - C3541) * C50768) *
                C51094 +
            ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                 C51029 +
             (C3542 + C3543 - C3544 - C3545) * C50768) *
                C24522) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C51029 +
             (C1123 - (C1122 + C1121) + C1124) * C50768) *
                C51093 +
            ((C3540 - (C3539 + C3538) + C3541) * C51029 +
             (C3546 - (C3547 + C3548) + C3549) * C50768) *
                C51094 +
            ((C3544 - (C3543 + C3542) + C3545) * C51029 +
             (C3550 - (C3551 + C3552) + C3553) * C50768) *
                C24522) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C51029 +
             (C1598 - (C1599 + C1600) + C1601) * C50768) *
                C51093 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C51029 +
             (C4184 - (C4185 + C4186) + C4187) * C50768) *
                C51094 +
            ((C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) +
              C4351 * C50854) *
                 C51029 +
             (C4188 - (C4189 + C4190) + C4191) * C50768) *
                C24522) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C51029 +
             (C1604 + C1603 - C1602 - C1605) * C50768) *
                C51093 +
            ((C4186 + C4185 - C4184 - C4187) * C51029 +
             (C9748 + C9747 - C9746 - C9749) * C50768) *
                C51094 +
            ((C4190 + C4189 - C4188 - C4191) * C51029 +
             (C3156 * C1114 + C3157 * C1109 -
              (C117 * C3355 + C50915 * C3360) * C1115 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C51029 +
            (C1117 + C1118 - C1119 - C1120) * C50768) *
               C51093 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C51029 +
            (C3538 + C3539 - C3540 - C3541) * C50768) *
               C51094 +
           ((C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C51029 +
            (C3542 + C3543 - C3544 - C3545) * C50768) *
               C24522) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C51029 +
            (C1123 - (C1122 + C1121) + C1124) * C50768) *
               C51093 +
           ((C3540 - (C3539 + C3538) + C3541) * C51029 +
            (C3546 - (C3547 + C3548) + C3549) * C50768) *
               C51094 +
           ((C3544 - (C3543 + C3542) + C3545) * C51029 +
            (C3550 - (C3551 + C3552) + C3553) * C50768) *
               C24522) *
              C1112 +
          ((C1137 * C51029 + C1138 * C50768) * C51093 +
           (C9155 * C51029 + (C9152 + C9151 - C9150 - C9153) * C50768) *
               C51094 +
           ((C3552 + C3551 - C3550 - C3553) * C51029 +
            (C378 * C1114 + C379 * C1109 -
             (C117 * C1216 + C50915 * C1223) * C1115 -
             (C117 * C1224 + C50915 * C1228) * C50854) *
                C50768) *
               C24522) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C51029 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C50768) *
              C51093 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C51029 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C50768) *
              C51094 +
          ((C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
            C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
               C51029 +
           (C370 * C1209 + C371 * C1204 - C2646 * C1210 - C2647 * C1205 +
            C2648 * C1211 + C2649 * C1206 -
            (C117 * C3652 + C50915 * C3655) * C1212 -
            (C117 * C3656 + C50915 * C3658) * C1207) *
               C50768) *
              C24522) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C51029 +
             (C690 + C691 - C692 - C693) * C50768) *
                C51093 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C51029 +
             (C2988 + C2989 - C2990 - C2991) * C50768) *
                C51094 +
            ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                 C51029 +
             (C2992 + C2993 - C2994 - C2995) * C50768) *
                C24522) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C51029 +
             (C696 - (C695 + C694) + C697) * C50768) *
                C51093 +
            ((C2990 - (C2989 + C2988) + C2991) * C51029 +
             (C2996 - (C2997 + C2998) + C2999) * C50768) *
                C51094 +
            ((C2994 - (C2993 + C2992) + C2995) * C51029 +
             (C3000 - (C3001 + C3002) + C3003) * C50768) *
                C24522) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C51029 +
             (C1006 - (C984 + C985) + C1007) * C50768) *
                C51093 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C51029 +
             (C3374 - (C3375 + C3376) + C3377) * C50768) *
                C51094 +
            ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                 C51029 +
             (C3390 - (C3380 + C3381) + C3391) * C50768) *
                C24522) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C51029 +
             (C991 + C990 - C1008 - C1009) * C50768) *
                C51093 +
            ((C3376 + C3375 - C3374 - C3377) * C51029 +
             (C9001 + C9000 - C8999 - C9002) * C50768) *
                C51094 +
            ((C3381 + C3380 - C3390 - C3391) * C51029 +
             (C3156 * C683 + C3157 * C51044 -
              (C117 * C3355 + C50915 * C3360) * C684 -
              (C117 * C3361 + C50915 * C3364) * C50854) *
                 C50768) *
                C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C51029 +
            (C690 + C691 - C692 - C693) * C50768) *
               C51093 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C51029 +
            (C2988 + C2989 - C2990 - C2991) * C50768) *
               C51094 +
           ((C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C51029 +
            (C2992 + C2993 - C2994 - C2995) * C50768) *
               C24522) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C51029 +
            (C1006 - (C984 + C985) + C1007) * C50768) *
               C51093 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C51029 +
            (C3374 - (C3375 + C3376) + C3377) * C50768) *
               C51094 +
           ((C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C51029 +
            (C3390 - (C3380 + C3381) + C3391) * C50768) *
               C24522) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C51029 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C50768) *
               C51093 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C51029 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C50768) *
               C51094 +
           ((C3830 * C683 + C3831 * C51044 - C20747 * C684 - C20748 * C50854) *
                C51029 +
            (C2834 * C683 + C2835 * C51044 -
             (C117 * C3812 + C50915 * C3815) * C684 -
             (C117 * C3816 + C50915 * C3818) * C50854) *
                C50768) *
               C24522) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51029 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C51093 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51029 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C51094 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C51029 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C24522) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C51029 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C51093 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C51029 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C51094 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             C21083 * C296 - C21084 * C291) *
                C51029 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C24522) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51029 +
             (C178 + C179) * C50768) *
                C51093 +
            ((C2640 * C118 + C2641 * C50802) * C51029 +
             (C2440 + C2441) * C50768) *
                C51094 +
            ((C2642 * C118 + C2643 * C50802) * C51029 +
             (C2442 + C2443) * C50768) *
                C24522) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
            ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
               C1112 +
           ((C188 * C51029 + C189 * C50768) * C51093 +
            (C8193 * C51029 + (C2448 + C2449) * C50768) * C51094 +
            ((C2445 + C2444) * C51029 + (C2450 + C2451) * C50768) * C24522) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C51029 + (C571 + C572) * C50768) * C51093 +
            ((C2816 + C2817) * C51029 + (C3150 + C3151) * C50768) * C51094 +
            ((C2836 + C2837) * C51029 + (C3158 + C3159) * C50768) * C24522) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C51029) *
                C24522 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C51029) *
                C51094 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C51029) *
                C51093) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C51029) *
                C24522 +
            ((C8803 + C8802) * C50768 + C8804 * C51029) * C51094 +
            (C826 * C50768 + C827 * C51029) * C51093) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C51029 +
            (C178 + C179) * C50768) *
               C51093 +
           ((C2640 * C118 + C2641 * C50802) * C51029 +
            (C2440 + C2441) * C50768) *
               C51094 +
           ((C2642 * C118 + C2643 * C50802) * C51029 +
            (C2442 + C2443) * C50768) *
               C24522) *
              C50784 * C1987 -
          (((C2837 + C2836) * C50768 +
            (C3387 * C50802 + C3386 * C118) * C51029) *
               C24522 +
           ((C2817 + C2816) * C50768 +
            (C3385 * C50802 + C3384 * C118) * C51029) *
               C51094 +
           ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                      (C117 * C496 + C50915 * C511) * C118) *
                                         C51029) *
               C51093) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C51029 +
            (C575 + C576) * C50768) *
               C51093 +
           ((C3828 * C118 + C3829 * C50802) * C51029 +
            (C2838 + C2839) * C50768) *
               C51094 +
           ((C3830 * C118 + C3831 * C50802) * C51029 +
            (C2840 + C2841) * C50768) *
               C24522) *
              C50784 * C1989 -
          ((((C117 * C4745 + C50915 * C4753) * C50802 +
             (C117 * C4741 + C50915 * C4746) * C118) *
                C50768 +
            ((C117 * C4747 + C50915 * C4754) * C50802 +
             (C117 * C4742 + C50915 * C4748) * C118) *
                C51029) *
               C24522 +
           (((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C50768 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C51029) *
               C51094 +
           (((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C50768 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C51029) *
               C51093) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51029 +
             (C178 + C179) * C50768) *
                C51093 +
            ((C2640 * C118 + C2641 * C50802) * C51029 +
             (C2440 + C2441) * C50768) *
                C51094 +
            ((C2642 * C118 + C2643 * C50802) * C51029 +
             (C2442 + C2443) * C50768) *
                C24522) *
               C51036 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
            ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C51029 + (C571 + C572) * C50768) * C51093 +
            ((C2816 + C2817) * C51029 + (C3150 + C3151) * C50768) * C51094 +
            ((C2836 + C2837) * C51029 + (C3158 + C3159) * C50768) * C24522) *
               C50789 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C51029) *
                C24522 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C51029) *
                C51094 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C51029) *
                C51093) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C51029 +
             (C575 + C576) * C50768) *
                C51093 +
            ((C3828 * C118 + C3829 * C50802) * C51029 +
             (C2838 + C2839) * C50768) *
                C51094 +
            ((C3830 * C118 + C3831 * C50802) * C51029 +
             (C2840 + C2841) * C50768) *
                C24522) *
               C51036 -
           ((((C117 * C2810 + C50915 * C2814) * C50802 +
              (C117 * C2805 + C50915 * C2811) * C118) *
                 C50768 +
             (C2841 + C2840) * C51029) *
                C24522 +
            ((C8502 + C8501) * C50768 + (C2839 + C2838) * C51029) * C51094 +
            ((C578 + C577) * C50768 + (C576 + C575) * C51029) * C51093) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C51029 +
             (C178 + C179) * C50768) *
                C51093 +
            ((C2640 * C118 + C2641 * C50802) * C51029 +
             (C2440 + C2441) * C50768) *
                C51094 +
            ((C2642 * C118 + C2643 * C50802) * C51029 +
             (C2442 + C2443) * C50768) *
                C24522) *
               C1111 -
           (((C2444 + C2445) * C50768 + (C2443 + C2442) * C51029) * C24522 +
            ((C2446 + C2447) * C50768 + (C2441 + C2440) * C51029) * C51094 +
            ((C181 + C180) * C50768 + (C179 + C178) * C51029) * C51093) *
               C1112 +
           ((C188 * C51029 + C189 * C50768) * C51093 +
            (C8193 * C51029 + (C2448 + C2449) * C50768) * C51094 +
            ((C2445 + C2444) * C51029 + (C2450 + C2451) * C50768) * C24522) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C51029 + (C571 + C572) * C50768) * C51093 +
            ((C2816 + C2817) * C51029 + (C3150 + C3151) * C50768) * C51094 +
            ((C2836 + C2837) * C51029 + (C3158 + C3159) * C50768) * C24522) *
               C1112 -
           (((C2837 + C2836) * C50768 +
             (C3387 * C50802 + C3386 * C118) * C51029) *
                C24522 +
            ((C2817 + C2816) * C50768 +
             (C3385 * C50802 + C3384 * C118) * C51029) *
                C51094 +
            ((C570 + C569) * C50768 + ((C117 * C510 + C50915 * C526) * C50802 +
                                       (C117 * C496 + C50915 * C511) * C118) *
                                          C51029) *
                C51093) *
               C1111 -
           ((((C117 * C1718 + C50915 * C1722) * C50802 +
              (C117 * C1710 + C50915 * C1717) * C118) *
                 C50768 +
             (C3159 + C3158) * C51029) *
                C24522 +
            ((C8803 + C8802) * C50768 + C8804 * C51029) * C51094 +
            (C826 * C50768 + C827 * C51029) * C51093) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C51029 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C50768) *
               C51093 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C51029 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C50768) *
               C51094 +
           ((C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
             C3664 * C296 + C3665 * C291) *
                C51029 +
            (C2630 + C2631 - C2654 - C2655 + C2656 + C2657) * C50768) *
               C24522) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C51029 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C50768) *
               C51093 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C51029 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C50768) *
               C51094 +
           ((C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
             C21083 * C296 - C21084 * C291) *
                C51029 +
            (C3388 * C295 - (C2831 * C289 + C2830 * C294) + C3389 * C290 -
             (C117 * C4338 + C50915 * C4341) * C296 -
             (C117 * C4342 + C50915 * C4344) * C291) *
                C50768) *
               C24522) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C683 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51044 -
            (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
               C50763 * C51093 +
           ((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
            (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
               C50763 * C51094 +
           (C30790 * C683 + C30791 * C51044 - (C15209 + C15210) * C684 -
            (C15211 + C15212) * C50854) *
               C50763 * C24522) *
              C51087 +
          ((C13971 * C684 -
            ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
            C13972 * C50854) *
               C50763 * C51093 +
           (C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
            C13970 * C50854) *
               C50763 * C51094 +
           ((C13991 + C13992) * C684 - (C13974 * C51044 + C13973 * C683) +
            (C13993 + C13994) * C50854) *
               C50763 * C24522) *
              C51088 +
          (C11486 * C50763 * C51093 +
           (C14395 * C683 + C14396 * C51044 - (C11123 + C11122) * C684 -
            (C11125 + C11124) * C50854) *
               C50763 * C51094 +
           ((C11122 + C11123) * C683 + (C11124 + C11125) * C51044 -
            (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
             C51058 * C1221) *
                C684 -
            (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
             C51058 * C1227) *
                C50854) *
               C50763 * C24522) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C50763 * C51093 +
            ((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C50763 * C51094 +
            (C30790 * C683 + C30791 * C51044 - (C15209 + C15210) * C684 -
             (C15211 + C15212) * C50854) *
                C50763 * C24522) *
               C292 +
           ((C13971 * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             C13972 * C50854) *
                C50763 * C51093 +
            (C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
             C13970 * C50854) *
                C50763 * C51094 +
            ((C13991 + C13992) * C684 - (C13974 * C51044 + C13973 * C683) +
             (C13993 + C13994) * C50854) *
                C50763 * C24522) *
               C50789) *
              C51045 +
          ((((C14869 + C14870) * C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C14871 + C14872) * C50854) *
                C50763 * C51093 +
            ((C16074 + C16073) * C684 -
             ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
             (C16076 + C16075) * C50854) *
                C50763 * C51094 +
            ((C10871 * C3353 + C51058 * C3356 + C10872 * C3811 +
              C50979 * C3813) *
                 C684 -
             ((C16075 + C16076) * C51044 + (C16073 + C16074) * C683) +
             (C10871 * C3357 + C51058 * C3362 + C10872 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C24522) *
               C292 +
           (((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
             C14864 * C684 - C14863 * C50854) *
                C50763 * C51093 +
            (C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
             (C14876 + C14875) * C50854) *
                C50763 * C51094 +
            ((C14873 + C14874) * C683 + (C14875 + C14876) * C51044 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C684 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C50854) *
                C50763 * C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
            C30790 * C296 + C30791 * C291) *
               C50763 * C51093 +
           ((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
            (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
            (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
               C50763 * C51094 +
           (C30790 * C294 + C30791 * C289 - (C15209 + C15210) * C295 -
            (C15211 + C15212) * C290 +
            (C10871 * C2597 + C51058 * C2600 + C10872 * C4337 +
             C50979 * C4339) *
                C296 +
            (C10871 * C2601 + C51058 * C2606 + C10872 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C24522) *
              C292 +
          ((C13971 * C295 -
            ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
            C13972 * C290 - C13973 * C296 - C13974 * C291) *
               C50763 * C51093 +
           (C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
            (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
               C50763 * C51094 +
           ((C13991 + C13992) * C295 - (C13974 * C289 + C13973 * C294) +
            (C13993 + C13994) * C290 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C296 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C291) *
               C50763 * C24522) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C51093 +
           ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
               C51094 +
           ((C13987 + C13988) * C118 + (C13989 + C13990) * C50802) * C50763 *
               C24522) *
              C112 -
          ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
           (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
           ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
               C51093) *
              C113 +
          (C10930 * C50763 * C51093 +
           (C14395 * C118 + C14396 * C50802) * C50763 * C51094 +
           ((C11122 + C11123) * C118 + (C11124 + C11125) * C50802) * C50763 *
               C24522) *
              C114 -
          (((C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                C50802 +
            (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                C118) *
               C50763 * C24522 +
           ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C50763 *
               C51094 +
           C10931 * C50763 * C51093) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C51093 +
            ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
                C51094 +
            (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
               C292 -
           ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
            (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
                C51093) *
               C50789) *
              C489 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C50763 *
                C51093 +
            (C14857 * C118 + C14858 * C50802) * C50763 * C51094 +
            ((C14873 + C14874) * C118 + (C14875 + C14876) * C50802) * C50763 *
                C24522) *
               C50789 -
           (((C16075 + C16076) * C50802 + (C16073 + C16074) * C118) * C50763 *
                C24522 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
                C51094 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C50763 * C51093) *
               C292) *
              C490 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C51093 +
            ((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C50763 *
                C51094 +
            ((C10871 * C2803 + C51058 * C2806 + C10872 * C4742 +
              C50979 * C4748) *
                 C118 +
             (C10871 * C2807 + C51058 * C2812 + C10872 * C4747 +
              C50979 * C4754) *
                 C50802) *
                C50763 * C24522) *
               C292 -
           (((C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50802 +
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C118) *
                C50763 * C24522 +
            ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C50763 *
                C51094 +
            ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C50763 *
                C51093) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C51093 +
            ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
                C51094 +
            (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
               C51087 -
           ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
            (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
                C51093) *
               C51088 +
           (C10930 * C50763 * C51093 +
            (C14395 * C118 + C14396 * C50802) * C50763 * C51094 +
            ((C11122 + C11123) * C118 + (C11124 + C11125) * C50802) * C50763 *
                C24522) *
               C682) *
              C51045 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C50763 *
                C51093 +
            (C14857 * C118 + C14858 * C50802) * C50763 * C51094 +
            ((C14873 + C14874) * C118 + (C14875 + C14876) * C50802) * C50763 *
                C24522) *
               C51088 -
           (((C16075 + C16076) * C50802 + (C16073 + C16074) * C118) * C50763 *
                C24522 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
                C51094 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C50763 * C51093) *
               C51087 -
           (((C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
              C51058 * C1721) *
                 C50802 +
             (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
              C51058 * C1715) *
                 C118) *
                C50763 * C24522 +
            ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C50763 *
                C51094 +
            C11649 * C50763 * C51093) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C51093 +
           ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
               C51094 +
           ((C13987 + C13988) * C118 + (C13989 + C13990) * C50802) * C50763 *
               C24522) *
              C112 -
          ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
           (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
           ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
               C51093) *
              C113 +
          (C10930 * C50763 * C51093 +
           (C14395 * C118 + C14396 * C50802) * C50763 * C51094 +
           ((C11122 + C11123) * C118 + (C11124 + C11125) * C50802) * C50763 *
               C24522) *
              C114 -
          (((C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                C50802 +
            (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                C118) *
               C50763 * C24522 +
           ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C50763 *
               C51094 +
           C10931 * C50763 * C51093) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
            C30790 * C296 + C30791 * C291) *
               C50763 * C51093 +
           ((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
            (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
            (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
               C50763 * C51094 +
           (C30790 * C294 + C30791 * C289 - (C15209 + C15210) * C295 -
            (C15211 + C15212) * C290 +
            (C10871 * C2597 + C51058 * C2600 + C10872 * C4337 +
             C50979 * C4339) *
                C296 +
            (C10871 * C2601 + C51058 * C2606 + C10872 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C24522) *
              C292 +
          ((C13971 * C295 -
            ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
            C13972 * C290 - C13973 * C296 - C13974 * C291) *
               C50763 * C51093 +
           (C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
            (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
               C50763 * C51094 +
           ((C13991 + C13992) * C295 - (C13974 * C289 + C13973 * C294) +
            (C13993 + C13994) * C290 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C296 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C291) *
               C50763 * C24522) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1446 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51089 -
            (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
            C30790 * C1448 + C30791 * C1443) *
               C50763 * C51093 +
           ((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
            (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
            (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
               C50763 * C51094 +
           (C30790 * C1446 + C30791 * C51089 - C31668 * C1447 -
            C31669 * C51090 + (C31679 + C31678) * C1448 +
            (C31681 + C31680) * C1443) *
               C50763 * C24522) *
              C51036 +
          ((C13971 * C1447 -
            ((C10909 + C10908) * C51089 + (C10907 + C10906) * C1446) +
            C13972 * C51090 - C13973 * C1448 - C13974 * C1443) *
               C50763 * C51093 +
           (C13969 * C1447 - (C13968 * C51089 + C13967 * C1446) +
            C13970 * C51090 - (C13992 + C13991) * C1448 -
            (C13994 + C13993) * C1443) *
               C50763 * C51094 +
           ((C13991 + C13992) * C1447 - (C13974 * C51089 + C13973 * C1446) +
            (C13993 + C13994) * C51090 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C1448 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C1443) *
               C50763 * C24522) *
              C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1446 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51089 -
            (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
            C30790 * C1448 + C30791 * C1443) *
               C50763 * C51093 +
           ((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
            (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
            (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
               C50763 * C51094 +
           (C30790 * C1446 + C30791 * C51089 - C31668 * C1447 -
            C31669 * C51090 + (C31679 + C31678) * C1448 +
            (C31681 + C31680) * C1443) *
               C50763 * C24522) *
              C50784 * C51045 +
          (((C14869 + C14870) * C1447 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C51089 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C1446) +
            (C14871 + C14872) * C51090 - C32326 * C1448 - C32327 * C1443) *
               C50763 * C51093 +
           ((C16074 + C16073) * C1447 -
            ((C14872 + C14871) * C51089 + (C14870 + C14869) * C1446) +
            (C16076 + C16075) * C51090 - (C32336 + C32337) * C1448 -
            (C32338 + C32339) * C1443) *
               C50763 * C51094 +
           ((C32337 + C32336) * C1447 - (C32327 * C51089 + C32326 * C1446) +
            (C32339 + C32338) * C51090 -
            (C10872 * C20738 + C50979 * C20739 + C10871 * C4337 +
             C51058 * C4339) *
                C1448 -
            (C10872 * C20740 + C50979 * C20741 + C10871 * C4340 +
             C51058 * C4343) *
                C1443) *
               C50763 * C24522) *
              C50784 * C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
               C1209 +
           (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
               C1204 -
           (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
           C30790 * C1211 + C30791 * C1206 - C31668 * C1212 - C31669 * C1207) *
              C50763 * C51093 +
          ((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
           (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
           (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
           (C31678 + C31679) * C1212 - (C31680 + C31681) * C1207) *
              C50763 * C51094 +
          (C30790 * C1209 + C30791 * C1204 - C31668 * C1210 - C31669 * C1205 +
           (C31679 + C31678) * C1211 + (C31681 + C31680) * C1206 -
           (C10872 * C21074 + C50979 * C21075 + C10871 * C3651 +
            C51058 * C3653) *
               C1212 -
           (C10872 * C21076 + C50979 * C21077 + C10871 * C3654 +
            C51058 * C3657) *
               C1207) *
              C50763 * C24522) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
               C50763 * C51093 +
           ((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
            (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
               C50763 * C51094 +
           (C30790 * C1114 + C30791 * C1109 - (C15209 + C15210) * C1115 -
            (C15211 + C15212) * C50854) *
               C50763 * C24522) *
              C1111 +
          ((C13971 * C1115 -
            ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
            C13972 * C50854) *
               C50763 * C51093 +
           (C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
            C13970 * C50854) *
               C50763 * C51094 +
           ((C13991 + C13992) * C1115 - (C13974 * C1109 + C13973 * C1114) +
            (C13993 + C13994) * C50854) *
               C50763 * C24522) *
              C1112 +
          (C12020 * C50763 * C51093 +
           (C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
            (C11125 + C11124) * C50854) *
               C50763 * C51094 +
           ((C11122 + C11123) * C1114 + (C11124 + C11125) * C1109 -
            (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
             C51058 * C1221) *
                C1115 -
            (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
             C51058 * C1227) *
                C50854) *
               C50763 * C24522) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
               C50763 * C51093 +
           ((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
            (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
               C50763 * C51094 +
           (C30790 * C1114 + C30791 * C1109 - C31668 * C1115 -
            C31669 * C50854) *
               C50763 * C24522) *
              C50784 * C489 +
          (((C14869 + C14870) * C1115 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C1109 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C1114) +
            (C14871 + C14872) * C50854) *
               C50763 * C51093 +
           ((C16074 + C16073) * C1115 -
            ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
            (C16076 + C16075) * C50854) *
               C50763 * C51094 +
           ((C10871 * C3353 + C51058 * C3356 + C10872 * C3811 +
             C50979 * C3813) *
                C1115 -
            ((C16075 + C16076) * C1109 + (C16073 + C16074) * C1114) +
            (C10871 * C3357 + C51058 * C3362 + C10872 * C3814 +
             C50979 * C3817) *
                C50854) *
               C50763 * C24522) *
              C50784 * C490 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C1114 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C1109 -
            (C15415 + C15416) * C1115 - (C15417 + C15418) * C50854) *
               C50763 * C51093 +
           ((C15416 + C15415) * C1114 + (C15418 + C15417) * C1109 -
            (C31836 + C31837) * C1115 - (C31838 + C31839) * C50854) *
               C50763 * C51094 +
           ((C31837 + C31836) * C1114 + (C31839 + C31838) * C1109 -
            (C10872 * C21346 + C50979 * C21348 + C10871 * C3811 +
             C51058 * C3813) *
                C1115 -
            (C10872 * C21347 + C50979 * C21349 + C10871 * C3814 +
             C51058 * C3817) *
                C50854) *
               C50763 * C24522) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C50763 * C51093 +
            ((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C50763 * C51094 +
            (C30790 * C1114 + C30791 * C1109 - C31668 * C1115 -
             C31669 * C50854) *
                C50763 * C24522) *
               C51036 +
           ((C13971 * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             C13972 * C50854) *
                C50763 * C51093 +
            (C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
             C13970 * C50854) *
                C50763 * C51094 +
            ((C13991 + C13992) * C1115 - (C13974 * C1109 + C13973 * C1114) +
             (C13993 + C13994) * C50854) *
                C50763 * C24522) *
               C50789) *
              C51045 +
          ((((C14869 + C14870) * C1115 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C1109 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1114) +
             (C14871 + C14872) * C50854) *
                C50763 * C51093 +
            ((C16074 + C16073) * C1115 -
             ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
             (C16076 + C16075) * C50854) *
                C50763 * C51094 +
            ((C10871 * C3353 + C51058 * C3356 + C10872 * C3811 +
              C50979 * C3813) *
                 C1115 -
             ((C16075 + C16076) * C1109 + (C16073 + C16074) * C1114) +
             (C10871 * C3357 + C51058 * C3362 + C10872 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C24522) *
               C51036 +
           (((C11304 + C11305) * C1114 + (C11306 + C11307) * C1109 -
             C14864 * C1115 - C14863 * C50854) *
                C50763 * C51093 +
            (C14857 * C1114 + C14858 * C1109 - (C14874 + C14873) * C1115 -
             (C14876 + C14875) * C50854) *
                C50763 * C51094 +
            ((C14873 + C14874) * C1114 + (C14875 + C14876) * C1109 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C1115 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C50854) *
                C50763 * C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1114 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1109 -
            (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
               C50763 * C51093 +
           ((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
            (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
               C50763 * C51094 +
           (C30790 * C1114 + C30791 * C1109 - (C15209 + C15210) * C1115 -
            (C15211 + C15212) * C50854) *
               C50763 * C24522) *
              C1111 +
          ((C13971 * C1115 -
            ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
            C13972 * C50854) *
               C50763 * C51093 +
           (C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
            C13970 * C50854) *
               C50763 * C51094 +
           ((C13991 + C13992) * C1115 - (C13974 * C1109 + C13973 * C1114) +
            (C13993 + C13994) * C50854) *
               C50763 * C24522) *
              C1112 +
          (C12020 * C50763 * C51093 +
           (C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
            (C11125 + C11124) * C50854) *
               C50763 * C51094 +
           ((C11122 + C11123) * C1114 + (C11124 + C11125) * C1109 -
            (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
             C51058 * C1221) *
                C1115 -
            (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
             C51058 * C1227) *
                C50854) *
               C50763 * C24522) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
               C1209 +
           (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
               C1204 -
           (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
           C30790 * C1211 + C30791 * C1206 - C31668 * C1212 - C31669 * C1207) *
              C50763 * C51093 +
          ((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
           (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
           (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
           (C31678 + C31679) * C1212 - (C31680 + C31681) * C1207) *
              C50763 * C51094 +
          (C30790 * C1209 + C30791 * C1204 - C31668 * C1210 - C31669 * C1205 +
           (C31679 + C31678) * C1211 + (C31681 + C31680) * C1206 -
           (C10872 * C21074 + C50979 * C21075 + C10871 * C3651 +
            C51058 * C3653) *
               C1212 -
           (C10872 * C21076 + C50979 * C21077 + C10871 * C3654 +
            C51058 * C3657) *
               C1207) *
              C50763 * C24522) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C50763 * C51093 +
            ((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C50763 * C51094 +
            (C30790 * C683 + C30791 * C51044 - C31668 * C684 -
             C31669 * C50854) *
                C50763 * C24522) *
               C51036 +
           ((C13971 * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             C13972 * C50854) *
                C50763 * C51093 +
            (C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
             C13970 * C50854) *
                C50763 * C51094 +
            ((C13991 + C13992) * C684 - (C13974 * C51044 + C13973 * C683) +
             (C13993 + C13994) * C50854) *
                C50763 * C24522) *
               C50789) *
              C1821 +
          ((((C14869 + C14870) * C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C14871 + C14872) * C50854) *
                C50763 * C51093 +
            ((C16074 + C16073) * C684 -
             ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
             (C16076 + C16075) * C50854) *
                C50763 * C51094 +
            ((C32337 + C32336) * C684 - (C32327 * C51044 + C32326 * C683) +
             (C32339 + C32338) * C50854) *
                C50763 * C24522) *
               C51036 +
           (((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
             C14864 * C684 - C14863 * C50854) *
                C50763 * C51093 +
            (C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
             (C14876 + C14875) * C50854) *
                C50763 * C51094 +
            ((C14873 + C14874) * C683 + (C14875 + C14876) * C51044 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C684 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C50854) *
                C50763 * C24522) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C683 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C51044 -
            (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
               C50763 * C51093 +
           ((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
            (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
               C50763 * C51094 +
           (C30790 * C683 + C30791 * C51044 - C31668 * C684 - C31669 * C50854) *
               C50763 * C24522) *
              C50784 * C51091 +
          (((C14869 + C14870) * C684 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C51044 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C683) +
            (C14871 + C14872) * C50854) *
               C50763 * C51093 +
           ((C16074 + C16073) * C684 -
            ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
            (C16076 + C16075) * C50854) *
               C50763 * C51094 +
           ((C32337 + C32336) * C684 - (C32327 * C51044 + C32326 * C683) +
            (C32339 + C32338) * C50854) *
               C50763 * C24522) *
              C50784 * C51092 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C683 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C51044 -
            (C15415 + C15416) * C684 - (C15417 + C15418) * C50854) *
               C50763 * C51093 +
           ((C15416 + C15415) * C683 + (C15418 + C15417) * C51044 -
            (C31836 + C31837) * C684 - (C31838 + C31839) * C50854) *
               C50763 * C51094 +
           ((C31837 + C31836) * C683 + (C31839 + C31838) * C51044 -
            (C10872 * C21346 + C50979 * C21348 + C10871 * C3811 +
             C51058 * C3813) *
                C684 -
            (C10872 * C21347 + C50979 * C21349 + C10871 * C3814 +
             C51058 * C3817) *
                C50854) *
               C50763 * C24522) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
            C30790 * C296 + C30791 * C291) *
               C50763 * C51093 +
           ((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
            (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
            (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
               C50763 * C51094 +
           (C30790 * C294 + C30791 * C289 - C31668 * C295 - C31669 * C290 +
            (C31679 + C31678) * C296 + (C31681 + C31680) * C291) *
               C50763 * C24522) *
              C50784 * C1821 +
          (((C14869 + C14870) * C295 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C289 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C294) +
            (C14871 + C14872) * C290 - C32326 * C296 - C32327 * C291) *
               C50763 * C51093 +
           ((C16074 + C16073) * C295 -
            ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
            (C16076 + C16075) * C290 - (C32336 + C32337) * C296 -
            (C32338 + C32339) * C291) *
               C50763 * C51094 +
           ((C32337 + C32336) * C295 - (C32327 * C289 + C32326 * C294) +
            (C32339 + C32338) * C290 -
            (C10872 * C20738 + C50979 * C20739 + C10871 * C4337 +
             C51058 * C4339) *
                C296 -
            (C10872 * C20740 + C50979 * C20741 + C10871 * C4340 +
             C51058 * C4343) *
                C291) *
               C50763 * C24522) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C51093 +
            ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
                C51094 +
            (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
               C1111 -
           ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
            (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
                C51093) *
               C1112 +
           (C10930 * C50763 * C51093 +
            (C14395 * C118 + C14396 * C50802) * C50763 * C51094 +
            ((C11122 + C11123) * C118 + (C11124 + C11125) * C50802) * C50763 *
                C24522) *
               C1113) *
              C1821 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C50763 *
                C51093 +
            (C14857 * C118 + C14858 * C50802) * C50763 * C51094 +
            ((C14873 + C14874) * C118 + (C14875 + C14876) * C50802) * C50763 *
                C24522) *
               C1112 -
           ((C32327 * C50802 + C32326 * C118) * C50763 * C24522 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
                C51094 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C50763 * C51093) *
               C1111 -
           (((C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
              C51058 * C1721) *
                 C50802 +
             (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
              C51058 * C1715) *
                 C118) *
                C50763 * C24522 +
            ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C50763 *
                C51094 +
            C11649 * C50763 * C51093) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C118 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C51093 +
           ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
               C51094 +
           (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
              C50784 * C1987 -
          ((C32327 * C50802 + C32326 * C118) * C50763 * C24522 +
           ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
               C51094 +
           ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                C50802 +
            (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                C118) *
               C50763 * C51093) *
              C50784 * C1988 +
          (((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                C118 +
            (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                C50802) *
               C50763 * C51093 +
           ((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C50763 *
               C51094 +
           ((C31837 + C31836) * C118 + (C31839 + C31838) * C50802) * C50763 *
               C24522) *
              C50784 * C1989 -
          (((C10872 * C23016 + C50979 * C23017 + C10871 * C4747 +
             C51058 * C4754) *
                C50802 +
            (C10872 * C23014 + C50979 * C23015 + C10871 * C4742 +
             C51058 * C4748) *
                C118) *
               C50763 * C24522 +
           ((C10872 * C6714 + C50979 * C6717 + C10871 * C4751 +
             C51058 * C4756) *
                C50802 +
            (C10872 * C6711 + C50979 * C6713 + C10871 * C4744 +
             C51058 * C4752) *
                C118) *
               C50763 * C51094 +
           ((C10872 * C5733 + C50979 * C5738 + C10871 * C2001 +
             C51058 * C2006) *
                C50802 +
            (C10872 * C5729 + C50979 * C5732 + C10871 * C1994 +
             C51058 * C2002) *
                C118) *
               C50763 * C51093) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C51093 +
            ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
                C51094 +
            (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
               C51036 -
           ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
            (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
                C51093) *
               C50789) *
              C51091 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C50763 *
                C51093 +
            (C14857 * C118 + C14858 * C50802) * C50763 * C51094 +
            ((C14873 + C14874) * C118 + (C14875 + C14876) * C50802) * C50763 *
                C24522) *
               C50789 -
           ((C32327 * C50802 + C32326 * C118) * C50763 * C24522 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
                C51094 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C50763 * C51093) *
               C51036) *
              C51092 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C51093 +
            ((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C50763 *
                C51094 +
            ((C31837 + C31836) * C118 + (C31839 + C31838) * C50802) * C50763 *
                C24522) *
               C51036 -
           (((C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50802 +
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C118) *
                C50763 * C24522 +
            ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C50763 *
                C51094 +
            ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C50763 *
                C51093) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C51093 +
            ((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C50763 *
                C51094 +
            (C30790 * C118 + C30791 * C50802) * C50763 * C24522) *
               C1111 -
           ((C13974 * C50802 + C13973 * C118) * C50763 * C24522 +
            (C13968 * C50802 + C13967 * C118) * C50763 * C51094 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C50763 *
                C51093) *
               C1112 +
           (C10930 * C50763 * C51093 +
            (C14395 * C118 + C14396 * C50802) * C50763 * C51094 +
            ((C11122 + C11123) * C118 + (C11124 + C11125) * C50802) * C50763 *
                C24522) *
               C1113) *
              C1821 +
          ((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C50763 *
                C51093 +
            (C14857 * C118 + C14858 * C50802) * C50763 * C51094 +
            ((C14873 + C14874) * C118 + (C14875 + C14876) * C50802) * C50763 *
                C24522) *
               C1112 -
           ((C32327 * C50802 + C32326 * C118) * C50763 * C24522 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C50763 *
                C51094 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C50763 * C51093) *
               C1111 -
           (((C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
              C51058 * C1721) *
                 C50802 +
             (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
              C51058 * C1715) *
                 C118) *
                C50763 * C24522 +
            ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C50763 *
                C51094 +
            C11649 * C50763 * C51093) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C294 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C289 -
            (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
            C30790 * C296 + C30791 * C291) *
               C50763 * C51093 +
           ((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
            (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
            (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
               C50763 * C51094 +
           (C30790 * C294 + C30791 * C289 - C31668 * C295 - C31669 * C290 +
            (C31679 + C31678) * C296 + (C31681 + C31680) * C291) *
               C50763 * C24522) *
              C50784 * C1821 +
          (((C14869 + C14870) * C295 -
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C289 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C294) +
            (C14871 + C14872) * C290 - C32326 * C296 - C32327 * C291) *
               C50763 * C51093 +
           ((C16074 + C16073) * C295 -
            ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
            (C16076 + C16075) * C290 - (C32336 + C32337) * C296 -
            (C32338 + C32339) * C291) *
               C50763 * C51094 +
           ((C32337 + C32336) * C295 - (C32327 * C289 + C32326 * C294) +
            (C32339 + C32338) * C290 -
            (C10872 * C20738 + C50979 * C20739 + C10871 * C4337 +
             C51058 * C4339) *
                C296 -
            (C10872 * C20740 + C50979 * C20741 + C10871 * C4340 +
             C51058 * C4343) *
                C291) *
               C50763 * C24522) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
               C50763 * C19943) *
              C51087 +
          ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
           (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
           (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
           (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
               C50763 * C19943) *
              C51088 +
          (C716 * C50763 * C19940 + C8655 * C50763 * C19941 +
           (C3002 + C3001 - C3000 - C3003) * C50763 * C19942 +
           (C2650 * C683 + C2651 * C51044 -
            (C117 * C2599 + C50915 * C2604) * C684 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C17338 +
            (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
               C17341 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C17338 +
            (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
               C50953) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C17338 +
            (C696 - (C695 + C694) + C697) * C17339 +
            (C700 - (C699 + C698) + C701) * C17340) *
               C17341 +
           ((C2990 - (C2989 + C2988) + C2991) * C17338 +
            (C2996 - (C2997 + C2998) + C2999) * C17339 +
            (C8650 - (C8651 + C8652) + C8653) * C17340) *
               C50953) *
              C51088 +
          ((C716 * C17338 + C717 * C17339 +
            (C705 + C704 - C714 - C715) * C17340) *
               C17341 +
           (C8655 * C17338 + (C8652 + C8651 - C8650 - C8653) * C17339 +
            (C710 * C683 + C711 * C51044 -
             (C117 * C306 + C50915 * C325) * C684 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C17340) *
               C50953) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C683 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51044 -
            (C21945 + C21946 + C21947) * C684 -
            (C21948 + C21949 + C21950) * C50854) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C683 +
            (C21950 + C21949 + C21948) * C51044 -
            (C21953 + C21952 + C21951) * C684 -
            (C21956 + C21955 + C21954) * C50854) *
               C50763 * C50953) *
              C51087 +
          (((C5574 + C5573 + C5572) * C684 -
            ((C5389 + C5388 + C5387) * C51044 +
             (C5386 + C5385 + C5384) * C683) +
            (C5577 + C5576 + C5575) * C50854) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C684 -
            ((C5575 + C5576 + C5577) * C51044 +
             (C5572 + C5573 + C5574) * C683) +
            (C5581 + C5582 + C5583) * C50854) *
               C50763 * C50953) *
              C51088 +
          (((C5395 + C5394 + C5393) * C683 + (C5392 + C5391 + C5390) * C51044 -
            (C5938 + C5937 + C5936) * C684 - (C5941 + C5940 + C5939) * C50854) *
               C50763 * C17341 +
           ((C5936 + C5937 + C5938) * C683 + (C5939 + C5940 + C5941) * C51044 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C684 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C50854) *
               C50763 * C50953) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
                C50763 * C19943) *
               C292 +
           ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
            (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
            (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
            (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C51045 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C50763 * C19942 +
            ((C117 * C4337 + C50915 * C4339) * C684 -
             (C4351 * C51044 + C4350 * C683) +
             (C117 * C4340 + C50915 * C4343) * C50854) *
                C50763 * C19943) *
               C292 +
           ((C985 + C984 - C1006 - C1007) * C50763 * C19940 +
            (C3376 + C3375 - C3374 - C3377) * C50763 * C19941 +
            (C3381 + C3380 - C3390 - C3391) * C50763 * C19942 +
            (C3388 * C683 + C3389 * C51044 -
             (C117 * C4338 + C50915 * C4341) * C684 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C17338 +
             (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
                C17341 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C17338 +
             (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
                C50953) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C17338 +
             (C696 - (C695 + C694) + C697) * C17339 +
             (C700 - (C699 + C698) + C701) * C17340) *
                C17341 +
            ((C2990 - (C2989 + C2988) + C2991) * C17338 +
             (C2996 - (C2997 + C2998) + C2999) * C17339 +
             (C8650 - (C8651 + C8652) + C8653) * C17340) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C17338 +
             (C1006 - (C984 + C985) + C1007) * C17339 +
             (C1008 - (C990 + C991) + C1009) * C17340) *
                C17341 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C17338 +
             (C3374 - (C3375 + C3376) + C3377) * C17339 +
             (C8999 - (C9000 + C9001) + C9002) * C17340) *
                C50953) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C17338 +
             (C991 + C990 - C1008 - C1009) * C17339 +
             (C997 + C996 - C1010 - C1011) * C17340) *
                C17341 +
            ((C3376 + C3375 - C3374 - C3377) * C17338 +
             (C9001 + C9000 - C8999 - C9002) * C17339 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C683 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C51044 -
             (C21945 + C21946 + C21947) * C684 -
             (C21948 + C21949 + C21950) * C50854) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C683 +
             (C21950 + C21949 + C21948) * C51044 -
             (C21953 + C21952 + C21951) * C684 -
             (C21956 + C21955 + C21954) * C50854) *
                C50763 * C50953) *
               C292 +
           (((C5574 + C5573 + C5572) * C684 -
             ((C5389 + C5388 + C5387) * C51044 +
              (C5386 + C5385 + C5384) * C683) +
             (C5577 + C5576 + C5575) * C50854) *
                C50763 * C17341 +
            ((C5578 + C5579 + C5580) * C684 -
             ((C5575 + C5576 + C5577) * C51044 +
              (C5572 + C5573 + C5574) * C683) +
             (C5581 + C5582 + C5583) * C50854) *
                C50763 * C50953) *
               C50789) *
              C51045 +
          ((((C22601 + C22602 + C22603) * C684 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C51044 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C683) +
             (C22604 + C22605 + C22606) * C50854) *
                C50763 * C17341 +
            ((C5344 * C1707 + C5341 * C1711 + C5345 * C2803 + C5342 * C2806 +
              C5346 * C4742 + C5343 * C4748) *
                 C684 -
             ((C22606 + C22605 + C22604) * C51044 +
              (C22603 + C22602 + C22601) * C683) +
             (C5344 * C1712 + C5341 * C1719 + C5345 * C2807 + C5342 * C2812 +
              C5346 * C4747 + C5343 * C4754) *
                 C50854) *
                C50763 * C50953) *
               C292 +
           (((C5766 + C5767 + C5768) * C683 + (C5769 + C5770 + C5771) * C51044 -
             (C6318 + C6317 + C6316) * C684 -
             (C6321 + C6320 + C6319) * C50854) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C683 + (C6319 + C6320 + C6321) * C51044 -
             (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
              C5344 * C1708 + C5341 * C1713) *
                 C684 -
             (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
              C5344 * C1714 + C5341 * C1720) *
                 C50854) *
                C50763 * C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50915 * C126) * C118 +
                 (C117 * C127 + C50915 * C140) * C50802) *
                    C17338 +
                (C178 + C179) * C17339 + C188 * C17340) *
                   C17341 +
               ((C2640 * C118 + C2641 * C50802) * C17338 +
                (C2440 + C2441) * C17339 + C8193 * C17340) *
                   C50953) *
                  C112 -
              ((C8194 * C17340 + (C2446 + C2447) * C17339 +
                (C2441 + C2440) * C17338) *
                   C50953 +
               (C191 * C17340 + (C181 + C180) * C17339 +
                (C179 + C178) * C17338) *
                   C17341) *
                  C113 +
              ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) *
                   C17341 +
               (C8193 * C17338 + (C2448 + C2449) * C17339 +
                (C8195 + C8196) * C17340) *
                   C50953) *
                  C114 -
              ((((C117 * C687 + C50915 * C688) * C50802 +
                 (C117 * C685 + C50915 * C686) * C118) *
                    C17340 +
                (C8196 + C8195) * C17339 + C8194 * C17338) *
                   C50953 +
               ((C187 + C186) * C17340 + C190 * C17339 + C191 * C17338) *
                   C17341) *
                  C115) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50915 * C126) * C294 +
                 (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
                 C2641 * C290 + C2642 * C296 + C2643 * C291) *
                    C17338 +
                (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
                (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
                   C17341 +
               ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
                 C2644 * C296 + C2645 * C291) *
                    C17338 +
                (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
                (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
                   C50953) *
                  C292 +
              (((C380 - (C339 + C338) + C381 - C382 - C383) * C17338 +
                (C384 - (C349 + C348) + C385 - C386 - C387) * C17339 +
                (C388 - (C359 + C358) + C389 - C390 - C391) * C17340) *
                   C17341 +
               ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C17338 +
                (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C17339 +
                (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
                 (C117 * C1216 + C50915 * C1223) * C296 -
                 (C117 * C1224 + C50915 * C1228) * C291) *
                    C17340) *
                   C50953) *
                  C50789) *
             C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C292 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C50789) *
              C489 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C50789 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C17338 +
             (C575 + C576) * C17339 + (C577 + C578) * C17340) *
                C17341 +
            ((C3828 * C118 + C3829 * C50802) * C17338 +
             (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
                C50953) *
               C292 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C17340 +
             (C8502 + C8501) * C17339 + (C2839 + C2838) * C17338) *
                C50953 +
            ((C580 + C579) * C17340 + (C578 + C577) * C17339 +
             (C576 + C575) * C17338) *
                C17341) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C112 -
          ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
           (C2443 + C2442) * C50763 * C19942 +
           (C2441 + C2440) * C50763 * C19941 +
           (C179 + C178) * C50763 * C19940) *
              C113 +
          (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
           (C2445 + C2444) * C50763 * C19942 +
           (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
              C114 -
          (((C117 * C1224 + C50915 * C1228) * C50802 +
            (C117 * C1216 + C50915 * C1223) * C118) *
               C50763 * C19943 +
           (C2451 + C2450) * C50763 * C19942 + C8194 * C50763 * C19941 +
           C191 * C50763 * C19940) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            (C117 * C3651 + C50915 * C3653) * C296 +
            (C117 * C3654 + C50915 * C3657) * C291) *
               C50763 * C19943) *
              C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C50763 * C19940 +
           (C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C50763 * C19941 +
           (C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C50763 * C19942 +
           (C2648 * C295 - (C2647 * C289 + C2646 * C294) + C2649 * C290 -
            (C117 * C3652 + C50915 * C3655) * C296 -
            (C117 * C3656 + C50915 * C3658) * C291) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C292 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C50789) *
              C489 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C50789 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C292) *
              C490 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C50763 * C19940 +
            (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
            (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
            ((C117 * C3811 + C50915 * C3813) * C118 +
             (C117 * C3814 + C50915 * C3817) * C50802) *
                C50763 * C19943) *
               C292 -
           (((C117 * C3816 + C50915 * C3818) * C50802 +
             (C117 * C3812 + C50915 * C3815) * C118) *
                C50763 * C19943 +
            (C2841 + C2840) * C50763 * C19942 +
            (C2839 + C2838) * C50763 * C19941 +
            (C576 + C575) * C50763 * C19940) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C50763 * C17341 +
           ((C5344 * C297 + C5341 * C307 + C5345 * C961 + C5342 * C966 +
             C5346 * C1327 + C5343 * C1331) *
                C118 +
            (C5344 * C308 + C5341 * C327 + C5345 * C967 + C5342 * C976 +
             C5346 * C1332 + C5343 * C1339) *
                C50802) *
               C50763 * C50953) *
              C112 -
          (((C5575 + C5576 + C5577) * C50802 + (C5572 + C5573 + C5574) * C118) *
               C50763 * C50953 +
           ((C5389 + C5388 + C5387) * C50802 + (C5386 + C5385 + C5384) * C118) *
               C50763 * C17341) *
              C113 +
          (((C5395 + C5394 + C5393) * C118 + (C5392 + C5391 + C5390) * C50802) *
               C50763 * C17341 +
           ((C5936 + C5937 + C5938) * C118 + (C5939 + C5940 + C5941) * C50802) *
               C50763 * C50953) *
              C114 -
          (((C5346 * C1338 + C5343 * C1342 + C5345 * C973 + C5342 * C979 +
             C5344 * C320 + C5341 * C333) *
                C50802 +
            (C5346 * C1330 + C5343 * C1337 + C5345 * C964 + C5342 * C972 +
             C5344 * C303 + C5341 * C319) *
                C118) *
               C50763 * C50953 +
           ((C5401 + C5400 + C5399) * C50802 + (C5398 + C5397 + C5396) * C118) *
               C50763 * C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C21945 + C21946 + C21947) * C295 -
            (C21948 + C21949 + C21950) * C290 +
            (C21951 + C21952 + C21953) * C296 +
            (C21954 + C21955 + C21956) * C291) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C294 +
            (C21950 + C21949 + C21948) * C289 -
            (C21953 + C21952 + C21951) * C295 -
            (C21956 + C21955 + C21954) * C290 +
            (C5344 * C1213 + C5341 * C1217 + C5345 * C3353 + C5342 * C3356 +
             C5346 * C3811 + C5343 * C3813) *
                C296 +
            (C5344 * C1218 + C5341 * C1225 + C5345 * C3357 + C5342 * C3362 +
             C5346 * C3814 + C5343 * C3817) *
                C291) *
               C50763 * C50953) *
              C292 +
          (((C5574 + C5573 + C5572) * C295 -
            ((C5389 + C5388 + C5387) * C289 + (C5386 + C5385 + C5384) * C294) +
            (C5577 + C5576 + C5575) * C290 - (C5580 + C5579 + C5578) * C296 -
            (C5583 + C5582 + C5581) * C291) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C295 -
            ((C5575 + C5576 + C5577) * C289 + (C5572 + C5573 + C5574) * C294) +
            (C5581 + C5582 + C5583) * C290 -
            (C5346 * C3812 + C5343 * C3815 + C5345 * C3354 + C5342 * C3358 +
             C5344 * C1214 + C5341 * C1219) *
                C296 -
            (C5346 * C3816 + C5343 * C3818 + C5345 * C3359 + C5342 * C3363 +
             C5344 * C1220 + C5341 * C1226) *
                C291) *
               C50763 * C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C118 +
             (C21950 + C21949 + C21948) * C50802) *
                C50763 * C50953) *
               C292 -
           (((C5575 + C5576 + C5577) * C50802 +
             (C5572 + C5573 + C5574) * C118) *
                C50763 * C50953 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C50763 * C17341) *
               C50789) *
              C489 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C118 +
             (C6319 + C6320 + C6321) * C50802) *
                C50763 * C50953) *
               C50789 -
           (((C5346 * C4751 + C5343 * C4756 + C5345 * C1332 + C5342 * C1339 +
              C5344 * C967 + C5341 * C976) *
                 C50802 +
             (C5346 * C4744 + C5343 * C4752 + C5345 * C1327 + C5342 * C1331 +
              C5344 * C961 + C5341 * C966) *
                 C118) *
                C50763 * C50953 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C50763 * C17341) *
               C292) *
              C490 +
          ((((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
              C5346 * C5729 + C5343 * C5732) *
                 C118 +
             (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
              C5346 * C5733 + C5343 * C5738) *
                 C50802) *
                C50763 * C17341 +
            ((C5344 * C1327 + C5341 * C1331 + C5345 * C4744 + C5342 * C4752 +
              C5346 * C6711 + C5343 * C6713) *
                 C118 +
             (C5344 * C1332 + C5341 * C1339 + C5345 * C4751 + C5342 * C4756 +
              C5346 * C6714 + C5343 * C6717) *
                 C50802) *
                C50763 * C50953) *
               C292 -
           (((C5346 * C6716 + C5343 * C6718 + C5345 * C4749 + C5342 * C4755 +
              C5344 * C1334 + C5341 * C1340) *
                 C50802 +
             (C5346 * C6712 + C5343 * C6715 + C5345 * C4743 + C5342 * C4750 +
              C5344 * C1328 + C5341 * C1333) *
                 C118) *
                C50763 * C50953 +
            ((C5777 + C5776 + C5775) * C50802 +
             (C5774 + C5773 + C5772) * C118) *
                C50763 * C17341) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C51087 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C51088 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C682) *
              C51045 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C51088 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C51087 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C51087 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C51088 +
           ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
            (C8193 * C17338 + (C2448 + C2449) * C17339 +
             (C8195 + C8196) * C17340) *
                C50953) *
               C682) *
              C51045 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C51088 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C51087 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C17340 +
             (C8803 + C8802) * C17339 + C8804 * C17338) *
                C50953 +
            ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) * C17341) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C118 +
             (C21950 + C21949 + C21948) * C50802) *
                C50763 * C50953) *
               C51087 -
           (((C5575 + C5576 + C5577) * C50802 +
             (C5572 + C5573 + C5574) * C118) *
                C50763 * C50953 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C50763 * C17341) *
               C51088 +
           (((C5395 + C5394 + C5393) * C118 +
             (C5392 + C5391 + C5390) * C50802) *
                C50763 * C17341 +
            ((C5936 + C5937 + C5938) * C118 +
             (C5939 + C5940 + C5941) * C50802) *
                C50763 * C50953) *
               C682) *
              C51045 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C118 +
             (C6319 + C6320 + C6321) * C50802) *
                C50763 * C50953) *
               C51088 -
           (((C5346 * C4751 + C5343 * C4756 + C5345 * C1332 + C5342 * C1339 +
              C5344 * C967 + C5341 * C976) *
                 C50802 +
             (C5346 * C4744 + C5343 * C4752 + C5345 * C1327 + C5342 * C1331 +
              C5344 * C961 + C5341 * C966) *
                 C118) *
                C50763 * C50953 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C50763 * C17341) *
               C51087 -
           (((C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50802 +
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C118) *
                C50763 * C50953 +
            ((C6105 + C6104 + C6103) * C50802 +
             (C6102 + C6101 + C6100) * C118) *
                C50763 * C17341) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C17338 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C17339 +
            (C388 - (C359 + C358) + C389 - C390 - C391) * C17340) *
               C17341 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C17338 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C17339 +
            (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
             (C117 * C1216 + C50915 * C1223) * C296 -
             (C117 * C1224 + C50915 * C1228) * C291) *
                C17340) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C17338 +
            (C178 + C179) * C17339 + C188 * C17340) *
               C17341 +
           ((C2640 * C118 + C2641 * C50802) * C17338 +
            (C2440 + C2441) * C17339 + C8193 * C17340) *
               C50953) *
              C112 -
          ((C8194 * C17340 + (C2446 + C2447) * C17339 +
            (C2441 + C2440) * C17338) *
               C50953 +
           (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
               C17341) *
              C113 +
          ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
           (C8193 * C17338 + (C2448 + C2449) * C17339 +
            (C8195 + C8196) * C17340) *
               C50953) *
              C114 -
          ((((C117 * C687 + C50915 * C688) * C50802 +
             (C117 * C685 + C50915 * C686) * C118) *
                C17340 +
            (C8196 + C8195) * C17339 + C8194 * C17338) *
               C50953 +
           ((C187 + C186) * C17340 + C190 * C17339 + C191 * C17338) * C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C112 -
          ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
           (C2443 + C2442) * C50763 * C19942 +
           (C2441 + C2440) * C50763 * C19941 +
           (C179 + C178) * C50763 * C19940) *
              C113 +
          (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
           (C2445 + C2444) * C50763 * C19942 +
           (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
              C114 -
          (((C117 * C1224 + C50915 * C1228) * C50802 +
            (C117 * C1216 + C50915 * C1223) * C118) *
               C50763 * C19943 +
           (C2451 + C2450) * C50763 * C19942 + C8194 * C50763 * C19941 +
           C191 * C50763 * C19940) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            (C117 * C3651 + C50915 * C3653) * C296 +
            (C117 * C3654 + C50915 * C3657) * C291) *
               C50763 * C19943) *
              C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C50763 * C19940 +
           (C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C50763 * C19941 +
           (C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C50763 * C19942 +
           (C2648 * C295 - (C2647 * C289 + C2646 * C294) + C2649 * C290 -
            (C117 * C3652 + C50915 * C3655) * C296 -
            (C117 * C3656 + C50915 * C3658) * C291) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C50763 * C17341 +
           ((C5344 * C297 + C5341 * C307 + C5345 * C961 + C5342 * C966 +
             C5346 * C1327 + C5343 * C1331) *
                C118 +
            (C5344 * C308 + C5341 * C327 + C5345 * C967 + C5342 * C976 +
             C5346 * C1332 + C5343 * C1339) *
                C50802) *
               C50763 * C50953) *
              C112 -
          (((C5575 + C5576 + C5577) * C50802 + (C5572 + C5573 + C5574) * C118) *
               C50763 * C50953 +
           ((C5389 + C5388 + C5387) * C50802 + (C5386 + C5385 + C5384) * C118) *
               C50763 * C17341) *
              C113 +
          (((C5395 + C5394 + C5393) * C118 + (C5392 + C5391 + C5390) * C50802) *
               C50763 * C17341 +
           ((C5936 + C5937 + C5938) * C118 + (C5939 + C5940 + C5941) * C50802) *
               C50763 * C50953) *
              C114 -
          (((C5346 * C1338 + C5343 * C1342 + C5345 * C973 + C5342 * C979 +
             C5344 * C320 + C5341 * C333) *
                C50802 +
            (C5346 * C1330 + C5343 * C1337 + C5345 * C964 + C5342 * C972 +
             C5344 * C303 + C5341 * C319) *
                C118) *
               C50763 * C50953 +
           ((C5401 + C5400 + C5399) * C50802 + (C5398 + C5397 + C5396) * C118) *
               C50763 * C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C21945 + C21946 + C21947) * C295 -
            (C21948 + C21949 + C21950) * C290 +
            (C21951 + C21952 + C21953) * C296 +
            (C21954 + C21955 + C21956) * C291) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C294 +
            (C21950 + C21949 + C21948) * C289 -
            (C21953 + C21952 + C21951) * C295 -
            (C21956 + C21955 + C21954) * C290 +
            (C5344 * C1213 + C5341 * C1217 + C5345 * C3353 + C5342 * C3356 +
             C5346 * C3811 + C5343 * C3813) *
                C296 +
            (C5344 * C1218 + C5341 * C1225 + C5345 * C3357 + C5342 * C3362 +
             C5346 * C3814 + C5343 * C3817) *
                C291) *
               C50763 * C50953) *
              C292 +
          (((C5574 + C5573 + C5572) * C295 -
            ((C5389 + C5388 + C5387) * C289 + (C5386 + C5385 + C5384) * C294) +
            (C5577 + C5576 + C5575) * C290 - (C5580 + C5579 + C5578) * C296 -
            (C5583 + C5582 + C5581) * C291) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C295 -
            ((C5575 + C5576 + C5577) * C289 + (C5572 + C5573 + C5574) * C294) +
            (C5581 + C5582 + C5583) * C290 -
            (C5346 * C3812 + C5343 * C3815 + C5345 * C3354 + C5342 * C3358 +
             C5344 * C1214 + C5341 * C1219) *
                C296 -
            (C5346 * C3816 + C5343 * C3818 + C5345 * C3359 + C5342 * C3363 +
             C5344 * C1220 + C5341 * C1226) *
                C291) *
               C50763 * C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
            C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
               C50763 * C19940 +
           (C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
            C2644 * C1448 + C2645 * C1443) *
               C50763 * C19941 +
           (C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
            C3664 * C1448 + C3665 * C1443) *
               C50763 * C19942 +
           (C2644 * C1446 + C2645 * C51089 - C3664 * C1447 - C3665 * C51090 +
            C20639 * C1448 + C20640 * C1443) *
               C50763 * C19943) *
              C51036 +
          ((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C50763 * C19940 +
           (C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C50763 * C19941 +
           (C3986 - (C3985 + C3984) + C3987 - C3988 - C3989) * C50763 * C19942 +
           (C2648 * C1447 - (C2647 * C51089 + C2646 * C1446) + C2649 * C51090 -
            (C117 * C3652 + C50915 * C3655) * C1448 -
            (C117 * C3656 + C50915 * C3658) * C1443) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C17338 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C17339 +
            (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C17340) *
               C17341 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C17338 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C17339 +
            (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C17340) *
               C50953) *
              C51036 +
          (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C17338 +
            (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C17339 +
            (C1464 - (C1463 + C1462) + C1465 - C1466 - C1467) * C17340) *
               C17341 +
           ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C17338 +
            (C9548 - (C9547 + C9546) + C9549 - C9550 - C9551) * C17339 +
            (C378 * C1447 - (C377 * C51089 + C376 * C1446) + C379 * C51090 -
             (C117 * C1216 + C50915 * C1223) * C1448 -
             (C117 * C1224 + C50915 * C1228) * C1443) *
                C17340) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1446 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51089 -
            (C21945 + C21946 + C21947) * C1447 -
            (C21948 + C21949 + C21950) * C51090 +
            (C21951 + C21952 + C21953) * C1448 +
            (C21954 + C21955 + C21956) * C1443) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C1446 +
            (C21950 + C21949 + C21948) * C51089 -
            (C21953 + C21952 + C21951) * C1447 -
            (C21956 + C21955 + C21954) * C51090 +
            (C22865 + C22864 + C22863) * C1448 +
            (C22868 + C22867 + C22866) * C1443) *
               C50763 * C50953) *
              C51036 +
          (((C5574 + C5573 + C5572) * C1447 -
            ((C5389 + C5388 + C5387) * C51089 +
             (C5386 + C5385 + C5384) * C1446) +
            (C5577 + C5576 + C5575) * C51090 - (C5580 + C5579 + C5578) * C1448 -
            (C5583 + C5582 + C5581) * C1443) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C1447 -
            ((C5575 + C5576 + C5577) * C51089 +
             (C5572 + C5573 + C5574) * C1446) +
            (C5581 + C5582 + C5583) * C51090 -
            (C5346 * C3812 + C5343 * C3815 + C5345 * C3354 + C5342 * C3358 +
             C5344 * C1214 + C5341 * C1219) *
                C1448 -
            (C5346 * C3816 + C5343 * C3818 + C5345 * C3359 + C5342 * C3363 +
             C5344 * C1220 + C5341 * C1226) *
                C1443) *
               C50763 * C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
            C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
               C50763 * C19940 +
           (C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
            C2644 * C1448 + C2645 * C1443) *
               C50763 * C19941 +
           (C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
            C3664 * C1448 + C3665 * C1443) *
               C50763 * C19942 +
           (C2644 * C1446 + C2645 * C51089 - C3664 * C1447 - C3665 * C51090 +
            C20639 * C1448 + C20640 * C1443) *
               C50763 * C19943) *
              C50784 * C51045 +
          ((C3384 * C1447 -
            ((C117 * C510 + C50915 * C526) * C51089 +
             (C117 * C496 + C50915 * C511) * C1446) +
            C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
               C50763 * C19940 +
           (C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) + C3387 * C51090 -
            C4350 * C1448 - C4351 * C1443) *
               C50763 * C19941 +
           (C4350 * C1447 - (C3387 * C51089 + C3386 * C1446) + C4351 * C51090 -
            C21083 * C1448 - C21084 * C1443) *
               C50763 * C19942 +
           (C21083 * C1447 - (C4351 * C51089 + C4350 * C1446) +
            C21084 * C51090 - (C117 * C21074 + C50915 * C21075) * C1448 -
            (C117 * C21076 + C50915 * C21077) * C1443) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C17338 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C17339 +
            (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C17340) *
               C17341 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C17338 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C17339 +
            (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C17340) *
               C50953) *
              C50784 * C51045 +
          (((C3384 * C1447 -
             ((C117 * C510 + C50915 * C526) * C51089 +
              (C117 * C496 + C50915 * C511) * C1446) +
             C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                C17338 +
            (C1000 * C1447 - (C558 * C51089 + C557 * C1446) + C1001 * C51090 -
             C2830 * C1448 - C2831 * C1443) *
                C17339 +
            (C1002 * C1447 - (C560 * C51089 + C559 * C1446) + C1003 * C51090 -
             C3156 * C1448 - C3157 * C1443) *
                C17340) *
               C17341 +
           ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) + C3387 * C51090 -
             C4350 * C1448 - C4351 * C1443) *
                C17338 +
            (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) + C2831 * C51090 -
             C3388 * C1448 - C3389 * C1443) *
                C17339 +
            (C3156 * C1447 - (C1003 * C51089 + C1002 * C1446) + C3157 * C51090 -
             (C117 * C3355 + C50915 * C3360) * C1448 -
             (C117 * C3361 + C50915 * C3364) * C1443) *
                C17340) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1446 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51089 -
            (C21945 + C21946 + C21947) * C1447 -
            (C21948 + C21949 + C21950) * C51090 +
            (C21951 + C21952 + C21953) * C1448 +
            (C21954 + C21955 + C21956) * C1443) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C1446 +
            (C21950 + C21949 + C21948) * C51089 -
            (C21953 + C21952 + C21951) * C1447 -
            (C21956 + C21955 + C21954) * C51090 +
            (C22865 + C22864 + C22863) * C1448 +
            (C22868 + C22867 + C22866) * C1443) *
               C50763 * C50953) *
              C50784 * C51045 +
          (((C22601 + C22602 + C22603) * C1447 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C51089 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C1446) +
            (C22604 + C22605 + C22606) * C51090 -
            (C23535 + C23536 + C23537) * C1448 -
            (C23538 + C23539 + C23540) * C1443) *
               C50763 * C17341 +
           ((C23537 + C23536 + C23535) * C1447 -
            ((C22606 + C22605 + C22604) * C51089 +
             (C22603 + C22602 + C22601) * C1446) +
            (C23540 + C23539 + C23538) * C51090 -
            (C5346 * C21346 + C5343 * C21348 + C5345 * C3811 + C5342 * C3813 +
             C5344 * C3353 + C5341 * C3356) *
                C1448 -
            (C5346 * C21347 + C5343 * C21349 + C5345 * C3814 + C5342 * C3817 +
             C5344 * C3357 + C5341 * C3362) *
                C1443) *
               C50763 * C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50915 * C126) * C1114 +
                 (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
                 C2641 * C50854) *
                    C17338 +
                (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
                   C17341 +
               ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 -
                 C2643 * C50854) *
                    C17338 +
                (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
                   C50953) *
                  C1111 +
              (((C1119 - (C1118 + C1117) + C1120) * C17338 +
                (C1123 - (C1122 + C1121) + C1124) * C17339 +
                (C1127 - (C1126 + C1125) + C1128) * C17340) *
                   C17341 +
               ((C3540 - (C3539 + C3538) + C3541) * C17338 +
                (C3546 - (C3547 + C3548) + C3549) * C17339 +
                (C9150 - (C9151 + C9152) + C9153) * C17340) *
                   C50953) *
                  C1112 +
              ((C1137 * C17338 + C1138 * C17339 +
                (C1131 + C1130 - C1129 - C1132) * C17340) *
                   C17341 +
               (C9155 * C17338 + (C9152 + C9151 - C9150 - C9153) * C17339 +
                (C710 * C1114 + C711 * C1109 -
                 (C117 * C306 + C50915 * C325) * C1115 -
                 (C117 * C326 + C50915 * C336) * C50854) *
                    C17340) *
                   C50953) *
                  C1113) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50915 * C126) * C1209 +
                (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
                C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
                C2645 * C1207) *
                   C17338 +
               (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
                C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
                   C17339 +
               (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
                C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
                   C17340) *
                  C17341 +
              ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
                C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
                   C17338 +
               (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
                C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
                   C17339 +
               (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
                C2650 * C1211 + C2651 * C1206 -
                (C117 * C2599 + C50915 * C2604) * C1212 -
                (C117 * C2605 + C50915 * C2608) * C1207) *
                   C17340) *
                  C50953) *
             C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C17338 +
            (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
               C17341 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C17338 +
            (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
               C50953) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C17338 +
            (C1598 - (C1599 + C1600) + C1601) * C17339 +
            (C1602 - (C1603 + C1604) + C1605) * C17340) *
               C17341 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C17338 +
            (C4184 - (C4185 + C4186) + C4187) * C17339 +
            (C9746 - (C9747 + C9748) + C9749) * C17340) *
               C50953) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C17338 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C17339 +
            (C565 * C1114 + C566 * C1109 - C8499 * C1115 - C8500 * C50854) *
                C17340) *
               C17341 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C17338 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C17339 +
            (C8499 * C1114 + C8500 * C1109 -
             (C117 * C2805 + C50915 * C2811) * C1115 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C17340) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
           (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
           (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
           (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
               C50763 * C19943) *
              C1112 +
          (C1137 * C50763 * C19940 + C9155 * C50763 * C19941 +
           (C3552 + C3551 - C3550 - C3553) * C50763 * C19942 +
           (C2650 * C1114 + C2651 * C1109 -
            (C117 * C2599 + C50915 * C2604) * C1115 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
           C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
           C2645 * C1207) *
              C50763 * C19940 +
          (C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
           C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
              C50763 * C19941 +
          (C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
           C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
              C50763 * C19942 +
          (C2644 * C1209 + C2645 * C1204 - C3664 * C1210 - C3665 * C1205 +
           C20639 * C1211 + C20640 * C1206 -
           (C117 * C20630 + C50915 * C20631) * C1212 -
           (C117 * C20632 + C50915 * C20633) * C1207) *
              C50763 * C19943) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C50784 * C489 +
          ((C3384 * C1115 -
            ((C117 * C510 + C50915 * C526) * C1109 +
             (C117 * C496 + C50915 * C511) * C1114) +
            C3385 * C50854) *
               C50763 * C19940 +
           (C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
               C50763 * C19941 +
           (C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) + C4351 * C50854) *
               C50763 * C19942 +
           ((C117 * C4337 + C50915 * C4339) * C1115 -
            (C4351 * C1109 + C4350 * C1114) +
            (C117 * C4340 + C50915 * C4343) * C50854) *
               C50763 * C19943) *
              C50784 * C490 +
          (((C117 * C497 + C50915 * C512) * C1114 +
            (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
            C3829 * C50854) *
               C50763 * C19940 +
           (C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
               C50763 * C19941 +
           (C3830 * C1114 + C3831 * C1109 - C20747 * C1115 - C20748 * C50854) *
               C50763 * C19942 +
           (C20747 * C1114 + C20748 * C1109 -
            (C117 * C20738 + C50915 * C20739) * C1115 -
            (C117 * C20740 + C50915 * C20741) * C50854) *
               C50763 * C19943) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C21945 + C21946 + C21947) * C1115 -
            (C21948 + C21949 + C21950) * C50854) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C1114 +
            (C21950 + C21949 + C21948) * C1109 -
            (C21953 + C21952 + C21951) * C1115 -
            (C21956 + C21955 + C21954) * C50854) *
               C50763 * C50953) *
              C1111 +
          (((C5574 + C5573 + C5572) * C1115 -
            ((C5389 + C5388 + C5387) * C1109 +
             (C5386 + C5385 + C5384) * C1114) +
            (C5577 + C5576 + C5575) * C50854) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C1115 -
            ((C5575 + C5576 + C5577) * C1109 +
             (C5572 + C5573 + C5574) * C1114) +
            (C5581 + C5582 + C5583) * C50854) *
               C50763 * C50953) *
              C1112 +
          (((C5395 + C5394 + C5393) * C1114 + (C5392 + C5391 + C5390) * C1109 -
            (C5938 + C5937 + C5936) * C1115 -
            (C5941 + C5940 + C5939) * C50854) *
               C50763 * C17341 +
           ((C5936 + C5937 + C5938) * C1114 + (C5939 + C5940 + C5941) * C1109 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C1115 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C50854) *
               C50763 * C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
            C5346 * C497 + C5343 * C512) *
               C1209 +
           (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
            C5346 * C513 + C5343 * C527) *
               C1204 -
           (C21945 + C21946 + C21947) * C1210 -
           (C21948 + C21949 + C21950) * C1205 +
           (C21951 + C21952 + C21953) * C1211 +
           (C21954 + C21955 + C21956) * C1206 -
           (C22863 + C22864 + C22865) * C1212 -
           (C22866 + C22867 + C22868) * C1207) *
              C50763 * C17341 +
          ((C21947 + C21946 + C21945) * C1209 +
           (C21950 + C21949 + C21948) * C1204 -
           (C21953 + C21952 + C21951) * C1210 -
           (C21956 + C21955 + C21954) * C1205 +
           (C22865 + C22864 + C22863) * C1211 +
           (C22868 + C22867 + C22866) * C1206 -
           (C5346 * C20738 + C5343 * C20739 + C5345 * C4337 + C5342 * C4339 +
            C5344 * C2597 + C5341 * C2600) *
               C1212 -
           (C5346 * C20740 + C5343 * C20741 + C5345 * C4340 + C5342 * C4343 +
            C5344 * C2601 + C5341 * C2606) *
               C1207) *
              C50763 * C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C21945 + C21946 + C21947) * C1115 -
            (C21948 + C21949 + C21950) * C50854) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C1114 +
            (C21950 + C21949 + C21948) * C1109 -
            (C21953 + C21952 + C21951) * C1115 -
            (C21956 + C21955 + C21954) * C50854) *
               C50763 * C50953) *
              C50784 * C489 +
          (((C22601 + C22602 + C22603) * C1115 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C1109 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C1114) +
            (C22604 + C22605 + C22606) * C50854) *
               C50763 * C17341 +
           ((C5344 * C1707 + C5341 * C1711 + C5345 * C2803 + C5342 * C2806 +
             C5346 * C4742 + C5343 * C4748) *
                C1115 -
            ((C22606 + C22605 + C22604) * C1109 +
             (C22603 + C22602 + C22601) * C1114) +
            (C5344 * C1712 + C5341 * C1719 + C5345 * C2807 + C5342 * C2812 +
             C5346 * C4747 + C5343 * C4754) *
                C50854) *
               C50763 * C50953) *
              C50784 * C490 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C1114 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C1109 -
            (C23031 + C23032 + C23033) * C1115 -
            (C23034 + C23035 + C23036) * C50854) *
               C50763 * C17341 +
           ((C23033 + C23032 + C23031) * C1114 +
            (C23036 + C23035 + C23034) * C1109 -
            (C5346 * C23014 + C5343 * C23015 + C5345 * C4742 + C5342 * C4748 +
             C5344 * C2803 + C5341 * C2806) *
                C1115 -
            (C5346 * C23016 + C5343 * C23017 + C5345 * C4747 + C5342 * C4754 +
             C5344 * C2807 + C5341 * C2812) *
                C50854) *
               C50763 * C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
            (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
            (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
            (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C51045 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) + C4351 * C50854) *
                C50763 * C19942 +
            ((C117 * C4337 + C50915 * C4339) * C1115 -
             (C4351 * C1109 + C4350 * C1114) +
             (C117 * C4340 + C50915 * C4343) * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C1600 + C1599 - C1598 - C1601) * C50763 * C19940 +
            (C4186 + C4185 - C4184 - C4187) * C50763 * C19941 +
            (C4190 + C4189 - C4188 - C4191) * C50763 * C19942 +
            (C3388 * C1114 + C3389 * C1109 -
             (C117 * C4338 + C50915 * C4341) * C1115 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C17338 +
             (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
                C17341 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C17338 +
             (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
                C50953) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C17338 +
             (C1123 - (C1122 + C1121) + C1124) * C17339 +
             (C1127 - (C1126 + C1125) + C1128) * C17340) *
                C17341 +
            ((C3540 - (C3539 + C3538) + C3541) * C17338 +
             (C3546 - (C3547 + C3548) + C3549) * C17339 +
             (C9150 - (C9151 + C9152) + C9153) * C17340) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C17338 +
             (C1598 - (C1599 + C1600) + C1601) * C17339 +
             (C1602 - (C1603 + C1604) + C1605) * C17340) *
                C17341 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C17338 +
             (C4184 - (C4185 + C4186) + C4187) * C17339 +
             (C9746 - (C9747 + C9748) + C9749) * C17340) *
                C50953) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C17338 +
             (C1604 + C1603 - C1602 - C1605) * C17339 +
             (C1608 + C1607 - C1606 - C1609) * C17340) *
                C17341 +
            ((C4186 + C4185 - C4184 - C4187) * C17338 +
             (C9748 + C9747 - C9746 - C9749) * C17339 +
             (C1004 * C1114 + C1005 * C1109 -
              (C117 * C1710 + C50915 * C1717) * C1115 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C1114 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C1109 -
             (C21945 + C21946 + C21947) * C1115 -
             (C21948 + C21949 + C21950) * C50854) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C1114 +
             (C21950 + C21949 + C21948) * C1109 -
             (C21953 + C21952 + C21951) * C1115 -
             (C21956 + C21955 + C21954) * C50854) *
                C50763 * C50953) *
               C51036 +
           (((C5574 + C5573 + C5572) * C1115 -
             ((C5389 + C5388 + C5387) * C1109 +
              (C5386 + C5385 + C5384) * C1114) +
             (C5577 + C5576 + C5575) * C50854) *
                C50763 * C17341 +
            ((C5578 + C5579 + C5580) * C1115 -
             ((C5575 + C5576 + C5577) * C1109 +
              (C5572 + C5573 + C5574) * C1114) +
             (C5581 + C5582 + C5583) * C50854) *
                C50763 * C50953) *
               C50789) *
              C51045 +
          ((((C22601 + C22602 + C22603) * C1115 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C1109 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C1114) +
             (C22604 + C22605 + C22606) * C50854) *
                C50763 * C17341 +
            ((C5344 * C1707 + C5341 * C1711 + C5345 * C2803 + C5342 * C2806 +
              C5346 * C4742 + C5343 * C4748) *
                 C1115 -
             ((C22606 + C22605 + C22604) * C1109 +
              (C22603 + C22602 + C22601) * C1114) +
             (C5344 * C1712 + C5341 * C1719 + C5345 * C2807 + C5342 * C2812 +
              C5346 * C4747 + C5343 * C4754) *
                 C50854) *
                C50763 * C50953) *
               C51036 +
           (((C5766 + C5767 + C5768) * C1114 + (C5769 + C5770 + C5771) * C1109 -
             (C6318 + C6317 + C6316) * C1115 -
             (C6321 + C6320 + C6319) * C50854) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C1114 + (C6319 + C6320 + C6321) * C1109 -
             (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
              C5344 * C1708 + C5341 * C1713) *
                 C1115 -
             (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
              C5344 * C1714 + C5341 * C1720) *
                 C50854) *
                C50763 * C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C17338 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C17339 +
           (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
            C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
               C17340) *
              C17341 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C17338 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C17339 +
           (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
            C2650 * C1211 + C2651 * C1206 -
            (C117 * C2599 + C50915 * C2604) * C1212 -
            (C117 * C2605 + C50915 * C2608) * C1207) *
               C17340) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C17338 +
            (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
               C17341 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C17338 +
            (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
               C50953) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C17338 +
            (C1123 - (C1122 + C1121) + C1124) * C17339 +
            (C1127 - (C1126 + C1125) + C1128) * C17340) *
               C17341 +
           ((C3540 - (C3539 + C3538) + C3541) * C17338 +
            (C3546 - (C3547 + C3548) + C3549) * C17339 +
            (C9150 - (C9151 + C9152) + C9153) * C17340) *
               C50953) *
              C1112 +
          ((C1137 * C17338 + C1138 * C17339 +
            (C1131 + C1130 - C1129 - C1132) * C17340) *
               C17341 +
           (C9155 * C17338 + (C9152 + C9151 - C9150 - C9153) * C17339 +
            (C710 * C1114 + C711 * C1109 -
             (C117 * C306 + C50915 * C325) * C1115 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C17340) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
           (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
           (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
           (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
               C50763 * C19943) *
              C1112 +
          (C1137 * C50763 * C19940 + C9155 * C50763 * C19941 +
           (C3552 + C3551 - C3550 - C3553) * C50763 * C19942 +
           (C2650 * C1114 + C2651 * C1109 -
            (C117 * C2599 + C50915 * C2604) * C1115 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
           C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
           C2645 * C1207) *
              C50763 * C19940 +
          (C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
           C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
              C50763 * C19941 +
          (C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
           C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
              C50763 * C19942 +
          (C2644 * C1209 + C2645 * C1204 - C3664 * C1210 - C3665 * C1205 +
           C20639 * C1211 + C20640 * C1206 -
           (C117 * C20630 + C50915 * C20631) * C1212 -
           (C117 * C20632 + C50915 * C20633) * C1207) *
              C50763 * C19943) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C1114 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C1109 -
            (C21945 + C21946 + C21947) * C1115 -
            (C21948 + C21949 + C21950) * C50854) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C1114 +
            (C21950 + C21949 + C21948) * C1109 -
            (C21953 + C21952 + C21951) * C1115 -
            (C21956 + C21955 + C21954) * C50854) *
               C50763 * C50953) *
              C1111 +
          (((C5574 + C5573 + C5572) * C1115 -
            ((C5389 + C5388 + C5387) * C1109 +
             (C5386 + C5385 + C5384) * C1114) +
            (C5577 + C5576 + C5575) * C50854) *
               C50763 * C17341 +
           ((C5578 + C5579 + C5580) * C1115 -
            ((C5575 + C5576 + C5577) * C1109 +
             (C5572 + C5573 + C5574) * C1114) +
            (C5581 + C5582 + C5583) * C50854) *
               C50763 * C50953) *
              C1112 +
          (((C5395 + C5394 + C5393) * C1114 + (C5392 + C5391 + C5390) * C1109 -
            (C5938 + C5937 + C5936) * C1115 -
            (C5941 + C5940 + C5939) * C50854) *
               C50763 * C17341 +
           ((C5936 + C5937 + C5938) * C1114 + (C5939 + C5940 + C5941) * C1109 -
            (C5346 * C2805 + C5343 * C2811 + C5345 * C1709 + C5342 * C1715 +
             C5344 * C302 + C5341 * C317) *
                C1115 -
            (C5346 * C2810 + C5343 * C2814 + C5345 * C1716 + C5342 * C1721 +
             C5344 * C318 + C5341 * C332) *
                C50854) *
               C50763 * C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
            C5346 * C497 + C5343 * C512) *
               C1209 +
           (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
            C5346 * C513 + C5343 * C527) *
               C1204 -
           (C21945 + C21946 + C21947) * C1210 -
           (C21948 + C21949 + C21950) * C1205 +
           (C21951 + C21952 + C21953) * C1211 +
           (C21954 + C21955 + C21956) * C1206 -
           (C22863 + C22864 + C22865) * C1212 -
           (C22866 + C22867 + C22868) * C1207) *
              C50763 * C17341 +
          ((C21947 + C21946 + C21945) * C1209 +
           (C21950 + C21949 + C21948) * C1204 -
           (C21953 + C21952 + C21951) * C1210 -
           (C21956 + C21955 + C21954) * C1205 +
           (C22865 + C22864 + C22863) * C1211 +
           (C22868 + C22867 + C22866) * C1206 -
           (C5346 * C20738 + C5343 * C20739 + C5345 * C4337 + C5342 * C4339 +
            C5344 * C2597 + C5341 * C2600) *
               C1212 -
           (C5346 * C20740 + C5343 * C20741 + C5345 * C4340 + C5342 * C4343 +
            C5344 * C2601 + C5341 * C2606) *
               C1207) *
              C50763 * C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
            (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
            (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
            (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C1821 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C50763 * C19942 +
            (C21083 * C684 - (C4351 * C51044 + C4350 * C683) +
             C21084 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C985 + C984 - C1006 - C1007) * C50763 * C19940 +
            (C3376 + C3375 - C3374 - C3377) * C50763 * C19941 +
            (C3381 + C3380 - C3390 - C3391) * C50763 * C19942 +
            (C3388 * C683 + C3389 * C51044 -
             (C117 * C4338 + C50915 * C4341) * C684 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C17338 +
             (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
                C17341 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C17338 +
             (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
                C50953) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C17338 +
             (C696 - (C695 + C694) + C697) * C17339 +
             (C700 - (C699 + C698) + C701) * C17340) *
                C17341 +
            ((C2990 - (C2989 + C2988) + C2991) * C17338 +
             (C2996 - (C2997 + C2998) + C2999) * C17339 +
             (C8650 - (C8651 + C8652) + C8653) * C17340) *
                C50953) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C17338 +
             (C1006 - (C984 + C985) + C1007) * C17339 +
             (C1008 - (C990 + C991) + C1009) * C17340) *
                C17341 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C17338 +
             (C3374 - (C3375 + C3376) + C3377) * C17339 +
             (C8999 - (C9000 + C9001) + C9002) * C17340) *
                C50953) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C17338 +
             (C991 + C990 - C1008 - C1009) * C17339 +
             (C997 + C996 - C1010 - C1011) * C17340) *
                C17341 +
            ((C3376 + C3375 - C3374 - C3377) * C17338 +
             (C9001 + C9000 - C8999 - C9002) * C17339 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C683 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C51044 -
             (C21945 + C21946 + C21947) * C684 -
             (C21948 + C21949 + C21950) * C50854) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C683 +
             (C21950 + C21949 + C21948) * C51044 -
             (C21953 + C21952 + C21951) * C684 -
             (C21956 + C21955 + C21954) * C50854) *
                C50763 * C50953) *
               C51036 +
           (((C5574 + C5573 + C5572) * C684 -
             ((C5389 + C5388 + C5387) * C51044 +
              (C5386 + C5385 + C5384) * C683) +
             (C5577 + C5576 + C5575) * C50854) *
                C50763 * C17341 +
            ((C5578 + C5579 + C5580) * C684 -
             ((C5575 + C5576 + C5577) * C51044 +
              (C5572 + C5573 + C5574) * C683) +
             (C5581 + C5582 + C5583) * C50854) *
                C50763 * C50953) *
               C50789) *
              C1821 +
          ((((C22601 + C22602 + C22603) * C684 -
             ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
               C5344 * C510 + C5341 * C526) *
                  C51044 +
              (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
               C5344 * C496 + C5341 * C511) *
                  C683) +
             (C22604 + C22605 + C22606) * C50854) *
                C50763 * C17341 +
            ((C23537 + C23536 + C23535) * C684 -
             ((C22606 + C22605 + C22604) * C51044 +
              (C22603 + C22602 + C22601) * C683) +
             (C23540 + C23539 + C23538) * C50854) *
                C50763 * C50953) *
               C51036 +
           (((C5766 + C5767 + C5768) * C683 + (C5769 + C5770 + C5771) * C51044 -
             (C6318 + C6317 + C6316) * C684 -
             (C6321 + C6320 + C6319) * C50854) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C683 + (C6319 + C6320 + C6321) * C51044 -
             (C5346 * C4741 + C5343 * C4746 + C5345 * C2804 + C5342 * C2808 +
              C5344 * C1708 + C5341 * C1713) *
                 C684 -
             (C5346 * C4745 + C5343 * C4753 + C5345 * C2809 + C5342 * C2813 +
              C5344 * C1714 + C5341 * C1720) *
                 C50854) *
                C50763 * C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
               C50763 * C19943) *
              C50784 * C51091 +
          ((C3384 * C684 -
            ((C117 * C510 + C50915 * C526) * C51044 +
             (C117 * C496 + C50915 * C511) * C683) +
            C3385 * C50854) *
               C50763 * C19940 +
           (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
               C50763 * C19941 +
           (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
               C50763 * C19942 +
           (C21083 * C684 - (C4351 * C51044 + C4350 * C683) + C21084 * C50854) *
               C50763 * C19943) *
              C50784 * C51092 +
          (((C117 * C497 + C50915 * C512) * C683 +
            (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
            C3829 * C50854) *
               C50763 * C19940 +
           (C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
               C50763 * C19941 +
           (C3830 * C683 + C3831 * C51044 - C20747 * C684 - C20748 * C50854) *
               C50763 * C19942 +
           (C20747 * C683 + C20748 * C51044 -
            (C117 * C20738 + C50915 * C20739) * C684 -
            (C117 * C20740 + C50915 * C20741) * C50854) *
               C50763 * C19943) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C17338 +
            (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
               C17341 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C17338 +
            (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
               C50953) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C17338 +
            (C1006 - (C984 + C985) + C1007) * C17339 +
            (C1008 - (C990 + C991) + C1009) * C17340) *
               C17341 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C17338 +
            (C3374 - (C3375 + C3376) + C3377) * C17339 +
            (C8999 - (C9000 + C9001) + C9002) * C17340) *
               C50953) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C17338 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C17339 +
            (C565 * C683 + C566 * C51044 - C8499 * C684 - C8500 * C50854) *
                C17340) *
               C17341 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C17338 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C17339 +
            (C8499 * C683 + C8500 * C51044 -
             (C117 * C2805 + C50915 * C2811) * C684 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C17340) *
               C50953) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C683 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C51044 -
            (C21945 + C21946 + C21947) * C684 -
            (C21948 + C21949 + C21950) * C50854) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C683 +
            (C21950 + C21949 + C21948) * C51044 -
            (C21953 + C21952 + C21951) * C684 -
            (C21956 + C21955 + C21954) * C50854) *
               C50763 * C50953) *
              C50784 * C51091 +
          (((C22601 + C22602 + C22603) * C684 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C51044 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C683) +
            (C22604 + C22605 + C22606) * C50854) *
               C50763 * C17341 +
           ((C23537 + C23536 + C23535) * C684 -
            ((C22606 + C22605 + C22604) * C51044 +
             (C22603 + C22602 + C22601) * C683) +
            (C23540 + C23539 + C23538) * C50854) *
               C50763 * C50953) *
              C50784 * C51092 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C683 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C51044 -
            (C23031 + C23032 + C23033) * C684 -
            (C23034 + C23035 + C23036) * C50854) *
               C50763 * C17341 +
           ((C23033 + C23032 + C23031) * C683 +
            (C23036 + C23035 + C23034) * C51044 -
            (C5346 * C23014 + C5343 * C23015 + C5345 * C4742 + C5342 * C4748 +
             C5344 * C2803 + C5341 * C2806) *
                C684 -
            (C5346 * C23016 + C5343 * C23017 + C5345 * C4747 + C5342 * C4754 +
             C5344 * C2807 + C5341 * C2812) *
                C50854) *
               C50763 * C50953) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50915 * C126) * C118 +
                  (C117 * C127 + C50915 * C140) * C50802) *
                     C17338 +
                 (C178 + C179) * C17339 + C188 * C17340) *
                    C17341 +
                ((C2640 * C118 + C2641 * C50802) * C17338 +
                 (C2440 + C2441) * C17339 + C8193 * C17340) *
                    C50953) *
                   C1111 -
               ((C8194 * C17340 + (C2446 + C2447) * C17339 +
                 (C2441 + C2440) * C17338) *
                    C50953 +
                (C191 * C17340 + (C181 + C180) * C17339 +
                 (C179 + C178) * C17338) *
                    C17341) *
                   C1112 +
               ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) *
                    C17341 +
                (C8193 * C17338 + (C2448 + C2449) * C17339 +
                 (C8195 + C8196) * C17340) *
                    C50953) *
                   C1113) *
                  C1821 +
              ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
                 (C573 + C574) * C17340) *
                    C17341 +
                ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
                 (C8802 + C8803) * C17340) *
                    C50953) *
                   C1112 -
               ((C8804 * C17340 + (C2817 + C2816) * C17339 +
                 (C3385 * C50802 + C3384 * C118) * C17338) *
                    C50953 +
                (C827 * C17340 + (C570 + C569) * C17339 +
                 ((C117 * C510 + C50915 * C526) * C50802 +
                  (C117 * C496 + C50915 * C511) * C118) *
                     C17338) *
                    C17341) *
                   C1111 -
               ((((C117 * C975 + C50915 * C980) * C50802 +
                  (C117 * C965 + C50915 * C974) * C118) *
                     C17340 +
                 (C8803 + C8802) * C17339 + C8804 * C17338) *
                    C50953 +
                ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) *
                    C17341) *
                   C1113) *
                  C50882) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50915 * C126) * C294 +
                 (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
                 C2641 * C290 + C2642 * C296 + C2643 * C291) *
                    C17338 +
                (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
                (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
                   C17341 +
               ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
                 C2644 * C296 + C2645 * C291) *
                    C17338 +
                (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
                (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
                   C50953) *
                  C50784 * C1821 +
              (((C3384 * C295 -
                 ((C117 * C510 + C50915 * C526) * C289 +
                  (C117 * C496 + C50915 * C511) * C294) +
                 C3385 * C290 - C3386 * C296 - C3387 * C291) *
                    C17338 +
                (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
                 C2830 * C296 - C2831 * C291) *
                    C17339 +
                (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
                 C3156 * C296 - C3157 * C291) *
                    C17340) *
                   C17341 +
               ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
                 C4350 * C296 - C4351 * C291) *
                    C17338 +
                (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
                 C3388 * C296 - C3389 * C291) *
                    C17339 +
                (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
                 (C117 * C3355 + C50915 * C3360) * C296 -
                 (C117 * C3361 + C50915 * C3364) * C291) *
                    C17340) *
                   C50953) *
                  C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C17338 +
            (C178 + C179) * C17339 + C188 * C17340) *
               C17341 +
           ((C2640 * C118 + C2641 * C50802) * C17338 +
            (C2440 + C2441) * C17339 + C8193 * C17340) *
               C50953) *
              C50784 * C1987 -
          ((C8804 * C17340 + (C2817 + C2816) * C17339 +
            (C3385 * C50802 + C3384 * C118) * C17338) *
               C50953 +
           (C827 * C17340 + (C570 + C569) * C17339 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C17338) *
               C17341) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C17338 +
            (C575 + C576) * C17339 + (C577 + C578) * C17340) *
               C17341 +
           ((C3828 * C118 + C3829 * C50802) * C17338 +
            (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
               C50953) *
              C50784 * C1989 -
          ((((C117 * C6301 + C50915 * C6302) * C50802 +
             (C117 * C6299 + C50915 * C6300) * C118) *
                C17340 +
            ((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C17339 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C17338) *
               C50953 +
           (((C117 * C1997 + C50915 * C2004) * C50802 +
             (C117 * C1992 + C50915 * C1998) * C118) *
                C17340 +
            ((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C17339 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C17338) *
               C17341) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C1111 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C1112 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C1113) *
              C1821 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C1112 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C1111 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            C20639 * C296 + C20640 * C291) *
               C50763 * C19943) *
              C50784 * C1821 +
          ((C3384 * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            C3385 * C290 - C3386 * C296 - C3387 * C291) *
               C50763 * C19940 +
           (C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
            C4350 * C296 - C4351 * C291) *
               C50763 * C19941 +
           (C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
            C21083 * C296 - C21084 * C291) *
               C50763 * C19942 +
           (C21083 * C295 - (C4351 * C289 + C4350 * C294) + C21084 * C290 -
            (C117 * C21074 + C50915 * C21075) * C296 -
            (C117 * C21076 + C50915 * C21077) * C291) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C50784 * C1987 -
          ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
           (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
           (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
           ((C117 * C510 + C50915 * C526) * C50802 +
            (C117 * C496 + C50915 * C511) * C118) *
               C50763 * C19940) *
              C50784 * C1988 +
          (((C117 * C497 + C50915 * C512) * C118 +
            (C117 * C513 + C50915 * C527) * C50802) *
               C50763 * C19940 +
           (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
           (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
           (C20747 * C118 + C20748 * C50802) * C50763 * C19943) *
              C50784 * C1989 -
          (((C117 * C21347 + C50915 * C21349) * C50802 +
            (C117 * C21346 + C50915 * C21348) * C118) *
               C50763 * C19943 +
           ((C117 * C4747 + C50915 * C4754) * C50802 +
            (C117 * C4742 + C50915 * C4748) * C118) *
               C50763 * C19942 +
           ((C117 * C4751 + C50915 * C4756) * C50802 +
            (C117 * C4744 + C50915 * C4752) * C118) *
               C50763 * C19941 +
           ((C117 * C2001 + C50915 * C2006) * C50802 +
            (C117 * C1994 + C50915 * C2002) * C118) *
               C50763 * C19940) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C118 +
             (C21950 + C21949 + C21948) * C50802) *
                C50763 * C50953) *
               C1111 -
           (((C5575 + C5576 + C5577) * C50802 +
             (C5572 + C5573 + C5574) * C118) *
                C50763 * C50953 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C50763 * C17341) *
               C1112 +
           (((C5395 + C5394 + C5393) * C118 +
             (C5392 + C5391 + C5390) * C50802) *
                C50763 * C17341 +
            ((C5936 + C5937 + C5938) * C118 +
             (C5939 + C5940 + C5941) * C50802) *
                C50763 * C50953) *
               C1113) *
              C1821 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C118 +
             (C6319 + C6320 + C6321) * C50802) *
                C50763 * C50953) *
               C1112 -
           (((C22606 + C22605 + C22604) * C50802 +
             (C22603 + C22602 + C22601) * C118) *
                C50763 * C50953 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C50763 * C17341) *
               C1111 -
           (((C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50802 +
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C118) *
                C50763 * C50953 +
            ((C6105 + C6104 + C6103) * C50802 +
             (C6102 + C6101 + C6100) * C118) *
                C50763 * C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C21945 + C21946 + C21947) * C295 -
            (C21948 + C21949 + C21950) * C290 +
            (C21951 + C21952 + C21953) * C296 +
            (C21954 + C21955 + C21956) * C291) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C294 +
            (C21950 + C21949 + C21948) * C289 -
            (C21953 + C21952 + C21951) * C295 -
            (C21956 + C21955 + C21954) * C290 +
            (C22865 + C22864 + C22863) * C296 +
            (C22868 + C22867 + C22866) * C291) *
               C50763 * C50953) *
              C50784 * C1821 +
          (((C22601 + C22602 + C22603) * C295 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C289 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C294) +
            (C22604 + C22605 + C22606) * C290 -
            (C23535 + C23536 + C23537) * C296 -
            (C23538 + C23539 + C23540) * C291) *
               C50763 * C17341 +
           ((C23537 + C23536 + C23535) * C295 -
            ((C22606 + C22605 + C22604) * C289 +
             (C22603 + C22602 + C22601) * C294) +
            (C23540 + C23539 + C23538) * C290 -
            (C5346 * C21346 + C5343 * C21348 + C5345 * C3811 + C5342 * C3813 +
             C5344 * C3353 + C5341 * C3356) *
                C296 -
            (C5346 * C21347 + C5343 * C21349 + C5345 * C3814 + C5342 * C3817 +
             C5344 * C3357 + C5341 * C3362) *
                C291) *
               C50763 * C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C118 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C50802) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C118 +
            (C21950 + C21949 + C21948) * C50802) *
               C50763 * C50953) *
              C50784 * C1987 -
          (((C22606 + C22605 + C22604) * C50802 +
            (C22603 + C22602 + C22601) * C118) *
               C50763 * C50953 +
           ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
             C5344 * C510 + C5341 * C526) *
                C50802 +
            (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
             C5344 * C496 + C5341 * C511) *
                C118) *
               C50763 * C17341) *
              C50784 * C1988 +
          (((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
             C5346 * C5729 + C5343 * C5732) *
                C118 +
            (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
             C5346 * C5733 + C5343 * C5738) *
                C50802) *
               C50763 * C17341 +
           ((C23033 + C23032 + C23031) * C118 +
            (C23036 + C23035 + C23034) * C50802) *
               C50763 * C50953) *
              C50784 * C1989 -
          (((C5346 * C23931 + C5343 * C23933 + C5345 * C6714 + C5342 * C6717 +
             C5344 * C4751 + C5341 * C4756) *
                C50802 +
            (C5346 * C23930 + C5343 * C23932 + C5345 * C6711 + C5342 * C6713 +
             C5344 * C4744 + C5341 * C4752) *
                C118) *
               C50763 * C50953 +
           ((C5346 * C7599 + C5343 * C7602 + C5345 * C5733 + C5342 * C5738 +
             C5344 * C2001 + C5341 * C2006) *
                C50802 +
            (C5346 * C7596 + C5343 * C7600 + C5345 * C5729 + C5342 * C5732 +
             C5344 * C1994 + C5341 * C2002) *
                C118) *
               C50763 * C17341) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C51036 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C50789) *
              C51091 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C50789 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C51036) *
              C51092 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C50763 * C19940 +
            (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
            (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
            (C20747 * C118 + C20748 * C50802) * C50763 * C19943) *
               C51036 -
           (((C117 * C3816 + C50915 * C3818) * C50802 +
             (C117 * C3812 + C50915 * C3815) * C118) *
                C50763 * C19943 +
            (C2841 + C2840) * C50763 * C19942 +
            (C2839 + C2838) * C50763 * C19941 +
            (C576 + C575) * C50763 * C19940) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C51036 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C50789 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C17338 +
             (C575 + C576) * C17339 + (C577 + C578) * C17340) *
                C17341 +
            ((C3828 * C118 + C3829 * C50802) * C17338 +
             (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
                C50953) *
               C51036 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C17340 +
             (C8502 + C8501) * C17339 + (C2839 + C2838) * C17338) *
                C50953 +
            ((C580 + C579) * C17340 + (C578 + C577) * C17339 +
             (C576 + C575) * C17338) *
                C17341) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C118 +
             (C21950 + C21949 + C21948) * C50802) *
                C50763 * C50953) *
               C51036 -
           (((C5575 + C5576 + C5577) * C50802 +
             (C5572 + C5573 + C5574) * C118) *
                C50763 * C50953 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C50763 * C17341) *
               C50789) *
              C51091 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C118 +
             (C6319 + C6320 + C6321) * C50802) *
                C50763 * C50953) *
               C50789 -
           (((C22606 + C22605 + C22604) * C50802 +
             (C22603 + C22602 + C22601) * C118) *
                C50763 * C50953 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C50763 * C17341) *
               C51036) *
              C51092 +
          ((((C5344 * C497 + C5341 * C512 + C5345 * C1994 + C5342 * C2002 +
              C5346 * C5729 + C5343 * C5732) *
                 C118 +
             (C5344 * C513 + C5341 * C527 + C5345 * C2001 + C5342 * C2006 +
              C5346 * C5733 + C5343 * C5738) *
                 C50802) *
                C50763 * C17341 +
            ((C23033 + C23032 + C23031) * C118 +
             (C23036 + C23035 + C23034) * C50802) *
                C50763 * C50953) *
               C51036 -
           (((C5346 * C6716 + C5343 * C6718 + C5345 * C4749 + C5342 * C4755 +
              C5344 * C1334 + C5341 * C1340) *
                 C50802 +
             (C5346 * C6712 + C5343 * C6715 + C5345 * C4743 + C5342 * C4750 +
              C5344 * C1328 + C5341 * C1333) *
                 C118) *
                C50763 * C50953 +
            ((C5777 + C5776 + C5775) * C50802 +
             (C5774 + C5773 + C5772) * C118) *
                C50763 * C17341) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C17338 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C17339 +
            (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
             C3156 * C296 - C3157 * C291) *
                C17340) *
               C17341 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C17338 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C17339 +
            (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
             (C117 * C3355 + C50915 * C3360) * C296 -
             (C117 * C3361 + C50915 * C3364) * C291) *
                C17340) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C1111 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C1112 +
           ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
            (C8193 * C17338 + (C2448 + C2449) * C17339 +
             (C8195 + C8196) * C17340) *
                C50953) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C1112 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C1111 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C17340 +
             (C8803 + C8802) * C17339 + C8804 * C17338) *
                C50953 +
            ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) * C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C1111 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C1112 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C1113) *
              C1821 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C1112 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C1111 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            C20639 * C296 + C20640 * C291) *
               C50763 * C19943) *
              C50784 * C1821 +
          ((C3384 * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            C3385 * C290 - C3386 * C296 - C3387 * C291) *
               C50763 * C19940 +
           (C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
            C4350 * C296 - C4351 * C291) *
               C50763 * C19941 +
           (C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
            C21083 * C296 - C21084 * C291) *
               C50763 * C19942 +
           (C21083 * C295 - (C4351 * C289 + C4350 * C294) + C21084 * C290 -
            (C117 * C21074 + C50915 * C21075) * C296 -
            (C117 * C21076 + C50915 * C21077) * C291) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
              C5346 * C497 + C5343 * C512) *
                 C118 +
             (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
              C5346 * C513 + C5343 * C527) *
                 C50802) *
                C50763 * C17341 +
            ((C21947 + C21946 + C21945) * C118 +
             (C21950 + C21949 + C21948) * C50802) *
                C50763 * C50953) *
               C1111 -
           (((C5575 + C5576 + C5577) * C50802 +
             (C5572 + C5573 + C5574) * C118) *
                C50763 * C50953 +
            ((C5389 + C5388 + C5387) * C50802 +
             (C5386 + C5385 + C5384) * C118) *
                C50763 * C17341) *
               C1112 +
           (((C5395 + C5394 + C5393) * C118 +
             (C5392 + C5391 + C5390) * C50802) *
                C50763 * C17341 +
            ((C5936 + C5937 + C5938) * C118 +
             (C5939 + C5940 + C5941) * C50802) *
                C50763 * C50953) *
               C1113) *
              C1821 +
          ((((C5766 + C5767 + C5768) * C118 +
             (C5769 + C5770 + C5771) * C50802) *
                C50763 * C17341 +
            ((C6316 + C6317 + C6318) * C118 +
             (C6319 + C6320 + C6321) * C50802) *
                C50763 * C50953) *
               C1112 -
           (((C22606 + C22605 + C22604) * C50802 +
             (C22603 + C22602 + C22601) * C118) *
                C50763 * C50953 +
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C50802 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C118) *
                C50763 * C17341) *
               C1111 -
           (((C5346 * C6301 + C5343 * C6302 + C5345 * C1336 + C5342 * C1341 +
              C5344 * C971 + C5341 * C978) *
                 C50802 +
             (C5346 * C6299 + C5343 * C6300 + C5345 * C1329 + C5342 * C1335 +
              C5344 * C963 + C5341 * C970) *
                 C118) *
                C50763 * C50953 +
            ((C6105 + C6104 + C6103) * C50802 +
             (C6102 + C6101 + C6100) * C118) *
                C50763 * C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5344 * C119 + C5341 * C126 + C5345 * C496 + C5342 * C511 +
             C5346 * C497 + C5343 * C512) *
                C294 +
            (C5344 * C127 + C5341 * C140 + C5345 * C510 + C5342 * C526 +
             C5346 * C513 + C5343 * C527) *
                C289 -
            (C21945 + C21946 + C21947) * C295 -
            (C21948 + C21949 + C21950) * C290 +
            (C21951 + C21952 + C21953) * C296 +
            (C21954 + C21955 + C21956) * C291) *
               C50763 * C17341 +
           ((C21947 + C21946 + C21945) * C294 +
            (C21950 + C21949 + C21948) * C289 -
            (C21953 + C21952 + C21951) * C295 -
            (C21956 + C21955 + C21954) * C290 +
            (C22865 + C22864 + C22863) * C296 +
            (C22868 + C22867 + C22866) * C291) *
               C50763 * C50953) *
              C50784 * C1821 +
          (((C22601 + C22602 + C22603) * C295 -
            ((C5346 * C2001 + C5343 * C2006 + C5345 * C513 + C5342 * C527 +
              C5344 * C510 + C5341 * C526) *
                 C289 +
             (C5346 * C1994 + C5343 * C2002 + C5345 * C497 + C5342 * C512 +
              C5344 * C496 + C5341 * C511) *
                 C294) +
            (C22604 + C22605 + C22606) * C290 -
            (C23535 + C23536 + C23537) * C296 -
            (C23538 + C23539 + C23540) * C291) *
               C50763 * C17341 +
           ((C23537 + C23536 + C23535) * C295 -
            ((C22606 + C22605 + C22604) * C289 +
             (C22603 + C22602 + C22601) * C294) +
            (C23540 + C23539 + C23538) * C290 -
            (C5346 * C21346 + C5343 * C21348 + C5345 * C3811 + C5342 * C3813 +
             C5344 * C3353 + C5341 * C3356) *
                C296 -
            (C5346 * C21347 + C5343 * C21349 + C5345 * C3814 + C5342 * C3817 +
             C5344 * C3357 + C5341 * C3362) *
                C291) *
               C50763 * C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C51029 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             C13967 * C684 - C13968 * C50854) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C51029 +
            (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C51087 +
          (((C13971 * C684 -
             ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
             C13972 * C50854) *
                C51029 +
            (C14395 * C684 -
             ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
             C14396 * C50854) *
                C50768) *
               C17341 +
           ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
             C13970 * C50854) *
                C51029 +
            ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C51088 +
          ((C11486 * C51029 +
            ((C10917 + C10916) * C683 + (C10915 + C10914) * C51044 -
             (C11482 + C11481) * C684 - (C11484 + C11483) * C50854) *
                C50768) *
               C17341 +
           ((C14395 * C683 + C14396 * C51044 - (C11123 + C11122) * C684 -
             (C11125 + C11124) * C50854) *
                C51029 +
            ((C11481 + C11482) * C683 + (C11483 + C11484) * C51044 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C684 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C683 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C51044 -
              (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                 C51029 +
             ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
              C13967 * C684 - C13968 * C50854) *
                 C50768) *
                C17341 +
            (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
              (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                 C51029 +
             (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C292 +
           (((C13971 * C684 -
              ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
              C13972 * C50854) *
                 C51029 +
             (C14395 * C684 -
              ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
              C14396 * C50854) *
                 C50768) *
                C17341 +
            ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
              C13970 * C50854) *
                 C51029 +
             ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C14869 + C14870) * C684 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C51044 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C683) +
              (C14871 + C14872) * C50854) *
                 C51029 +
             (C14857 * C684 -
              ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
              C14858 * C50854) *
                 C50768) *
                C17341 +
            (((C16074 + C16073) * C684 -
              ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
              (C16076 + C16075) * C50854) *
                 C51029 +
             ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C292 +
           ((((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
              C14864 * C684 - C14863 * C50854) *
                 C51029 +
             ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
              (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                 C50768) *
                C17341 +
            ((C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
              (C14876 + C14875) * C50854) *
                 C51029 +
             ((C11864 + C11865) * C683 + (C11866 + C11867) * C51044 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C684 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C51029 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C51029 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C13971 * C295 -
             ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
             C13972 * C290 - C13973 * C296 - C13974 * C291) *
                C51029 +
            (C14395 * C295 -
             ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
             C14396 * C290 - (C11123 + C11122) * C296 -
             (C11125 + C11124) * C291) *
                C50768) *
               C17341 +
           ((C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
             (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
                C51029 +
            ((C11122 + C11123) * C295 - (C11469 * C289 + C11468 * C294) +
             (C11124 + C11125) * C290 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C296 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C17341 +
           (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
            (C13971 * C118 + C13972 * C50802) * C50768) *
               C50953) *
              C112 -
          (((C11469 * C50802 + C11468 * C118) * C50768 +
            (C13968 * C50802 + C13967 * C118) * C51029) *
               C50953 +
           (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
               C17341) *
              C113 +
          ((C10930 * C51029 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
               C17341 +
           ((C14395 * C118 + C14396 * C50802) * C51029 +
            ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                 C50802 +
             (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                 C118) *
                C50768 +
            ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C51029) *
               C50953 +
           (((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C50768 +
            C10931 * C51029) *
               C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C17341 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C292 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C51029) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
                C17341) *
               C50789) *
              C489 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51029 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C17341 +
            ((C14857 * C118 + C14858 * C50802) * C51029 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C50789 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C51029) *
                C17341) *
               C292) *
              C490 +
          (((((C10871 * C497 + C51058 * C512 + C10872 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C10871 * C513 + C51058 * C527 + C10872 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C51029 +
             ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
                C17341 +
            (((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C51029 +
             ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
                C50953) *
               C292 -
           ((((C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
               C51058 * C1341) *
                  C50802 +
              (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
               C51058 * C1335) *
                  C118) *
                 C50768 +
             ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C51029) *
                C50953 +
            (((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C50768 +
             ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C51029) *
                C17341) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C17341 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C51087 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C51029) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
                C17341) *
               C51088 +
           ((C10930 * C51029 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C17341 +
            ((C14395 * C118 + C14396 * C50802) * C51029 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C682) *
              C51045 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51029 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C17341 +
            ((C14857 * C118 + C14858 * C50802) * C51029 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C51088 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C51029) *
                C17341) *
               C51087 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C51029) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C51029) *
                C17341) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C17341 +
           (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
            (C13971 * C118 + C13972 * C50802) * C50768) *
               C50953) *
              C112 -
          (((C11469 * C50802 + C11468 * C118) * C50768 +
            (C13968 * C50802 + C13967 * C118) * C51029) *
               C50953 +
           (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
            ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
               C17341) *
              C113 +
          ((C10930 * C51029 +
            ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
               C17341 +
           ((C14395 * C118 + C14396 * C50802) * C51029 +
            ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C10872 * C975 + C50979 * C980 + C10871 * C324 + C51058 * C335) *
                 C50802 +
             (C10872 * C965 + C50979 * C974 + C10871 * C305 + C51058 * C323) *
                 C118) *
                C50768 +
            ((C11484 + C11483) * C50802 + (C11482 + C11481) * C118) * C51029) *
               C50953 +
           (((C10921 + C10920) * C50802 + (C10919 + C10918) * C118) * C50768 +
            C10931 * C51029) *
               C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C51029 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C51029 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C13971 * C295 -
             ((C10909 + C10908) * C289 + (C10907 + C10906) * C294) +
             C13972 * C290 - C13973 * C296 - C13974 * C291) *
                C51029 +
            (C14395 * C295 -
             ((C10913 + C10912) * C289 + (C10911 + C10910) * C294) +
             C14396 * C290 - (C11123 + C11122) * C296 -
             (C11125 + C11124) * C291) *
                C50768) *
               C17341 +
           ((C13969 * C295 - (C13968 * C289 + C13967 * C294) + C13970 * C290 -
             (C13992 + C13991) * C296 - (C13994 + C13993) * C291) *
                C51029 +
            ((C11122 + C11123) * C295 - (C11469 * C289 + C11468 * C294) +
             (C11124 + C11125) * C290 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C296 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1446 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51089 -
             (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
             (C13987 + C13988) * C1448 + (C13989 + C13990) * C1443) *
                C51029 +
            ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
             C13967 * C1447 - C13968 * C51090 + C13969 * C1448 +
             C13970 * C1443) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
             (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
             (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
                C51029 +
            (C13971 * C1446 + C13972 * C51089 - C13973 * C1447 -
             C13974 * C51090 + (C13991 + C13992) * C1448 +
             (C13993 + C13994) * C1443) *
                C50768) *
               C50953) *
              C51036 +
          (((C13971 * C1447 -
             ((C10909 + C10908) * C51089 + (C10907 + C10906) * C1446) +
             C13972 * C51090 - C13973 * C1448 - C13974 * C1443) *
                C51029 +
            (C14395 * C1447 -
             ((C10913 + C10912) * C51089 + (C10911 + C10910) * C1446) +
             C14396 * C51090 - (C11123 + C11122) * C1448 -
             (C11125 + C11124) * C1443) *
                C50768) *
               C17341 +
           ((C13969 * C1447 - (C13968 * C51089 + C13967 * C1446) +
             C13970 * C51090 - (C13992 + C13991) * C1448 -
             (C13994 + C13993) * C1443) *
                C51029 +
            ((C11122 + C11123) * C1447 - (C11469 * C51089 + C11468 * C1446) +
             (C11124 + C11125) * C51090 -
             (C10872 * C3355 + C50979 * C3360 + C10871 * C1215 +
              C51058 * C1221) *
                 C1448 -
             (C10872 * C3361 + C50979 * C3364 + C10871 * C1222 +
              C51058 * C1227) *
                 C1443) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1446 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51089 -
             (C13983 + C13984) * C1447 - (C13985 + C13986) * C51090 +
             (C13987 + C13988) * C1448 + (C13989 + C13990) * C1443) *
                C51029 +
            ((C10906 + C10907) * C1446 + (C10908 + C10909) * C51089 -
             C13967 * C1447 - C13968 * C51090 + C13969 * C1448 +
             C13970 * C1443) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C1446 + (C13986 + C13985) * C51089 -
             (C13988 + C13987) * C1447 - (C13990 + C13989) * C51090 +
             (C15210 + C15209) * C1448 + (C15212 + C15211) * C1443) *
                C51029 +
            (C13971 * C1446 + C13972 * C51089 - C13973 * C1447 -
             C13974 * C51090 + (C13991 + C13992) * C1448 +
             (C13993 + C13994) * C1443) *
                C50768) *
               C50953) *
              C50784 * C51045 +
          ((((C14869 + C14870) * C1447 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51089 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1446) +
             (C14871 + C14872) * C51090 - (C16073 + C16074) * C1448 -
             (C16075 + C16076) * C1443) *
                C51029 +
            (C14857 * C1447 -
             ((C11307 + C11306) * C51089 + (C11305 + C11304) * C1446) +
             C14858 * C51090 - (C14874 + C14873) * C1448 -
             (C14876 + C14875) * C1443) *
                C50768) *
               C17341 +
           (((C16074 + C16073) * C1447 -
             ((C14872 + C14871) * C51089 + (C14870 + C14869) * C1446) +
             (C16076 + C16075) * C51090 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C1448 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C1443) *
                C51029 +
            ((C14873 + C14874) * C1447 - (C14863 * C51089 + C14864 * C1446) +
             (C14875 + C14876) * C51090 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C1448 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C1443) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1209 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1204 -
            (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
            (C13987 + C13988) * C1211 + (C13989 + C13990) * C1206 -
            (C15209 + C15210) * C1212 - (C15211 + C15212) * C1207) *
               C51029 +
           ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
            C13967 * C1210 - C13968 * C1205 + C13969 * C1211 + C13970 * C1206 -
            (C13992 + C13991) * C1212 - (C13994 + C13993) * C1207) *
               C50768) *
              C17341 +
          (((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
            (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
            (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
            (C10872 * C4337 + C50979 * C4339 + C10871 * C2597 +
             C51058 * C2600) *
                C1212 -
            (C10872 * C4340 + C50979 * C4343 + C10871 * C2601 +
             C51058 * C2606) *
                C1207) *
               C51029 +
           (C13971 * C1209 + C13972 * C1204 - C13973 * C1210 - C13974 * C1205 +
            (C13991 + C13992) * C1211 + (C13993 + C13994) * C1206 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C1212 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C51029 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C51029 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C13971 * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             C13972 * C50854) *
                C51029 +
            (C14395 * C1115 -
             ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
             C14396 * C50854) *
                C50768) *
               C17341 +
           ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
             C13970 * C50854) *
                C51029 +
            ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C12020 * C51029 +
            ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
             (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
                C50768) *
               C17341 +
           ((C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
             (C11125 + C11124) * C50854) *
                C51029 +
            ((C11481 + C11482) * C1114 + (C11483 + C11484) * C1109 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C1115 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C51029 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C51029 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C50784 * C489 +
          ((((C14869 + C14870) * C1115 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C1109 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C1114) +
             (C14871 + C14872) * C50854) *
                C51029 +
            (C14857 * C1115 -
             ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
             C14858 * C50854) *
                C50768) *
               C17341 +
           (((C16074 + C16073) * C1115 -
             ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
             (C16076 + C16075) * C50854) *
                C51029 +
            ((C14873 + C14874) * C1115 - (C14863 * C1109 + C14864 * C1114) +
             (C14875 + C14876) * C50854) *
                C50768) *
               C50953) *
              C50784 * C490 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C1114 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C1109 -
             (C15415 + C15416) * C1115 - (C15417 + C15418) * C50854) *
                C51029 +
            ((C11312 + C11313) * C1114 + (C11314 + C11315) * C1109 -
             (C14198 + C14197) * C1115 - (C14200 + C14199) * C50854) *
                C50768) *
               C17341 +
           (((C15416 + C15415) * C1114 + (C15418 + C15417) * C1109 -
             (C10872 * C4742 + C50979 * C4748 + C10871 * C2803 +
              C51058 * C2806) *
                 C1115 -
             (C10872 * C4747 + C50979 * C4754 + C10871 * C2807 +
              C51058 * C2812) *
                 C50854) *
                C51029 +
            ((C14197 + C14198) * C1114 + (C14199 + C14200) * C1109 -
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C1115 -
             (C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C1114 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C1109 -
              (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                 C51029 +
             ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
              C13967 * C1115 - C13968 * C50854) *
                 C50768) *
                C17341 +
            (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
              (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                 C51029 +
             (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C13971 * C1115 -
              ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
              C13972 * C50854) *
                 C51029 +
             (C14395 * C1115 -
              ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
              C14396 * C50854) *
                 C50768) *
                C17341 +
            ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
              C13970 * C50854) *
                 C51029 +
             ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C14869 + C14870) * C1115 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C1109 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C1114) +
              (C14871 + C14872) * C50854) *
                 C51029 +
             (C14857 * C1115 -
              ((C11307 + C11306) * C1109 + (C11305 + C11304) * C1114) +
              C14858 * C50854) *
                 C50768) *
                C17341 +
            (((C16074 + C16073) * C1115 -
              ((C14872 + C14871) * C1109 + (C14870 + C14869) * C1114) +
              (C16076 + C16075) * C50854) *
                 C51029 +
             ((C14873 + C14874) * C1115 - (C14863 * C1109 + C14864 * C1114) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C11304 + C11305) * C1114 + (C11306 + C11307) * C1109 -
              C14864 * C1115 - C14863 * C50854) *
                 C51029 +
             ((C11308 + C11309) * C1114 + (C11310 + C11311) * C1109 -
              (C11865 + C11864) * C1115 - (C11867 + C11866) * C50854) *
                 C50768) *
                C17341 +
            ((C14857 * C1114 + C14858 * C1109 - (C14874 + C14873) * C1115 -
              (C14876 + C14875) * C50854) *
                 C51029 +
             ((C11864 + C11865) * C1114 + (C11866 + C11867) * C1109 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C1115 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C1114 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C1109 -
             (C13983 + C13984) * C1115 - (C13985 + C13986) * C50854) *
                C51029 +
            ((C10906 + C10907) * C1114 + (C10908 + C10909) * C1109 -
             C13967 * C1115 - C13968 * C50854) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C1114 + (C13986 + C13985) * C1109 -
             (C13988 + C13987) * C1115 - (C13990 + C13989) * C50854) *
                C51029 +
            (C13971 * C1114 + C13972 * C1109 - C13973 * C1115 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C13971 * C1115 -
             ((C10909 + C10908) * C1109 + (C10907 + C10906) * C1114) +
             C13972 * C50854) *
                C51029 +
            (C14395 * C1115 -
             ((C10913 + C10912) * C1109 + (C10911 + C10910) * C1114) +
             C14396 * C50854) *
                C50768) *
               C17341 +
           ((C13969 * C1115 - (C13968 * C1109 + C13967 * C1114) +
             C13970 * C50854) *
                C51029 +
            ((C11122 + C11123) * C1115 - (C11469 * C1109 + C11468 * C1114) +
             (C11124 + C11125) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C12020 * C51029 +
            ((C10917 + C10916) * C1114 + (C10915 + C10914) * C1109 -
             (C11482 + C11481) * C1115 - (C11484 + C11483) * C50854) *
                C50768) *
               C17341 +
           ((C14395 * C1114 + C14396 * C1109 - (C11123 + C11122) * C1115 -
             (C11125 + C11124) * C50854) *
                C51029 +
            ((C11481 + C11482) * C1114 + (C11483 + C11484) * C1109 -
             (C10872 * C1710 + C50979 * C1717 + C10871 * C304 + C51058 * C321) *
                 C1115 -
             (C10872 * C1718 + C50979 * C1722 + C10871 * C322 + C51058 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                C1209 +
            (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                C1204 -
            (C13983 + C13984) * C1210 - (C13985 + C13986) * C1205 +
            (C13987 + C13988) * C1211 + (C13989 + C13990) * C1206 -
            (C15209 + C15210) * C1212 - (C15211 + C15212) * C1207) *
               C51029 +
           ((C10906 + C10907) * C1209 + (C10908 + C10909) * C1204 -
            C13967 * C1210 - C13968 * C1205 + C13969 * C1211 + C13970 * C1206 -
            (C13992 + C13991) * C1212 - (C13994 + C13993) * C1207) *
               C50768) *
              C17341 +
          (((C13984 + C13983) * C1209 + (C13986 + C13985) * C1204 -
            (C13988 + C13987) * C1210 - (C13990 + C13989) * C1205 +
            (C15210 + C15209) * C1211 + (C15212 + C15211) * C1206 -
            (C10872 * C4337 + C50979 * C4339 + C10871 * C2597 +
             C51058 * C2600) *
                C1212 -
            (C10872 * C4340 + C50979 * C4343 + C10871 * C2601 +
             C51058 * C2606) *
                C1207) *
               C51029 +
           (C13971 * C1209 + C13972 * C1204 - C13973 * C1210 - C13974 * C1205 +
            (C13991 + C13992) * C1211 + (C13993 + C13994) * C1206 -
            (C10872 * C4338 + C50979 * C4341 + C10871 * C2598 +
             C51058 * C2602) *
                C1212 -
            (C10872 * C4342 + C50979 * C4344 + C10871 * C2603 +
             C51058 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C683 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C51044 -
              (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                 C51029 +
             ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
              C13967 * C684 - C13968 * C50854) *
                 C50768) *
                C17341 +
            (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
              (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                 C51029 +
             (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
              C13974 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C13971 * C684 -
              ((C10909 + C10908) * C51044 + (C10907 + C10906) * C683) +
              C13972 * C50854) *
                 C51029 +
             (C14395 * C684 -
              ((C10913 + C10912) * C51044 + (C10911 + C10910) * C683) +
              C14396 * C50854) *
                 C50768) *
                C17341 +
            ((C13969 * C684 - (C13968 * C51044 + C13967 * C683) +
              C13970 * C50854) *
                 C51029 +
             ((C11122 + C11123) * C684 - (C11469 * C51044 + C11468 * C683) +
              (C11124 + C11125) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C1821 +
          (((((C14869 + C14870) * C684 -
              ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                   C51044 +
               (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                   C683) +
              (C14871 + C14872) * C50854) *
                 C51029 +
             (C14857 * C684 -
              ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
              C14858 * C50854) *
                 C50768) *
                C17341 +
            (((C16074 + C16073) * C684 -
              ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
              (C16076 + C16075) * C50854) *
                 C51029 +
             ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
              (C14875 + C14876) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C11304 + C11305) * C683 + (C11306 + C11307) * C51044 -
              C14864 * C684 - C14863 * C50854) *
                 C51029 +
             ((C11308 + C11309) * C683 + (C11310 + C11311) * C51044 -
              (C11865 + C11864) * C684 - (C11867 + C11866) * C50854) *
                 C50768) *
                C17341 +
            ((C14857 * C683 + C14858 * C51044 - (C14874 + C14873) * C684 -
              (C14876 + C14875) * C50854) *
                 C51029 +
             ((C11864 + C11865) * C683 + (C11866 + C11867) * C51044 -
              (C10872 * C2805 + C50979 * C2811 + C10871 * C1709 +
               C51058 * C1715) *
                  C684 -
              (C10872 * C2810 + C50979 * C2814 + C10871 * C1716 +
               C51058 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C683 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C51044 -
             (C13983 + C13984) * C684 - (C13985 + C13986) * C50854) *
                C51029 +
            ((C10906 + C10907) * C683 + (C10908 + C10909) * C51044 -
             C13967 * C684 - C13968 * C50854) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C683 + (C13986 + C13985) * C51044 -
             (C13988 + C13987) * C684 - (C13990 + C13989) * C50854) *
                C51029 +
            (C13971 * C683 + C13972 * C51044 - C13973 * C684 -
             C13974 * C50854) *
                C50768) *
               C50953) *
              C50784 * C51091 +
          ((((C14869 + C14870) * C684 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C51044 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C683) +
             (C14871 + C14872) * C50854) *
                C51029 +
            (C14857 * C684 -
             ((C11307 + C11306) * C51044 + (C11305 + C11304) * C683) +
             C14858 * C50854) *
                C50768) *
               C17341 +
           (((C16074 + C16073) * C684 -
             ((C14872 + C14871) * C51044 + (C14870 + C14869) * C683) +
             (C16076 + C16075) * C50854) *
                C51029 +
            ((C14873 + C14874) * C684 - (C14863 * C51044 + C14864 * C683) +
             (C14875 + C14876) * C50854) *
                C50768) *
               C50953) *
              C50784 * C51092 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C683 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C51044 -
             (C15415 + C15416) * C684 - (C15417 + C15418) * C50854) *
                C51029 +
            ((C11312 + C11313) * C683 + (C11314 + C11315) * C51044 -
             (C14198 + C14197) * C684 - (C14200 + C14199) * C50854) *
                C50768) *
               C17341 +
           (((C15416 + C15415) * C683 + (C15418 + C15417) * C51044 -
             (C10872 * C4742 + C50979 * C4748 + C10871 * C2803 +
              C51058 * C2806) *
                 C684 -
             (C10872 * C4747 + C50979 * C4754 + C10871 * C2807 +
              C51058 * C2812) *
                 C50854) *
                C51029 +
            ((C14197 + C14198) * C683 + (C14199 + C14200) * C51044 -
             (C10872 * C4741 + C50979 * C4746 + C10871 * C2804 +
              C51058 * C2808) *
                 C684 -
             (C10872 * C4745 + C50979 * C4753 + C10871 * C2809 +
              C51058 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C51029 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C51029 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C14869 + C14870) * C295 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C289 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C294) +
             (C14871 + C14872) * C290 - (C16073 + C16074) * C296 -
             (C16075 + C16076) * C291) *
                C51029 +
            (C14857 * C295 -
             ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
             C14858 * C290 - (C14874 + C14873) * C296 -
             (C14876 + C14875) * C291) *
                C50768) *
               C17341 +
           (((C16074 + C16073) * C295 -
             ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
             (C16076 + C16075) * C290 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C296 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C291) *
                C51029 +
            ((C14873 + C14874) * C295 - (C14863 * C289 + C14864 * C294) +
             (C14875 + C14876) * C290 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C296 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C17341 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C51029) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
                C17341) *
               C1112 +
           ((C10930 * C51029 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C17341 +
            ((C14395 * C118 + C14396 * C50802) * C51029 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51029 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C17341 +
            ((C14857 * C118 + C14858 * C50802) * C51029 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C51029) *
                C17341) *
               C1111 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C51029) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C51029) *
                C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C118 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
               C17341 +
           (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
            (C13971 * C118 + C13972 * C50802) * C50768) *
               C50953) *
              C50784 * C1987 -
          (((C14863 * C50802 + C14864 * C118) * C50768 +
            ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
               C50953 +
           (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
            ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                 C50802 +
             (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                 C118) *
                C51029) *
               C17341) *
              C50784 * C1988 +
          ((((C10871 * C497 + C51058 * C512 + C10872 * C1994 + C50979 * C2002) *
                 C118 +
             (C10871 * C513 + C51058 * C527 + C10872 * C2001 + C50979 * C2006) *
                 C50802) *
                C51029 +
            ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
               C17341 +
           (((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C51029 +
            ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
               C50953) *
              C50784 * C1989 -
          ((((C10872 * C6716 + C50979 * C6718 + C10871 * C4749 +
              C51058 * C4755) *
                 C50802 +
             (C10872 * C6712 + C50979 * C6715 + C10871 * C4743 +
              C51058 * C4750) *
                 C118) *
                C50768 +
            ((C10872 * C6714 + C50979 * C6717 + C10871 * C4751 +
              C51058 * C4756) *
                 C50802 +
             (C10872 * C6711 + C50979 * C6713 + C10871 * C4744 +
              C51058 * C4752) *
                 C118) *
                C51029) *
               C50953 +
           (((C10872 * C5735 + C50979 * C5739 + C10871 * C1999 +
              C51058 * C2005) *
                 C50802 +
             (C10872 * C5730 + C50979 * C5734 + C10871 * C1993 +
              C51058 * C2000) *
                 C118) *
                C50768 +
            ((C10872 * C5733 + C50979 * C5738 + C10871 * C2001 +
              C51058 * C2006) *
                 C50802 +
             (C10872 * C5729 + C50979 * C5732 + C10871 * C1994 +
              C51058 * C2002) *
                 C118) *
                C51029) *
               C17341) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C17341 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C51036 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C51029) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
                C17341) *
               C50789) *
              C51091 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51029 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C17341 +
            ((C14857 * C118 + C14858 * C50802) * C51029 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C50789 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C51029) *
                C17341) *
               C51036) *
              C51092 +
          (((((C10871 * C497 + C51058 * C512 + C10872 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C10871 * C513 + C51058 * C527 + C10872 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C51029 +
             ((C11312 + C11313) * C118 + (C11314 + C11315) * C50802) * C50768) *
                C17341 +
            (((C15416 + C15415) * C118 + (C15418 + C15417) * C50802) * C51029 +
             ((C14197 + C14198) * C118 + (C14199 + C14200) * C50802) * C50768) *
                C50953) *
               C51036 -
           ((((C10872 * C6301 + C50979 * C6302 + C10871 * C1336 +
               C51058 * C1341) *
                  C50802 +
              (C10872 * C6299 + C50979 * C6300 + C10871 * C1329 +
               C51058 * C1335) *
                  C118) *
                 C50768 +
             ((C14200 + C14199) * C50802 + (C14198 + C14197) * C118) * C51029) *
                C50953 +
            (((C11319 + C11318) * C50802 + (C11317 + C11316) * C118) * C50768 +
             ((C11315 + C11314) * C50802 + (C11313 + C11312) * C118) * C51029) *
                C17341) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                  C118 +
              (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C10906 + C10907) * C118 + (C10908 + C10909) * C50802) * C50768) *
                C17341 +
            (((C13984 + C13983) * C118 + (C13986 + C13985) * C50802) * C51029 +
             (C13971 * C118 + C13972 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C11469 * C50802 + C11468 * C118) * C50768 +
             (C13968 * C50802 + C13967 * C118) * C51029) *
                C50953 +
            (((C10913 + C10912) * C50802 + (C10911 + C10910) * C118) * C50768 +
             ((C10909 + C10908) * C50802 + (C10907 + C10906) * C118) * C51029) *
                C17341) *
               C1112 +
           ((C10930 * C51029 +
             ((C10917 + C10916) * C118 + (C10915 + C10914) * C50802) * C50768) *
                C17341 +
            ((C14395 * C118 + C14396 * C50802) * C51029 +
             ((C11481 + C11482) * C118 + (C11483 + C11484) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C11304 + C11305) * C118 + (C11306 + C11307) * C50802) * C51029 +
             ((C11308 + C11309) * C118 + (C11310 + C11311) * C50802) * C50768) *
                C17341 +
            ((C14857 * C118 + C14858 * C50802) * C51029 +
             ((C11864 + C11865) * C118 + (C11866 + C11867) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C14863 * C50802 + C14864 * C118) * C50768 +
             ((C14872 + C14871) * C50802 + (C14870 + C14869) * C118) * C51029) *
                C50953 +
            (((C11307 + C11306) * C50802 + (C11305 + C11304) * C118) * C50768 +
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C50802 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C118) *
                 C51029) *
                C17341) *
               C1111 -
           ((((C10872 * C1338 + C50979 * C1342 + C10871 * C973 +
               C51058 * C979) *
                  C50802 +
              (C10872 * C1330 + C50979 * C1337 + C10871 * C964 +
               C51058 * C972) *
                  C118) *
                 C50768 +
             ((C11867 + C11866) * C50802 + (C11865 + C11864) * C118) * C51029) *
                C50953 +
            (((C11646 + C11645) * C50802 + (C11644 + C11643) * C118) * C50768 +
             C11649 * C51029) *
                C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10871 * C119 + C51058 * C126 + C10872 * C496 + C50979 * C511) *
                 C294 +
             (C10871 * C127 + C51058 * C140 + C10872 * C510 + C50979 * C526) *
                 C289 -
             (C13983 + C13984) * C295 - (C13985 + C13986) * C290 +
             (C13987 + C13988) * C296 + (C13989 + C13990) * C291) *
                C51029 +
            ((C10906 + C10907) * C294 + (C10908 + C10909) * C289 -
             C13967 * C295 - C13968 * C290 + C13969 * C296 + C13970 * C291) *
                C50768) *
               C17341 +
           (((C13984 + C13983) * C294 + (C13986 + C13985) * C289 -
             (C13988 + C13987) * C295 - (C13990 + C13989) * C290 +
             (C15210 + C15209) * C296 + (C15212 + C15211) * C291) *
                C51029 +
            (C13971 * C294 + C13972 * C289 - C13973 * C295 - C13974 * C290 +
             (C13991 + C13992) * C296 + (C13993 + C13994) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C14869 + C14870) * C295 -
             ((C10872 * C513 + C50979 * C527 + C10871 * C510 + C51058 * C526) *
                  C289 +
              (C10872 * C497 + C50979 * C512 + C10871 * C496 + C51058 * C511) *
                  C294) +
             (C14871 + C14872) * C290 - (C16073 + C16074) * C296 -
             (C16075 + C16076) * C291) *
                C51029 +
            (C14857 * C295 -
             ((C11307 + C11306) * C289 + (C11305 + C11304) * C294) +
             C14858 * C290 - (C14874 + C14873) * C296 -
             (C14876 + C14875) * C291) *
                C50768) *
               C17341 +
           (((C16074 + C16073) * C295 -
             ((C14872 + C14871) * C289 + (C14870 + C14869) * C294) +
             (C16076 + C16075) * C290 -
             (C10872 * C3811 + C50979 * C3813 + C10871 * C3353 +
              C51058 * C3356) *
                 C296 -
             (C10872 * C3814 + C50979 * C3817 + C10871 * C3357 +
              C51058 * C3362) *
                 C291) *
                C51029 +
            ((C14873 + C14874) * C295 - (C14863 * C289 + C14864 * C294) +
             (C14875 + C14876) * C290 -
             (C10872 * C3812 + C50979 * C3815 + C10871 * C3354 +
              C51058 * C3358) *
                 C296 -
             (C10872 * C3816 + C50979 * C3818 + C10871 * C3359 +
              C51058 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C17338 +
            (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
               C17341 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C17338 +
            (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
               C50953) *
              C51087 +
          (((C692 - (C691 + C690) + C693) * C17338 +
            (C696 - (C695 + C694) + C697) * C17339 +
            (C700 - (C699 + C698) + C701) * C17340) *
               C17341 +
           ((C2990 - (C2989 + C2988) + C2991) * C17338 +
            (C2996 - (C2997 + C2998) + C2999) * C17339 +
            (C8650 - (C8651 + C8652) + C8653) * C17340) *
               C50953) *
              C51088 +
          ((C716 * C17338 + C717 * C17339 +
            (C705 + C704 - C714 - C715) * C17340) *
               C17341 +
           (C8655 * C17338 + (C8652 + C8651 - C8650 - C8653) * C17339 +
            (C710 * C683 + C711 * C51044 -
             (C117 * C306 + C50915 * C325) * C684 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C17340) *
               C50953) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
               C50763 * C19943) *
              C51087 +
          ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
           (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
           (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
           (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
               C50763 * C19943) *
              C51088 +
          (C716 * C50763 * C19940 + C8655 * C50763 * C19941 +
           (C3002 + C3001 - C3000 - C3003) * C50763 * C19942 +
           (C2650 * C683 + C2651 * C51044 -
            (C117 * C2599 + C50915 * C2604) * C684 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C17338 +
             (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
                C17341 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C17338 +
             (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
                C50953) *
               C292 +
           (((C692 - (C691 + C690) + C693) * C17338 +
             (C696 - (C695 + C694) + C697) * C17339 +
             (C700 - (C699 + C698) + C701) * C17340) *
                C17341 +
            ((C2990 - (C2989 + C2988) + C2991) * C17338 +
             (C2996 - (C2997 + C2998) + C2999) * C17339 +
             (C8650 - (C8651 + C8652) + C8653) * C17340) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C17338 +
             (C1006 - (C984 + C985) + C1007) * C17339 +
             (C1008 - (C990 + C991) + C1009) * C17340) *
                C17341 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C17338 +
             (C3374 - (C3375 + C3376) + C3377) * C17339 +
             (C8999 - (C9000 + C9001) + C9002) * C17340) *
                C50953) *
               C292 +
           (((C985 + C984 - C1006 - C1007) * C17338 +
             (C991 + C990 - C1008 - C1009) * C17339 +
             (C997 + C996 - C1010 - C1011) * C17340) *
                C17341 +
            ((C3376 + C3375 - C3374 - C3377) * C17338 +
             (C9001 + C9000 - C8999 - C9002) * C17339 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
                C50763 * C19943) *
               C292 +
           ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
            (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
            (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
            (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C51045 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C50763 * C19942 +
            ((C117 * C4337 + C50915 * C4339) * C684 -
             (C4351 * C51044 + C4350 * C683) +
             (C117 * C4340 + C50915 * C4343) * C50854) *
                C50763 * C19943) *
               C292 +
           ((C985 + C984 - C1006 - C1007) * C50763 * C19940 +
            (C3376 + C3375 - C3374 - C3377) * C50763 * C19941 +
            (C3381 + C3380 - C3390 - C3391) * C50763 * C19942 +
            (C3388 * C683 + C3389 * C51044 -
             (C117 * C4338 + C50915 * C4341) * C684 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C17338 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C17339 +
            (C388 - (C359 + C358) + C389 - C390 - C391) * C17340) *
               C17341 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C17338 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C17339 +
            (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
             (C117 * C1216 + C50915 * C1223) * C296 -
             (C117 * C1224 + C50915 * C1228) * C291) *
                C17340) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C17338 +
            (C178 + C179) * C17339 + C188 * C17340) *
               C17341 +
           ((C2640 * C118 + C2641 * C50802) * C17338 +
            (C2440 + C2441) * C17339 + C8193 * C17340) *
               C50953) *
              C112 -
          ((C8194 * C17340 + (C2446 + C2447) * C17339 +
            (C2441 + C2440) * C17338) *
               C50953 +
           (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
               C17341) *
              C113 +
          ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
           (C8193 * C17338 + (C2448 + C2449) * C17339 +
            (C8195 + C8196) * C17340) *
               C50953) *
              C114 -
          ((((C117 * C687 + C50915 * C688) * C50802 +
             (C117 * C685 + C50915 * C686) * C118) *
                C17340 +
            (C8196 + C8195) * C17339 + C8194 * C17338) *
               C50953 +
           ((C187 + C186) * C17340 + C190 * C17339 + C191 * C17338) * C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C292 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C50789) *
              C489 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C50789 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C292) *
              C490 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C17338 +
             (C575 + C576) * C17339 + (C577 + C578) * C17340) *
                C17341 +
            ((C3828 * C118 + C3829 * C50802) * C17338 +
             (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
                C50953) *
               C292 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C17340 +
             (C8502 + C8501) * C17339 + (C2839 + C2838) * C17338) *
                C50953 +
            ((C580 + C579) * C17340 + (C578 + C577) * C17339 +
             (C576 + C575) * C17338) *
                C17341) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C112 -
          ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
           (C2443 + C2442) * C50763 * C19942 +
           (C2441 + C2440) * C50763 * C19941 +
           (C179 + C178) * C50763 * C19940) *
              C113 +
          (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
           (C2445 + C2444) * C50763 * C19942 +
           (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
              C114 -
          (((C117 * C1224 + C50915 * C1228) * C50802 +
            (C117 * C1216 + C50915 * C1223) * C118) *
               C50763 * C19943 +
           (C2451 + C2450) * C50763 * C19942 + C8194 * C50763 * C19941 +
           C191 * C50763 * C19940) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            (C117 * C3651 + C50915 * C3653) * C296 +
            (C117 * C3654 + C50915 * C3657) * C291) *
               C50763 * C19943) *
              C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C50763 * C19940 +
           (C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C50763 * C19941 +
           (C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C50763 * C19942 +
           (C2648 * C295 - (C2647 * C289 + C2646 * C294) + C2649 * C290 -
            (C117 * C3652 + C50915 * C3655) * C296 -
            (C117 * C3656 + C50915 * C3658) * C291) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C292 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C50789) *
              C489 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C50789 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C292) *
              C490 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C50763 * C19940 +
            (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
            (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
            ((C117 * C3811 + C50915 * C3813) * C118 +
             (C117 * C3814 + C50915 * C3817) * C50802) *
                C50763 * C19943) *
               C292 -
           (((C117 * C3816 + C50915 * C3818) * C50802 +
             (C117 * C3812 + C50915 * C3815) * C118) *
                C50763 * C19943 +
            (C2841 + C2840) * C50763 * C19942 +
            (C2839 + C2838) * C50763 * C19941 +
            (C576 + C575) * C50763 * C19940) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C51087 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C51088 +
           ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
            (C8193 * C17338 + (C2448 + C2449) * C17339 +
             (C8195 + C8196) * C17340) *
                C50953) *
               C682) *
              C51045 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C51088 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C51087 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C17340 +
             (C8803 + C8802) * C17339 + C8804 * C17338) *
                C50953 +
            ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) * C17341) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C51087 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C51088 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C682) *
              C51045 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C51088 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C51087 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C17338 +
            (C178 + C179) * C17339 + C188 * C17340) *
               C17341 +
           ((C2640 * C118 + C2641 * C50802) * C17338 +
            (C2440 + C2441) * C17339 + C8193 * C17340) *
               C50953) *
              C112 -
          ((C8194 * C17340 + (C2446 + C2447) * C17339 +
            (C2441 + C2440) * C17338) *
               C50953 +
           (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
               C17341) *
              C113 +
          ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
           (C8193 * C17338 + (C2448 + C2449) * C17339 +
            (C8195 + C8196) * C17340) *
               C50953) *
              C114 -
          ((((C117 * C687 + C50915 * C688) * C50802 +
             (C117 * C685 + C50915 * C686) * C118) *
                C17340 +
            (C8196 + C8195) * C17339 + C8194 * C17338) *
               C50953 +
           ((C187 + C186) * C17340 + C190 * C17339 + C191 * C17338) * C17341) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C292 +
          (((C380 - (C339 + C338) + C381 - C382 - C383) * C17338 +
            (C384 - (C349 + C348) + C385 - C386 - C387) * C17339 +
            (C388 - (C359 + C358) + C389 - C390 - C391) * C17340) *
               C17341 +
           ((C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C17338 +
            (C8345 - (C8344 + C8343) + C8346 - C8347 - C8348) * C17339 +
            (C378 * C295 - (C377 * C289 + C376 * C294) + C379 * C290 -
             (C117 * C1216 + C50915 * C1223) * C296 -
             (C117 * C1224 + C50915 * C1228) * C291) *
                C17340) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C112 -
          ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
           (C2443 + C2442) * C50763 * C19942 +
           (C2441 + C2440) * C50763 * C19941 +
           (C179 + C178) * C50763 * C19940) *
              C113 +
          (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
           (C2445 + C2444) * C50763 * C19942 +
           (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
              C114 -
          (((C117 * C1224 + C50915 * C1228) * C50802 +
            (C117 * C1216 + C50915 * C1223) * C118) *
               C50763 * C19943 +
           (C2451 + C2450) * C50763 * C19942 + C8194 * C50763 * C19941 +
           C191 * C50763 * C19940) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            (C117 * C3651 + C50915 * C3653) * C296 +
            (C117 * C3654 + C50915 * C3657) * C291) *
               C50763 * C19943) *
              C292 +
          ((C380 - (C339 + C338) + C381 - C382 - C383) * C50763 * C19940 +
           (C2624 - (C2623 + C2622) + C2625 - C2652 - C2653) * C50763 * C19941 +
           (C2654 - (C2631 + C2630) + C2655 - C2656 - C2657) * C50763 * C19942 +
           (C2648 * C295 - (C2647 * C289 + C2646 * C294) + C2649 * C290 -
            (C117 * C3652 + C50915 * C3655) * C296 -
            (C117 * C3656 + C50915 * C3658) * C291) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C17338 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C17339 +
            (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C17340) *
               C17341 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C17338 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C17339 +
            (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C17340) *
               C50953) *
              C51036 +
          (((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C17338 +
            (C1458 - (C1457 + C1456) + C1459 - C1460 - C1461) * C17339 +
            (C1464 - (C1463 + C1462) + C1465 - C1466 - C1467) * C17340) *
               C17341 +
           ((C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C17338 +
            (C9548 - (C9547 + C9546) + C9549 - C9550 - C9551) * C17339 +
            (C378 * C1447 - (C377 * C51089 + C376 * C1446) + C379 * C51090 -
             (C117 * C1216 + C50915 * C1223) * C1448 -
             (C117 * C1224 + C50915 * C1228) * C1443) *
                C17340) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
            C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
               C50763 * C19940 +
           (C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
            C2644 * C1448 + C2645 * C1443) *
               C50763 * C19941 +
           (C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
            C3664 * C1448 + C3665 * C1443) *
               C50763 * C19942 +
           (C2644 * C1446 + C2645 * C51089 - C3664 * C1447 - C3665 * C51090 +
            C20639 * C1448 + C20640 * C1443) *
               C50763 * C19943) *
              C51036 +
          ((C1452 - (C1451 + C1450) + C1453 - C1454 - C1455) * C50763 * C19940 +
           (C3980 - (C3979 + C3978) + C3981 - C3982 - C3983) * C50763 * C19941 +
           (C3986 - (C3985 + C3984) + C3987 - C3988 - C3989) * C50763 * C19942 +
           (C2648 * C1447 - (C2647 * C51089 + C2646 * C1446) + C2649 * C51090 -
            (C117 * C3652 + C50915 * C3655) * C1448 -
            (C117 * C3656 + C50915 * C3658) * C1443) *
               C50763 * C19943) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1446 +
             (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
             C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
                C17338 +
            (C1450 + C1451 - C1452 - C1453 + C1454 + C1455) * C17339 +
            (C1456 + C1457 - C1458 - C1459 + C1460 + C1461) * C17340) *
               C17341 +
           ((C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
             C2644 * C1448 + C2645 * C1443) *
                C17338 +
            (C3978 + C3979 - C3980 - C3981 + C3982 + C3983) * C17339 +
            (C9546 + C9547 - C9548 - C9549 + C9550 + C9551) * C17340) *
               C50953) *
              C50784 * C51045 +
          (((C3384 * C1447 -
             ((C117 * C510 + C50915 * C526) * C51089 +
              (C117 * C496 + C50915 * C511) * C1446) +
             C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
                C17338 +
            (C1000 * C1447 - (C558 * C51089 + C557 * C1446) + C1001 * C51090 -
             C2830 * C1448 - C2831 * C1443) *
                C17339 +
            (C1002 * C1447 - (C560 * C51089 + C559 * C1446) + C1003 * C51090 -
             C3156 * C1448 - C3157 * C1443) *
                C17340) *
               C17341 +
           ((C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) + C3387 * C51090 -
             C4350 * C1448 - C4351 * C1443) *
                C17338 +
            (C2830 * C1447 - (C1001 * C51089 + C1000 * C1446) + C2831 * C51090 -
             C3388 * C1448 - C3389 * C1443) *
                C17339 +
            (C3156 * C1447 - (C1003 * C51089 + C1002 * C1446) + C3157 * C51090 -
             (C117 * C3355 + C50915 * C3360) * C1448 -
             (C117 * C3361 + C50915 * C3364) * C1443) *
                C17340) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1446 +
            (C117 * C127 + C50915 * C140) * C51089 - C2640 * C1447 -
            C2641 * C51090 + C2642 * C1448 + C2643 * C1443) *
               C50763 * C19940 +
           (C2640 * C1446 + C2641 * C51089 - C2642 * C1447 - C2643 * C51090 +
            C2644 * C1448 + C2645 * C1443) *
               C50763 * C19941 +
           (C2642 * C1446 + C2643 * C51089 - C2644 * C1447 - C2645 * C51090 +
            C3664 * C1448 + C3665 * C1443) *
               C50763 * C19942 +
           (C2644 * C1446 + C2645 * C51089 - C3664 * C1447 - C3665 * C51090 +
            C20639 * C1448 + C20640 * C1443) *
               C50763 * C19943) *
              C50784 * C51045 +
          ((C3384 * C1447 -
            ((C117 * C510 + C50915 * C526) * C51089 +
             (C117 * C496 + C50915 * C511) * C1446) +
            C3385 * C51090 - C3386 * C1448 - C3387 * C1443) *
               C50763 * C19940 +
           (C3386 * C1447 - (C3385 * C51089 + C3384 * C1446) + C3387 * C51090 -
            C4350 * C1448 - C4351 * C1443) *
               C50763 * C19941 +
           (C4350 * C1447 - (C3387 * C51089 + C3386 * C1446) + C4351 * C51090 -
            C21083 * C1448 - C21084 * C1443) *
               C50763 * C19942 +
           (C21083 * C1447 - (C4351 * C51089 + C4350 * C1446) +
            C21084 * C51090 - (C117 * C21074 + C50915 * C21075) * C1448 -
            (C117 * C21076 + C50915 * C21077) * C1443) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C17338 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C17339 +
           (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
            C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
               C17340) *
              C17341 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C17338 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C17339 +
           (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
            C2650 * C1211 + C2651 * C1206 -
            (C117 * C2599 + C50915 * C2604) * C1212 -
            (C117 * C2605 + C50915 * C2608) * C1207) *
               C17340) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C17338 +
            (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
               C17341 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C17338 +
            (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
               C50953) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C17338 +
            (C1123 - (C1122 + C1121) + C1124) * C17339 +
            (C1127 - (C1126 + C1125) + C1128) * C17340) *
               C17341 +
           ((C3540 - (C3539 + C3538) + C3541) * C17338 +
            (C3546 - (C3547 + C3548) + C3549) * C17339 +
            (C9150 - (C9151 + C9152) + C9153) * C17340) *
               C50953) *
              C1112 +
          ((C1137 * C17338 + C1138 * C17339 +
            (C1131 + C1130 - C1129 - C1132) * C17340) *
               C17341 +
           (C9155 * C17338 + (C9152 + C9151 - C9150 - C9153) * C17339 +
            (C710 * C1114 + C711 * C1109 -
             (C117 * C306 + C50915 * C325) * C1115 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C17340) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C17338 +
            (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
               C17341 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C17338 +
            (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
               C50953) *
              C50784 * C489 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C17338 +
            (C1598 - (C1599 + C1600) + C1601) * C17339 +
            (C1602 - (C1603 + C1604) + C1605) * C17340) *
               C17341 +
           ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C17338 +
            (C4184 - (C4185 + C4186) + C4187) * C17339 +
            (C9746 - (C9747 + C9748) + C9749) * C17340) *
               C50953) *
              C50784 * C490 +
          ((((C117 * C497 + C50915 * C512) * C1114 +
             (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
             C3829 * C50854) *
                C17338 +
            (C563 * C1114 + C564 * C1109 - C2832 * C1115 - C2833 * C50854) *
                C17339 +
            (C565 * C1114 + C566 * C1109 - C8499 * C1115 - C8500 * C50854) *
                C17340) *
               C17341 +
           ((C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
                C17338 +
            (C2832 * C1114 + C2833 * C1109 - C2834 * C1115 - C2835 * C50854) *
                C17339 +
            (C8499 * C1114 + C8500 * C1109 -
             (C117 * C2805 + C50915 * C2811) * C1115 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C17340) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
           (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
           (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
           (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
               C50763 * C19943) *
              C1112 +
          (C1137 * C50763 * C19940 + C9155 * C50763 * C19941 +
           (C3552 + C3551 - C3550 - C3553) * C50763 * C19942 +
           (C2650 * C1114 + C2651 * C1109 -
            (C117 * C2599 + C50915 * C2604) * C1115 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
           C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
           C2645 * C1207) *
              C50763 * C19940 +
          (C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
           C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
              C50763 * C19941 +
          (C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
           C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
              C50763 * C19942 +
          (C2644 * C1209 + C2645 * C1204 - C3664 * C1210 - C3665 * C1205 +
           C20639 * C1211 + C20640 * C1206 -
           (C117 * C20630 + C50915 * C20631) * C1212 -
           (C117 * C20632 + C50915 * C20633) * C1207) *
              C50763 * C19943) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C50784 * C489 +
          ((C3384 * C1115 -
            ((C117 * C510 + C50915 * C526) * C1109 +
             (C117 * C496 + C50915 * C511) * C1114) +
            C3385 * C50854) *
               C50763 * C19940 +
           (C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
               C50763 * C19941 +
           (C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) + C4351 * C50854) *
               C50763 * C19942 +
           ((C117 * C4337 + C50915 * C4339) * C1115 -
            (C4351 * C1109 + C4350 * C1114) +
            (C117 * C4340 + C50915 * C4343) * C50854) *
               C50763 * C19943) *
              C50784 * C490 +
          (((C117 * C497 + C50915 * C512) * C1114 +
            (C117 * C513 + C50915 * C527) * C1109 - C3828 * C1115 -
            C3829 * C50854) *
               C50763 * C19940 +
           (C3828 * C1114 + C3829 * C1109 - C3830 * C1115 - C3831 * C50854) *
               C50763 * C19941 +
           (C3830 * C1114 + C3831 * C1109 - C20747 * C1115 - C20748 * C50854) *
               C50763 * C19942 +
           (C20747 * C1114 + C20748 * C1109 -
            (C117 * C20738 + C50915 * C20739) * C1115 -
            (C117 * C20740 + C50915 * C20741) * C50854) *
               C50763 * C19943) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C1114 +
              (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
              C2641 * C50854) *
                 C17338 +
             (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
                C17341 +
            ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                 C17338 +
             (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
                C50953) *
               C51036 +
           (((C1119 - (C1118 + C1117) + C1120) * C17338 +
             (C1123 - (C1122 + C1121) + C1124) * C17339 +
             (C1127 - (C1126 + C1125) + C1128) * C17340) *
                C17341 +
            ((C3540 - (C3539 + C3538) + C3541) * C17338 +
             (C3546 - (C3547 + C3548) + C3549) * C17339 +
             (C9150 - (C9151 + C9152) + C9153) * C17340) *
                C50953) *
               C50789) *
              C51045 +
          ((((C3384 * C1115 -
              ((C117 * C510 + C50915 * C526) * C1109 +
               (C117 * C496 + C50915 * C511) * C1114) +
              C3385 * C50854) *
                 C17338 +
             (C1598 - (C1599 + C1600) + C1601) * C17339 +
             (C1602 - (C1603 + C1604) + C1605) * C17340) *
                C17341 +
            ((C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) +
              C3387 * C50854) *
                 C17338 +
             (C4184 - (C4185 + C4186) + C4187) * C17339 +
             (C9746 - (C9747 + C9748) + C9749) * C17340) *
                C50953) *
               C51036 +
           (((C1600 + C1599 - C1598 - C1601) * C17338 +
             (C1604 + C1603 - C1602 - C1605) * C17339 +
             (C1608 + C1607 - C1606 - C1609) * C17340) *
                C17341 +
            ((C4186 + C4185 - C4184 - C4187) * C17338 +
             (C9748 + C9747 - C9746 - C9749) * C17339 +
             (C1004 * C1114 + C1005 * C1109 -
              (C117 * C1710 + C50915 * C1717) * C1115 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
            (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
            (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
            (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C51045 +
          (((C3384 * C1115 -
             ((C117 * C510 + C50915 * C526) * C1109 +
              (C117 * C496 + C50915 * C511) * C1114) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C1115 - (C3385 * C1109 + C3384 * C1114) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C1115 - (C3387 * C1109 + C3386 * C1114) + C4351 * C50854) *
                C50763 * C19942 +
            ((C117 * C4337 + C50915 * C4339) * C1115 -
             (C4351 * C1109 + C4350 * C1114) +
             (C117 * C4340 + C50915 * C4343) * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C1600 + C1599 - C1598 - C1601) * C50763 * C19940 +
            (C4186 + C4185 - C4184 - C4187) * C50763 * C19941 +
            (C4190 + C4189 - C4188 - C4191) * C50763 * C19942 +
            (C3388 * C1114 + C3389 * C1109 -
             (C117 * C4338 + C50915 * C4341) * C1115 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C1114 +
             (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
             C2641 * C50854) *
                C17338 +
            (C1117 + C1118 - C1119 - C1120) * C17339 + C1137 * C17340) *
               C17341 +
           ((C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
                C17338 +
            (C3538 + C3539 - C3540 - C3541) * C17339 + C9155 * C17340) *
               C50953) *
              C1111 +
          (((C1119 - (C1118 + C1117) + C1120) * C17338 +
            (C1123 - (C1122 + C1121) + C1124) * C17339 +
            (C1127 - (C1126 + C1125) + C1128) * C17340) *
               C17341 +
           ((C3540 - (C3539 + C3538) + C3541) * C17338 +
            (C3546 - (C3547 + C3548) + C3549) * C17339 +
            (C9150 - (C9151 + C9152) + C9153) * C17340) *
               C50953) *
              C1112 +
          ((C1137 * C17338 + C1138 * C17339 +
            (C1131 + C1130 - C1129 - C1132) * C17340) *
               C17341 +
           (C9155 * C17338 + (C9152 + C9151 - C9150 - C9153) * C17339 +
            (C710 * C1114 + C711 * C1109 -
             (C117 * C306 + C50915 * C325) * C1115 -
             (C117 * C326 + C50915 * C336) * C50854) *
                C17340) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1209 +
            (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
            C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
            C2645 * C1207) *
               C17338 +
           (C168 * C1209 + C169 * C1204 - C368 * C1210 - C369 * C1205 +
            C370 * C1211 + C371 * C1206 - C2646 * C1212 - C2647 * C1207) *
               C17339 +
           (C170 * C1209 + C171 * C1204 - C372 * C1210 - C373 * C1205 +
            C374 * C1211 + C375 * C1206 - C2650 * C1212 - C2651 * C1207) *
               C17340) *
              C17341 +
          ((C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
            C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
               C17338 +
           (C368 * C1209 + C369 * C1204 - C370 * C1210 - C371 * C1205 +
            C2646 * C1211 + C2647 * C1206 - C2648 * C1212 - C2649 * C1207) *
               C17339 +
           (C372 * C1209 + C373 * C1204 - C374 * C1210 - C375 * C1205 +
            C2650 * C1211 + C2651 * C1206 -
            (C117 * C2599 + C50915 * C2604) * C1212 -
            (C117 * C2605 + C50915 * C2608) * C1207) *
               C17340) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C1114 +
            (C117 * C127 + C50915 * C140) * C1109 - C2640 * C1115 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C1114 + C2641 * C1109 - C2642 * C1115 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C1114 + C2643 * C1109 - C2644 * C1115 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C1114 + C2645 * C1109 - C3664 * C1115 - C3665 * C50854) *
               C50763 * C19943) *
              C1111 +
          ((C1119 - (C1118 + C1117) + C1120) * C50763 * C19940 +
           (C3540 - (C3539 + C3538) + C3541) * C50763 * C19941 +
           (C3544 - (C3543 + C3542) + C3545) * C50763 * C19942 +
           (C2648 * C1115 - (C2647 * C1109 + C2646 * C1114) + C2649 * C50854) *
               C50763 * C19943) *
              C1112 +
          (C1137 * C50763 * C19940 + C9155 * C50763 * C19941 +
           (C3552 + C3551 - C3550 - C3553) * C50763 * C19942 +
           (C2650 * C1114 + C2651 * C1109 -
            (C117 * C2599 + C50915 * C2604) * C1115 -
            (C117 * C2605 + C50915 * C2608) * C50854) *
               C50763 * C19943) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50915 * C126) * C1209 +
           (C117 * C127 + C50915 * C140) * C1204 - C2640 * C1210 -
           C2641 * C1205 + C2642 * C1211 + C2643 * C1206 - C2644 * C1212 -
           C2645 * C1207) *
              C50763 * C19940 +
          (C2640 * C1209 + C2641 * C1204 - C2642 * C1210 - C2643 * C1205 +
           C2644 * C1211 + C2645 * C1206 - C3664 * C1212 - C3665 * C1207) *
              C50763 * C19941 +
          (C2642 * C1209 + C2643 * C1204 - C2644 * C1210 - C2645 * C1205 +
           C3664 * C1211 + C3665 * C1206 - C20639 * C1212 - C20640 * C1207) *
              C50763 * C19942 +
          (C2644 * C1209 + C2645 * C1204 - C3664 * C1210 - C3665 * C1205 +
           C20639 * C1211 + C20640 * C1206 -
           (C117 * C20630 + C50915 * C20631) * C1212 -
           (C117 * C20632 + C50915 * C20633) * C1207) *
              C50763 * C19943) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C683 +
              (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
              C2641 * C50854) *
                 C17338 +
             (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
                C17341 +
            ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                 C17338 +
             (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
                C50953) *
               C51036 +
           (((C692 - (C691 + C690) + C693) * C17338 +
             (C696 - (C695 + C694) + C697) * C17339 +
             (C700 - (C699 + C698) + C701) * C17340) *
                C17341 +
            ((C2990 - (C2989 + C2988) + C2991) * C17338 +
             (C2996 - (C2997 + C2998) + C2999) * C17339 +
             (C8650 - (C8651 + C8652) + C8653) * C17340) *
                C50953) *
               C50789) *
              C1821 +
          ((((C3384 * C684 -
              ((C117 * C510 + C50915 * C526) * C51044 +
               (C117 * C496 + C50915 * C511) * C683) +
              C3385 * C50854) *
                 C17338 +
             (C1006 - (C984 + C985) + C1007) * C17339 +
             (C1008 - (C990 + C991) + C1009) * C17340) *
                C17341 +
            ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                 C17338 +
             (C3374 - (C3375 + C3376) + C3377) * C17339 +
             (C8999 - (C9000 + C9001) + C9002) * C17340) *
                C50953) *
               C51036 +
           (((C985 + C984 - C1006 - C1007) * C17338 +
             (C991 + C990 - C1008 - C1009) * C17339 +
             (C997 + C996 - C1010 - C1011) * C17340) *
                C17341 +
            ((C3376 + C3375 - C3374 - C3377) * C17338 +
             (C9001 + C9000 - C8999 - C9002) * C17339 +
             (C1004 * C683 + C1005 * C51044 -
              (C117 * C1710 + C50915 * C1717) * C684 -
              (C117 * C1718 + C50915 * C1722) * C50854) *
                 C17340) *
                C50953) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C50763 * C19940 +
            (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C50763 * C19941 +
            (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
                C50763 * C19942 +
            (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C692 - (C691 + C690) + C693) * C50763 * C19940 +
            (C2990 - (C2989 + C2988) + C2991) * C50763 * C19941 +
            (C2994 - (C2993 + C2992) + C2995) * C50763 * C19942 +
            (C2648 * C684 - (C2647 * C51044 + C2646 * C683) + C2649 * C50854) *
                C50763 * C19943) *
               C50789) *
              C1821 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C50763 * C19940 +
            (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C50763 * C19941 +
            (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
                C50763 * C19942 +
            (C21083 * C684 - (C4351 * C51044 + C4350 * C683) +
             C21084 * C50854) *
                C50763 * C19943) *
               C51036 +
           ((C985 + C984 - C1006 - C1007) * C50763 * C19940 +
            (C3376 + C3375 - C3374 - C3377) * C50763 * C19941 +
            (C3381 + C3380 - C3390 - C3391) * C50763 * C19942 +
            (C3388 * C683 + C3389 * C51044 -
             (C117 * C4338 + C50915 * C4341) * C684 -
             (C117 * C4342 + C50915 * C4344) * C50854) *
                C50763 * C19943) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C683 +
             (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
             C2641 * C50854) *
                C17338 +
            (C690 + C691 - C692 - C693) * C17339 + C716 * C17340) *
               C17341 +
           ((C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
                C17338 +
            (C2988 + C2989 - C2990 - C2991) * C17339 + C8655 * C17340) *
               C50953) *
              C50784 * C51091 +
          (((C3384 * C684 -
             ((C117 * C510 + C50915 * C526) * C51044 +
              (C117 * C496 + C50915 * C511) * C683) +
             C3385 * C50854) *
                C17338 +
            (C1006 - (C984 + C985) + C1007) * C17339 +
            (C1008 - (C990 + C991) + C1009) * C17340) *
               C17341 +
           ((C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
                C17338 +
            (C3374 - (C3375 + C3376) + C3377) * C17339 +
            (C8999 - (C9000 + C9001) + C9002) * C17340) *
               C50953) *
              C50784 * C51092 +
          ((((C117 * C497 + C50915 * C512) * C683 +
             (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
             C3829 * C50854) *
                C17338 +
            (C563 * C683 + C564 * C51044 - C2832 * C684 - C2833 * C50854) *
                C17339 +
            (C565 * C683 + C566 * C51044 - C8499 * C684 - C8500 * C50854) *
                C17340) *
               C17341 +
           ((C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
                C17338 +
            (C2832 * C683 + C2833 * C51044 - C2834 * C684 - C2835 * C50854) *
                C17339 +
            (C8499 * C683 + C8500 * C51044 -
             (C117 * C2805 + C50915 * C2811) * C684 -
             (C117 * C2810 + C50915 * C2814) * C50854) *
                C17340) *
               C50953) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C683 +
            (C117 * C127 + C50915 * C140) * C51044 - C2640 * C684 -
            C2641 * C50854) *
               C50763 * C19940 +
           (C2640 * C683 + C2641 * C51044 - C2642 * C684 - C2643 * C50854) *
               C50763 * C19941 +
           (C2642 * C683 + C2643 * C51044 - C2644 * C684 - C2645 * C50854) *
               C50763 * C19942 +
           (C2644 * C683 + C2645 * C51044 - C3664 * C684 - C3665 * C50854) *
               C50763 * C19943) *
              C50784 * C51091 +
          ((C3384 * C684 -
            ((C117 * C510 + C50915 * C526) * C51044 +
             (C117 * C496 + C50915 * C511) * C683) +
            C3385 * C50854) *
               C50763 * C19940 +
           (C3386 * C684 - (C3385 * C51044 + C3384 * C683) + C3387 * C50854) *
               C50763 * C19941 +
           (C4350 * C684 - (C3387 * C51044 + C3386 * C683) + C4351 * C50854) *
               C50763 * C19942 +
           (C21083 * C684 - (C4351 * C51044 + C4350 * C683) + C21084 * C50854) *
               C50763 * C19943) *
              C50784 * C51092 +
          (((C117 * C497 + C50915 * C512) * C683 +
            (C117 * C513 + C50915 * C527) * C51044 - C3828 * C684 -
            C3829 * C50854) *
               C50763 * C19940 +
           (C3828 * C683 + C3829 * C51044 - C3830 * C684 - C3831 * C50854) *
               C50763 * C19941 +
           (C3830 * C683 + C3831 * C51044 - C20747 * C684 - C20748 * C50854) *
               C50763 * C19942 +
           (C20747 * C683 + C20748 * C51044 -
            (C117 * C20738 + C50915 * C20739) * C684 -
            (C117 * C20740 + C50915 * C20741) * C50854) *
               C50763 * C19943) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C17338 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C17339 +
            (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
             C3156 * C296 - C3157 * C291) *
                C17340) *
               C17341 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C17338 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C17339 +
            (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
             (C117 * C3355 + C50915 * C3360) * C296 -
             (C117 * C3361 + C50915 * C3364) * C291) *
                C17340) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C1111 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C1112 +
           ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
            (C8193 * C17338 + (C2448 + C2449) * C17339 +
             (C8195 + C8196) * C17340) *
                C50953) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C1112 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C1111 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C17340 +
             (C8803 + C8802) * C17339 + C8804 * C17338) *
                C50953 +
            ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) * C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C17338 +
            (C178 + C179) * C17339 + C188 * C17340) *
               C17341 +
           ((C2640 * C118 + C2641 * C50802) * C17338 +
            (C2440 + C2441) * C17339 + C8193 * C17340) *
               C50953) *
              C50784 * C1987 -
          ((C8804 * C17340 + (C2817 + C2816) * C17339 +
            (C3385 * C50802 + C3384 * C118) * C17338) *
               C50953 +
           (C827 * C17340 + (C570 + C569) * C17339 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C17338) *
               C17341) *
              C50784 * C1988 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C17338 +
            (C575 + C576) * C17339 + (C577 + C578) * C17340) *
               C17341 +
           ((C3828 * C118 + C3829 * C50802) * C17338 +
            (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
               C50953) *
              C50784 * C1989 -
          ((((C117 * C6301 + C50915 * C6302) * C50802 +
             (C117 * C6299 + C50915 * C6300) * C118) *
                C17340 +
            ((C117 * C4749 + C50915 * C4755) * C50802 +
             (C117 * C4743 + C50915 * C4750) * C118) *
                C17339 +
            ((C117 * C4751 + C50915 * C4756) * C50802 +
             (C117 * C4744 + C50915 * C4752) * C118) *
                C17338) *
               C50953 +
           (((C117 * C1997 + C50915 * C2004) * C50802 +
             (C117 * C1992 + C50915 * C1998) * C118) *
                C17340 +
            ((C117 * C1999 + C50915 * C2005) * C50802 +
             (C117 * C1993 + C50915 * C2000) * C118) *
                C17339 +
            ((C117 * C2001 + C50915 * C2006) * C50802 +
             (C117 * C1994 + C50915 * C2002) * C118) *
                C17338) *
               C17341) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C1111 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C1112 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C1113) *
              C1821 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C1112 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C1111 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            C20639 * C296 + C20640 * C291) *
               C50763 * C19943) *
              C50784 * C1821 +
          ((C3384 * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            C3385 * C290 - C3386 * C296 - C3387 * C291) *
               C50763 * C19940 +
           (C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
            C4350 * C296 - C4351 * C291) *
               C50763 * C19941 +
           (C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
            C21083 * C296 - C21084 * C291) *
               C50763 * C19942 +
           (C21083 * C295 - (C4351 * C289 + C4350 * C294) + C21084 * C290 -
            (C117 * C21074 + C50915 * C21075) * C296 -
            (C117 * C21076 + C50915 * C21077) * C291) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C118 +
            (C117 * C127 + C50915 * C140) * C50802) *
               C50763 * C19940 +
           (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
           (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
           (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
              C50784 * C1987 -
          ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
           (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
           (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
           ((C117 * C510 + C50915 * C526) * C50802 +
            (C117 * C496 + C50915 * C511) * C118) *
               C50763 * C19940) *
              C50784 * C1988 +
          (((C117 * C497 + C50915 * C512) * C118 +
            (C117 * C513 + C50915 * C527) * C50802) *
               C50763 * C19940 +
           (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
           (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
           (C20747 * C118 + C20748 * C50802) * C50763 * C19943) *
              C50784 * C1989 -
          (((C117 * C21347 + C50915 * C21349) * C50802 +
            (C117 * C21346 + C50915 * C21348) * C118) *
               C50763 * C19943 +
           ((C117 * C4747 + C50915 * C4754) * C50802 +
            (C117 * C4742 + C50915 * C4748) * C118) *
               C50763 * C19942 +
           ((C117 * C4751 + C50915 * C4756) * C50802 +
            (C117 * C4744 + C50915 * C4752) * C118) *
               C50763 * C19941 +
           ((C117 * C2001 + C50915 * C2006) * C50802 +
            (C117 * C1994 + C50915 * C2002) * C118) *
               C50763 * C19940) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C51036 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C50789) *
              C51091 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C50789 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C51036) *
              C51092 +
          (((((C117 * C497 + C50915 * C512) * C118 +
              (C117 * C513 + C50915 * C527) * C50802) *
                 C17338 +
             (C575 + C576) * C17339 + (C577 + C578) * C17340) *
                C17341 +
            ((C3828 * C118 + C3829 * C50802) * C17338 +
             (C2838 + C2839) * C17339 + (C8501 + C8502) * C17340) *
                C50953) *
               C51036 -
           ((((C117 * C1338 + C50915 * C1342) * C50802 +
              (C117 * C1330 + C50915 * C1337) * C118) *
                 C17340 +
             (C8502 + C8501) * C17339 + (C2839 + C2838) * C17338) *
                C50953 +
            ((C580 + C579) * C17340 + (C578 + C577) * C17339 +
             (C576 + C575) * C17338) *
                C17341) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C51036 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C50789) *
              C51091 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C50789 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C51036) *
              C51092 +
          ((((C117 * C497 + C50915 * C512) * C118 +
             (C117 * C513 + C50915 * C527) * C50802) *
                C50763 * C19940 +
            (C3828 * C118 + C3829 * C50802) * C50763 * C19941 +
            (C3830 * C118 + C3831 * C50802) * C50763 * C19942 +
            (C20747 * C118 + C20748 * C50802) * C50763 * C19943) *
               C51036 -
           (((C117 * C3816 + C50915 * C3818) * C50802 +
             (C117 * C3812 + C50915 * C3815) * C118) *
                C50763 * C19943 +
            (C2841 + C2840) * C50763 * C19942 +
            (C2839 + C2838) * C50763 * C19941 +
            (C576 + C575) * C50763 * C19940) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50915 * C126) * C118 +
              (C117 * C127 + C50915 * C140) * C50802) *
                 C17338 +
             (C178 + C179) * C17339 + C188 * C17340) *
                C17341 +
            ((C2640 * C118 + C2641 * C50802) * C17338 +
             (C2440 + C2441) * C17339 + C8193 * C17340) *
                C50953) *
               C1111 -
           ((C8194 * C17340 + (C2446 + C2447) * C17339 +
             (C2441 + C2440) * C17338) *
                C50953 +
            (C191 * C17340 + (C181 + C180) * C17339 + (C179 + C178) * C17338) *
                C17341) *
               C1112 +
           ((C188 * C17338 + C189 * C17339 + (C185 + C184) * C17340) * C17341 +
            (C8193 * C17338 + (C2448 + C2449) * C17339 +
             (C8195 + C8196) * C17340) *
                C50953) *
               C1113) *
              C1821 +
          ((((C569 + C570) * C17338 + (C571 + C572) * C17339 +
             (C573 + C574) * C17340) *
                C17341 +
            ((C2816 + C2817) * C17338 + (C3150 + C3151) * C17339 +
             (C8802 + C8803) * C17340) *
                C50953) *
               C1112 -
           ((C8804 * C17340 + (C2817 + C2816) * C17339 +
             (C3385 * C50802 + C3384 * C118) * C17338) *
                C50953 +
            (C827 * C17340 + (C570 + C569) * C17339 +
             ((C117 * C510 + C50915 * C526) * C50802 +
              (C117 * C496 + C50915 * C511) * C118) *
                 C17338) *
                C17341) *
               C1111 -
           ((((C117 * C975 + C50915 * C980) * C50802 +
              (C117 * C965 + C50915 * C974) * C118) *
                 C17340 +
             (C8803 + C8802) * C17339 + C8804 * C17338) *
                C50953 +
            ((C831 + C830) * C17340 + C826 * C17339 + C827 * C17338) * C17341) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C294 +
             (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 -
             C2641 * C290 + C2642 * C296 + C2643 * C291) *
                C17338 +
            (C338 + C339 - C380 - C381 + C382 + C383) * C17339 +
            (C348 + C349 - C384 - C385 + C386 + C387) * C17340) *
               C17341 +
           ((C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
             C2644 * C296 + C2645 * C291) *
                C17338 +
            (C2622 + C2623 - C2624 - C2625 + C2652 + C2653) * C17339 +
            (C8343 + C8344 - C8345 - C8346 + C8347 + C8348) * C17340) *
               C50953) *
              C50784 * C1821 +
          (((C3384 * C295 -
             ((C117 * C510 + C50915 * C526) * C289 +
              (C117 * C496 + C50915 * C511) * C294) +
             C3385 * C290 - C3386 * C296 - C3387 * C291) *
                C17338 +
            (C1000 * C295 - (C558 * C289 + C557 * C294) + C1001 * C290 -
             C2830 * C296 - C2831 * C291) *
                C17339 +
            (C1002 * C295 - (C560 * C289 + C559 * C294) + C1003 * C290 -
             C3156 * C296 - C3157 * C291) *
                C17340) *
               C17341 +
           ((C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
             C4350 * C296 - C4351 * C291) *
                C17338 +
            (C2830 * C295 - (C1001 * C289 + C1000 * C294) + C2831 * C290 -
             C3388 * C296 - C3389 * C291) *
                C17339 +
            (C3156 * C295 - (C1003 * C289 + C1002 * C294) + C3157 * C290 -
             (C117 * C3355 + C50915 * C3360) * C296 -
             (C117 * C3361 + C50915 * C3364) * C291) *
                C17340) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50915 * C126) * C118 +
             (C117 * C127 + C50915 * C140) * C50802) *
                C50763 * C19940 +
            (C2640 * C118 + C2641 * C50802) * C50763 * C19941 +
            (C2642 * C118 + C2643 * C50802) * C50763 * C19942 +
            (C2644 * C118 + C2645 * C50802) * C50763 * C19943) *
               C1111 -
           ((C2647 * C50802 + C2646 * C118) * C50763 * C19943 +
            (C2443 + C2442) * C50763 * C19942 +
            (C2441 + C2440) * C50763 * C19941 +
            (C179 + C178) * C50763 * C19940) *
               C1112 +
           (C188 * C50763 * C19940 + C8193 * C50763 * C19941 +
            (C2445 + C2444) * C50763 * C19942 +
            (C2650 * C118 + C2651 * C50802) * C50763 * C19943) *
               C1113) *
              C1821 +
          (((C569 + C570) * C50763 * C19940 +
            (C2816 + C2817) * C50763 * C19941 +
            (C2836 + C2837) * C50763 * C19942 +
            (C3388 * C118 + C3389 * C50802) * C50763 * C19943) *
               C1112 -
           ((C4351 * C50802 + C4350 * C118) * C50763 * C19943 +
            (C3387 * C50802 + C3386 * C118) * C50763 * C19942 +
            (C3385 * C50802 + C3384 * C118) * C50763 * C19941 +
            ((C117 * C510 + C50915 * C526) * C50802 +
             (C117 * C496 + C50915 * C511) * C118) *
                C50763 * C19940) *
               C1111 -
           (((C117 * C3361 + C50915 * C3364) * C50802 +
             (C117 * C3355 + C50915 * C3360) * C118) *
                C50763 * C19943 +
            (C3159 + C3158) * C50763 * C19942 + C8804 * C50763 * C19941 +
            C827 * C50763 * C19940) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50915 * C126) * C294 +
            (C117 * C127 + C50915 * C140) * C289 - C2640 * C295 - C2641 * C290 +
            C2642 * C296 + C2643 * C291) *
               C50763 * C19940 +
           (C2640 * C294 + C2641 * C289 - C2642 * C295 - C2643 * C290 +
            C2644 * C296 + C2645 * C291) *
               C50763 * C19941 +
           (C2642 * C294 + C2643 * C289 - C2644 * C295 - C2645 * C290 +
            C3664 * C296 + C3665 * C291) *
               C50763 * C19942 +
           (C2644 * C294 + C2645 * C289 - C3664 * C295 - C3665 * C290 +
            C20639 * C296 + C20640 * C291) *
               C50763 * C19943) *
              C50784 * C1821 +
          ((C3384 * C295 -
            ((C117 * C510 + C50915 * C526) * C289 +
             (C117 * C496 + C50915 * C511) * C294) +
            C3385 * C290 - C3386 * C296 - C3387 * C291) *
               C50763 * C19940 +
           (C3386 * C295 - (C3385 * C289 + C3384 * C294) + C3387 * C290 -
            C4350 * C296 - C4351 * C291) *
               C50763 * C19941 +
           (C4350 * C295 - (C3387 * C289 + C3386 * C294) + C4351 * C290 -
            C21083 * C296 - C21084 * C291) *
               C50763 * C19942 +
           (C21083 * C295 - (C4351 * C289 + C4350 * C294) + C21084 * C290 -
            (C117 * C21074 + C50915 * C21075) * C296 -
            (C117 * C21076 + C50915 * C21077) * C291) *
               C50763 * C19943) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C51029 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             C40939 * C684 - C40940 * C50854) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C51029 +
            (C40943 * C683 + C40944 * C51044 - C36339 * C684 -
             C36340 * C50854) *
                C50768) *
               C50953) *
              C51087 +
          (((C40943 * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             C40944 * C50854) *
                C51029 +
            (C41345 * C684 -
             ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
             C41346 * C50854) *
                C50768) *
               C51057 +
           ((C40941 * C684 - (C40940 * C51044 + C40939 * C683) +
             C40942 * C50854) *
                C51029 +
            ((C33566 + C33567) * C684 - (C33913 * C51044 + C33912 * C683) +
             (C33568 + C33569) * C50854) *
                C50768) *
               C50953) *
              C51088 +
          ((C33930 * C51029 +
            ((C33361 + C33360) * C683 + (C33359 + C33358) * C51044 -
             (C33926 + C33925) * C684 - (C33928 + C33927) * C50854) *
                C50768) *
               C51057 +
           ((C41345 * C683 + C41346 * C51044 - (C33567 + C33566) * C684 -
             (C33569 + C33568) * C50854) *
                C51029 +
            ((C33925 + C33926) * C683 + (C33927 + C33928) * C51044 -
             (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                 C684 -
             (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C682) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C683 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C51044 -
              (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                 C51029 +
             ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
              C40939 * C684 - C40940 * C50854) *
                 C50768) *
                C51057 +
            (((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
              (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                 C51029 +
             (C40943 * C683 + C40944 * C51044 - C36339 * C684 -
              C36340 * C50854) *
                 C50768) *
                C50953) *
               C292 +
           (((C40943 * C684 -
              ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
              C40944 * C50854) *
                 C51029 +
             (C41345 * C684 -
              ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
              C41346 * C50854) *
                 C50768) *
                C51057 +
            ((C40941 * C684 - (C40940 * C51044 + C40939 * C683) +
              C40942 * C50854) *
                 C51029 +
             ((C33566 + C33567) * C684 - (C33913 * C51044 + C33912 * C683) +
              (C33568 + C33569) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C37023 + C37024) * C684 -
              ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                   C51044 +
               (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                   C683) +
              (C37025 + C37026) * C50854) *
                 C51029 +
             (C41799 * C684 -
              ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
              C41800 * C50854) *
                 C50768) *
                C51057 +
            (((C37027 + C37028) * C684 -
              ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
              (C37029 + C37030) * C50854) *
                 C51029 +
             ((C37032 + C37031) * C684 - (C41801 * C51044 + C41802 * C683) +
              (C37034 + C37033) * C50854) *
                 C50768) *
                C50953) *
               C292 +
           ((((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
              C41802 * C684 - C41801 * C50854) *
                 C51029 +
             ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
              (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                 C50768) *
                C51057 +
            ((C41799 * C683 + C41800 * C51044 - (C37031 + C37032) * C684 -
              (C37033 + C37034) * C50854) *
                 C51029 +
             ((C34308 + C34309) * C683 + (C34310 + C34311) * C51044 -
              (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
               C33313 * C1715) *
                  C684 -
              (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
               C33313 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C294 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C289 -
             (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
             C36365 * C296 + C36366 * C291) *
                C51029 +
            ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
             C40939 * C295 - C40940 * C290 + C40941 * C296 + C40942 * C291) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
             (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
             (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
                C51029 +
            (C40943 * C294 + C40944 * C289 - C36339 * C295 - C36340 * C290 +
             (C36362 + C36361) * C296 + (C36364 + C36363) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C40943 * C295 -
             ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
             C40944 * C290 - C36339 * C296 - C36340 * C291) *
                C51029 +
            ((C33563 + C33562) * C295 -
             ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
             (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
             (C33569 + C33568) * C291) *
                C50768) *
               C51057 +
           ((C40941 * C295 - (C40940 * C289 + C40939 * C294) + C40942 * C290 -
             (C36361 + C36362) * C296 - (C36363 + C36364) * C291) *
                C51029 +
            ((C33566 + C33567) * C295 - (C33913 * C289 + C33912 * C294) +
             (C33568 + C33569) * C290 -
             (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
              C33313 * C1221) *
                 C296 -
             (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
              C33313 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
               C51057 +
           (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
            ((C33555 + C33554) * C118 + (C33557 + C33556) * C50802) * C50768) *
               C50953) *
              C112 -
          (((C33913 * C50802 + C33912 * C118) * C50768 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C51029) *
               C50953 +
           (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
               C51057) *
              C113 +
          ((C33374 * C51029 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C50768) *
               C51057 +
           (((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C51029 +
            ((C33925 + C33926) * C118 + (C33927 + C33928) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                 C50802 +
             (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                 C118) *
                C50768 +
            ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C51029) *
               C50953 +
           (((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) * C50768 +
            C33375 * C51029) *
               C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C118 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
                C51057 +
            (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
             (C40943 * C118 + C40944 * C50802) * C50768) *
                C50953) *
               C292 -
           (((C33913 * C50802 + C33912 * C118) * C50768 +
             (C40940 * C50802 + C40939 * C118) * C51029) *
                C50953 +
            (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
             ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
                C51057) *
               C50789) *
              C489 +
          (((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C51029 +
             ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C50768) *
                C51057 +
            (((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C51029 +
             ((C34308 + C34309) * C118 + (C34310 + C34311) * C50802) * C50768) *
                C50953) *
               C50789 -
           ((((C34307 + C34306) * C50802 + (C34305 + C34304) * C118) * C50768 +
             ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
                C50953 +
            (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C50802 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C118) *
                 C51029) *
                C51057) *
               C292) *
              C490 +
          (((((C33315 * C497 + C33313 * C512 + C33316 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C33315 * C513 + C33313 * C527 + C33316 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C51029 +
             ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C50768) *
                C51057 +
            (((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C51029 +
             ((C41147 + C41148) * C118 + (C41149 + C41150) * C50802) * C50768) *
                C50953) *
               C292 -
           ((((C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
               C33313 * C1341) *
                  C50802 +
              (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
               C33313 * C1335) *
                  C118) *
                 C50768 +
             ((C41150 + C41149) * C50802 + (C41148 + C41147) * C118) * C51029) *
                C50953 +
            (((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C50768 +
             ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C51029) *
                C51057) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C118 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
                C51057 +
            (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
             (C40943 * C118 + C40944 * C50802) * C50768) *
                C50953) *
               C51087 -
           (((C33913 * C50802 + C33912 * C118) * C50768 +
             (C40940 * C50802 + C40939 * C118) * C51029) *
                C50953 +
            (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
             ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
                C51057) *
               C51088 +
           ((C33374 * C51029 +
             ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C50768) *
                C51057 +
            ((C41345 * C118 + C41346 * C50802) * C51029 +
             ((C33925 + C33926) * C118 + (C33927 + C33928) * C50802) * C50768) *
                C50953) *
               C682) *
              C51045 +
          (((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C51029 +
             ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C50768) *
                C51057 +
            (((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C51029 +
             ((C34308 + C34309) * C118 + (C34310 + C34311) * C50802) * C50768) *
                C50953) *
               C51088 -
           ((((C34307 + C34306) * C50802 + (C34305 + C34304) * C118) * C50768 +
             ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
                C50953 +
            (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C50802 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C118) *
                 C51029) *
                C51057) *
               C51087 -
           ((((C33316 * C1338 + C50979 * C1342 + C33315 * C973 +
               C33313 * C979) *
                  C50802 +
              (C33316 * C1330 + C50979 * C1337 + C33315 * C964 +
               C33313 * C972) *
                  C118) *
                 C50768 +
             ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C51029) *
                C50953 +
            (((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C50768 +
             C34093 * C51029) *
                C51057) *
               C682) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
               C51057 +
           (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
            ((C33555 + C33554) * C118 + (C33557 + C33556) * C50802) * C50768) *
               C50953) *
              C112 -
          (((C33913 * C50802 + C33912 * C118) * C50768 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C51029) *
               C50953 +
           (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
               C51057) *
              C113 +
          ((C33374 * C51029 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C50768) *
               C51057 +
           (((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C51029 +
            ((C33925 + C33926) * C118 + (C33927 + C33928) * C50802) * C50768) *
               C50953) *
              C114 -
          ((((C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                 C50802 +
             (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                 C118) *
                C50768 +
            ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C51029) *
               C50953 +
           (((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) * C50768 +
            C33375 * C51029) *
               C51057) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C294 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C289 -
             (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
             C36365 * C296 + C36366 * C291) *
                C51029 +
            ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
             C40939 * C295 - C40940 * C290 + C40941 * C296 + C40942 * C291) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
             (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
             (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
                C51029 +
            (C40943 * C294 + C40944 * C289 - C36339 * C295 - C36340 * C290 +
             (C36362 + C36361) * C296 + (C36364 + C36363) * C291) *
                C50768) *
               C50953) *
              C292 +
          (((C40943 * C295 -
             ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
             C40944 * C290 - C36339 * C296 - C36340 * C291) *
                C51029 +
            ((C33563 + C33562) * C295 -
             ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
             (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
             (C33569 + C33568) * C291) *
                C50768) *
               C51057 +
           ((C40941 * C295 - (C40940 * C289 + C40939 * C294) + C40942 * C290 -
             (C36361 + C36362) * C296 - (C36363 + C36364) * C291) *
                C51029 +
            ((C33566 + C33567) * C295 - (C33913 * C289 + C33912 * C294) +
             (C33568 + C33569) * C290 -
             (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
              C33313 * C1221) *
                 C296 -
             (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
              C33313 * C1227) *
                 C291) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1446 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51089 -
             (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
             C36365 * C1448 + C36366 * C1443) *
                C51029 +
            ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
             C40939 * C1447 - C40940 * C51090 + C40941 * C1448 +
             C40942 * C1443) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
             (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
             (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
                C51029 +
            (C40943 * C1446 + C40944 * C51089 - C36339 * C1447 -
             C36340 * C51090 + (C36362 + C36361) * C1448 +
             (C36364 + C36363) * C1443) *
                C50768) *
               C50953) *
              C51036 +
          (((C40943 * C1447 -
             ((C33353 + C33352) * C51089 + (C33351 + C33350) * C1446) +
             C40944 * C51090 - C36339 * C1448 - C36340 * C1443) *
                C51029 +
            (C41345 * C1447 -
             ((C33357 + C33356) * C51089 + (C33355 + C33354) * C1446) +
             C41346 * C51090 - (C33567 + C33566) * C1448 -
             (C33569 + C33568) * C1443) *
                C50768) *
               C51057 +
           ((C40941 * C1447 - (C40940 * C51089 + C40939 * C1446) +
             C40942 * C51090 - (C36361 + C36362) * C1448 -
             (C36363 + C36364) * C1443) *
                C51029 +
            ((C33566 + C33567) * C1447 - (C33913 * C51089 + C33912 * C1446) +
             (C33568 + C33569) * C51090 -
             (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
              C33313 * C1221) *
                 C1448 -
             (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
              C33313 * C1227) *
                 C1443) *
                C50768) *
               C50953) *
              C50789) *
         C50818) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1446 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51089 -
             (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
             C36365 * C1448 + C36366 * C1443) *
                C51029 +
            ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
             C40939 * C1447 - C40940 * C51090 + C40941 * C1448 +
             C40942 * C1443) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
             (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
             (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
                C51029 +
            (C40943 * C1446 + C40944 * C51089 - C36339 * C1447 -
             C36340 * C51090 + (C36362 + C36361) * C1448 +
             (C36364 + C36363) * C1443) *
                C50768) *
               C50953) *
              C50784 * C51045 +
          ((((C37023 + C37024) * C1447 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51089 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1446) +
             (C37025 + C37026) * C51090 - C37949 * C1448 - C37950 * C1443) *
                C51029 +
            (C41799 * C1447 -
             ((C33751 + C33750) * C51089 + (C33749 + C33748) * C1446) +
             C41800 * C51090 - (C37031 + C37032) * C1448 -
             (C37033 + C37034) * C1443) *
                C50768) *
               C51057 +
           (((C37027 + C37028) * C1447 -
             ((C37026 + C37025) * C51089 + (C37024 + C37023) * C1446) +
             (C37029 + C37030) * C51090 - (C37959 + C37960) * C1448 -
             (C37961 + C37962) * C1443) *
                C51029 +
            ((C37032 + C37031) * C1447 - (C41801 * C51089 + C41802 * C1446) +
             (C37034 + C37033) * C51090 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C1448 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C1443) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1209 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1204 -
            (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
            C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
               C51029 +
           ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
            C40939 * C1210 - C40940 * C1205 + C40941 * C1211 + C40942 * C1206 -
            (C36361 + C36362) * C1212 - (C36363 + C36364) * C1207) *
               C50768) *
              C51057 +
          (((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
            (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
            (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
            (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
               C51029 +
           (C40943 * C1209 + C40944 * C1204 - C36339 * C1210 - C36340 * C1205 +
            (C36362 + C36361) * C1211 + (C36364 + C36363) * C1206 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C1212 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                C51029 +
            ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
             C40939 * C1115 - C40940 * C50854) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
             (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                C51029 +
            (C40943 * C1114 + C40944 * C1109 - C36339 * C1115 -
             C36340 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C40943 * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             C40944 * C50854) *
                C51029 +
            (C41345 * C1115 -
             ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
             C41346 * C50854) *
                C50768) *
               C51057 +
           ((C40941 * C1115 - (C40940 * C1109 + C40939 * C1114) +
             C40942 * C50854) *
                C51029 +
            ((C33566 + C33567) * C1115 - (C33913 * C1109 + C33912 * C1114) +
             (C33568 + C33569) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C34464 * C51029 +
            ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
             (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
                C50768) *
               C51057 +
           ((C41345 * C1114 + C41346 * C1109 - (C33567 + C33566) * C1115 -
             (C33569 + C33568) * C50854) *
                C51029 +
            ((C33925 + C33926) * C1114 + (C33927 + C33928) * C1109 -
             (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                 C1115 -
             (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                C51029 +
            ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
             C40939 * C1115 - C40940 * C50854) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
             (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                C51029 +
            (C40943 * C1114 + C40944 * C1109 - C36339 * C1115 -
             C36340 * C50854) *
                C50768) *
               C50953) *
              C50784 * C489 +
          ((((C37023 + C37024) * C1115 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C1109 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1114) +
             (C37025 + C37026) * C50854) *
                C51029 +
            (C41799 * C1115 -
             ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
             C41800 * C50854) *
                C50768) *
               C51057 +
           (((C37027 + C37028) * C1115 -
             ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
             (C37029 + C37030) * C50854) *
                C51029 +
            ((C37032 + C37031) * C1115 - (C41801 * C1109 + C41802 * C1114) +
             (C37034 + C37033) * C50854) *
                C50768) *
               C50953) *
              C50784 * C490 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C1114 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C1109 -
             (C37455 + C37456) * C1115 - (C37457 + C37458) * C50854) *
                C51029 +
            ((C33756 + C33757) * C1114 + (C33758 + C33759) * C1109 -
             (C41148 + C41147) * C1115 - (C41150 + C41149) * C50854) *
                C50768) *
               C51057 +
           (((C37456 + C37455) * C1114 + (C37458 + C37457) * C1109 -
             (C37459 + C37460) * C1115 - (C37461 + C37462) * C50854) *
                C51029 +
            ((C41147 + C41148) * C1114 + (C41149 + C41150) * C1109 -
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C1115 -
             (C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C1114 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C1109 -
              (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                 C51029 +
             ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
              C40939 * C1115 - C40940 * C50854) *
                 C50768) *
                C51057 +
            (((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
              (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                 C51029 +
             (C40943 * C1114 + C40944 * C1109 - C36339 * C1115 -
              C36340 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C40943 * C1115 -
              ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
              C40944 * C50854) *
                 C51029 +
             (C41345 * C1115 -
              ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
              C41346 * C50854) *
                 C50768) *
                C51057 +
            ((C40941 * C1115 - (C40940 * C1109 + C40939 * C1114) +
              C40942 * C50854) *
                 C51029 +
             ((C33566 + C33567) * C1115 - (C33913 * C1109 + C33912 * C1114) +
              (C33568 + C33569) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C51045 +
          (((((C37023 + C37024) * C1115 -
              ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                   C1109 +
               (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                   C1114) +
              (C37025 + C37026) * C50854) *
                 C51029 +
             (C41799 * C1115 -
              ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
              C41800 * C50854) *
                 C50768) *
                C51057 +
            (((C37027 + C37028) * C1115 -
              ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
              (C37029 + C37030) * C50854) *
                 C51029 +
             ((C37032 + C37031) * C1115 - (C41801 * C1109 + C41802 * C1114) +
              (C37034 + C37033) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C33748 + C33749) * C1114 + (C33750 + C33751) * C1109 -
              C41802 * C1115 - C41801 * C50854) *
                 C51029 +
             ((C33752 + C33753) * C1114 + (C33754 + C33755) * C1109 -
              (C34309 + C34308) * C1115 - (C34311 + C34310) * C50854) *
                 C50768) *
                C51057 +
            ((C41799 * C1114 + C41800 * C1109 - (C37031 + C37032) * C1115 -
              (C37033 + C37034) * C50854) *
                 C51029 +
             ((C34308 + C34309) * C1114 + (C34310 + C34311) * C1109 -
              (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
               C33313 * C1715) *
                  C1115 -
              (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
               C33313 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                C51029 +
            ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
             C40939 * C1115 - C40940 * C50854) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
             (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                C51029 +
            (C40943 * C1114 + C40944 * C1109 - C36339 * C1115 -
             C36340 * C50854) *
                C50768) *
               C50953) *
              C1111 +
          (((C40943 * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             C40944 * C50854) *
                C51029 +
            (C41345 * C1115 -
             ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
             C41346 * C50854) *
                C50768) *
               C51057 +
           ((C40941 * C1115 - (C40940 * C1109 + C40939 * C1114) +
             C40942 * C50854) *
                C51029 +
            ((C33566 + C33567) * C1115 - (C33913 * C1109 + C33912 * C1114) +
             (C33568 + C33569) * C50854) *
                C50768) *
               C50953) *
              C1112 +
          ((C34464 * C51029 +
            ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
             (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
                C50768) *
               C51057 +
           ((C41345 * C1114 + C41346 * C1109 - (C33567 + C33566) * C1115 -
             (C33569 + C33568) * C50854) *
                C51029 +
            ((C33925 + C33926) * C1114 + (C33927 + C33928) * C1109 -
             (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                 C1115 -
             (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                 C50854) *
                C50768) *
               C50953) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1209 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1204 -
            (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
            C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
               C51029 +
           ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
            C40939 * C1210 - C40940 * C1205 + C40941 * C1211 + C40942 * C1206 -
            (C36361 + C36362) * C1212 - (C36363 + C36364) * C1207) *
               C50768) *
              C51057 +
          (((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
            (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
            (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
            (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
               C51029 +
           (C40943 * C1209 + C40944 * C1204 - C36339 * C1210 - C36340 * C1205 +
            (C36362 + C36361) * C1211 + (C36364 + C36363) * C1206 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C1212 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C1207) *
               C50768) *
              C50953) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C683 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C51044 -
              (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                 C51029 +
             ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
              C40939 * C684 - C40940 * C50854) *
                 C50768) *
                C51057 +
            (((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
              (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                 C51029 +
             (C40943 * C683 + C40944 * C51044 - C36339 * C684 -
              C36340 * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           (((C40943 * C684 -
              ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
              C40944 * C50854) *
                 C51029 +
             (C41345 * C684 -
              ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
              C41346 * C50854) *
                 C50768) *
                C51057 +
            ((C40941 * C684 - (C40940 * C51044 + C40939 * C683) +
              C40942 * C50854) *
                 C51029 +
             ((C33566 + C33567) * C684 - (C33913 * C51044 + C33912 * C683) +
              (C33568 + C33569) * C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C1821 +
          (((((C37023 + C37024) * C684 -
              ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                   C51044 +
               (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                   C683) +
              (C37025 + C37026) * C50854) *
                 C51029 +
             (C41799 * C684 -
              ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
              C41800 * C50854) *
                 C50768) *
                C51057 +
            (((C37027 + C37028) * C684 -
              ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
              (C37029 + C37030) * C50854) *
                 C51029 +
             ((C37032 + C37031) * C684 - (C41801 * C51044 + C41802 * C683) +
              (C37034 + C37033) * C50854) *
                 C50768) *
                C50953) *
               C51036 +
           ((((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
              C41802 * C684 - C41801 * C50854) *
                 C51029 +
             ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
              (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                 C50768) *
                C51057 +
            ((C41799 * C683 + C41800 * C51044 - (C37031 + C37032) * C684 -
              (C37033 + C37034) * C50854) *
                 C51029 +
             ((C34308 + C34309) * C683 + (C34310 + C34311) * C51044 -
              (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
               C33313 * C1715) *
                  C684 -
              (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
               C33313 * C1721) *
                  C50854) *
                 C50768) *
                C50953) *
               C50789) *
              C50882)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C51029 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             C40939 * C684 - C40940 * C50854) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C51029 +
            (C40943 * C683 + C40944 * C51044 - C36339 * C684 -
             C36340 * C50854) *
                C50768) *
               C50953) *
              C50784 * C51091 +
          ((((C37023 + C37024) * C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C37025 + C37026) * C50854) *
                C51029 +
            (C41799 * C684 -
             ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
             C41800 * C50854) *
                C50768) *
               C51057 +
           (((C37027 + C37028) * C684 -
             ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
             (C37029 + C37030) * C50854) *
                C51029 +
            ((C37032 + C37031) * C684 - (C41801 * C51044 + C41802 * C683) +
             (C37034 + C37033) * C50854) *
                C50768) *
               C50953) *
              C50784 * C51092 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C683 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C51044 -
             (C37455 + C37456) * C684 - (C37457 + C37458) * C50854) *
                C51029 +
            ((C33756 + C33757) * C683 + (C33758 + C33759) * C51044 -
             (C41148 + C41147) * C684 - (C41150 + C41149) * C50854) *
                C50768) *
               C51057 +
           (((C37456 + C37455) * C683 + (C37458 + C37457) * C51044 -
             (C37459 + C37460) * C684 - (C37461 + C37462) * C50854) *
                C51029 +
            ((C41147 + C41148) * C683 + (C41149 + C41150) * C51044 -
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C684 -
             (C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50854) *
                C50768) *
               C50953) *
              C50784 * C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C294 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C289 -
             (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
             C36365 * C296 + C36366 * C291) *
                C51029 +
            ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
             C40939 * C295 - C40940 * C290 + C40941 * C296 + C40942 * C291) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
             (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
             (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
                C51029 +
            (C40943 * C294 + C40944 * C289 - C36339 * C295 - C36340 * C290 +
             (C36362 + C36361) * C296 + (C36364 + C36363) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C37023 + C37024) * C295 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C289 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C294) +
             (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
                C51029 +
            (C41799 * C295 -
             ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
             C41800 * C290 - (C37031 + C37032) * C296 -
             (C37033 + C37034) * C291) *
                C50768) *
               C51057 +
           (((C37027 + C37028) * C295 -
             ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
             (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
             (C37961 + C37962) * C291) *
                C51029 +
            ((C37032 + C37031) * C295 - (C41801 * C289 + C41802 * C294) +
             (C37034 + C37033) * C290 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C296 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C118 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
                C51057 +
            (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
             (C40943 * C118 + C40944 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C33913 * C50802 + C33912 * C118) * C50768 +
             (C40940 * C50802 + C40939 * C118) * C51029) *
                C50953 +
            (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
             ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
                C51057) *
               C1112 +
           ((C33374 * C51029 +
             ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C50768) *
                C51057 +
            ((C41345 * C118 + C41346 * C50802) * C51029 +
             ((C33925 + C33926) * C118 + (C33927 + C33928) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C51029 +
             ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C50768) *
                C51057 +
            ((C41799 * C118 + C41800 * C50802) * C51029 +
             ((C34308 + C34309) * C118 + (C34310 + C34311) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C41801 * C50802 + C41802 * C118) * C50768 +
             ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
                C50953 +
            (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C50802 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C118) *
                 C51029) *
                C51057) *
               C1111 -
           ((((C33316 * C1338 + C50979 * C1342 + C33315 * C973 +
               C33313 * C979) *
                  C50802 +
              (C33316 * C1330 + C50979 * C1337 + C33315 * C964 +
               C33313 * C972) *
                  C118) *
                 C50768 +
             ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C51029) *
                C50953 +
            (((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C50768 +
             C34093 * C51029) *
                C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C51029 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
               C51057 +
           (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
            (C40943 * C118 + C40944 * C50802) * C50768) *
               C50953) *
              C50784 * C1987 -
          (((C41801 * C50802 + C41802 * C118) * C50768 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
               C50953 +
           (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C51029) *
               C51057) *
              C50784 * C1988 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C51029 +
            ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C50768) *
               C51057 +
           (((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C51029 +
            ((C41147 + C41148) * C118 + (C41149 + C41150) * C50802) * C50768) *
               C50953) *
              C50784 * C1989 -
          ((((C33316 * C6716 + C50979 * C6718 + C33315 * C4749 +
              C33313 * C4755) *
                 C50802 +
             (C33316 * C6712 + C50979 * C6715 + C33315 * C4743 +
              C33313 * C4750) *
                 C118) *
                C50768 +
            ((C33316 * C6714 + C50979 * C6717 + C33315 * C4751 +
              C33313 * C4756) *
                 C50802 +
             (C33316 * C6711 + C50979 * C6713 + C33315 * C4744 +
              C33313 * C4752) *
                 C118) *
                C51029) *
               C50953 +
           (((C33316 * C5735 + C50979 * C5739 + C33315 * C1999 +
              C33313 * C2005) *
                 C50802 +
             (C33316 * C5730 + C50979 * C5734 + C33315 * C1993 +
              C33313 * C2000) *
                 C118) *
                C50768 +
            ((C33316 * C5733 + C50979 * C5738 + C33315 * C2001 +
              C33313 * C2006) *
                 C50802 +
             (C33316 * C5729 + C50979 * C5732 + C33315 * C1994 +
              C33313 * C2002) *
                 C118) *
                C51029) *
               C51057) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C118 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
                C51057 +
            (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
             (C40943 * C118 + C40944 * C50802) * C50768) *
                C50953) *
               C51036 -
           (((C33913 * C50802 + C33912 * C118) * C50768 +
             (C40940 * C50802 + C40939 * C118) * C51029) *
                C50953 +
            (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
             ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
                C51057) *
               C50789) *
              C51091 +
          (((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C51029 +
             ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C50768) *
                C51057 +
            ((C41799 * C118 + C41800 * C50802) * C51029 +
             ((C34308 + C34309) * C118 + (C34310 + C34311) * C50802) * C50768) *
                C50953) *
               C50789 -
           (((C41801 * C50802 + C41802 * C118) * C50768 +
             ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
                C50953 +
            (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C50802 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C118) *
                 C51029) *
                C51057) *
               C51036) *
              C51092 +
          (((((C33315 * C497 + C33313 * C512 + C33316 * C1994 +
               C50979 * C2002) *
                  C118 +
              (C33315 * C513 + C33313 * C527 + C33316 * C2001 +
               C50979 * C2006) *
                  C50802) *
                 C51029 +
             ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C50768) *
                C51057 +
            (((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C51029 +
             ((C41147 + C41148) * C118 + (C41149 + C41150) * C50802) * C50768) *
                C50953) *
               C51036 -
           ((((C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
               C33313 * C1341) *
                  C50802 +
              (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
               C33313 * C1335) *
                  C118) *
                 C50768 +
             ((C41150 + C41149) * C50802 + (C41148 + C41147) * C118) * C51029) *
                C50953 +
            (((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C50768 +
             ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C51029) *
                C51057) *
               C50789) *
              C2237)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                  C118 +
              (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                  C50802) *
                 C51029 +
             ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C50768) *
                C51057 +
            (((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C51029 +
             (C40943 * C118 + C40944 * C50802) * C50768) *
                C50953) *
               C1111 -
           (((C33913 * C50802 + C33912 * C118) * C50768 +
             (C40940 * C50802 + C40939 * C118) * C51029) *
                C50953 +
            (((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C50768 +
             ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C51029) *
                C51057) *
               C1112 +
           ((C33374 * C51029 +
             ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C50768) *
                C51057 +
            ((C41345 * C118 + C41346 * C50802) * C51029 +
             ((C33925 + C33926) * C118 + (C33927 + C33928) * C50802) * C50768) *
                C50953) *
               C1113) *
              C1821 +
          (((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C51029 +
             ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C50768) *
                C51057 +
            ((C41799 * C118 + C41800 * C50802) * C51029 +
             ((C34308 + C34309) * C118 + (C34310 + C34311) * C50802) * C50768) *
                C50953) *
               C1112 -
           (((C41801 * C50802 + C41802 * C118) * C50768 +
             ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C51029) *
                C50953 +
            (((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C50768 +
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C50802 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C118) *
                 C51029) *
                C51057) *
               C1111 -
           ((((C33316 * C1338 + C50979 * C1342 + C33315 * C973 +
               C33313 * C979) *
                  C50802 +
              (C33316 * C1330 + C50979 * C1337 + C33315 * C964 +
               C33313 * C972) *
                  C118) *
                 C50768 +
             ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C51029) *
                C50953 +
            (((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C50768 +
             C34093 * C51029) *
                C51057) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C294 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C289 -
             (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
             C36365 * C296 + C36366 * C291) *
                C51029 +
            ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
             C40939 * C295 - C40940 * C290 + C40941 * C296 + C40942 * C291) *
                C50768) *
               C51057 +
           (((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
             (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
             (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
                C51029 +
            (C40943 * C294 + C40944 * C289 - C36339 * C295 - C36340 * C290 +
             (C36362 + C36361) * C296 + (C36364 + C36363) * C291) *
                C50768) *
               C50953) *
              C50784 * C1821 +
          ((((C37023 + C37024) * C295 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C289 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C294) +
             (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
                C51029 +
            (C41799 * C295 -
             ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
             C41800 * C290 - (C37031 + C37032) * C296 -
             (C37033 + C37034) * C291) *
                C50768) *
               C51057 +
           (((C37027 + C37028) * C295 -
             ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
             (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
             (C37961 + C37962) * C291) *
                C51029 +
            ((C37032 + C37031) * C295 - (C41801 * C289 + C41802 * C294) +
             (C37034 + C37033) * C290 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C296 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C291) *
                C50768) *
               C50953) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C683 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51044 -
                     (C47213 + C47214 + C47215) * C684 -
                     (C47216 + C47217 + C47218) * C50854) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C683 +
                     (C47218 + C47217 + C47216) * C51044 -
                     (C47221 + C47220 + C47219) * C684 -
                     (C47224 + C47223 + C47222) * C50854) *
                        C50763 * C50953) *
                       C51087 +
                   (((C44461 + C44460 + C44459) * C684 -
                     ((C44276 + C44275 + C44274) * C51044 +
                      (C44273 + C44272 + C44271) * C683) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C684 -
                     ((C44462 + C44463 + C44464) * C51044 +
                      (C44459 + C44460 + C44461) * C683) +
                     (C44468 + C44469 + C44470) * C50854) *
                        C50763 * C50953) *
                       C51088 +
                   (((C44282 + C44281 + C44280) * C683 +
                     (C44279 + C44278 + C44277) * C51044 -
                     (C44813 + C44812 + C44811) * C684 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C50763 * C51057 +
                    ((C44811 + C44812 + C44813) * C683 +
                     (C44814 + C44815 + C44816) * C51044 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C684 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C50854) *
                        C50763 * C50953) *
                       C682) *
                  C50818) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C683 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C51044 -
                      (C47213 + C47214 + C47215) * C684 -
                      (C47216 + C47217 + C47218) * C50854) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C683 +
                      (C47218 + C47217 + C47216) * C51044 -
                      (C47221 + C47220 + C47219) * C684 -
                      (C47224 + C47223 + C47222) * C50854) *
                         C50763 * C50953) *
                        C292 +
                    (((C44461 + C44460 + C44459) * C684 -
                      ((C44276 + C44275 + C44274) * C51044 +
                       (C44273 + C44272 + C44271) * C683) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C50763 * C51057 +
                     ((C44465 + C44466 + C44467) * C684 -
                      ((C44462 + C44463 + C44464) * C51044 +
                       (C44459 + C44460 + C44461) * C683) +
                      (C44468 + C44469 + C44470) * C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C51045 +
                   ((((C47869 + C47870 + C47871) * C684 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C51044 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C683) +
                      (C47872 + C47873 + C47874) * C50854) *
                         C50763 * C51057 +
                     ((C44231 * C1707 + C51095 * C1711 + C44232 * C2803 +
                       C51096 * C2806 + C44233 * C4742 + C44230 * C4748) *
                          C684 -
                      ((C47874 + C47873 + C47872) * C51044 +
                       (C47871 + C47870 + C47869) * C683) +
                      (C44231 * C1712 + C51095 * C1719 + C44232 * C2807 +
                       C51096 * C2812 + C44233 * C4747 + C44230 * C4754) *
                          C50854) *
                         C50763 * C50953) *
                        C292 +
                    (((C44641 + C44642 + C44643) * C683 +
                      (C44644 + C44645 + C44646) * C51044 -
                      (C45189 + C45188 + C45187) * C684 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C683 +
                      (C45190 + C45191 + C45192) * C51044 -
                      (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                       C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                          C684 -
                      (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                       C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                          C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C47213 + C47214 + C47215) * C295 -
                     (C47216 + C47217 + C47218) * C290 +
                     (C47219 + C47220 + C47221) * C296 +
                     (C47222 + C47223 + C47224) * C291) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C294 +
                     (C47218 + C47217 + C47216) * C289 -
                     (C47221 + C47220 + C47219) * C295 -
                     (C47224 + C47223 + C47222) * C290 +
                     (C44231 * C1213 + C51095 * C1217 + C44232 * C3353 +
                      C51096 * C3356 + C44233 * C3811 + C44230 * C3813) *
                         C296 +
                     (C44231 * C1218 + C51095 * C1225 + C44232 * C3357 +
                      C51096 * C3362 + C44233 * C3814 + C44230 * C3817) *
                         C291) *
                        C50763 * C50953) *
                       C292 +
                   (((C44461 + C44460 + C44459) * C295 -
                     ((C44276 + C44275 + C44274) * C289 +
                      (C44273 + C44272 + C44271) * C294) +
                     (C44464 + C44463 + C44462) * C290 -
                     (C44467 + C44466 + C44465) * C296 -
                     (C44470 + C44469 + C44468) * C291) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C295 -
                     ((C44462 + C44463 + C44464) * C289 +
                      (C44459 + C44460 + C44461) * C294) +
                     (C44468 + C44469 + C44470) * C290 -
                     (C44233 * C3812 + C44230 * C3815 + C44232 * C3354 +
                      C51096 * C3358 + C44231 * C1214 + C51095 * C1219) *
                         C296 -
                     (C44233 * C3816 + C44230 * C3818 + C44232 * C3359 +
                      C51096 * C3363 + C44231 * C1220 + C51095 * C1226) *
                         C291) *
                        C50763 * C50953) *
                       C50789) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C50763 * C51057 +
                    ((C44231 * C297 + C51095 * C307 + C44232 * C961 +
                      C51096 * C966 + C44233 * C1327 + C44230 * C1331) *
                         C118 +
                     (C44231 * C308 + C51095 * C327 + C44232 * C967 +
                      C51096 * C976 + C44233 * C1332 + C44230 * C1339) *
                         C50802) *
                        C50763 * C50953) *
                       C112 -
                   (((C44462 + C44463 + C44464) * C50802 +
                     (C44459 + C44460 + C44461) * C118) *
                        C50763 * C50953 +
                    ((C44276 + C44275 + C44274) * C50802 +
                     (C44273 + C44272 + C44271) * C118) *
                        C50763 * C51057) *
                       C113 +
                   (((C44282 + C44281 + C44280) * C118 +
                     (C44279 + C44278 + C44277) * C50802) *
                        C50763 * C51057 +
                    ((C44811 + C44812 + C44813) * C118 +
                     (C44814 + C44815 + C44816) * C50802) *
                        C50763 * C50953) *
                       C114 -
                   (((C44233 * C1338 + C44230 * C1342 + C44232 * C973 +
                      C51096 * C979 + C44231 * C320 + C51095 * C333) *
                         C50802 +
                     (C44233 * C1330 + C44230 * C1337 + C44232 * C964 +
                      C51096 * C972 + C44231 * C303 + C51095 * C319) *
                         C118) *
                        C50763 * C50953 +
                    ((C44288 + C44287 + C44286) * C50802 +
                     (C44285 + C44284 + C44283) * C118) *
                        C50763 * C51057) *
                       C115) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C118 +
                      (C47218 + C47217 + C47216) * C50802) *
                         C50763 * C50953) *
                        C292 -
                    (((C44462 + C44463 + C44464) * C50802 +
                      (C44459 + C44460 + C44461) * C118) *
                         C50763 * C50953 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C50763 * C51057) *
                        C50789) *
                       C489 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C118 +
                      (C45190 + C45191 + C45192) * C50802) *
                         C50763 * C50953) *
                        C50789 -
                    (((C44233 * C4751 + C44230 * C4756 + C44232 * C1332 +
                       C51096 * C1339 + C44231 * C967 + C51095 * C976) *
                          C50802 +
                      (C44233 * C4744 + C44230 * C4752 + C44232 * C1327 +
                       C51096 * C1331 + C44231 * C961 + C51095 * C966) *
                          C118) *
                         C50763 * C50953 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C50763 * C51057) *
                        C292) *
                       C490 +
                   ((((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                       C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                          C118 +
                      (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                       C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                          C50802) *
                         C50763 * C51057 +
                     ((C44231 * C1327 + C51095 * C1331 + C44232 * C4744 +
                       C51096 * C4752 + C44233 * C6711 + C44230 * C6713) *
                          C118 +
                      (C44231 * C1332 + C51095 * C1339 + C44232 * C4751 +
                       C51096 * C4756 + C44233 * C6714 + C44230 * C6717) *
                          C50802) *
                         C50763 * C50953) *
                        C292 -
                    (((C44233 * C6716 + C44230 * C6718 + C44232 * C4749 +
                       C51096 * C4755 + C44231 * C1334 + C51095 * C1340) *
                          C50802 +
                      (C44233 * C6712 + C44230 * C6715 + C44232 * C4743 +
                       C51096 * C4750 + C44231 * C1328 + C51095 * C1333) *
                          C118) *
                         C50763 * C50953 +
                     ((C44652 + C44651 + C44650) * C50802 +
                      (C44649 + C44648 + C44647) * C118) *
                         C50763 * C51057) *
                        C50789) *
                       C491)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C118 +
                      (C47218 + C47217 + C47216) * C50802) *
                         C50763 * C50953) *
                        C51087 -
                    (((C44462 + C44463 + C44464) * C50802 +
                      (C44459 + C44460 + C44461) * C118) *
                         C50763 * C50953 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C50763 * C51057) *
                        C51088 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C50763 * C51057 +
                     ((C44811 + C44812 + C44813) * C118 +
                      (C44814 + C44815 + C44816) * C50802) *
                         C50763 * C50953) *
                        C682) *
                       C51045 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C118 +
                      (C45190 + C45191 + C45192) * C50802) *
                         C50763 * C50953) *
                        C51088 -
                    (((C44233 * C4751 + C44230 * C4756 + C44232 * C1332 +
                       C51096 * C1339 + C44231 * C967 + C51095 * C976) *
                          C50802 +
                      (C44233 * C4744 + C44230 * C4752 + C44232 * C1327 +
                       C51096 * C1331 + C44231 * C961 + C51095 * C966) *
                          C118) *
                         C50763 * C50953 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C50763 * C51057) *
                        C51087 -
                    (((C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50802 +
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C118) *
                         C50763 * C50953 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C50763 * C51057) *
                        C682) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C50763 * C51057 +
                    ((C44231 * C297 + C51095 * C307 + C44232 * C961 +
                      C51096 * C966 + C44233 * C1327 + C44230 * C1331) *
                         C118 +
                     (C44231 * C308 + C51095 * C327 + C44232 * C967 +
                      C51096 * C976 + C44233 * C1332 + C44230 * C1339) *
                         C50802) *
                        C50763 * C50953) *
                       C112 -
                   (((C44462 + C44463 + C44464) * C50802 +
                     (C44459 + C44460 + C44461) * C118) *
                        C50763 * C50953 +
                    ((C44276 + C44275 + C44274) * C50802 +
                     (C44273 + C44272 + C44271) * C118) *
                        C50763 * C51057) *
                       C113 +
                   (((C44282 + C44281 + C44280) * C118 +
                     (C44279 + C44278 + C44277) * C50802) *
                        C50763 * C51057 +
                    ((C44811 + C44812 + C44813) * C118 +
                     (C44814 + C44815 + C44816) * C50802) *
                        C50763 * C50953) *
                       C114 -
                   (((C44233 * C1338 + C44230 * C1342 + C44232 * C973 +
                      C51096 * C979 + C44231 * C320 + C51095 * C333) *
                         C50802 +
                     (C44233 * C1330 + C44230 * C1337 + C44232 * C964 +
                      C51096 * C972 + C44231 * C303 + C51095 * C319) *
                         C118) *
                        C50763 * C50953 +
                    ((C44288 + C44287 + C44286) * C50802 +
                     (C44285 + C44284 + C44283) * C118) *
                        C50763 * C51057) *
                       C115) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C47213 + C47214 + C47215) * C295 -
                     (C47216 + C47217 + C47218) * C290 +
                     (C47219 + C47220 + C47221) * C296 +
                     (C47222 + C47223 + C47224) * C291) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C294 +
                     (C47218 + C47217 + C47216) * C289 -
                     (C47221 + C47220 + C47219) * C295 -
                     (C47224 + C47223 + C47222) * C290 +
                     (C44231 * C1213 + C51095 * C1217 + C44232 * C3353 +
                      C51096 * C3356 + C44233 * C3811 + C44230 * C3813) *
                         C296 +
                     (C44231 * C1218 + C51095 * C1225 + C44232 * C3357 +
                      C51096 * C3362 + C44233 * C3814 + C44230 * C3817) *
                         C291) *
                        C50763 * C50953) *
                       C292 +
                   (((C44461 + C44460 + C44459) * C295 -
                     ((C44276 + C44275 + C44274) * C289 +
                      (C44273 + C44272 + C44271) * C294) +
                     (C44464 + C44463 + C44462) * C290 -
                     (C44467 + C44466 + C44465) * C296 -
                     (C44470 + C44469 + C44468) * C291) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C295 -
                     ((C44462 + C44463 + C44464) * C289 +
                      (C44459 + C44460 + C44461) * C294) +
                     (C44468 + C44469 + C44470) * C290 -
                     (C44233 * C3812 + C44230 * C3815 + C44232 * C3354 +
                      C51096 * C3358 + C44231 * C1214 + C51095 * C1219) *
                         C296 -
                     (C44233 * C3816 + C44230 * C3818 + C44232 * C3359 +
                      C51096 * C3363 + C44231 * C1220 + C51095 * C1226) *
                         C291) *
                        C50763 * C50953) *
                       C50789) *
                  C50818) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1446 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51089 -
                     (C47213 + C47214 + C47215) * C1447 -
                     (C47216 + C47217 + C47218) * C51090 +
                     (C47219 + C47220 + C47221) * C1448 +
                     (C47222 + C47223 + C47224) * C1443) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C1446 +
                     (C47218 + C47217 + C47216) * C51089 -
                     (C47221 + C47220 + C47219) * C1447 -
                     (C47224 + C47223 + C47222) * C51090 +
                     (C48133 + C48132 + C48131) * C1448 +
                     (C48136 + C48135 + C48134) * C1443) *
                        C50763 * C50953) *
                       C51036 +
                   (((C44461 + C44460 + C44459) * C1447 -
                     ((C44276 + C44275 + C44274) * C51089 +
                      (C44273 + C44272 + C44271) * C1446) +
                     (C44464 + C44463 + C44462) * C51090 -
                     (C44467 + C44466 + C44465) * C1448 -
                     (C44470 + C44469 + C44468) * C1443) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C1447 -
                     ((C44462 + C44463 + C44464) * C51089 +
                      (C44459 + C44460 + C44461) * C1446) +
                     (C44468 + C44469 + C44470) * C51090 -
                     (C44233 * C3812 + C44230 * C3815 + C44232 * C3354 +
                      C51096 * C3358 + C44231 * C1214 + C51095 * C1219) *
                         C1448 -
                     (C44233 * C3816 + C44230 * C3818 + C44232 * C3359 +
                      C51096 * C3363 + C44231 * C1220 + C51095 * C1226) *
                         C1443) *
                        C50763 * C50953) *
                       C50789) *
                  C50818) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1446 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51089 -
                     (C47213 + C47214 + C47215) * C1447 -
                     (C47216 + C47217 + C47218) * C51090 +
                     (C47219 + C47220 + C47221) * C1448 +
                     (C47222 + C47223 + C47224) * C1443) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C1446 +
                     (C47218 + C47217 + C47216) * C51089 -
                     (C47221 + C47220 + C47219) * C1447 -
                     (C47224 + C47223 + C47222) * C51090 +
                     (C48133 + C48132 + C48131) * C1448 +
                     (C48136 + C48135 + C48134) * C1443) *
                        C50763 * C50953) *
                       C50784 * C51045 +
                   (((C47869 + C47870 + C47871) * C1447 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C51089 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C1446) +
                     (C47872 + C47873 + C47874) * C51090 -
                     (C48799 + C48800 + C48801) * C1448 -
                     (C48802 + C48803 + C48804) * C1443) *
                        C50763 * C51057 +
                    ((C48801 + C48800 + C48799) * C1447 -
                     ((C47874 + C47873 + C47872) * C51089 +
                      (C47871 + C47870 + C47869) * C1446) +
                     (C48804 + C48803 + C48802) * C51090 -
                     (C44233 * C21346 + C44230 * C21348 + C44232 * C3811 +
                      C51096 * C3813 + C44231 * C3353 + C51095 * C3356) *
                         C1448 -
                     (C44233 * C21347 + C44230 * C21349 + C44232 * C3814 +
                      C51096 * C3817 + C44231 * C3357 + C51095 * C3362) *
                         C1443) *
                        C50763 * C50953) *
                       C50784 * C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                     C51096 * C511 + C44233 * C497 + C44230 * C512) *
                        C1209 +
                    (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                     C51096 * C526 + C44233 * C513 + C44230 * C527) *
                        C1204 -
                    (C47213 + C47214 + C47215) * C1210 -
                    (C47216 + C47217 + C47218) * C1205 +
                    (C47219 + C47220 + C47221) * C1211 +
                    (C47222 + C47223 + C47224) * C1206 -
                    (C48131 + C48132 + C48133) * C1212 -
                    (C48134 + C48135 + C48136) * C1207) *
                       C50763 * C51057 +
                   ((C47215 + C47214 + C47213) * C1209 +
                    (C47218 + C47217 + C47216) * C1204 -
                    (C47221 + C47220 + C47219) * C1210 -
                    (C47224 + C47223 + C47222) * C1205 +
                    (C48133 + C48132 + C48131) * C1211 +
                    (C48136 + C48135 + C48134) * C1206 -
                    (C44233 * C20738 + C44230 * C20739 + C44232 * C4337 +
                     C51096 * C4339 + C44231 * C2597 + C51095 * C2600) *
                        C1212 -
                    (C44233 * C20740 + C44230 * C20741 + C44232 * C4340 +
                     C51096 * C4343 + C44231 * C2601 + C51095 * C2606) *
                        C1207) *
                       C50763 * C50953) *
                  C50784 * C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C47213 + C47214 + C47215) * C1115 -
                     (C47216 + C47217 + C47218) * C50854) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C1114 +
                     (C47218 + C47217 + C47216) * C1109 -
                     (C47221 + C47220 + C47219) * C1115 -
                     (C47224 + C47223 + C47222) * C50854) *
                        C50763 * C50953) *
                       C1111 +
                   (((C44461 + C44460 + C44459) * C1115 -
                     ((C44276 + C44275 + C44274) * C1109 +
                      (C44273 + C44272 + C44271) * C1114) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C1115 -
                     ((C44462 + C44463 + C44464) * C1109 +
                      (C44459 + C44460 + C44461) * C1114) +
                     (C44468 + C44469 + C44470) * C50854) *
                        C50763 * C50953) *
                       C1112 +
                   (((C44282 + C44281 + C44280) * C1114 +
                     (C44279 + C44278 + C44277) * C1109 -
                     (C44813 + C44812 + C44811) * C1115 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C50763 * C51057 +
                    ((C44811 + C44812 + C44813) * C1114 +
                     (C44814 + C44815 + C44816) * C1109 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C1115 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C50854) *
                        C50763 * C50953) *
                       C1113) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C47213 + C47214 + C47215) * C1115 -
                     (C47216 + C47217 + C47218) * C50854) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C1114 +
                     (C47218 + C47217 + C47216) * C1109 -
                     (C47221 + C47220 + C47219) * C1115 -
                     (C47224 + C47223 + C47222) * C50854) *
                        C50763 * C50953) *
                       C50784 * C489 +
                   (((C47869 + C47870 + C47871) * C1115 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C1109 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C1114) +
                     (C47872 + C47873 + C47874) * C50854) *
                        C50763 * C51057 +
                    ((C44231 * C1707 + C51095 * C1711 + C44232 * C2803 +
                      C51096 * C2806 + C44233 * C4742 + C44230 * C4748) *
                         C1115 -
                     ((C47874 + C47873 + C47872) * C1109 +
                      (C47871 + C47870 + C47869) * C1114) +
                     (C44231 * C1712 + C51095 * C1719 + C44232 * C2807 +
                      C51096 * C2812 + C44233 * C4747 + C44230 * C4754) *
                         C50854) *
                        C50763 * C50953) *
                       C50784 * C490 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C1114 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C1109 -
                     (C48295 + C48296 + C48297) * C1115 -
                     (C48298 + C48299 + C48300) * C50854) *
                        C50763 * C51057 +
                    ((C48297 + C48296 + C48295) * C1114 +
                     (C48300 + C48299 + C48298) * C1109 -
                     (C44233 * C23014 + C44230 * C23015 + C44232 * C4742 +
                      C51096 * C4748 + C44231 * C2803 + C51095 * C2806) *
                         C1115 -
                     (C44233 * C23016 + C44230 * C23017 + C44232 * C4747 +
                      C51096 * C4754 + C44231 * C2807 + C51095 * C2812) *
                         C50854) *
                        C50763 * C50953) *
                       C50784 * C491)) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C1114 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C1109 -
                      (C47213 + C47214 + C47215) * C1115 -
                      (C47216 + C47217 + C47218) * C50854) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C1114 +
                      (C47218 + C47217 + C47216) * C1109 -
                      (C47221 + C47220 + C47219) * C1115 -
                      (C47224 + C47223 + C47222) * C50854) *
                         C50763 * C50953) *
                        C51036 +
                    (((C44461 + C44460 + C44459) * C1115 -
                      ((C44276 + C44275 + C44274) * C1109 +
                       (C44273 + C44272 + C44271) * C1114) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C50763 * C51057 +
                     ((C44465 + C44466 + C44467) * C1115 -
                      ((C44462 + C44463 + C44464) * C1109 +
                       (C44459 + C44460 + C44461) * C1114) +
                      (C44468 + C44469 + C44470) * C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C51045 +
                   ((((C47869 + C47870 + C47871) * C1115 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C1109 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C1114) +
                      (C47872 + C47873 + C47874) * C50854) *
                         C50763 * C51057 +
                     ((C44231 * C1707 + C51095 * C1711 + C44232 * C2803 +
                       C51096 * C2806 + C44233 * C4742 + C44230 * C4748) *
                          C1115 -
                      ((C47874 + C47873 + C47872) * C1109 +
                       (C47871 + C47870 + C47869) * C1114) +
                      (C44231 * C1712 + C51095 * C1719 + C44232 * C2807 +
                       C51096 * C2812 + C44233 * C4747 + C44230 * C4754) *
                          C50854) *
                         C50763 * C50953) *
                        C51036 +
                    (((C44641 + C44642 + C44643) * C1114 +
                      (C44644 + C44645 + C44646) * C1109 -
                      (C45189 + C45188 + C45187) * C1115 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C1114 +
                      (C45190 + C45191 + C45192) * C1109 -
                      (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                       C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                          C1115 -
                      (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                       C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                          C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C47213 + C47214 + C47215) * C1115 -
                     (C47216 + C47217 + C47218) * C50854) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C1114 +
                     (C47218 + C47217 + C47216) * C1109 -
                     (C47221 + C47220 + C47219) * C1115 -
                     (C47224 + C47223 + C47222) * C50854) *
                        C50763 * C50953) *
                       C1111 +
                   (((C44461 + C44460 + C44459) * C1115 -
                     ((C44276 + C44275 + C44274) * C1109 +
                      (C44273 + C44272 + C44271) * C1114) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C50763 * C51057 +
                    ((C44465 + C44466 + C44467) * C1115 -
                     ((C44462 + C44463 + C44464) * C1109 +
                      (C44459 + C44460 + C44461) * C1114) +
                     (C44468 + C44469 + C44470) * C50854) *
                        C50763 * C50953) *
                       C1112 +
                   (((C44282 + C44281 + C44280) * C1114 +
                     (C44279 + C44278 + C44277) * C1109 -
                     (C44813 + C44812 + C44811) * C1115 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C50763 * C51057 +
                    ((C44811 + C44812 + C44813) * C1114 +
                     (C44814 + C44815 + C44816) * C1109 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C1115 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C50854) *
                        C50763 * C50953) *
                       C1113) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                     C51096 * C511 + C44233 * C497 + C44230 * C512) *
                        C1209 +
                    (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                     C51096 * C526 + C44233 * C513 + C44230 * C527) *
                        C1204 -
                    (C47213 + C47214 + C47215) * C1210 -
                    (C47216 + C47217 + C47218) * C1205 +
                    (C47219 + C47220 + C47221) * C1211 +
                    (C47222 + C47223 + C47224) * C1206 -
                    (C48131 + C48132 + C48133) * C1212 -
                    (C48134 + C48135 + C48136) * C1207) *
                       C50763 * C51057 +
                   ((C47215 + C47214 + C47213) * C1209 +
                    (C47218 + C47217 + C47216) * C1204 -
                    (C47221 + C47220 + C47219) * C1210 -
                    (C47224 + C47223 + C47222) * C1205 +
                    (C48133 + C48132 + C48131) * C1211 +
                    (C48136 + C48135 + C48134) * C1206 -
                    (C44233 * C20738 + C44230 * C20739 + C44232 * C4337 +
                     C51096 * C4339 + C44231 * C2597 + C51095 * C2600) *
                        C1212 -
                    (C44233 * C20740 + C44230 * C20741 + C44232 * C4340 +
                     C51096 * C4343 + C44231 * C2601 + C51095 * C2606) *
                        C1207) *
                       C50763 * C50953) *
                  C50784 * C50818) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C683 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C51044 -
                      (C47213 + C47214 + C47215) * C684 -
                      (C47216 + C47217 + C47218) * C50854) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C683 +
                      (C47218 + C47217 + C47216) * C51044 -
                      (C47221 + C47220 + C47219) * C684 -
                      (C47224 + C47223 + C47222) * C50854) *
                         C50763 * C50953) *
                        C51036 +
                    (((C44461 + C44460 + C44459) * C684 -
                      ((C44276 + C44275 + C44274) * C51044 +
                       (C44273 + C44272 + C44271) * C683) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C50763 * C51057 +
                     ((C44465 + C44466 + C44467) * C684 -
                      ((C44462 + C44463 + C44464) * C51044 +
                       (C44459 + C44460 + C44461) * C683) +
                      (C44468 + C44469 + C44470) * C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C1821 +
                   ((((C47869 + C47870 + C47871) * C684 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C51044 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C683) +
                      (C47872 + C47873 + C47874) * C50854) *
                         C50763 * C51057 +
                     ((C48801 + C48800 + C48799) * C684 -
                      ((C47874 + C47873 + C47872) * C51044 +
                       (C47871 + C47870 + C47869) * C683) +
                      (C48804 + C48803 + C48802) * C50854) *
                         C50763 * C50953) *
                        C51036 +
                    (((C44641 + C44642 + C44643) * C683 +
                      (C44644 + C44645 + C44646) * C51044 -
                      (C45189 + C45188 + C45187) * C684 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C683 +
                      (C45190 + C45191 + C45192) * C51044 -
                      (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                       C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                          C684 -
                      (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                       C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                          C50854) *
                         C50763 * C50953) *
                        C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C683 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51044 -
                     (C47213 + C47214 + C47215) * C684 -
                     (C47216 + C47217 + C47218) * C50854) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C683 +
                     (C47218 + C47217 + C47216) * C51044 -
                     (C47221 + C47220 + C47219) * C684 -
                     (C47224 + C47223 + C47222) * C50854) *
                        C50763 * C50953) *
                       C50784 * C51091 +
                   (((C47869 + C47870 + C47871) * C684 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C51044 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C683) +
                     (C47872 + C47873 + C47874) * C50854) *
                        C50763 * C51057 +
                    ((C48801 + C48800 + C48799) * C684 -
                     ((C47874 + C47873 + C47872) * C51044 +
                      (C47871 + C47870 + C47869) * C683) +
                     (C48804 + C48803 + C48802) * C50854) *
                        C50763 * C50953) *
                       C50784 * C51092 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C683 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C51044 -
                     (C48295 + C48296 + C48297) * C684 -
                     (C48298 + C48299 + C48300) * C50854) *
                        C50763 * C51057 +
                    ((C48297 + C48296 + C48295) * C683 +
                     (C48300 + C48299 + C48298) * C51044 -
                     (C44233 * C23014 + C44230 * C23015 + C44232 * C4742 +
                      C51096 * C4748 + C44231 * C2803 + C51095 * C2806) *
                         C684 -
                     (C44233 * C23016 + C44230 * C23017 + C44232 * C4747 +
                      C51096 * C4754 + C44231 * C2807 + C51095 * C2812) *
                         C50854) *
                        C50763 * C50953) *
                       C50784 * C2237)) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C47213 + C47214 + C47215) * C295 -
                     (C47216 + C47217 + C47218) * C290 +
                     (C47219 + C47220 + C47221) * C296 +
                     (C47222 + C47223 + C47224) * C291) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C294 +
                     (C47218 + C47217 + C47216) * C289 -
                     (C47221 + C47220 + C47219) * C295 -
                     (C47224 + C47223 + C47222) * C290 +
                     (C48133 + C48132 + C48131) * C296 +
                     (C48136 + C48135 + C48134) * C291) *
                        C50763 * C50953) *
                       C50784 * C1821 +
                   (((C47869 + C47870 + C47871) * C295 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C289 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C294) +
                     (C47872 + C47873 + C47874) * C290 -
                     (C48799 + C48800 + C48801) * C296 -
                     (C48802 + C48803 + C48804) * C291) *
                        C50763 * C51057 +
                    ((C48801 + C48800 + C48799) * C295 -
                     ((C47874 + C47873 + C47872) * C289 +
                      (C47871 + C47870 + C47869) * C294) +
                     (C48804 + C48803 + C48802) * C290 -
                     (C44233 * C21346 + C44230 * C21348 + C44232 * C3811 +
                      C51096 * C3813 + C44231 * C3353 + C51095 * C3356) *
                         C296 -
                     (C44233 * C21347 + C44230 * C21349 + C44232 * C3814 +
                      C51096 * C3817 + C44231 * C3357 + C51095 * C3362) *
                         C291) *
                        C50763 * C50953) *
                       C50784 * C50882)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C118 +
                      (C47218 + C47217 + C47216) * C50802) *
                         C50763 * C50953) *
                        C1111 -
                    (((C44462 + C44463 + C44464) * C50802 +
                      (C44459 + C44460 + C44461) * C118) *
                         C50763 * C50953 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C50763 * C51057) *
                        C1112 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C50763 * C51057 +
                     ((C44811 + C44812 + C44813) * C118 +
                      (C44814 + C44815 + C44816) * C50802) *
                         C50763 * C50953) *
                        C1113) *
                       C1821 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C118 +
                      (C45190 + C45191 + C45192) * C50802) *
                         C50763 * C50953) *
                        C1112 -
                    (((C47874 + C47873 + C47872) * C50802 +
                      (C47871 + C47870 + C47869) * C118) *
                         C50763 * C50953 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C50763 * C51057) *
                        C1111 -
                    (((C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50802 +
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C118) *
                         C50763 * C50953 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C50763 * C51057) *
                        C1113) *
                       C50882)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C118 +
                     (C47218 + C47217 + C47216) * C50802) *
                        C50763 * C50953) *
                       C50784 * C1987 -
                   (((C47874 + C47873 + C47872) * C50802 +
                     (C47871 + C47870 + C47869) * C118) *
                        C50763 * C50953 +
                    ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                      C51096 * C527 + C44231 * C510 + C51095 * C526) *
                         C50802 +
                     (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                      C51096 * C512 + C44231 * C496 + C51095 * C511) *
                         C118) *
                        C50763 * C51057) *
                       C50784 * C1988 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C118 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C50802) *
                        C50763 * C51057 +
                    ((C48297 + C48296 + C48295) * C118 +
                     (C48300 + C48299 + C48298) * C50802) *
                        C50763 * C50953) *
                       C50784 * C1989 -
                   (((C44233 * C23931 + C44230 * C23933 + C44232 * C6714 +
                      C51096 * C6717 + C44231 * C4751 + C51095 * C4756) *
                         C50802 +
                     (C44233 * C23930 + C44230 * C23932 + C44232 * C6711 +
                      C51096 * C6713 + C44231 * C4744 + C51095 * C4752) *
                         C118) *
                        C50763 * C50953 +
                    ((C44233 * C7599 + C44230 * C7602 + C44232 * C5733 +
                      C51096 * C5738 + C44231 * C2001 + C51095 * C2006) *
                         C50802 +
                     (C44233 * C7596 + C44230 * C7600 + C44232 * C5729 +
                      C51096 * C5732 + C44231 * C1994 + C51095 * C2002) *
                         C118) *
                        C50763 * C51057) *
                       C50784 * C1990)) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C118 +
                      (C47218 + C47217 + C47216) * C50802) *
                         C50763 * C50953) *
                        C51036 -
                    (((C44462 + C44463 + C44464) * C50802 +
                      (C44459 + C44460 + C44461) * C118) *
                         C50763 * C50953 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C50763 * C51057) *
                        C50789) *
                       C51091 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C118 +
                      (C45190 + C45191 + C45192) * C50802) *
                         C50763 * C50953) *
                        C50789 -
                    (((C47874 + C47873 + C47872) * C50802 +
                      (C47871 + C47870 + C47869) * C118) *
                         C50763 * C50953 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C50763 * C51057) *
                        C51036) *
                       C51092 +
                   ((((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                       C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                          C118 +
                      (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                       C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                          C50802) *
                         C50763 * C51057 +
                     ((C48297 + C48296 + C48295) * C118 +
                      (C48300 + C48299 + C48298) * C50802) *
                         C50763 * C50953) *
                        C51036 -
                    (((C44233 * C6716 + C44230 * C6718 + C44232 * C4749 +
                       C51096 * C4755 + C44231 * C1334 + C51095 * C1340) *
                          C50802 +
                      (C44233 * C6712 + C44230 * C6715 + C44232 * C4743 +
                       C51096 * C4750 + C44231 * C1328 + C51095 * C1333) *
                          C118) *
                         C50763 * C50953 +
                     ((C44652 + C44651 + C44650) * C50802 +
                      (C44649 + C44648 + C44647) * C118) *
                         C50763 * C51057) *
                        C50789) *
                       C2237)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C50763 * C51057 +
                     ((C47215 + C47214 + C47213) * C118 +
                      (C47218 + C47217 + C47216) * C50802) *
                         C50763 * C50953) *
                        C1111 -
                    (((C44462 + C44463 + C44464) * C50802 +
                      (C44459 + C44460 + C44461) * C118) *
                         C50763 * C50953 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C50763 * C51057) *
                        C1112 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C50763 * C51057 +
                     ((C44811 + C44812 + C44813) * C118 +
                      (C44814 + C44815 + C44816) * C50802) *
                         C50763 * C50953) *
                        C1113) *
                       C1821 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C50763 * C51057 +
                     ((C45187 + C45188 + C45189) * C118 +
                      (C45190 + C45191 + C45192) * C50802) *
                         C50763 * C50953) *
                        C1112 -
                    (((C47874 + C47873 + C47872) * C50802 +
                      (C47871 + C47870 + C47869) * C118) *
                         C50763 * C50953 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C50763 * C51057) *
                        C1111 -
                    (((C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50802 +
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C118) *
                         C50763 * C50953 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C50763 * C51057) *
                        C1113) *
                       C50882)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C47213 + C47214 + C47215) * C295 -
                     (C47216 + C47217 + C47218) * C290 +
                     (C47219 + C47220 + C47221) * C296 +
                     (C47222 + C47223 + C47224) * C291) *
                        C50763 * C51057 +
                    ((C47215 + C47214 + C47213) * C294 +
                     (C47218 + C47217 + C47216) * C289 -
                     (C47221 + C47220 + C47219) * C295 -
                     (C47224 + C47223 + C47222) * C290 +
                     (C48133 + C48132 + C48131) * C296 +
                     (C48136 + C48135 + C48134) * C291) *
                        C50763 * C50953) *
                       C50784 * C1821 +
                   (((C47869 + C47870 + C47871) * C295 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C289 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C294) +
                     (C47872 + C47873 + C47874) * C290 -
                     (C48799 + C48800 + C48801) * C296 -
                     (C48802 + C48803 + C48804) * C291) *
                        C50763 * C51057 +
                    ((C48801 + C48800 + C48799) * C295 -
                     ((C47874 + C47873 + C47872) * C289 +
                      (C47871 + C47870 + C47869) * C294) +
                     (C48804 + C48803 + C48802) * C290 -
                     (C44233 * C21346 + C44230 * C21348 + C44232 * C3811 +
                      C51096 * C3813 + C44231 * C3353 + C51095 * C3356) *
                         C296 -
                     (C44233 * C21347 + C44230 * C21349 + C44232 * C3814 +
                      C51096 * C3817 + C44231 * C3357 + C51095 * C3362) *
                         C291) *
                        C50763 * C50953) *
                       C50784 * C50882)) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
            (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C683 + C36366 * C51044 - (C36358 + C36357) * C684 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C51087 +
          (((C33555 + C33554) * C684 -
            ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C684 -
            ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C51088 +
          (C33930 * C50763 * C2436 +
           ((C33563 + C33562) * C683 + (C33565 + C33564) * C51044 -
            (C33567 + C33566) * C684 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C683 + (C33568 + C33569) * C51044 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C684 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C684 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
            (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
               C17339 +
           C33930 * C17340) *
              C50904 * C51087 +
          (((C33555 + C33554) * C684 -
            ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
            (C33557 + C33556) * C50854) *
               C17338 +
           ((C33563 + C33562) * C684 -
            ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
            (C33565 + C33564) * C50854) *
               C17339 +
           ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
            (C33927 + C33928) * C50854) *
               C17340) *
              C50904 * C51088 +
          (C33930 * C17338 +
           ((C33361 + C33360) * C683 + (C33359 + C33358) * C51044 -
            (C33926 + C33925) * C684 - (C33928 + C33927) * C50854) *
               C17339 +
           ((C33362 + C33363) * C683 + (C33364 + C33365) * C51044 -
            (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                C684 -
            (C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                C50854) *
               C17340) *
              C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C683 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C51044 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C684 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C50854) *
              C50763 * C50904 * C51087 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C684 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C51044 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C683) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C50854) *
              C50763 * C50904 * C51088 +
          ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
            C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
               C683 +
           (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
            C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
               C51044 -
           (C38911 * C6299 + C38907 * C6300 + C38910 * C1329 + C38906 * C1335 +
            C38909 * C963 + C38905 * C970 + C38908 * C301 + C38904 * C315) *
               C684 -
           (C38911 * C6301 + C38907 * C6302 + C38910 * C1336 + C38906 * C1341 +
            C38909 * C971 + C38905 * C978 + C38908 * C316 + C38904 * C331) *
               C50854) *
              C50763 * C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C683 + C36366 * C51044 - (C36358 + C36357) * C684 -
             (C36360 + C36359) * C50854) *
                C50763 * C2438) *
               C292 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C684 -
             ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C51045 +
          ((((C37023 + C37024) * C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C684 -
             ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
              C50979 * C3813) *
                 C684 -
             ((C37030 + C37029) * C51044 + (C37028 + C37027) * C683) +
             (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C2438) *
               C292 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C683 + (C34306 + C34307) * C51044 -
             (C37031 + C37032) * C684 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C683 + (C37034 + C37033) * C51044 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C684 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C684 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
                C17339 +
            C33930 * C17340) *
               C50904 * C292 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C684 -
             ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C51045 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C684 -
             ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C292 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
             (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C683 + (C34089 + C34090) * C51044 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C684 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C683 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C51044 -
            (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
             C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
                C684 -
            (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
             C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
                C50854) *
               C50763 * C50904 * C292 +
           ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
             C38910 * C1328 + C38906 * C1333 + C38911 * C4743 +
             C38907 * C4750) *
                C684 -
            ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
              C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                 C51044 +
             (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
              C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                 C683) +
            (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
             C38910 * C1334 + C38906 * C1340 + C38911 * C4749 +
             C38907 * C4755) *
                C50854) *
               C50763 * C50904 * C50789) *
              C51045 +
          (((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
             C38910 * C4744 + C38906 * C4752 + C38911 * C6711 +
             C38907 * C6713) *
                C684 -
            ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 +
              C38906 * C2006 + C38909 * C513 + C38905 * C527 + C38908 * C510 +
              C38904 * C526) *
                 C51044 +
             (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 +
              C38906 * C2002 + C38909 * C497 + C38905 * C512 + C38908 * C496 +
              C38904 * C511) *
                 C683) +
            (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
             C38910 * C4751 + C38906 * C4756 + C38911 * C6714 +
             C38907 * C6717) *
                C50854) *
               C50763 * C50904 * C292 +
           ((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C683 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C51044 -
            (C38911 * C6712 + C38907 * C6715 + C38910 * C4743 + C38906 * C4750 +
             C38909 * C1328 + C38905 * C1333 + C38908 * C962 + C38904 * C968) *
                C684 -
            (C38911 * C6716 + C38907 * C6718 + C38910 * C4749 + C38906 * C4755 +
             C38909 * C1334 + C38905 * C1340 + C38908 * C969 + C38904 * C977) *
                C50854) *
               C50763 * C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33315 * C119 + C33313 * C126 + C33316 * C496 +
                 C50979 * C511) *
                    C118 +
                (C33315 * C127 + C33313 * C140 + C33316 * C510 +
                 C50979 * C526) *
                    C50802) *
                   C17338 +
               ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) *
                   C17339 +
               C33374 * C17340) *
                  C50904 * C112 -
              (C33375 * C17340 +
               ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) *
                   C17339 +
               ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) *
                   C17338) *
                  C50904 * C113 +
              (C33374 * C17338 +
               ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) *
                   C17339 +
               ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) *
                   C17340) *
                  C50904 * C114 -
              (((C33316 * C818 + C50979 * C820 + C33315 * C137 +
                 C33313 * C145) *
                    C50802 +
                (C33316 * C817 + C50979 * C819 + C33315 * C124 +
                 C33313 * C136) *
                    C118) *
                   C17340 +
               ((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) *
                   C17339 +
               C33375 * C17338) *
                  C50904 * C115) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33315 * C119 + C33313 * C126 + C33316 * C496 +
                 C50979 * C511) *
                    C294 +
                (C33315 * C127 + C33313 * C140 + C33316 * C510 +
                 C50979 * C526) *
                    C289 -
                (C33316 * C961 + C50979 * C966 + C33315 * C297 +
                 C33313 * C307) *
                    C295 -
                (C33316 * C967 + C50979 * C976 + C33315 * C308 +
                 C33313 * C327) *
                    C290 +
                (C33315 * C298 + C33313 * C309 + C33316 * C1707 +
                 C50979 * C1711) *
                    C296 +
                (C33315 * C310 + C33313 * C328 + C33316 * C1712 +
                 C50979 * C1719) *
                    C291) *
                   C17338 +
               ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
                (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
                (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
                   C17339 +
               (C33366 * C294 + C33367 * C289 - (C33562 + C33563) * C295 -
                (C33564 + C33565) * C290 + (C33566 + C33567) * C296 +
                (C33568 + C33569) * C291) *
                   C17340) *
                  C50904 * C292 +
              (((C33555 + C33554) * C295 -
                ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
                (C33557 + C33556) * C290 - (C33559 + C33558) * C296 -
                (C33561 + C33560) * C291) *
                   C17338 +
               ((C33563 + C33562) * C295 -
                ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
                (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
                (C33569 + C33568) * C291) *
                   C17339 +
               ((C33315 * C303 + C33313 * C319 + C33316 * C964 +
                 C50979 * C972) *
                    C295 -
                (C33368 * C289 + C33369 * C294) +
                (C33315 * C320 + C33313 * C333 + C33316 * C973 +
                 C50979 * C979) *
                    C290 -
                (C33316 * C1710 + C50979 * C1717 + C33315 * C304 +
                 C33313 * C321) *
                    C296 -
                (C33316 * C1718 + C50979 * C1722 + C33315 * C322 +
                 C33313 * C334) *
                    C291) *
                   C17340) *
                  C50904 * C50789) *
             C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C292 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C50789) *
              C489 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C33315 * C494 + C33313 * C506 + C33316 * C500 + C50979 * C518) *
                 C118 +
             (C33315 * C507 + C33313 * C524 + C33316 * C519 + C50979 * C530) *
                 C50802) *
                C17340) *
               C50904 * C50789 -
           (((C33755 + C33754) * C50802 + (C33753 + C33752) * C118) * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C292) *
              C490 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C17338 +
            ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
            ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
               C50904 * C292 -
           (((C33316 * C1995 + C50979 * C2003 + C33315 * C519 + C33313 * C530) *
                 C50802 +
             (C33316 * C1991 + C50979 * C1996 + C33315 * C500 + C33313 * C518) *
                 C118) *
                C17340 +
            ((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C17339 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C17338) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C33315 * C297 + C33313 * C307 + C33316 * C961 + C50979 * C966) *
                C118 +
            (C33315 * C308 + C33313 * C327 + C33316 * C967 + C50979 * C976) *
                C50802) *
               C50763 * C2437 +
           ((C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C118 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C50802) *
               C50763 * C2438) *
              C112 -
          (((C33561 + C33560) * C50802 + (C33559 + C33558) * C118) * C50763 *
               C2438 +
           ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
               C2437 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
               C2436) *
              C113 +
          (C33374 * C50763 * C2436 +
           ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
               C2437 +
           ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
               C2438) *
              C114 -
          (((C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C50802 +
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C118) *
               C50763 * C2438 +
           ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C50763 *
               C2437 +
           C33375 * C50763 * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - (C36358 + C36357) * C295 -
            (C36360 + C36359) * C290 +
            (C33315 * C2597 + C33313 * C2600 + C33316 * C4337 +
             C50979 * C4339) *
                C296 +
            (C33315 * C2601 + C33313 * C2606 + C33316 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C2438) *
              C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - C36339 * C296 - C36340 * C291) *
               C50763 * C2436 +
           ((C33558 + C33559) * C295 -
            ((C33556 + C33557) * C289 + (C33554 + C33555) * C294) +
            (C33560 + C33561) * C290 - (C36361 + C36362) * C296 -
            (C36363 + C36364) * C291) *
               C50763 * C2437 +
           ((C36362 + C36361) * C295 - (C36340 * C289 + C36339 * C294) +
            (C36364 + C36363) * C290 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C296 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C291) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C292 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C50789) *
              C489 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C33315 * C1708 + C33313 * C1713 + C33316 * C2804 +
              C50979 * C2808) *
                 C118 +
             (C33315 * C1714 + C33313 * C1720 + C33316 * C2809 +
              C50979 * C2813) *
                 C50802) *
                C50763 * C2438) *
               C50789 -
           (((C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
              C33313 * C1719) *
                 C50802 +
             (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
              C33313 * C1711) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C1332 + C50979 * C1339 + C33315 * C967 + C33313 * C976) *
                 C50802 +
             (C33316 * C1327 + C50979 * C1331 + C33315 * C961 + C33313 * C966) *
                 C118) *
                C50763 * C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C292) *
              C490 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C2436 +
            ((C33315 * C1327 + C33313 * C1331 + C33316 * C4744 +
              C50979 * C4752) *
                 C118 +
             (C33315 * C1332 + C33313 * C1339 + C33316 * C4751 +
              C50979 * C4756) *
                 C50802) *
                C50763 * C2437 +
            ((C33315 * C2803 + C33313 * C2806 + C33316 * C4742 +
              C50979 * C4748) *
                 C118 +
             (C33315 * C2807 + C33313 * C2812 + C33316 * C4747 +
              C50979 * C4754) *
                 C50802) *
                C50763 * C2438) *
               C292 -
           (((C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50802 +
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
              C33313 * C1340) *
                 C50802 +
             (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
              C33313 * C1333) *
                 C118) *
                C50763 * C2437 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C50763 *
                C2436) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C118 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C50802) *
              C50763 * C50904 * C112 -
          ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
            C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
               C50802 +
           (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
            C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
               C118) *
              C50763 * C50904 * C113 +
          ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
            C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
               C118 +
           (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
            C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
               C50802) *
              C50763 * C50904 * C114 -
          ((C38911 * C1995 + C38907 * C2003 + C38910 * C519 + C38906 * C530 +
            C38909 * C507 + C38905 * C524 + C38908 * C133 + C38904 * C143) *
               C50802 +
           (C38911 * C1991 + C38907 * C1996 + C38910 * C500 + C38906 * C518 +
            C38909 * C494 + C38905 * C506 + C38908 * C122 + C38904 * C132) *
               C118) *
              C50763 * C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C294 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C289 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C295 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C290 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C296 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C291) *
              C50763 * C50904 * C292 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C295 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C289 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C294) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C290 -
           (C38911 * C4741 + C38907 * C4746 + C38910 * C2804 + C38906 * C2808 +
            C38909 * C1708 + C38905 * C1713 + C38908 * C300 + C38904 * C313) *
               C296 -
           (C38911 * C4745 + C38907 * C4753 + C38910 * C2809 + C38906 * C2813 +
            C38909 * C1714 + C38905 * C1720 + C38908 * C314 + C38904 * C330) *
               C291) *
              C50763 * C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C118 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C50802) *
               C50763 * C50904 * C292 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C50802 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C118) *
               C50763 * C50904 * C50789) *
              C489 +
          (((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C118 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C50802) *
               C50763 * C50904 * C50789 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C50802 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C118) *
               C50763 * C50904 * C292) *
              C490 +
          (((C38908 * C497 + C38904 * C512 + C38909 * C1994 + C38905 * C2002 +
             C38910 * C5729 + C38906 * C5732 + C38911 * C7596 +
             C38907 * C7600) *
                C118 +
            (C38908 * C513 + C38904 * C527 + C38909 * C2001 + C38905 * C2006 +
             C38910 * C5733 + C38906 * C5738 + C38911 * C7599 +
             C38907 * C7602) *
                C50802) *
               C50763 * C50904 * C292 -
           ((C38911 * C7597 + C38907 * C7601 + C38910 * C5735 + C38906 * C5739 +
             C38909 * C1999 + C38905 * C2005 + C38908 * C515 + C38904 * C528) *
                C50802 +
            (C38911 * C7595 + C38907 * C7598 + C38910 * C5730 + C38906 * C5734 +
             C38909 * C1993 + C38905 * C2000 + C38908 * C498 + C38904 * C514) *
                C118) *
               C50763 * C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C51087 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C51088 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C682) *
              C51045 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C33315 * C1708 + C33313 * C1713 + C33316 * C2804 +
              C50979 * C2808) *
                 C118 +
             (C33315 * C1714 + C33313 * C1720 + C33316 * C2809 +
              C50979 * C2813) *
                 C50802) *
                C50763 * C2438) *
               C51088 -
           (((C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
              C33313 * C1719) *
                 C50802 +
             (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
              C33313 * C1711) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C1332 + C50979 * C1339 + C33315 * C967 + C33313 * C976) *
                 C50802 +
             (C33316 * C1327 + C50979 * C1331 + C33315 * C961 + C33313 * C966) *
                 C118) *
                C50763 * C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C51087 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C51087 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C51088 +
           (C33374 * C17338 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
            ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
               C50904 * C682) *
              C51045 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C51088 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C51087 -
           (((C33316 * C520 + C50979 * C531 + C33315 * C509 + C33313 * C525) *
                 C50802 +
             (C33316 * C501 + C50979 * C521 + C33315 * C495 + C33313 * C508) *
                 C118) *
                C17340 +
            ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C17339 +
            C34093 * C17338) *
               C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C118 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C50802) *
               C50763 * C50904 * C51087 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C50802 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C118) *
               C50763 * C50904 * C51088 +
           ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
             C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
                C118 +
            (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
             C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
                C50802) *
               C50763 * C50904 * C682) *
              C51045 +
          (((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C118 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C50802) *
               C50763 * C50904 * C51088 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C50802 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C118) *
               C50763 * C50904 * C51087 -
           ((C38911 * C5736 + C38907 * C5740 + C38910 * C1997 + C38906 * C2004 +
             C38909 * C517 + C38905 * C529 + C38908 * C505 + C38904 * C523) *
                C50802 +
            (C38911 * C5731 + C38907 * C5737 + C38910 * C1992 + C38906 * C1998 +
             C38909 * C499 + C38905 * C516 + C38908 * C493 + C38904 * C504) *
                C118) *
               C50763 * C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - (C33562 + C33563) * C295 -
            (C33564 + C33565) * C290 + (C33566 + C33567) * C296 +
            (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - (C33559 + C33558) * C296 -
            (C33561 + C33560) * C291) *
               C17338 +
           ((C33563 + C33562) * C295 -
            ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
            (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
            (C33569 + C33568) * C291) *
               C17339 +
           ((C33315 * C303 + C33313 * C319 + C33316 * C964 + C50979 * C972) *
                C295 -
            (C33368 * C289 + C33369 * C294) +
            (C33315 * C320 + C33313 * C333 + C33316 * C973 + C50979 * C979) *
                C290 -
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C296 -
            (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C291) *
               C17340) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C17338 +
           ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
           C33374 * C17340) *
              C50904 * C112 -
          (C33375 * C17340 +
           ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
              C50904 * C113 +
          (C33374 * C17338 +
           ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
           ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
              C50904 * C114 -
          (((C33316 * C818 + C50979 * C820 + C33315 * C137 + C33313 * C145) *
                C50802 +
            (C33316 * C817 + C50979 * C819 + C33315 * C124 + C33313 * C136) *
                C118) *
               C17340 +
           ((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) * C17339 +
           C33375 * C17338) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C33315 * C297 + C33313 * C307 + C33316 * C961 + C50979 * C966) *
                C118 +
            (C33315 * C308 + C33313 * C327 + C33316 * C967 + C50979 * C976) *
                C50802) *
               C50763 * C2437 +
           ((C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C118 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C50802) *
               C50763 * C2438) *
              C112 -
          (((C33561 + C33560) * C50802 + (C33559 + C33558) * C118) * C50763 *
               C2438 +
           ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
               C2437 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
               C2436) *
              C113 +
          (C33374 * C50763 * C2436 +
           ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
               C2437 +
           ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
               C2438) *
              C114 -
          (((C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C50802 +
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C118) *
               C50763 * C2438 +
           ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C50763 *
               C2437 +
           C33375 * C50763 * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - (C36358 + C36357) * C295 -
            (C36360 + C36359) * C290 +
            (C33315 * C2597 + C33313 * C2600 + C33316 * C4337 +
             C50979 * C4339) *
                C296 +
            (C33315 * C2601 + C33313 * C2606 + C33316 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C2438) *
              C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - C36339 * C296 - C36340 * C291) *
               C50763 * C2436 +
           ((C33558 + C33559) * C295 -
            ((C33556 + C33557) * C289 + (C33554 + C33555) * C294) +
            (C33560 + C33561) * C290 - (C36361 + C36362) * C296 -
            (C36363 + C36364) * C291) *
               C50763 * C2437 +
           ((C36362 + C36361) * C295 - (C36340 * C289 + C36339 * C294) +
            (C36364 + C36363) * C290 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C296 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C291) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C118 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C50802) *
              C50763 * C50904 * C112 -
          ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
            C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
               C50802 +
           (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
            C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
               C118) *
              C50763 * C50904 * C113 +
          ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
            C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
               C118 +
           (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
            C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
               C50802) *
              C50763 * C50904 * C114 -
          ((C38911 * C1995 + C38907 * C2003 + C38910 * C519 + C38906 * C530 +
            C38909 * C507 + C38905 * C524 + C38908 * C133 + C38904 * C143) *
               C50802 +
           (C38911 * C1991 + C38907 * C1996 + C38910 * C500 + C38906 * C518 +
            C38909 * C494 + C38905 * C506 + C38908 * C122 + C38904 * C132) *
               C118) *
              C50763 * C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C294 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C289 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C295 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C290 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C296 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C291) *
              C50763 * C50904 * C292 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C295 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C289 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C294) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C290 -
           (C38911 * C4741 + C38907 * C4746 + C38910 * C2804 + C38906 * C2808 +
            C38909 * C1708 + C38905 * C1713 + C38908 * C300 + C38904 * C313) *
               C296 -
           (C38911 * C4745 + C38907 * C4753 + C38910 * C2809 + C38906 * C2813 +
            C38909 * C1714 + C38905 * C1720 + C38908 * C314 + C38904 * C330) *
               C291) *
              C50763 * C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
            C36365 * C1448 + C36366 * C1443) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
            (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
            (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
               C50763 * C2437 +
           (C36365 * C1446 + C36366 * C51089 - C37279 * C1447 -
            C37280 * C51090 + (C37290 + C37289) * C1448 +
            (C37292 + C37291) * C1443) *
               C50763 * C2438) *
              C51036 +
          (((C33555 + C33554) * C1447 -
            ((C33353 + C33352) * C51089 + (C33351 + C33350) * C1446) +
            (C33557 + C33556) * C51090 - C36339 * C1448 - C36340 * C1443) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1447 -
            ((C33556 + C33557) * C51089 + (C33554 + C33555) * C1446) +
            (C33560 + C33561) * C51090 - (C36361 + C36362) * C1448 -
            (C36363 + C36364) * C1443) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1447 - (C36340 * C51089 + C36339 * C1446) +
            (C36364 + C36363) * C51090 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C1448 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C1443) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1447 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C51090 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C1448 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C1443) *
               C17338 +
           ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
            (C33554 + C33555) * C1447 - (C33556 + C33557) * C51090 +
            (C33558 + C33559) * C1448 + (C33560 + C33561) * C1443) *
               C17339 +
           (C33366 * C1446 + C33367 * C51089 - C33912 * C1447 -
            C33913 * C51090 + (C33566 + C33567) * C1448 +
            (C33568 + C33569) * C1443) *
               C17340) *
              C50904 * C51036 +
          (((C33555 + C33554) * C1447 -
            ((C33353 + C33352) * C51089 + (C33351 + C33350) * C1446) +
            (C33557 + C33556) * C51090 - (C33559 + C33558) * C1448 -
            (C33561 + C33560) * C1443) *
               C17338 +
           ((C33563 + C33562) * C1447 -
            ((C33357 + C33356) * C51089 + (C33355 + C33354) * C1446) +
            (C33565 + C33564) * C51090 - (C33567 + C33566) * C1448 -
            (C33569 + C33568) * C1443) *
               C17339 +
           ((C33925 + C33926) * C1447 - (C33368 * C51089 + C33369 * C1446) +
            (C33927 + C33928) * C51090 -
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C1448 -
            (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C1443) *
               C17340) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C1446 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C51089 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C1447 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C51090 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C1448 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C1443) *
              C50763 * C50904 * C51036 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C1447 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C51089 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C1446) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C51090 -
           (C38911 * C4741 + C38907 * C4746 + C38910 * C2804 + C38906 * C2808 +
            C38909 * C1708 + C38905 * C1713 + C38908 * C300 + C38904 * C313) *
               C1448 -
           (C38911 * C4745 + C38907 * C4753 + C38910 * C2809 + C38906 * C2813 +
            C38909 * C1714 + C38905 * C1720 + C38908 * C314 + C38904 * C330) *
               C1443) *
              C50763 * C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
            C36365 * C1448 + C36366 * C1443) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
            (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
            (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
               C50763 * C2437 +
           (C36365 * C1446 + C36366 * C51089 - C37279 * C1447 -
            C37280 * C51090 + (C37290 + C37289) * C1448 +
            (C37292 + C37291) * C1443) *
               C50763 * C2438) *
              C50784 * C51045 +
          (((C37023 + C37024) * C1447 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51089 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1446) +
            (C37025 + C37026) * C51090 - C37949 * C1448 - C37950 * C1443) *
               C50763 * C2436 +
           ((C37027 + C37028) * C1447 -
            ((C37026 + C37025) * C51089 + (C37024 + C37023) * C1446) +
            (C37029 + C37030) * C51090 - (C37959 + C37960) * C1448 -
            (C37961 + C37962) * C1443) *
               C50763 * C2437 +
           ((C37960 + C37959) * C1447 - (C37950 * C51089 + C37949 * C1446) +
            (C37962 + C37961) * C51090 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C1448 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C1443) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1447 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C51090 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C1448 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C1443) *
               C17338 +
           ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
            (C33554 + C33555) * C1447 - (C33556 + C33557) * C51090 +
            (C33558 + C33559) * C1448 + (C33560 + C33561) * C1443) *
               C17339 +
           (C33366 * C1446 + C33367 * C51089 - C33912 * C1447 -
            C33913 * C51090 + (C33566 + C33567) * C1448 +
            (C33568 + C33569) * C1443) *
               C17340) *
              C50904 * C50784 * C51045 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C1447 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51089 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1446) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C51090 -
            (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
             C33313 * C1711) *
                C1448 -
            (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
             C33313 * C1719) *
                C1443) *
               C17338 +
           ((C34304 + C34305) * C1447 -
            ((C33751 + C33750) * C51089 + (C33749 + C33748) * C1446) +
            (C34306 + C34307) * C51090 -
            (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
             C33313 * C1713) *
                C1448 -
            (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
             C33313 * C1720) *
                C1443) *
               C17339 +
           ((C34308 + C34309) * C1447 - (C34085 * C51089 + C34086 * C1446) +
            (C34310 + C34311) * C51090 -
            (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
             C33313 * C1715) *
                C1448 -
            (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
             C33313 * C1721) *
                C1443) *
               C17340) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C1446 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C51089 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C1447 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C51090 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C1448 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C1443) *
              C50763 * C50904 * C50784 * C51045 +
          ((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
            C38910 * C4744 + C38906 * C4752 + C38911 * C6711 + C38907 * C6713) *
               C1447 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C51089 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C1446) +
           (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
            C38910 * C4751 + C38906 * C4756 + C38911 * C6714 + C38907 * C6717) *
               C51090 -
           (C38911 * C23014 + C38907 * C23015 + C38910 * C4742 +
            C38906 * C4748 + C38909 * C2803 + C38905 * C2806 + C38908 * C1707 +
            C38904 * C1711) *
               C1448 -
           (C38911 * C23016 + C38907 * C23017 + C38910 * C4747 +
            C38906 * C4754 + C38909 * C2807 + C38905 * C2812 + C38908 * C1712 +
            C38904 * C1719) *
               C1443) *
              C50763 * C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33315 * C119 + C33313 * C126 + C33316 * C496 +
                 C50979 * C511) *
                    C1114 +
                (C33315 * C127 + C33313 * C140 + C33316 * C510 +
                 C50979 * C526) *
                    C1109 -
                (C33316 * C961 + C50979 * C966 + C33315 * C297 +
                 C33313 * C307) *
                    C1115 -
                (C33316 * C967 + C50979 * C976 + C33315 * C308 +
                 C33313 * C327) *
                    C50854) *
                   C17338 +
               ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
                (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
                   C17339 +
               C34464 * C17340) *
                  C50904 * C1111 +
              (((C33555 + C33554) * C1115 -
                ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
                (C33557 + C33556) * C50854) *
                   C17338 +
               ((C33563 + C33562) * C1115 -
                ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
                (C33565 + C33564) * C50854) *
                   C17339 +
               ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
                (C33927 + C33928) * C50854) *
                   C17340) *
                  C50904 * C1112 +
              (C34464 * C17338 +
               ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
                (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
                   C17339 +
               ((C33362 + C33363) * C1114 + (C33364 + C33365) * C1109 -
                (C33316 * C965 + C50979 * C974 + C33315 * C305 +
                 C33313 * C323) *
                    C1115 -
                (C33316 * C975 + C50979 * C980 + C33315 * C324 +
                 C33313 * C335) *
                    C50854) *
                   C17340) *
                  C50904 * C1113) *
             C50818 +
         0.5 * std::pow(Pi, 2.5) *
             (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                   C1209 +
               (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                   C1204 -
               (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                   C1210 -
               (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                   C1205 +
               (C33315 * C298 + C33313 * C309 + C33316 * C1707 +
                C50979 * C1711) *
                   C1211 +
               (C33315 * C310 + C33313 * C328 + C33316 * C1712 +
                C50979 * C1719) *
                   C1206 -
               (C33316 * C3353 + C50979 * C3356 + C33315 * C1213 +
                C33313 * C1217) *
                   C1212 -
               (C33316 * C3357 + C50979 * C3362 + C33315 * C1218 +
                C33313 * C1225) *
                   C1207) *
                  C17338 +
              ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
               (C33554 + C33555) * C1210 - (C33556 + C33557) * C1205 +
               (C33558 + C33559) * C1211 + (C33560 + C33561) * C1206 -
               (C33316 * C3354 + C50979 * C3358 + C33315 * C1214 +
                C33313 * C1219) *
                   C1212 -
               (C33316 * C3359 + C50979 * C3363 + C33315 * C1220 +
                C33313 * C1226) *
                   C1207) *
                  C17339 +
              (C33366 * C1209 + C33367 * C1204 - C33912 * C1210 -
               C33913 * C1205 + (C33566 + C33567) * C1211 +
               (C33568 + C33569) * C1206 -
               (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
                C33313 * C1221) *
                   C1212 -
               (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
                C33313 * C1227) *
                   C1207) *
                  C17340) *
             C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1115 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
            (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
               C17339 +
           C34464 * C17340) *
              C50904 * C50784 * C489 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C1115 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C1109 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1114) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C50854) *
               C17338 +
           ((C34304 + C34305) * C1115 -
            ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
            (C34306 + C34307) * C50854) *
               C17339 +
           ((C34308 + C34309) * C1115 - (C34085 * C1109 + C34086 * C1114) +
            (C34310 + C34311) * C50854) *
               C17340) *
              C50904 * C50784 * C490 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C1114 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C1109 -
            (C33316 * C4744 + C50979 * C4752 + C33315 * C1327 +
             C33313 * C1331) *
                C1115 -
            (C33316 * C4751 + C50979 * C4756 + C33315 * C1332 +
             C33313 * C1339) *
                C50854) *
               C17338 +
           ((C33756 + C33757) * C1114 + (C33758 + C33759) * C1109 -
            (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
             C33313 * C1333) *
                C1115 -
            (C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
             C33313 * C1340) *
                C50854) *
               C17339 +
           ((C33760 + C33761) * C1114 + (C33762 + C33763) * C1109 -
            (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
             C33313 * C1335) *
                C1115 -
            (C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
             C33313 * C1341) *
                C50854) *
               C17340) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - (C36358 + C36357) * C1115 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1115 -
            ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C1112 +
          (C34464 * C50763 * C2436 +
           ((C33563 + C33562) * C1114 + (C33565 + C33564) * C1109 -
            (C33567 + C33566) * C1115 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C1114 + (C33568 + C33569) * C1109 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C1115 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
           C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
              C50763 * C2436 +
          ((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
           (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
           (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
           (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
              C50763 * C2437 +
          (C36365 * C1209 + C36366 * C1204 - C37279 * C1210 - C37280 * C1205 +
           (C37290 + C37289) * C1211 + (C37292 + C37291) * C1206 -
           (C33316 * C21074 + C50979 * C21075 + C33315 * C3651 +
            C33313 * C3653) *
               C1212 -
           (C33316 * C21076 + C50979 * C21077 + C33315 * C3654 +
            C33313 * C3657) *
               C1207) *
              C50763 * C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - C37279 * C1115 -
            C37280 * C50854) *
               C50763 * C2438) *
              C50784 * C489 +
          (((C37023 + C37024) * C1115 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C1109 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1114) +
            (C37025 + C37026) * C50854) *
               C50763 * C2436 +
           ((C37027 + C37028) * C1115 -
            ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
            (C37029 + C37030) * C50854) *
               C50763 * C2437 +
           ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
             C50979 * C3813) *
                C1115 -
            ((C37030 + C37029) * C1109 + (C37028 + C37027) * C1114) +
            (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
             C50979 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C490 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C1114 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C1109 -
            (C37455 + C37456) * C1115 - (C37457 + C37458) * C50854) *
               C50763 * C2436 +
           ((C37456 + C37455) * C1114 + (C37458 + C37457) * C1109 -
            (C37459 + C37460) * C1115 - (C37461 + C37462) * C50854) *
               C50763 * C2437 +
           ((C37460 + C37459) * C1114 + (C37462 + C37461) * C1109 -
            (C33316 * C21346 + C50979 * C21348 + C33315 * C3811 +
             C33313 * C3813) *
                C1115 -
            (C33316 * C21347 + C50979 * C21349 + C33315 * C3814 +
             C33313 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C1114 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C1109 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C1115 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C50854) *
              C50763 * C50904 * C1111 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C1115 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C1109 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C1114) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C50854) *
              C50763 * C50904 * C1112 +
          ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
            C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
               C1114 +
           (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
            C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
               C1109 -
           (C38911 * C6299 + C38907 * C6300 + C38910 * C1329 + C38906 * C1335 +
            C38909 * C963 + C38905 * C970 + C38908 * C301 + C38904 * C315) *
               C1115 -
           (C38911 * C6301 + C38907 * C6302 + C38910 * C1336 + C38906 * C1341 +
            C38909 * C971 + C38905 * C978 + C38908 * C316 + C38904 * C331) *
               C50854) *
              C50763 * C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
           C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
              C1209 +
          (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
           C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
              C1204 -
          (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
           C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
              C1210 -
          (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
           C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
              C1205 +
          (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
           C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
              C1211 +
          (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
           C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
              C1206 -
          (C38911 * C21346 + C38907 * C21348 + C38910 * C3811 + C38906 * C3813 +
           C38909 * C3353 + C38905 * C3356 + C38908 * C1213 + C38904 * C1217) *
              C1212 -
          (C38911 * C21347 + C38907 * C21349 + C38910 * C3814 + C38906 * C3817 +
           C38909 * C3357 + C38905 * C3362 + C38908 * C1218 + C38904 * C1225) *
              C1207) *
         C50763 * C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C1114 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C1109 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C1115 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C50854) *
              C50763 * C50904 * C50784 * C489 +
          ((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
            C38910 * C4744 + C38906 * C4752 + C38911 * C6711 + C38907 * C6713) *
               C1115 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C1109 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C1114) +
           (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
            C38910 * C4751 + C38906 * C4756 + C38911 * C6714 + C38907 * C6717) *
               C50854) *
              C50763 * C50904 * C50784 * C490 +
          ((C38908 * C497 + C38904 * C512 + C38909 * C1994 + C38905 * C2002 +
            C38910 * C5729 + C38906 * C5732 + C38911 * C7596 + C38907 * C7600) *
               C1114 +
           (C38908 * C513 + C38904 * C527 + C38909 * C2001 + C38905 * C2006 +
            C38910 * C5733 + C38906 * C5738 + C38911 * C7599 + C38907 * C7602) *
               C1109 -
           (C38911 * C23930 + C38907 * C23932 + C38910 * C6711 +
            C38906 * C6713 + C38909 * C4744 + C38905 * C4752 + C38908 * C1327 +
            C38904 * C1331) *
               C1115 -
           (C38911 * C23931 + C38907 * C23933 + C38910 * C6714 +
            C38906 * C6717 + C38909 * C4751 + C38905 * C4756 + C38908 * C1332 +
            C38904 * C1339) *
               C50854) *
              C50763 * C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
             (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C1114 + C36366 * C1109 - C37279 * C1115 -
             C37280 * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33555 + C33554) * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C1115 -
             ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C51045 +
          ((((C37023 + C37024) * C1115 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C1109 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1114) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C1115 -
             ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
              C50979 * C3813) *
                 C1115 -
             ((C37030 + C37029) * C1109 + (C37028 + C37027) * C1114) +
             (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33748 + C33749) * C1114 + (C33750 + C33751) * C1109 -
             (C34305 + C34304) * C1115 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C1114 + (C34306 + C34307) * C1109 -
             (C37031 + C37032) * C1115 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C1114 + (C37034 + C37033) * C1109 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C1115 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C1115 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
             (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
                C17339 +
            C34464 * C17340) *
               C50904 * C51036 +
           (((C33555 + C33554) * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C1115 -
             ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C51045 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C1115 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C1109 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1114) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C1115 -
             ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C1115 - (C34085 * C1109 + C34086 * C1114) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C51036 +
           (((C33748 + C33749) * C1114 + (C33750 + C33751) * C1109 -
             (C34305 + C34304) * C1115 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C1114 + (C33754 + C33755) * C1109 -
             (C34309 + C34308) * C1115 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C1114 + (C34089 + C34090) * C1109 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C1115 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C1114 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C1109 -
            (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
             C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
                C1115 -
            (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
             C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
                C50854) *
               C50763 * C50904 * C51036 +
           ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
             C38910 * C1328 + C38906 * C1333 + C38911 * C4743 +
             C38907 * C4750) *
                C1115 -
            ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
              C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                 C1109 +
             (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
              C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                 C1114) +
            (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
             C38910 * C1334 + C38906 * C1340 + C38911 * C4749 +
             C38907 * C4755) *
                C50854) *
               C50763 * C50904 * C50789) *
              C51045 +
          (((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
             C38910 * C4744 + C38906 * C4752 + C38911 * C6711 +
             C38907 * C6713) *
                C1115 -
            ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 +
              C38906 * C2006 + C38909 * C513 + C38905 * C527 + C38908 * C510 +
              C38904 * C526) *
                 C1109 +
             (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 +
              C38906 * C2002 + C38909 * C497 + C38905 * C512 + C38908 * C496 +
              C38904 * C511) *
                 C1114) +
            (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
             C38910 * C4751 + C38906 * C4756 + C38911 * C6714 +
             C38907 * C6717) *
                C50854) *
               C50763 * C50904 * C51036 +
           ((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C1114 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C1109 -
            (C38911 * C6712 + C38907 * C6715 + C38910 * C4743 + C38906 * C4750 +
             C38909 * C1328 + C38905 * C1333 + C38908 * C962 + C38904 * C968) *
                C1115 -
            (C38911 * C6716 + C38907 * C6718 + C38910 * C4749 + C38906 * C4755 +
             C38909 * C1334 + C38905 * C1340 + C38908 * C969 + C38904 * C977) *
                C50854) *
               C50763 * C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
               C1210 -
           (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
               C1205 +
           (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
               C1211 +
           (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
               C1206 -
           (C33316 * C3353 + C50979 * C3356 + C33315 * C1213 + C33313 * C1217) *
               C1212 -
           (C33316 * C3357 + C50979 * C3362 + C33315 * C1218 + C33313 * C1225) *
               C1207) *
              C17338 +
          ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
           (C33554 + C33555) * C1210 - (C33556 + C33557) * C1205 +
           (C33558 + C33559) * C1211 + (C33560 + C33561) * C1206 -
           (C33316 * C3354 + C50979 * C3358 + C33315 * C1214 + C33313 * C1219) *
               C1212 -
           (C33316 * C3359 + C50979 * C3363 + C33315 * C1220 + C33313 * C1226) *
               C1207) *
              C17339 +
          (C33366 * C1209 + C33367 * C1204 - C33912 * C1210 - C33913 * C1205 +
           (C33566 + C33567) * C1211 + (C33568 + C33569) * C1206 -
           (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 + C33313 * C1221) *
               C1212 -
           (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 + C33313 * C1227) *
               C1207) *
              C17340) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1115 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
            (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
               C17339 +
           C34464 * C17340) *
              C50904 * C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C17338 +
           ((C33563 + C33562) * C1115 -
            ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
            (C33565 + C33564) * C50854) *
               C17339 +
           ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
            (C33927 + C33928) * C50854) *
               C17340) *
              C50904 * C1112 +
          (C34464 * C17338 +
           ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
            (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
               C17339 +
           ((C33362 + C33363) * C1114 + (C33364 + C33365) * C1109 -
            (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                C1115 -
            (C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                C50854) *
               C17340) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - (C36358 + C36357) * C1115 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1115 -
            ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C1112 +
          (C34464 * C50763 * C2436 +
           ((C33563 + C33562) * C1114 + (C33565 + C33564) * C1109 -
            (C33567 + C33566) * C1115 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C1114 + (C33568 + C33569) * C1109 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C1115 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
           C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
              C50763 * C2436 +
          ((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
           (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
           (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
           (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
              C50763 * C2437 +
          (C36365 * C1209 + C36366 * C1204 - C37279 * C1210 - C37280 * C1205 +
           (C37290 + C37289) * C1211 + (C37292 + C37291) * C1206 -
           (C33316 * C21074 + C50979 * C21075 + C33315 * C3651 +
            C33313 * C3653) *
               C1212 -
           (C33316 * C21076 + C50979 * C21077 + C33315 * C3654 +
            C33313 * C3657) *
               C1207) *
              C50763 * C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C1114 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C1109 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C1115 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C50854) *
              C50763 * C50904 * C1111 +
          ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
            C38910 * C1328 + C38906 * C1333 + C38911 * C4743 + C38907 * C4750) *
               C1115 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C1109 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C1114) +
           (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
            C38910 * C1334 + C38906 * C1340 + C38911 * C4749 + C38907 * C4755) *
               C50854) *
              C50763 * C50904 * C1112 +
          ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
            C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
               C1114 +
           (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
            C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
               C1109 -
           (C38911 * C6299 + C38907 * C6300 + C38910 * C1329 + C38906 * C1335 +
            C38909 * C963 + C38905 * C970 + C38908 * C301 + C38904 * C315) *
               C1115 -
           (C38911 * C6301 + C38907 * C6302 + C38910 * C1336 + C38906 * C1341 +
            C38909 * C971 + C38905 * C978 + C38908 * C316 + C38904 * C331) *
               C50854) *
              C50763 * C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
           C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
              C1209 +
          (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
           C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
              C1204 -
          (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
           C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
              C1210 -
          (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
           C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
              C1205 +
          (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
           C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
              C1211 +
          (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
           C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
              C1206 -
          (C38911 * C21346 + C38907 * C21348 + C38910 * C3811 + C38906 * C3813 +
           C38909 * C3353 + C38905 * C3356 + C38908 * C1213 + C38904 * C1217) *
              C1212 -
          (C38911 * C21347 + C38907 * C21349 + C38910 * C3814 + C38906 * C3817 +
           C38909 * C3357 + C38905 * C3362 + C38908 * C1218 + C38904 * C1225) *
              C1207) *
         C50763 * C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C683 + C36366 * C51044 - C37279 * C684 -
             C37280 * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C684 -
             ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C1821 +
          ((((C37023 + C37024) * C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C684 -
             ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C37960 + C37959) * C684 - (C37950 * C51044 + C37949 * C683) +
             (C37962 + C37961) * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C683 + (C34306 + C34307) * C51044 -
             (C37031 + C37032) * C684 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C683 + (C37034 + C37033) * C51044 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C684 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C684 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
                C17339 +
            C33930 * C17340) *
               C50904 * C51036 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C684 -
             ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C1821 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C684 -
             ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C51036 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
             (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C683 + (C34089 + C34090) * C51044 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C684 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C683 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C51044 -
            (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
             C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
                C684 -
            (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
             C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
                C50854) *
               C50763 * C50904 * C51036 +
           ((C38908 * C299 + C38904 * C311 + C38909 * C962 + C38905 * C968 +
             C38910 * C1328 + C38906 * C1333 + C38911 * C4743 +
             C38907 * C4750) *
                C684 -
            ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
              C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                 C51044 +
             (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
              C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                 C683) +
            (C38908 * C312 + C38904 * C329 + C38909 * C969 + C38905 * C977 +
             C38910 * C1334 + C38906 * C1340 + C38911 * C4749 +
             C38907 * C4755) *
                C50854) *
               C50763 * C50904 * C50789) *
              C1821 +
          (((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
             C38910 * C4744 + C38906 * C4752 + C38911 * C6711 +
             C38907 * C6713) *
                C684 -
            ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 +
              C38906 * C2006 + C38909 * C513 + C38905 * C527 + C38908 * C510 +
              C38904 * C526) *
                 C51044 +
             (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 +
              C38906 * C2002 + C38909 * C497 + C38905 * C512 + C38908 * C496 +
              C38904 * C511) *
                 C683) +
            (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
             C38910 * C4751 + C38906 * C4756 + C38911 * C6714 +
             C38907 * C6717) *
                C50854) *
               C50763 * C50904 * C51036 +
           ((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C683 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C51044 -
            (C38911 * C6712 + C38907 * C6715 + C38910 * C4743 + C38906 * C4750 +
             C38909 * C1328 + C38905 * C1333 + C38908 * C962 + C38904 * C968) *
                C684 -
            (C38911 * C6716 + C38907 * C6718 + C38910 * C4749 + C38906 * C4755 +
             C38909 * C1334 + C38905 * C1340 + C38908 * C969 + C38904 * C977) *
                C50854) *
               C50763 * C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
            (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C683 + C36366 * C51044 - C37279 * C684 - C37280 * C50854) *
               C50763 * C2438) *
              C50784 * C51091 +
          (((C37023 + C37024) * C684 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51044 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C683) +
            (C37025 + C37026) * C50854) *
               C50763 * C2436 +
           ((C37027 + C37028) * C684 -
            ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
            (C37029 + C37030) * C50854) *
               C50763 * C2437 +
           ((C37960 + C37959) * C684 - (C37950 * C51044 + C37949 * C683) +
            (C37962 + C37961) * C50854) *
               C50763 * C2438) *
              C50784 * C51092 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C683 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C51044 -
            (C37455 + C37456) * C684 - (C37457 + C37458) * C50854) *
               C50763 * C2436 +
           ((C37456 + C37455) * C683 + (C37458 + C37457) * C51044 -
            (C37459 + C37460) * C684 - (C37461 + C37462) * C50854) *
               C50763 * C2437 +
           ((C37460 + C37459) * C683 + (C37462 + C37461) * C51044 -
            (C33316 * C21346 + C50979 * C21348 + C33315 * C3811 +
             C33313 * C3813) *
                C684 -
            (C33316 * C21347 + C50979 * C21349 + C33315 * C3814 +
             C33313 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C684 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
            (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
               C17339 +
           C33930 * C17340) *
              C50904 * C50784 * C51091 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C684 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51044 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C683) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C50854) *
               C17338 +
           ((C34304 + C34305) * C684 -
            ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
            (C34306 + C34307) * C50854) *
               C17339 +
           ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
            (C34310 + C34311) * C50854) *
               C17340) *
              C50904 * C50784 * C51092 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C683 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C51044 -
            (C33316 * C4744 + C50979 * C4752 + C33315 * C1327 +
             C33313 * C1331) *
                C684 -
            (C33316 * C4751 + C50979 * C4756 + C33315 * C1332 +
             C33313 * C1339) *
                C50854) *
               C17338 +
           ((C33756 + C33757) * C683 + (C33758 + C33759) * C51044 -
            (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
             C33313 * C1333) *
                C684 -
            (C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
             C33313 * C1340) *
                C50854) *
               C17339 +
           ((C33760 + C33761) * C683 + (C33762 + C33763) * C51044 -
            (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
             C33313 * C1335) *
                C684 -
            (C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
             C33313 * C1341) *
                C50854) *
               C17340) *
              C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C683 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C51044 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C684 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C50854) *
              C50763 * C50904 * C50784 * C51091 +
          ((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
            C38910 * C4744 + C38906 * C4752 + C38911 * C6711 + C38907 * C6713) *
               C684 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C51044 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C683) +
           (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
            C38910 * C4751 + C38906 * C4756 + C38911 * C6714 + C38907 * C6717) *
               C50854) *
              C50763 * C50904 * C50784 * C51092 +
          ((C38908 * C497 + C38904 * C512 + C38909 * C1994 + C38905 * C2002 +
            C38910 * C5729 + C38906 * C5732 + C38911 * C7596 + C38907 * C7600) *
               C683 +
           (C38908 * C513 + C38904 * C527 + C38909 * C2001 + C38905 * C2006 +
            C38910 * C5733 + C38906 * C5738 + C38911 * C7599 + C38907 * C7602) *
               C51044 -
           (C38911 * C23930 + C38907 * C23932 + C38910 * C6711 +
            C38906 * C6713 + C38909 * C4744 + C38905 * C4752 + C38908 * C1327 +
            C38904 * C1331) *
               C684 -
           (C38911 * C23931 + C38907 * C23933 + C38910 * C6714 +
            C38906 * C6717 + C38909 * C4751 + C38905 * C4756 + C38908 * C1332 +
            C38904 * C1339) *
               C50854) *
              C50763 * C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C33315 * C119 + C33313 * C126 + C33316 * C496 +
                  C50979 * C511) *
                     C118 +
                 (C33315 * C127 + C33313 * C140 + C33316 * C510 +
                  C50979 * C526) *
                     C50802) *
                    C17338 +
                ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) *
                    C17339 +
                C33374 * C17340) *
                   C50904 * C1111 -
               (C33375 * C17340 +
                ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) *
                    C17339 +
                ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) *
                    C17338) *
                   C50904 * C1112 +
               (C33374 * C17338 +
                ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) *
                    C17339 +
                ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) *
                    C17340) *
                   C50904 * C1113) *
                  C1821 +
              ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) *
                    C17338 +
                ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) *
                    C17339 +
                ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) *
                    C17340) *
                   C50904 * C1112 -
               (C34093 * C17340 +
                ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) *
                    C17339 +
                ((C33316 * C513 + C50979 * C527 + C33315 * C510 +
                  C33313 * C526) *
                     C50802 +
                 (C33316 * C497 + C50979 * C512 + C33315 * C496 +
                  C33313 * C511) *
                     C118) *
                    C17338) *
                   C50904 * C1111 -
               (((C33316 * C520 + C50979 * C531 + C33315 * C509 +
                  C33313 * C525) *
                     C50802 +
                 (C33316 * C501 + C50979 * C521 + C33315 * C495 +
                  C33313 * C508) *
                     C118) *
                    C17340 +
                ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) *
                    C17339 +
                C34093 * C17338) *
                   C50904 * C1113) *
                  C50882) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33315 * C119 + C33313 * C126 + C33316 * C496 +
                 C50979 * C511) *
                    C294 +
                (C33315 * C127 + C33313 * C140 + C33316 * C510 +
                 C50979 * C526) *
                    C289 -
                (C33316 * C961 + C50979 * C966 + C33315 * C297 +
                 C33313 * C307) *
                    C295 -
                (C33316 * C967 + C50979 * C976 + C33315 * C308 +
                 C33313 * C327) *
                    C290 +
                (C33315 * C298 + C33313 * C309 + C33316 * C1707 +
                 C50979 * C1711) *
                    C296 +
                (C33315 * C310 + C33313 * C328 + C33316 * C1712 +
                 C50979 * C1719) *
                    C291) *
                   C17338 +
               ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
                (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
                (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
                   C17339 +
               (C33366 * C294 + C33367 * C289 - C33912 * C295 - C33913 * C290 +
                (C33566 + C33567) * C296 + (C33568 + C33569) * C291) *
                   C17340) *
                  C50904 * C50784 * C1821 +
              (((C33315 * C961 + C33313 * C966 + C33316 * C1327 +
                 C50979 * C1331) *
                    C295 -
                ((C33316 * C513 + C50979 * C527 + C33315 * C510 +
                  C33313 * C526) *
                     C289 +
                 (C33316 * C497 + C50979 * C512 + C33315 * C496 +
                  C33313 * C511) *
                     C294) +
                (C33315 * C967 + C33313 * C976 + C33316 * C1332 +
                 C50979 * C1339) *
                    C290 -
                (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
                 C33313 * C1711) *
                    C296 -
                (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
                 C33313 * C1719) *
                    C291) *
                   C17338 +
               ((C34304 + C34305) * C295 -
                ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
                (C34306 + C34307) * C290 -
                (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
                 C33313 * C1713) *
                    C296 -
                (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
                 C33313 * C1720) *
                    C291) *
                   C17339 +
               ((C34308 + C34309) * C295 - (C34085 * C289 + C34086 * C294) +
                (C34310 + C34311) * C290 -
                (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
                 C33313 * C1715) *
                    C296 -
                (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
                 C33313 * C1721) *
                    C291) *
                   C17340) *
                  C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C17338 +
           ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
           C33374 * C17340) *
              C50904 * C50784 * C1987 -
          (C34093 * C17340 +
           ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
           ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                C50802 +
            (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                C118) *
               C17338) *
              C50904 * C50784 * C1988 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C118 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C50802) *
               C17338 +
           ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
           ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
              C50904 * C50784 * C1989 -
          (((C33316 * C5736 + C50979 * C5740 + C33315 * C1997 +
             C33313 * C2004) *
                C50802 +
            (C33316 * C5731 + C50979 * C5737 + C33315 * C1992 +
             C33313 * C1998) *
                C118) *
               C17340 +
           ((C33316 * C5735 + C50979 * C5739 + C33315 * C1999 +
             C33313 * C2005) *
                C50802 +
            (C33316 * C5730 + C50979 * C5734 + C33315 * C1993 +
             C33313 * C2000) *
                C118) *
               C17339 +
           ((C33316 * C5733 + C50979 * C5738 + C33315 * C2001 +
             C33313 * C2006) *
                C50802 +
            (C33316 * C5729 + C50979 * C5732 + C33315 * C1994 +
             C33313 * C2002) *
                C118) *
               C17338) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C1111 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C1112 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C1112 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C1111 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - C37279 * C295 - C37280 * C290 +
            (C37290 + C37289) * C296 + (C37292 + C37291) * C291) *
               C50763 * C2438) *
              C50784 * C1821 +
          (((C37023 + C37024) * C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
               C50763 * C2436 +
           ((C37027 + C37028) * C295 -
            ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
            (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
            (C37961 + C37962) * C291) *
               C50763 * C2437 +
           ((C37960 + C37959) * C295 - (C37950 * C289 + C37949 * C294) +
            (C37962 + C37961) * C290 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C296 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C291) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
               C2437 +
           (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
              C50784 * C1987 -
          ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
           ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
               C2437 +
           ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                C50802 +
            (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                C118) *
               C50763 * C2436) *
              C50784 * C1988 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C118 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C50802) *
               C50763 * C2436 +
           ((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C50763 *
               C2437 +
           ((C37460 + C37459) * C118 + (C37462 + C37461) * C50802) * C50763 *
               C2438) *
              C50784 * C1989 -
          (((C33316 * C23016 + C50979 * C23017 + C33315 * C4747 +
             C33313 * C4754) *
                C50802 +
            (C33316 * C23014 + C50979 * C23015 + C33315 * C4742 +
             C33313 * C4748) *
                C118) *
               C50763 * C2438 +
           ((C33316 * C6714 + C50979 * C6717 + C33315 * C4751 +
             C33313 * C4756) *
                C50802 +
            (C33316 * C6711 + C50979 * C6713 + C33315 * C4744 +
             C33313 * C4752) *
                C118) *
               C50763 * C2437 +
           ((C33316 * C5733 + C50979 * C5738 + C33315 * C2001 +
             C33313 * C2006) *
                C50802 +
            (C33316 * C5729 + C50979 * C5732 + C33315 * C1994 +
             C33313 * C2002) *
                C118) *
               C50763 * C2436) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C118 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C50802) *
               C50763 * C50904 * C1111 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C50802 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C118) *
               C50763 * C50904 * C1112 +
           ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
             C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
                C118 +
            (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
             C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
                C50802) *
               C50763 * C50904 * C1113) *
              C1821 +
          (((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C118 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C50802) *
               C50763 * C50904 * C1112 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C50802 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C118) *
               C50763 * C50904 * C1111 -
           ((C38911 * C5736 + C38907 * C5740 + C38910 * C1997 + C38906 * C2004 +
             C38909 * C517 + C38905 * C529 + C38908 * C505 + C38904 * C523) *
                C50802 +
            (C38911 * C5731 + C38907 * C5737 + C38910 * C1992 + C38906 * C1998 +
             C38909 * C499 + C38905 * C516 + C38908 * C493 + C38904 * C504) *
                C118) *
               C50763 * C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C294 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C289 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C295 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C290 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C296 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C291) *
              C50763 * C50904 * C50784 * C1821 +
          ((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
            C38910 * C4744 + C38906 * C4752 + C38911 * C6711 + C38907 * C6713) *
               C295 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C289 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C294) +
           (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
            C38910 * C4751 + C38906 * C4756 + C38911 * C6714 + C38907 * C6717) *
               C290 -
           (C38911 * C23014 + C38907 * C23015 + C38910 * C4742 +
            C38906 * C4748 + C38909 * C2803 + C38905 * C2806 + C38908 * C1707 +
            C38904 * C1711) *
               C296 -
           (C38911 * C23016 + C38907 * C23017 + C38910 * C4747 +
            C38906 * C4754 + C38909 * C2807 + C38905 * C2812 + C38908 * C1712 +
            C38904 * C1719) *
               C291) *
              C50763 * C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C118 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C50802) *
              C50763 * C50904 * C50784 * C1987 -
          ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
            C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
               C50802 +
           (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
            C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
               C118) *
              C50763 * C50904 * C50784 * C1988 +
          ((C38908 * C497 + C38904 * C512 + C38909 * C1994 + C38905 * C2002 +
            C38910 * C5729 + C38906 * C5732 + C38911 * C7596 + C38907 * C7600) *
               C118 +
           (C38908 * C513 + C38904 * C527 + C38909 * C2001 + C38905 * C2006 +
            C38910 * C5733 + C38906 * C5738 + C38911 * C7599 + C38907 * C7602) *
               C50802) *
              C50763 * C50904 * C50784 * C1989 -
          ((C38911 * C40285 + C38907 * C40287 + C38910 * C7599 +
            C38906 * C7602 + C38909 * C5733 + C38905 * C5738 + C38908 * C2001 +
            C38904 * C2006) *
               C50802 +
           (C38911 * C40284 + C38907 * C40286 + C38910 * C7596 +
            C38906 * C7600 + C38909 * C5729 + C38905 * C5732 + C38908 * C1994 +
            C38904 * C2002) *
               C118) *
              C50763 * C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C51036 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C50789) *
              C51091 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C50789 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C51036) *
              C51092 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C2436 +
            ((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C50763 *
                C2437 +
            ((C37460 + C37459) * C118 + (C37462 + C37461) * C50802) * C50763 *
                C2438) *
               C51036 -
           (((C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50802 +
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
              C33313 * C1340) *
                 C50802 +
             (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
              C33313 * C1333) *
                 C118) *
                C50763 * C2437 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C50763 *
                C2436) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C51036 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C50789) *
              C51091 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C50789 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C51036) *
              C51092 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C17338 +
            ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
            ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
               C50904 * C51036 -
           (((C33316 * C1995 + C50979 * C2003 + C33315 * C519 + C33313 * C530) *
                 C50802 +
             (C33316 * C1991 + C50979 * C1996 + C33315 * C500 + C33313 * C518) *
                 C118) *
                C17340 +
            ((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C17339 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C17338) *
               C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C118 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C50802) *
               C50763 * C50904 * C51036 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C50802 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C118) *
               C50763 * C50904 * C50789) *
              C51091 +
          (((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C118 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C50802) *
               C50763 * C50904 * C50789 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C50802 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C118) *
               C50763 * C50904 * C51036) *
              C51092 +
          (((C38908 * C497 + C38904 * C512 + C38909 * C1994 + C38905 * C2002 +
             C38910 * C5729 + C38906 * C5732 + C38911 * C7596 +
             C38907 * C7600) *
                C118 +
            (C38908 * C513 + C38904 * C527 + C38909 * C2001 + C38905 * C2006 +
             C38910 * C5733 + C38906 * C5738 + C38911 * C7599 +
             C38907 * C7602) *
                C50802) *
               C50763 * C50904 * C51036 -
           ((C38911 * C7597 + C38907 * C7601 + C38910 * C5735 + C38906 * C5739 +
             C38909 * C1999 + C38905 * C2005 + C38908 * C515 + C38904 * C528) *
                C50802 +
            (C38911 * C7595 + C38907 * C7598 + C38910 * C5730 + C38906 * C5734 +
             C38909 * C1993 + C38905 * C2000 + C38908 * C498 + C38904 * C514) *
                C118) *
               C50763 * C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - C33912 * C295 - C33913 * C290 +
            (C33566 + C33567) * C296 + (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C50784 * C1821 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C290 -
            (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
             C33313 * C1711) *
                C296 -
            (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
             C33313 * C1719) *
                C291) *
               C17338 +
           ((C34304 + C34305) * C295 -
            ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
            (C34306 + C34307) * C290 -
            (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
             C33313 * C1713) *
                C296 -
            (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
             C33313 * C1720) *
                C291) *
               C17339 +
           ((C34308 + C34309) * C295 - (C34085 * C289 + C34086 * C294) +
            (C34310 + C34311) * C290 -
            (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
             C33313 * C1715) *
                C296 -
            (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
             C33313 * C1721) *
                C291) *
               C17340) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C1111 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C1112 +
           (C33374 * C17338 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
            ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
               C50904 * C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C1112 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C1111 -
           (((C33316 * C520 + C50979 * C531 + C33315 * C509 + C33313 * C525) *
                 C50802 +
             (C33316 * C501 + C50979 * C521 + C33315 * C495 + C33313 * C508) *
                 C118) *
                C17340 +
            ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C17339 +
            C34093 * C17338) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C1111 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C1112 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C1112 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C1111 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - C37279 * C295 - C37280 * C290 +
            (C37290 + C37289) * C296 + (C37292 + C37291) * C291) *
               C50763 * C2438) *
              C50784 * C1821 +
          (((C37023 + C37024) * C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
               C50763 * C2436 +
           ((C37027 + C37028) * C295 -
            ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
            (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
            (C37961 + C37962) * C291) *
               C50763 * C2437 +
           ((C37960 + C37959) * C295 - (C37950 * C289 + C37949 * C294) +
            (C37962 + C37961) * C290 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C296 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C291) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
             C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
                C118 +
            (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
             C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
                C50802) *
               C50763 * C50904 * C1111 -
           ((C38911 * C1999 + C38907 * C2005 + C38910 * C515 + C38906 * C528 +
             C38909 * C503 + C38905 * C522 + C38908 * C129 + C38904 * C141) *
                C50802 +
            (C38911 * C1993 + C38907 * C2000 + C38910 * C498 + C38906 * C514 +
             C38909 * C492 + C38905 * C502 + C38908 * C120 + C38904 * C128) *
                C118) *
               C50763 * C50904 * C1112 +
           ((C38908 * C121 + C38904 * C130 + C38909 * C493 + C38905 * C504 +
             C38910 * C499 + C38906 * C516 + C38911 * C1992 + C38907 * C1998) *
                C118 +
            (C38908 * C131 + C38904 * C142 + C38909 * C505 + C38905 * C523 +
             C38910 * C517 + C38906 * C529 + C38911 * C1997 + C38907 * C2004) *
                C50802) *
               C50763 * C50904 * C1113) *
              C1821 +
          (((C38908 * C492 + C38904 * C502 + C38909 * C498 + C38905 * C514 +
             C38910 * C1993 + C38906 * C2000 + C38911 * C5730 +
             C38907 * C5734) *
                C118 +
            (C38908 * C503 + C38904 * C522 + C38909 * C515 + C38905 * C528 +
             C38910 * C1999 + C38906 * C2005 + C38911 * C5735 +
             C38907 * C5739) *
                C50802) *
               C50763 * C50904 * C1112 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C50802 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C118) *
               C50763 * C50904 * C1111 -
           ((C38911 * C5736 + C38907 * C5740 + C38910 * C1997 + C38906 * C2004 +
             C38909 * C517 + C38905 * C529 + C38908 * C505 + C38904 * C523) *
                C50802 +
            (C38911 * C5731 + C38907 * C5737 + C38910 * C1992 + C38906 * C1998 +
             C38909 * C499 + C38905 * C516 + C38908 * C493 + C38904 * C504) *
                C118) *
               C50763 * C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38908 * C119 + C38904 * C126 + C38909 * C496 + C38905 * C511 +
            C38910 * C497 + C38906 * C512 + C38911 * C1994 + C38907 * C2002) *
               C294 +
           (C38908 * C127 + C38904 * C140 + C38909 * C510 + C38905 * C526 +
            C38910 * C513 + C38906 * C527 + C38911 * C2001 + C38907 * C2006) *
               C289 -
           (C38911 * C4744 + C38907 * C4752 + C38910 * C1327 + C38906 * C1331 +
            C38909 * C961 + C38905 * C966 + C38908 * C297 + C38904 * C307) *
               C295 -
           (C38911 * C4751 + C38907 * C4756 + C38910 * C1332 + C38906 * C1339 +
            C38909 * C967 + C38905 * C976 + C38908 * C308 + C38904 * C327) *
               C290 +
           (C38908 * C298 + C38904 * C309 + C38909 * C1707 + C38905 * C1711 +
            C38910 * C2803 + C38906 * C2806 + C38911 * C4742 + C38907 * C4748) *
               C296 +
           (C38908 * C310 + C38904 * C328 + C38909 * C1712 + C38905 * C1719 +
            C38910 * C2807 + C38906 * C2812 + C38911 * C4747 + C38907 * C4754) *
               C291) *
              C50763 * C50904 * C50784 * C1821 +
          ((C38908 * C961 + C38904 * C966 + C38909 * C1327 + C38905 * C1331 +
            C38910 * C4744 + C38906 * C4752 + C38911 * C6711 + C38907 * C6713) *
               C295 -
           ((C38911 * C5733 + C38907 * C5738 + C38910 * C2001 + C38906 * C2006 +
             C38909 * C513 + C38905 * C527 + C38908 * C510 + C38904 * C526) *
                C289 +
            (C38911 * C5729 + C38907 * C5732 + C38910 * C1994 + C38906 * C2002 +
             C38909 * C497 + C38905 * C512 + C38908 * C496 + C38904 * C511) *
                C294) +
           (C38908 * C967 + C38904 * C976 + C38909 * C1332 + C38905 * C1339 +
            C38910 * C4751 + C38906 * C4756 + C38911 * C6714 + C38907 * C6717) *
               C290 -
           (C38911 * C23014 + C38907 * C23015 + C38910 * C4742 +
            C38906 * C4748 + C38909 * C2803 + C38905 * C2806 + C38908 * C1707 +
            C38904 * C1711) *
               C296 -
           (C38911 * C23016 + C38907 * C23017 + C38910 * C4747 +
            C38906 * C4754 + C38909 * C2807 + C38905 * C2812 + C38908 * C1712 +
            C38904 * C1719) *
               C291) *
              C50763 * C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C683 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51044 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C684 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C50854) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C683 +
                     (C44274 + C44275 + C44276) * C51044 -
                     (C44459 + C44460 + C44461) * C684 -
                     (C44462 + C44463 + C44464) * C50854) *
                        C50768) *
                       C50904 * C51087 +
                   (((C44461 + C44460 + C44459) * C684 -
                     ((C44276 + C44275 + C44274) * C51044 +
                      (C44273 + C44272 + C44271) * C683) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C51029 +
                    ((C44811 + C44812 + C44813) * C684 -
                     ((C44277 + C44278 + C44279) * C51044 +
                      (C44280 + C44281 + C44282) * C683) +
                     (C44814 + C44815 + C44816) * C50854) *
                        C50768) *
                       C50904 * C51088 +
                   (((C44282 + C44281 + C44280) * C683 +
                     (C44279 + C44278 + C44277) * C51044 -
                     (C44813 + C44812 + C44811) * C684 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C51029 +
                    ((C44283 + C44284 + C44285) * C683 +
                     (C44286 + C44287 + C44288) * C51044 -
                     (C44233 * C1330 + C44230 * C1337 + C44232 * C964 +
                      C51096 * C972 + C44231 * C303 + C51095 * C319) *
                         C684 -
                     (C44233 * C1338 + C44230 * C1342 + C44232 * C973 +
                      C51096 * C979 + C44231 * C320 + C51095 * C333) *
                         C50854) *
                        C50768) *
                       C50904 * C682) *
                  C50818) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C683 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C51044 -
                      (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                       C51096 * C966 + C44231 * C297 + C51095 * C307) *
                          C684 -
                      (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                       C51096 * C976 + C44231 * C308 + C51095 * C327) *
                          C50854) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C683 +
                      (C44274 + C44275 + C44276) * C51044 -
                      (C44459 + C44460 + C44461) * C684 -
                      (C44462 + C44463 + C44464) * C50854) *
                         C50768) *
                        C50904 * C292 +
                    (((C44461 + C44460 + C44459) * C684 -
                      ((C44276 + C44275 + C44274) * C51044 +
                       (C44273 + C44272 + C44271) * C683) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C51029 +
                     ((C44811 + C44812 + C44813) * C684 -
                      ((C44277 + C44278 + C44279) * C51044 +
                       (C44280 + C44281 + C44282) * C683) +
                      (C44814 + C44815 + C44816) * C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C51045 +
                   ((((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                       C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                          C684 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C51044 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C683) +
                      (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                       C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                          C50854) *
                         C51029 +
                     ((C45187 + C45188 + C45189) * C684 -
                      ((C44646 + C44645 + C44644) * C51044 +
                       (C44643 + C44642 + C44641) * C683) +
                      (C45190 + C45191 + C45192) * C50854) *
                         C50768) *
                        C50904 * C292 +
                    (((C44641 + C44642 + C44643) * C683 +
                      (C44644 + C44645 + C44646) * C51044 -
                      (C45189 + C45188 + C45187) * C684 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C683 +
                      (C44978 + C44979 + C44980) * C51044 -
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C684 -
                      (C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C295 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C290 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C296 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C291) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C294 +
                     (C44274 + C44275 + C44276) * C289 -
                     (C44459 + C44460 + C44461) * C295 -
                     (C44462 + C44463 + C44464) * C290 +
                     (C44465 + C44466 + C44467) * C296 +
                     (C44468 + C44469 + C44470) * C291) *
                        C50768) *
                       C50904 * C292 +
                   (((C44461 + C44460 + C44459) * C295 -
                     ((C44276 + C44275 + C44274) * C289 +
                      (C44273 + C44272 + C44271) * C294) +
                     (C44464 + C44463 + C44462) * C290 -
                     (C44467 + C44466 + C44465) * C296 -
                     (C44470 + C44469 + C44468) * C291) *
                        C51029 +
                    ((C44231 * C301 + C51095 * C315 + C44232 * C963 +
                      C51096 * C970 + C44233 * C1329 + C44230 * C1335) *
                         C295 -
                     ((C44277 + C44278 + C44279) * C289 +
                      (C44280 + C44281 + C44282) * C294) +
                     (C44231 * C316 + C51095 * C331 + C44232 * C971 +
                      C51096 * C978 + C44233 * C1336 + C44230 * C1341) *
                         C290 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C296 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C291) *
                        C50768) *
                       C50904 * C50789) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C118 +
                     (C44274 + C44275 + C44276) * C50802) *
                        C50768) *
                       C50904 * C112 -
                   (((C44277 + C44278 + C44279) * C50802 +
                     (C44280 + C44281 + C44282) * C118) *
                        C50768 +
                    ((C44276 + C44275 + C44274) * C50802 +
                     (C44273 + C44272 + C44271) * C118) *
                        C51029) *
                       C50904 * C113 +
                   (((C44282 + C44281 + C44280) * C118 +
                     (C44279 + C44278 + C44277) * C50802) *
                        C51029 +
                    ((C44283 + C44284 + C44285) * C118 +
                     (C44286 + C44287 + C44288) * C50802) *
                        C50768) *
                       C50904 * C114 -
                   (((C44233 * C520 + C44230 * C531 + C44232 * C509 +
                      C51096 * C525 + C44231 * C134 + C51095 * C144) *
                         C50802 +
                     (C44233 * C501 + C44230 * C521 + C44232 * C495 +
                      C51096 * C508 + C44231 * C123 + C51095 * C135) *
                         C118) *
                        C50768 +
                    ((C44288 + C44287 + C44286) * C50802 +
                     (C44285 + C44284 + C44283) * C118) *
                        C51029) *
                       C50904 * C115) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C118 +
                      (C44274 + C44275 + C44276) * C50802) *
                         C50768) *
                        C50904 * C292 -
                    (((C44277 + C44278 + C44279) * C50802 +
                      (C44280 + C44281 + C44282) * C118) *
                         C50768 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C51029) *
                        C50904 * C50789) *
                       C489 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C51029 +
                     ((C44231 * C493 + C51095 * C504 + C44232 * C499 +
                       C51096 * C516 + C44233 * C1992 + C44230 * C1998) *
                          C118 +
                      (C44231 * C505 + C51095 * C523 + C44232 * C517 +
                       C51096 * C529 + C44233 * C1997 + C44230 * C2004) *
                          C50802) *
                         C50768) *
                        C50904 * C50789 -
                    (((C44646 + C44645 + C44644) * C50802 +
                      (C44643 + C44642 + C44641) * C118) *
                         C50768 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C51029) *
                        C50904 * C292) *
                       C490 +
                   ((((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                       C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                          C118 +
                      (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                       C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                          C50802) *
                         C51029 +
                     ((C44647 + C44648 + C44649) * C118 +
                      (C44650 + C44651 + C44652) * C50802) *
                         C50768) *
                        C50904 * C292 -
                    (((C44233 * C5736 + C44230 * C5740 + C44232 * C1997 +
                       C51096 * C2004 + C44231 * C517 + C51095 * C529) *
                          C50802 +
                      (C44233 * C5731 + C44230 * C5737 + C44232 * C1992 +
                       C51096 * C1998 + C44231 * C499 + C51095 * C516) *
                          C118) *
                         C50768 +
                     ((C44652 + C44651 + C44650) * C50802 +
                      (C44649 + C44648 + C44647) * C118) *
                         C51029) *
                        C50904 * C50789) *
                       C491)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C118 +
                      (C44274 + C44275 + C44276) * C50802) *
                         C50768) *
                        C50904 * C51087 -
                    (((C44277 + C44278 + C44279) * C50802 +
                      (C44280 + C44281 + C44282) * C118) *
                         C50768 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C51029) *
                        C50904 * C51088 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C51029 +
                     ((C44283 + C44284 + C44285) * C118 +
                      (C44286 + C44287 + C44288) * C50802) *
                         C50768) *
                        C50904 * C682) *
                       C51045 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C118 +
                      (C44978 + C44979 + C44980) * C50802) *
                         C50768) *
                        C50904 * C51088 -
                    (((C44646 + C44645 + C44644) * C50802 +
                      (C44643 + C44642 + C44641) * C118) *
                         C50768 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C51029) *
                        C50904 * C51087 -
                    (((C44233 * C1995 + C44230 * C2003 + C44232 * C519 +
                       C51096 * C530 + C44231 * C507 + C51095 * C524) *
                          C50802 +
                      (C44233 * C1991 + C44230 * C1996 + C44232 * C500 +
                       C51096 * C518 + C44231 * C494 + C51095 * C506) *
                          C118) *
                         C50768 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C51029) *
                        C50904 * C682) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C118 +
                     (C44274 + C44275 + C44276) * C50802) *
                        C50768) *
                       C50904 * C112 -
                   (((C44277 + C44278 + C44279) * C50802 +
                     (C44280 + C44281 + C44282) * C118) *
                        C50768 +
                    ((C44276 + C44275 + C44274) * C50802 +
                     (C44273 + C44272 + C44271) * C118) *
                        C51029) *
                       C50904 * C113 +
                   (((C44282 + C44281 + C44280) * C118 +
                     (C44279 + C44278 + C44277) * C50802) *
                        C51029 +
                    ((C44283 + C44284 + C44285) * C118 +
                     (C44286 + C44287 + C44288) * C50802) *
                        C50768) *
                       C50904 * C114 -
                   (((C44233 * C520 + C44230 * C531 + C44232 * C509 +
                      C51096 * C525 + C44231 * C134 + C51095 * C144) *
                         C50802 +
                     (C44233 * C501 + C44230 * C521 + C44232 * C495 +
                      C51096 * C508 + C44231 * C123 + C51095 * C135) *
                         C118) *
                        C50768 +
                    ((C44288 + C44287 + C44286) * C50802 +
                     (C44285 + C44284 + C44283) * C118) *
                        C51029) *
                       C50904 * C115) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C295 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C290 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C296 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C291) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C294 +
                     (C44274 + C44275 + C44276) * C289 -
                     (C44459 + C44460 + C44461) * C295 -
                     (C44462 + C44463 + C44464) * C290 +
                     (C44465 + C44466 + C44467) * C296 +
                     (C44468 + C44469 + C44470) * C291) *
                        C50768) *
                       C50904 * C292 +
                   (((C44461 + C44460 + C44459) * C295 -
                     ((C44276 + C44275 + C44274) * C289 +
                      (C44273 + C44272 + C44271) * C294) +
                     (C44464 + C44463 + C44462) * C290 -
                     (C44467 + C44466 + C44465) * C296 -
                     (C44470 + C44469 + C44468) * C291) *
                        C51029 +
                    ((C44231 * C301 + C51095 * C315 + C44232 * C963 +
                      C51096 * C970 + C44233 * C1329 + C44230 * C1335) *
                         C295 -
                     ((C44277 + C44278 + C44279) * C289 +
                      (C44280 + C44281 + C44282) * C294) +
                     (C44231 * C316 + C51095 * C331 + C44232 * C971 +
                      C51096 * C978 + C44233 * C1336 + C44230 * C1341) *
                         C290 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C296 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C291) *
                        C50768) *
                       C50904 * C50789) *
                  C50818) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1446 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51089 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C1447 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C51090 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C1448 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C1443) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C1446 +
                     (C44274 + C44275 + C44276) * C51089 -
                     (C44459 + C44460 + C44461) * C1447 -
                     (C44462 + C44463 + C44464) * C51090 +
                     (C44465 + C44466 + C44467) * C1448 +
                     (C44468 + C44469 + C44470) * C1443) *
                        C50768) *
                       C50904 * C51036 +
                   (((C44461 + C44460 + C44459) * C1447 -
                     ((C44276 + C44275 + C44274) * C51089 +
                      (C44273 + C44272 + C44271) * C1446) +
                     (C44464 + C44463 + C44462) * C51090 -
                     (C44467 + C44466 + C44465) * C1448 -
                     (C44470 + C44469 + C44468) * C1443) *
                        C51029 +
                    ((C44811 + C44812 + C44813) * C1447 -
                     ((C44277 + C44278 + C44279) * C51089 +
                      (C44280 + C44281 + C44282) * C1446) +
                     (C44814 + C44815 + C44816) * C51090 -
                     (C44233 * C2805 + C44230 * C2811 + C44232 * C1709 +
                      C51096 * C1715 + C44231 * C302 + C51095 * C317) *
                         C1448 -
                     (C44233 * C2810 + C44230 * C2814 + C44232 * C1716 +
                      C51096 * C1721 + C44231 * C318 + C51095 * C332) *
                         C1443) *
                        C50768) *
                       C50904 * C50789) *
                  C50818) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1446 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51089 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C1447 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C51090 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C1448 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C1443) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C1446 +
                     (C44274 + C44275 + C44276) * C51089 -
                     (C44459 + C44460 + C44461) * C1447 -
                     (C44462 + C44463 + C44464) * C51090 +
                     (C44465 + C44466 + C44467) * C1448 +
                     (C44468 + C44469 + C44470) * C1443) *
                        C50768) *
                       C50904 * C50784 * C51045 +
                   (((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                      C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                         C1447 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C51089 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C1446) +
                     (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                      C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                         C51090 -
                     (C44233 * C4742 + C44230 * C4748 + C44232 * C2803 +
                      C51096 * C2806 + C44231 * C1707 + C51095 * C1711) *
                         C1448 -
                     (C44233 * C4747 + C44230 * C4754 + C44232 * C2807 +
                      C51096 * C2812 + C44231 * C1712 + C51095 * C1719) *
                         C1443) *
                        C51029 +
                    ((C45187 + C45188 + C45189) * C1447 -
                     ((C44646 + C44645 + C44644) * C51089 +
                      (C44643 + C44642 + C44641) * C1446) +
                     (C45190 + C45191 + C45192) * C51090 -
                     (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                      C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                         C1448 -
                     (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                      C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                         C1443) *
                        C50768) *
                       C50904 * C50784 * C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                     C51096 * C511 + C44233 * C497 + C44230 * C512) *
                        C1209 +
                    (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                     C51096 * C526 + C44233 * C513 + C44230 * C527) *
                        C1204 -
                    (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                     C51096 * C966 + C44231 * C297 + C51095 * C307) *
                        C1210 -
                    (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                     C51096 * C976 + C44231 * C308 + C51095 * C327) *
                        C1205 +
                    (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                     C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                        C1211 +
                    (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                     C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                        C1206 -
                    (C44233 * C3811 + C44230 * C3813 + C44232 * C3353 +
                     C51096 * C3356 + C44231 * C1213 + C51095 * C1217) *
                        C1212 -
                    (C44233 * C3814 + C44230 * C3817 + C44232 * C3357 +
                     C51096 * C3362 + C44231 * C1218 + C51095 * C1225) *
                        C1207) *
                       C51029 +
                   ((C44271 + C44272 + C44273) * C1209 +
                    (C44274 + C44275 + C44276) * C1204 -
                    (C44459 + C44460 + C44461) * C1210 -
                    (C44462 + C44463 + C44464) * C1205 +
                    (C44465 + C44466 + C44467) * C1211 +
                    (C44468 + C44469 + C44470) * C1206 -
                    (C44233 * C3812 + C44230 * C3815 + C44232 * C3354 +
                     C51096 * C3358 + C44231 * C1214 + C51095 * C1219) *
                        C1212 -
                    (C44233 * C3816 + C44230 * C3818 + C44232 * C3359 +
                     C51096 * C3363 + C44231 * C1220 + C51095 * C1226) *
                        C1207) *
                       C50768) *
                  C50904 * C50784 * C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C1115 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C50854) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C1114 +
                     (C44274 + C44275 + C44276) * C1109 -
                     (C44459 + C44460 + C44461) * C1115 -
                     (C44462 + C44463 + C44464) * C50854) *
                        C50768) *
                       C50904 * C1111 +
                   (((C44461 + C44460 + C44459) * C1115 -
                     ((C44276 + C44275 + C44274) * C1109 +
                      (C44273 + C44272 + C44271) * C1114) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C51029 +
                    ((C44811 + C44812 + C44813) * C1115 -
                     ((C44277 + C44278 + C44279) * C1109 +
                      (C44280 + C44281 + C44282) * C1114) +
                     (C44814 + C44815 + C44816) * C50854) *
                        C50768) *
                       C50904 * C1112 +
                   (((C44282 + C44281 + C44280) * C1114 +
                     (C44279 + C44278 + C44277) * C1109 -
                     (C44813 + C44812 + C44811) * C1115 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C51029 +
                    ((C44283 + C44284 + C44285) * C1114 +
                     (C44286 + C44287 + C44288) * C1109 -
                     (C44233 * C1330 + C44230 * C1337 + C44232 * C964 +
                      C51096 * C972 + C44231 * C303 + C51095 * C319) *
                         C1115 -
                     (C44233 * C1338 + C44230 * C1342 + C44232 * C973 +
                      C51096 * C979 + C44231 * C320 + C51095 * C333) *
                         C50854) *
                        C50768) *
                       C50904 * C1113) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C1115 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C50854) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C1114 +
                     (C44274 + C44275 + C44276) * C1109 -
                     (C44459 + C44460 + C44461) * C1115 -
                     (C44462 + C44463 + C44464) * C50854) *
                        C50768) *
                       C50904 * C50784 * C489 +
                   (((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                      C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                         C1115 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C1109 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C1114) +
                     (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                      C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                         C50854) *
                        C51029 +
                    ((C45187 + C45188 + C45189) * C1115 -
                     ((C44646 + C44645 + C44644) * C1109 +
                      (C44643 + C44642 + C44641) * C1114) +
                     (C45190 + C45191 + C45192) * C50854) *
                        C50768) *
                       C50904 * C50784 * C490 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C1114 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C1109 -
                     (C44233 * C6711 + C44230 * C6713 + C44232 * C4744 +
                      C51096 * C4752 + C44231 * C1327 + C51095 * C1331) *
                         C1115 -
                     (C44233 * C6714 + C44230 * C6717 + C44232 * C4751 +
                      C51096 * C4756 + C44231 * C1332 + C51095 * C1339) *
                         C50854) *
                        C51029 +
                    ((C44647 + C44648 + C44649) * C1114 +
                     (C44650 + C44651 + C44652) * C1109 -
                     (C44233 * C6712 + C44230 * C6715 + C44232 * C4743 +
                      C51096 * C4750 + C44231 * C1328 + C51095 * C1333) *
                         C1115 -
                     (C44233 * C6716 + C44230 * C6718 + C44232 * C4749 +
                      C51096 * C4755 + C44231 * C1334 + C51095 * C1340) *
                         C50854) *
                        C50768) *
                       C50904 * C50784 * C491)) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C1114 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C1109 -
                      (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                       C51096 * C966 + C44231 * C297 + C51095 * C307) *
                          C1115 -
                      (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                       C51096 * C976 + C44231 * C308 + C51095 * C327) *
                          C50854) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C1114 +
                      (C44274 + C44275 + C44276) * C1109 -
                      (C44459 + C44460 + C44461) * C1115 -
                      (C44462 + C44463 + C44464) * C50854) *
                         C50768) *
                        C50904 * C51036 +
                    (((C44461 + C44460 + C44459) * C1115 -
                      ((C44276 + C44275 + C44274) * C1109 +
                       (C44273 + C44272 + C44271) * C1114) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C51029 +
                     ((C44811 + C44812 + C44813) * C1115 -
                      ((C44277 + C44278 + C44279) * C1109 +
                       (C44280 + C44281 + C44282) * C1114) +
                      (C44814 + C44815 + C44816) * C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C51045 +
                   ((((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                       C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                          C1115 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C1109 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C1114) +
                      (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                       C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                          C50854) *
                         C51029 +
                     ((C45187 + C45188 + C45189) * C1115 -
                      ((C44646 + C44645 + C44644) * C1109 +
                       (C44643 + C44642 + C44641) * C1114) +
                      (C45190 + C45191 + C45192) * C50854) *
                         C50768) *
                        C50904 * C51036 +
                    (((C44641 + C44642 + C44643) * C1114 +
                      (C44644 + C44645 + C44646) * C1109 -
                      (C45189 + C45188 + C45187) * C1115 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C1114 +
                      (C44978 + C44979 + C44980) * C1109 -
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C1115 -
                      (C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C1114 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C1109 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C1115 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C50854) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C1114 +
                     (C44274 + C44275 + C44276) * C1109 -
                     (C44459 + C44460 + C44461) * C1115 -
                     (C44462 + C44463 + C44464) * C50854) *
                        C50768) *
                       C50904 * C1111 +
                   (((C44461 + C44460 + C44459) * C1115 -
                     ((C44276 + C44275 + C44274) * C1109 +
                      (C44273 + C44272 + C44271) * C1114) +
                     (C44464 + C44463 + C44462) * C50854) *
                        C51029 +
                    ((C44811 + C44812 + C44813) * C1115 -
                     ((C44277 + C44278 + C44279) * C1109 +
                      (C44280 + C44281 + C44282) * C1114) +
                     (C44814 + C44815 + C44816) * C50854) *
                        C50768) *
                       C50904 * C1112 +
                   (((C44282 + C44281 + C44280) * C1114 +
                     (C44279 + C44278 + C44277) * C1109 -
                     (C44813 + C44812 + C44811) * C1115 -
                     (C44816 + C44815 + C44814) * C50854) *
                        C51029 +
                    ((C44283 + C44284 + C44285) * C1114 +
                     (C44286 + C44287 + C44288) * C1109 -
                     (C44233 * C1330 + C44230 * C1337 + C44232 * C964 +
                      C51096 * C972 + C44231 * C303 + C51095 * C319) *
                         C1115 -
                     (C44233 * C1338 + C44230 * C1342 + C44232 * C973 +
                      C51096 * C979 + C44231 * C320 + C51095 * C333) *
                         C50854) *
                        C50768) *
                       C50904 * C1113) *
                  C50818) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                     C51096 * C511 + C44233 * C497 + C44230 * C512) *
                        C1209 +
                    (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                     C51096 * C526 + C44233 * C513 + C44230 * C527) *
                        C1204 -
                    (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                     C51096 * C966 + C44231 * C297 + C51095 * C307) *
                        C1210 -
                    (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                     C51096 * C976 + C44231 * C308 + C51095 * C327) *
                        C1205 +
                    (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                     C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                        C1211 +
                    (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                     C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                        C1206 -
                    (C44233 * C3811 + C44230 * C3813 + C44232 * C3353 +
                     C51096 * C3356 + C44231 * C1213 + C51095 * C1217) *
                        C1212 -
                    (C44233 * C3814 + C44230 * C3817 + C44232 * C3357 +
                     C51096 * C3362 + C44231 * C1218 + C51095 * C1225) *
                        C1207) *
                       C51029 +
                   ((C44271 + C44272 + C44273) * C1209 +
                    (C44274 + C44275 + C44276) * C1204 -
                    (C44459 + C44460 + C44461) * C1210 -
                    (C44462 + C44463 + C44464) * C1205 +
                    (C44465 + C44466 + C44467) * C1211 +
                    (C44468 + C44469 + C44470) * C1206 -
                    (C44233 * C3812 + C44230 * C3815 + C44232 * C3354 +
                     C51096 * C3358 + C44231 * C1214 + C51095 * C1219) *
                        C1212 -
                    (C44233 * C3816 + C44230 * C3818 + C44232 * C3359 +
                     C51096 * C3363 + C44231 * C1220 + C51095 * C1226) *
                        C1207) *
                       C50768) *
                  C50904 * C50784 * C50818) /
                     (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C683 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C51044 -
                      (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                       C51096 * C966 + C44231 * C297 + C51095 * C307) *
                          C684 -
                      (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                       C51096 * C976 + C44231 * C308 + C51095 * C327) *
                          C50854) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C683 +
                      (C44274 + C44275 + C44276) * C51044 -
                      (C44459 + C44460 + C44461) * C684 -
                      (C44462 + C44463 + C44464) * C50854) *
                         C50768) *
                        C50904 * C51036 +
                    (((C44461 + C44460 + C44459) * C684 -
                      ((C44276 + C44275 + C44274) * C51044 +
                       (C44273 + C44272 + C44271) * C683) +
                      (C44464 + C44463 + C44462) * C50854) *
                         C51029 +
                     ((C44811 + C44812 + C44813) * C684 -
                      ((C44277 + C44278 + C44279) * C51044 +
                       (C44280 + C44281 + C44282) * C683) +
                      (C44814 + C44815 + C44816) * C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C1821 +
                   ((((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                       C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                          C684 -
                      ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                        C51096 * C527 + C44231 * C510 + C51095 * C526) *
                           C51044 +
                       (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                        C51096 * C512 + C44231 * C496 + C51095 * C511) *
                           C683) +
                      (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                       C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                          C50854) *
                         C51029 +
                     ((C45187 + C45188 + C45189) * C684 -
                      ((C44646 + C44645 + C44644) * C51044 +
                       (C44643 + C44642 + C44641) * C683) +
                      (C45190 + C45191 + C45192) * C50854) *
                         C50768) *
                        C50904 * C51036 +
                    (((C44641 + C44642 + C44643) * C683 +
                      (C44644 + C44645 + C44646) * C51044 -
                      (C45189 + C45188 + C45187) * C684 -
                      (C45192 + C45191 + C45190) * C50854) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C683 +
                      (C44978 + C44979 + C44980) * C51044 -
                      (C44233 * C6299 + C44230 * C6300 + C44232 * C1329 +
                       C51096 * C1335 + C44231 * C963 + C51095 * C970) *
                          C684 -
                      (C44233 * C6301 + C44230 * C6302 + C44232 * C1336 +
                       C51096 * C1341 + C44231 * C971 + C51095 * C978) *
                          C50854) *
                         C50768) *
                        C50904 * C50789) *
                       C50882)) /
                 (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C683 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C51044 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C684 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C50854) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C683 +
                     (C44274 + C44275 + C44276) * C51044 -
                     (C44459 + C44460 + C44461) * C684 -
                     (C44462 + C44463 + C44464) * C50854) *
                        C50768) *
                       C50904 * C50784 * C51091 +
                   (((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                      C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                         C684 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C51044 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C683) +
                     (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                      C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                         C50854) *
                        C51029 +
                    ((C45187 + C45188 + C45189) * C684 -
                     ((C44646 + C44645 + C44644) * C51044 +
                      (C44643 + C44642 + C44641) * C683) +
                     (C45190 + C45191 + C45192) * C50854) *
                        C50768) *
                       C50904 * C50784 * C51092 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C683 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C51044 -
                     (C44233 * C6711 + C44230 * C6713 + C44232 * C4744 +
                      C51096 * C4752 + C44231 * C1327 + C51095 * C1331) *
                         C684 -
                     (C44233 * C6714 + C44230 * C6717 + C44232 * C4751 +
                      C51096 * C4756 + C44231 * C1332 + C51095 * C1339) *
                         C50854) *
                        C51029 +
                    ((C44647 + C44648 + C44649) * C683 +
                     (C44650 + C44651 + C44652) * C51044 -
                     (C44233 * C6712 + C44230 * C6715 + C44232 * C4743 +
                      C51096 * C4750 + C44231 * C1328 + C51095 * C1333) *
                         C684 -
                     (C44233 * C6716 + C44230 * C6718 + C44232 * C4749 +
                      C51096 * C4755 + C44231 * C1334 + C51095 * C1340) *
                         C50854) *
                        C50768) *
                       C50904 * C50784 * C2237)) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C295 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C290 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C296 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C291) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C294 +
                     (C44274 + C44275 + C44276) * C289 -
                     (C44459 + C44460 + C44461) * C295 -
                     (C44462 + C44463 + C44464) * C290 +
                     (C44465 + C44466 + C44467) * C296 +
                     (C44468 + C44469 + C44470) * C291) *
                        C50768) *
                       C50904 * C50784 * C1821 +
                   (((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                      C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                         C295 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C289 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C294) +
                     (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                      C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                         C290 -
                     (C44233 * C4742 + C44230 * C4748 + C44232 * C2803 +
                      C51096 * C2806 + C44231 * C1707 + C51095 * C1711) *
                         C296 -
                     (C44233 * C4747 + C44230 * C4754 + C44232 * C2807 +
                      C51096 * C2812 + C44231 * C1712 + C51095 * C1719) *
                         C291) *
                        C51029 +
                    ((C45187 + C45188 + C45189) * C295 -
                     ((C44646 + C44645 + C44644) * C289 +
                      (C44643 + C44642 + C44641) * C294) +
                     (C45190 + C45191 + C45192) * C290 -
                     (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                      C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                         C296 -
                     (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                      C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                         C291) *
                        C50768) *
                       C50904 * C50784 * C50882)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C118 +
                      (C44274 + C44275 + C44276) * C50802) *
                         C50768) *
                        C50904 * C1111 -
                    (((C44277 + C44278 + C44279) * C50802 +
                      (C44280 + C44281 + C44282) * C118) *
                         C50768 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C51029) *
                        C50904 * C1112 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C51029 +
                     ((C44283 + C44284 + C44285) * C118 +
                      (C44286 + C44287 + C44288) * C50802) *
                         C50768) *
                        C50904 * C1113) *
                       C1821 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C118 +
                      (C44978 + C44979 + C44980) * C50802) *
                         C50768) *
                        C50904 * C1112 -
                    (((C44646 + C44645 + C44644) * C50802 +
                      (C44643 + C44642 + C44641) * C118) *
                         C50768 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C51029) *
                        C50904 * C1111 -
                    (((C44233 * C1995 + C44230 * C2003 + C44232 * C519 +
                       C51096 * C530 + C44231 * C507 + C51095 * C524) *
                          C50802 +
                      (C44233 * C1991 + C44230 * C1996 + C44232 * C500 +
                       C51096 * C518 + C44231 * C494 + C51095 * C506) *
                          C118) *
                         C50768 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C51029) *
                        C50904 * C1113) *
                       C50882)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C118 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C50802) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C118 +
                     (C44274 + C44275 + C44276) * C50802) *
                        C50768) *
                       C50904 * C50784 * C1987 -
                   (((C44646 + C44645 + C44644) * C50802 +
                     (C44643 + C44642 + C44641) * C118) *
                        C50768 +
                    ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                      C51096 * C527 + C44231 * C510 + C51095 * C526) *
                         C50802 +
                     (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                      C51096 * C512 + C44231 * C496 + C51095 * C511) *
                         C118) *
                        C51029) *
                       C50904 * C50784 * C1988 +
                   (((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                      C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                         C118 +
                     (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                      C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                         C50802) *
                        C51029 +
                    ((C44647 + C44648 + C44649) * C118 +
                     (C44650 + C44651 + C44652) * C50802) *
                        C50768) *
                       C50904 * C50784 * C1989 -
                   (((C44233 * C7597 + C44230 * C7601 + C44232 * C5735 +
                      C51096 * C5739 + C44231 * C1999 + C51095 * C2005) *
                         C50802 +
                     (C44233 * C7595 + C44230 * C7598 + C44232 * C5730 +
                      C51096 * C5734 + C44231 * C1993 + C51095 * C2000) *
                         C118) *
                        C50768 +
                    ((C44233 * C7599 + C44230 * C7602 + C44232 * C5733 +
                      C51096 * C5738 + C44231 * C2001 + C51095 * C2006) *
                         C50802 +
                     (C44233 * C7596 + C44230 * C7600 + C44232 * C5729 +
                      C51096 * C5732 + C44231 * C1994 + C51095 * C2002) *
                         C118) *
                        C51029) *
                       C50904 * C50784 * C1990)) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C118 +
                      (C44274 + C44275 + C44276) * C50802) *
                         C50768) *
                        C50904 * C51036 -
                    (((C44277 + C44278 + C44279) * C50802 +
                      (C44280 + C44281 + C44282) * C118) *
                         C50768 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C51029) *
                        C50904 * C50789) *
                       C51091 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C118 +
                      (C44978 + C44979 + C44980) * C50802) *
                         C50768) *
                        C50904 * C50789 -
                    (((C44646 + C44645 + C44644) * C50802 +
                      (C44643 + C44642 + C44641) * C118) *
                         C50768 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C51029) *
                        C50904 * C51036) *
                       C51092 +
                   ((((C44231 * C497 + C51095 * C512 + C44232 * C1994 +
                       C51096 * C2002 + C44233 * C5729 + C44230 * C5732) *
                          C118 +
                      (C44231 * C513 + C51095 * C527 + C44232 * C2001 +
                       C51096 * C2006 + C44233 * C5733 + C44230 * C5738) *
                          C50802) *
                         C51029 +
                     ((C44647 + C44648 + C44649) * C118 +
                      (C44650 + C44651 + C44652) * C50802) *
                         C50768) *
                        C50904 * C51036 -
                    (((C44233 * C5736 + C44230 * C5740 + C44232 * C1997 +
                       C51096 * C2004 + C44231 * C517 + C51095 * C529) *
                          C50802 +
                      (C44233 * C5731 + C44230 * C5737 + C44232 * C1992 +
                       C51096 * C1998 + C44231 * C499 + C51095 * C516) *
                          C118) *
                         C50768 +
                     ((C44652 + C44651 + C44650) * C50802 +
                      (C44649 + C44648 + C44647) * C118) *
                         C51029) *
                        C50904 * C50789) *
                       C2237)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                       C51096 * C511 + C44233 * C497 + C44230 * C512) *
                          C118 +
                      (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                       C51096 * C526 + C44233 * C513 + C44230 * C527) *
                          C50802) *
                         C51029 +
                     ((C44271 + C44272 + C44273) * C118 +
                      (C44274 + C44275 + C44276) * C50802) *
                         C50768) *
                        C50904 * C1111 -
                    (((C44277 + C44278 + C44279) * C50802 +
                      (C44280 + C44281 + C44282) * C118) *
                         C50768 +
                     ((C44276 + C44275 + C44274) * C50802 +
                      (C44273 + C44272 + C44271) * C118) *
                         C51029) *
                        C50904 * C1112 +
                    (((C44282 + C44281 + C44280) * C118 +
                      (C44279 + C44278 + C44277) * C50802) *
                         C51029 +
                     ((C44283 + C44284 + C44285) * C118 +
                      (C44286 + C44287 + C44288) * C50802) *
                         C50768) *
                        C50904 * C1113) *
                       C1821 +
                   ((((C44641 + C44642 + C44643) * C118 +
                      (C44644 + C44645 + C44646) * C50802) *
                         C51029 +
                     ((C44975 + C44976 + C44977) * C118 +
                      (C44978 + C44979 + C44980) * C50802) *
                         C50768) *
                        C50904 * C1112 -
                    (((C44646 + C44645 + C44644) * C50802 +
                      (C44643 + C44642 + C44641) * C118) *
                         C50768 +
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C50802 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C118) *
                         C51029) *
                        C50904 * C1111 -
                    (((C44233 * C1995 + C44230 * C2003 + C44232 * C519 +
                       C51096 * C530 + C44231 * C507 + C51095 * C524) *
                          C50802 +
                      (C44233 * C1991 + C44230 * C1996 + C44232 * C500 +
                       C51096 * C518 + C44231 * C494 + C51095 * C506) *
                          C118) *
                         C50768 +
                     ((C44980 + C44979 + C44978) * C50802 +
                      (C44977 + C44976 + C44975) * C118) *
                         C51029) *
                        C50904 * C1113) *
                       C50882)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44231 * C119 + C51095 * C126 + C44232 * C496 +
                      C51096 * C511 + C44233 * C497 + C44230 * C512) *
                         C294 +
                     (C44231 * C127 + C51095 * C140 + C44232 * C510 +
                      C51096 * C526 + C44233 * C513 + C44230 * C527) *
                         C289 -
                     (C44233 * C1327 + C44230 * C1331 + C44232 * C961 +
                      C51096 * C966 + C44231 * C297 + C51095 * C307) *
                         C295 -
                     (C44233 * C1332 + C44230 * C1339 + C44232 * C967 +
                      C51096 * C976 + C44231 * C308 + C51095 * C327) *
                         C290 +
                     (C44231 * C298 + C51095 * C309 + C44232 * C1707 +
                      C51096 * C1711 + C44233 * C2803 + C44230 * C2806) *
                         C296 +
                     (C44231 * C310 + C51095 * C328 + C44232 * C1712 +
                      C51096 * C1719 + C44233 * C2807 + C44230 * C2812) *
                         C291) *
                        C51029 +
                    ((C44271 + C44272 + C44273) * C294 +
                     (C44274 + C44275 + C44276) * C289 -
                     (C44459 + C44460 + C44461) * C295 -
                     (C44462 + C44463 + C44464) * C290 +
                     (C44465 + C44466 + C44467) * C296 +
                     (C44468 + C44469 + C44470) * C291) *
                        C50768) *
                       C50904 * C50784 * C1821 +
                   (((C44231 * C961 + C51095 * C966 + C44232 * C1327 +
                      C51096 * C1331 + C44233 * C4744 + C44230 * C4752) *
                         C295 -
                     ((C44233 * C2001 + C44230 * C2006 + C44232 * C513 +
                       C51096 * C527 + C44231 * C510 + C51095 * C526) *
                          C289 +
                      (C44233 * C1994 + C44230 * C2002 + C44232 * C497 +
                       C51096 * C512 + C44231 * C496 + C51095 * C511) *
                          C294) +
                     (C44231 * C967 + C51095 * C976 + C44232 * C1332 +
                      C51096 * C1339 + C44233 * C4751 + C44230 * C4756) *
                         C290 -
                     (C44233 * C4742 + C44230 * C4748 + C44232 * C2803 +
                      C51096 * C2806 + C44231 * C1707 + C51095 * C1711) *
                         C296 -
                     (C44233 * C4747 + C44230 * C4754 + C44232 * C2807 +
                      C51096 * C2812 + C44231 * C1712 + C51095 * C1719) *
                         C291) *
                        C51029 +
                    ((C45187 + C45188 + C45189) * C295 -
                     ((C44646 + C44645 + C44644) * C289 +
                      (C44643 + C44642 + C44641) * C294) +
                     (C45190 + C45191 + C45192) * C290 -
                     (C44233 * C4741 + C44230 * C4746 + C44232 * C2804 +
                      C51096 * C2808 + C44231 * C1708 + C51095 * C1713) *
                         C296 -
                     (C44233 * C4745 + C44230 * C4753 + C44232 * C2809 +
                      C51096 * C2813 + C44231 * C1714 + C51095 * C1720) *
                         C291) *
                        C50768) *
                       C50904 * C50784 * C50882)) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C684 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
            (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
               C17339 +
           C33930 * C17340) *
              C50904 * C51087 +
          (((C33555 + C33554) * C684 -
            ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
            (C33557 + C33556) * C50854) *
               C17338 +
           ((C33563 + C33562) * C684 -
            ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
            (C33565 + C33564) * C50854) *
               C17339 +
           ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
            (C33927 + C33928) * C50854) *
               C17340) *
              C50904 * C51088 +
          (C33930 * C17338 +
           ((C33361 + C33360) * C683 + (C33359 + C33358) * C51044 -
            (C33926 + C33925) * C684 - (C33928 + C33927) * C50854) *
               C17339 +
           ((C33362 + C33363) * C683 + (C33364 + C33365) * C51044 -
            (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                C684 -
            (C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                C50854) *
               C17340) *
              C50904 * C682) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
            (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C683 + C36366 * C51044 - (C36358 + C36357) * C684 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C51087 +
          (((C33555 + C33554) * C684 -
            ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C684 -
            ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C51088 +
          (C33930 * C50763 * C2436 +
           ((C33563 + C33562) * C683 + (C33565 + C33564) * C51044 -
            (C33567 + C33566) * C684 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C683 + (C33568 + C33569) * C51044 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C684 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C682) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C684 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
                C17339 +
            C33930 * C17340) *
               C50904 * C292 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C684 -
             ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C51045 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C684 -
             ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C292 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
             (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C683 + (C34089 + C34090) * C51044 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C684 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C683 + C36366 * C51044 - (C36358 + C36357) * C684 -
             (C36360 + C36359) * C50854) *
                C50763 * C2438) *
               C292 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C684 -
             ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C51045 +
          ((((C37023 + C37024) * C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C684 -
             ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
              C50979 * C3813) *
                 C684 -
             ((C37030 + C37029) * C51044 + (C37028 + C37027) * C683) +
             (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C2438) *
               C292 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C683 + (C34306 + C34307) * C51044 -
             (C37031 + C37032) * C684 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C683 + (C37034 + C37033) * C51044 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C684 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - (C33562 + C33563) * C295 -
            (C33564 + C33565) * C290 + (C33566 + C33567) * C296 +
            (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - (C33559 + C33558) * C296 -
            (C33561 + C33560) * C291) *
               C17338 +
           ((C33563 + C33562) * C295 -
            ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
            (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
            (C33569 + C33568) * C291) *
               C17339 +
           ((C33315 * C303 + C33313 * C319 + C33316 * C964 + C50979 * C972) *
                C295 -
            (C33368 * C289 + C33369 * C294) +
            (C33315 * C320 + C33313 * C333 + C33316 * C973 + C50979 * C979) *
                C290 -
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C296 -
            (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C291) *
               C17340) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C17338 +
           ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
           C33374 * C17340) *
              C50904 * C112 -
          (C33375 * C17340 +
           ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
              C50904 * C113 +
          (C33374 * C17338 +
           ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
           ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
              C50904 * C114 -
          (((C33316 * C818 + C50979 * C820 + C33315 * C137 + C33313 * C145) *
                C50802 +
            (C33316 * C817 + C50979 * C819 + C33315 * C124 + C33313 * C136) *
                C118) *
               C17340 +
           ((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) * C17339 +
           C33375 * C17338) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C292 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C50789) *
              C489 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C33315 * C494 + C33313 * C506 + C33316 * C500 + C50979 * C518) *
                 C118 +
             (C33315 * C507 + C33313 * C524 + C33316 * C519 + C50979 * C530) *
                 C50802) *
                C17340) *
               C50904 * C50789 -
           (((C33755 + C33754) * C50802 + (C33753 + C33752) * C118) * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C292) *
              C490 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C17338 +
            ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
            ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
               C50904 * C292 -
           (((C33316 * C1995 + C50979 * C2003 + C33315 * C519 + C33313 * C530) *
                 C50802 +
             (C33316 * C1991 + C50979 * C1996 + C33315 * C500 + C33313 * C518) *
                 C118) *
                C17340 +
            ((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C17339 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C17338) *
               C50904 * C50789) *
              C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C33315 * C297 + C33313 * C307 + C33316 * C961 + C50979 * C966) *
                C118 +
            (C33315 * C308 + C33313 * C327 + C33316 * C967 + C50979 * C976) *
                C50802) *
               C50763 * C2437 +
           ((C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C118 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C50802) *
               C50763 * C2438) *
              C112 -
          (((C33561 + C33560) * C50802 + (C33559 + C33558) * C118) * C50763 *
               C2438 +
           ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
               C2437 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
               C2436) *
              C113 +
          (C33374 * C50763 * C2436 +
           ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
               C2437 +
           ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
               C2438) *
              C114 -
          (((C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C50802 +
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C118) *
               C50763 * C2438 +
           ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C50763 *
               C2437 +
           C33375 * C50763 * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - (C36358 + C36357) * C295 -
            (C36360 + C36359) * C290 +
            (C33315 * C2597 + C33313 * C2600 + C33316 * C4337 +
             C50979 * C4339) *
                C296 +
            (C33315 * C2601 + C33313 * C2606 + C33316 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C2438) *
              C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - C36339 * C296 - C36340 * C291) *
               C50763 * C2436 +
           ((C33558 + C33559) * C295 -
            ((C33556 + C33557) * C289 + (C33554 + C33555) * C294) +
            (C33560 + C33561) * C290 - (C36361 + C36362) * C296 -
            (C36363 + C36364) * C291) *
               C50763 * C2437 +
           ((C36362 + C36361) * C295 - (C36340 * C289 + C36339 * C294) +
            (C36364 + C36363) * C290 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C296 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C291) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C292 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C50789) *
              C489 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C33315 * C1708 + C33313 * C1713 + C33316 * C2804 +
              C50979 * C2808) *
                 C118 +
             (C33315 * C1714 + C33313 * C1720 + C33316 * C2809 +
              C50979 * C2813) *
                 C50802) *
                C50763 * C2438) *
               C50789 -
           (((C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
              C33313 * C1719) *
                 C50802 +
             (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
              C33313 * C1711) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C1332 + C50979 * C1339 + C33315 * C967 + C33313 * C976) *
                 C50802 +
             (C33316 * C1327 + C50979 * C1331 + C33315 * C961 + C33313 * C966) *
                 C118) *
                C50763 * C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C292) *
              C490 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C2436 +
            ((C33315 * C1327 + C33313 * C1331 + C33316 * C4744 +
              C50979 * C4752) *
                 C118 +
             (C33315 * C1332 + C33313 * C1339 + C33316 * C4751 +
              C50979 * C4756) *
                 C50802) *
                C50763 * C2437 +
            ((C33315 * C2803 + C33313 * C2806 + C33316 * C4742 +
              C50979 * C4748) *
                 C118 +
             (C33315 * C2807 + C33313 * C2812 + C33316 * C4747 +
              C50979 * C4754) *
                 C50802) *
                C50763 * C2438) *
               C292 -
           (((C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50802 +
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
              C33313 * C1340) *
                 C50802 +
             (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
              C33313 * C1333) *
                 C118) *
                C50763 * C2437 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C50763 *
                C2436) *
               C50789) *
              C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C51087 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C51088 +
           (C33374 * C17338 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
            ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
               C50904 * C682) *
              C51045 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C51088 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C51087 -
           (((C33316 * C520 + C50979 * C531 + C33315 * C509 + C33313 * C525) *
                 C50802 +
             (C33316 * C501 + C50979 * C521 + C33315 * C495 + C33313 * C508) *
                 C118) *
                C17340 +
            ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C17339 +
            C34093 * C17338) *
               C50904 * C682) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C51087 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C51088 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C682) *
              C51045 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C33315 * C1708 + C33313 * C1713 + C33316 * C2804 +
              C50979 * C2808) *
                 C118 +
             (C33315 * C1714 + C33313 * C1720 + C33316 * C2809 +
              C50979 * C2813) *
                 C50802) *
                C50763 * C2438) *
               C51088 -
           (((C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
              C33313 * C1719) *
                 C50802 +
             (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
              C33313 * C1711) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C1332 + C50979 * C1339 + C33315 * C967 + C33313 * C976) *
                 C50802 +
             (C33316 * C1327 + C50979 * C1331 + C33315 * C961 + C33313 * C966) *
                 C118) *
                C50763 * C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C51087 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C682) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C17338 +
           ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
           C33374 * C17340) *
              C50904 * C112 -
          (C33375 * C17340 +
           ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
              C50904 * C113 +
          (C33374 * C17338 +
           ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
           ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
              C50904 * C114 -
          (((C33316 * C818 + C50979 * C820 + C33315 * C137 + C33313 * C145) *
                C50802 +
            (C33316 * C817 + C50979 * C819 + C33315 * C124 + C33313 * C136) *
                C118) *
               C17340 +
           ((C33365 + C33364) * C50802 + (C33363 + C33362) * C118) * C17339 +
           C33375 * C17338) *
              C50904 * C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - (C33562 + C33563) * C295 -
            (C33564 + C33565) * C290 + (C33566 + C33567) * C296 +
            (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - (C33559 + C33558) * C296 -
            (C33561 + C33560) * C291) *
               C17338 +
           ((C33563 + C33562) * C295 -
            ((C33357 + C33356) * C289 + (C33355 + C33354) * C294) +
            (C33565 + C33564) * C290 - (C33567 + C33566) * C296 -
            (C33569 + C33568) * C291) *
               C17339 +
           ((C33315 * C303 + C33313 * C319 + C33316 * C964 + C50979 * C972) *
                C295 -
            (C33368 * C289 + C33369 * C294) +
            (C33315 * C320 + C33313 * C333 + C33316 * C973 + C50979 * C979) *
                C290 -
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C296 -
            (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C291) *
               C17340) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C33315 * C297 + C33313 * C307 + C33316 * C961 + C50979 * C966) *
                C118 +
            (C33315 * C308 + C33313 * C327 + C33316 * C967 + C50979 * C976) *
                C50802) *
               C50763 * C2437 +
           ((C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C118 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C50802) *
               C50763 * C2438) *
              C112 -
          (((C33561 + C33560) * C50802 + (C33559 + C33558) * C118) * C50763 *
               C2438 +
           ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
               C2437 +
           ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
               C2436) *
              C113 +
          (C33374 * C50763 * C2436 +
           ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
               C2437 +
           ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
               C2438) *
              C114 -
          (((C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C50802 +
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C118) *
               C50763 * C2438 +
           ((C33928 + C33927) * C50802 + (C33926 + C33925) * C118) * C50763 *
               C2437 +
           C33375 * C50763 * C2436) *
              C115) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - (C36358 + C36357) * C295 -
            (C36360 + C36359) * C290 +
            (C33315 * C2597 + C33313 * C2600 + C33316 * C4337 +
             C50979 * C4339) *
                C296 +
            (C33315 * C2601 + C33313 * C2606 + C33316 * C4340 +
             C50979 * C4343) *
                C291) *
               C50763 * C2438) *
              C292 +
          (((C33555 + C33554) * C295 -
            ((C33353 + C33352) * C289 + (C33351 + C33350) * C294) +
            (C33557 + C33556) * C290 - C36339 * C296 - C36340 * C291) *
               C50763 * C2436 +
           ((C33558 + C33559) * C295 -
            ((C33556 + C33557) * C289 + (C33554 + C33555) * C294) +
            (C33560 + C33561) * C290 - (C36361 + C36362) * C296 -
            (C36363 + C36364) * C291) *
               C50763 * C2437 +
           ((C36362 + C36361) * C295 - (C36340 * C289 + C36339 * C294) +
            (C36364 + C36363) * C290 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C296 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C291) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1447 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C51090 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C1448 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C1443) *
               C17338 +
           ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
            (C33554 + C33555) * C1447 - (C33556 + C33557) * C51090 +
            (C33558 + C33559) * C1448 + (C33560 + C33561) * C1443) *
               C17339 +
           (C33366 * C1446 + C33367 * C51089 - C33912 * C1447 -
            C33913 * C51090 + (C33566 + C33567) * C1448 +
            (C33568 + C33569) * C1443) *
               C17340) *
              C50904 * C51036 +
          (((C33555 + C33554) * C1447 -
            ((C33353 + C33352) * C51089 + (C33351 + C33350) * C1446) +
            (C33557 + C33556) * C51090 - (C33559 + C33558) * C1448 -
            (C33561 + C33560) * C1443) *
               C17338 +
           ((C33563 + C33562) * C1447 -
            ((C33357 + C33356) * C51089 + (C33355 + C33354) * C1446) +
            (C33565 + C33564) * C51090 - (C33567 + C33566) * C1448 -
            (C33569 + C33568) * C1443) *
               C17339 +
           ((C33925 + C33926) * C1447 - (C33368 * C51089 + C33369 * C1446) +
            (C33927 + C33928) * C51090 -
            (C33316 * C1710 + C50979 * C1717 + C33315 * C304 + C33313 * C321) *
                C1448 -
            (C33316 * C1718 + C50979 * C1722 + C33315 * C322 + C33313 * C334) *
                C1443) *
               C17340) *
              C50904 * C50789) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
            C36365 * C1448 + C36366 * C1443) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
            (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
            (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
               C50763 * C2437 +
           (C36365 * C1446 + C36366 * C51089 - C37279 * C1447 -
            C37280 * C51090 + (C37290 + C37289) * C1448 +
            (C37292 + C37291) * C1443) *
               C50763 * C2438) *
              C51036 +
          (((C33555 + C33554) * C1447 -
            ((C33353 + C33352) * C51089 + (C33351 + C33350) * C1446) +
            (C33557 + C33556) * C51090 - C36339 * C1448 - C36340 * C1443) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1447 -
            ((C33556 + C33557) * C51089 + (C33554 + C33555) * C1446) +
            (C33560 + C33561) * C51090 - (C36361 + C36362) * C1448 -
            (C36363 + C36364) * C1443) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1447 - (C36340 * C51089 + C36339 * C1446) +
            (C36364 + C36363) * C51090 -
            (C33316 * C4338 + C50979 * C4341 + C33315 * C2598 +
             C33313 * C2602) *
                C1448 -
            (C33316 * C4342 + C50979 * C4344 + C33315 * C2603 +
             C33313 * C2607) *
                C1443) *
               C50763 * C2438) *
              C50789) *
         C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1447 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C51090 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C1448 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C1443) *
               C17338 +
           ((C33350 + C33351) * C1446 + (C33352 + C33353) * C51089 -
            (C33554 + C33555) * C1447 - (C33556 + C33557) * C51090 +
            (C33558 + C33559) * C1448 + (C33560 + C33561) * C1443) *
               C17339 +
           (C33366 * C1446 + C33367 * C51089 - C33912 * C1447 -
            C33913 * C51090 + (C33566 + C33567) * C1448 +
            (C33568 + C33569) * C1443) *
               C17340) *
              C50904 * C50784 * C51045 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C1447 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51089 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1446) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C51090 -
            (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
             C33313 * C1711) *
                C1448 -
            (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
             C33313 * C1719) *
                C1443) *
               C17338 +
           ((C34304 + C34305) * C1447 -
            ((C33751 + C33750) * C51089 + (C33749 + C33748) * C1446) +
            (C34306 + C34307) * C51090 -
            (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
             C33313 * C1713) *
                C1448 -
            (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
             C33313 * C1720) *
                C1443) *
               C17339 +
           ((C34308 + C34309) * C1447 - (C34085 * C51089 + C34086 * C1446) +
            (C34310 + C34311) * C51090 -
            (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
             C33313 * C1715) *
                C1448 -
            (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
             C33313 * C1721) *
                C1443) *
               C17340) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1446 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51089 -
            (C36349 + C36350) * C1447 - (C36351 + C36352) * C51090 +
            C36365 * C1448 + C36366 * C1443) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1446 + (C36352 + C36351) * C51089 -
            (C36354 + C36353) * C1447 - (C36356 + C36355) * C51090 +
            (C36357 + C36358) * C1448 + (C36359 + C36360) * C1443) *
               C50763 * C2437 +
           (C36365 * C1446 + C36366 * C51089 - C37279 * C1447 -
            C37280 * C51090 + (C37290 + C37289) * C1448 +
            (C37292 + C37291) * C1443) *
               C50763 * C2438) *
              C50784 * C51045 +
          (((C37023 + C37024) * C1447 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51089 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1446) +
            (C37025 + C37026) * C51090 - C37949 * C1448 - C37950 * C1443) *
               C50763 * C2436 +
           ((C37027 + C37028) * C1447 -
            ((C37026 + C37025) * C51089 + (C37024 + C37023) * C1446) +
            (C37029 + C37030) * C51090 - (C37959 + C37960) * C1448 -
            (C37961 + C37962) * C1443) *
               C50763 * C2437 +
           ((C37960 + C37959) * C1447 - (C37950 * C51089 + C37949 * C1446) +
            (C37962 + C37961) * C51090 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C1448 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C1443) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
               C1210 -
           (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
               C1205 +
           (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
               C1211 +
           (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
               C1206 -
           (C33316 * C3353 + C50979 * C3356 + C33315 * C1213 + C33313 * C1217) *
               C1212 -
           (C33316 * C3357 + C50979 * C3362 + C33315 * C1218 + C33313 * C1225) *
               C1207) *
              C17338 +
          ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
           (C33554 + C33555) * C1210 - (C33556 + C33557) * C1205 +
           (C33558 + C33559) * C1211 + (C33560 + C33561) * C1206 -
           (C33316 * C3354 + C50979 * C3358 + C33315 * C1214 + C33313 * C1219) *
               C1212 -
           (C33316 * C3359 + C50979 * C3363 + C33315 * C1220 + C33313 * C1226) *
               C1207) *
              C17339 +
          (C33366 * C1209 + C33367 * C1204 - C33912 * C1210 - C33913 * C1205 +
           (C33566 + C33567) * C1211 + (C33568 + C33569) * C1206 -
           (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 + C33313 * C1221) *
               C1212 -
           (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 + C33313 * C1227) *
               C1207) *
              C17340) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1115 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
            (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
               C17339 +
           C34464 * C17340) *
              C50904 * C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C17338 +
           ((C33563 + C33562) * C1115 -
            ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
            (C33565 + C33564) * C50854) *
               C17339 +
           ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
            (C33927 + C33928) * C50854) *
               C17340) *
              C50904 * C1112 +
          (C34464 * C17338 +
           ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
            (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
               C17339 +
           ((C33362 + C33363) * C1114 + (C33364 + C33365) * C1109 -
            (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                C1115 -
            (C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                C50854) *
               C17340) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1115 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
            (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
               C17339 +
           C34464 * C17340) *
              C50904 * C50784 * C489 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C1115 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C1109 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1114) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C50854) *
               C17338 +
           ((C34304 + C34305) * C1115 -
            ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
            (C34306 + C34307) * C50854) *
               C17339 +
           ((C34308 + C34309) * C1115 - (C34085 * C1109 + C34086 * C1114) +
            (C34310 + C34311) * C50854) *
               C17340) *
              C50904 * C50784 * C490 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C1114 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C1109 -
            (C33316 * C4744 + C50979 * C4752 + C33315 * C1327 +
             C33313 * C1331) *
                C1115 -
            (C33316 * C4751 + C50979 * C4756 + C33315 * C1332 +
             C33313 * C1339) *
                C50854) *
               C17338 +
           ((C33756 + C33757) * C1114 + (C33758 + C33759) * C1109 -
            (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
             C33313 * C1333) *
                C1115 -
            (C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
             C33313 * C1340) *
                C50854) *
               C17339 +
           ((C33760 + C33761) * C1114 + (C33762 + C33763) * C1109 -
            (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
             C33313 * C1335) *
                C1115 -
            (C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
             C33313 * C1341) *
                C50854) *
               C17340) *
              C50904 * C50784 * C491)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - (C36358 + C36357) * C1115 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1115 -
            ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C1112 +
          (C34464 * C50763 * C2436 +
           ((C33563 + C33562) * C1114 + (C33565 + C33564) * C1109 -
            (C33567 + C33566) * C1115 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C1114 + (C33568 + C33569) * C1109 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C1115 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
           C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
              C50763 * C2436 +
          ((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
           (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
           (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
           (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
              C50763 * C2437 +
          (C36365 * C1209 + C36366 * C1204 - C37279 * C1210 - C37280 * C1205 +
           (C37290 + C37289) * C1211 + (C37292 + C37291) * C1206 -
           (C33316 * C21074 + C50979 * C21075 + C33315 * C3651 +
            C33313 * C3653) *
               C1212 -
           (C33316 * C21076 + C50979 * C21077 + C33315 * C3654 +
            C33313 * C3657) *
               C1207) *
              C50763 * C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - C37279 * C1115 -
            C37280 * C50854) *
               C50763 * C2438) *
              C50784 * C489 +
          (((C37023 + C37024) * C1115 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C1109 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C1114) +
            (C37025 + C37026) * C50854) *
               C50763 * C2436 +
           ((C37027 + C37028) * C1115 -
            ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
            (C37029 + C37030) * C50854) *
               C50763 * C2437 +
           ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
             C50979 * C3813) *
                C1115 -
            ((C37030 + C37029) * C1109 + (C37028 + C37027) * C1114) +
            (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
             C50979 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C490 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C1114 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C1109 -
            (C37455 + C37456) * C1115 - (C37457 + C37458) * C50854) *
               C50763 * C2436 +
           ((C37456 + C37455) * C1114 + (C37458 + C37457) * C1109 -
            (C37459 + C37460) * C1115 - (C37461 + C37462) * C50854) *
               C50763 * C2437 +
           ((C37460 + C37459) * C1114 + (C37462 + C37461) * C1109 -
            (C33316 * C21346 + C50979 * C21348 + C33315 * C3811 +
             C33313 * C3813) *
                C1115 -
            (C33316 * C21347 + C50979 * C21349 + C33315 * C3814 +
             C33313 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C491)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C1115 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
             (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
                C17339 +
            C34464 * C17340) *
               C50904 * C51036 +
           (((C33555 + C33554) * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C1115 -
             ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C51045 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C1115 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C1109 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1114) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C1115 -
             ((C33751 + C33750) * C1109 + (C33749 + C33748) * C1114) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C1115 - (C34085 * C1109 + C34086 * C1114) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C51036 +
           (((C33748 + C33749) * C1114 + (C33750 + C33751) * C1109 -
             (C34305 + C34304) * C1115 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C1114 + (C33754 + C33755) * C1109 -
             (C34309 + C34308) * C1115 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C1114 + (C34089 + C34090) * C1109 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C1115 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C1114 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C1109 -
             (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
             (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C1114 + C36366 * C1109 - C37279 * C1115 -
             C37280 * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33555 + C33554) * C1115 -
             ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C1115 -
             ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C51045 +
          ((((C37023 + C37024) * C1115 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C1109 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C1114) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C1115 -
             ((C37026 + C37025) * C1109 + (C37024 + C37023) * C1114) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C33315 * C3353 + C33313 * C3356 + C33316 * C3811 +
              C50979 * C3813) *
                 C1115 -
             ((C37030 + C37029) * C1109 + (C37028 + C37027) * C1114) +
             (C33315 * C3357 + C33313 * C3362 + C33316 * C3814 +
              C50979 * C3817) *
                 C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33748 + C33749) * C1114 + (C33750 + C33751) * C1109 -
             (C34305 + C34304) * C1115 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C1114 + (C34306 + C34307) * C1109 -
             (C37031 + C37032) * C1115 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C1114 + (C37034 + C37033) * C1109 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C1115 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C1115 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C1114 + (C33352 + C33353) * C1109 -
            (C33554 + C33555) * C1115 - (C33556 + C33557) * C50854) *
               C17339 +
           C34464 * C17340) *
              C50904 * C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C17338 +
           ((C33563 + C33562) * C1115 -
            ((C33357 + C33356) * C1109 + (C33355 + C33354) * C1114) +
            (C33565 + C33564) * C50854) *
               C17339 +
           ((C33925 + C33926) * C1115 - (C33368 * C1109 + C33369 * C1114) +
            (C33927 + C33928) * C50854) *
               C17340) *
              C50904 * C1112 +
          (C34464 * C17338 +
           ((C33361 + C33360) * C1114 + (C33359 + C33358) * C1109 -
            (C33926 + C33925) * C1115 - (C33928 + C33927) * C50854) *
               C17339 +
           ((C33362 + C33363) * C1114 + (C33364 + C33365) * C1109 -
            (C33316 * C965 + C50979 * C974 + C33315 * C305 + C33313 * C323) *
                C1115 -
            (C33316 * C975 + C50979 * C980 + C33315 * C324 + C33313 * C335) *
                C50854) *
               C17340) *
              C50904 * C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
               C1210 -
           (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
               C1205 +
           (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
               C1211 +
           (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
               C1206 -
           (C33316 * C3353 + C50979 * C3356 + C33315 * C1213 + C33313 * C1217) *
               C1212 -
           (C33316 * C3357 + C50979 * C3362 + C33315 * C1218 + C33313 * C1225) *
               C1207) *
              C17338 +
          ((C33350 + C33351) * C1209 + (C33352 + C33353) * C1204 -
           (C33554 + C33555) * C1210 - (C33556 + C33557) * C1205 +
           (C33558 + C33559) * C1211 + (C33560 + C33561) * C1206 -
           (C33316 * C3354 + C50979 * C3358 + C33315 * C1214 + C33313 * C1219) *
               C1212 -
           (C33316 * C3359 + C50979 * C3363 + C33315 * C1220 + C33313 * C1226) *
               C1207) *
              C17339 +
          (C33366 * C1209 + C33367 * C1204 - C33912 * C1210 - C33913 * C1205 +
           (C33566 + C33567) * C1211 + (C33568 + C33569) * C1206 -
           (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 + C33313 * C1221) *
               C1212 -
           (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 + C33313 * C1227) *
               C1207) *
              C17340) *
         C50904 * C50784 * C50818) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C1114 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C1109 -
            (C36349 + C36350) * C1115 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C1114 + (C36352 + C36351) * C1109 -
            (C36354 + C36353) * C1115 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C1114 + C36366 * C1109 - (C36358 + C36357) * C1115 -
            (C36360 + C36359) * C50854) *
               C50763 * C2438) *
              C1111 +
          (((C33555 + C33554) * C1115 -
            ((C33353 + C33352) * C1109 + (C33351 + C33350) * C1114) +
            (C33557 + C33556) * C50854) *
               C50763 * C2436 +
           ((C33558 + C33559) * C1115 -
            ((C33556 + C33557) * C1109 + (C33554 + C33555) * C1114) +
            (C33560 + C33561) * C50854) *
               C50763 * C2437 +
           ((C36362 + C36361) * C1115 - (C36340 * C1109 + C36339 * C1114) +
            (C36364 + C36363) * C50854) *
               C50763 * C2438) *
              C1112 +
          (C34464 * C50763 * C2436 +
           ((C33563 + C33562) * C1114 + (C33565 + C33564) * C1109 -
            (C33567 + C33566) * C1115 - (C33569 + C33568) * C50854) *
               C50763 * C2437 +
           ((C33566 + C33567) * C1114 + (C33568 + C33569) * C1109 -
            (C33316 * C3355 + C50979 * C3360 + C33315 * C1215 +
             C33313 * C1221) *
                C1115 -
            (C33316 * C3361 + C50979 * C3364 + C33315 * C1222 +
             C33313 * C1227) *
                C50854) *
               C50763 * C2438) *
              C1113) *
         C50818) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
               C1209 +
           (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
               C1204 -
           (C36349 + C36350) * C1210 - (C36351 + C36352) * C1205 +
           C36365 * C1211 + C36366 * C1206 - C37279 * C1212 - C37280 * C1207) *
              C50763 * C2436 +
          ((C36350 + C36349) * C1209 + (C36352 + C36351) * C1204 -
           (C36354 + C36353) * C1210 - (C36356 + C36355) * C1205 +
           (C36357 + C36358) * C1211 + (C36359 + C36360) * C1206 -
           (C37289 + C37290) * C1212 - (C37291 + C37292) * C1207) *
              C50763 * C2437 +
          (C36365 * C1209 + C36366 * C1204 - C37279 * C1210 - C37280 * C1205 +
           (C37290 + C37289) * C1211 + (C37292 + C37291) * C1206 -
           (C33316 * C21074 + C50979 * C21075 + C33315 * C3651 +
            C33313 * C3653) *
               C1212 -
           (C33316 * C21076 + C50979 * C21077 + C33315 * C3654 +
            C33313 * C3657) *
               C1207) *
              C50763 * C2438) *
         C50784 * C50818) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                 C684 -
             (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                 C50854) *
                C17338 +
            ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
             (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
                C17339 +
            C33930 * C17340) *
               C50904 * C51036 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C17338 +
            ((C33563 + C33562) * C684 -
             ((C33357 + C33356) * C51044 + (C33355 + C33354) * C683) +
             (C33565 + C33564) * C50854) *
                C17339 +
            ((C33925 + C33926) * C684 - (C33368 * C51044 + C33369 * C683) +
             (C33927 + C33928) * C50854) *
                C17340) *
               C50904 * C50789) *
              C1821 +
          ((((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                 C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                 C50854) *
                C17338 +
            ((C34304 + C34305) * C684 -
             ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
             (C34306 + C34307) * C50854) *
                C17339 +
            ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
             (C34310 + C34311) * C50854) *
                C17340) *
               C50904 * C51036 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C17338 +
            ((C33752 + C33753) * C683 + (C33754 + C33755) * C51044 -
             (C34309 + C34308) * C684 - (C34311 + C34310) * C50854) *
                C17339 +
            ((C34087 + C34088) * C683 + (C34089 + C34090) * C51044 -
             (C33316 * C1330 + C50979 * C1337 + C33315 * C964 + C33313 * C972) *
                 C684 -
             (C33316 * C1338 + C50979 * C1342 + C33315 * C973 + C33313 * C979) *
                 C50854) *
                C17340) *
               C50904 * C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C683 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C51044 -
             (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
                C50763 * C2436 +
            ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
             (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
                C50763 * C2437 +
            (C36365 * C683 + C36366 * C51044 - C37279 * C684 -
             C37280 * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33555 + C33554) * C684 -
             ((C33353 + C33352) * C51044 + (C33351 + C33350) * C683) +
             (C33557 + C33556) * C50854) *
                C50763 * C2436 +
            ((C33558 + C33559) * C684 -
             ((C33556 + C33557) * C51044 + (C33554 + C33555) * C683) +
             (C33560 + C33561) * C50854) *
                C50763 * C2437 +
            ((C36362 + C36361) * C684 - (C36340 * C51044 + C36339 * C683) +
             (C36364 + C36363) * C50854) *
                C50763 * C2438) *
               C50789) *
              C1821 +
          ((((C37023 + C37024) * C684 -
             ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                  C51044 +
              (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                  C683) +
             (C37025 + C37026) * C50854) *
                C50763 * C2436 +
            ((C37027 + C37028) * C684 -
             ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
             (C37029 + C37030) * C50854) *
                C50763 * C2437 +
            ((C37960 + C37959) * C684 - (C37950 * C51044 + C37949 * C683) +
             (C37962 + C37961) * C50854) *
                C50763 * C2438) *
               C51036 +
           (((C33748 + C33749) * C683 + (C33750 + C33751) * C51044 -
             (C34305 + C34304) * C684 - (C34307 + C34306) * C50854) *
                C50763 * C2436 +
            ((C34304 + C34305) * C683 + (C34306 + C34307) * C51044 -
             (C37031 + C37032) * C684 - (C37033 + C37034) * C50854) *
                C50763 * C2437 +
            ((C37032 + C37031) * C683 + (C37034 + C37033) * C51044 -
             (C33316 * C3812 + C50979 * C3815 + C33315 * C3354 +
              C33313 * C3358) *
                 C684 -
             (C33316 * C3816 + C50979 * C3818 + C33315 * C3359 +
              C33313 * C3363) *
                 C50854) *
                C50763 * C2438) *
               C50789) *
              C50882)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C684 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C50854) *
               C17338 +
           ((C33350 + C33351) * C683 + (C33352 + C33353) * C51044 -
            (C33554 + C33555) * C684 - (C33556 + C33557) * C50854) *
               C17339 +
           C33930 * C17340) *
              C50904 * C50784 * C51091 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C684 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51044 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C683) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C50854) *
               C17338 +
           ((C34304 + C34305) * C684 -
            ((C33751 + C33750) * C51044 + (C33749 + C33748) * C683) +
            (C34306 + C34307) * C50854) *
               C17339 +
           ((C34308 + C34309) * C684 - (C34085 * C51044 + C34086 * C683) +
            (C34310 + C34311) * C50854) *
               C17340) *
              C50904 * C50784 * C51092 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C683 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C51044 -
            (C33316 * C4744 + C50979 * C4752 + C33315 * C1327 +
             C33313 * C1331) *
                C684 -
            (C33316 * C4751 + C50979 * C4756 + C33315 * C1332 +
             C33313 * C1339) *
                C50854) *
               C17338 +
           ((C33756 + C33757) * C683 + (C33758 + C33759) * C51044 -
            (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
             C33313 * C1333) *
                C684 -
            (C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
             C33313 * C1340) *
                C50854) *
               C17339 +
           ((C33760 + C33761) * C683 + (C33762 + C33763) * C51044 -
            (C33316 * C6299 + C50979 * C6300 + C33315 * C1329 +
             C33313 * C1335) *
                C684 -
            (C33316 * C6301 + C50979 * C6302 + C33315 * C1336 +
             C33313 * C1341) *
                C50854) *
               C17340) *
              C50904 * C50784 * C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C683 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C51044 -
            (C36349 + C36350) * C684 - (C36351 + C36352) * C50854) *
               C50763 * C2436 +
           ((C36350 + C36349) * C683 + (C36352 + C36351) * C51044 -
            (C36354 + C36353) * C684 - (C36356 + C36355) * C50854) *
               C50763 * C2437 +
           (C36365 * C683 + C36366 * C51044 - C37279 * C684 - C37280 * C50854) *
               C50763 * C2438) *
              C50784 * C51091 +
          (((C37023 + C37024) * C684 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C51044 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C683) +
            (C37025 + C37026) * C50854) *
               C50763 * C2436 +
           ((C37027 + C37028) * C684 -
            ((C37026 + C37025) * C51044 + (C37024 + C37023) * C683) +
            (C37029 + C37030) * C50854) *
               C50763 * C2437 +
           ((C37960 + C37959) * C684 - (C37950 * C51044 + C37949 * C683) +
            (C37962 + C37961) * C50854) *
               C50763 * C2438) *
              C50784 * C51092 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C683 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C51044 -
            (C37455 + C37456) * C684 - (C37457 + C37458) * C50854) *
               C50763 * C2436 +
           ((C37456 + C37455) * C683 + (C37458 + C37457) * C51044 -
            (C37459 + C37460) * C684 - (C37461 + C37462) * C50854) *
               C50763 * C2437 +
           ((C37460 + C37459) * C683 + (C37462 + C37461) * C51044 -
            (C33316 * C21346 + C50979 * C21348 + C33315 * C3811 +
             C33313 * C3813) *
                C684 -
            (C33316 * C21347 + C50979 * C21349 + C33315 * C3814 +
             C33313 * C3817) *
                C50854) *
               C50763 * C2438) *
              C50784 * C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - C33912 * C295 - C33913 * C290 +
            (C33566 + C33567) * C296 + (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C50784 * C1821 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C290 -
            (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
             C33313 * C1711) *
                C296 -
            (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
             C33313 * C1719) *
                C291) *
               C17338 +
           ((C34304 + C34305) * C295 -
            ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
            (C34306 + C34307) * C290 -
            (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
             C33313 * C1713) *
                C296 -
            (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
             C33313 * C1720) *
                C291) *
               C17339 +
           ((C34308 + C34309) * C295 - (C34085 * C289 + C34086 * C294) +
            (C34310 + C34311) * C290 -
            (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
             C33313 * C1715) *
                C296 -
            (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
             C33313 * C1721) *
                C291) *
               C17340) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C1111 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C1112 +
           (C33374 * C17338 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
            ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
               C50904 * C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C1112 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C1111 -
           (((C33316 * C520 + C50979 * C531 + C33315 * C509 + C33313 * C525) *
                 C50802 +
             (C33316 * C501 + C50979 * C521 + C33315 * C495 + C33313 * C508) *
                 C118) *
                C17340 +
            ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C17339 +
            C34093 * C17338) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C17338 +
           ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
           C33374 * C17340) *
              C50904 * C50784 * C1987 -
          (C34093 * C17340 +
           ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
           ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                C50802 +
            (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                C118) *
               C17338) *
              C50904 * C50784 * C1988 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C118 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C50802) *
               C17338 +
           ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
           ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
              C50904 * C50784 * C1989 -
          (((C33316 * C5736 + C50979 * C5740 + C33315 * C1997 +
             C33313 * C2004) *
                C50802 +
            (C33316 * C5731 + C50979 * C5737 + C33315 * C1992 +
             C33313 * C1998) *
                C118) *
               C17340 +
           ((C33316 * C5735 + C50979 * C5739 + C33315 * C1999 +
             C33313 * C2005) *
                C50802 +
            (C33316 * C5730 + C50979 * C5734 + C33315 * C1993 +
             C33313 * C2000) *
                C118) *
               C17339 +
           ((C33316 * C5733 + C50979 * C5738 + C33315 * C2001 +
             C33313 * C2006) *
                C50802 +
            (C33316 * C5729 + C50979 * C5732 + C33315 * C1994 +
             C33313 * C2002) *
                C118) *
               C17338) *
              C50904 * C50784 * C1990)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C1111 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C1112 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C1112 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C1111 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - C37279 * C295 - C37280 * C290 +
            (C37290 + C37289) * C296 + (C37292 + C37291) * C291) *
               C50763 * C2438) *
              C50784 * C1821 +
          (((C37023 + C37024) * C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
               C50763 * C2436 +
           ((C37027 + C37028) * C295 -
            ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
            (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
            (C37961 + C37962) * C291) *
               C50763 * C2437 +
           ((C37960 + C37959) * C295 - (C37950 * C289 + C37949 * C294) +
            (C37962 + C37961) * C290 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C296 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C291) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C118 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C50802) *
               C50763 * C2436 +
           ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
               C2437 +
           (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
              C50784 * C1987 -
          ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
           ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
               C2437 +
           ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                C50802 +
            (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                C118) *
               C50763 * C2436) *
              C50784 * C1988 +
          (((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                C118 +
            (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                C50802) *
               C50763 * C2436 +
           ((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C50763 *
               C2437 +
           ((C37460 + C37459) * C118 + (C37462 + C37461) * C50802) * C50763 *
               C2438) *
              C50784 * C1989 -
          (((C33316 * C23016 + C50979 * C23017 + C33315 * C4747 +
             C33313 * C4754) *
                C50802 +
            (C33316 * C23014 + C50979 * C23015 + C33315 * C4742 +
             C33313 * C4748) *
                C118) *
               C50763 * C2438 +
           ((C33316 * C6714 + C50979 * C6717 + C33315 * C4751 +
             C33313 * C4756) *
                C50802 +
            (C33316 * C6711 + C50979 * C6713 + C33315 * C4744 +
             C33313 * C4752) *
                C118) *
               C50763 * C2437 +
           ((C33316 * C5733 + C50979 * C5738 + C33315 * C2001 +
             C33313 * C2006) *
                C50802 +
            (C33316 * C5729 + C50979 * C5732 + C33315 * C1994 +
             C33313 * C2002) *
                C118) *
               C50763 * C2436) *
              C50784 * C1990)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C51036 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C50789) *
              C51091 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C50789 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C51036) *
              C51092 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C17338 +
            ((C33756 + C33757) * C118 + (C33758 + C33759) * C50802) * C17339 +
            ((C33760 + C33761) * C118 + (C33762 + C33763) * C50802) * C17340) *
               C50904 * C51036 -
           (((C33316 * C1995 + C50979 * C2003 + C33315 * C519 + C33313 * C530) *
                 C50802 +
             (C33316 * C1991 + C50979 * C1996 + C33315 * C500 + C33313 * C518) *
                 C118) *
                C17340 +
            ((C33763 + C33762) * C50802 + (C33761 + C33760) * C118) * C17339 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C17338) *
               C50904 * C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C51036 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C50789) *
              C51091 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C50789 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C51036) *
              C51092 +
          ((((C33315 * C497 + C33313 * C512 + C33316 * C1994 + C50979 * C2002) *
                 C118 +
             (C33315 * C513 + C33313 * C527 + C33316 * C2001 + C50979 * C2006) *
                 C50802) *
                C50763 * C2436 +
            ((C37456 + C37455) * C118 + (C37458 + C37457) * C50802) * C50763 *
                C2437 +
            ((C37460 + C37459) * C118 + (C37462 + C37461) * C50802) * C50763 *
                C2438) *
               C51036 -
           (((C33316 * C4745 + C50979 * C4753 + C33315 * C2809 +
              C33313 * C2813) *
                 C50802 +
             (C33316 * C4741 + C50979 * C4746 + C33315 * C2804 +
              C33313 * C2808) *
                 C118) *
                C50763 * C2438 +
            ((C33316 * C4749 + C50979 * C4755 + C33315 * C1334 +
              C33313 * C1340) *
                 C50802 +
             (C33316 * C4743 + C50979 * C4750 + C33315 * C1328 +
              C33313 * C1333) *
                 C118) *
                C50763 * C2437 +
            ((C33759 + C33758) * C50802 + (C33757 + C33756) * C118) * C50763 *
                C2436) *
               C50789) *
              C2237)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C17338 +
            ((C33350 + C33351) * C118 + (C33352 + C33353) * C50802) * C17339 +
            C33374 * C17340) *
               C50904 * C1111 -
           (C33375 * C17340 +
            ((C33357 + C33356) * C50802 + (C33355 + C33354) * C118) * C17339 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C17338) *
               C50904 * C1112 +
           (C33374 * C17338 +
            ((C33361 + C33360) * C118 + (C33359 + C33358) * C50802) * C17339 +
            ((C33362 + C33363) * C118 + (C33364 + C33365) * C50802) * C17340) *
               C50904 * C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C17338 +
            ((C33752 + C33753) * C118 + (C33754 + C33755) * C50802) * C17339 +
            ((C34087 + C34088) * C118 + (C34089 + C34090) * C50802) * C17340) *
               C50904 * C1112 -
           (C34093 * C17340 +
            ((C33751 + C33750) * C50802 + (C33749 + C33748) * C118) * C17339 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C17338) *
               C50904 * C1111 -
           (((C33316 * C520 + C50979 * C531 + C33315 * C509 + C33313 * C525) *
                 C50802 +
             (C33316 * C501 + C50979 * C521 + C33315 * C495 + C33313 * C508) *
                 C118) *
                C17340 +
            ((C34090 + C34089) * C50802 + (C34088 + C34087) * C118) * C17339 +
            C34093 * C17338) *
               C50904 * C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C33316 * C961 + C50979 * C966 + C33315 * C297 + C33313 * C307) *
                C295 -
            (C33316 * C967 + C50979 * C976 + C33315 * C308 + C33313 * C327) *
                C290 +
            (C33315 * C298 + C33313 * C309 + C33316 * C1707 + C50979 * C1711) *
                C296 +
            (C33315 * C310 + C33313 * C328 + C33316 * C1712 + C50979 * C1719) *
                C291) *
               C17338 +
           ((C33350 + C33351) * C294 + (C33352 + C33353) * C289 -
            (C33554 + C33555) * C295 - (C33556 + C33557) * C290 +
            (C33558 + C33559) * C296 + (C33560 + C33561) * C291) *
               C17339 +
           (C33366 * C294 + C33367 * C289 - C33912 * C295 - C33913 * C290 +
            (C33566 + C33567) * C296 + (C33568 + C33569) * C291) *
               C17340) *
              C50904 * C50784 * C1821 +
          (((C33315 * C961 + C33313 * C966 + C33316 * C1327 + C50979 * C1331) *
                C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C33315 * C967 + C33313 * C976 + C33316 * C1332 + C50979 * C1339) *
                C290 -
            (C33316 * C2803 + C50979 * C2806 + C33315 * C1707 +
             C33313 * C1711) *
                C296 -
            (C33316 * C2807 + C50979 * C2812 + C33315 * C1712 +
             C33313 * C1719) *
                C291) *
               C17338 +
           ((C34304 + C34305) * C295 -
            ((C33751 + C33750) * C289 + (C33749 + C33748) * C294) +
            (C34306 + C34307) * C290 -
            (C33316 * C2804 + C50979 * C2808 + C33315 * C1708 +
             C33313 * C1713) *
                C296 -
            (C33316 * C2809 + C50979 * C2813 + C33315 * C1714 +
             C33313 * C1720) *
                C291) *
               C17339 +
           ((C34308 + C34309) * C295 - (C34085 * C289 + C34086 * C294) +
            (C34310 + C34311) * C290 -
            (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
             C33313 * C1715) *
                C296 -
            (C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
             C33313 * C1721) *
                C291) *
               C17340) *
              C50904 * C50784 * C50882)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                 C118 +
             (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                 C50802) *
                C50763 * C2436 +
            ((C36350 + C36349) * C118 + (C36352 + C36351) * C50802) * C50763 *
                C2437 +
            (C36365 * C118 + C36366 * C50802) * C50763 * C2438) *
               C1111 -
           ((C36340 * C50802 + C36339 * C118) * C50763 * C2438 +
            ((C33556 + C33557) * C50802 + (C33554 + C33555) * C118) * C50763 *
                C2437 +
            ((C33353 + C33352) * C50802 + (C33351 + C33350) * C118) * C50763 *
                C2436) *
               C1112 +
           (C33374 * C50763 * C2436 +
            ((C33563 + C33562) * C118 + (C33565 + C33564) * C50802) * C50763 *
                C2437 +
            ((C33566 + C33567) * C118 + (C33568 + C33569) * C50802) * C50763 *
                C2438) *
               C1113) *
              C1821 +
          ((((C33748 + C33749) * C118 + (C33750 + C33751) * C50802) * C50763 *
                C2436 +
            ((C34304 + C34305) * C118 + (C34306 + C34307) * C50802) * C50763 *
                C2437 +
            ((C37032 + C37031) * C118 + (C37034 + C37033) * C50802) * C50763 *
                C2438) *
               C1112 -
           ((C37950 * C50802 + C37949 * C118) * C50763 * C2438 +
            ((C37026 + C37025) * C50802 + (C37024 + C37023) * C118) * C50763 *
                C2437 +
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C50802 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C118) *
                C50763 * C2436) *
               C1111 -
           (((C33316 * C2810 + C50979 * C2814 + C33315 * C1716 +
              C33313 * C1721) *
                 C50802 +
             (C33316 * C2805 + C50979 * C2811 + C33315 * C1709 +
              C33313 * C1715) *
                 C118) *
                C50763 * C2438 +
            ((C34311 + C34310) * C50802 + (C34309 + C34308) * C118) * C50763 *
                C2437 +
            C34093 * C50763 * C2436) *
               C1113) *
              C50882)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33315 * C119 + C33313 * C126 + C33316 * C496 + C50979 * C511) *
                C294 +
            (C33315 * C127 + C33313 * C140 + C33316 * C510 + C50979 * C526) *
                C289 -
            (C36349 + C36350) * C295 - (C36351 + C36352) * C290 +
            C36365 * C296 + C36366 * C291) *
               C50763 * C2436 +
           ((C36350 + C36349) * C294 + (C36352 + C36351) * C289 -
            (C36354 + C36353) * C295 - (C36356 + C36355) * C290 +
            (C36357 + C36358) * C296 + (C36359 + C36360) * C291) *
               C50763 * C2437 +
           (C36365 * C294 + C36366 * C289 - C37279 * C295 - C37280 * C290 +
            (C37290 + C37289) * C296 + (C37292 + C37291) * C291) *
               C50763 * C2438) *
              C50784 * C1821 +
          (((C37023 + C37024) * C295 -
            ((C33316 * C513 + C50979 * C527 + C33315 * C510 + C33313 * C526) *
                 C289 +
             (C33316 * C497 + C50979 * C512 + C33315 * C496 + C33313 * C511) *
                 C294) +
            (C37025 + C37026) * C290 - C37949 * C296 - C37950 * C291) *
               C50763 * C2436 +
           ((C37027 + C37028) * C295 -
            ((C37026 + C37025) * C289 + (C37024 + C37023) * C294) +
            (C37029 + C37030) * C290 - (C37959 + C37960) * C296 -
            (C37961 + C37962) * C291) *
               C50763 * C2437 +
           ((C37960 + C37959) * C295 - (C37950 * C289 + C37949 * C294) +
            (C37962 + C37961) * C290 -
            (C33316 * C20738 + C50979 * C20739 + C33315 * C4337 +
             C33313 * C4339) *
                C296 -
            (C33316 * C20740 + C50979 * C20741 + C33315 * C4340 +
             C33313 * C4343) *
                C291) *
               C50763 * C2438) *
              C50784 * C50882)) /
            (p * q * std::sqrt(p + q));
}
