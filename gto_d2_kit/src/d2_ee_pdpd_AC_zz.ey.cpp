/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AC_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_13_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49937 = ce * de;
    const double C49936 = ce + de;
    const double C49935 = 0 * de;
    const double C49934 = zC - zD;
    const double C49965 = 0 * ce;
    const double C49960 = 0 * de;
    const double C50003 = ae * be;
    const double C50002 = ae + be;
    const double C50001 = 0 * be;
    const double C50000 = zA - zB;
    const double C50031 = 0 * ae;
    const double C50026 = 0 * be;
    const double C50062 = p + q;
    const double C50061 = p * q;
    const double C50070 = ae * ce;
    const double C50069 = zP - zQ;
    const double C50067 = bs[3];
    const double C50076 = bs[4];
    const double C50074 = xP - xQ;
    const double C50085 = bs[5];
    const double C50094 = bs[6];
    const double C50109 = bs[7];
    const double C50137 = bs[2];
    const double C50232 = yP - yQ;
    const double C119 = bs[0];
    const double C51155 = xA - xB;
    const double C51178 = xC - xD;
    const double C51197 = yC - yD;
    const double C51298 = yA - yB;
    const double C49938 = std::pow(C49936, 2);
    const double C49961 = 2 * C49936;
    const double C49939 = C49937 * C49934;
    const double C49962 = C49934 * C49935;
    const double C51213 = std::pow(C49934, 2);
    const double C51277 = C49934 * de;
    const double C51276 = C49934 * ce;
    const double C49970 = C49965 / C49936;
    const double C50004 = std::pow(C50002, 2);
    const double C50027 = 2 * C50002;
    const double C50078 = C49936 * C50002;
    const double C50005 = C50003 * C50000;
    const double C50028 = C50000 * C50001;
    const double C51310 = std::pow(C50000, 2);
    const double C51374 = C50000 * be;
    const double C51373 = C50000 * ae;
    const double C50036 = C50031 / C50002;
    const double C50063 = 2 * C50061;
    const double C50072 = std::pow(C50069, 2);
    const double C50141 = C50069 * ae;
    const double C50139 = C50069 * ce;
    const double C50087 = std::pow(C50074, 2);
    const double C50259 = std::pow(C50232, 2);
    const double C51158 = C51155 * be;
    const double C51157 = C51155 * ae;
    const double C51156 = std::pow(C51155, 2);
    const double C51181 = C51178 * de;
    const double C51180 = C51178 * ce;
    const double C51179 = std::pow(C51178, 2);
    const double C51198 = std::pow(C51197, 2);
    const double C51249 = C51197 * de;
    const double C51248 = C51197 * ce;
    const double C51299 = std::pow(C51298, 2);
    const double C51348 = C51298 * be;
    const double C51347 = C51298 * ae;
    const double C49940 = 2 * C49938;
    const double C51439 = 4 * C49938;
    const double C51189 = std::pow(C49961, -1);
    const double C51441 = std::pow(C49961, -2);
    const double C49967 = C49962 / C49936;
    const double C51214 = C51213 * C49937;
    const double C50006 = 2 * C50004;
    const double C51432 = 4 * C50004;
    const double C51166 = std::pow(C50027, -1);
    const double C51454 = std::pow(C50027, -2);
    const double C50033 = C50028 / C50002;
    const double C51311 = C51310 * C50003;
    const double C50065 = C50063 / C50062;
    const double C140 =
        (-((std::pow(zP - zQ, 2) * bs[2] * std::pow(C50063 / C50062, 2) -
            (bs[1] * C50063) / C50062) *
           ae * ce) /
         C49936) /
        C50002;
    const double C120 = -(C50074 * bs[1] * C50063) / C50062;
    const double C297 = -(C50232 * bs[1] * C50063) / C50062;
    const double C486 = -(C50069 * bs[1] * C50063) / C50062;
    const double C50079 = C50072 * C50076;
    const double C50088 = C50072 * C50085;
    const double C50097 = C50072 * C50094;
    const double C50113 = C50072 * C50109;
    const double C50143 = C50067 * C50141;
    const double C50150 = C50076 * C50141;
    const double C50159 = C50085 * C50141;
    const double C50174 = C50094 * C50141;
    const double C50203 = C50109 * C50141;
    const double C126 = (-(bs[1] * C50141 * C50063) / C50062) / C50002;
    const double C50142 = C50067 * C50139;
    const double C50148 = C50076 * C50139;
    const double C50157 = C50085 * C50139;
    const double C50170 = C50094 * C50139;
    const double C50197 = C50109 * C50139;
    const double C127 = (bs[1] * C50139 * C50063) / (C50062 * C49936);
    const double C51159 = C51156 * C50003;
    const double C51182 = C51179 * C49937;
    const double C51199 = C51198 * C49937;
    const double C51300 = C51299 * C50003;
    const double C49964 = C49935 / C49940;
    const double C49968 = C49960 / C49940;
    const double C49971 = 0 - C49967;
    const double C51215 = C51214 / C49936;
    const double C50030 = C50001 / C50006;
    const double C50034 = C50026 / C50006;
    const double C50037 = 0 - C50033;
    const double C51312 = C51311 / C50002;
    const double C50068 = -C50065;
    const double C50077 = std::pow(C50065, 4);
    const double C50095 = std::pow(C50065, 6);
    const double C50136 = std::pow(C50065, 2);
    const double C141 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C50065, 2) +
            std::pow(zP - zQ, 2) * bs[3] * std::pow(-C50065, 3)) *
           ae * ce) /
         C49936) /
        C50002;
    const double C51160 = C51159 / C50002;
    const double C51183 = C51182 / C49936;
    const double C51200 = C51199 / C49936;
    const double C51301 = C51300 / C50002;
    const double C49974 = C49971 * ce;
    const double C51216 = -C51215;
    const double C50040 = C50037 * ae;
    const double C51313 = -C51312;
    const double C50071 = std::pow(C50068, 3);
    const double C50086 = std::pow(C50068, 5);
    const double C50110 = std::pow(C50068, 7);
    const double C50080 = C50079 * C50077;
    const double C50084 = C50076 * C50077;
    const double C50152 = C50077 * C50150;
    const double C50151 = C50077 * C50148;
    const double C50098 = C50097 * C50095;
    const double C50108 = C50094 * C50095;
    const double C50180 = C50095 * C50174;
    const double C50176 = C50095 * C50170;
    const double C50140 = C50137 * C50136;
    const double C128 = (C50074 * C50136 * C50137 * C50141) / C50002;
    const double C129 = -(C50074 * C50136 * C50137 * C50139) / C49936;
    const double C310 = -(C50232 * C50136 * C50137 * C50139) / C49936;
    const double C311 = (C50232 * C50136 * C50137 * C50141) / C50002;
    const double C496 = (C50069 * C50136 * C50137 * C50141) / C50002 -
                        (ae * bs[1] * C50063) / (C50062 * C50002);
    const double C497 = (ce * bs[1] * C50063) / (C50062 * C49936) -
                        (C50069 * C50136 * C50137 * C50139) / C49936;
    const double C51161 = -C51160;
    const double C51184 = -C51183;
    const double C51201 = -C51200;
    const double C51302 = -C51301;
    const double C49976 = C49974 / C49936;
    const double C51217 = std::exp(C51216);
    const double C50042 = C50040 / C50002;
    const double C51314 = std::exp(C51313);
    const double C50075 = C50067 * C50071;
    const double C50145 = C50071 * C50143;
    const double C50144 = C50071 * C50142;
    const double C142 =
        (-((C50067 * C50071 + C50072 * bs[4] * std::pow(C50065, 4)) * C50070 *
           std::pow(xP - xQ, 2)) /
         C49936) /
            C50002 -
        ((bs[2] * std::pow(C50065, 2) + C50072 * C50067 * C50071) * C50070) /
            (C49936 * C50002);
    const double C327 =
        (-((yP - yQ) *
           (bs[2] * std::pow(C50065, 2) + C50072 * C50067 * C50071) * C50070) /
         C49936) /
        C50002;
    const double C516 =
        (-(C50136 * C50137 * C50069 * ae * ce) / C49936) / C50002 -
        (ae * C50136 * C50137 * C50069 * ce) / C50078 -
        (C50069 * (C50137 * C50136 + C50072 * C50067 * C50071) * C50070) /
            C50078;
    const double C50089 = C50088 * C50086;
    const double C50093 = C50085 * C50086;
    const double C50162 = C50086 * C50159;
    const double C50160 = C50086 * C50157;
    const double C50115 = C50113 * C50110;
    const double C50210 = C50110 * C50203;
    const double C50206 = C50110 * C50197;
    const double C50158 = C50084 * C50087;
    const double C50171 = C50074 * C50084;
    const double C50301 = C50084 * C50259;
    const double C50340 = C50232 * C50084;
    const double C50427 = C50084 * ae;
    const double C50425 = C50084 * C50072;
    const double C50424 = C50069 * C50084;
    const double C50423 = C50084 * ce;
    const double C50154 = C50074 * C50152;
    const double C50245 = C50232 * C50152;
    const double C50267 = C50069 * C50152;
    const double C50419 = C50152 * ce;
    const double C50153 = C50074 * C50151;
    const double C50243 = C50232 * C50151;
    const double C50264 = C50069 * C50151;
    const double C50420 = ae * C50151;
    const double C50200 = C50108 * C50087;
    const double C50362 = C50074 * C50108;
    const double C50701 = C50108 * C50259;
    const double C50769 = C50232 * C50108;
    const double C50839 = C50108 * ae;
    const double C50833 = C50108 * C50072;
    const double C50832 = C50069 * C50108;
    const double C50831 = C50108 * ce;
    const double C50184 = C50180 * C50087;
    const double C50202 = C50074 * C50180;
    const double C50343 = C50180 * C50259;
    const double C50519 = C50232 * C50180;
    const double C50590 = C50069 * C50180;
    const double C50825 = C50180 * ce;
    const double C50182 = C50176 * C50087;
    const double C50196 = C50074 * C50176;
    const double C50339 = C50176 * C50259;
    const double C50517 = C50232 * C50176;
    const double C50584 = C50069 * C50176;
    const double C50826 = ae * C50176;
    const double C121 = C50140 * C50087 - (bs[1] * C50063) / C50062;
    const double C296 = C50232 * C50074 * C50140;
    const double C298 = C50140 * C50259 - (bs[1] * C50063) / C50062;
    const double C487 = C50140 * C50072 - (bs[1] * C50063) / C50062;
    const double C488 = C50069 * C50074 * C50140;
    const double C961 = C50069 * C50232 * C50140;
    const double C51162 = std::exp(C51161);
    const double C51185 = std::exp(C51184);
    const double C51202 = std::exp(C51201);
    const double C51303 = std::exp(C51302);
    const double C49978 = C49976 - C49968;
    const double C49941 = C49939 * C51217;
    const double C118 = -(2 * ce * de * (zC - zD) * C51217) / (ce + de);
    const double C51278 = C51217 * C51276;
    const double C51281 = C51189 * C51217;
    const double C51449 = C51217 * C51277;
    const double C51442 = C51217 / C49961;
    const double C482 = C51441 * C51217;
    const double C50044 = C50042 - C50034;
    const double C151 = C51314 * C141;
    const double C149 = C51314 * C128;
    const double C2599 = C51314 * C311;
    const double C50007 = C50005 * C51314;
    const double C117 = -(2 * ae * be * (zA - zB) * C51314) / (ae + be);
    const double C51375 = C51314 * C51373;
    const double C51378 = C51166 * C51314;
    const double C51462 = C51314 * C51374;
    const double C51455 = C51314 / C50027;
    const double C5413 = C51454 * C51314;
    const double C50081 = C50075 + C50080;
    const double C50149 = C50074 * C50075;
    const double C50244 = C50232 * C50075;
    const double C50268 = C50075 * ae;
    const double C50266 = C50069 * C50075;
    const double C50265 = C50075 * ce;
    const double C122 =
        2 * C50074 * C50140 + C50074 * (C50140 + C50075 * C50087);
    const double C295 = C50232 * (C50140 + C50075 * C50087);
    const double C490 = C50069 * (C50140 + C50075 * C50087);
    const double C1188 =
        2 * C50232 * C50140 + C50232 * (C50140 + C50075 * C50259);
    const double C1646 = C50069 * (C50140 + C50075 * C50259);
    const double C1958 =
        2 * C50069 * C50140 + C50069 * (C50140 + C50075 * C50072);
    const double C130 = (C50136 * C50137 * C50141 + C50145 * C50087) / C50002;
    const double C132 =
        (2 * C50074 * C50145 + C50074 * (C50145 + C50152 * C50087)) / C50002;
    const double C307 = (C50232 * (C50145 + C50152 * C50087)) / C50002;
    const double C309 = (C50232 * C50074 * C50145) / C50002;
    const double C312 = (C50136 * C50137 * C50141 + C50145 * C50259) / C50002;
    const double C498 =
        (C50136 * C50137 * C50141 + C50069 * (C50069 * C50145 + C50140 * ae) +
         C50069 * C50140 * ae) /
        C50002;
    const double C500 =
        (C50069 * C50074 * C50145 + C50074 * C50140 * ae) / C50002;
    const double C504 = (C50069 * (C50145 + C50152 * C50087) +
                         (C50140 + C50075 * C50087) * ae) /
                        C50002;
    const double C966 =
        (C50069 * C50232 * C50145 + C50232 * C50140 * ae) / C50002;
    const double C1196 =
        (2 * C50232 * C50145 + C50232 * (C50145 + C50152 * C50259)) / C50002;
    const double C1650 = (C50069 * (C50145 + C50152 * C50259) +
                          (C50140 + C50075 * C50259) * ae) /
                         C50002;
    const double C131 = -(C50144 * C50087 + C50136 * C50137 * C50139) / C49936;
    const double C133 = (-2 * C50074 * C50144) / C49936 -
                        (C50074 * (C50151 * C50087 + C50144)) / C49936;
    const double C306 = -(C50232 * (C50151 * C50087 + C50144)) / C49936;
    const double C308 = -(C50232 * C50074 * C50144) / C49936;
    const double C313 = -(C50144 * C50259 + C50136 * C50137 * C50139) / C49936;
    const double C499 = -(C50069 * (C50069 * C50144 + C50140 * ce) +
                          C50136 * C50137 * C50139 + C50069 * C50140 * ce) /
                        C49936;
    const double C501 =
        -(C50069 * C50074 * C50144 + C50074 * C50140 * ce) / C49936;
    const double C505 = -(C50069 * (C50151 * C50087 + C50144) +
                          (C50140 + C50075 * C50087) * ce) /
                        C49936;
    const double C967 =
        -(C50069 * C50232 * C50144 + C50232 * C50140 * ce) / C49936;
    const double C1195 = (-2 * C50232 * C50144) / C49936 -
                         (C50232 * (C50151 * C50259 + C50144)) / C49936;
    const double C1651 = -(C50069 * (C50151 * C50259 + C50144) +
                           (C50140 + C50075 * C50259) * ce) /
                         C49936;
    const double C155 = C51314 * C142;
    const double C2601 = C51314 * C327;
    const double C50090 = C50084 + C50089;
    const double C50099 = C50093 + C50098;
    const double C50172 = C50093 * C50087;
    const double C50199 = C50074 * C50093;
    const double C50341 = C50093 * C50259;
    const double C50518 = C50232 * C50093;
    const double C50591 = C50093 * ae;
    const double C50587 = C50093 * C50072;
    const double C50586 = C50069 * C50093;
    const double C50585 = C50093 * ce;
    const double C50164 = C50162 * C50087;
    const double C50173 = C50074 * C50162;
    const double C50302 = C50162 * C50259;
    const double C50342 = C50232 * C50162;
    const double C50426 = C50069 * C50162;
    const double C50580 = C50162 * ce;
    const double C50163 = C50160 * C50087;
    const double C50169 = C50074 * C50160;
    const double C50300 = C50160 * C50259;
    const double C50338 = C50232 * C50160;
    const double C50422 = C50069 * C50160;
    const double C50581 = ae * C50160;
    const double C50116 = C50108 + C50115;
    const double C50214 = C50210 * C50087;
    const double C50364 = C50074 * C50210;
    const double C50704 = C50210 * C50259;
    const double C50772 = C50232 * C50210;
    const double C50838 = C50069 * C50210;
    const double C50212 = C50206 * C50087;
    const double C50360 = C50074 * C50206;
    const double C50698 = C50206 * C50259;
    const double C50768 = C50232 * C50206;
    const double C50830 = C50069 * C50206;
    const double C50161 = C50075 + C50158;
    const double C50177 = 2 * C50171;
    const double C50248 = C50232 * C50171;
    const double C50276 = C50171 * ae;
    const double C50274 = C50069 * C50171;
    const double C50273 = C50171 * ce;
    const double C50304 = C50075 + C50301;
    const double C50346 = 2 * C50340;
    const double C50390 = C50340 * ae;
    const double C50388 = C50069 * C50340;
    const double C50387 = C50340 * ce;
    const double C50433 = C50075 + C50425;
    const double C50435 = C50424 * ae;
    const double C50432 = C50424 * ce;
    const double C50588 = 2 * C50424;
    const double C314 = (C50074 * C50145 + C50154 * C50259) / C50002;
    const double C50428 = C50419 / C49936;
    const double C315 = -(C50153 * C50259 + C50074 * C50144) / C49936;
    const double C50429 = C50420 / C50078;
    const double C50208 = C50093 + C50200;
    const double C50368 = C50362 * C50259;
    const double C50550 = C50232 * C50362;
    const double C50645 = C50362 * ae;
    const double C50641 = C50362 * C50072;
    const double C50640 = C50069 * C50362;
    const double C50639 = C50362 * ce;
    const double C50708 = C50093 + C50701;
    const double C50784 = C50769 * ae;
    const double C50782 = C50769 * C50072;
    const double C50781 = C50069 * C50769;
    const double C50780 = C50769 * ce;
    const double C50851 = C50093 + C50833;
    const double C50853 = C50832 * ae;
    const double C50850 = C50832 * ce;
    const double C50187 = C50162 + C50184;
    const double C50209 = 2 * C50202;
    const double C50309 = C50202 * C50259;
    const double C50363 = C50232 * C50202;
    const double C50454 = C50069 * C50202;
    const double C50634 = C50202 * ce;
    const double C50349 = C50162 + C50343;
    const double C50527 = C50069 * C50519;
    const double C50703 = 2 * C50519;
    const double C50764 = C50519 * ce;
    const double C50844 = C50825 / C49936;
    const double C50185 = C50182 + C50160;
    const double C50205 = -2 * C50196;
    const double C50307 = C50196 * C50259;
    const double C50359 = C50232 * C50196;
    const double C50450 = C50069 * C50196;
    const double C50635 = ae * C50196;
    const double C50345 = C50339 + C50160;
    const double C50523 = C50069 * C50517;
    const double C50697 = -2 * C50517;
    const double C50765 = ae * C50517;
    const double C50845 = C50826 / C50078;
    const double C51163 = C51162 * C51157;
    const double C51167 = C51166 * C51162;
    const double C51429 = C51162 * C51158;
    const double C51426 = C51162 / C50027;
    const double C17435 = C51454 * C51162;
    const double C51186 = C51185 * C51180;
    const double C51190 = C51189 * C51185;
    const double C51436 = C51185 * C51181;
    const double C51433 = C51185 / C49961;
    const double C1113 = C51441 * C51185;
    const double C51250 = C51202 * C51248;
    const double C51253 = C51189 * C51202;
    const double C51445 = C51202 * C51249;
    const double C51440 = C51202 / C49961;
    const double C291 = C51441 * C51202;
    const double C51349 = C51303 * C51347;
    const double C51352 = C51166 * C51303;
    const double C51458 = C51303 * C51348;
    const double C51453 = C51303 / C50027;
    const double C2438 = C51454 * C51303;
    const double C49966 = C49941 / C49938;
    const double C49963 = 2 * C49941;
    const double C485 = ((0 * ce) / C49936 - C49941 / C49938) / (2 * C49936) +
                        (0 * ce) / C49936;
    const double C797 =
        ((C51217 - (C49934 * 2 * C49941) / C49936) * ce) / C49936 -
        C49935 / C49940;
    const double C798 = (0 * ce) / C49936 - C49941 / C49938;
    const double C1762 =
        (-C49935 / C49936) / (2 * C49936) -
        ((C51217 - (C49934 * 2 * C49941) / C49936) * de) / C49936;
    const double C1763 =
        (-(2 * C49941) / C49936) / (2 * C49936) - (0 * de) / C49936;
    const double C51451 = C51278 / C49940;
    const double C51450 = C51278 * C51277;
    const double C51444 = C51278 / C49936;
    const double C481 = (2 * C51189 * C51278) / C49936;
    const double C484 =
        (((C51217 - (C49934 * 2 * C49941) / C49936) * ce) / C49936 -
         C49935 / C49940) /
            (2 * C49936) +
        ((C49934 * ((0 * ce) / C49936 - C49941 / C49938) + C51281) * ce) /
            C49936;
    const double C51452 = C51281 * C51277;
    const double C1953 = C51281 / C51439;
    const double C2216 = C51281 / C49961;
    const double C51475 = C51449 / C49936;
    const double C480 = (C51217 * std::pow(C51276, 2)) / C49938 + C51442;
    const double C50032 = C50007 / C50004;
    const double C50029 = 2 * C50007;
    const double C5416 = ((0 * ae) / C50002 - C50007 / C50004) / (2 * C50002) +
                         (0 * ae) / C50002;
    const double C10923 =
        ((C51314 - (C50000 * 2 * C50007) / C50002) * ae) / C50002 -
        C50001 / C50006;
    const double C10924 = (0 * ae) / C50002 - C50007 / C50004;
    const double C33490 =
        (-C50001 / C50002) / (2 * C50002) -
        ((C51314 - (C50000 * 2 * C50007) / C50002) * be) / C50002;
    const double C33491 =
        (-(2 * C50007) / C50002) / (2 * C50002) - (0 * be) / C50002;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C345 = C117 * C296;
    const double C529 = C117 * C488;
    const double C2603 = C117 * C298;
    const double C2600 = C117 * C310;
    const double C2598 = C117 * C297;
    const double C3364 = C117 * C961;
    const double C51464 = C51375 / C50006;
    const double C51463 = C51375 * C51374;
    const double C51457 = C51375 / C50002;
    const double C5412 = (2 * C51166 * C51375) / C50002;
    const double C5415 =
        (((C51314 - (C50000 * 2 * C50007) / C50002) * ae) / C50002 -
         C50001 / C50006) /
            (2 * C50002) +
        ((C50000 * ((0 * ae) / C50002 - C50007 / C50004) + C51378) * ae) /
            C50002;
    const double C51465 = C51378 * C51374;
    const double C39110 = C51378 / C51432;
    const double C44473 = C51378 / C50027;
    const double C51481 = C51462 / C50002;
    const double C5411 = (C51314 * std::pow(C51373, 2)) / C50004 + C51455;
    const double C50082 = C50081 * C50070;
    const double C502 =
        (C50074 * C50145 + C50069 * (C50069 * C50154 + C50149 * ae) +
         C50069 * C50149 * ae) /
        C50002;
    const double C503 = -(C50069 * (C50069 * C50153 + C50149 * ce) +
                          C50074 * C50144 + C50069 * C50149 * ce) /
                        C49936;
    const double C968 =
        (C50069 * C50232 * C50154 + C50232 * C50149 * ae) / C50002;
    const double C969 =
        -(C50069 * C50232 * C50153 + C50232 * C50149 * ce) / C49936;
    const double C299 = C50074 * C50140 + C50149 * C50259;
    const double C489 = C50074 * C50140 + C50149 * C50072;
    const double C962 = C50069 * C50232 * C50149;
    const double C1187 =
        2 * C50232 * C50149 + C50232 * (C50149 + C50171 * C50259);
    const double C1647 = C50069 * (C50149 + C50171 * C50259);
    const double C1959 =
        2 * C50069 * C50149 + C50069 * (C50149 + C50171 * C50072);
    const double C1303 =
        (C50232 * C50145 + C50069 * (C50069 * C50245 + C50244 * ae) +
         C50069 * C50244 * ae) /
        C50002;
    const double C1304 = -(C50069 * (C50069 * C50243 + C50244 * ce) +
                           C50232 * C50144 + C50069 * C50244 * ce) /
                         C49936;
    const double C1299 = C50232 * C50140 + C50244 * C50072;
    const double C4778 =
        2 * C50069 * C50244 + C50069 * (C50244 + C50340 * C50072);
    const double C50270 = C50267 + C50268;
    const double C50269 = C50264 + C50265;
    const double C156 = C117 * C122;
    const double C341 = C117 * C295;
    const double C539 = C117 * C490;
    const double C2614 = C117 * C1188;
    const double C3371 = C117 * C1646;
    const double C153 = C51314 * C130;
    const double C157 = C51314 * C132;
    const double C342 = C51314 * C307;
    const double C346 = C51314 * C309;
    const double C2604 = C51314 * C312;
    const double C530 = C51314 * C500;
    const double C10929 = C51378 * C500;
    const double C33496 = C51378 * C500;
    const double C540 = C51314 * C504;
    const double C10937 = C51378 * C504;
    const double C33504 = C51378 * C504;
    const double C3365 = C51314 * C966;
    const double C14006 = C51378 * C966;
    const double C36493 = C51378 * C966;
    const double C2615 = C51314 * C1196;
    const double C3372 = C51314 * C1650;
    const double C14020 = C51378 * C1650;
    const double C36501 = C51378 * C1650;
    const double C154 = C117 * C131;
    const double C158 = C117 * C133;
    const double C339 = C117 * C306;
    const double C343 = C117 * C308;
    const double C2605 = C117 * C313;
    const double C531 = C117 * C501;
    const double C541 = C117 * C505;
    const double C3366 = C117 * C967;
    const double C2612 = C117 * C1195;
    const double C3373 = C117 * C1651;
    const double C50091 = C50090 * C50070;
    const double C50100 = C50099 * C50070;
    const double C50178 = C50084 + C50172;
    const double C50207 = 2 * C50199;
    const double C50308 = C50199 * C50259;
    const double C50361 = C50232 * C50199;
    const double C50455 = C50199 * ae;
    const double C50453 = C50199 * C50072;
    const double C50452 = C50069 * C50199;
    const double C50451 = C50199 * ce;
    const double C50347 = C50084 + C50341;
    const double C50528 = C50518 * ae;
    const double C50526 = C50518 * C50072;
    const double C50525 = C50069 * C50518;
    const double C50524 = C50518 * ce;
    const double C50700 = 2 * C50518;
    const double C50601 = C50590 + C50591;
    const double C50600 = C50084 + C50587;
    const double C50602 = C50586 * ae;
    const double C50599 = C50586 * ce;
    const double C50834 = 2 * C50586;
    const double C50598 = C50584 + C50585;
    const double C50166 = C50152 + C50164;
    const double C50179 = 2 * C50173;
    const double C50249 = C50232 * C50173;
    const double C50275 = C50069 * C50173;
    const double C50447 = C50173 * ce;
    const double C1194 =
        (2 * C50232 * C50154 + C50232 * (C50154 + C50173 * C50259)) / C50002;
    const double C1652 = (C50069 * (C50154 + C50173 * C50259) +
                          (C50149 + C50171 * C50259) * ae) /
                         C50002;
    const double C50305 = C50152 + C50302;
    const double C50348 = 2 * C50342;
    const double C50389 = C50069 * C50342;
    const double C50514 = C50342 * ce;
    const double C50434 = C50426 + C50427;
    const double C50594 = C50580 / C49936;
    const double C50165 = C50163 + C50151;
    const double C50175 = -2 * C50169;
    const double C50247 = C50232 * C50169;
    const double C50272 = C50069 * C50169;
    const double C50448 = ae * C50169;
    const double C1193 = (-2 * C50232 * C50153) / C49936 -
                         (C50232 * (C50169 * C50259 + C50153)) / C49936;
    const double C1653 = -(C50069 * (C50169 * C50259 + C50153) +
                           (C50149 + C50171 * C50259) * ce) /
                         C49936;
    const double C50303 = C50300 + C50151;
    const double C50344 = -2 * C50338;
    const double C50386 = C50069 * C50338;
    const double C50515 = ae * C50338;
    const double C50431 = C50422 + C50423;
    const double C50595 = C50581 / C50078;
    const double C50117 = C50116 * C50070;
    const double C50217 = C50180 + C50214;
    const double C50370 = C50364 * C50259;
    const double C50551 = C50232 * C50364;
    const double C50644 = C50069 * C50364;
    const double C50709 = C50180 + C50704;
    const double C50783 = C50069 * C50772;
    const double C50852 = C50838 + C50839;
    const double C50215 = C50212 + C50176;
    const double C50366 = C50360 * C50259;
    const double C50549 = C50232 * C50360;
    const double C50638 = C50069 * C50360;
    const double C50707 = C50698 + C50176;
    const double C50779 = C50069 * C50768;
    const double C50849 = C50830 + C50831;
    const double C123 = 3 * (C50140 + C50075 * C50087) +
                        C50074 * (2 * C50149 + C50074 * C50161);
    const double C294 = C50232 * (2 * C50149 + C50074 * C50161);
    const double C300 = C50140 + C50075 * C50087 + C50161 * C50259;
    const double C491 = C50140 + C50075 * C50087 + C50161 * C50072;
    const double C492 = C50069 * (2 * C50149 + C50074 * C50161);
    const double C963 = C50069 * C50232 * C50161;
    const double C1300 = C50232 * C50149 + C50248 * C50072;
    const double C2585 = 3 * (C50140 + C50075 * C50259) +
                         C50232 * (2 * C50244 + C50232 * C50304);
    const double C2805 = C50140 + C50075 * C50259 + C50304 * C50072;
    const double C3349 = C50069 * (2 * C50244 + C50232 * C50304);
    const double C5799 = 3 * (C50140 + C50075 * C50072) +
                         C50069 * (2 * C50266 + C50069 * C50433);
    const double C348 = C51314 * C314;
    const double C50436 = -C50428;
    const double C349 = C117 * C315;
    const double C50213 = C50074 * C50208;
    const double C50315 = C50208 * C50259;
    const double C50483 = C50208 * ae;
    const double C50481 = C50208 * C50072;
    const double C50480 = C50069 * C50208;
    const double C50479 = C50208 * ce;
    const double C50504 = C50232 * C50208;
    const double C50373 = C50199 + C50368;
    const double C50560 = C50550 * ae;
    const double C50558 = C50550 * C50072;
    const double C50557 = C50069 * C50550;
    const double C50556 = C50550 * ce;
    const double C50654 = C50199 + C50641;
    const double C50656 = C50640 * ae;
    const double C50653 = C50640 * ce;
    const double C50711 = C50232 * C50708;
    const double C50742 = C50708 * ae;
    const double C50740 = C50708 * C50072;
    const double C50739 = C50069 * C50708;
    const double C50738 = C50708 * ce;
    const double C50790 = C50518 + C50782;
    const double C50792 = C50781 * ae;
    const double C50789 = C50781 * ce;
    const double C50861 = C50851 * ae;
    const double C50859 = C50069 * C50851;
    const double C50858 = C50851 * ce;
    const double C50189 = C50074 * C50187;
    const double C50201 = 3 * C50187;
    const double C50253 = C50232 * C50187;
    const double C50283 = C50069 * C50187;
    const double C50475 = C50187 * ce;
    const double C50312 = C50173 + C50309;
    const double C50369 = 2 * C50363;
    const double C50398 = C50069 * C50363;
    const double C50546 = C50363 * ce;
    const double C50648 = C50634 / C49936;
    const double C50353 = C50232 * C50349;
    const double C50406 = C50069 * C50349;
    const double C50702 = 3 * C50349;
    const double C50734 = C50349 * ce;
    const double C50775 = C50764 / C49936;
    const double C50856 = -C50844;
    const double C50188 = C50074 * C50185;
    const double C50195 = -3 * C50185;
    const double C50251 = C50232 * C50185;
    const double C50280 = C50069 * C50185;
    const double C50476 = ae * C50185;
    const double C50211 = C50205 / C49936;
    const double C50310 = C50307 + C50169;
    const double C50365 = -2 * C50359;
    const double C50395 = C50069 * C50359;
    const double C50547 = ae * C50359;
    const double C50649 = C50635 / C50078;
    const double C50351 = C50232 * C50345;
    const double C50403 = C50069 * C50345;
    const double C50696 = -3 * C50345;
    const double C50735 = ae * C50345;
    const double C50706 = C50697 / C49936;
    const double C50776 = C50765 / C50078;
    const double C51430 = C51163 / C50006;
    const double C51428 = C51163 / C50002;
    const double C51427 = C51163 * C51158;
    const double C17434 = (2 * C51166 * C51163) / C50002;
    const double C51431 = C51167 * C51158;
    const double C110 = C51167 / C51432;
    const double C8259 = C51167 / C50027;
    const double C51467 = C51429 / C50002;
    const double C17433 = (C51162 * std::pow(C51157, 2)) / C50004 + C51426;
    const double C51437 = C51186 / C49940;
    const double C51435 = C51186 / C49936;
    const double C51434 = C51186 * C51181;
    const double C1112 = (2 * C51189 * C51186) / C49936;
    const double C51438 = C51190 * C51181;
    const double C116 = C51190 / C51439;
    const double C682 = C51190 / C49961;
    const double C51470 = C51436 / C49936;
    const double C1111 = (C51185 * std::pow(C51180, 2)) / C49938 + C51433;
    const double C51447 = C51250 / C49940;
    const double C51446 = C51250 * C51249;
    const double C51443 = C51250 / C49936;
    const double C290 = (2 * C51189 * C51250) / C49936;
    const double C51448 = C51253 * C51249;
    const double C1183 = C51253 / C51439;
    const double C1415 = C51253 / C49961;
    const double C51472 = C51445 / C49936;
    const double C289 = (C51202 * std::pow(C51248, 2)) / C49938 + C51440;
    const double C51460 = C51349 / C50006;
    const double C51459 = C51349 * C51348;
    const double C51456 = C51349 / C50002;
    const double C2437 = (2 * C51166 * C51349) / C50002;
    const double C51461 = C51352 * C51348;
    const double C20038 = C51352 / C51432;
    const double C24657 = C51352 / C50027;
    const double C51478 = C51458 / C50002;
    const double C2436 = (C51303 * std::pow(C51347, 2)) / C50004 + C51453;
    const double C49973 = C49970 - C49966;
    const double C49969 = C49934 * C49963;
    const double C51476 = C51450 / C49938;
    const double C483 =
        (((0 - (C49934 * C49935) / C49936) * ce) / C49936 - (0 * de) / C49940) /
            (2 * C49936) +
        ((C49934 * (((C51217 - (C49934 * 2 * C49941) / C49936) * ce) / C49936 -
                    C49935 / C49940) +
          C51444) *
         ce) /
            C49936 +
        (0 * ce) / C49936 - C49941 / C49938;
    const double C51477 = C51452 / C49936;
    const double C1760 = -C51475;
    const double C50039 = C50036 - C50032;
    const double C50035 = C50000 * C50029;
    const double C10948 = C10923 * C122;
    const double C10944 = C10923 * C133;
    const double C10938 = C10923 * C131;
    const double C10934 = C10923 * C121;
    const double C10930 = C10923 * C129;
    const double C10926 = C10923 * C120;
    const double C11150 = C10923 * C315;
    const double C11144 = C10923 * C296;
    const double C11140 = C10923 * C308;
    const double C11136 = C10923 * C295;
    const double C11132 = C10923 * C306;
    const double C11346 = C10923 * C505;
    const double C11342 = C10923 * C490;
    const double C11330 = C10923 * C501;
    const double C11326 = C10923 * C488;
    const double C14021 = C10923 * C298;
    const double C14017 = C10923 * C313;
    const double C14007 = C10923 * C310;
    const double C14003 = C10923 * C297;
    const double C14922 = C10923 * C967;
    const double C14918 = C10923 * C961;
    const double C15286 = C10923 * C1195;
    const double C15282 = C10923 * C1188;
    const double C16150 = C10923 * C1651;
    const double C16146 = C10923 * C1646;
    const double C10940 = C10924 * C505;
    const double C10936 = C10924 * C490;
    const double C10932 = C10924 * C501;
    const double C10928 = C10924 * C488;
    const double C14019 = C10924 * C1646;
    const double C14015 = C10924 * C1651;
    const double C14009 = C10924 * C967;
    const double C14005 = C10924 * C961;
    const double C33515 = C33490 * C122;
    const double C33511 = C33490 * C133;
    const double C33505 = C33490 * C131;
    const double C33501 = C33490 * C121;
    const double C33497 = C33490 * C129;
    const double C33493 = C33490 * C120;
    const double C33717 = C33490 * C315;
    const double C33711 = C33490 * C296;
    const double C33707 = C33490 * C308;
    const double C33703 = C33490 * C295;
    const double C33699 = C33490 * C306;
    const double C33913 = C33490 * C505;
    const double C33909 = C33490 * C490;
    const double C33897 = C33490 * C501;
    const double C33893 = C33490 * C488;
    const double C36512 = C33490 * C1188;
    const double C36508 = C33490 * C1195;
    const double C36502 = C33490 * C313;
    const double C36498 = C33490 * C298;
    const double C36494 = C33490 * C310;
    const double C36490 = C33490 * C297;
    const double C37196 = C33490 * C1651;
    const double C37192 = C33490 * C1646;
    const double C37188 = C33490 * C967;
    const double C37184 = C33490 * C961;
    const double C33507 = C33491 * C505;
    const double C33503 = C33491 * C490;
    const double C33499 = C33491 * C501;
    const double C33495 = C33491 * C488;
    const double C36504 = C33491 * C1651;
    const double C36500 = C33491 * C1646;
    const double C36496 = C33491 * C967;
    const double C36492 = C33491 * C961;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2628 = C2600 + C2601;
    const double C2627 = C2598 + C2599;
    const double C51482 = C51463 / C50004;
    const double C10949 = C51457 * C132;
    const double C10939 = C51457 * C142;
    const double C10935 = C51457 * C130;
    const double C10931 = C51457 * C141;
    const double C10927 = C51457 * C128;
    const double C11147 = C51457 * C314;
    const double C11145 = C51457 * C309;
    const double C11137 = C51457 * C307;
    const double C11343 = C51457 * C504;
    const double C11327 = C51457 * C500;
    const double C14022 = C51457 * C312;
    const double C14008 = C51457 * C327;
    const double C14004 = C51457 * C311;
    const double C14919 = C51457 * C966;
    const double C15283 = C51457 * C1196;
    const double C16147 = C51457 * C1650;
    const double C5414 =
        (((0 - (C50000 * C50001) / C50002) * ae) / C50002 - (0 * be) / C50006) /
            (2 * C50002) +
        ((C50000 * (((C51314 - (C50000 * 2 * C50007) / C50002) * ae) / C50002 -
                    C50001 / C50006) +
          C51457) *
         ae) /
            C50002 +
        (0 * ae) / C50002 - C50007 / C50004;
    const double C5439 = C5412 * C504;
    const double C5421 = C5412 * C500;
    const double C22077 = C5412 * C1650;
    const double C22059 = C5412 * C966;
    const double C5438 = C5415 * C490;
    const double C5432 = C5415 * C505;
    const double C5426 = C5415 * C501;
    const double C5420 = C5415 * C488;
    const double C22076 = C5415 * C1646;
    const double C22070 = C5415 * C1651;
    const double C22064 = C5415 * C967;
    const double C22058 = C5415 * C961;
    const double C51483 = C51465 / C50002;
    const double C33488 = -C51481;
    const double C5443 = C5411 * C132;
    const double C5441 = C5411 * C130;
    const double C5435 = C5411 * C142;
    const double C5425 = C5411 * C141;
    const double C5419 = C5411 * C128;
    const double C5631 = C5411 * C314;
    const double C5629 = C5411 * C309;
    const double C5817 = C5411 * C500;
    const double C5995 = C5411 * C307;
    const double C6159 = C5411 * C504;
    const double C22079 = C5411 * C312;
    const double C22063 = C5411 * C327;
    const double C22057 = C5411 * C311;
    const double C22729 = C5411 * C966;
    const double C22987 = C5411 * C1196;
    const double C23659 = C5411 * C1650;
    const double C143 =
        (-2 * C50074 * C50082) / C50078 +
        C50074 * ((-((C50076 * C50077 + C50072 * bs[5] * std::pow(C50068, 5)) *
                     C50070 * std::pow(C50074, 2)) /
                   C49936) /
                      C50002 -
                  C50082 / C50078);
    const double C326 = (-((yP - yQ) * C50074 * C50082) / C49936) / C50002;
    const double C328 =
        (-(C50082 * std::pow(yP - yQ, 2)) / C49936) / C50002 -
        ((bs[2] * std::pow(C50065, 2) + C50072 * C50067 * C50071) * C50070) /
            C50078;
    const double C517 =
        (-(ae * (C50069 * C50144 + C50140 * ce)) / C49936) / C50002 -
        ((C50140 + C50072 * C50067 * C50071) * C50070) / C50078 -
        ((C50069 * C50145 + C50140 * ae) * ce) / C50078 +
        C50069 * ((-(C50145 * ce) / C49936) / C50002 - (ae * C50144) / C50078 -
                  (C50069 * C50082) / C50078);
    const double C518 = (-(C50074 * C50145 * ce) / C49936) / C50002 -
                        (ae * C50074 * C50144) / C50078 -
                        (C50069 * C50074 * C50082) / C50078;
    const double C976 = (-(C50232 * C50145 * ce) / C49936) / C50002 -
                        (ae * C50232 * C50144) / C50078 -
                        (C50069 * C50232 * C50082) / C50078;
    const double C534 = C51314 * C502;
    const double C5423 = C5413 * C502;
    const double C5825 = C5411 * C502;
    const double C5815 = C5412 * C502;
    const double C11333 = C51457 * C502;
    const double C11325 = C51378 * C502;
    const double C33892 = C51378 * C502;
    const double C44483 = C44473 * C502;
    const double C535 = C117 * C503;
    const double C5428 = C5416 * C503;
    const double C5820 = C5415 * C503;
    const double C11336 = C10923 * C503;
    const double C11328 = C10924 * C503;
    const double C33903 = C33490 * C503;
    const double C33895 = C33491 * C503;
    const double C983 = C51314 * C968;
    const double C5627 = C5412 * C968;
    const double C6375 = C5411 * C968;
    const double C11143 = C51378 * C968;
    const double C11897 = C51457 * C968;
    const double C33710 = C51378 * C968;
    const double C986 = C117 * C969;
    const double C5620 = C5415 * C969;
    const double C11138 = C10924 * C969;
    const double C11900 = C10923 * C969;
    const double C33705 = C33491 * C969;
    const double C34467 = C33490 * C969;
    const double C347 = C117 * C299;
    const double C11146 = C10923 * C299;
    const double C33713 = C33490 * C299;
    const double C533 = C117 * C489;
    const double C5422 = C5416 * C489;
    const double C5814 = C5415 * C489;
    const double C11332 = C10923 * C489;
    const double C11324 = C10924 * C489;
    const double C33899 = C33490 * C489;
    const double C33891 = C33491 * C489;
    const double C982 = C117 * C962;
    const double C5626 = C5415 * C962;
    const double C11142 = C10924 * C962;
    const double C11896 = C10923 * C962;
    const double C33709 = C33491 * C962;
    const double C34463 = C33490 * C962;
    const double C2610 = C117 * C1187;
    const double C14027 = C10923 * C1187;
    const double C36514 = C33490 * C1187;
    const double C2828 = C117 * C1647;
    const double C5632 = C5415 * C1647;
    const double C11148 = C10924 * C1647;
    const double C14932 = C10923 * C1647;
    const double C33715 = C33491 * C1647;
    const double C37198 = C33490 * C1647;
    const double C5826 = C5415 * C1959;
    const double C5812 = C5416 * C1959;
    const double C11334 = C10924 * C1959;
    const double C33901 = C33491 * C1959;
    const double C3827 = C51314 * C1303;
    const double C14917 = C51378 * C1303;
    const double C15489 = C51457 * C1303;
    const double C22061 = C5413 * C1303;
    const double C22727 = C5412 * C1303;
    const double C23155 = C5411 * C1303;
    const double C37183 = C51378 * C1303;
    const double C47437 = C44473 * C1303;
    const double C3828 = C117 * C1304;
    const double C14920 = C10924 * C1304;
    const double C15492 = C10923 * C1304;
    const double C22066 = C5416 * C1304;
    const double C22732 = C5415 * C1304;
    const double C37186 = C33491 * C1304;
    const double C37630 = C33490 * C1304;
    const double C3826 = C117 * C1299;
    const double C14916 = C10924 * C1299;
    const double C15488 = C10923 * C1299;
    const double C22060 = C5416 * C1299;
    const double C22726 = C5415 * C1299;
    const double C37182 = C33491 * C1299;
    const double C37626 = C33490 * C1299;
    const double C15490 = C10924 * C4778;
    const double C22724 = C5416 * C4778;
    const double C23156 = C5415 * C4778;
    const double C37628 = C33491 * C4778;
    const double C1962 = (2 * (C50069 * C50145 + C50140 * ae) +
                          C50069 * (C50145 + C50069 * C50270 + C50266 * ae) +
                          (C50140 + C50075 * C50072) * ae) /
                         C50002;
    const double C1963 =
        (-2 * (C50069 * C50144 + C50140 * ce)) / C49936 -
        (C50069 * (C50069 * C50269 + C50144 + C50266 * ce)) / C49936 -
        ((C50140 + C50075 * C50072) * ce) / C49936;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C362 = C341 + C342;
    const double C364 = C345 + C346;
    const double C2629 = C2603 + C2604;
    const double C557 = C529 + C530;
    const double C561 = C539 + C540;
    const double C3384 = C3364 + C3365;
    const double C2635 = C2614 + C2615;
    const double C3387 = C3371 + C3372;
    const double C171 = C154 + C155;
    const double C50096 = C50091 / C50078;
    const double C50240 = C50074 * C50091;
    const double C50385 = C50232 * C50091;
    const double C50421 = C50069 * C50091;
    const double C144 =
        3 * ((-(C50091 * C50087) / C49936) / C50002 - C50082 / C50078) +
        C50074 *
            ((-2 * C50074 * C50091) / C50078 +
             C50074 *
                 ((-((C50085 * C50086 + C50072 * bs[6] * std::pow(C50065, 6)) *
                     C50070 * C50087) /
                   C49936) /
                      C50002 -
                  C50091 / C50078));
    const double C325 =
        (yP - yQ) * ((-(C50091 * C50087) / C49936) / C50002 - C50082 / C50078);
    const double C329 =
        (-(C50074 * C50091 * std::pow(yP - yQ, 2)) / C49936) / C50002 -
        (C50074 * C50082) / C50078;
    const double C519 =
        (-(ae * (C50069 * C50153 + C50149 * ce)) / C49936) / C50002 -
        (C50074 * C50082) / C50078 -
        ((C50069 * C50154 + C50149 * ae) * ce) / C50078 +
        C50069 * ((-(C50154 * ce) / C49936) / C50002 - (ae * C50153) / C50078 -
                  (C50069 * C50074 * C50091) / C50078);
    const double C520 =
        (-((C50145 + C50152 * C50087) * ce) / C49936) / C50002 -
        (ae * (C50151 * C50087 + C50144)) / C50078 +
        C50069 * ((-(C50091 * C50087) / C49936) / C50002 - C50082 / C50078);
    const double C977 = (-(C50232 * C50154 * ce) / C49936) / C50002 -
                        (ae * C50232 * C50153) / C50078 -
                        (C50069 * C50232 * C50074 * C50091) / C50078;
    const double C1200 =
        (-2 * C50232 * C50082) / C50078 +
        C50232 * ((-(C50091 * std::pow(C50232, 2)) / C49936) / C50002 -
                  C50082 / C50078);
    const double C1311 =
        (-(ae * (C50069 * C50243 + C50244 * ce)) / C49936) / C50002 -
        (C50232 * C50082) / C50078 -
        ((C50069 * C50245 + C50244 * ae) * ce) / C50078 +
        C50069 * ((-(C50245 * ce) / C49936) / C50002 - (ae * C50243) / C50078 -
                  (C50069 * C50232 * C50091) / C50078);
    const double C1658 =
        (-((C50145 + C50152 * C50259) * ce) / C49936) / C50002 -
        (ae * (C50151 * C50259 + C50144)) / C50078 +
        C50069 * ((-(C50091 * C50259) / C49936) / C50002 - C50082 / C50078);
    const double C1970 =
        2 * ((-(C50145 * ce) / C49936) / C50002 - (ae * C50144) / C50078 -
             (C50069 * C50082) / C50078) -
        (ae * (C50069 * C50269 + C50144 + C50266 * ce)) / C50078 -
        ((C50145 + C50069 * C50270 + C50266 * ae) * ce) / C50078 +
        C50069 *
            ((-(ae * C50269) / C49936) / C50002 - C50082 / C50078 -
             (C50270 * ce) / C50078 +
             C50069 * ((-(C50152 * ce) / C49936) / C50002 -
                       (ae * C50151) / C50078 - (C50069 * C50091) / C50078));
    const double C50101 = C50100 * C50087;
    const double C50111 = C50100 / C50078;
    const double C50107 = C50074 * C50100;
    const double C50332 = C50100 * C50259;
    const double C50516 = C50232 * C50100;
    const double C50582 = C50069 * C50100;
    const double C50183 = C50074 * C50178;
    const double C50198 = 3 * C50178;
    const double C50252 = C50232 * C50178;
    const double C50284 = C50178 * ae;
    const double C50282 = C50069 * C50178;
    const double C50281 = C50178 * ce;
    const double C1186 =
        2 * C50232 * C50161 + C50232 * (C50161 + C50178 * C50259);
    const double C1648 = C50069 * (C50161 + C50178 * C50259);
    const double C1960 =
        2 * C50069 * C50161 + C50069 * (C50161 + C50178 * C50072);
    const double C50311 = C50171 + C50308;
    const double C50367 = 2 * C50361;
    const double C50399 = C50361 * ae;
    const double C50397 = C50069 * C50361;
    const double C50396 = C50361 * ce;
    const double C4779 =
        2 * C50069 * C50248 + C50069 * (C50248 + C50361 * C50072);
    const double C50462 = C50454 + C50455;
    const double C50461 = C50171 + C50453;
    const double C50463 = C50452 * ae;
    const double C50460 = C50452 * ce;
    const double C50642 = 2 * C50452;
    const double C50459 = C50450 + C50451;
    const double C50352 = C50232 * C50347;
    const double C50407 = C50347 * ae;
    const double C50405 = C50069 * C50347;
    const double C50404 = C50347 * ce;
    const double C50699 = 3 * C50347;
    const double C4780 =
        2 * C50069 * C50304 + C50069 * (C50304 + C50347 * C50072);
    const double C50534 = C50527 + C50528;
    const double C50533 = C50340 + C50526;
    const double C50535 = C50525 * ae;
    const double C50532 = C50525 * ce;
    const double C50770 = 2 * C50525;
    const double C50531 = C50523 + C50524;
    const double C50608 = C50069 * C50601;
    const double C50837 = 2 * C50601;
    const double C50824 = C50601 * ce;
    const double C50609 = C50600 * ae;
    const double C50607 = C50069 * C50600;
    const double C50606 = C50600 * ce;
    const double C50835 = 3 * C50600;
    const double C50605 = C50069 * C50598;
    const double C50829 = -2 * C50598;
    const double C50823 = ae * C50598;
    const double C135 = (3 * (C50145 + C50152 * C50087) +
                         C50074 * (2 * C50154 + C50074 * C50166)) /
                        C50002;
    const double C305 = (C50232 * (2 * C50154 + C50074 * C50166)) / C50002;
    const double C316 = (C50145 + C50152 * C50087 + C50166 * C50259) / C50002;
    const double C506 =
        (C50145 + C50152 * C50087 + C50069 * (C50069 * C50166 + C50161 * ae) +
         C50069 * C50161 * ae) /
        C50002;
    const double C508 = (C50069 * (2 * C50154 + C50074 * C50166) +
                         (2 * C50149 + C50074 * C50161) * ae) /
                        C50002;
    const double C970 =
        (C50069 * C50232 * C50166 + C50232 * C50161 * ae) / C50002;
    const double C1192 =
        (2 * C50232 * C50166 + C50232 * (C50166 + C50187 * C50259)) / C50002;
    const double C1654 = (C50069 * (C50166 + C50187 * C50259) +
                          (C50161 + C50178 * C50259) * ae) /
                         C50002;
    const double C1305 =
        (C50232 * C50154 + C50069 * (C50069 * C50249 + C50248 * ae) +
         C50069 * C50248 * ae) /
        C50002;
    const double C50278 = C50275 + C50276;
    const double C50456 = C50447 / C49936;
    const double C2611 = C51314 * C1194;
    const double C14028 = C51457 * C1194;
    const double C2829 = C51314 * C1652;
    const double C5633 = C5412 * C1652;
    const double C11149 = C51378 * C1652;
    const double C14933 = C51457 * C1652;
    const double C33716 = C51378 * C1652;
    const double C2588 = (3 * (C50145 + C50152 * C50259) +
                          C50232 * (2 * C50245 + C50232 * C50305)) /
                         C50002;
    const double C2808 =
        (C50145 + C50152 * C50259 + C50069 * (C50069 * C50305 + C50304 * ae) +
         C50069 * C50304 * ae) /
        C50002;
    const double C3352 = (C50069 * (2 * C50245 + C50232 * C50305) +
                          (2 * C50244 + C50232 * C50304) * ae) /
                         C50002;
    const double C50392 = C50389 + C50390;
    const double C50520 = C50514 / C49936;
    const double C50438 = C50069 * C50434;
    const double C50589 = 2 * C50434;
    const double C50579 = C50434 * ce;
    const double C50604 = -C50594;
    const double C134 =
        (-3 * (C50151 * C50087 + C50144)) / C49936 +
        C50074 * ((-2 * C50153) / C49936 - (C50074 * C50165) / C49936);
    const double C304 =
        C50232 * ((-2 * C50153) / C49936 - (C50074 * C50165) / C49936);
    const double C317 = -(C50165 * C50259 + C50151 * C50087 + C50144) / C49936;
    const double C507 = -(C50069 * (C50069 * C50165 + C50161 * ce) +
                          C50151 * C50087 + C50144 + C50069 * C50161 * ce) /
                        C49936;
    const double C509 =
        C50069 * ((-2 * C50153) / C49936 - (C50074 * C50165) / C49936) -
        ((2 * C50149 + C50074 * C50161) * ce) / C49936;
    const double C971 =
        -(C50069 * C50232 * C50165 + C50232 * C50161 * ce) / C49936;
    const double C1191 = (-2 * C50232 * C50165) / C49936 -
                         (C50232 * (C50185 * C50259 + C50165)) / C49936;
    const double C1655 = -(C50069 * (C50185 * C50259 + C50165) +
                           (C50161 + C50178 * C50259) * ce) /
                         C49936;
    const double C50181 = C50175 / C49936;
    const double C1306 = -(C50069 * (C50069 * C50247 + C50248 * ce) +
                           C50232 * C50153 + C50069 * C50248 * ce) /
                         C49936;
    const double C50277 = C50272 + C50273;
    const double C50457 = C50448 / C50078;
    const double C2608 = C117 * C1193;
    const double C14031 = C10923 * C1193;
    const double C36518 = C33490 * C1193;
    const double C2830 = C117 * C1653;
    const double C5638 = C5415 * C1653;
    const double C11152 = C10924 * C1653;
    const double C14936 = C10923 * C1653;
    const double C33719 = C33491 * C1653;
    const double C37202 = C33490 * C1653;
    const double C2589 =
        (-3 * (C50151 * C50259 + C50144)) / C49936 +
        C50232 * ((-2 * C50243) / C49936 - (C50232 * C50303) / C49936);
    const double C2809 = -(C50069 * (C50069 * C50303 + C50304 * ce) +
                           C50151 * C50259 + C50144 + C50069 * C50304 * ce) /
                         C49936;
    const double C3353 =
        C50069 * ((-2 * C50243) / C49936 - (C50232 * C50303) / C49936) -
        ((2 * C50244 + C50232 * C50304) * ce) / C49936;
    const double C50350 = C50344 / C49936;
    const double C50391 = C50386 + C50387;
    const double C50521 = C50515 / C50078;
    const double C50437 = C50069 * C50431;
    const double C50583 = -2 * C50431;
    const double C50578 = ae * C50431;
    const double C50118 = C50117 * C50087;
    const double C50324 = C50074 * C50117;
    const double C50687 = C50117 * C50259;
    const double C50766 = C50232 * C50117;
    const double C50827 = C50069 * C50117;
    const double C50220 = C50074 * C50217;
    const double C50316 = C50217 * C50259;
    const double C50482 = C50069 * C50217;
    const double C50505 = C50232 * C50217;
    const double C50374 = C50202 + C50370;
    const double C50559 = C50069 * C50551;
    const double C50655 = C50644 + C50645;
    const double C50712 = C50232 * C50709;
    const double C50741 = C50069 * C50709;
    const double C50791 = C50783 + C50784;
    const double C50860 = C50069 * C50852;
    const double C50218 = C50074 * C50215;
    const double C50314 = C50215 * C50259;
    const double C50478 = C50069 * C50215;
    const double C50503 = C50232 * C50215;
    const double C50372 = C50366 + C50196;
    const double C50555 = C50069 * C50549;
    const double C50652 = C50638 + C50639;
    const double C50710 = C50232 * C50707;
    const double C50737 = C50069 * C50707;
    const double C50788 = C50779 + C50780;
    const double C50857 = C50069 * C50849;
    const double C162 = C117 * C123;
    const double C10950 = C10923 * C123;
    const double C33517 = C33490 * C123;
    const double C337 = C117 * C294;
    const double C11520 = C10923 * C294;
    const double C34087 = C33490 * C294;
    const double C351 = C117 * C300;
    const double C11154 = C10923 * C300;
    const double C33721 = C33490 * C300;
    const double C543 = C117 * C491;
    const double C5436 = C5416 * C491;
    const double C6160 = C5415 * C491;
    const double C11348 = C10923 * C491;
    const double C11340 = C10924 * C491;
    const double C33915 = C33490 * C491;
    const double C33907 = C33491 * C491;
    const double C549 = C117 * C492;
    const double C5444 = C5415 * C492;
    const double C10946 = C10924 * C492;
    const double C11685 = C10923 * C492;
    const double C33513 = C33491 * C492;
    const double C34252 = C33490 * C492;
    const double C988 = C117 * C963;
    const double C5996 = C5415 * C963;
    const double C11134 = C10924 * C963;
    const double C11904 = C10923 * C963;
    const double C33701 = C33491 * C963;
    const double C34471 = C33490 * C963;
    const double C2822 = C117 * C1300;
    const double C5624 = C5416 * C1300;
    const double C6376 = C5415 * C1300;
    const double C11898 = C10924 * C1300;
    const double C14253 = C10923 * C1300;
    const double C34465 = C33491 * C1300;
    const double C41351 = C33490 * C1300;
    const double C3658 = C117 * C2585;
    const double C31825 = C10923 * C2585;
    const double C37464 = C33490 * C2585;
    const double C3834 = C117 * C2805;
    const double C16148 = C10924 * C2805;
    const double C22074 = C5416 * C2805;
    const double C23660 = C5415 * C2805;
    const double C31987 = C10923 * C2805;
    const double C37190 = C33491 * C2805;
    const double C37634 = C33490 * C2805;
    const double C4342 = C117 * C3349;
    const double C15284 = C10924 * C3349;
    const double C22988 = C5415 * C3349;
    const double C32489 = C10923 * C3349;
    const double C36510 = C33491 * C3349;
    const double C38140 = C33490 * C3349;
    const double C50439 = C50436 / C50002;
    const double C50216 = C50207 + C50213;
    const double C50318 = C50178 + C50315;
    const double C50488 = C50178 + C50481;
    const double C50490 = C50480 * ae;
    const double C50487 = C50480 * ce;
    const double C50510 = C50504 * ae;
    const double C50508 = C50069 * C50504;
    const double C50507 = C50504 * ce;
    const double C50376 = C50232 * C50373;
    const double C50415 = C50373 * ae;
    const double C50413 = C50069 * C50373;
    const double C50412 = C50373 * ce;
    const double C50565 = C50361 + C50558;
    const double C50567 = C50557 * ae;
    const double C50564 = C50557 * ce;
    const double C50663 = C50654 * ae;
    const double C50661 = C50069 * C50654;
    const double C50660 = C50654 * ce;
    const double C50714 = C50700 + C50711;
    const double C50747 = C50347 + C50740;
    const double C50749 = C50739 * ae;
    const double C50746 = C50739 * ce;
    const double C50799 = C50790 * ae;
    const double C50797 = C50069 * C50790;
    const double C50796 = C50790 * ce;
    const double C50867 = C50834 + C50859;
    const double C50866 = C50858 / C49936;
    const double C50191 = C50179 + C50189;
    const double C50484 = C50475 / C49936;
    const double C2590 = (3 * (C50154 + C50173 * C50259) +
                          C50232 * (2 * C50249 + C50232 * C50312)) /
                         C50002;
    const double C50552 = C50546 / C49936;
    const double C50658 = -C50648;
    const double C50356 = C50348 + C50353;
    const double C50743 = C50734 / C49936;
    const double C50786 = -C50775;
    const double C50864 = C50856 / C50002;
    const double C50190 = C50188 / C49936;
    const double C50204 = C50195 / C49936;
    const double C50485 = C50476 / C50078;
    const double C2591 =
        (-3 * (C50169 * C50259 + C50153)) / C49936 +
        C50232 * ((-2 * C50247) / C49936 - (C50232 * C50310) / C49936);
    const double C50371 = C50365 / C49936;
    const double C50553 = C50547 / C50078;
    const double C50354 = C50351 / C49936;
    const double C50705 = C50696 / C49936;
    const double C50744 = C50735 / C50078;
    const double C51466 = C51427 / C50004;
    const double C51468 = C51431 / C50002;
    const double C2434 = -C51467;
    const double C51469 = C51434 / C49938;
    const double C51471 = C51438 / C49936;
    const double C292 = -C51470;
    const double C51473 = C51446 / C49938;
    const double C51474 = C51448 / C49936;
    const double C1109 = -C51472;
    const double C51479 = C51459 / C50004;
    const double C51480 = C51461 / C50002;
    const double C17436 = -C51478;
    const double C1957 =
        (C49973 / C49961 - (0 * de) / C49936) / C49961 + (0 * ce) / C49936;
    const double C2219 = C49973 / C49961 - (0 * de) / C49936;
    const double C49972 = C49969 / C49936;
    const double C51490 = C51442 - C51476;
    const double C51491 = C51451 - C51477;
    const double C39114 =
        (C50039 / C50027 - (0 * be) / C50002) / C50027 + (0 * ae) / C50002;
    const double C44476 = C50039 / C50027 - (0 * be) / C50002;
    const double C50038 = C50035 / C50002;
    const double C10963 = C10936 + C10937;
    const double C10959 = C10928 + C10929;
    const double C14045 = C14019 + C14020;
    const double C14036 = C14005 + C14006;
    const double C33530 = C33503 + C33504;
    const double C33526 = C33495 + C33496;
    const double C36529 = C36500 + C36501;
    const double C36525 = C36492 + C36493;
    const double C179 = C169 * C51217;
    const double C528 = C169 * C480;
    const double C805 = C169 * C51444;
    const double C1766 = C169 * C1760;
    const double C178 = C168 * C118;
    const double C527 = C168 * C483;
    const double C804 = C168 * C797;
    const double C1765 = C168 * C1762;
    const double C2643 = C2628 * C51217;
    const double C3363 = C2628 * C51444;
    const double C3823 = C2628 * C480;
    const double C4657 = C2628 * C1760;
    const double C2642 = C2627 * C118;
    const double C3362 = C2627 * C797;
    const double C3822 = C2627 * C483;
    const double C4656 = C2627 * C1762;
    const double C51494 = C51455 - C51482;
    const double C10969 = C10948 + C10949;
    const double C10964 = C10938 + C10939;
    const double C10962 = C10934 + C10935;
    const double C10960 = C10930 + C10931;
    const double C10958 = C10926 + C10927;
    const double C11169 = C11144 + C11145;
    const double C11165 = C11136 + C11137;
    const double C11365 = C11342 + C11343;
    const double C11357 = C11326 + C11327;
    const double C14046 = C14021 + C14022;
    const double C14037 = C14007 + C14008;
    const double C14035 = C14003 + C14004;
    const double C14941 = C14918 + C14919;
    const double C15290 = C15282 + C15283;
    const double C16154 = C16146 + C16147;
    const double C5448 = C5414 * C133;
    const double C5442 = C5414 * C122;
    const double C5440 = C5414 * C121;
    const double C5434 = C5414 * C131;
    const double C5424 = C5414 * C129;
    const double C5418 = C5414 * C120;
    const double C5636 = C5414 * C315;
    const double C5630 = C5414 * C299;
    const double C5628 = C5414 * C296;
    const double C5622 = C5414 * C308;
    const double C5830 = C5414 * C503;
    const double C5824 = C5414 * C489;
    const double C5822 = C5414 * C501;
    const double C5816 = C5414 * C488;
    const double C6000 = C5414 * C306;
    const double C5994 = C5414 * C295;
    const double C6164 = C5414 * C505;
    const double C6158 = C5414 * C490;
    const double C6380 = C5414 * C969;
    const double C6374 = C5414 * C962;
    const double C22078 = C5414 * C298;
    const double C22072 = C5414 * C313;
    const double C22062 = C5414 * C310;
    const double C22056 = C5414 * C297;
    const double C22734 = C5414 * C967;
    const double C22728 = C5414 * C961;
    const double C22992 = C5414 * C1195;
    const double C22986 = C5414 * C1188;
    const double C23160 = C5414 * C1304;
    const double C23154 = C5414 * C1299;
    const double C23664 = C5414 * C1651;
    const double C23658 = C5414 * C1646;
    const double C5464 = C5438 + C5439;
    const double C5455 = C5420 + C5421;
    const double C22090 = C22076 + C22077;
    const double C22081 = C22058 + C22059;
    const double C51495 = C51464 - C51483;
    const double C33516 = C33488 * C132;
    const double C33506 = C33488 * C142;
    const double C33502 = C33488 * C130;
    const double C33498 = C33488 * C141;
    const double C33494 = C33488 * C128;
    const double C33714 = C33488 * C314;
    const double C33712 = C33488 * C309;
    const double C33704 = C33488 * C307;
    const double C33910 = C33488 * C504;
    const double C33900 = C33488 * C502;
    const double C33894 = C33488 * C500;
    const double C34464 = C33488 * C968;
    const double C36515 = C33488 * C1194;
    const double C36513 = C33488 * C1196;
    const double C36499 = C33488 * C312;
    const double C36495 = C33488 * C327;
    const double C36491 = C33488 * C311;
    const double C37199 = C33488 * C1652;
    const double C37193 = C33488 * C1650;
    const double C37185 = C33488 * C966;
    const double C37627 = C33488 * C1303;
    const double C159 = C51314 * C143;
    const double C5449 = C5411 * C143;
    const double C10945 = C51457 * C143;
    const double C33512 = C33488 * C143;
    const double C344 = C51314 * C326;
    const double C5623 = C5411 * C326;
    const double C11141 = C51457 * C326;
    const double C33708 = C33488 * C326;
    const double C2606 = C51314 * C328;
    const double C14018 = C51457 * C328;
    const double C22073 = C5411 * C328;
    const double C36503 = C33488 * C328;
    const double C532 = C51314 * C518;
    const double C5427 = C5412 * C518;
    const double C5823 = C5411 * C518;
    const double C10933 = C51378 * C518;
    const double C11331 = C51457 * C518;
    const double C33500 = C51378 * C518;
    const double C33898 = C33488 * C518;
    const double C3367 = C51314 * C976;
    const double C14010 = C51378 * C976;
    const double C14923 = C51457 * C976;
    const double C22065 = C5412 * C976;
    const double C22735 = C5411 * C976;
    const double C36497 = C51378 * C976;
    const double C37189 = C33488 * C976;
    const double C365 = C347 + C348;
    const double C11170 = C11146 + C11147;
    const double C559 = C533 + C534;
    const double C5456 = C5422 + C5423;
    const double C5837 = C5814 + C5815;
    const double C11360 = C11332 + C11333;
    const double C11356 = C11324 + C11325;
    const double C33923 = C33891 + C33892;
    const double C1000 = C982 + C983;
    const double C5646 = C5626 + C5627;
    const double C11168 = C11142 + C11143;
    const double C11912 = C11896 + C11897;
    const double C33735 = C33709 + C33710;
    const double C3838 = C3826 + C3827;
    const double C14940 = C14916 + C14917;
    const double C15496 = C15488 + C15489;
    const double C22082 = C22060 + C22061;
    const double C22737 = C22726 + C22727;
    const double C37206 = C37182 + C37183;
    const double C180 = C170 * C118;
    const double C537 = C170 * C483;
    const double C808 = C170 * C797;
    const double C1769 = C170 * C1762;
    const double C182 = C172 * C118;
    const double C547 = C172 * C483;
    const double C812 = C172 * C797;
    const double C1773 = C172 * C1762;
    const double C374 = C362 * C118;
    const double C991 = C362 * C797;
    const double C2111 = C362 * C1762;
    const double C8555 = C362 * C483;
    const double C376 = C364 * C118;
    const double C985 = C364 * C797;
    const double C2107 = C364 * C1762;
    const double C2818 = C364 * C483;
    const double C2644 = C2629 * C118;
    const double C3369 = C2629 * C797;
    const double C3830 = C2629 * C483;
    const double C4660 = C2629 * C1762;
    const double C569 = C557 * C484;
    const double C806 = C557 * C798;
    const double C1767 = C557 * C1763;
    const double C573 = C561 * C484;
    const double C810 = C561 * C798;
    const double C1771 = C561 * C1763;
    const double C3394 = C3384 * C798;
    const double C3824 = C3384 * C484;
    const double C4658 = C3384 * C1763;
    const double C2649 = C2635 * C118;
    const double C4345 = C2635 * C797;
    const double C4667 = C2635 * C1762;
    const double C20848 = C2635 * C483;
    const double C3397 = C3387 * C798;
    const double C3832 = C3387 * C484;
    const double C4662 = C3387 * C1763;
    const double C181 = C171 * C51217;
    const double C538 = C171 * C480;
    const double C809 = C171 * C51444;
    const double C1770 = C171 * C1760;
    const double C2594 =
        3 * ((-(C50091 * C50259) / C49936) / C50002 - C50082 / C50078) +
        C50232 * ((-2 * C50232 * C50091) / C50078 +
                  C50232 * ((-(C50100 * C50259) / C49936) / C50002 - C50096));
    const double C2814 =
        (-(C50091 * C50259) / C49936) / C50002 - C50082 / C50078 -
        (ae * (C50069 * C50303 + C50304 * ce)) / C50078 -
        ((C50069 * C50305 + C50304 * ae) * ce) / C50078 +
        C50069 * ((-(C50305 * ce) / C49936) / C50002 - (ae * C50303) / C50078 +
                  C50069 * ((-(C50100 * C50259) / C49936) / C50002 - C50096));
    const double C3358 =
        (((-2 * C50243) / C49936 - (C50232 * C50303) / C49936) * ae) / C50002 -
        ((2 * C50245 + C50232 * C50305) * ce) / C50078 +
        C50069 * ((-2 * C50232 * C50091) / C50078 +
                  C50232 * ((-(C50100 * C50259) / C49936) / C50002 - C50096));
    const double C50430 = C50421 / C50078;
    const double C161 = C51314 * C144;
    const double C10955 = C51457 * C144;
    const double C33522 = C33488 * C144;
    const double C340 = C51314 * C325;
    const double C6001 = C5411 * C325;
    const double C11133 = C51457 * C325;
    const double C33700 = C33488 * C325;
    const double C350 = C51314 * C329;
    const double C5637 = C5411 * C329;
    const double C11151 = C51457 * C329;
    const double C33718 = C33488 * C329;
    const double C536 = C51314 * C519;
    const double C5429 = C5413 * C519;
    const double C5831 = C5411 * C519;
    const double C5821 = C5412 * C519;
    const double C11337 = C51457 * C519;
    const double C11329 = C51378 * C519;
    const double C33904 = C33488 * C519;
    const double C33896 = C51378 * C519;
    const double C44489 = C44473 * C519;
    const double C542 = C51314 * C520;
    const double C5433 = C5412 * C520;
    const double C6165 = C5411 * C520;
    const double C10941 = C51378 * C520;
    const double C11347 = C51457 * C520;
    const double C33508 = C51378 * C520;
    const double C33914 = C33488 * C520;
    const double C987 = C51314 * C977;
    const double C5621 = C5412 * C977;
    const double C6381 = C5411 * C977;
    const double C11139 = C51378 * C977;
    const double C11901 = C51457 * C977;
    const double C33706 = C51378 * C977;
    const double C34468 = C33488 * C977;
    const double C2613 = C51314 * C1200;
    const double C15287 = C51457 * C1200;
    const double C22993 = C5411 * C1200;
    const double C36509 = C33488 * C1200;
    const double C3829 = C51314 * C1311;
    const double C14921 = C51378 * C1311;
    const double C15493 = C51457 * C1311;
    const double C22067 = C5413 * C1311;
    const double C22733 = C5412 * C1311;
    const double C23161 = C5411 * C1311;
    const double C37187 = C51378 * C1311;
    const double C37631 = C33488 * C1311;
    const double C47443 = C44473 * C1311;
    const double C3374 = C51314 * C1658;
    const double C14016 = C51378 * C1658;
    const double C16151 = C51457 * C1658;
    const double C22071 = C5412 * C1658;
    const double C23665 = C5411 * C1658;
    const double C36505 = C51378 * C1658;
    const double C37197 = C33488 * C1658;
    const double C50102 = C50101 / C49936;
    const double C50112 = -2 * C50107;
    const double C50325 = C50107 / C50078;
    const double C50394 = C50232 * C50107;
    const double C50449 = C50069 * C50107;
    const double C1199 =
        (-2 * C50232 * C50240) / C50078 +
        C50232 * ((-(C50107 * std::pow(C50232, 2)) / C49936) / C50002 -
                  C50240 / C50078);
    const double C1312 =
        (-(ae * (C50069 * C50247 + C50248 * ce)) / C49936) / C50002 -
        (C50232 * C50240) / C50078 -
        ((C50069 * C50249 + C50248 * ae) * ce) / C50078 +
        C50069 * ((-(C50249 * ce) / C49936) / C50002 - (ae * C50247) / C50078 -
                  (C50069 * C50232 * C50107) / C50078);
    const double C1659 =
        (-((C50154 + C50173 * C50259) * ce) / C49936) / C50002 -
        (ae * (C50169 * C50259 + C50153)) / C50078 +
        C50069 * ((-(C50107 * C50259) / C49936) / C50002 - C50240 / C50078);
    const double C2595 =
        3 * ((-(C50107 * C50259) / C49936) / C50002 - C50240 / C50078) +
        C50232 * ((-2 * C50232 * C50107) / C50078 +
                  C50232 * ((-(C50074 * C50117 * C50259) / C49936) / C50002 -
                            C50107 / C50078));
    const double C3359 =
        (((-2 * C50247) / C49936 - (C50232 * C50310) / C49936) * ae) / C50002 -
        ((2 * C50249 + C50232 * C50312) * ce) / C50078 +
        C50069 * ((-2 * C50232 * C50107) / C50078 +
                  C50232 * ((-(C50074 * C50117 * C50259) / C49936) / C50002 -
                            C50107 / C50078));
    const double C50333 = C50332 / C49936;
    const double C50522 = C50069 * C50516;
    const double C50686 = -2 * C50516;
    const double C50762 = C50516 / C50078;
    const double C50596 = C50582 / C50078;
    const double C50186 = C50177 + C50183;
    const double C1307 =
        (C50232 * C50166 + C50069 * (C50069 * C50253 + C50252 * ae) +
         C50069 * C50252 * ae) /
        C50002;
    const double C1308 = -(C50069 * (C50069 * C50251 + C50252 * ce) +
                           C50232 * C50165 + C50069 * C50252 * ce) /
                         C49936;
    const double C1301 = C50232 * C50161 + C50252 * C50072;
    const double C6369 =
        2 * C50069 * C50252 + C50069 * (C50252 + C50504 * C50072);
    const double C50286 = C50283 + C50284;
    const double C50285 = C50280 + C50281;
    const double C2622 = C117 * C1186;
    const double C3146 = C117 * C1648;
    const double C11156 = C10924 * C1648;
    const double C33723 = C33491 * C1648;
    const double C6162 = C5416 * C1960;
    const double C11350 = C10924 * C1960;
    const double C33917 = C33491 * C1960;
    const double C2815 =
        (-(C50107 * C50259) / C49936) / C50002 - C50240 / C50078 -
        (ae * (C50069 * C50310 + C50311 * ce)) / C50078 -
        ((C50069 * C50312 + C50311 * ae) * ce) / C50078 +
        C50069 * ((-(C50312 * ce) / C49936) / C50002 - (ae * C50310) / C50078 +
                  C50069 * ((-(C50074 * C50117 * C50259) / C49936) / C50002 -
                            C50107 / C50078));
    const double C2810 =
        (C50154 + C50173 * C50259 + C50069 * (C50069 * C50312 + C50311 * ae) +
         C50069 * C50311 * ae) /
        C50002;
    const double C2811 = -(C50069 * (C50069 * C50310 + C50311 * ce) +
                           C50169 * C50259 + C50153 + C50069 * C50311 * ce) /
                         C49936;
    const double C3354 = (C50069 * (2 * C50249 + C50232 * C50312) +
                          (2 * C50248 + C50232 * C50311) * ae) /
                         C50002;
    const double C3355 =
        C50069 * ((-2 * C50247) / C49936 - (C50232 * C50310) / C49936) -
        ((2 * C50248 + C50232 * C50311) * ce) / C49936;
    const double C2586 = 3 * (C50149 + C50171 * C50259) +
                         C50232 * (2 * C50248 + C50232 * C50311);
    const double C2806 = C50149 + C50171 * C50259 + C50311 * C50072;
    const double C3350 = C50069 * (2 * C50248 + C50232 * C50311);
    const double C4781 =
        2 * C50069 * C50311 + C50069 * (C50311 + C50373 * C50072);
    const double C50401 = C50398 + C50399;
    const double C50400 = C50395 + C50396;
    const double C6378 = C5416 * C4779;
    const double C14255 = C10924 * C4779;
    const double C41353 = C33491 * C4779;
    const double C50466 = C50069 * C50462;
    const double C50643 = 2 * C50462;
    const double C50633 = C50462 * ce;
    const double C5800 = 3 * (C50149 + C50171 * C50072) +
                         C50069 * (2 * C50274 + C50069 * C50461);
    const double C50465 = C50069 * C50459;
    const double C50637 = -2 * C50459;
    const double C50632 = ae * C50459;
    const double C50355 = C50346 + C50352;
    const double C50409 = C50406 + C50407;
    const double C50408 = C50403 + C50404;
    const double C23662 = C5416 * C4780;
    const double C31989 = C10924 * C4780;
    const double C37636 = C33491 * C4780;
    const double C50538 = C50069 * C50534;
    const double C50771 = 2 * C50534;
    const double C50763 = C50534 * ce;
    const double C6781 = 3 * (C50244 + C50340 * C50072) +
                         C50069 * (2 * C50388 + C50069 * C50533);
    const double C50537 = C50069 * C50531;
    const double C50767 = -2 * C50531;
    const double C50761 = ae * C50531;
    const double C50615 = C50162 + C50608;
    const double C50843 = C50824 / C50078;
    const double C50614 = C50588 + C50607;
    const double C50613 = C50606 / C49936;
    const double C50612 = C50605 + C50160;
    const double C50848 = C50829 / C49936;
    const double C50842 = C50823 / C49936;
    const double C163 = C51314 * C135;
    const double C10951 = C51457 * C135;
    const double C33518 = C33488 * C135;
    const double C338 = C51314 * C305;
    const double C11521 = C51457 * C305;
    const double C34088 = C33488 * C305;
    const double C352 = C51314 * C316;
    const double C11155 = C51457 * C316;
    const double C33722 = C33488 * C316;
    const double C544 = C51314 * C506;
    const double C5437 = C5413 * C506;
    const double C6161 = C5412 * C506;
    const double C11349 = C51457 * C506;
    const double C11341 = C51378 * C506;
    const double C33916 = C33488 * C506;
    const double C33908 = C51378 * C506;
    const double C44497 = C44473 * C506;
    const double C550 = C51314 * C508;
    const double C5445 = C5412 * C508;
    const double C10947 = C51378 * C508;
    const double C11686 = C51457 * C508;
    const double C33514 = C51378 * C508;
    const double C34253 = C33488 * C508;
    const double C989 = C51314 * C970;
    const double C5997 = C5412 * C970;
    const double C11135 = C51378 * C970;
    const double C11905 = C51457 * C970;
    const double C33702 = C51378 * C970;
    const double C34472 = C33488 * C970;
    const double C2623 = C51314 * C1192;
    const double C3147 = C51314 * C1654;
    const double C11157 = C51378 * C1654;
    const double C33724 = C51378 * C1654;
    const double C2823 = C51314 * C1305;
    const double C5625 = C5413 * C1305;
    const double C6377 = C5412 * C1305;
    const double C11899 = C51378 * C1305;
    const double C14254 = C51457 * C1305;
    const double C34466 = C51378 * C1305;
    const double C41352 = C33488 * C1305;
    const double C44685 = C44473 * C1305;
    const double C1964 = (2 * (C50069 * C50154 + C50149 * ae) +
                          C50069 * (C50154 + C50069 * C50278 + C50274 * ae) +
                          (C50149 + C50171 * C50072) * ae) /
                         C50002;
    const double C50464 = -C50456;
    const double C2633 = C2610 + C2611;
    const double C14051 = C14027 + C14028;
    const double C2838 = C2828 + C2829;
    const double C5649 = C5632 + C5633;
    const double C11171 = C11148 + C11149;
    const double C14950 = C14932 + C14933;
    const double C33738 = C33715 + C33716;
    const double C3659 = C51314 * C2588;
    const double C31826 = C51457 * C2588;
    const double C37465 = C33488 * C2588;
    const double C3835 = C51314 * C2808;
    const double C16149 = C51378 * C2808;
    const double C22075 = C5413 * C2808;
    const double C23661 = C5412 * C2808;
    const double C31988 = C51457 * C2808;
    const double C37191 = C51378 * C2808;
    const double C37635 = C33488 * C2808;
    const double C47451 = C44473 * C2808;
    const double C4343 = C51314 * C3352;
    const double C15285 = C51378 * C3352;
    const double C22989 = C5412 * C3352;
    const double C32490 = C51457 * C3352;
    const double C36511 = C51378 * C3352;
    const double C38141 = C33488 * C3352;
    const double C4782 = (2 * (C50069 * C50245 + C50244 * ae) +
                          C50069 * (C50245 + C50069 * C50392 + C50388 * ae) +
                          (C50244 + C50340 * C50072) * ae) /
                         C50002;
    const double C50529 = -C50520;
    const double C50441 = C50152 + C50438;
    const double C50593 = C50579 / C50078;
    const double C50611 = C50604 / C50002;
    const double C160 = C117 * C134;
    const double C10954 = C10923 * C134;
    const double C33521 = C33490 * C134;
    const double C335 = C117 * C304;
    const double C11524 = C10923 * C304;
    const double C34091 = C33490 * C304;
    const double C353 = C117 * C317;
    const double C11158 = C10923 * C317;
    const double C33725 = C33490 * C317;
    const double C545 = C117 * C507;
    const double C5430 = C5416 * C507;
    const double C6166 = C5415 * C507;
    const double C11352 = C10923 * C507;
    const double C11344 = C10924 * C507;
    const double C33919 = C33490 * C507;
    const double C33911 = C33491 * C507;
    const double C551 = C117 * C509;
    const double C5450 = C5415 * C509;
    const double C10942 = C10924 * C509;
    const double C11689 = C10923 * C509;
    const double C33509 = C33491 * C509;
    const double C34256 = C33490 * C509;
    const double C992 = C117 * C971;
    const double C6002 = C5415 * C971;
    const double C11130 = C10924 * C971;
    const double C11908 = C10923 * C971;
    const double C33697 = C33491 * C971;
    const double C34475 = C33490 * C971;
    const double C2624 = C117 * C1191;
    const double C3150 = C117 * C1655;
    const double C11160 = C10924 * C1655;
    const double C33727 = C33491 * C1655;
    const double C2824 = C117 * C1306;
    const double C5618 = C5416 * C1306;
    const double C6382 = C5415 * C1306;
    const double C11902 = C10924 * C1306;
    const double C14257 = C10923 * C1306;
    const double C34469 = C33491 * C1306;
    const double C41355 = C33490 * C1306;
    const double C1971 =
        2 * ((-(C50154 * ce) / C49936) / C50002 - (ae * C50153) / C50078 -
             (C50069 * C50240) / C50078) -
        (ae * (C50069 * C50277 + C50153 + C50274 * ce)) / C50078 -
        ((C50154 + C50069 * C50278 + C50274 * ae) * ce) / C50078 +
        C50069 *
            ((-(ae * C50277) / C49936) / C50002 - C50240 / C50078 -
             (C50278 * ce) / C50078 +
             C50069 * ((-(C50173 * ce) / C49936) / C50002 -
                       (ae * C50169) / C50078 - (C50069 * C50107) / C50078));
    const double C1965 =
        (-2 * (C50069 * C50153 + C50149 * ce)) / C49936 -
        (C50069 * (C50069 * C50277 + C50153 + C50274 * ce)) / C49936 -
        ((C50149 + C50171 * C50072) * ce) / C49936;
    const double C3660 = C117 * C2589;
    const double C31829 = C10923 * C2589;
    const double C37468 = C33490 * C2589;
    const double C3836 = C117 * C2809;
    const double C16152 = C10924 * C2809;
    const double C22068 = C5416 * C2809;
    const double C23666 = C5415 * C2809;
    const double C31991 = C10923 * C2809;
    const double C37194 = C33491 * C2809;
    const double C37638 = C33490 * C2809;
    const double C4346 = C117 * C3353;
    const double C15288 = C10924 * C3353;
    const double C22994 = C5415 * C3353;
    const double C32493 = C10923 * C3353;
    const double C36506 = C33491 * C3353;
    const double C38144 = C33490 * C3353;
    const double C4790 =
        2 * ((-(C50245 * ce) / C49936) / C50002 - (ae * C50243) / C50078 -
             (C50069 * C50385) / C50078) -
        (ae * (C50069 * C50391 + C50243 + C50388 * ce)) / C50078 -
        ((C50245 + C50069 * C50392 + C50388 * ae) * ce) / C50078 +
        C50069 * ((-(ae * C50391) / C49936) / C50002 - C50385 / C50078 -
                  (C50392 * ce) / C50078 +
                  C50069 * ((-(C50342 * ce) / C49936) / C50002 -
                            (ae * C50338) / C50078 -
                            (C50069 * C50232 * C50100) / C50078));
    const double C4783 =
        (-2 * (C50069 * C50243 + C50244 * ce)) / C49936 -
        (C50069 * (C50069 * C50391 + C50243 + C50388 * ce)) / C49936 -
        ((C50244 + C50340 * C50072) * ce) / C49936;
    const double C50440 = C50437 + C50151;
    const double C50597 = C50583 / C49936;
    const double C50592 = C50578 / C49936;
    const double C50119 = C50118 / C49936;
    const double C50326 = C50324 * C50259;
    const double C50548 = C50232 * C50324;
    const double C50636 = C50069 * C50324;
    const double C50689 = C50687 / C49936;
    const double C50777 = C50069 * C50766;
    const double C50846 = C50827 / C50078;
    const double C50223 = C50209 + C50220;
    const double C50319 = C50187 + C50316;
    const double C50489 = C50482 + C50483;
    const double C50509 = C50069 * C50505;
    const double C50377 = C50232 * C50374;
    const double C50414 = C50069 * C50374;
    const double C50566 = C50559 + C50560;
    const double C50662 = C50069 * C50655;
    const double C50715 = C50703 + C50712;
    const double C50748 = C50741 + C50742;
    const double C50798 = C50069 * C50791;
    const double C50868 = C50180 + C50860;
    const double C50221 = C50218 / C49936;
    const double C50317 = C50314 + C50185;
    const double C50486 = C50478 + C50479;
    const double C50506 = C50069 * C50503;
    const double C50375 = C50232 * C50372;
    const double C50411 = C50069 * C50372;
    const double C50563 = C50555 + C50556;
    const double C50659 = C50069 * C50652;
    const double C50713 = C50710 / C49936;
    const double C50745 = C50737 + C50738;
    const double C50795 = C50069 * C50788;
    const double C50865 = C50857 + C50176;
    const double C50442 = C50439 - C50429;
    const double C50219 = C50074 * C50216;
    const double C50256 = C50232 * C50216;
    const double C50292 = C50216 * ae;
    const double C50290 = C50069 * C50216;
    const double C50289 = C50216 * ce;
    const double C2587 = 3 * (C50161 + C50178 * C50259) +
                         C50232 * (2 * C50252 + C50232 * C50318);
    const double C2807 = C50161 + C50178 * C50259 + C50318 * C50072;
    const double C3351 = C50069 * (2 * C50252 + C50232 * C50318);
    const double C5801 = 3 * (C50161 + C50178 * C50072) +
                         C50069 * (2 * C50282 + C50069 * C50488);
    const double C50379 = C50367 + C50376;
    const double C6782 = 3 * (C50248 + C50361 * C50072) +
                         C50069 * (2 * C50397 + C50069 * C50565);
    const double C50668 = C50642 + C50661;
    const double C50667 = C50660 / C49936;
    const double C50717 = C50232 * C50714;
    const double C50729 = C50714 * ae;
    const double C50727 = C50069 * C50714;
    const double C50726 = C50714 * ce;
    const double C23149 = 3 * (C50304 + C50347 * C50072) +
                          C50069 * (2 * C50405 + C50069 * C50747);
    const double C50804 = C50770 + C50797;
    const double C50803 = C50796 / C49936;
    const double C50875 = C50867 * ae;
    const double C50873 = C50069 * C50867;
    const double C50872 = C50867 * ce;
    const double C136 = (4 * (2 * C50154 + C50074 * C50166) +
                         C50074 * (3 * C50166 + C50074 * C50191)) /
                        C50002;
    const double C318 =
        (2 * C50154 + C50074 * C50166 + C50191 * C50259) / C50002;
    const double C320 = (C50232 * (3 * C50166 + C50074 * C50191)) / C50002;
    const double C50491 = -C50484;
    const double C2619 = C51314 * C2590;
    const double C50561 = -C50552;
    const double C50665 = C50658 / C50002;
    const double C3652 = (4 * (2 * C50245 + C50232 * C50305) +
                          C50232 * (3 * C50305 + C50232 * C50356)) /
                         C50002;
    const double C50750 = -C50743;
    const double C50794 = C50786 / C50002;
    const double C50870 = C50864 - C50845;
    const double C50192 = C50181 - C50190;
    const double C2620 = C117 * C2591;
    const double C50357 = C50350 - C50354;
    const double C51484 = C51426 - C51466;
    const double C51485 = C51430 - C51468;
    const double C51486 = C51433 - C51469;
    const double C51487 = C51437 - C51471;
    const double C51488 = C51440 - C51473;
    const double C51489 = C51447 - C51474;
    const double C51492 = C51453 - C51479;
    const double C51493 = C51460 - C51480;
    const double C49975 = C51217 - C49972;
    const double C2228 = C171 * C51490;
    const double C2222 = C169 * C51490;
    const double C5303 = C2628 * C51490;
    const double C1950 =
        (C51490 * C51276) / C49936 + (C51444 - C51475) / C49961;
    const double C1951 =
        (C51491 * C51276) / C49936 + (2 * C51281 + C51490) / C49961;
    const double C1952 = (C51276 * C51281) / C49940 + C51491 / C49961;
    const double C44496 = C44476 * C491;
    const double C44490 = C44476 * C507;
    const double C44488 = C44476 * C503;
    const double C44482 = C44476 * C489;
    const double C44684 = C44476 * C1300;
    const double C44678 = C44476 * C1306;
    const double C44860 = C44476 * C1959;
    const double C45210 = C44476 * C1960;
    const double C45422 = C44476 * C4779;
    const double C47450 = C44476 * C2805;
    const double C47444 = C44476 * C2809;
    const double C47442 = C44476 * C1304;
    const double C47436 = C44476 * C1299;
    const double C48100 = C44476 * C4778;
    const double C49034 = C44476 * C4780;
    const double C50041 = C51314 - C50038;
    const double C44509 = C51494 * C143;
    const double C44503 = C51494 * C132;
    const double C44501 = C51494 * C130;
    const double C44495 = C51494 * C142;
    const double C44485 = C51494 * C141;
    const double C44479 = C51494 * C128;
    const double C44697 = C51494 * C329;
    const double C44691 = C51494 * C314;
    const double C44689 = C51494 * C309;
    const double C44683 = C51494 * C326;
    const double C44879 = C51494 * C519;
    const double C44873 = C51494 * C502;
    const double C44871 = C51494 * C518;
    const double C44865 = C51494 * C500;
    const double C45049 = C51494 * C325;
    const double C45043 = C51494 * C307;
    const double C45213 = C51494 * C520;
    const double C45207 = C51494 * C504;
    const double C45425 = C51494 * C977;
    const double C45419 = C51494 * C968;
    const double C47455 = C51494 * C312;
    const double C47449 = C51494 * C328;
    const double C47439 = C51494 * C327;
    const double C47433 = C51494 * C311;
    const double C48111 = C51494 * C976;
    const double C48105 = C51494 * C966;
    const double C48369 = C51494 * C1200;
    const double C48363 = C51494 * C1196;
    const double C48533 = C51494 * C1311;
    const double C48527 = C51494 * C1303;
    const double C49037 = C51494 * C1658;
    const double C49031 = C51494 * C1650;
    const double C39107 =
        (C51494 * C51373) / C50002 + (C51457 - C51481) / C50027;
    const double C10974 = C10962 + C10963;
    const double C30940 = C14046 + C14045;
    const double C5466 = C5442 + C5443;
    const double C5465 = C5440 + C5441;
    const double C5462 = C5434 + C5435;
    const double C5457 = C5424 + C5425;
    const double C5454 = C5418 + C5419;
    const double C5648 = C5630 + C5631;
    const double C5647 = C5628 + C5629;
    const double C5842 = C5824 + C5825;
    const double C5838 = C5816 + C5817;
    const double C6006 = C5994 + C5995;
    const double C6170 = C6158 + C6159;
    const double C6386 = C6374 + C6375;
    const double C22091 = C22078 + C22079;
    const double C22083 = C22062 + C22063;
    const double C22080 = C22056 + C22057;
    const double C22738 = C22728 + C22729;
    const double C22998 = C22986 + C22987;
    const double C23166 = C23154 + C23155;
    const double C23670 = C23658 + C23659;
    const double C44505 = C51495 * C508;
    const double C44499 = C51495 * C504;
    const double C44493 = C51495 * C520;
    const double C44487 = C51495 * C518;
    const double C44481 = C51495 * C500;
    const double C44693 = C51495 * C1652;
    const double C44687 = C51495 * C968;
    const double C44681 = C51495 * C977;
    const double C44869 = C51495 * C519;
    const double C44863 = C51495 * C502;
    const double C45045 = C51495 * C970;
    const double C45209 = C51495 * C506;
    const double C45421 = C51495 * C1305;
    const double C47453 = C51495 * C1650;
    const double C47447 = C51495 * C1658;
    const double C47441 = C51495 * C976;
    const double C47435 = C51495 * C966;
    const double C48109 = C51495 * C1311;
    const double C48103 = C51495 * C1303;
    const double C48365 = C51495 * C3352;
    const double C49033 = C51495 * C2808;
    const double C39108 =
        (C51495 * C51373) / C50002 + (2 * C51378 + C51494) / C50027;
    const double C39109 = (C51373 * C51378) / C50006 + C51495 / C50027;
    const double C33536 = C33515 + C33516;
    const double C33531 = C33505 + C33506;
    const double C33529 = C33501 + C33502;
    const double C33527 = C33497 + C33498;
    const double C33525 = C33493 + C33494;
    const double C33737 = C33713 + C33714;
    const double C33736 = C33711 + C33712;
    const double C33732 = C33703 + C33704;
    const double C33932 = C33909 + C33910;
    const double C33927 = C33899 + C33900;
    const double C33924 = C33893 + C33894;
    const double C34479 = C34463 + C34464;
    const double C36536 = C36514 + C36515;
    const double C36535 = C36512 + C36513;
    const double C36528 = C36498 + C36499;
    const double C36526 = C36494 + C36495;
    const double C36524 = C36490 + C36491;
    const double C37214 = C37198 + C37199;
    const double C37211 = C37192 + C37193;
    const double C37207 = C37184 + C37185;
    const double C37642 = C37626 + C37627;
    const double C173 = C158 + C159;
    const double C5469 = C5448 + C5449;
    const double C10967 = C10944 + C10945;
    const double C33534 = C33511 + C33512;
    const double C363 = C343 + C344;
    const double C5644 = C5622 + C5623;
    const double C11167 = C11140 + C11141;
    const double C33734 = C33707 + C33708;
    const double C2630 = C2605 + C2606;
    const double C14044 = C14017 + C14018;
    const double C22088 = C22072 + C22073;
    const double C36530 = C36502 + C36503;
    const double C558 = C531 + C532;
    const double C5458 = C5426 + C5427;
    const double C5841 = C5822 + C5823;
    const double C10961 = C10932 + C10933;
    const double C11359 = C11330 + C11331;
    const double C33528 = C33499 + C33500;
    const double C33926 = C33897 + C33898;
    const double C3385 = C3366 + C3367;
    const double C14038 = C14009 + C14010;
    const double C14943 = C14922 + C14923;
    const double C22084 = C22064 + C22065;
    const double C22741 = C22734 + C22735;
    const double C36527 = C36496 + C36497;
    const double C37209 = C37188 + C37189;
    const double C377 = C365 * C118;
    const double C2826 = C365 * C483;
    const double C3142 = C365 * C797;
    const double C4502 = C365 * C1762;
    const double C571 = C559 * C485;
    const double C2225 = C559 * C2219;
    const double C1006 = C1000 * C798;
    const double C2105 = C1000 * C1763;
    const double C2820 = C1000 * C484;
    const double C14024 = C11168 + C11169;
    const double C14011 = C11169 + C11168;
    const double C3842 = C3838 * C485;
    const double C5306 = C3838 * C2219;
    const double C188 = C180 + C181;
    const double C822 = C808 + C809;
    const double C1781 = C1769 + C1770;
    const double C3661 = C51314 * C2594;
    const double C31830 = C51457 * C2594;
    const double C37469 = C33488 * C2594;
    const double C3837 = C51314 * C2814;
    const double C16153 = C51378 * C2814;
    const double C22069 = C5413 * C2814;
    const double C23667 = C5412 * C2814;
    const double C31992 = C51457 * C2814;
    const double C37195 = C51378 * C2814;
    const double C37639 = C33488 * C2814;
    const double C47445 = C44473 * C2814;
    const double C49039 = C51495 * C2814;
    const double C4347 = C51314 * C3358;
    const double C15289 = C51378 * C3358;
    const double C22995 = C5412 * C3358;
    const double C32494 = C51457 * C3358;
    const double C36507 = C51378 * C3358;
    const double C38145 = C33488 * C3358;
    const double C48371 = C51495 * C3358;
    const double C361 = C339 + C340;
    const double C6009 = C6000 + C6001;
    const double C11163 = C11132 + C11133;
    const double C33730 = C33699 + C33700;
    const double C366 = C349 + C350;
    const double C5651 = C5636 + C5637;
    const double C11172 = C11150 + C11151;
    const double C33739 = C33717 + C33718;
    const double C560 = C535 + C536;
    const double C5459 = C5428 + C5429;
    const double C5845 = C5830 + C5831;
    const double C5840 = C5820 + C5821;
    const double C11362 = C11336 + C11337;
    const double C11358 = C11328 + C11329;
    const double C33929 = C33903 + C33904;
    const double C33925 = C33895 + C33896;
    const double C562 = C541 + C542;
    const double C5461 = C5432 + C5433;
    const double C6173 = C6164 + C6165;
    const double C10965 = C10940 + C10941;
    const double C11367 = C11346 + C11347;
    const double C33532 = C33507 + C33508;
    const double C33934 = C33913 + C33914;
    const double C1001 = C986 + C987;
    const double C5643 = C5620 + C5621;
    const double C6389 = C6380 + C6381;
    const double C11166 = C11138 + C11139;
    const double C11914 = C11900 + C11901;
    const double C33733 = C33705 + C33706;
    const double C34481 = C34467 + C34468;
    const double C2634 = C2612 + C2613;
    const double C15292 = C15286 + C15287;
    const double C23001 = C22992 + C22993;
    const double C36533 = C36508 + C36509;
    const double C3839 = C3828 + C3829;
    const double C14942 = C14920 + C14921;
    const double C15498 = C15492 + C15493;
    const double C22085 = C22066 + C22067;
    const double C22740 = C22732 + C22733;
    const double C23169 = C23160 + C23161;
    const double C37208 = C37186 + C37187;
    const double C37644 = C37630 + C37631;
    const double C3388 = C3373 + C3374;
    const double C14043 = C14015 + C14016;
    const double C16156 = C16150 + C16151;
    const double C22087 = C22070 + C22071;
    const double C23673 = C23664 + C23665;
    const double C36531 = C36504 + C36505;
    const double C37213 = C37196 + C37197;
    const double C50103 = -C50102;
    const double C50114 = C50112 / C50078;
    const double C50458 = C50449 / C50078;
    const double C2609 = C51314 * C1199;
    const double C14032 = C51457 * C1199;
    const double C36519 = C33488 * C1199;
    const double C2825 = C51314 * C1312;
    const double C5619 = C5413 * C1312;
    const double C6383 = C5412 * C1312;
    const double C11903 = C51378 * C1312;
    const double C14258 = C51457 * C1312;
    const double C34470 = C51378 * C1312;
    const double C41356 = C33488 * C1312;
    const double C44679 = C44473 * C1312;
    const double C45427 = C51495 * C1312;
    const double C2831 = C51314 * C1659;
    const double C5639 = C5412 * C1659;
    const double C11153 = C51378 * C1659;
    const double C14937 = C51457 * C1659;
    const double C33720 = C51378 * C1659;
    const double C37203 = C33488 * C1659;
    const double C44699 = C51495 * C1659;
    const double C2621 = C51314 * C2595;
    const double C3383 = C51314 * C3359;
    const double C14034 = C51378 * C3359;
    const double C36521 = C51378 * C3359;
    const double C50334 = -C50333;
    const double C50530 = C50522 / C50078;
    const double C50688 = C50686 / C50078;
    const double C510 =
        (2 * C50154 + C50074 * C50166 +
         C50069 * (C50069 * C50191 + C50186 * ae) + C50069 * C50186 * ae) /
        C50002;
    const double C512 = (C50069 * (3 * C50166 + C50074 * C50191) +
                         (3 * C50161 + C50074 * C50186) * ae) /
                        C50002;
    const double C972 =
        (C50069 * C50232 * C50191 + C50232 * C50186 * ae) / C50002;
    const double C124 = 4 * (2 * C50149 + C50074 * C50161) +
                        C50074 * (3 * C50161 + C50074 * C50186);
    const double C301 = 2 * C50149 + C50074 * C50161 + C50186 * C50259;
    const double C302 = C50232 * (3 * C50161 + C50074 * C50186);
    const double C493 = 2 * C50149 + C50074 * C50161 + C50186 * C50072;
    const double C494 = C50069 * (3 * C50161 + C50074 * C50186);
    const double C964 = C50069 * C50232 * C50186;
    const double C1185 =
        2 * C50232 * C50186 + C50232 * (C50186 + C50216 * C50259);
    const double C1649 = C50069 * (C50186 + C50216 * C50259);
    const double C1961 =
        2 * C50069 * C50186 + C50069 * (C50186 + C50216 * C50072);
    const double C5999 = C5413 * C1307;
    const double C8560 = C51314 * C1307;
    const double C11907 = C51378 * C1307;
    const double C34474 = C51378 * C1307;
    const double C45047 = C44473 * C1307;
    const double C6004 = C5416 * C1308;
    const double C8561 = C117 * C1308;
    const double C11910 = C10924 * C1308;
    const double C34477 = C33491 * C1308;
    const double C45052 = C44476 * C1308;
    const double C5998 = C5416 * C1301;
    const double C8559 = C117 * C1301;
    const double C11906 = C10924 * C1301;
    const double C34473 = C33491 * C1301;
    const double C45046 = C44476 * C1301;
    const double C1966 = (2 * (C50069 * C50166 + C50161 * ae) +
                          C50069 * (C50166 + C50069 * C50286 + C50282 * ae) +
                          (C50161 + C50178 * C50072) * ae) /
                         C50002;
    const double C1967 =
        (-2 * (C50069 * C50165 + C50161 * ce)) / C49936 -
        (C50069 * (C50069 * C50285 + C50165 + C50282 * ce)) / C49936 -
        ((C50161 + C50178 * C50072) * ce) / C49936;
    const double C2835 = C51314 * C2815;
    const double C5641 = C5413 * C2815;
    const double C14939 = C51378 * C2815;
    const double C37205 = C51378 * C2815;
    const double C44701 = C44473 * C2815;
    const double C2833 = C51314 * C2810;
    const double C5635 = C5413 * C2810;
    const double C14935 = C51378 * C2810;
    const double C37201 = C51378 * C2810;
    const double C44695 = C44473 * C2810;
    const double C2834 = C117 * C2811;
    const double C5640 = C5416 * C2811;
    const double C14938 = C10924 * C2811;
    const double C37204 = C33491 * C2811;
    const double C44700 = C44476 * C2811;
    const double C3379 = C51314 * C3354;
    const double C14030 = C51378 * C3354;
    const double C36517 = C51378 * C3354;
    const double C3382 = C117 * C3355;
    const double C14033 = C10924 * C3355;
    const double C36520 = C33491 * C3355;
    const double C2618 = C117 * C2586;
    const double C2832 = C117 * C2806;
    const double C5634 = C5416 * C2806;
    const double C14934 = C10924 * C2806;
    const double C37200 = C33491 * C2806;
    const double C44694 = C44476 * C2806;
    const double C3378 = C117 * C3350;
    const double C14029 = C10924 * C3350;
    const double C36516 = C33491 * C3350;
    const double C4784 = (2 * (C50069 * C50249 + C50248 * ae) +
                          C50069 * (C50249 + C50069 * C50401 + C50397 * ae) +
                          (C50248 + C50361 * C50072) * ae) /
                         C50002;
    const double C4791 =
        2 * ((-(C50249 * ce) / C49936) / C50002 - (ae * C50247) / C50078 -
             (C50069 * C50394) / C50078) -
        (ae * (C50069 * C50400 + C50247 + C50397 * ce)) / C50078 -
        ((C50249 + C50069 * C50401 + C50397 * ae) * ce) / C50078 +
        C50069 * ((-(ae * C50400) / C49936) / C50002 - C50394 / C50078 -
                  (C50401 * ce) / C50078 +
                  C50069 * ((-(C50363 * ce) / C49936) / C50002 -
                            (ae * C50359) / C50078 -
                            (C50069 * C50232 * C50324) / C50078));
    const double C4785 =
        (-2 * (C50069 * C50247 + C50248 * ce)) / C49936 -
        (C50069 * (C50069 * C50400 + C50247 + C50397 * ce)) / C49936 -
        ((C50248 + C50361 * C50072) * ce) / C49936;
    const double C50469 = C50173 + C50466;
    const double C50647 = C50633 / C50078;
    const double C5828 = C5416 * C5800;
    const double C44876 = C44476 * C5800;
    const double C50468 = C50465 + C50169;
    const double C50651 = C50637 / C49936;
    const double C50646 = C50632 / C49936;
    const double C3815 =
        (2 * C50245 + C50232 * C50305 +
         C50069 * (C50069 * C50356 + C50355 * ae) + C50069 * C50355 * ae) /
        C50002;
    const double C4333 = (C50069 * (3 * C50305 + C50232 * C50356) +
                          (3 * C50304 + C50232 * C50355) * ae) /
                         C50002;
    const double C3648 = 4 * (2 * C50244 + C50232 * C50304) +
                         C50232 * (3 * C50304 + C50232 * C50355);
    const double C3813 = 2 * C50244 + C50232 * C50304 + C50355 * C50072;
    const double C4331 = C50069 * (3 * C50304 + C50232 * C50355);
    const double C21475 =
        2 * C50069 * C50355 + C50069 * (C50355 + C50714 * C50072);
    const double C4786 = (2 * (C50069 * C50305 + C50304 * ae) +
                          C50069 * (C50305 + C50069 * C50409 + C50405 * ae) +
                          (C50304 + C50347 * C50072) * ae) /
                         C50002;
    const double C4787 =
        (-2 * (C50069 * C50303 + C50304 * ce)) / C49936 -
        (C50069 * (C50069 * C50408 + C50303 + C50405 * ce)) / C49936 -
        ((C50304 + C50347 * C50072) * ce) / C49936;
    const double C50541 = C50342 + C50538;
    const double C50774 = C50763 / C50078;
    const double C23158 = C5416 * C6781;
    const double C48530 = C44476 * C6781;
    const double C50540 = C50537 + C50338;
    const double C50778 = C50767 / C49936;
    const double C50773 = C50761 / C49936;
    const double C50619 = C50615 + C50602;
    const double C7665 = 4 * (2 * C50266 + C50069 * C50433) +
                         C50069 * (3 * C50433 + C50069 * C50614);
    const double C50618 = C50612 + C50599;
    const double C50855 = -C50842;
    const double C175 = C162 + C163;
    const double C10970 = C10950 + C10951;
    const double C33537 = C33517 + C33518;
    const double C360 = C337 + C338;
    const double C11530 = C11520 + C11521;
    const double C34097 = C34087 + C34088;
    const double C367 = C351 + C352;
    const double C11174 = C11154 + C11155;
    const double C33741 = C33721 + C33722;
    const double C563 = C543 + C544;
    const double C5463 = C5436 + C5437;
    const double C6171 = C6160 + C6161;
    const double C11368 = C11348 + C11349;
    const double C11364 = C11340 + C11341;
    const double C33935 = C33915 + C33916;
    const double C33931 = C33907 + C33908;
    const double C565 = C549 + C550;
    const double C5467 = C5444 + C5445;
    const double C10968 = C10946 + C10947;
    const double C11696 = C11685 + C11686;
    const double C33535 = C33513 + C33514;
    const double C34263 = C34252 + C34253;
    const double C1002 = C988 + C989;
    const double C6007 = C5996 + C5997;
    const double C11164 = C11134 + C11135;
    const double C11916 = C11904 + C11905;
    const double C33731 = C33701 + C33702;
    const double C34483 = C34471 + C34472;
    const double C2638 = C2622 + C2623;
    const double C3152 = C3146 + C3147;
    const double C11175 = C11156 + C11157;
    const double C33742 = C33723 + C33724;
    const double C2836 = C2822 + C2823;
    const double C5645 = C5624 + C5625;
    const double C6387 = C6376 + C6377;
    const double C11913 = C11898 + C11899;
    const double C14261 = C14253 + C14254;
    const double C34480 = C34465 + C34466;
    const double C41359 = C41351 + C41352;
    const double C5827 = C5412 * C1964;
    const double C5813 = C5413 * C1964;
    const double C11335 = C51378 * C1964;
    const double C33902 = C51378 * C1964;
    const double C44875 = C51495 * C1964;
    const double C44861 = C44473 * C1964;
    const double C50467 = C50464 / C50002;
    const double C2647 = C2633 * C118;
    const double C3381 = C2633 * C797;
    const double C4671 = C2633 * C1762;
    const double C2844 = C2838 * C484;
    const double C3144 = C2838 * C798;
    const double C4504 = C2838 * C1763;
    const double C14025 = C11170 + C11171;
    const double C14014 = C11171 + C11170;
    const double C3663 = C3658 + C3659;
    const double C31835 = C31825 + C31826;
    const double C37474 = C37464 + C37465;
    const double C3840 = C3834 + C3835;
    const double C16155 = C16148 + C16149;
    const double C22089 = C22074 + C22075;
    const double C23671 = C23660 + C23661;
    const double C31995 = C31987 + C31988;
    const double C37210 = C37190 + C37191;
    const double C37646 = C37634 + C37635;
    const double C4349 = C4342 + C4343;
    const double C15291 = C15284 + C15285;
    const double C22999 = C22988 + C22989;
    const double C32500 = C32489 + C32490;
    const double C36534 = C36510 + C36511;
    const double C38151 = C38140 + C38141;
    const double C15491 = C51378 * C4782;
    const double C22725 = C5413 * C4782;
    const double C23157 = C5412 * C4782;
    const double C37629 = C51378 * C4782;
    const double C48101 = C44473 * C4782;
    const double C48529 = C51495 * C4782;
    const double C50536 = C50529 / C50002;
    const double C50444 = C50441 + C50435;
    const double C50617 = C50611 - C50595;
    const double C174 = C160 + C161;
    const double C10972 = C10954 + C10955;
    const double C33539 = C33521 + C33522;
    const double C5833 = C5412 * C1971;
    const double C5819 = C5413 * C1971;
    const double C11339 = C51378 * C1971;
    const double C33906 = C51378 * C1971;
    const double C44881 = C51495 * C1971;
    const double C44867 = C44473 * C1971;
    const double C5832 = C5415 * C1965;
    const double C5818 = C5416 * C1965;
    const double C11338 = C10924 * C1965;
    const double C33905 = C33491 * C1965;
    const double C44866 = C44476 * C1965;
    const double C15495 = C51378 * C4790;
    const double C22731 = C5413 * C4790;
    const double C23163 = C5412 * C4790;
    const double C37633 = C51378 * C4790;
    const double C48107 = C44473 * C4790;
    const double C48535 = C51495 * C4790;
    const double C15494 = C10924 * C4783;
    const double C22730 = C5416 * C4783;
    const double C23162 = C5415 * C4783;
    const double C37632 = C33491 * C4783;
    const double C48106 = C44476 * C4783;
    const double C50443 = C50440 + C50432;
    const double C50603 = -C50592;
    const double C50120 = -C50119;
    const double C50327 = C50326 / C49936;
    const double C50554 = C50069 * C50548;
    const double C50650 = C50636 / C50078;
    const double C50690 = -C50689;
    const double C50787 = C50777 / C50078;
    const double C50225 = C50074 * C50223;
    const double C50257 = C50232 * C50223;
    const double C50291 = C50069 * C50223;
    const double C1190 =
        (2 * C50232 * C50191 + C50232 * (C50191 + C50223 * C50259)) / C50002;
    const double C1656 = (C50069 * (C50191 + C50223 * C50259) +
                          (C50186 + C50216 * C50259) * ae) /
                         C50002;
    const double C2593 = (3 * (C50166 + C50187 * C50259) +
                          C50232 * (2 * C50253 + C50232 * C50319)) /
                         C50002;
    const double C2812 =
        (C50166 + C50187 * C50259 + C50069 * (C50069 * C50319 + C50318 * ae) +
         C50069 * C50318 * ae) /
        C50002;
    const double C3356 = (C50069 * (2 * C50253 + C50232 * C50319) +
                          (2 * C50252 + C50232 * C50318) * ae) /
                         C50002;
    const double C50493 = C50069 * C50489;
    const double C50512 = C50509 + C50510;
    const double C50380 = C50369 + C50377;
    const double C50417 = C50414 + C50415;
    const double C50570 = C50069 * C50566;
    const double C50669 = C50202 + C50662;
    const double C50718 = C50232 * C50715;
    const double C50728 = C50069 * C50715;
    const double C50752 = C50069 * C50748;
    const double C50805 = C50519 + C50798;
    const double C50874 = C50868 + C50853;
    const double C50224 = C50211 - C50221;
    const double C2592 =
        (-3 * (C50185 * C50259 + C50165)) / C49936 +
        C50232 * ((-2 * C50251) / C49936 - (C50232 * C50317) / C49936);
    const double C2813 = -(C50069 * (C50069 * C50317 + C50318 * ce) +
                           C50185 * C50259 + C50165 + C50069 * C50318 * ce) /
                         C49936;
    const double C3357 =
        C50069 * ((-2 * C50251) / C49936 - (C50232 * C50317) / C49936) -
        ((2 * C50252 + C50232 * C50318) * ce) / C49936;
    const double C50492 = C50069 * C50486;
    const double C50511 = C50506 + C50507;
    const double C50378 = C50375 / C49936;
    const double C50416 = C50411 + C50412;
    const double C50569 = C50069 * C50563;
    const double C50666 = C50659 + C50196;
    const double C50716 = C50706 - C50713;
    const double C50751 = C50069 * C50745;
    const double C50802 = C50795 + C50517;
    const double C50871 = C50865 + C50850;
    const double C50445 = C50442 - C50430;
    const double C50222 = C50198 + C50219;
    const double C1302 = C50232 * C50186 + C50256 * C50072;
    const double C50293 = C50289 / C49936;
    const double C3647 = 4 * (2 * C50248 + C50232 * C50311) +
                         C50232 * (3 * C50311 + C50232 * C50379);
    const double C3814 = 2 * C50248 + C50232 * C50311 + C50379 * C50072;
    const double C4332 = C50069 * (3 * C50311 + C50232 * C50379);
    const double C7666 = 4 * (2 * C50274 + C50069 * C50461) +
                         C50069 * (3 * C50461 + C50069 * C50668);
    const double C50720 = C50699 + C50717;
    const double C50730 = C50726 / C49936;
    const double C24065 = 4 * (2 * C50388 + C50069 * C50533) +
                          C50069 * (3 * C50533 + C50069 * C50804);
    const double C50880 = C50835 + C50873;
    const double C50879 = C50872 / C49936;
    const double C165 = C51314 * C136;
    const double C356 = C51314 * C318;
    const double C691 = C51314 * C320;
    const double C50494 = C50491 / C50002;
    const double C50568 = C50561 / C50002;
    const double C50671 = C50665 - C50649;
    const double C20738 = C51314 * C3652;
    const double C50753 = C50750 / C50002;
    const double C50801 = C50794 - C50776;
    const double C50877 = C50870 - C50846;
    const double C137 =
        4 * ((-2 * C50153) / C49936 - (C50074 * C50165) / C49936) +
        C50074 * ((-3 * C50165) / C49936 + C50074 * C50192);
    const double C319 =
        (-2 * C50153) / C49936 - (C50074 * C50165) / C49936 + C50192 * C50259;
    const double C321 = C50232 * ((-3 * C50165) / C49936 + C50074 * C50192);
    const double C511 = (-2 * C50153) / C49936 - (C50074 * C50165) / C49936 +
                        C50069 * (C50069 * C50192 - (C50186 * ce) / C49936) -
                        (C50069 * C50186 * ce) / C49936;
    const double C513 = C50069 * ((-3 * C50165) / C49936 + C50074 * C50192) -
                        ((3 * C50161 + C50074 * C50186) * ce) / C49936;
    const double C973 =
        C50069 * C50232 * C50192 - (C50232 * C50186 * ce) / C49936;
    const double C3651 =
        4 * ((-2 * C50243) / C49936 - (C50232 * C50303) / C49936) +
        C50232 * ((-3 * C50303) / C49936 + C50232 * C50357);
    const double C3816 = (-2 * C50243) / C49936 - (C50232 * C50303) / C49936 +
                         C50069 * (C50069 * C50357 - (C50355 * ce) / C49936) -
                         (C50069 * C50355 * ce) / C49936;
    const double C4334 = C50069 * ((-3 * C50303) / C49936 + C50232 * C50357) -
                         ((3 * C50304 + C50232 * C50355) * ce) / C49936;
    const double C107 = (C51484 * C51157) / C50002 + (C51428 - C51467) / C50027;
    const double C108 =
        (C51485 * C51157) / C50002 + (2 * C51167 + C51484) / C50027;
    const double C109 = (C51157 * C51167) / C50006 + C51485 / C50027;
    const double C113 = (C51486 * C51180) / C49936 + (C51435 - C51470) / C49961;
    const double C114 =
        (C51487 * C51180) / C49936 + (2 * C51190 + C51486) / C49961;
    const double C115 = (C51180 * C51190) / C49940 + C51487 / C49961;
    const double C1180 =
        (C51488 * C51248) / C49936 + (C51443 - C51472) / C49961;
    const double C1181 =
        (C51489 * C51248) / C49936 + (2 * C51253 + C51488) / C49961;
    const double C1182 = (C51248 * C51253) / C49940 + C51489 / C49961;
    const double C20035 =
        (C51492 * C51347) / C50002 + (C51456 - C51478) / C50027;
    const double C20036 =
        (C51493 * C51347) / C50002 + (2 * C51352 + C51492) / C50027;
    const double C20037 = (C51347 * C51352) / C50006 + C51493 / C50027;
    const double C49977 = C49975 * ce;
    const double C44523 = C44496 + C44497;
    const double C44519 = C44488 + C44489;
    const double C44516 = C44482 + C44483;
    const double C44705 = C44684 + C44685;
    const double C47465 = C47450 + C47451;
    const double C47461 = C47442 + C47443;
    const double C47458 = C47436 + C47437;
    const double C50043 = C50041 * ae;
    const double C10978 = C10974 * C118;
    const double C11681 = C10974 * C797;
    const double C12942 = C10974 * C1762;
    const double C30943 = C30940 * C118;
    const double C32485 = C30940 * C797;
    const double C32799 = C30940 * C1762;
    const double C33541 = C33529 + C33530;
    const double C36523 = C33738 + C33737;
    const double C41146 = C33737 + C33738;
    const double C41145 = C33735 + C33736;
    const double C41142 = C33736 + C33735;
    const double C36542 = C36528 + C36529;
    const double C183 = C173 * C51217;
    const double C548 = C173 * C480;
    const double C813 = C173 * C51444;
    const double C1774 = C173 * C1760;
    const double C2234 = C173 * C51490;
    const double C375 = C363 * C51217;
    const double C984 = C363 * C51444;
    const double C2106 = C363 * C1760;
    const double C2819 = C363 * C480;
    const double C5145 = C363 * C51490;
    const double C2645 = C2630 * C51217;
    const double C3370 = C2630 * C51444;
    const double C3831 = C2630 * C480;
    const double C4661 = C2630 * C1760;
    const double C5309 = C2630 * C51490;
    const double C570 = C558 * C481;
    const double C807 = C558 * C51281;
    const double C1768 = C558 * C51281;
    const double C2224 = C558 * C51491;
    const double C3395 = C3385 * C51281;
    const double C3825 = C3385 * C481;
    const double C4659 = C3385 * C51281;
    const double C5305 = C3385 * C51491;
    const double C14048 = C14024 * C118;
    const double C14930 = C14024 * C797;
    const double C16940 = C14024 * C1762;
    const double C14039 = C14011 * C118;
    const double C14924 = C14011 * C797;
    const double C16934 = C14011 * C1762;
    const double C826 = C822 - C810;
    const double C1783 = C1781 - C1771;
    const double C3664 = C3660 + C3661;
    const double C31837 = C31829 + C31830;
    const double C37476 = C37468 + C37469;
    const double C3841 = C3836 + C3837;
    const double C16157 = C16152 + C16153;
    const double C22086 = C22068 + C22069;
    const double C23674 = C23666 + C23667;
    const double C31997 = C31991 + C31992;
    const double C37212 = C37194 + C37195;
    const double C37648 = C37638 + C37639;
    const double C47462 = C47444 + C47445;
    const double C4350 = C4346 + C4347;
    const double C15293 = C15288 + C15289;
    const double C23002 = C22994 + C22995;
    const double C32502 = C32493 + C32494;
    const double C36532 = C36506 + C36507;
    const double C38153 = C38144 + C38145;
    const double C373 = C361 * C51217;
    const double C990 = C361 * C51444;
    const double C2110 = C361 * C1760;
    const double C8556 = C361 * C480;
    const double C10673 = C361 * C51490;
    const double C378 = C366 * C51217;
    const double C2827 = C366 * C480;
    const double C3143 = C366 * C51444;
    const double C4503 = C366 * C1760;
    const double C5151 = C366 * C51490;
    const double C572 = C560 * C482;
    const double C2226 = C560 * C2216;
    const double C574 = C562 * C481;
    const double C811 = C562 * C51281;
    const double C1772 = C562 * C51281;
    const double C2230 = C562 * C51491;
    const double C10975 = C10964 + C10965;
    const double C33542 = C33531 + C33532;
    const double C1007 = C1001 * C51281;
    const double C2108 = C1001 * C51281;
    const double C2821 = C1001 * C481;
    const double C5147 = C1001 * C51491;
    const double C14023 = C11166 + C11167;
    const double C14012 = C11167 + C11166;
    const double C41144 = C33733 + C33734;
    const double C41143 = C33734 + C33733;
    const double C2648 = C2634 * C51217;
    const double C4344 = C2634 * C51444;
    const double C4666 = C2634 * C1760;
    const double C20849 = C2634 * C480;
    const double C21807 = C2634 * C51490;
    const double C3843 = C3839 * C482;
    const double C5307 = C3839 * C2216;
    const double C3398 = C3388 * C51281;
    const double C3833 = C3388 * C481;
    const double C4663 = C3388 * C51281;
    const double C5311 = C3388 * C51491;
    const double C30941 = C14044 + C14043;
    const double C36543 = C36530 + C36531;
    const double C50104 = C50103 / C50002;
    const double C2632 = C2608 + C2609;
    const double C14053 = C14031 + C14032;
    const double C36538 = C36518 + C36519;
    const double C2837 = C2824 + C2825;
    const double C5642 = C5618 + C5619;
    const double C6390 = C6382 + C6383;
    const double C11915 = C11902 + C11903;
    const double C14263 = C14257 + C14258;
    const double C34482 = C34469 + C34470;
    const double C41361 = C41355 + C41356;
    const double C44702 = C44678 + C44679;
    const double C2839 = C2830 + C2831;
    const double C5652 = C5638 + C5639;
    const double C11173 = C11152 + C11153;
    const double C14952 = C14936 + C14937;
    const double C33740 = C33719 + C33720;
    const double C37216 = C37202 + C37203;
    const double C2637 = C2620 + C2621;
    const double C50335 = C50334 / C50002;
    const double C554 = C51314 * C510;
    const double C5447 = C5413 * C510;
    const double C11688 = C51378 * C510;
    const double C34255 = C51378 * C510;
    const double C44507 = C44473 * C510;
    const double C817 = C51314 * C512;
    const double C10953 = C51378 * C512;
    const double C33520 = C51378 * C512;
    const double C995 = C51314 * C972;
    const double C11523 = C51378 * C972;
    const double C34090 = C51378 * C972;
    const double C164 = C117 * C124;
    const double C355 = C117 * C301;
    const double C690 = C117 * C302;
    const double C553 = C117 * C493;
    const double C5446 = C5416 * C493;
    const double C11687 = C10924 * C493;
    const double C34254 = C33491 * C493;
    const double C44506 = C44476 * C493;
    const double C816 = C117 * C494;
    const double C10952 = C10924 * C494;
    const double C33519 = C33491 * C494;
    const double C994 = C117 * C964;
    const double C11522 = C10924 * C964;
    const double C34089 = C33491 * C964;
    const double C6008 = C5998 + C5999;
    const double C8563 = C8559 + C8560;
    const double C11917 = C11906 + C11907;
    const double C34484 = C34473 + C34474;
    const double C45056 = C45046 + C45047;
    const double C6163 = C5413 * C1966;
    const double C11351 = C51378 * C1966;
    const double C33918 = C51378 * C1966;
    const double C45211 = C44473 * C1966;
    const double C6168 = C5416 * C1967;
    const double C11354 = C10924 * C1967;
    const double C33921 = C33491 * C1967;
    const double C45216 = C44476 * C1967;
    const double C2841 = C2834 + C2835;
    const double C5653 = C5640 + C5641;
    const double C14953 = C14938 + C14939;
    const double C37217 = C37204 + C37205;
    const double C44713 = C44700 + C44701;
    const double C3393 = C3382 + C3383;
    const double C14054 = C14033 + C14034;
    const double C36539 = C36520 + C36521;
    const double C2636 = C2618 + C2619;
    const double C2840 = C2832 + C2833;
    const double C5650 = C5634 + C5635;
    const double C14951 = C14934 + C14935;
    const double C37215 = C37200 + C37201;
    const double C44710 = C44694 + C44695;
    const double C3392 = C3378 + C3379;
    const double C14052 = C14029 + C14030;
    const double C36537 = C36516 + C36517;
    const double C6379 = C5413 * C4784;
    const double C14256 = C51378 * C4784;
    const double C41354 = C51378 * C4784;
    const double C45423 = C44473 * C4784;
    const double C6385 = C5413 * C4791;
    const double C14260 = C51378 * C4791;
    const double C41358 = C51378 * C4791;
    const double C45429 = C44473 * C4791;
    const double C6384 = C5416 * C4785;
    const double C14259 = C10924 * C4785;
    const double C41357 = C33491 * C4785;
    const double C45428 = C44476 * C4785;
    const double C50472 = C50469 + C50463;
    const double C50471 = C50468 + C50460;
    const double C50657 = -C50646;
    const double C20853 = C51314 * C3815;
    const double C22991 = C5413 * C3815;
    const double C32492 = C51378 * C3815;
    const double C38143 = C51378 * C3815;
    const double C48367 = C44473 * C3815;
    const double C21193 = C51314 * C4333;
    const double C31828 = C51378 * C4333;
    const double C37467 = C51378 * C4333;
    const double C20737 = C117 * C3648;
    const double C20852 = C117 * C3813;
    const double C22990 = C5416 * C3813;
    const double C32491 = C10924 * C3813;
    const double C38142 = C33491 * C3813;
    const double C48366 = C44476 * C3813;
    const double C21192 = C117 * C4331;
    const double C31827 = C10924 * C4331;
    const double C37466 = C33491 * C4331;
    const double C23663 = C5413 * C4786;
    const double C31990 = C51378 * C4786;
    const double C37637 = C51378 * C4786;
    const double C49035 = C44473 * C4786;
    const double C23668 = C5416 * C4787;
    const double C31993 = C10924 * C4787;
    const double C37640 = C33491 * C4787;
    const double C49040 = C44476 * C4787;
    const double C50544 = C50541 + C50535;
    const double C50543 = C50540 + C50532;
    const double C50785 = -C50773;
    const double C50623 = C50069 * C50619;
    const double C50836 = 3 * C50619;
    const double C50822 = C50619 * ce;
    const double C50622 = C50069 * C50618;
    const double C50828 = -3 * C50618;
    const double C50821 = ae * C50618;
    const double C50863 = C50855 / C50002;
    const double C185 = C175 * C118;
    const double C819 = C175 * C797;
    const double C1779 = C175 * C1762;
    const double C372 = C360 * C118;
    const double C997 = C360 * C797;
    const double C2115 = C360 * C1762;
    const double C379 = C367 * C118;
    const double C3149 = C367 * C797;
    const double C4508 = C367 * C1762;
    const double C575 = C563 * C485;
    const double C2231 = C563 * C2219;
    const double C11683 = C11364 + C11365;
    const double C34250 = C33931 + C33932;
    const double C577 = C565 * C484;
    const double C814 = C565 * C798;
    const double C1775 = C565 * C1763;
    const double C10977 = C10968 + C10969;
    const double C33544 = C33535 + C33536;
    const double C1008 = C1002 * C798;
    const double C2109 = C1002 * C1763;
    const double C8557 = C1002 * C484;
    const double C11519 = C11164 + C11165;
    const double C14459 = C11165 + C11164;
    const double C34086 = C33731 + C33732;
    const double C41557 = C33732 + C33731;
    const double C2652 = C2638 * C118;
    const double C3154 = C3152 * C798;
    const double C4506 = C3152 * C1763;
    const double C2842 = C2836 * C485;
    const double C5148 = C2836 * C2219;
    const double C14928 = C11912 + C11913;
    const double C14926 = C11913 + C11912;
    const double C42018 = C34479 + C34480;
    const double C42016 = C34480 + C34479;
    const double C5843 = C5826 + C5827;
    const double C5836 = C5812 + C5813;
    const double C11361 = C11334 + C11335;
    const double C33928 = C33901 + C33902;
    const double C44884 = C44860 + C44861;
    const double C50470 = C50467 - C50457;
    const double C14049 = C14025 * C118;
    const double C14042 = C14014 * C118;
    const double C3666 = C3663 * C118;
    const double C21195 = C3663 * C797;
    const double C21405 = C3663 * C1762;
    const double C3844 = C3840 * C485;
    const double C5312 = C3840 * C2219;
    const double C32487 = C16155 + C16154;
    const double C38138 = C37210 + C37211;
    const double C4352 = C4349 * C798;
    const double C4665 = C4349 * C1763;
    const double C20850 = C4349 * C484;
    const double C31824 = C15291 + C15290;
    const double C37463 = C36534 + C36535;
    const double C15497 = C15490 + C15491;
    const double C22736 = C22724 + C22725;
    const double C23167 = C23156 + C23157;
    const double C37643 = C37628 + C37629;
    const double C48112 = C48100 + C48101;
    const double C50539 = C50536 - C50521;
    const double C5802 =
        (3 * (C50145 + C50069 * C50270 + C50266 * ae) +
         C50069 * (2 * C50270 + C50069 * C50444 + C50433 * ae) +
         (2 * C50266 + C50069 * C50433) * ae) /
        C50002;
    const double C50621 = C50617 - C50596;
    const double C184 = C174 * C51217;
    const double C818 = C174 * C51444;
    const double C1778 = C174 * C1760;
    const double C5846 = C5832 + C5833;
    const double C5839 = C5818 + C5819;
    const double C11363 = C11338 + C11339;
    const double C33930 = C33905 + C33906;
    const double C44887 = C44866 + C44867;
    const double C15499 = C15494 + C15495;
    const double C22739 = C22730 + C22731;
    const double C23170 = C23162 + C23163;
    const double C37645 = C37632 + C37633;
    const double C48115 = C48106 + C48107;
    const double C5803 =
        (-3 * (C50069 * C50269 + C50144 + C50266 * ce)) / C49936 +
        C50069 * ((-2 * C50269) / C49936 - (C50069 * C50443) / C49936 -
                  (C50433 * ce) / C49936) -
        ((2 * C50266 + C50069 * C50433) * ce) / C49936;
    const double C50610 = C50603 / C50002;
    const double C50121 = C50120 / C50002;
    const double C50328 = -C50327;
    const double C50562 = C50554 / C50078;
    const double C50691 = C50690 / C50002;
    const double C50227 = C50201 + C50225;
    const double C1309 =
        (C50232 * C50191 + C50069 * (C50069 * C50257 + C50256 * ae) +
         C50069 * C50256 * ae) /
        C50002;
    const double C50294 = C50291 + C50292;
    const double C50496 = C50187 + C50493;
    const double C6370 = (2 * (C50069 * C50253 + C50252 * ae) +
                          C50069 * (C50253 + C50069 * C50512 + C50508 * ae) +
                          (C50252 + C50504 * C50072) * ae) /
                         C50002;
    const double C3650 = (4 * (2 * C50249 + C50232 * C50312) +
                          C50232 * (3 * C50312 + C50232 * C50380)) /
                         C50002;
    const double C3817 =
        (2 * C50249 + C50232 * C50312 +
         C50069 * (C50069 * C50380 + C50379 * ae) + C50069 * C50379 * ae) /
        C50002;
    const double C4335 = (C50069 * (3 * C50312 + C50232 * C50380) +
                          (3 * C50311 + C50232 * C50379) * ae) /
                         C50002;
    const double C4788 = (2 * (C50069 * C50312 + C50311 * ae) +
                          C50069 * (C50312 + C50069 * C50417 + C50413 * ae) +
                          (C50311 + C50373 * C50072) * ae) /
                         C50002;
    const double C50573 = C50363 + C50570;
    const double C50673 = C50669 + C50656;
    const double C50721 = C50702 + C50718;
    const double C50731 = C50728 + C50729;
    const double C50755 = C50349 + C50752;
    const double C50809 = C50805 + C50792;
    const double C50881 = C50069 * C50874;
    const double C50226 = C50074 * C50224;
    const double C50255 = C50232 * C50224;
    const double C50288 = C50069 * C50224;
    const double C1189 =
        2 * C50232 * C50192 + C50232 * (C50192 + C50224 * C50259);
    const double C1657 = C50069 * (C50192 + C50224 * C50259) -
                         ((C50186 + C50216 * C50259) * ce) / C49936;
    const double C50495 = C50492 + C50185;
    const double C6371 =
        (-2 * (C50069 * C50251 + C50252 * ce)) / C49936 -
        (C50069 * (C50069 * C50511 + C50251 + C50508 * ce)) / C49936 -
        ((C50252 + C50504 * C50072) * ce) / C49936;
    const double C50381 = C50371 - C50378;
    const double C4789 =
        (-2 * (C50069 * C50310 + C50311 * ce)) / C49936 -
        (C50069 * (C50069 * C50416 + C50310 + C50413 * ce)) / C49936 -
        ((C50311 + C50373 * C50072) * ce) / C49936;
    const double C50572 = C50569 + C50359;
    const double C50672 = C50666 + C50653;
    const double C50719 = C50232 * C50716;
    const double C50725 = C50069 * C50716;
    const double C50754 = C50751 + C50345;
    const double C50808 = C50802 + C50789;
    const double C50878 = C50069 * C50871;
    const double C5808 =
        3 * ((-(ae * C50269) / C49936) / C50002 - C50082 / C50078 -
             (C50270 * ce) / C50078 + C50069 * C50445) +
        (((-2 * C50269) / C49936 - (C50069 * C50443) / C49936 -
          (C50433 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50270 + C50069 * C50444 + C50433 * ae) * ce) / C50078 +
        C50069 * (2 * C50445 - (ae * C50443) / C50078 - (C50444 * ce) / C50078 +
                  C50069 * ((-(ae * C50431) / C49936) / C50002 - C50096 -
                            (C50434 * ce) / C50078 +
                            C50069 * ((-(C50162 * ce) / C49936) / C50002 -
                                      (ae * C50160) / C50078 -
                                      (C50069 * C50100) / C50078)));
    const double C125 = 5 * (3 * C50161 + C50074 * C50186) +
                        C50074 * (4 * C50186 + C50074 * C50222);
    const double C303 = 3 * C50161 + C50074 * C50186 + C50222 * C50259;
    const double C495 = 3 * C50161 + C50074 * C50186 + C50222 * C50072;
    const double C683 = C50232 * (4 * C50186 + C50074 * C50222);
    const double C799 = C50069 * (4 * C50186 + C50074 * C50222);
    const double C965 = C50069 * C50232 * C50222;
    const double C20730 = 5 * (3 * C50304 + C50232 * C50355) +
                          C50232 * (4 * C50355 + C50232 * C50720);
    const double C20843 = 3 * C50304 + C50232 * C50355 + C50720 * C50072;
    const double C21185 = C50069 * (4 * C50355 + C50232 * C50720);
    const double C40487 = 5 * (3 * C50433 + C50069 * C50614) +
                          C50069 * (4 * C50614 + C50069 * C50880);
    const double C50497 = C50494 - C50485;
    const double C50571 = C50568 - C50553;
    const double C50675 = C50671 - C50650;
    const double C50756 = C50753 - C50744;
    const double C50807 = C50801 - C50787;
    const double C50882 = C50069 * C50877;
    const double C166 = C117 * C137;
    const double C357 = C117 * C319;
    const double C692 = C117 * C321;
    const double C555 = C117 * C511;
    const double C5452 = C5416 * C511;
    const double C11691 = C10924 * C511;
    const double C34258 = C33491 * C511;
    const double C44512 = C44476 * C511;
    const double C820 = C117 * C513;
    const double C10956 = C10924 * C513;
    const double C33523 = C33491 * C513;
    const double C998 = C117 * C973;
    const double C11526 = C10924 * C973;
    const double C34093 = C33491 * C973;
    const double C20739 = C117 * C3651;
    const double C20854 = C117 * C3816;
    const double C22996 = C5416 * C3816;
    const double C32495 = C10924 * C3816;
    const double C38146 = C33491 * C3816;
    const double C48372 = C44476 * C3816;
    const double C21196 = C117 * C4334;
    const double C31831 = C10924 * C4334;
    const double C37470 = C33491 * C4334;
    const double C49979 = C49977 / C49936;
    const double C50045 = C50043 / C50002;
    const double C33545 = C33541 * C118;
    const double C34248 = C33541 * C797;
    const double C35509 = C33541 * C1762;
    const double C36541 = C36523 * C118;
    const double C41152 = C41146 * C118;
    const double C41151 = C41145 * C118;
    const double C42020 = C41145 * C797;
    const double C43978 = C41145 * C1762;
    const double C41148 = C41142 * C118;
    const double C42014 = C41142 * C797;
    const double C43972 = C41142 * C1762;
    const double C36545 = C36542 * C118;
    const double C38136 = C36542 * C797;
    const double C38450 = C36542 * C1762;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C823 = C812 + C813;
    const double C1782 = C1773 + C1774;
    const double C2617 = C375 + C376;
    const double C2602 = C376 + C375;
    const double C3376 = C984 + C985;
    const double C3368 = C985 + C984;
    const double C4990 = C2106 + C2107;
    const double C4989 = C2107 + C2106;
    const double C2655 = C2644 + C2645;
    const double C4340 = C3369 + C3370;
    const double C4673 = C4660 + C4661;
    const double C3667 = C3664 * C51217;
    const double C21194 = C3664 * C51444;
    const double C21404 = C3664 * C1760;
    const double C3845 = C3841 * C482;
    const double C5313 = C3841 * C2216;
    const double C32488 = C16157 + C16156;
    const double C38139 = C37212 + C37213;
    const double C4353 = C4350 * C51281;
    const double C4668 = C4350 * C51281;
    const double C20851 = C4350 * C481;
    const double C21809 = C4350 * C51491;
    const double C31823 = C15293 + C15292;
    const double C37462 = C36532 + C36533;
    const double C689 = C373 + C374;
    const double C2994 = C374 + C373;
    const double C8860 = C991 + C990;
    const double C9057 = C990 + C991;
    const double C10082 = C2111 + C2110;
    const double C10523 = C2110 + C2111;
    const double C2616 = C378 + C377;
    const double C2607 = C377 + C378;
    const double C3377 = C3143 + C3142;
    const double C3375 = C3142 + C3143;
    const double C4664 = C4502 + C4503;
    const double C4991 = C4503 + C4502;
    const double C830 = C826 - C811;
    const double C1785 = C1783 - C1772;
    const double C10979 = C10975 * C51217;
    const double C11682 = C10975 * C51444;
    const double C12943 = C10975 * C1760;
    const double C33546 = C33542 * C51217;
    const double C34249 = C33542 * C51444;
    const double C35510 = C33542 * C1760;
    const double C14047 = C14023 * C51217;
    const double C14929 = C14023 * C51444;
    const double C16939 = C14023 * C1760;
    const double C14040 = C14012 * C51217;
    const double C14925 = C14012 * C51444;
    const double C16935 = C14012 * C1760;
    const double C41150 = C41144 * C51217;
    const double C42019 = C41144 * C51444;
    const double C43977 = C41144 * C1760;
    const double C41149 = C41143 * C51217;
    const double C42015 = C41143 * C51444;
    const double C43973 = C41143 * C1760;
    const double C3657 = C2648 + C2649;
    const double C20139 = C2649 + C2648;
    const double C21191 = C4345 + C4344;
    const double C21402 = C4667 + C4666;
    const double C30944 = C30941 * C51217;
    const double C32486 = C30941 * C51444;
    const double C32800 = C30941 * C1760;
    const double C36546 = C36543 * C51217;
    const double C38137 = C36543 * C51444;
    const double C38451 = C36543 * C1760;
    const double C50105 = C50104 - C50096;
    const double C2646 = C2632 * C51217;
    const double C3380 = C2632 * C51444;
    const double C4670 = C2632 * C1760;
    const double C2843 = C2837 * C482;
    const double C5149 = C2837 * C2216;
    const double C14931 = C11914 + C11915;
    const double C14927 = C11915 + C11914;
    const double C42021 = C34481 + C34482;
    const double C42017 = C34482 + C34481;
    const double C2845 = C2839 * C481;
    const double C3145 = C2839 * C51281;
    const double C4505 = C2839 * C51281;
    const double C5153 = C2839 * C51491;
    const double C14026 = C11172 + C11173;
    const double C14013 = C11173 + C11172;
    const double C36522 = C33740 + C33739;
    const double C41147 = C33739 + C33740;
    const double C2651 = C2637 * C51217;
    const double C50336 = C50335 - C50096;
    const double C176 = C164 + C165;
    const double C369 = C355 + C356;
    const double C694 = C690 + C691;
    const double C567 = C553 + C554;
    const double C5468 = C5446 + C5447;
    const double C11697 = C11687 + C11688;
    const double C34264 = C34254 + C34255;
    const double C44528 = C44506 + C44507;
    const double C824 = C816 + C817;
    const double C10971 = C10952 + C10953;
    const double C33538 = C33519 + C33520;
    const double C1004 = C994 + C995;
    const double C11531 = C11522 + C11523;
    const double C34098 = C34089 + C34090;
    const double C8565 = C8563 * C485;
    const double C10676 = C8563 * C2219;
    const double C6172 = C6162 + C6163;
    const double C11369 = C11350 + C11351;
    const double C33936 = C33917 + C33918;
    const double C45220 = C45210 + C45211;
    const double C2847 = C2841 * C482;
    const double C5155 = C2841 * C2216;
    const double C3403 = C3393 * C51281;
    const double C4672 = C3393 * C51281;
    const double C2650 = C2636 * C118;
    const double C2846 = C2840 * C485;
    const double C5154 = C2840 * C2219;
    const double C3402 = C3392 * C798;
    const double C4669 = C3392 * C1763;
    const double C6388 = C6378 + C6379;
    const double C14262 = C14255 + C14256;
    const double C41360 = C41353 + C41354;
    const double C45432 = C45422 + C45423;
    const double C6391 = C6384 + C6385;
    const double C14264 = C14259 + C14260;
    const double C41362 = C41357 + C41358;
    const double C45435 = C45428 + C45429;
    const double C5804 =
        (3 * (C50154 + C50069 * C50278 + C50274 * ae) +
         C50069 * (2 * C50278 + C50069 * C50472 + C50461 * ae) +
         (2 * C50274 + C50069 * C50461) * ae) /
        C50002;
    const double C5805 =
        (-3 * (C50069 * C50277 + C50153 + C50274 * ce)) / C49936 +
        C50069 * ((-2 * C50277) / C49936 - (C50069 * C50471) / C49936 -
                  (C50461 * ce) / C49936) -
        ((2 * C50274 + C50069 * C50461) * ce) / C49936;
    const double C50664 = C50657 / C50002;
    const double C20742 = C20737 + C20738;
    const double C20856 = C20852 + C20853;
    const double C23000 = C22990 + C22991;
    const double C32501 = C32491 + C32492;
    const double C38152 = C38142 + C38143;
    const double C48376 = C48366 + C48367;
    const double C21199 = C21192 + C21193;
    const double C31836 = C31827 + C31828;
    const double C37475 = C37466 + C37467;
    const double C23672 = C23662 + C23663;
    const double C31996 = C31989 + C31990;
    const double C37647 = C37636 + C37637;
    const double C49044 = C49034 + C49035;
    const double C6783 =
        (3 * (C50245 + C50069 * C50392 + C50388 * ae) +
         C50069 * (2 * C50392 + C50069 * C50544 + C50533 * ae) +
         (2 * C50388 + C50069 * C50533) * ae) /
        C50002;
    const double C6784 =
        (-3 * (C50069 * C50391 + C50243 + C50388 * ce)) / C49936 +
        C50069 * ((-2 * C50391) / C49936 - (C50069 * C50543) / C49936 -
                  (C50533 * ce) / C49936) -
        ((2 * C50388 + C50069 * C50533) * ce) / C49936;
    const double C50793 = C50785 / C50002;
    const double C50626 = C50589 + C50623;
    const double C50841 = C50822 / C50078;
    const double C50625 = C50622 / C49936;
    const double C50847 = C50828 / C49936;
    const double C50840 = C50821 / C50078;
    const double C50869 = C50863 - C50111;
    const double C11694 = C11683 * C798;
    const double C12944 = C11683 * C1763;
    const double C34261 = C34250 * C798;
    const double C35511 = C34250 * C1763;
    const double C10981 = C10977 * C118;
    const double C33548 = C33544 * C118;
    const double C11529 = C11519 * C118;
    const double C14461 = C14459 * C118;
    const double C34096 = C34086 * C118;
    const double C41559 = C41557 * C118;
    const double C14947 = C14928 * C798;
    const double C16938 = C14928 * C1763;
    const double C14945 = C14926 * C798;
    const double C16936 = C14926 * C1763;
    const double C42025 = C42018 * C798;
    const double C43976 = C42018 * C1763;
    const double C42023 = C42016 * C798;
    const double C43974 = C42016 * C1763;
    const double C50473 = C50470 - C50458;
    const double C32498 = C32487 * C798;
    const double C32801 = C32487 * C1763;
    const double C38149 = C38138 * C798;
    const double C38452 = C38138 * C1763;
    const double C31834 = C31824 * C118;
    const double C37473 = C37463 * C118;
    const double C50542 = C50539 - C50530;
    const double C50624 = C50069 * C50621;
    const double C50820 = 2 * C50621;
    const double C190 = C184 + C185;
    const double C50616 = C50610 - C50096;
    const double C50122 = C50121 - C50111;
    const double C50329 = C50328 / C50002;
    const double C50692 = C50691 - C50111;
    const double C139 = (5 * (3 * C50166 + C50074 * C50191) +
                         C50074 * (4 * C50191 + C50074 * C50227)) /
                        C50002;
    const double C323 =
        (3 * C50166 + C50074 * C50191 + C50227 * C50259) / C50002;
    const double C514 =
        (3 * C50166 + C50074 * C50191 +
         C50069 * (C50069 * C50227 + C50222 * ae) + C50069 * C50222 * ae) /
        C50002;
    const double C685 = (C50232 * (4 * C50191 + C50074 * C50227)) / C50002;
    const double C800 = (C50069 * (4 * C50191 + C50074 * C50227) +
                         (4 * C50186 + C50074 * C50222) * ae) /
                        C50002;
    const double C974 =
        (C50069 * C50232 * C50227 + C50232 * C50222 * ae) / C50002;
    const double C1968 = (2 * (C50069 * C50191 + C50186 * ae) +
                          C50069 * (C50191 + C50069 * C50294 + C50290 * ae) +
                          (C50186 + C50216 * C50072) * ae) /
                         C50002;
    const double C50499 = C50496 + C50490;
    const double C50576 = C50573 + C50567;
    const double C50677 = C50069 * C50673;
    const double C20732 = (5 * (3 * C50305 + C50232 * C50356) +
                           C50232 * (4 * C50356 + C50232 * C50721)) /
                          C50002;
    const double C20844 =
        (3 * C50305 + C50232 * C50356 +
         C50069 * (C50069 * C50721 + C50720 * ae) + C50069 * C50720 * ae) /
        C50002;
    const double C21186 = (C50069 * (4 * C50356 + C50232 * C50721) +
                           (4 * C50355 + C50232 * C50720) * ae) /
                          C50002;
    const double C21476 = (2 * (C50069 * C50356 + C50355 * ae) +
                           C50069 * (C50356 + C50069 * C50731 + C50727 * ae) +
                           (C50355 + C50714 * C50072) * ae) /
                          C50002;
    const double C50758 = C50755 + C50749;
    const double C50812 = C50069 * C50809;
    const double C50884 = C50837 + C50881;
    const double C50228 = C50204 + C50226;
    const double C1310 = C50232 * C50192 +
                         C50069 * (C50069 * C50255 - (C50256 * ce) / C49936) -
                         (C50069 * C50256 * ce) / C49936;
    const double C50295 = C50288 - C50293;
    const double C50498 = C50495 + C50487;
    const double C3649 =
        4 * ((-2 * C50247) / C49936 - (C50232 * C50310) / C49936) +
        C50232 * ((-3 * C50310) / C49936 + C50232 * C50381);
    const double C3818 = (-2 * C50247) / C49936 - (C50232 * C50310) / C49936 +
                         C50069 * (C50069 * C50381 - (C50379 * ce) / C49936) -
                         (C50069 * C50379 * ce) / C49936;
    const double C4336 = C50069 * ((-3 * C50310) / C49936 + C50232 * C50381) -
                         ((3 * C50311 + C50232 * C50379) * ce) / C49936;
    const double C50575 = C50572 + C50564;
    const double C50676 = C50069 * C50672;
    const double C50722 = C50705 + C50719;
    const double C50732 = C50725 - C50730;
    const double C50757 = C50754 + C50746;
    const double C50811 = C50069 * C50808;
    const double C50883 = C50878 / C49936;
    const double C50574 = C50571 - C50562;
    const double C50678 = C50069 * C50675;
    const double C50810 = C50069 * C50807;
    const double C49980 = C49979 - C49964;
    const double C50046 = C50045 - C50030;
    const double C827 = C823 - C814;
    const double C1784 = C1782 - C1775;
    const double C3390 = C1006 - C3376;
    const double C3386 = C3368 - C1006;
    const double C4993 = C2105 - C4990;
    const double C4992 = C4989 - C2105;
    const double C2658 = C2655 * C2434;
    const double C20138 = C2655 * C51162;
    const double C24805 = C2655 * C51428;
    const double C4348 = C4340 - C3397;
    const double C4675 = C4673 - C4662;
    const double C20735 = C3667 + C3666;
    const double C32499 = C32488 * C51281;
    const double C32802 = C32488 * C51281;
    const double C38150 = C38139 * C51281;
    const double C38453 = C38139 * C51281;
    const double C31833 = C31823 * C51217;
    const double C37472 = C37462 * C51217;
    const double C8861 = C8860 - C1008;
    const double C9058 = C1008 - C9057;
    const double C10083 = C10082 - C2109;
    const double C10524 = C2109 - C10523;
    const double C2641 = C2616 * C2434;
    const double C20141 = C2616 * C51162;
    const double C24808 = C2616 * C51428;
    const double C2631 = C2607 * C51167;
    const double C24806 = C2607 * C51167;
    const double C3391 = C3144 - C3377;
    const double C3389 = C3375 - C3144;
    const double C4674 = C4664 - C4504;
    const double C4994 = C4504 - C4991;
    const double C10982 = C10978 + C10979;
    const double C11693 = C11681 + C11682;
    const double C12946 = C12942 + C12943;
    const double C33549 = C33545 + C33546;
    const double C34260 = C34248 + C34249;
    const double C35513 = C35509 + C35510;
    const double C14057 = C14047 + C14048;
    const double C14948 = C14929 + C14930;
    const double C16943 = C16939 + C16940;
    const double C14055 = C14039 + C14040;
    const double C14944 = C14924 + C14925;
    const double C16942 = C16934 + C16935;
    const double C41155 = C41150 + C41151;
    const double C42026 = C42019 + C42020;
    const double C43981 = C43977 + C43978;
    const double C41154 = C41148 + C41149;
    const double C42022 = C42014 + C42015;
    const double C43980 = C43972 + C43973;
    const double C3662 = C3657 * C2434;
    const double C20736 = C3657 * C51162;
    const double C25688 = C3657 * C51428;
    const double C20142 = C20139 * C51162;
    const double C21198 = C21191 - C4352;
    const double C21407 = C21402 - C4665;
    const double C30945 = C30943 + C30944;
    const double C32497 = C32485 + C32486;
    const double C32803 = C32799 + C32800;
    const double C36548 = C36545 + C36546;
    const double C38148 = C38136 + C38137;
    const double C38454 = C38450 + C38451;
    const double C145 =
        4 * ((-2 * C50074 * C50091) / C50078 + C50074 * C50105) +
        C50074 *
            (3 * C50105 +
             C50074 * ((-2 * C50074 * C50100) / C50078 +
                       C50074 * ((-((C50094 * C50095 +
                                     C50072 * bs[7] * std::pow(C50068, 7)) *
                                    C50070 * C50087) /
                                  C49936) /
                                     C50002 -
                                 C50100 / C50078)));
    const double C324 =
        (yP - yQ) * ((-2 * C50074 * C50091) / C50078 + C50074 * C50105);
    const double C330 = (-(C50091 * C50087) / C49936) / C50002 -
                        C50082 / C50078 + C50105 * std::pow(yP - yQ, 2);
    const double C521 = (-(C50091 * C50087) / C49936) / C50002 -
                        C50082 / C50078 -
                        (ae * (C50069 * C50165 + C50161 * ce)) / C50078 -
                        ((C50069 * C50166 + C50161 * ae) * ce) / C50078 +
                        C50069 * ((-(C50166 * ce) / C49936) / C50002 -
                                  (ae * C50165) / C50078 + C50069 * C50105);
    const double C522 =
        (((-2 * C50153) / C49936 - (C50074 * C50165) / C49936) * ae) / C50002 -
        ((2 * C50154 + C50074 * C50166) * ce) / C50078 +
        C50069 * ((-2 * C50074 * C50091) / C50078 + C50074 * C50105);
    const double C978 = (-(C50232 * C50166 * ce) / C49936) / C50002 -
                        (ae * C50232 * C50165) / C50078 +
                        C50069 * C50232 * C50105;
    const double C2657 = C2647 + C2646;
    const double C2656 = C2646 + C2647;
    const double C14949 = C14931 * C51281;
    const double C16941 = C14931 * C51281;
    const double C14946 = C14927 * C51281;
    const double C16937 = C14927 * C51281;
    const double C42027 = C42021 * C51281;
    const double C43979 = C42021 * C51281;
    const double C42024 = C42017 * C51281;
    const double C43975 = C42017 * C51281;
    const double C14050 = C14026 * C51217;
    const double C14041 = C14013 * C51217;
    const double C36540 = C36522 * C51217;
    const double C41153 = C41147 * C51217;
    const double C3654 =
        4 * ((-2 * C50232 * C50091) / C50078 + C50232 * C50336) +
        C50232 * (3 * C50336 +
                  C50232 * ((-2 * C50232 * C50100) / C50078 +
                            C50232 * ((-(C50117 * C50259) / C49936) / C50002 -
                                      C50111)));
    const double C3819 =
        (-2 * C50232 * C50091) / C50078 + C50232 * C50336 +
        ((C50069 * C50357 - (C50355 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50356 + C50355 * ae) * ce) / C50078 +
        C50069 * ((C50357 * ae) / C50002 - (C50356 * ce) / C50078 +
                  C50069 * ((-2 * C50232 * C50100) / C50078 +
                            C50232 * ((-(C50117 * C50259) / C49936) / C50002 -
                                      C50111)));
    const double C4337 =
        (((-3 * C50303) / C49936 + C50232 * C50357) * ae) / C50002 -
        ((3 * C50305 + C50232 * C50356) * ce) / C50078 +
        C50069 * (3 * C50336 +
                  C50232 * ((-2 * C50232 * C50100) / C50078 +
                            C50232 * ((-(C50117 * C50259) / C49936) / C50002 -
                                      C50111)));
    const double C4792 =
        2 * ((-(C50305 * ce) / C49936) / C50002 - (ae * C50303) / C50078 +
             C50069 * C50336) -
        (ae * (C50069 * C50408 + C50303 + C50405 * ce)) / C50078 -
        ((C50305 + C50069 * C50409 + C50405 * ae) * ce) / C50078 +
        C50069 *
            (C50336 - (ae * C50408) / C50078 - (C50409 * ce) / C50078 +
             C50069 *
                 ((-(C50349 * ce) / C49936) / C50002 - (ae * C50345) / C50078 +
                  C50069 * ((-(C50117 * C50259) / C49936) / C50002 - C50111)));
    const double C186 = C176 * C118;
    const double C381 = C369 * C118;
    const double C696 = C694 * C118;
    const double C579 = C567 * C485;
    const double C2237 = C567 * C2219;
    const double C828 = C824 * C798;
    const double C1777 = C824 * C1763;
    const double C1010 = C1004 * C798;
    const double C2113 = C1004 * C1763;
    const double C5829 = C5413 * C5804;
    const double C44877 = C44473 * C5804;
    const double C5834 = C5416 * C5805;
    const double C44882 = C44476 * C5805;
    const double C50670 = C50664 - C50325;
    const double C20744 = C20742 * C118;
    const double C20858 = C20856 * C485;
    const double C21810 = C20856 * C2219;
    const double C21202 = C21199 * C798;
    const double C21403 = C21199 * C1763;
    const double C23159 = C5413 * C6783;
    const double C48531 = C44473 * C6783;
    const double C23164 = C5416 * C6784;
    const double C48536 = C44476 * C6784;
    const double C50800 = C50793 - C50762;
    const double C50629 = C50626 + C50609;
    const double C50628 = C50597 - C50625;
    const double C50876 = C50869 - C50843;
    const double C5809 =
        3 * ((-(ae * C50277) / C49936) / C50002 - C50240 / C50078 -
             (C50278 * ce) / C50078 + C50069 * C50473) +
        (((-2 * C50277) / C49936 - (C50069 * C50471) / C49936 -
          (C50461 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50278 + C50069 * C50472 + C50461 * ae) * ce) / C50078 +
        C50069 * (2 * C50473 - (ae * C50471) / C50078 - (C50472 * ce) / C50078 +
                  C50069 * ((-(ae * C50459) / C49936) / C50002 - C50325 -
                            (C50462 * ce) / C50078 +
                            C50069 * ((-(C50202 * ce) / C49936) / C50002 -
                                      (ae * C50196) / C50078 -
                                      (C50069 * C50324) / C50078)));
    const double C6787 =
        3 * ((-(ae * C50391) / C49936) / C50002 - C50385 / C50078 -
             (C50392 * ce) / C50078 + C50069 * C50542) +
        (((-2 * C50391) / C49936 - (C50069 * C50543) / C49936 -
          (C50533 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50392 + C50069 * C50544 + C50533 * ae) * ce) / C50078 +
        C50069 * (2 * C50542 - (ae * C50543) / C50078 - (C50544 * ce) / C50078 +
                  C50069 * ((-(ae * C50531) / C49936) / C50002 -
                            C50516 / C50078 - (C50534 * ce) / C50078 +
                            C50069 * ((-(C50519 * ce) / C49936) / C50002 -
                                      (ae * C50517) / C50078 -
                                      (C50069 * C50232 * C50117) / C50078)));
    const double C50854 = C50820 - C50840;
    const double C50620 = C50616 - C50593;
    const double C50123 = C50074 * C50122;
    const double C50477 = C50069 * C50122;
    const double C50502 = C50232 * C50122;
    const double C1198 =
        2 * C50232 * C50105 + C50232 * (C50105 + C50122 * std::pow(C50232, 2));
    const double C1313 =
        C50232 * C50105 - (ae * (C50069 * C50251 + C50252 * ce)) / C50078 -
        ((C50069 * C50253 + C50252 * ae) * ce) / C50078 +
        C50069 * ((-(C50253 * ce) / C49936) / C50002 - (ae * C50251) / C50078 +
                  C50069 * C50232 * C50122);
    const double C1660 =
        (-((C50166 + C50187 * C50259) * ce) / C49936) / C50002 -
        (ae * (C50185 * C50259 + C50165)) / C50078 +
        C50069 * (C50105 + C50122 * C50259);
    const double C1972 =
        2 * ((-(C50166 * ce) / C49936) / C50002 - (ae * C50165) / C50078 +
             C50069 * C50105) -
        (ae * (C50069 * C50285 + C50165 + C50282 * ce)) / C50078 -
        ((C50166 + C50069 * C50286 + C50282 * ae) * ce) / C50078 +
        C50069 * (C50105 - (ae * C50285) / C50078 - (C50286 * ce) / C50078 +
                  C50069 * ((-(C50187 * ce) / C49936) / C50002 -
                            (ae * C50185) / C50078 + C50069 * C50122));
    const double C2596 =
        3 * (C50105 + C50122 * C50259) +
        C50232 *
            (2 * C50232 * C50122 +
             C50232 *
                 (C50122 +
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078) *
                      C50259));
    const double C2816 =
        C50105 + C50122 * C50259 -
        (ae * (C50069 * C50317 + C50318 * ce)) / C50078 -
        ((C50069 * C50319 + C50318 * ae) * ce) / C50078 +
        C50069 *
            ((-(C50319 * ce) / C49936) / C50002 - (ae * C50317) / C50078 +
             C50069 *
                 (C50122 +
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078) *
                      C50259));
    const double C3360 =
        (((-2 * C50251) / C49936 - (C50232 * C50317) / C49936) * ae) / C50002 -
        ((2 * C50253 + C50232 * C50319) * ce) / C50078 +
        C50069 *
            (2 * C50232 * C50122 +
             C50232 *
                 (C50122 +
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078) *
                      C50259));
    const double C50330 = C50329 - C50325;
    const double C50693 = C50232 * C50692;
    const double C50736 = C50069 * C50692;
    const double C5806 =
        (3 * (C50166 + C50069 * C50286 + C50282 * ae) +
         C50069 * (2 * C50286 + C50069 * C50499 + C50488 * ae) +
         (2 * C50282 + C50069 * C50488) * ae) /
        C50002;
    const double C6785 =
        (3 * (C50249 + C50069 * C50401 + C50397 * ae) +
         C50069 * (2 * C50401 + C50069 * C50576 + C50565 * ae) +
         (2 * C50397 + C50069 * C50565) * ae) /
        C50002;
    const double C50680 = C50643 + C50677;
    const double C23150 =
        (3 * (C50305 + C50069 * C50409 + C50405 * ae) +
         C50069 * (2 * C50409 + C50069 * C50758 + C50747 * ae) +
         (2 * C50405 + C50069 * C50747) * ae) /
        C50002;
    const double C50815 = C50771 + C50812;
    const double C50887 = C50884 + C50861;
    const double C980 =
        (C50232 * C50228 * ae) / C50002 - (C50232 * C50227 * ce) / C50078 +
        C50069 * C50232 *
            (3 * C50122 +
             C50074 * ((-2 * C50074 * C50117) / C50078 +
                       C50074 * ((-((C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50087) /
                                  C49936) /
                                     C50002 -
                                 C50117 / C50078)));
    const double C138 = 5 * ((-3 * C50165) / C49936 + C50074 * C50192) +
                        C50074 * (4 * C50192 + C50074 * C50228);
    const double C322 =
        (-3 * C50165) / C49936 + C50074 * C50192 + C50228 * C50259;
    const double C515 = (-3 * C50165) / C49936 + C50074 * C50192 +
                        C50069 * (C50069 * C50228 - (C50222 * ce) / C49936) -
                        (C50069 * C50222 * ce) / C49936;
    const double C684 = C50232 * (4 * C50192 + C50074 * C50228);
    const double C801 = C50069 * (4 * C50192 + C50074 * C50228) -
                        ((4 * C50186 + C50074 * C50222) * ce) / C49936;
    const double C975 =
        C50069 * C50232 * C50228 - (C50232 * C50222 * ce) / C49936;
    const double C1969 =
        2 * (C50069 * C50192 - (C50186 * ce) / C49936) +
        C50069 * (C50192 + C50069 * C50295 - (C50290 * ce) / C49936) -
        ((C50186 + C50216 * C50072) * ce) / C49936;
    const double C5807 =
        (-3 * (C50069 * C50285 + C50165 + C50282 * ce)) / C49936 +
        C50069 * ((-2 * C50285) / C49936 - (C50069 * C50498) / C49936 -
                  (C50488 * ce) / C49936) -
        ((2 * C50282 + C50069 * C50488) * ce) / C49936;
    const double C6786 =
        (-3 * (C50069 * C50400 + C50247 + C50397 * ce)) / C49936 +
        C50069 * ((-2 * C50400) / C49936 - (C50069 * C50575) / C49936 -
                  (C50565 * ce) / C49936) -
        ((2 * C50397 + C50069 * C50565) * ce) / C49936;
    const double C50679 = C50676 / C49936;
    const double C20731 = 5 * ((-3 * C50303) / C49936 + C50232 * C50357) +
                          C50232 * (4 * C50357 + C50232 * C50722);
    const double C20845 = (-3 * C50303) / C49936 + C50232 * C50357 +
                          C50069 * (C50069 * C50722 - (C50720 * ce) / C49936) -
                          (C50069 * C50720 * ce) / C49936;
    const double C21187 = C50069 * (4 * C50357 + C50232 * C50722) -
                          ((4 * C50355 + C50232 * C50720) * ce) / C49936;
    const double C21477 =
        2 * (C50069 * C50357 - (C50355 * ce) / C49936) +
        C50069 * (C50357 + C50069 * C50732 - (C50727 * ce) / C49936) -
        ((C50355 + C50714 * C50072) * ce) / C49936;
    const double C23151 =
        (-3 * (C50069 * C50408 + C50303 + C50405 * ce)) / C49936 +
        C50069 * ((-2 * C50408) / C49936 - (C50069 * C50757) / C49936 -
                  (C50747 * ce) / C49936) -
        ((2 * C50405 + C50069 * C50747) * ce) / C49936;
    const double C50814 = C50811 / C49936;
    const double C50886 = C50848 - C50883;
    const double C6788 =
        3 * ((-(ae * C50400) / C49936) / C50002 - C50394 / C50078 -
             (C50401 * ce) / C50078 + C50069 * C50574) +
        (((-2 * C50400) / C49936 - (C50069 * C50575) / C49936 -
          (C50565 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50401 + C50069 * C50576 + C50565 * ae) * ce) / C50078 +
        C50069 * (2 * C50574 - (ae * C50575) / C50078 - (C50576 * ce) / C50078 +
                  C50069 * ((-(ae * C50563) / C49936) / C50002 -
                            C50548 / C50078 - (C50566 * ce) / C50078 +
                            C50069 * ((-(C50551 * ce) / C49936) / C50002 -
                                      (ae * C50549) / C50078 -
                                      (C50069 * C50232 * C50074 *
                                       (C50109 * C50110 +
                                        C50072 * bs[8] * std::pow(C50065, 8)) *
                                       C50070) /
                                          C50078)));
    const double C1954 =
        ((((0 - (C49934 * C49960) / C49936) * ce) / C49936 - (0 * de) / C49940 +
          C49935 / C49936) /
             C49961 -
         ((C49934 * C49978 + 0) * de) / C49936) /
            C49961 +
        ((C49934 * (C49978 / C49961 -
                    ((C49934 * C49980 + C51444) * de) / C49936 + C49973) +
          C51490) *
         ce) /
            C49936 +
        C49980 / C49961 - ((C49934 * C49973 + C51281) * de) / C49936;
    const double C1955 =
        (C49978 / C49961 - ((C49934 * C49980 + C51444) * de) / C49936 +
         C49973) /
            C49961 +
        ((C49934 *
              (C49980 / C49961 - ((C49934 * C49973 + C51281) * de) / C49936) +
          C51491) *
         ce) /
            C49936 +
        2 * (C49973 / C49961 - (0 * de) / C49936);
    const double C1956 =
        (C49980 / C49961 - ((C49934 * C49973 + C51281) * de) / C49936) /
            C49961 +
        ((C49934 * (C49973 / C49961 - (0 * de) / C49936) + C2216) * ce) /
            C49936;
    const double C2217 =
        C49978 / C49961 - ((C49934 * C49980 + C51444) * de) / C49936 + C49973;
    const double C2218 =
        C49980 / C49961 - ((C49934 * C49973 + C51281) * de) / C49936;
    const double C39111 =
        ((((0 - (C50000 * C50026) / C50002) * ae) / C50002 - (0 * be) / C50006 +
          C50001 / C50002) /
             C50027 -
         ((C50000 * C50044 + 0) * be) / C50002) /
            C50027 +
        ((C50000 * (C50044 / C50027 -
                    ((C50000 * C50046 + C51457) * be) / C50002 + C50039) +
          C51494) *
         ae) /
            C50002 +
        C50046 / C50027 - ((C50000 * C50039 + C51378) * be) / C50002;
    const double C39112 =
        (C50044 / C50027 - ((C50000 * C50046 + C51457) * be) / C50002 +
         C50039) /
            C50027 +
        ((C50000 *
              (C50046 / C50027 - ((C50000 * C50039 + C51378) * be) / C50002) +
          C51495) *
         ae) /
            C50002 +
        2 * (C50039 / C50027 - (0 * be) / C50002);
    const double C39113 =
        (C50046 / C50027 - ((C50000 * C50039 + C51378) * be) / C50002) /
            C50027 +
        ((C50000 * (C50039 / C50027 - (0 * be) / C50002) + C44473) * ae) /
            C50002;
    const double C44474 =
        C50044 / C50027 - ((C50000 * C50046 + C51457) * be) / C50002 + C50039;
    const double C44475 =
        C50046 / C50027 - ((C50000 * C50039 + C51378) * be) / C50002;
    const double C3400 = C3390 + C1007;
    const double C3396 = C3386 - C1007;
    const double C4996 = C4993 + C2108;
    const double C4995 = C4992 - C2108;
    const double C4351 = C4348 - C3398;
    const double C4677 = C4675 - C4663;
    const double C20741 = C20735 * C51162;
    const double C31839 = C31833 + C31834;
    const double C37478 = C37472 + C37473;
    const double C2659 = C2658 + C2631;
    const double C24809 = C24805 + C24806;
    const double C3401 = C3391 + C3145;
    const double C3399 = C3389 - C3145;
    const double C4676 = C4674 - C4505;
    const double C4997 = C4994 + C4505;
    const double C11700 = C11693 - C11694;
    const double C12947 = C12946 - C12944;
    const double C34267 = C34260 - C34261;
    const double C35514 = C35513 - C35511;
    const double C14955 = C14947 - C14948;
    const double C16945 = C16938 - C16943;
    const double C14954 = C14944 - C14945;
    const double C16944 = C16942 - C16936;
    const double C42029 = C42025 - C42026;
    const double C43983 = C43976 - C43981;
    const double C42028 = C42022 - C42023;
    const double C43982 = C43980 - C43974;
    const double C21201 = C21198 - C4353;
    const double C21408 = C21407 - C4668;
    const double C30946 = C30945 * C51162;
    const double C32504 = C32497 - C32498;
    const double C32804 = C32803 - C32801;
    const double C36549 = C36548 * C51162;
    const double C38155 = C38148 - C38149;
    const double C38455 = C38454 - C38452;
    const double C167 = C51314 * C145;
    const double C336 = C51314 * C324;
    const double C11525 = C51457 * C324;
    const double C34092 = C33488 * C324;
    const double C354 = C51314 * C330;
    const double C11159 = C51457 * C330;
    const double C33726 = C33488 * C330;
    const double C546 = C51314 * C521;
    const double C5431 = C5413 * C521;
    const double C6167 = C5412 * C521;
    const double C11353 = C51457 * C521;
    const double C11345 = C51378 * C521;
    const double C33920 = C33488 * C521;
    const double C33912 = C51378 * C521;
    const double C44491 = C44473 * C521;
    const double C45215 = C51495 * C521;
    const double C552 = C51314 * C522;
    const double C5451 = C5412 * C522;
    const double C10943 = C51378 * C522;
    const double C11690 = C51457 * C522;
    const double C33510 = C51378 * C522;
    const double C34257 = C33488 * C522;
    const double C44511 = C51495 * C522;
    const double C993 = C51314 * C978;
    const double C6003 = C5412 * C978;
    const double C11131 = C51378 * C978;
    const double C11909 = C51457 * C978;
    const double C33698 = C51378 * C978;
    const double C34476 = C33488 * C978;
    const double C45051 = C51495 * C978;
    const double C3656 = C2656 * C51167;
    const double C20140 = C2656 * C51162;
    const double C25687 = C2656 * C51167;
    const double C14058 = C14049 + C14050;
    const double C14056 = C14041 + C14042;
    const double C36544 = C36540 + C36541;
    const double C41156 = C41152 + C41153;
    const double C20740 = C51314 * C3654;
    const double C20855 = C51314 * C3819;
    const double C22997 = C5413 * C3819;
    const double C32496 = C51378 * C3819;
    const double C38147 = C51378 * C3819;
    const double C48373 = C44473 * C3819;
    const double C21197 = C51314 * C4337;
    const double C31832 = C51378 * C4337;
    const double C37471 = C51378 * C4337;
    const double C23669 = C5413 * C4792;
    const double C31994 = C51378 * C4792;
    const double C37641 = C51378 * C4792;
    const double C49041 = C44473 * C4792;
    const double C5844 = C5828 + C5829;
    const double C44892 = C44876 + C44877;
    const double C50674 = C50670 - C50647;
    const double C23168 = C23158 + C23159;
    const double C48540 = C48530 + C48531;
    const double C50806 = C50800 - C50774;
    const double C7667 =
        (4 * (2 * C50270 + C50069 * C50444 + C50433 * ae) +
         C50069 * (3 * C50444 + C50069 * C50629 + C50614 * ae) +
         (3 * C50433 + C50069 * C50614) * ae) /
        C50002;
    const double C50630 = C50628 - C50613;
    const double C50885 = C50876 + C50882;
    const double C5835 = C5413 * C5809;
    const double C44883 = C44473 * C5809;
    const double C23165 = C5413 * C6787;
    const double C48537 = C44473 * C6787;
    const double C50862 = C50854 - C50841;
    const double C50627 = C50620 + C50624;
    const double C50124 = C50114 + C50123;
    const double C50500 = C50497 + C50477;
    const double C6372 =
        2 * ((-(C50253 * ce) / C49936) / C50002 - (ae * C50251) / C50078 +
             C50069 * C50502) -
        (ae * (C50069 * C50511 + C50251 + C50508 * ce)) / C50078 -
        ((C50253 + C50069 * C50512 + C50508 * ae) * ce) / C50078 +
        C50069 * (C50502 - (ae * C50511) / C50078 - (C50512 * ce) / C50078 +
                  C50069 * ((-(C50505 * ce) / C49936) / C50002 -
                            (ae * C50503) / C50078 +
                            C50069 * C50232 *
                                ((-((C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50087) /
                                  C49936) /
                                     C50002 -
                                 C50117 / C50078)));
    const double C2625 = C51314 * C1198;
    const double C6005 = C5413 * C1313;
    const double C8562 = C51314 * C1313;
    const double C11911 = C51378 * C1313;
    const double C34478 = C51378 * C1313;
    const double C45053 = C44473 * C1313;
    const double C3151 = C51314 * C1660;
    const double C11161 = C51378 * C1660;
    const double C33728 = C51378 * C1660;
    const double C6169 = C5413 * C1972;
    const double C11355 = C51378 * C1972;
    const double C33922 = C51378 * C1972;
    const double C45217 = C44473 * C1972;
    const double C3653 =
        4 * ((-2 * C50232 * C50107) / C50078 + C50232 * C50330) +
        C50232 *
            (3 * C50330 +
             C50232 * ((-2 * C50232 * C50324) / C50078 +
                       C50232 * ((-(C50074 *
                                    (C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50259) /
                                  C49936) /
                                     C50002 -
                                 C50324 / C50078)));
    const double C3820 =
        (-2 * C50232 * C50107) / C50078 + C50232 * C50330 +
        ((C50069 * C50381 - (C50379 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50380 + C50379 * ae) * ce) / C50078 +
        C50069 *
            ((C50381 * ae) / C50002 - (C50380 * ce) / C50078 +
             C50069 * ((-2 * C50232 * C50324) / C50078 +
                       C50232 * ((-(C50074 *
                                    (C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50259) /
                                  C49936) /
                                     C50002 -
                                 C50324 / C50078)));
    const double C4338 =
        (((-3 * C50310) / C49936 + C50232 * C50381) * ae) / C50002 -
        ((3 * C50312 + C50232 * C50380) * ce) / C50078 +
        C50069 *
            (3 * C50330 +
             C50232 * ((-2 * C50232 * C50324) / C50078 +
                       C50232 * ((-(C50074 *
                                    (C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50259) /
                                  C49936) /
                                     C50002 -
                                 C50324 / C50078)));
    const double C4793 =
        2 * ((-(C50312 * ce) / C49936) / C50002 - (ae * C50310) / C50078 +
             C50069 * C50330) -
        (ae * (C50069 * C50416 + C50310 + C50413 * ce)) / C50078 -
        ((C50312 + C50069 * C50417 + C50413 * ae) * ce) / C50078 +
        C50069 *
            (C50330 - (ae * C50416) / C50078 - (C50417 * ce) / C50078 +
             C50069 *
                 ((-(C50374 * ce) / C49936) / C50002 - (ae * C50372) / C50078 +
                  C50069 * ((-(C50074 *
                               (C50109 * C50110 +
                                C50072 * bs[8] * std::pow(C50065, 8)) *
                               C50070 * C50259) /
                             C49936) /
                                C50002 -
                            C50324 / C50078)));
    const double C50694 = C50688 + C50693;
    const double C50759 = C50756 + C50736;
    const double C50683 = C50680 + C50663;
    const double C50817 = C50815 + C50799;
    const double C50890 = C50069 * C50887;
    const double C50682 = C50651 - C50679;
    const double C50816 = C50778 - C50814;
    const double C50889 = C50886 - C50866;
    const double C2233 = C172 * C2217;
    const double C2227 = C170 * C2217;
    const double C2221 = C168 * C2217;
    const double C5150 = C365 * C2217;
    const double C5144 = C364 * C2217;
    const double C5308 = C2629 * C2217;
    const double C5302 = C2627 * C2217;
    const double C10672 = C362 * C2217;
    const double C21806 = C2635 * C2217;
    const double C2235 = C565 * C2218;
    const double C2229 = C561 * C2218;
    const double C2223 = C557 * C2218;
    const double C5152 = C2838 * C2218;
    const double C5146 = C1000 * C2218;
    const double C5310 = C3387 * C2218;
    const double C5304 = C3384 * C2218;
    const double C10674 = C1002 * C2218;
    const double C21808 = C4349 * C2218;
    const double C44508 = C44474 * C133;
    const double C44502 = C44474 * C122;
    const double C44500 = C44474 * C121;
    const double C44494 = C44474 * C131;
    const double C44484 = C44474 * C129;
    const double C44478 = C44474 * C120;
    const double C44696 = C44474 * C315;
    const double C44690 = C44474 * C299;
    const double C44688 = C44474 * C296;
    const double C44682 = C44474 * C308;
    const double C44878 = C44474 * C503;
    const double C44872 = C44474 * C489;
    const double C44870 = C44474 * C501;
    const double C44864 = C44474 * C488;
    const double C45048 = C44474 * C306;
    const double C45042 = C44474 * C295;
    const double C45212 = C44474 * C505;
    const double C45206 = C44474 * C490;
    const double C45424 = C44474 * C969;
    const double C45418 = C44474 * C962;
    const double C47454 = C44474 * C298;
    const double C47448 = C44474 * C313;
    const double C47438 = C44474 * C310;
    const double C47432 = C44474 * C297;
    const double C48110 = C44474 * C967;
    const double C48104 = C44474 * C961;
    const double C48368 = C44474 * C1195;
    const double C48362 = C44474 * C1188;
    const double C48532 = C44474 * C1304;
    const double C48526 = C44474 * C1299;
    const double C49036 = C44474 * C1651;
    const double C49030 = C44474 * C1646;
    const double C44510 = C44475 * C509;
    const double C44504 = C44475 * C492;
    const double C44498 = C44475 * C490;
    const double C44492 = C44475 * C505;
    const double C44486 = C44475 * C501;
    const double C44480 = C44475 * C488;
    const double C44698 = C44475 * C1653;
    const double C44692 = C44475 * C1647;
    const double C44686 = C44475 * C962;
    const double C44680 = C44475 * C969;
    const double C44880 = C44475 * C1965;
    const double C44874 = C44475 * C1959;
    const double C44868 = C44475 * C503;
    const double C44862 = C44475 * C489;
    const double C45050 = C44475 * C971;
    const double C45044 = C44475 * C963;
    const double C45214 = C44475 * C507;
    const double C45208 = C44475 * C491;
    const double C45426 = C44475 * C1306;
    const double C45420 = C44475 * C1300;
    const double C47452 = C44475 * C1646;
    const double C47446 = C44475 * C1651;
    const double C47440 = C44475 * C967;
    const double C47434 = C44475 * C961;
    const double C48108 = C44475 * C1304;
    const double C48102 = C44475 * C1299;
    const double C48370 = C44475 * C3353;
    const double C48364 = C44475 * C3349;
    const double C48534 = C44475 * C4783;
    const double C48528 = C44475 * C4778;
    const double C49038 = C44475 * C2809;
    const double C49032 = C44475 * C2805;
    const double C4354 = C4351 * C2434;
    const double C21190 = C4351 * C51162;
    const double C26322 = C4351 * C51428;
    const double C4679 = C4677 * C2434;
    const double C21401 = C4677 * C51162;
    const double C26617 = C4677 * C51428;
    const double C31840 = C31839 * C51162;
    const double C37479 = C37478 * C51162;
    const double C4341 = C3399 * C51167;
    const double C26323 = C3399 * C51167;
    const double C4678 = C4676 * C51167;
    const double C26618 = C4676 * C51167;
    const double C14957 = C14955 + C14949;
    const double C16947 = C16945 + C16941;
    const double C14956 = C14954 - C14946;
    const double C16946 = C16944 - C16937;
    const double C42031 = C42029 + C42027;
    const double C43985 = C43983 + C43979;
    const double C42030 = C42028 - C42024;
    const double C43984 = C43982 - C43975;
    const double C21204 = C21201 * C51162;
    const double C21409 = C21408 * C51162;
    const double C32505 = C32504 - C32499;
    const double C32805 = C32804 - C32802;
    const double C38156 = C38155 - C38150;
    const double C38456 = C38455 - C38453;
    const double C177 = C166 + C167;
    const double C359 = C335 + C336;
    const double C11532 = C11524 + C11525;
    const double C34099 = C34091 + C34092;
    const double C368 = C353 + C354;
    const double C11176 = C11158 + C11159;
    const double C33743 = C33725 + C33726;
    const double C564 = C545 + C546;
    const double C5460 = C5430 + C5431;
    const double C6174 = C6166 + C6167;
    const double C11370 = C11352 + C11353;
    const double C11366 = C11344 + C11345;
    const double C33937 = C33919 + C33920;
    const double C33933 = C33911 + C33912;
    const double C44520 = C44490 + C44491;
    const double C566 = C551 + C552;
    const double C5470 = C5450 + C5451;
    const double C10966 = C10942 + C10943;
    const double C11698 = C11689 + C11690;
    const double C33533 = C33509 + C33510;
    const double C34265 = C34256 + C34257;
    const double C1003 = C992 + C993;
    const double C6010 = C6002 + C6003;
    const double C11162 = C11130 + C11131;
    const double C11918 = C11908 + C11909;
    const double C33729 = C33697 + C33698;
    const double C34485 = C34475 + C34476;
    const double C3665 = C3656 + C3662;
    const double C25689 = C25687 + C25688;
    const double C30942 = C14056 * C51162;
    const double C36547 = C36544 * C51162;
    const double C20743 = C20739 + C20740;
    const double C20857 = C20854 + C20855;
    const double C23003 = C22996 + C22997;
    const double C32503 = C32495 + C32496;
    const double C38154 = C38146 + C38147;
    const double C48379 = C48372 + C48373;
    const double C21200 = C21196 + C21197;
    const double C31838 = C31831 + C31832;
    const double C37477 = C37470 + C37471;
    const double C23675 = C23668 + C23669;
    const double C31998 = C31993 + C31994;
    const double C37649 = C37640 + C37641;
    const double C49047 = C49040 + C49041;
    const double C50681 = C50674 + C50678;
    const double C50813 = C50806 + C50810;
    const double C7668 =
        4 * ((-2 * C50269) / C49936 - (C50069 * C50443) / C49936 -
             (C50433 * ce) / C49936) +
        C50069 * ((-3 * C50443) / C49936 + C50069 * C50630 -
                  (C50614 * ce) / C49936) -
        ((3 * C50433 + C50069 * C50614) * ce) / C49936;
    const double C50888 = C50069 * C50885;
    const double C5847 = C5834 + C5835;
    const double C44895 = C44882 + C44883;
    const double C23171 = C23164 + C23165;
    const double C48543 = C48536 + C48537;
    const double C7671 =
        4 * (2 * C50445 - (ae * C50443) / C50078 - (C50444 * ce) / C50078 +
             C50069 * C50627) +
        (((-3 * C50443) / C49936 + C50069 * C50630 - (C50614 * ce) / C49936) *
         ae) /
            C50002 -
        ((3 * C50444 + C50069 * C50629 + C50614 * ae) * ce) / C50078 +
        C50069 *
            (3 * C50627 + (C50630 * ae) / C50002 - (C50629 * ce) / C50078 +
             C50069 *
                 (2 * C50621 - (ae * C50618) / C50078 - (C50619 * ce) / C50078 +
                  C50069 * ((-(ae * C50598) / C49936) / C50002 - C50111 -
                            (C50601 * ce) / C50078 +
                            C50069 * ((-(C50180 * ce) / C49936) / C50002 -
                                      (ae * C50176) / C50078 -
                                      (C50069 * C50117) / C50078))));
    const double C146 =
        5 * (3 * C50105 + C50074 * C50124) +
        C50074 * (4 * C50124 +
                  C50074 * (3 * C50122 +
                            C50074 * ((-2 * C50074 * C50117) / C50078 +
                                      C50074 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50087) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C331 = (-2 * C50074 * C50091) / C50078 + C50074 * C50105 +
                        C50124 * std::pow(yP - yQ, 2);
    const double C332 = (yP - yQ) * (3 * C50105 + C50074 * C50124);
    const double C333 =
        3 * C50105 + C50074 * C50124 +
        (3 * C50122 +
         C50074 *
             ((-2 * C50074 * C50117) / C50078 +
              C50074 *
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078))) *
            std::pow(yP - yQ, 2);
    const double C523 =
        (-2 * C50074 * C50091) / C50078 + C50074 * C50105 +
        ((C50069 * C50192 - (C50186 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50191 + C50186 * ae) * ce) / C50078 +
        C50069 *
            ((C50192 * ae) / C50002 - (C50191 * ce) / C50078 + C50069 * C50124);
    const double C524 =
        (((-3 * C50165) / C49936 + C50074 * C50192) * ae) / C50002 -
        ((3 * C50166 + C50074 * C50191) * ce) / C50078 +
        C50069 * (3 * C50105 + C50074 * C50124);
    const double C525 =
        3 * C50105 + C50074 * C50124 +
        ((C50069 * C50228 - (C50222 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50227 + C50222 * ae) * ce) / C50078 +
        C50069 * ((C50228 * ae) / C50002 - (C50227 * ce) / C50078 +
                  C50069 * (3 * C50122 +
                            C50074 * ((-2 * C50074 * C50117) / C50078 +
                                      C50074 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50087) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C686 =
        (yP - yQ) *
        (4 * C50124 +
         C50074 *
             (3 * C50122 +
              C50074 * ((-2 * C50074 * C50117) / C50078 +
                        C50074 * ((-((C50109 * C50110 +
                                      C50072 * bs[8] * std::pow(C50065, 8)) *
                                     C50070 * C50087) /
                                   C49936) /
                                      C50002 -
                                  C50117 / C50078))));
    const double C802 =
        ((4 * C50192 + C50074 * C50228) * ae) / C50002 -
        ((4 * C50191 + C50074 * C50227) * ce) / C50078 +
        C50069 * (4 * C50124 +
                  C50074 * (3 * C50122 +
                            C50074 * ((-2 * C50074 * C50117) / C50078 +
                                      C50074 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50087) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C979 = (C50232 * C50192 * ae) / C50002 -
                        (C50232 * C50191 * ce) / C50078 +
                        C50069 * C50232 * C50124;
    const double C1197 =
        2 * C50232 * C50124 +
        C50232 *
            (C50124 +
             ((-2 * C50074 * C50117) / C50078 +
              C50074 *
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078)) *
                 std::pow(C50232, 2));
    const double C1314 =
        C50232 * C50124 +
        ((C50069 * C50255 - (C50256 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50257 + C50256 * ae) * ce) / C50078 +
        C50069 * ((C50255 * ae) / C50002 - (C50257 * ce) / C50078 +
                  C50069 * C50232 *
                      ((-2 * C50074 * C50117) / C50078 +
                       C50074 * ((-((C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50087) /
                                  C49936) /
                                     C50002 -
                                 C50117 / C50078)));
    const double C1661 =
        ((C50192 + C50224 * C50259) * ae) / C50002 -
        ((C50191 + C50223 * C50259) * ce) / C50078 +
        C50069 *
            (C50124 +
             ((-2 * C50074 * C50117) / C50078 +
              C50074 *
                  ((-((C50109 * C50110 + C50072 * bs[8] * std::pow(C50065, 8)) *
                      C50070 * C50087) /
                    C49936) /
                       C50002 -
                   C50117 / C50078)) *
                 C50259);
    const double C1973 =
        2 * ((C50192 * ae) / C50002 - (C50191 * ce) / C50078 +
             C50069 * C50124) +
        ((C50192 + C50069 * C50295 - (C50290 * ce) / C49936) * ae) / C50002 -
        ((C50191 + C50069 * C50294 + C50290 * ae) * ce) / C50078 +
        C50069 * (C50124 + (C50295 * ae) / C50002 - (C50294 * ce) / C50078 +
                  C50069 * ((C50224 * ae) / C50002 - (C50223 * ce) / C50078 +
                            C50069 * ((-2 * C50074 * C50117) / C50078 +
                                      C50074 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50087) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C5810 =
        3 * (C50105 - (ae * C50285) / C50078 - (C50286 * ce) / C50078 +
             C50069 * C50500) +
        (((-2 * C50285) / C49936 - (C50069 * C50498) / C49936 -
          (C50488 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50286 + C50069 * C50499 + C50488 * ae) * ce) / C50078 +
        C50069 *
            (2 * C50500 - (ae * C50498) / C50078 - (C50499 * ce) / C50078 +
             C50069 *
                 (C50122 - (ae * C50486) / C50078 - (C50489 * ce) / C50078 +
                  C50069 *
                      ((-(C50217 * ce) / C49936) / C50002 -
                       (ae * C50215) / C50078 +
                       C50069 * ((-((C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50087) /
                                  C49936) /
                                     C50002 -
                                 C50117 / C50078))));
    const double C2639 = C2624 + C2625;
    const double C6011 = C6004 + C6005;
    const double C8564 = C8561 + C8562;
    const double C11919 = C11910 + C11911;
    const double C34486 = C34477 + C34478;
    const double C45059 = C45052 + C45053;
    const double C3153 = C3150 + C3151;
    const double C11177 = C11160 + C11161;
    const double C33744 = C33727 + C33728;
    const double C6175 = C6168 + C6169;
    const double C11371 = C11354 + C11355;
    const double C33938 = C33921 + C33922;
    const double C45223 = C45216 + C45217;
    const double C20733 =
        5 * (3 * C50336 + C50232 * C50694) +
        C50232 * (4 * C50694 +
                  C50232 * (3 * C50692 +
                            C50232 * ((-2 * C50232 * C50117) / C50078 +
                                      C50232 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50259) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C20846 =
        3 * C50336 + C50232 * C50694 +
        ((C50069 * C50722 - (C50720 * ce) / C49936) * ae) / C50002 -
        ((C50069 * C50721 + C50720 * ae) * ce) / C50078 +
        C50069 * ((C50722 * ae) / C50002 - (C50721 * ce) / C50078 +
                  C50069 * (3 * C50692 +
                            C50232 * ((-2 * C50232 * C50117) / C50078 +
                                      C50232 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50259) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C21188 =
        ((4 * C50357 + C50232 * C50722) * ae) / C50002 -
        ((4 * C50356 + C50232 * C50721) * ce) / C50078 +
        C50069 * (4 * C50694 +
                  C50232 * (3 * C50692 +
                            C50232 * ((-2 * C50232 * C50117) / C50078 +
                                      C50232 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50259) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C21478 =
        2 * ((C50357 * ae) / C50002 - (C50356 * ce) / C50078 +
             C50069 * C50694) +
        ((C50357 + C50069 * C50732 - (C50727 * ce) / C49936) * ae) / C50002 -
        ((C50356 + C50069 * C50731 + C50727 * ae) * ce) / C50078 +
        C50069 * (C50694 + (C50732 * ae) / C50002 - (C50731 * ce) / C50078 +
                  C50069 * ((C50716 * ae) / C50002 - (C50715 * ce) / C50078 +
                            C50069 * ((-2 * C50232 * C50117) / C50078 +
                                      C50232 * ((-((C50109 * C50110 +
                                                    C50072 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50070 * C50259) /
                                                 C49936) /
                                                    C50002 -
                                                C50117 / C50078))));
    const double C23152 =
        3 * (C50336 - (ae * C50408) / C50078 - (C50409 * ce) / C50078 +
             C50069 * C50759) +
        (((-2 * C50408) / C49936 - (C50069 * C50757) / C49936 -
          (C50747 * ce) / C49936) *
         ae) /
            C50002 -
        ((2 * C50409 + C50069 * C50758 + C50747 * ae) * ce) / C50078 +
        C50069 *
            (2 * C50759 - (ae * C50757) / C50078 - (C50758 * ce) / C50078 +
             C50069 *
                 (C50692 - (ae * C50745) / C50078 - (C50748 * ce) / C50078 +
                  C50069 *
                      ((-(C50709 * ce) / C49936) / C50002 -
                       (ae * C50707) / C50078 +
                       C50069 * ((-((C50109 * C50110 +
                                     C50072 * bs[8] * std::pow(C50065, 8)) *
                                    C50070 * C50259) /
                                  C49936) /
                                     C50002 -
                                 C50117 / C50078))));
    const double C7669 =
        (4 * (2 * C50278 + C50069 * C50472 + C50461 * ae) +
         C50069 * (3 * C50472 + C50069 * C50683 + C50668 * ae) +
         (3 * C50461 + C50069 * C50668) * ae) /
        C50002;
    const double C24066 =
        (4 * (2 * C50392 + C50069 * C50544 + C50533 * ae) +
         C50069 * (3 * C50544 + C50069 * C50817 + C50804 * ae) +
         (3 * C50533 + C50069 * C50804) * ae) /
        C50002;
    const double C50893 = C50836 + C50890;
    const double C50684 = C50682 - C50667;
    const double C50818 = C50816 - C50803;
    const double C50892 = C50069 * C50889;
    const double C44529 = C44508 + C44509;
    const double C44526 = C44502 + C44503;
    const double C44525 = C44500 + C44501;
    const double C44522 = C44494 + C44495;
    const double C44517 = C44484 + C44485;
    const double C44514 = C44478 + C44479;
    const double C44711 = C44696 + C44697;
    const double C44708 = C44690 + C44691;
    const double C44707 = C44688 + C44689;
    const double C44704 = C44682 + C44683;
    const double C44893 = C44878 + C44879;
    const double C44890 = C44872 + C44873;
    const double C44889 = C44870 + C44871;
    const double C44886 = C44864 + C44865;
    const double C45057 = C45048 + C45049;
    const double C45054 = C45042 + C45043;
    const double C45221 = C45212 + C45213;
    const double C45218 = C45206 + C45207;
    const double C45433 = C45424 + C45425;
    const double C45430 = C45418 + C45419;
    const double C47467 = C47454 + C47455;
    const double C47464 = C47448 + C47449;
    const double C47459 = C47438 + C47439;
    const double C47456 = C47432 + C47433;
    const double C48117 = C48110 + C48111;
    const double C48114 = C48104 + C48105;
    const double C48377 = C48368 + C48369;
    const double C48374 = C48362 + C48363;
    const double C48541 = C48532 + C48533;
    const double C48538 = C48526 + C48527;
    const double C49045 = C49036 + C49037;
    const double C49042 = C49030 + C49031;
    const double C44530 = C44510 + C44511;
    const double C44527 = C44504 + C44505;
    const double C44524 = C44498 + C44499;
    const double C44521 = C44492 + C44493;
    const double C44518 = C44486 + C44487;
    const double C44515 = C44480 + C44481;
    const double C44712 = C44698 + C44699;
    const double C44709 = C44692 + C44693;
    const double C44706 = C44686 + C44687;
    const double C44703 = C44680 + C44681;
    const double C44894 = C44880 + C44881;
    const double C44891 = C44874 + C44875;
    const double C44888 = C44868 + C44869;
    const double C44885 = C44862 + C44863;
    const double C45058 = C45050 + C45051;
    const double C45055 = C45044 + C45045;
    const double C45222 = C45214 + C45215;
    const double C45219 = C45208 + C45209;
    const double C45434 = C45426 + C45427;
    const double C45431 = C45420 + C45421;
    const double C47466 = C47452 + C47453;
    const double C47463 = C47446 + C47447;
    const double C47460 = C47440 + C47441;
    const double C47457 = C47434 + C47435;
    const double C48116 = C48108 + C48109;
    const double C48113 = C48102 + C48103;
    const double C48378 = C48370 + C48371;
    const double C48375 = C48364 + C48365;
    const double C48542 = C48534 + C48535;
    const double C48539 = C48528 + C48529;
    const double C49046 = C49038 + C49039;
    const double C49043 = C49032 + C49033;
    const double C4355 = C4354 + C4341;
    const double C26324 = C26322 + C26323;
    const double C4680 = C4679 + C4678;
    const double C26619 = C26617 + C26618;
    const double C32506 = C32505 * C51162;
    const double C32806 = C32805 * C51162;
    const double C38157 = C38156 * C51162;
    const double C38457 = C38456 * C51162;
    const double C187 = C177 * C51217;
    const double C371 = C359 * C51217;
    const double C996 = C359 * C51444;
    const double C2114 = C359 * C1760;
    const double C380 = C368 * C51217;
    const double C3148 = C368 * C51444;
    const double C4507 = C368 * C1760;
    const double C576 = C564 * C482;
    const double C2232 = C564 * C2216;
    const double C11684 = C11366 + C11367;
    const double C34251 = C33933 + C33934;
    const double C578 = C566 * C481;
    const double C815 = C566 * C51281;
    const double C1776 = C566 * C51281;
    const double C2236 = C566 * C51491;
    const double C10976 = C10966 + C10967;
    const double C33543 = C33533 + C33534;
    const double C1009 = C1003 * C51281;
    const double C2112 = C1003 * C51281;
    const double C8558 = C1003 * C481;
    const double C10675 = C1003 * C51491;
    const double C11518 = C11162 + C11163;
    const double C14460 = C11163 + C11162;
    const double C34085 = C33729 + C33730;
    const double C41558 = C33730 + C33729;
    const double C20745 = C20743 * C51217;
    const double C20859 = C20857 * C482;
    const double C21811 = C20857 * C2216;
    const double C21203 = C21200 * C51281;
    const double C21406 = C21200 * C51281;
    const double C50891 = C50862 + C50888;
    const double C358 = C51314 * C331;
    const double C693 = C51314 * C332;
    const double C556 = C51314 * C523;
    const double C5453 = C5413 * C523;
    const double C11692 = C51378 * C523;
    const double C34259 = C51378 * C523;
    const double C44513 = C44473 * C523;
    const double C821 = C51314 * C524;
    const double C10957 = C51378 * C524;
    const double C33524 = C51378 * C524;
    const double C999 = C51314 * C979;
    const double C11527 = C51378 * C979;
    const double C34094 = C51378 * C979;
    const double C2653 = C2639 * C51217;
    const double C8566 = C8564 * C482;
    const double C10677 = C8564 * C2216;
    const double C3155 = C3153 * C51281;
    const double C4509 = C3153 * C51281;
    const double C50895 = C50893 + C50875;
    const double C7672 =
        4 * (2 * C50473 - (ae * C50471) / C50078 - (C50472 * ce) / C50078 +
             C50069 * C50681) +
        (((-3 * C50471) / C49936 + C50069 * C50684 - (C50668 * ce) / C49936) *
         ae) /
            C50002 -
        ((3 * C50472 + C50069 * C50683 + C50668 * ae) * ce) / C50078 +
        C50069 *
            (3 * C50681 + (C50684 * ae) / C50002 - (C50683 * ce) / C50078 +
             C50069 *
                 (2 * C50675 - (ae * C50672) / C50078 - (C50673 * ce) / C50078 +
                  C50069 * ((-(ae * C50652) / C49936) / C50002 -
                            C50324 / C50078 - (C50655 * ce) / C50078 +
                            C50069 * ((-(C50364 * ce) / C49936) / C50002 -
                                      (ae * C50360) / C50078 -
                                      (C50069 * C50074 *
                                       (C50109 * C50110 +
                                        C50072 * bs[8] * std::pow(C50065, 8)) *
                                       C50070) /
                                          C50078))));
    const double C7670 =
        4 * ((-2 * C50277) / C49936 - (C50069 * C50471) / C49936 -
             (C50461 * ce) / C49936) +
        C50069 * ((-3 * C50471) / C49936 + C50069 * C50684 -
                  (C50668 * ce) / C49936) -
        ((3 * C50461 + C50069 * C50668) * ce) / C49936;
    const double C24068 =
        4 * (2 * C50542 - (ae * C50543) / C50078 - (C50544 * ce) / C50078 +
             C50069 * C50813) +
        (((-3 * C50543) / C49936 + C50069 * C50818 - (C50804 * ce) / C49936) *
         ae) /
            C50002 -
        ((3 * C50544 + C50069 * C50817 + C50804 * ae) * ce) / C50078 +
        C50069 *
            (3 * C50813 + (C50818 * ae) / C50002 - (C50817 * ce) / C50078 +
             C50069 *
                 (2 * C50807 - (ae * C50808) / C50078 - (C50809 * ce) / C50078 +
                  C50069 * ((-(ae * C50788) / C49936) / C50002 -
                            C50766 / C50078 - (C50791 * ce) / C50078 +
                            C50069 * ((-(C50772 * ce) / C49936) / C50002 -
                                      (ae * C50768) / C50078 -
                                      (C50069 * C50232 *
                                       (C50109 * C50110 +
                                        C50072 * bs[8] * std::pow(C50065, 8)) *
                                       C50070) /
                                          C50078))));
    const double C24067 =
        4 * ((-2 * C50391) / C49936 - (C50069 * C50543) / C49936 -
             (C50533 * ce) / C49936) +
        C50069 * ((-3 * C50543) / C49936 + C50069 * C50818 -
                  (C50804 * ce) / C49936) -
        ((3 * C50533 + C50069 * C50804) * ce) / C49936;
    const double C50894 = C50847 + C50892;
    const double C688 = C371 + C372;
    const double C8713 = C372 + C371;
    const double C2626 = C380 + C379;
    const double C2995 = C379 + C380;
    const double C11695 = C11684 * C51281;
    const double C12945 = C11684 * C51281;
    const double C34262 = C34251 * C51281;
    const double C35512 = C34251 * C51281;
    const double C831 = C827 - C815;
    const double C1786 = C1784 - C1776;
    const double C10980 = C10976 * C51217;
    const double C33547 = C33543 * C51217;
    const double C8862 = C8861 - C1009;
    const double C9059 = C9058 + C1009;
    const double C10084 = C10083 - C2112;
    const double C10525 = C10524 + C2112;
    const double C11528 = C11518 * C51217;
    const double C14462 = C14460 * C51217;
    const double C34095 = C34085 * C51217;
    const double C41560 = C41558 * C51217;
    const double C370 = C357 + C358;
    const double C695 = C692 + C693;
    const double C568 = C555 + C556;
    const double C5471 = C5452 + C5453;
    const double C11699 = C11691 + C11692;
    const double C34266 = C34258 + C34259;
    const double C44531 = C44512 + C44513;
    const double C825 = C820 + C821;
    const double C10973 = C10956 + C10957;
    const double C33540 = C33523 + C33524;
    const double C1005 = C998 + C999;
    const double C11533 = C11526 + C11527;
    const double C34100 = C34093 + C34094;
    const double C40488 =
        (5 * (3 * C50444 + C50069 * C50629 + C50614 * ae) +
         C50069 * (4 * C50629 + C50069 * C50895 + C50880 * ae) +
         (4 * C50614 + C50069 * C50880) * ae) /
        C50002;
    const double C50896 = C50894 - C50879;
    const double C2640 = C2626 * C51167;
    const double C24807 = C2626 * C51167;
    const double C11701 = C11700 - C11695;
    const double C12948 = C12947 - C12945;
    const double C34268 = C34267 - C34262;
    const double C35515 = C35514 - C35512;
    const double C10983 = C10980 + C10981;
    const double C33550 = C33547 + C33548;
    const double C11534 = C11528 + C11529;
    const double C14463 = C14461 + C14462;
    const double C34101 = C34095 + C34096;
    const double C41561 = C41559 + C41560;
    const double C382 = C370 * C51217;
    const double C697 = C695 * C51217;
    const double C580 = C568 * C482;
    const double C2238 = C568 * C2216;
    const double C829 = C825 * C51281;
    const double C1780 = C825 * C51281;
    const double C1011 = C1005 * C51281;
    const double C2116 = C1005 * C51281;
    const double C40490 =
        5 * (3 * C50627 + (C50630 * ae) / C50002 - (C50629 * ce) / C50078 +
             C50069 * C50891) +
        ((4 * C50630 + C50069 * C50896 - (C50880 * ce) / C49936) * ae) /
            C50002 -
        ((4 * C50629 + C50069 * C50895 + C50880 * ae) * ce) / C50078 +
        C50069 *
            (4 * C50891 + (C50896 * ae) / C50002 - (C50895 * ce) / C50078 +
             C50069 *
                 (3 * C50885 + (C50889 * ae) / C50002 - (C50887 * ce) / C50078 +
                  C50069 *
                      (2 * C50877 - (ae * C50871) / C50078 -
                       (C50874 * ce) / C50078 +
                       C50069 *
                           ((-(ae * C50849) / C49936) / C50002 -
                            C50117 / C50078 - (C50852 * ce) / C50078 +
                            C50069 * ((-(C50210 * ce) / C49936) / C50002 -
                                      (ae * C50206) / C50078 -
                                      (C50069 *
                                       (C50109 * C50110 +
                                        C50072 * bs[8] * std::pow(C50065, 8)) *
                                       C50070) /
                                          C50078)))));
    const double C40489 =
        5 * ((-3 * C50443) / C49936 + C50069 * C50630 -
             (C50614 * ce) / C49936) +
        C50069 * (4 * C50630 + C50069 * C50896 - (C50880 * ce) / C49936) -
        ((4 * C50614 + C50069 * C50880) * ce) / C49936;
    const double C2654 = C2640 + C2641;
    const double C24810 = C24807 + C24808;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C51443 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C51253) *
              C51486 +
          (((C2602 * C51484 + C2994 * C51485 + C8713 * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C51253 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C51443) *
              C51487 +
          (((C188 * C51484 + C189 * C51485 + (C185 + C184) * C8259) * C51456 +
            (C2994 * C51484 + C8713 * C51485 + (C696 + C697) * C8259) *
                C51352) *
               C51443 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C8259 +
             (C382 + C381) * C51485 + C2626 * C51484) *
                C51352 +
            ((C697 + C696) * C8259 + C688 * C51485 + C689 * C51484) * C51456) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51484 +
             (C804 + C805 - C806 - C807) * C51485 + C830 * C8259) *
                C51456 +
            ((C3362 + C3363 - C3394 - C3395) * C51484 + C3396 * C51485 +
             C8862 * C8259) *
                C51352) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C51484 + C3400 * C51485 +
             C9059 * C8259) *
                C51456 +
            ((C3397 - (C3370 + C3369) + C3398) * C51484 + C3401 * C51485 +
             (C3154 - (C3148 + C3149) + C3155) * C8259) *
                C51352) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C51484 +
             (C810 - (C809 + C808) + C811) * C51485 +
             (C814 - (C813 + C812) + C815) * C8259) *
                C51456 +
            (C3400 * C51484 + C9059 * C51485 +
             (C1010 - (C996 + C997) + C1011) * C8259) *
                C51352) *
               C51443 +
           ((C3396 * C51484 + C8862 * C51485 +
             (C997 + C996 - C1010 - C1011) * C8259) *
                C51456 +
            (C3399 * C51484 + (C3149 + C3148 - C3154 - C3155) * C51485 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C8259) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C289 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C290 +
           ((C2655 * C51484 + C2607 * C51485 + C2995 * C8259) * C51456 +
            ((C2649 + C2648) * C51484 + C2657 * C51485 +
             (C2652 + C2653) * C8259) *
                C51352) *
               C291) *
              C292 +
          (((C2602 * C51484 + C2994 * C51485 + (C372 + C371) * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C290 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C289 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C8259 +
             (C2653 + C2652) * C51485 + C2656 * C51484) *
                C51352 +
            ((C382 + C381) * C8259 + C2626 * C51485 + C2616 * C51484) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51484 +
            (C178 + C179) * C51485 + C188 * C8259) *
               C51456 +
           ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
               C51352) *
              C51202 * C113 -
          ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
           (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
               C51456) *
              C51202 * C114 +
          ((C188 * C51484 + C189 * C51485 + (C185 + C184) * C8259) * C51456 +
           (C2994 * C51484 + (C372 + C371) * C51485 + (C696 + C697) * C8259) *
               C51352) *
              C51202 * C115 -
          ((((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C8259 +
            (C697 + C696) * C51485 + C688 * C51484) *
               C51352 +
           ((C187 + C186) * C8259 + C190 * C51485 + C191 * C51484) * C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C51484 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51485 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C8259) *
               C51456 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51484 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51485 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C8259) *
               C51352) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C51484 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C51485 +
            (C577 - (C548 + C547) + C578 - C579 - C580) * C8259) *
               C51456 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51484 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C51485 +
            (C1004 * C484 - (C359 * C480 + C360 * C483) + C1005 * C481 -
             (C117 * C1302 + C51314 * C1309) * C485 -
             (C117 * C1310 + C51314 * C1314) * C482) *
                C8259) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51314 * C126) * C797 +
                    (C117 * C127 + C51314 * C140) * C51444 -
                    (C117 * C486 + C51314 * C496) * C798 -
                    (C117 * C497 + C51314 * C516) * C51281) *
                       C51484 +
                   (C804 + C805 - C806 - C807) * C51485 + C830 * C8259) *
                      C51456 +
                  ((C3362 + C3363 - C3394 - C3395) * C51484 + C3396 * C51485 +
                   C8862 * C8259) *
                      C51352) *
                     C51202 * C51486 +
                 (((C806 - (C805 + C804) + C807) * C51484 +
                   (C810 - (C809 + C808) + C811) * C51485 +
                   (C814 - (C813 + C812) + C815) * C8259) *
                      C51456 +
                  (C3400 * C51484 + (C1008 - (C990 + C991) + C1009) * C51485 +
                   (C1010 - (C996 + C997) + C1011) * C8259) *
                      C51352) *
                     C51202 * C51487 +
                 ((C830 * C51484 + C831 * C51485 +
                   (C819 + C818 - C828 - C829) * C8259) *
                      C51456 +
                  (C8862 * C51484 + (C997 + C996 - C1010 - C1011) * C51485 +
                   (C694 * C797 + C695 * C51444 -
                    (C117 * C965 + C51314 * C974) * C798 -
                    (C117 * C975 + C51314 * C980) * C51281) *
                       C8259) *
                      C51352) *
                     C51202 * C682)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51484 +
            (C178 + C179) * C51485 + C188 * C8259) *
               C51456 +
           ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
               C51352) *
              C51202 * C113 -
          ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
           (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
               C51456) *
              C51202 * C114 +
          ((C188 * C51484 + C189 * C51485 + (C185 + C184) * C8259) * C51456 +
           (C2994 * C51484 + (C372 + C371) * C51485 + (C696 + C697) * C8259) *
               C51352) *
              C51202 * C115 -
          ((((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C8259 +
            (C697 + C696) * C51485 + C688 * C51484) *
               C51352 +
           ((C187 + C186) * C8259 + C190 * C51485 + C191 * C51484) * C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C289 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C290 +
           ((C2655 * C51484 + C2607 * C51485 + C2995 * C8259) * C51456 +
            ((C2649 + C2648) * C51484 + C2657 * C51485 +
             (C2652 + C2653) * C8259) *
                C51352) *
               C291) *
              C292 +
          (((C2602 * C51484 + C2994 * C51485 + (C372 + C371) * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C290 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C289 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C8259 +
             (C2653 + C2652) * C51485 + C2656 * C51484) *
                C51352 +
            ((C382 + C381) * C8259 + C2626 * C51485 + C2616 * C51484) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C51488 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C51489 +
           ((C2655 * C51484 + C2607 * C51485 + C2995 * C8259) * C51456 +
            ((C2649 + C2648) * C51484 + C2657 * C51485 +
             (C2652 + C2653) * C8259) *
                C51352) *
               C1415) *
              C51435 +
          (((C2602 * C51484 + C2994 * C51485 + C8713 * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C51489 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C51488 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C8259 +
             (C2653 + C2652) * C51485 + C2656 * C51484) *
                C51352 +
            ((C382 + C381) * C8259 + C2626 * C51485 + C2616 * C51484) *
                C51456) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51314 * C126) * C797 +
                    (C117 * C127 + C51314 * C140) * C51444 -
                    (C117 * C486 + C51314 * C496) * C798 -
                    (C117 * C497 + C51314 * C516) * C51281) *
                       C51484 +
                   (C804 + C805 - C806 - C807) * C51485 + C830 * C8259) *
                      C51456 +
                  ((C3362 + C3363 - C3394 - C3395) * C51484 + C3396 * C51485 +
                   C8862 * C8259) *
                      C51352) *
                     C51488 +
                 (((C3394 - (C3363 + C3362) + C3395) * C51484 + C3400 * C51485 +
                   C9059 * C8259) *
                      C51456 +
                  ((C3397 - (C3370 + C3369) + C3398) * C51484 + C3401 * C51485 +
                   (C3154 - (C3148 + C3149) + C3155) * C8259) *
                      C51352) *
                     C51489 +
                 ((C4351 * C51484 + C3399 * C51485 +
                   (C3149 + C3148 - C3154 - C3155) * C8259) *
                      C51456 +
                  ((C4345 + C4344 - C4352 - C4353) * C51484 +
                   (C3381 + C3380 - C3402 - C3403) * C51485 +
                   (C2638 * C797 + C2639 * C51444 -
                    (C117 * C3351 + C51314 * C3356) * C798 -
                    (C117 * C3357 + C51314 * C3360) * C51281) *
                       C8259) *
                      C51352) *
                     C1415) *
                C51185) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51484 +
            (C178 + C179) * C51485 + C188 * C8259) *
               C51456 +
           ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
               C51352) *
              C1180 -
          ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
               C51352 +
           (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
               C51456) *
              C1181 +
          ((C2655 * C51484 + C2607 * C51485 + C2995 * C8259) * C51456 +
           ((C2649 + C2648) * C51484 + C2657 * C51485 +
            (C2652 + C2653) * C8259) *
               C51352) *
              C1182 -
          ((((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C8259 +
            (C2651 + C2650) * C51485 + (C3667 + C3666) * C51484) *
               C51352 +
           ((C2653 + C2652) * C8259 + C2656 * C51485 + C3657 * C51484) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C1109 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C51253) *
              C1111 +
          (((C2602 * C51484 + C2994 * C51485 + C8713 * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C51253 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C1109) *
              C1112 +
          (((C188 * C51484 + C189 * C51485 + (C185 + C184) * C8259) * C51456 +
            (C2994 * C51484 + C8713 * C51485 + (C696 + C697) * C8259) *
                C51352) *
               C1109 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C8259 +
             (C382 + C381) * C51485 + C2626 * C51484) *
                C51352 +
            ((C697 + C696) * C8259 + C688 * C51485 + C689 * C51484) * C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C51484 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51485 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C8259) *
               C51456 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51484 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51485 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C8259) *
               C51352) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C51484 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51485 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C8259) *
               C51456 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C51484 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51485 +
            (C3152 * C484 - (C368 * C480 + C367 * C483) + C3153 * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C8259) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51484 +
             (C804 + C805 - C806 - C807) * C51485 + C830 * C8259) *
                C51456 +
            ((C3362 + C3363 - C3394 - C3395) * C51484 + C3396 * C51485 +
             C8862 * C8259) *
                C51352) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C51484 + C3400 * C51485 +
             C9059 * C8259) *
                C51456 +
            ((C3397 - (C3370 + C3369) + C3398) * C51484 + C3401 * C51485 +
             (C3154 - (C3148 + C3149) + C3155) * C8259) *
                C51352) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C51484 +
             (C810 - (C809 + C808) + C811) * C51485 +
             (C814 - (C813 + C812) + C815) * C8259) *
                C51456 +
            (C3400 * C51484 + C9059 * C51485 +
             (C1010 - (C996 + C997) + C1011) * C8259) *
                C51352) *
               C1109 +
           ((C3396 * C51484 + C8862 * C51485 +
             (C997 + C996 - C1010 - C1011) * C8259) *
                C51456 +
            (C3399 * C51484 + (C3149 + C3148 - C3154 - C3155) * C51485 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C8259) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51484 +
             (C178 + C179) * C51485 + C188 * C8259) *
                C51456 +
            ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
                C51352) *
               C1109 -
           ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
                C51352 +
            (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
                C51456) *
               C51253) *
              C1111 +
          (((C2602 * C51484 + C2994 * C51485 + C8713 * C8259) * C51456 +
            (C2607 * C51484 + C2995 * C51485 + (C381 + C382) * C8259) *
                C51352) *
               C51253 -
           ((C688 * C8259 + C689 * C51485 + C2617 * C51484) * C51352 +
            (C191 * C8259 + (C181 + C180) * C51485 + (C179 + C178) * C51484) *
                C51456) *
               C1109) *
              C1112 +
          (((C188 * C51484 + C189 * C51485 + (C185 + C184) * C8259) * C51456 +
            (C2994 * C51484 + C8713 * C51485 + (C696 + C697) * C8259) *
                C51352) *
               C1109 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C8259 +
             (C382 + C381) * C51485 + C2626 * C51484) *
                C51352 +
            ((C697 + C696) * C8259 + C688 * C51485 + C689 * C51484) * C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51484 +
            (C178 + C179) * C51485 + C188 * C8259) *
               C51456 +
           ((C2642 + C2643) * C51484 + C2602 * C51485 + C2994 * C8259) *
               C51352) *
              C1180 -
          ((C2626 * C8259 + C2616 * C51485 + (C2645 + C2644) * C51484) *
               C51352 +
           (C689 * C8259 + C2617 * C51485 + (C2643 + C2642) * C51484) *
               C51456) *
              C1181 +
          ((C2655 * C51484 + C2607 * C51485 + C2995 * C8259) * C51456 +
           ((C2649 + C2648) * C51484 + C2657 * C51485 +
            (C2652 + C2653) * C8259) *
               C51352) *
              C1182 -
          ((((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C8259 +
            (C2651 + C2650) * C51485 + (C3667 + C3666) * C51484) *
               C51352 +
           ((C2653 + C2652) * C8259 + C2656 * C51485 + C3657 * C51484) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51484 +
             (C1765 + C1766 - C1767 - C1768) * C51485 + C1785 * C8259) *
                C51456 +
            ((C4656 + C4657 - C4658 - C4659) * C51484 + C4995 * C51485 +
             C10084 * C8259) *
                C51352) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C51484 + C4996 * C51485 +
             C10525 * C8259) *
                C51456 +
            ((C4662 - (C4661 + C4660) + C4663) * C51484 + C4997 * C51485 +
             (C4506 - (C4507 + C4508) + C4509) * C8259) *
                C51352) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C51484 +
             (C1771 - (C1770 + C1769) + C1772) * C51485 +
             (C1775 - (C1774 + C1773) + C1776) * C8259) *
                C51456 +
            (C4996 * C51484 + C10525 * C51485 +
             (C2113 - (C2114 + C2115) + C2116) * C8259) *
                C51352) *
               C51443 +
           ((C4995 * C51484 + C10084 * C51485 +
             (C2115 + C2114 - C2113 - C2116) * C8259) *
                C51456 +
            (C4676 * C51484 + (C4508 + C4507 - C4506 - C4509) * C51485 +
             (C369 * C1762 + C370 * C1760 -
              (C117 * C1649 + C51314 * C1656) * C1763 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C8259) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C51484 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51485 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C8259) *
               C51456 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51484 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51485 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C8259) *
               C51352) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51484 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51485 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C8259) *
               C51456 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51484 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51485 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C8259) *
               C51352) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51484 +
            (C1765 + C1766 - C1767 - C1768) * C51485 + C1785 * C8259) *
               C51456 +
           ((C4656 + C4657 - C4658 - C4659) * C51484 + C4995 * C51485 +
            C10084 * C8259) *
               C51352) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C51484 + C4996 * C51485 +
            (C2109 - (C2110 + C2111) + C2112) * C8259) *
               C51456 +
           ((C4662 - (C4661 + C4660) + C4663) * C51484 + C4997 * C51485 +
            (C4506 - (C4507 + C4508) + C4509) * C8259) *
               C51352) *
              C290 +
          ((C4677 * C51484 + C4676 * C51485 +
            (C4508 + C4507 - C4506 - C4509) * C8259) *
               C51456 +
           ((C4667 + C4666 - C4665 - C4668) * C51484 +
            (C4671 + C4670 - C4669 - C4672) * C51485 +
            (C2638 * C1762 + C2639 * C1760 -
             (C117 * C3351 + C51314 * C3356) * C1763 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C8259) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51484 +
            (C1765 + C1766 - C1767 - C1768) * C51485 + C1785 * C8259) *
               C51456 +
           ((C4656 + C4657 - C4658 - C4659) * C51484 + C4995 * C51485 +
            C10084 * C8259) *
               C51352) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C51484 +
            (C1771 - (C1770 + C1769) + C1772) * C51485 +
            (C1775 - (C1774 + C1773) + C1776) * C8259) *
               C51456 +
           (C4996 * C51484 + (C2109 - (C2110 + C2111) + C2112) * C51485 +
            (C2113 - (C2114 + C2115) + C2116) * C8259) *
               C51352) *
              C51202 * C1112 +
          ((C1785 * C51484 + C1786 * C51485 +
            (C1779 + C1778 - C1777 - C1780) * C8259) *
               C51456 +
           (C10084 * C51484 + (C2115 + C2114 - C2113 - C2116) * C51485 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C8259) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C51484 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C51485 +
           (C170 * C1954 + C171 * C1950 - C561 * C1955 - C562 * C1951 +
            C563 * C1956 + C564 * C1952 -
            (C117 * C1960 + C51314 * C1966) * C1957 -
            (C117 * C1967 + C51314 * C1972) * C1953) *
               C8259) *
              C51456 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C51484 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C51485 +
           (C362 * C1954 + C361 * C1950 - C1002 * C1955 - C1003 * C1951 +
            C8563 * C1956 + C8564 * C1952 -
            (C117 * C6369 + C51314 * C6370) * C1957 -
            (C117 * C6371 + C51314 * C6372) * C1953) *
               C8259) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C51484 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51485 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C8259) *
               C51456 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51484 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51485 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C8259) *
               C51352) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C51484 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C51485 +
            (C2235 - (C2234 + C2233) + C2236 - C2237 - C2238) * C8259) *
               C51456 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51484 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C51485 +
            (C1004 * C2218 - (C359 * C51490 + C360 * C2217) + C1005 * C51491 -
             (C117 * C1302 + C51314 * C1309) * C2219 -
             (C117 * C1310 + C51314 * C1314) * C2216) *
                C8259) *
               C51352) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51484 +
            (C1765 + C1766 - C1767 - C1768) * C51485 + C1785 * C8259) *
               C51456 +
           ((C4656 + C4657 - C4658 - C4659) * C51484 + C4995 * C51485 +
            C10084 * C8259) *
               C51352) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C51484 +
            (C1771 - (C1770 + C1769) + C1772) * C51485 +
            (C1775 - (C1774 + C1773) + C1776) * C8259) *
               C51456 +
           (C4996 * C51484 + (C2109 - (C2110 + C2111) + C2112) * C51485 +
            (C2113 - (C2114 + C2115) + C2116) * C8259) *
               C51352) *
              C51202 * C1112 +
          ((C1785 * C51484 + C1786 * C51485 +
            (C1779 + C1778 - C1777 - C1780) * C8259) *
               C51456 +
           (C10084 * C51484 + (C2115 + C2114 - C2113 - C2116) * C51485 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C8259) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51484 +
            (C1765 + C1766 - C1767 - C1768) * C51485 + C1785 * C8259) *
               C51456 +
           ((C4656 + C4657 - C4658 - C4659) * C51484 + C4995 * C51485 +
            C10084 * C8259) *
               C51352) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C51484 + C4996 * C51485 +
            (C2109 - (C2110 + C2111) + C2112) * C8259) *
               C51456 +
           ((C4662 - (C4661 + C4660) + C4663) * C51484 + C4997 * C51485 +
            (C4506 - (C4507 + C4508) + C4509) * C8259) *
               C51352) *
              C290 +
          ((C4677 * C51484 + C4676 * C51485 +
            (C4508 + C4507 - C4506 - C4509) * C8259) *
               C51456 +
           ((C4667 + C4666 - C4665 - C4668) * C51484 +
            (C4671 + C4670 - C4669 - C4672) * C51485 +
            (C2638 * C1762 + C2639 * C1760 -
             (C117 * C3351 + C51314 * C3356) * C1763 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C8259) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C51443 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C51253) *
              C51486 +
          (((C14055 * C2434 + C14463 * C51167) * C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C51443) *
              C51487 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C51456 +
            (C14463 * C2434 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C51443 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C2434) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C2434) *
                C51456) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C797 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51444 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C798 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C2434 +
             ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
              (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                 C51167) *
                C51456 +
            (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
              (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                 C2434 +
             C14956 * C51167) *
                C51352) *
               C51443 +
           ((((C14941 + C14940) * C798 -
              ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
              (C14943 + C14942) * C51281) *
                 C2434 +
             C14957 * C51167) *
                C51456 +
            (((C10923 * C1646 + C51457 * C1650 + C10924 * C2805 +
               C51378 * C2808) *
                  C798 -
              ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
              (C10923 * C1651 + C51457 * C1658 + C10924 * C2809 +
               C51378 * C2814) *
                  C51281) *
                 C2434 +
             ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C292 +
          (((((C11357 + C11356) * C798 -
              ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
              (C11359 + C11358) * C51281) *
                 C2434 +
             ((C11365 + C11364) * C798 -
              ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C51456 +
            (C14957 * C2434 +
             ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C14956 * C2434 +
             (C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C51456 +
            ((C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
              (C14953 + C14952) * C51281) *
                 C2434 +
             ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C798 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C289 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C290 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C2434 +
             C14058 * C51167) *
                C51456 +
            (((C10923 * C1188 + C51457 * C1196 + C10924 * C3349 +
               C51378 * C3352) *
                  C118 +
              (C10923 * C1195 + C51457 * C1200 + C10924 * C3353 +
               C51378 * C3358) *
                  C51217) *
                 C2434 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C14055 * C2434 +
             ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51167) *
                C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C289 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C2434) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C2434) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C51456 +
           (((C10923 * C297 + C51457 * C311 + C10924 * C961 + C51378 * C966) *
                 C118 +
             (C10923 * C310 + C51457 * C327 + C10924 * C967 + C51378 * C976) *
                 C51217) *
                C2434 +
            ((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51167) *
               C51352) *
              C51202 * C113 -
          ((C11534 * C51167 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C2434) *
               C51352 +
           (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
               C51456) *
              C51202 * C114 +
          ((C10982 * C2434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
               C51456 +
           (((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C2434 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C51167 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C2434) *
               C51352 +
           (((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51167 +
            C10983 * C2434) *
               C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C483 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C480 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C484 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C481 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C485 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C482) *
                C2434 +
            ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
             (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
             (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
             (C10924 * C1299 + C51378 * C1303 + C10923 * C961 + C51457 * C966) *
                 C484 -
             (C10924 * C1304 + C51378 * C1311 + C10923 * C967 + C51457 * C976) *
                 C481 +
             (C10923 * C1299 + C51457 * C1303 + C10924 * C4778 +
              C51378 * C4782) *
                 C485 +
             (C10923 * C1304 + C51457 * C1311 + C10924 * C4783 +
              C51378 * C4790) *
                 C482) *
                C2434 +
            (C14011 * C483 + C14012 * C480 - (C11913 + C11912) * C484 -
             (C11915 + C11914) * C481 + (C14261 + C14262) * C485 +
             (C14263 + C14264) * C482) *
                C51167) *
               C51352) *
              C51202 * C292 +
          ((((C11357 + C11356) * C484 -
             ((C10961 + C10960) * C480 + (C10959 + C10958) * C483) +
             (C11359 + C11358) * C481 - (C11361 + C11360) * C485 -
             (C11363 + C11362) * C482) *
                C2434 +
            ((C11365 + C11364) * C484 -
             ((C10965 + C10964) * C480 + (C10963 + C10962) * C483) +
             (C11367 + C11366) * C481 - (C11369 + C11368) * C485 -
             (C11371 + C11370) * C482) *
                C51167) *
               C51456 +
           (((C11912 + C11913) * C484 - (C14023 * C480 + C14024 * C483) +
             (C11914 + C11915) * C481 - (C14262 + C14261) * C485 -
             (C14264 + C14263) * C482) *
                C2434 +
            ((C11916 + C11917) * C484 - (C11518 * C480 + C11519 * C483) +
             (C11918 + C11919) * C481 -
             (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
              C51457 * C1307) *
                 C485 -
             (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
              C51457 * C1313) *
                 C482) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C10924 * C1299 + C51378 * C1303 + C10923 * C961 + C51457 * C966) *
                 C798 -
             (C10924 * C1304 + C51378 * C1311 + C10923 * C967 + C51457 * C976) *
                 C51281) *
                C2434 +
            (C14011 * C797 + C14012 * C51444 - (C11913 + C11912) * C798 -
             (C11915 + C11914) * C51281) *
                C51167) *
               C51352) *
              C51202 * C51486 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C2434 +
            ((C11365 + C11364) * C798 -
             ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C51456 +
           (((C11912 + C11913) * C798 - (C14023 * C51444 + C14024 * C797) +
             (C11914 + C11915) * C51281) *
                C2434 +
            ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C51487 +
          ((C11701 * C2434 +
            ((C10969 + C10968) * C797 + (C10967 + C10966) * C51444 -
             (C11697 + C11696) * C798 - (C11699 + C11698) * C51281) *
                C51167) *
               C51456 +
           ((C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
             (C11919 + C11918) * C51281) *
                C2434 +
            ((C11530 + C11531) * C797 + (C11532 + C11533) * C51444 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C798 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C51456 +
           (((C10923 * C297 + C51457 * C311 + C10924 * C961 + C51378 * C966) *
                 C118 +
             (C10923 * C310 + C51457 * C327 + C10924 * C967 + C51378 * C976) *
                 C51217) *
                C2434 +
            ((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51167) *
               C51352) *
              C51202 * C113 -
          ((C11534 * C51167 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C2434) *
               C51352 +
           (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
               C51456) *
              C51202 * C114 +
          ((C10982 * C2434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
               C51456 +
           (((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C2434 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C51167 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C2434) *
               C51352 +
           (((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51167 +
            C10983 * C2434) *
               C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C289 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C290 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C2434 +
             C14058 * C51167) *
                C51456 +
            (((C10923 * C1188 + C51457 * C1196 + C10924 * C3349 +
               C51378 * C3352) *
                  C118 +
              (C10923 * C1195 + C51457 * C1200 + C10924 * C3353 +
               C51378 * C3358) *
                  C51217) *
                 C2434 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C14055 * C2434 +
             ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51167) *
                C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C289 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C2434) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C2434) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C51488 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C51489 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C2434 +
             C14058 * C51167) *
                C51456 +
            (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C2434 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C1415) *
              C51435 +
          (((C14055 * C2434 + C14463 * C51167) * C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51489 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C51488 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C2434) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C2434) *
                C51456) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                C2434 +
            C14956 * C51167) *
               C51352) *
              C51488 +
          ((((C14941 + C14940) * C798 -
             ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
             (C14943 + C14942) * C51281) *
                C2434 +
            C14957 * C51167) *
               C51456 +
           (((C16154 + C16155) * C798 -
             ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
             (C16156 + C16157) * C51281) *
                C2434 +
            ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C51489 +
          ((((C14046 + C14045) * C797 + (C14044 + C14043) * C51444 -
             (C16155 + C16154) * C798 - (C16157 + C16156) * C51281) *
                C2434 +
            (C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C51456 +
           (((C15290 + C15291) * C797 + (C15292 + C15293) * C51444 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C798 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C2434 +
            ((C14051 + C14052) * C797 + (C14053 + C14054) * C51444 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C798 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C51456 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
            C14055 * C51167) *
               C51352) *
              C1180 -
          ((C14056 * C51167 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
               C51352 +
           (C14057 * C51167 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
               C51456) *
              C1181 +
          ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C2434 +
            C14058 * C51167) *
               C51456 +
           (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C2434 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51167 +
            ((C10924 * C4334 + C51378 * C4337 + C10923 * C2589 +
              C51457 * C2594) *
                 C51217 +
             (C10924 * C4331 + C51378 * C4333 + C10923 * C2585 +
              C51457 * C2588) *
                 C118) *
                C2434) *
               C51352 +
           (((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51167 +
            ((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C2434) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C1109 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C51253) *
              C1111 +
          (((C14055 * C2434 + C14463 * C51167) * C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C1109) *
              C1112 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C51456 +
            (C14463 * C2434 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C2434) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C2434) *
                C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C483 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C480 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C484 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C481 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C485 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C482) *
                C2434 +
            ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
             (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
             (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
             (C14940 + C14941) * C484 - (C14942 + C14943) * C481 +
             (C15496 + C15497) * C485 + (C15498 + C15499) * C482) *
                C2434 +
            (C14011 * C483 + C14012 * C480 - C14926 * C484 - C14927 * C481 +
             (C14261 + C14262) * C485 + (C14263 + C14264) * C482) *
                C51167) *
               C51352) *
              C1109 +
          ((((C14941 + C14940) * C484 -
             ((C14038 + C14037) * C480 + (C14036 + C14035) * C483) +
             (C14943 + C14942) * C481 - (C15497 + C15496) * C485 -
             (C15499 + C15498) * C482) *
                C2434 +
            (C14928 * C484 - (C14023 * C480 + C14024 * C483) + C14931 * C481 -
             (C14262 + C14261) * C485 - (C14264 + C14263) * C482) *
                C51167) *
               C51456 +
           (((C10923 * C1646 + C51457 * C1650 + C10924 * C2805 +
              C51378 * C2808) *
                 C484 -
             ((C14043 + C14044) * C480 + (C14045 + C14046) * C483) +
             (C10923 * C1651 + C51457 * C1658 + C10924 * C2809 +
              C51378 * C2814) *
                 C481 -
             (C10924 * C4780 + C51378 * C4786 + C10923 * C2805 +
              C51457 * C2808) *
                 C485 -
             (C10924 * C4787 + C51378 * C4792 + C10923 * C2809 +
              C51457 * C2814) *
                 C482) *
                C2434 +
            ((C14950 + C14951) * C484 - (C14013 * C480 + C14014 * C483) +
             (C14952 + C14953) * C481 -
             (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
              C51457 * C2810) *
                 C485 -
             (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
              C51457 * C2815) *
                 C482) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C797 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51444 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C798 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C2434 +
             ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
              (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                 C51167) *
                C51456 +
            (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
              (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                 C2434 +
             C14956 * C51167) *
                C51352) *
               C1109 +
           ((((C14941 + C14940) * C798 -
              ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
              (C14943 + C14942) * C51281) *
                 C2434 +
             C14957 * C51167) *
                C51456 +
            (((C10923 * C1646 + C51457 * C1650 + C10924 * C2805 +
               C51378 * C2808) *
                  C798 -
              ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
              (C10923 * C1651 + C51457 * C1658 + C10924 * C2809 +
               C51378 * C2814) *
                  C51281) *
                 C2434 +
             ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C11357 + C11356) * C798 -
              ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
              (C11359 + C11358) * C51281) *
                 C2434 +
             ((C11365 + C11364) * C798 -
              ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C51456 +
            (C14957 * C2434 +
             ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C1109 +
           ((C14956 * C2434 +
             (C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C51456 +
            ((C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
              (C14953 + C14952) * C51281) *
                 C2434 +
             ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C798 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C51456 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
             C14055 * C51167) *
                C51352) *
               C1109 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
                C51456) *
               C51253) *
              C1111 +
          (((C14055 * C2434 + C14463 * C51167) * C51456 +
            (C14058 * C2434 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C2434) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C2434) *
                C51456) *
               C1109) *
              C1112 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C51456 +
            (C14463 * C2434 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C2434) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C2434) *
                C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C51456 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C2434 +
            C14055 * C51167) *
               C51352) *
              C1180 -
          ((C14056 * C51167 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C2434) *
               C51352 +
           (C14057 * C51167 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C2434) *
               C51456) *
              C1181 +
          ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C2434 +
            C14058 * C51167) *
               C51456 +
           (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C2434 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51167 +
            ((C10924 * C4334 + C51378 * C4337 + C10923 * C2589 +
              C51457 * C2594) *
                 C51217 +
             (C10924 * C4331 + C51378 * C4333 + C10923 * C2585 +
              C51457 * C2588) *
                 C118) *
                C2434) *
               C51352 +
           (((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51167 +
            ((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C2434) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C1762 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C1760 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C1763 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C2434 +
             ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
              (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                 C51167) *
                C51456 +
            (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
              (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                 C2434 +
             C16946 * C51167) *
                C51352) *
               C51443 +
           ((((C14941 + C14940) * C1763 -
              ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
              (C14943 + C14942) * C51281) *
                 C2434 +
             C16947 * C51167) *
                C51456 +
            (((C16154 + C16155) * C1763 -
              ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
              (C16156 + C16157) * C51281) *
                 C2434 +
             ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C11357 + C11356) * C1763 -
              ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
              (C11359 + C11358) * C51281) *
                 C2434 +
             ((C11365 + C11364) * C1763 -
              ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C51456 +
            (C16947 * C2434 +
             ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C16946 * C2434 +
             (C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C51456 +
            ((C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
              (C14953 + C14952) * C51281) *
                 C2434 +
             ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C1763 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C2217 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51490 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C2218 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51491 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C2219 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C2216) *
                C2434 +
            ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
             (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
             (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
             (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
             (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
                C2434 +
            (C14011 * C2217 + C14012 * C51490 - C14926 * C2218 -
             C14927 * C51491 + (C14261 + C14262) * C2219 +
             (C14263 + C14264) * C2216) *
                C51167) *
               C51352) *
              C51443 +
          ((((C14941 + C14940) * C2218 -
             ((C14038 + C14037) * C51490 + (C14036 + C14035) * C2217) +
             (C14943 + C14942) * C51491 - (C15497 + C15496) * C2219 -
             (C15499 + C15498) * C2216) *
                C2434 +
            (C14928 * C2218 - (C14023 * C51490 + C14024 * C2217) +
             C14931 * C51491 - (C14262 + C14261) * C2219 -
             (C14264 + C14263) * C2216) *
                C51167) *
               C51456 +
           (((C16154 + C16155) * C2218 -
             ((C14043 + C14044) * C51490 + (C14045 + C14046) * C2217) +
             (C16156 + C16157) * C51491 -
             (C10924 * C4780 + C51378 * C4786 + C10923 * C2805 +
              C51457 * C2808) *
                 C2219 -
             (C10924 * C4787 + C51378 * C4792 + C10923 * C2809 +
              C51457 * C2814) *
                 C2216) *
                C2434 +
            ((C14950 + C14951) * C2218 - (C14013 * C51490 + C14014 * C2217) +
             (C14952 + C14953) * C51491 -
             (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
              C51457 * C2810) *
                 C2219 -
             (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
              C51457 * C2815) *
                 C2216) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C2434 +
            (C14011 * C1762 + C14012 * C1760 - C14926 * C1763 -
             C14927 * C51281) *
                C51167) *
               C51352) *
              C289 +
          ((((C14941 + C14940) * C1763 -
             ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
             (C14943 + C14942) * C51281) *
                C2434 +
            (C14928 * C1763 - (C14023 * C1760 + C14024 * C1762) +
             C14931 * C51281) *
                C51167) *
               C51456 +
           (((C16154 + C16155) * C1763 -
             ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
             (C16156 + C16157) * C51281) *
                C2434 +
            ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((((C14046 + C14045) * C1762 + (C14044 + C14043) * C1760 -
             (C16155 + C16154) * C1763 - (C16157 + C16156) * C51281) *
                C2434 +
            (C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C51456 +
           (((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C1763 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C2434 +
            ((C14051 + C14052) * C1762 + (C14053 + C14054) * C1760 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C1763 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C2434 +
            (C14011 * C1762 + C14012 * C1760 - C14926 * C1763 -
             C14927 * C51281) *
                C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C2434 +
            ((C11365 + C11364) * C1763 -
             ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C51456 +
           ((C14928 * C1763 - (C14023 * C1760 + C14024 * C1762) +
             C14931 * C51281) *
                C2434 +
            ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C12948 * C2434 +
            ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
             (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
                C51167) *
               C51456 +
           ((C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
             (C11919 + C11918) * C51281) *
                C2434 +
            ((C11530 + C11531) * C1762 + (C11532 + C11533) * C1760 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C1763 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1954 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1950 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1955 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C1951 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C1956 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C1952 -
            (C10924 * C5799 + C51378 * C5802 + C10923 * C1958 +
             C51457 * C1962) *
                C1957 -
            (C10924 * C5803 + C51378 * C5808 + C10923 * C1963 +
             C51457 * C1970) *
                C1953) *
               C2434 +
           ((C10958 + C10959) * C1954 + (C10960 + C10961) * C1950 -
            (C11356 + C11357) * C1955 - (C11358 + C11359) * C1951 +
            (C11360 + C11361) * C1956 + (C11362 + C11363) * C1952 -
            (C10924 * C5800 + C51378 * C5804 + C10923 * C1959 +
             C51457 * C1964) *
                C1957 -
            (C10924 * C5805 + C51378 * C5809 + C10923 * C1965 +
             C51457 * C1971) *
                C1953) *
               C51167) *
              C51456 +
          (((C14035 + C14036) * C1954 + (C14037 + C14038) * C1950 -
            (C14940 + C14941) * C1955 - (C14942 + C14943) * C1951 +
            (C15496 + C15497) * C1956 + (C15498 + C15499) * C1952 -
            (C10924 * C6781 + C51378 * C6783 + C10923 * C4778 +
             C51457 * C4782) *
                C1957 -
            (C10924 * C6784 + C51378 * C6787 + C10923 * C4783 +
             C51457 * C4790) *
                C1953) *
               C2434 +
           (C14011 * C1954 + C14012 * C1950 - C14926 * C1955 - C14927 * C1951 +
            (C14261 + C14262) * C1956 + (C14263 + C14264) * C1952 -
            (C10924 * C6782 + C51378 * C6785 + C10923 * C4779 +
             C51457 * C4784) *
                C1957 -
            (C10924 * C6786 + C51378 * C6788 + C10923 * C4785 +
             C51457 * C4791) *
                C1953) *
               C51167) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C2217 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51490 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C2218 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51491 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C2219 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C2216) *
                C2434 +
            ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
             (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
             (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
             (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
             (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
                C2434 +
            (C14011 * C2217 + C14012 * C51490 - C14926 * C2218 -
             C14927 * C51491 + (C14261 + C14262) * C2219 +
             (C14263 + C14264) * C2216) *
                C51167) *
               C51352) *
              C51202 * C51435 +
          ((((C11357 + C11356) * C2218 -
             ((C10961 + C10960) * C51490 + (C10959 + C10958) * C2217) +
             (C11359 + C11358) * C51491 - (C11361 + C11360) * C2219 -
             (C11363 + C11362) * C2216) *
                C2434 +
            ((C11365 + C11364) * C2218 -
             ((C10965 + C10964) * C51490 + (C10963 + C10962) * C2217) +
             (C11367 + C11366) * C51491 - (C11369 + C11368) * C2219 -
             (C11371 + C11370) * C2216) *
                C51167) *
               C51456 +
           ((C14928 * C2218 - (C14023 * C51490 + C14024 * C2217) +
             C14931 * C51491 - (C14262 + C14261) * C2219 -
             (C14264 + C14263) * C2216) *
                C2434 +
            ((C11916 + C11917) * C2218 - (C11518 * C51490 + C11519 * C2217) +
             (C11918 + C11919) * C51491 -
             (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
              C51457 * C1307) *
                 C2219 -
             (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
              C51457 * C1313) *
                 C2216) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C2434 +
            (C14011 * C1762 + C14012 * C1760 - C14926 * C1763 -
             C14927 * C51281) *
                C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C2434 +
            ((C11365 + C11364) * C1763 -
             ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C51456 +
           ((C14928 * C1763 - (C14023 * C1760 + C14024 * C1762) +
             C14931 * C51281) *
                C2434 +
            ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C12948 * C2434 +
            ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
             (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
                C51167) *
               C51456 +
           ((C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
             (C11919 + C11918) * C51281) *
                C2434 +
            ((C11530 + C11531) * C1762 + (C11532 + C11533) * C1760 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C1763 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C2434 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C51456 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C2434 +
            (C14011 * C1762 + C14012 * C1760 - C14926 * C1763 -
             C14927 * C51281) *
                C51167) *
               C51352) *
              C289 +
          ((((C14941 + C14940) * C1763 -
             ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
             (C14943 + C14942) * C51281) *
                C2434 +
            (C14928 * C1763 - (C14023 * C1760 + C14024 * C1762) +
             C14931 * C51281) *
                C51167) *
               C51456 +
           (((C16154 + C16155) * C1763 -
             ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
             (C16156 + C16157) * C51281) *
                C2434 +
            ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((((C14046 + C14045) * C1762 + (C14044 + C14043) * C1760 -
             (C16155 + C16154) * C1763 - (C16157 + C16156) * C51281) *
                C2434 +
            (C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C51456 +
           (((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C1763 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C2434 +
            ((C14051 + C14052) * C1762 + (C14053 + C14054) * C1760 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C1763 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C51314 * C126) * C118 +
                      (C117 * C127 + C51314 * C140) * C51217) *
                         C2434 +
                     (C178 + C179) * C51167) *
                        C2436 +
                    ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
                    C2659 * C2438) *
                       C51443 -
                   ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
                    (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
                    (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
                       C51253) *
                      C51486 +
                  (((C2602 * C2434 + C2994 * C51167) * C2436 +
                    (C2607 * C2434 + C2995 * C51167) * C2437 +
                    (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
                       C51253 -
                   (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
                    ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
                       C51443) *
                      C51487 +
                  (((C188 * C2434 + C189 * C51167) * C2436 +
                    (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
                    (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
                       C51443 -
                   ((((C117 * C1189 + C51314 * C1197) * C51217 +
                      (C117 * C1185 + C51314 * C1190) * C118) *
                         C51167 +
                     (C2653 + C2652) * C2434) *
                        C2438 +
                    ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
                    (C688 * C51167 + C689 * C2434) * C2436) *
                       C51253) *
                      C682)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C51314 * C126) * C118 +
                     (C117 * C127 + C51314 * C140) * C51217) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C51303 * C51443 -
                   (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C51314 * C327) * C51217 +
                     (C117 * C297 + C51314 * C311) * C118) *
                        C107) *
                       C51303 * C51253) *
                      C51486 +
                  (((C376 + C375) * C107 + (C374 + C373) * C108 +
                    (C372 + C371) * C109 + (C696 + C697) * C110) *
                       C51303 * C51253 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C51303 * C51443) *
                      C51487 +
                  ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                    (C186 + C187) * C110) *
                       C51303 * C51443 -
                   (((C117 * C684 + C51314 * C686) * C51217 +
                     (C117 * C683 + C51314 * C685) * C118) *
                        C110 +
                    (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
                       C51303 * C51253) *
                      C682)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C5414 * C119 + C5411 * C126 + C5415 * C486 +
                      C5412 * C496 + C5416 * C487 + C5413 * C498) *
                         C118 +
                     (C5414 * C127 + C5411 * C140 + C5415 * C497 +
                      C5412 * C516 + C5416 * C499 + C5413 * C517) *
                         C51217) *
                        C2434 +
                    ((C5454 + C5455 + C5456) * C118 +
                     (C5457 + C5458 + C5459) * C51217) *
                        C51167) *
                       C51303 * C51443 -
                   (((C5642 + C5643 + C5644) * C51217 +
                     (C5645 + C5646 + C5647) * C118) *
                        C51167 +
                    ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 +
                      C5412 * C976 + C5414 * C310 + C5411 * C327) *
                         C51217 +
                     (C5416 * C1299 + C5413 * C1303 + C5415 * C961 +
                      C5412 * C966 + C5414 * C297 + C5411 * C311) *
                         C118) *
                        C2434) *
                       C51303 * C51253) *
                      C51486 +
                  ((((C5647 + C5646 + C5645) * C118 +
                     (C5644 + C5643 + C5642) * C51217) *
                        C2434 +
                    ((C6006 + C6007 + C6008) * C118 +
                     (C6009 + C6010 + C6011) * C51217) *
                        C51167) *
                       C51303 * C51253 -
                   (((C5460 + C5461 + C5462) * C51217 +
                     (C5463 + C5464 + C5465) * C118) *
                        C51167 +
                    ((C5459 + C5458 + C5457) * C51217 +
                     (C5456 + C5455 + C5454) * C118) *
                        C2434) *
                       C51303 * C51443) *
                      C51487 +
                  ((((C5465 + C5464 + C5463) * C118 +
                     (C5462 + C5461 + C5460) * C51217) *
                        C2434 +
                    ((C5466 + C5467 + C5468) * C118 +
                     (C5469 + C5470 + C5471) * C51217) *
                        C51167) *
                       C51303 * C51443 -
                   (((C5416 * C1310 + C5413 * C1314 + C5415 * C973 +
                      C5412 * C979 + C5414 * C304 + C5411 * C324) *
                         C51217 +
                     (C5416 * C1302 + C5413 * C1309 + C5415 * C964 +
                      C5412 * C972 + C5414 * C294 + C5411 * C305) *
                         C118) *
                        C51167 +
                    ((C6011 + C6010 + C6009) * C51217 +
                     (C6008 + C6007 + C6006) * C118) *
                        C2434) *
                       C51303 * C51253) *
                      C682)) /
                    (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C804 + C805 - C806 - C807) * C51167) *
                C2436 +
            ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
            ((C3369 + C3370 - C3397 - C3398) * C2434 + C3399 * C51167) *
                C2438) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
                C2436 +
            ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
                C2437 +
            (((C117 * C3349 + C51314 * C3352) * C798 -
              (C2634 * C51444 + C2635 * C797) +
              (C117 * C3353 + C51314 * C3358) * C51281) *
                 C2434 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C2438) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C2434 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C2436 +
            (C3400 * C2434 + (C1008 - (C990 + C991) + C1009) * C51167) * C2437 +
            (C3401 * C2434 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C2438) *
               C51443 +
           ((C3396 * C2434 + (C991 + C990 - C1008 - C1009) * C51167) * C2436 +
            (C3399 * C2434 + (C3149 + C3148 - C3154 - C3155) * C51167) * C2437 +
            ((C3381 + C3380 - C3402 - C3403) * C2434 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
               C51303 * C51443 +
           (((C117 * C961 + C51314 * C966) * C798 -
             ((C117 * C310 + C51314 * C327) * C51444 +
              (C117 * C297 + C51314 * C311) * C797) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C51303 * C51253) *
              C292 +
          (((C806 - (C805 + C804) + C807) * C107 +
            (C810 - (C809 + C808) + C811) * C108 +
            (C814 - (C813 + C812) + C815) * C109 +
            (C828 - (C818 + C819) + C829) * C110) *
               C51303 * C51443 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C694 * C797 + C695 * C51444 -
             (C117 * C965 + C51314 * C974) * C798 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C797 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51444 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C798 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C2434 +
            ((C5454 + C5455 + C5456) * C797 + (C5457 + C5458 + C5459) * C51444 -
             (C5836 + C5837 + C5838) * C798 -
             (C5839 + C5840 + C5841) * C51281) *
                C51167) *
               C51303 * C51443 +
           (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
              C5416 * C4778 + C5413 * C4782) *
                 C798 -
             ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
               C5414 * C310 + C5411 * C327) *
                  C51444 +
              (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
               C5414 * C297 + C5411 * C311) *
                  C797) +
             (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
              C5416 * C4783 + C5413 * C4790) *
                 C51281) *
                C2434 +
            ((C6386 + C6387 + C6388) * C798 -
             ((C5642 + C5643 + C5644) * C51444 +
              (C5645 + C5646 + C5647) * C797) +
             (C6389 + C6390 + C6391) * C51281) *
                C51167) *
               C51303 * C51253) *
              C292 +
          ((((C5838 + C5837 + C5836) * C798 -
             ((C5459 + C5458 + C5457) * C51444 +
              (C5456 + C5455 + C5454) * C797) +
             (C5841 + C5840 + C5839) * C51281) *
                C2434 +
            ((C6170 + C6171 + C6172) * C798 -
             ((C5460 + C5461 + C5462) * C51444 +
              (C5463 + C5464 + C5465) * C797) +
             (C6173 + C6174 + C6175) * C51281) *
                C51167) *
               C51303 * C51443 +
           (((C5647 + C5646 + C5645) * C797 + (C5644 + C5643 + C5642) * C51444 -
             (C6388 + C6387 + C6386) * C798 -
             (C6391 + C6390 + C6389) * C51281) *
                C2434 +
            ((C6006 + C6007 + C6008) * C797 + (C6009 + C6010 + C6011) * C51444 -
             (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
              C5414 * C963 + C5411 * C970) *
                 C798 -
             (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
              C5414 * C971 + C5411 * C978) *
                 C51281) *
                C51167) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51314 * C126) * C118 +
                (C117 * C127 + C51314 * C140) * C51217) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51303 * C51202 * C113 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C51303 * C51202 * C114 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C51303 * C51202 * C115 -
              (((C117 * C138 + C51314 * C146) * C51217 +
                (C117 * C125 + C51314 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C51303 * C51202 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C118 +
                 (C117 * C127 + C51314 * C140) * C51217) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51303 * C289 -
               ((C371 + C372) * C110 + (C373 + C374) * C109 +
                (C375 + C376) * C108 +
                ((C117 * C310 + C51314 * C327) * C51217 +
                 (C117 * C297 + C51314 * C311) * C118) *
                    C107) *
                   C51303 * C290 +
               (((C117 * C298 + C51314 * C312) * C118 +
                 (C117 * C313 + C51314 * C328) * C51217) *
                    C107 +
                (C377 + C378) * C108 + (C379 + C380) * C109 +
                (C381 + C382) * C110) *
                   C51303 * C291) *
                  C292 +
              (((C376 + C375) * C107 + (C374 + C373) * C108 +
                (C372 + C371) * C109 +
                ((C117 * C302 + C51314 * C320) * C118 +
                 (C117 * C321 + C51314 * C332) * C51217) *
                    C110) *
                   C51303 * C290 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51303 * C289 -
               (((C117 * C322 + C51314 * C333) * C51217 +
                 (C117 * C303 + C51314 * C323) * C118) *
                    C110 +
                (C382 + C381) * C109 + (C380 + C379) * C108 +
                (C378 + C377) * C107) *
                   C51303 * C291) *
                  C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C107 +
           (C527 + C528 - C569 - C570 + C571 + C572) * C108 +
           (C537 + C538 - C573 - C574 + C575 + C576) * C109 +
           (C547 + C548 - C577 - C578 + C579 + C580) * C110) *
              C51303 * C51202 * C292 +
          ((C569 - (C528 + C527) + C570 - C571 - C572) * C107 +
           (C573 - (C538 + C537) + C574 - C575 - C576) * C108 +
           (C577 - (C548 + C547) + C578 - C579 - C580) * C109 +
           ((C117 * C494 + C51314 * C512) * C484 - (C174 * C480 + C175 * C483) +
            (C117 * C513 + C51314 * C524) * C481 -
            (C117 * C495 + C51314 * C514) * C485 -
            (C117 * C515 + C51314 * C525) * C482) *
               C110) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           (((C117 * C297 + C51314 * C311) * C118 +
             (C117 * C310 + C51314 * C327) * C51217) *
                C2434 +
            (C376 + C375) * C51167) *
               C2437 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C2434 +
            (C377 + C378) * C51167) *
               C2438) *
              C51202 * C113 -
          (((C380 + C379) * C51167 + (C378 + C377) * C2434) * C2438 +
           (C689 * C51167 + (C375 + C376) * C2434) * C2437 +
           ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
              C51202 * C114 +
          ((C188 * C2434 + C189 * C51167) * C2436 +
           ((C374 + C373) * C2434 + (C372 + C371) * C51167) * C2437 +
           ((C379 + C380) * C2434 + (C381 + C382) * C51167) * C2438) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C2434) *
               C2438 +
           ((C697 + C696) * C51167 + C688 * C2434) * C2437 +
           (C190 * C51167 + C191 * C2434) * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C289 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C290 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            (((C117 * C2585 + C51314 * C2588) * C118 +
              (C117 * C2589 + C51314 * C2594) * C51217) *
                 C2434 +
             (C2650 + C2651) * C51167) *
                C2438) *
               C291) *
              C292 +
          (((C2602 * C2434 + (C374 + C373) * C51167) * C2436 +
            (C2607 * C2434 + (C379 + C380) * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C290 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C2434 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C2436 +
           ((C2627 * C483 + C2628 * C480 -
             (C117 * C961 + C51314 * C966) * C484 -
             (C117 * C967 + C51314 * C976) * C481 +
             (C117 * C1299 + C51314 * C1303) * C485 +
             (C117 * C1304 + C51314 * C1311) * C482) *
                C2434 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C2437 +
           ((C2629 * C483 + C2630 * C480 -
             (C117 * C1646 + C51314 * C1650) * C484 -
             (C117 * C1651 + C51314 * C1658) * C481 +
             (C117 * C2805 + C51314 * C2808) * C485 +
             (C117 * C2809 + C51314 * C2814) * C482) *
                C2434 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C2438) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C2434 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C51167) *
               C2436 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C2434 +
            (C1002 * C484 - (C361 * C480 + C362 * C483) + C1003 * C481 -
             (C117 * C1301 + C51314 * C1307) * C485 -
             (C117 * C1308 + C51314 * C1313) * C482) *
                C51167) *
               C2437 +
           ((C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C2434 +
            ((C117 * C1648 + C51314 * C1654) * C484 -
             (C368 * C480 + C367 * C483) +
             (C117 * C1655 + C51314 * C1660) * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C51167) *
               C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51217) *
               C51167) *
              C51303 * C51202 * C113 -
          (((C5460 + C5461 + C5462) * C51217 + (C5463 + C5464 + C5465) * C118) *
               C51167 +
           ((C5459 + C5458 + C5457) * C51217 + (C5456 + C5455 + C5454) * C118) *
               C2434) *
              C51303 * C51202 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51217) *
               C2434 +
           ((C5466 + C5467 + C5468) * C118 + (C5469 + C5470 + C5471) * C51217) *
               C51167) *
              C51303 * C51202 * C115 -
          (((C5416 * C515 + C5413 * C525 + C5415 * C513 + C5412 * C524 +
             C5414 * C134 + C5411 * C144) *
                C51217 +
            (C5416 * C495 + C5413 * C514 + C5415 * C494 + C5412 * C512 +
             C5414 * C123 + C5411 * C135) *
                C118) *
               C51167 +
           ((C5471 + C5470 + C5469) * C51217 + (C5468 + C5467 + C5466) * C118) *
               C2434) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51217) *
                C51167) *
               C51303 * C289 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51167 +
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51217 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C118) *
                C2434) *
               C51303 * C290 +
           (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
              C5416 * C2805 + C5413 * C2808) *
                 C118 +
             (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
              C5416 * C2809 + C5413 * C2814) *
                 C51217) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51167) *
               C51303 * C291) *
              C292 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C2434 +
            ((C5414 * C295 + C5411 * C307 + C5415 * C963 + C5412 * C970 +
              C5416 * C1301 + C5413 * C1307) *
                 C118 +
             (C5414 * C306 + C5411 * C325 + C5415 * C971 + C5412 * C978 +
              C5416 * C1308 + C5413 * C1313) *
                 C51217) *
                C51167) *
               C51303 * C290 -
           (((C5460 + C5461 + C5462) * C51217 +
             (C5463 + C5464 + C5465) * C118) *
                C51167 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51303 * C289 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51167 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C2434) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C483 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C480 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C484 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C481 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C485 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C482) *
               C2434 +
           ((C5454 + C5455 + C5456) * C483 + (C5457 + C5458 + C5459) * C480 -
            (C5836 + C5837 + C5838) * C484 - (C5839 + C5840 + C5841) * C481 +
            (C5842 + C5843 + C5844) * C485 + (C5845 + C5846 + C5847) * C482) *
               C51167) *
              C51303 * C51202 * C292 +
          (((C5838 + C5837 + C5836) * C484 -
            ((C5459 + C5458 + C5457) * C480 + (C5456 + C5455 + C5454) * C483) +
            (C5841 + C5840 + C5839) * C481 - (C5844 + C5843 + C5842) * C485 -
            (C5847 + C5846 + C5845) * C482) *
               C2434 +
           ((C5414 * C490 + C5411 * C504 + C5415 * C491 + C5412 * C506 +
             C5416 * C1960 + C5413 * C1966) *
                C484 -
            ((C5460 + C5461 + C5462) * C480 + (C5463 + C5464 + C5465) * C483) +
            (C5414 * C505 + C5411 * C520 + C5415 * C507 + C5412 * C521 +
             C5416 * C1967 + C5413 * C1972) *
                C481 -
            (C5416 * C5801 + C5413 * C5806 + C5415 * C1960 + C5412 * C1966 +
             C5414 * C491 + C5411 * C506) *
                C485 -
            (C5416 * C5807 + C5413 * C5810 + C5415 * C1967 + C5412 * C1972 +
             C5414 * C507 + C5411 * C521) *
                C482) *
               C51167) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C804 + C805 - C806 - C807) * C51167) *
               C2436 +
           ((C2627 * C797 + C2628 * C51444 -
             (C117 * C961 + C51314 * C966) * C798 -
             (C117 * C967 + C51314 * C976) * C51281) *
                C2434 +
            (C985 + C984 - C1006 - C1007) * C51167) *
               C2437 +
           ((C2629 * C797 + C2630 * C51444 -
             (C117 * C1646 + C51314 * C1650) * C798 -
             (C117 * C1651 + C51314 * C1658) * C51281) *
                C2434 +
            (C3142 + C3143 - C3144 - C3145) * C51167) *
               C2438) *
              C51202 * C51486 +
          (((C806 - (C805 + C804) + C807) * C2434 +
            (C810 - (C809 + C808) + C811) * C51167) *
               C2436 +
           ((C1006 - (C984 + C985) + C1007) * C2434 +
            (C1008 - (C990 + C991) + C1009) * C51167) *
               C2437 +
           ((C3144 - (C3143 + C3142) + C3145) * C2434 +
            (C3154 - (C3148 + C3149) + C3155) * C51167) *
               C2438) *
              C51202 * C51487 +
          ((C830 * C2434 + C831 * C51167) * C2436 +
           ((C991 + C990 - C1008 - C1009) * C2434 +
            (C997 + C996 - C1010 - C1011) * C51167) *
               C2437 +
           ((C3149 + C3148 - C3154 - C3155) * C2434 +
            (C369 * C797 + C370 * C51444 -
             (C117 * C1649 + C51314 * C1656) * C798 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
              C51303 * C51202 * C51486 +
          ((C806 - (C805 + C804) + C807) * C107 +
           (C810 - (C809 + C808) + C811) * C108 +
           (C814 - (C813 + C812) + C815) * C109 +
           (C828 - (C818 + C819) + C829) * C110) *
              C51303 * C51202 * C51487 +
          (C830 * C107 + C831 * C108 + (C819 + C818 - C828 - C829) * C109 +
           (C176 * C797 + C177 * C51444 - (C117 * C799 + C51314 * C800) * C798 -
            (C117 * C801 + C51314 * C802) * C51281) *
               C110) *
              C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C797 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51444 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C798 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C797 + (C5457 + C5458 + C5459) * C51444 -
            (C5836 + C5837 + C5838) * C798 - (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C51202 * C51486 +
          (((C5838 + C5837 + C5836) * C798 -
            ((C5459 + C5458 + C5457) * C51444 +
             (C5456 + C5455 + C5454) * C797) +
            (C5841 + C5840 + C5839) * C51281) *
               C2434 +
           ((C6170 + C6171 + C6172) * C798 -
            ((C5460 + C5461 + C5462) * C51444 +
             (C5463 + C5464 + C5465) * C797) +
            (C6173 + C6174 + C6175) * C51281) *
               C51167) *
              C51303 * C51202 * C51487 +
          (((C5465 + C5464 + C5463) * C797 + (C5462 + C5461 + C5460) * C51444 -
            (C6172 + C6171 + C6170) * C798 - (C6175 + C6174 + C6173) * C51281) *
               C2434 +
           ((C5466 + C5467 + C5468) * C797 + (C5469 + C5470 + C5471) * C51444 -
            (C5416 * C1961 + C5413 * C1968 + C5415 * C493 + C5412 * C510 +
             C5414 * C492 + C5411 * C508) *
                C798 -
            (C5416 * C1969 + C5413 * C1973 + C5415 * C511 + C5412 * C523 +
             C5414 * C509 + C5411 * C522) *
                C51281) *
               C51167) *
              C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C290 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C51303 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C51314 * C320) * C118 +
             (C117 * C321 + C51314 * C332) * C51217) *
                C110) *
               C51303 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C289 -
           (((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C51202 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51303 * C51202 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51303 * C51202 * C115 -
          (((C117 * C138 + C51314 * C146) * C51217 +
            (C117 * C125 + C51314 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           (((C117 * C297 + C51314 * C311) * C118 +
             (C117 * C310 + C51314 * C327) * C51217) *
                C2434 +
            (C376 + C375) * C51167) *
               C2437 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C2434 +
            (C377 + C378) * C51167) *
               C2438) *
              C51202 * C113 -
          (((C380 + C379) * C51167 + (C378 + C377) * C2434) * C2438 +
           (C689 * C51167 + (C375 + C376) * C2434) * C2437 +
           ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
              C51202 * C114 +
          ((C188 * C2434 + C189 * C51167) * C2436 +
           ((C374 + C373) * C2434 + (C372 + C371) * C51167) * C2437 +
           ((C379 + C380) * C2434 + (C381 + C382) * C51167) * C2438) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C2434) *
               C2438 +
           ((C697 + C696) * C51167 + C688 * C2434) * C2437 +
           (C190 * C51167 + C191 * C2434) * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C289 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C290 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            (((C117 * C2585 + C51314 * C2588) * C118 +
              (C117 * C2589 + C51314 * C2594) * C51217) *
                 C2434 +
             (C2650 + C2651) * C51167) *
                C2438) *
               C291) *
              C292 +
          (((C2602 * C2434 + (C374 + C373) * C51167) * C2436 +
            (C2607 * C2434 + (C379 + C380) * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C290 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51217) *
               C51167) *
              C51303 * C51202 * C113 -
          (((C5460 + C5461 + C5462) * C51217 + (C5463 + C5464 + C5465) * C118) *
               C51167 +
           ((C5459 + C5458 + C5457) * C51217 + (C5456 + C5455 + C5454) * C118) *
               C2434) *
              C51303 * C51202 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51217) *
               C2434 +
           ((C5466 + C5467 + C5468) * C118 + (C5469 + C5470 + C5471) * C51217) *
               C51167) *
              C51303 * C51202 * C115 -
          (((C5416 * C515 + C5413 * C525 + C5415 * C513 + C5412 * C524 +
             C5414 * C134 + C5411 * C144) *
                C51217 +
            (C5416 * C495 + C5413 * C514 + C5415 * C494 + C5412 * C512 +
             C5414 * C123 + C5411 * C135) *
                C118) *
               C51167 +
           ((C5471 + C5470 + C5469) * C51217 + (C5468 + C5467 + C5466) * C118) *
               C2434) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51217) *
                C51167) *
               C51303 * C289 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51167 +
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51217 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C118) *
                C2434) *
               C51303 * C290 +
           (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
              C5416 * C2805 + C5413 * C2808) *
                 C118 +
             (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
              C5416 * C2809 + C5413 * C2814) *
                 C51217) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51167) *
               C51303 * C291) *
              C292 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C2434 +
            ((C5414 * C295 + C5411 * C307 + C5415 * C963 + C5412 * C970 +
              C5416 * C1301 + C5413 * C1307) *
                 C118 +
             (C5414 * C306 + C5411 * C325 + C5415 * C971 + C5412 * C978 +
              C5416 * C1308 + C5413 * C1313) *
                 C51217) *
                C51167) *
               C51303 * C290 -
           (((C5460 + C5461 + C5462) * C51217 +
             (C5463 + C5464 + C5465) * C118) *
                C51167 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51303 * C289 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51167 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C2434) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C51488 -
           (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51489 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
               C1415) *
              C51435 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51489 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C51488 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C51488 -
           (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C51489 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C51303 * C1415) *
              C51435 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C696 + C697) * C110) *
               C51303 * C51489 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C51488 -
           (((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51217) *
                C51167) *
               C51303 * C51488 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51167 +
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51217 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C118) *
                C2434) *
               C51303 * C51489 +
           (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
              C5416 * C2805 + C5413 * C2808) *
                 C118 +
             (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
              C5416 * C2809 + C5413 * C2814) *
                 C51217) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51167) *
               C51303 * C1415) *
              C51435 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C2434 +
            ((C6006 + C6007 + C6008) * C118 +
             (C6009 + C6010 + C6011) * C51217) *
                C51167) *
               C51303 * C51489 -
           (((C5460 + C5461 + C5462) * C51217 +
             (C5463 + C5464 + C5465) * C118) *
                C51167 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51303 * C51488 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51167 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C2434) *
               C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C804 + C805 - C806 - C807) * C51167) *
               C2436 +
           ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
           C4355 * C2438) *
              C51488 +
          (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
               C2436 +
           ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
               C2437 +
           ((C4352 - (C4344 + C4345) + C4353) * C2434 +
            (C3402 - (C3380 + C3381) + C3403) * C51167) *
               C2438) *
              C51489 +
          (C4355 * C2436 +
           ((C4345 + C4344 - C4352 - C4353) * C2434 +
            (C3381 + C3380 - C3402 - C3403) * C51167) *
               C2437 +
           ((C3663 * C797 + C3664 * C51444 -
             (C117 * C4331 + C51314 * C4333) * C798 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
              C51303 * C51488 +
          (((C117 * C961 + C51314 * C966) * C798 -
            ((C117 * C310 + C51314 * C327) * C51444 +
             (C117 * C297 + C51314 * C311) * C797) +
            (C117 * C967 + C51314 * C976) * C51281) *
               C107 +
           (C1006 - (C984 + C985) + C1007) * C108 +
           (C1008 - (C990 + C991) + C1009) * C109 +
           (C1010 - (C996 + C997) + C1011) * C110) *
              C51303 * C51489 +
          (((C117 * C298 + C51314 * C312) * C797 +
            (C117 * C313 + C51314 * C328) * C51444 -
            (C117 * C1646 + C51314 * C1650) * C798 -
            (C117 * C1651 + C51314 * C1658) * C51281) *
               C107 +
           (C365 * C797 + C366 * C51444 -
            (C117 * C1647 + C51314 * C1652) * C798 -
            (C117 * C1653 + C51314 * C1659) * C51281) *
               C108 +
           (C367 * C797 + C368 * C51444 -
            (C117 * C1648 + C51314 * C1654) * C798 -
            (C117 * C1655 + C51314 * C1660) * C51281) *
               C109 +
           (C369 * C797 + C370 * C51444 -
            (C117 * C1649 + C51314 * C1656) * C798 -
            (C117 * C1657 + C51314 * C1661) * C51281) *
               C110) *
              C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C797 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51444 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C798 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C797 + (C5457 + C5458 + C5459) * C51444 -
            (C5836 + C5837 + C5838) * C798 - (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C51488 +
          (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
             C5416 * C4778 + C5413 * C4782) *
                C798 -
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51444 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C797) +
            (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
             C5416 * C4783 + C5413 * C4790) *
                C51281) *
               C2434 +
           ((C6386 + C6387 + C6388) * C798 -
            ((C5642 + C5643 + C5644) * C51444 +
             (C5645 + C5646 + C5647) * C797) +
            (C6389 + C6390 + C6391) * C51281) *
               C51167) *
              C51303 * C51489 +
          (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
             C5416 * C2805 + C5413 * C2808) *
                C797 +
            (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
             C5416 * C2809 + C5413 * C2814) *
                C51444 -
            (C5416 * C4780 + C5413 * C4786 + C5415 * C2805 + C5412 * C2808 +
             C5414 * C1646 + C5411 * C1650) *
                C798 -
            (C5416 * C4787 + C5413 * C4792 + C5415 * C2809 + C5412 * C2814 +
             C5414 * C1651 + C5411 * C1658) *
                C51281) *
               C2434 +
           ((C5648 + C5649 + C5650) * C797 + (C5651 + C5652 + C5653) * C51444 -
            (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
             C5414 * C1647 + C5411 * C1652) *
                C798 -
            (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
             C5414 * C1653 + C5411 * C1659) *
                C51281) *
               C51167) *
              C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C118 +
                 (C117 * C127 + C51314 * C140) * C51217) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51303 * C1109 -
               (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
                ((C117 * C310 + C51314 * C327) * C51217 +
                 (C117 * C297 + C51314 * C311) * C118) *
                    C107) *
                   C51303 * C51253) *
                  C1111 +
              (((C376 + C375) * C107 + (C374 + C373) * C108 +
                (C372 + C371) * C109 + (C696 + C697) * C110) *
                   C51303 * C51253 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51303 * C1109) *
                  C1112 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C51303 * C1109 -
               (((C117 * C684 + C51314 * C686) * C51217 +
                 (C117 * C683 + C51314 * C685) * C118) *
                    C110 +
                (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
                   C51303 * C51253) *
                  C1113) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51314 * C126) * C118 +
                (C117 * C127 + C51314 * C140) * C51217) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51303 * C1180 -
              (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
               ((C117 * C310 + C51314 * C327) * C51217 +
                (C117 * C297 + C51314 * C311) * C118) *
                   C107) *
                  C51303 * C1181 +
              (((C117 * C298 + C51314 * C312) * C118 +
                (C117 * C313 + C51314 * C328) * C51217) *
                   C107 +
               (C377 + C378) * C108 + (C379 + C380) * C109 +
               (C381 + C382) * C110) *
                  C51303 * C1182 -
              (((C117 * C1189 + C51314 * C1197) * C51217 +
                (C117 * C1185 + C51314 * C1190) * C118) *
                   C110 +
               ((C117 * C1191 + C51314 * C1198) * C51217 +
                (C117 * C1186 + C51314 * C1192) * C118) *
                   C109 +
               ((C117 * C1193 + C51314 * C1199) * C51217 +
                (C117 * C1187 + C51314 * C1194) * C118) *
                   C108 +
               ((C117 * C1195 + C51314 * C1200) * C51217 +
                (C117 * C1188 + C51314 * C1196) * C118) *
                   C107) *
                  C51303 * C1183) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C107 +
           (C527 + C528 - C569 - C570 + C571 + C572) * C108 +
           (C537 + C538 - C573 - C574 + C575 + C576) * C109 +
           (C547 + C548 - C577 - C578 + C579 + C580) * C110) *
              C51303 * C1109 +
          (((C117 * C961 + C51314 * C966) * C484 -
            ((C117 * C310 + C51314 * C327) * C480 +
             (C117 * C297 + C51314 * C311) * C483) +
            (C117 * C967 + C51314 * C976) * C481 -
            (C117 * C1299 + C51314 * C1303) * C485 -
            (C117 * C1304 + C51314 * C1311) * C482) *
               C107 +
           (C1000 * C484 - (C363 * C480 + C364 * C483) + C1001 * C481 -
            (C117 * C1300 + C51314 * C1305) * C485 -
            (C117 * C1306 + C51314 * C1312) * C482) *
               C108 +
           (C1002 * C484 - (C361 * C480 + C362 * C483) + C1003 * C481 -
            (C117 * C1301 + C51314 * C1307) * C485 -
            (C117 * C1308 + C51314 * C1313) * C482) *
               C109 +
           (C1004 * C484 - (C359 * C480 + C360 * C483) + C1005 * C481 -
            (C117 * C1302 + C51314 * C1309) * C485 -
            (C117 * C1310 + C51314 * C1314) * C482) *
               C110) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C1109 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51253) *
              C1111 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51253 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C1109) *
              C1112 +
          (((C188 * C2434 + C189 * C51167) * C2436 +
            (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
            (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C2434) *
                C2438 +
            ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
            (C688 * C51167 + C689 * C2434) * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 + C2659 * C2438) *
              C1180 -
          (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
           (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
              C1181 +
          (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
           ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            ((C117 * C3651 + C51314 * C3654) * C51217 +
             (C117 * C3648 + C51314 * C3652) * C118) *
                C2434) *
               C2438 +
           ((C2651 + C2650) * C51167 + (C3667 + C3666) * C2434) * C2437 +
           C3665 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C2434 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C2436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C2434 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C2437 +
           ((C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C2434 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C2438) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C2434 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51167) *
               C2436 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C2434 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51167) *
               C2437 +
           (((C117 * C3349 + C51314 * C3352) * C484 -
             (C2634 * C480 + C2635 * C483) +
             (C117 * C3353 + C51314 * C3358) * C481 -
             (C117 * C3813 + C51314 * C3815) * C485 -
             (C117 * C3816 + C51314 * C3819) * C482) *
                C2434 +
            (C3392 * C484 - (C2632 * C480 + C2633 * C483) + C3393 * C481 -
             (C117 * C3814 + C51314 * C3817) * C485 -
             (C117 * C3818 + C51314 * C3820) * C482) *
                C51167) *
               C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C5414 * C119 + C5411 * C126 + C5415 * C486 +
                                  C5412 * C496 + C5416 * C487 + C5413 * C498) *
                                     C118 +
                                 (C5414 * C127 + C5411 * C140 + C5415 * C497 +
                                  C5412 * C516 + C5416 * C499 + C5413 * C517) *
                                     C51217) *
                                    C2434 +
                                ((C5454 + C5455 + C5456) * C118 +
                                 (C5457 + C5458 + C5459) * C51217) *
                                    C51167) *
                                   C51303 * C1109 -
                               (((C5642 + C5643 + C5644) * C51217 +
                                 (C5645 + C5646 + C5647) * C118) *
                                    C51167 +
                                ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 +
                                  C5412 * C976 + C5414 * C310 + C5411 * C327) *
                                     C51217 +
                                 (C5416 * C1299 + C5413 * C1303 + C5415 * C961 +
                                  C5412 * C966 + C5414 * C297 + C5411 * C311) *
                                     C118) *
                                    C2434) *
                                   C51303 * C51253) *
                                  C1111 +
                              ((((C5647 + C5646 + C5645) * C118 +
                                 (C5644 + C5643 + C5642) * C51217) *
                                    C2434 +
                                ((C6006 + C6007 + C6008) * C118 +
                                 (C6009 + C6010 + C6011) * C51217) *
                                    C51167) *
                                   C51303 * C51253 -
                               (((C5460 + C5461 + C5462) * C51217 +
                                 (C5463 + C5464 + C5465) * C118) *
                                    C51167 +
                                ((C5459 + C5458 + C5457) * C51217 +
                                 (C5456 + C5455 + C5454) * C118) *
                                    C2434) *
                                   C51303 * C1109) *
                                  C1112 +
                              ((((C5465 + C5464 + C5463) * C118 +
                                 (C5462 + C5461 + C5460) * C51217) *
                                    C2434 +
                                ((C5466 + C5467 + C5468) * C118 +
                                 (C5469 + C5470 + C5471) * C51217) *
                                    C51167) *
                                   C51303 * C1109 -
                               (((C5416 * C1310 + C5413 * C1314 + C5415 * C973 +
                                  C5412 * C979 + C5414 * C304 + C5411 * C324) *
                                     C51217 +
                                 (C5416 * C1302 + C5413 * C1309 + C5415 * C964 +
                                  C5412 * C972 + C5414 * C294 + C5411 * C305) *
                                     C118) *
                                    C51167 +
                                ((C6011 + C6010 + C6009) * C51217 +
                                 (C6008 + C6007 + C6006) * C118) *
                                    C2434) *
                                   C51303 * C51253) *
                                  C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51217) *
               C51167) *
              C51303 * C1180 -
          (((C5642 + C5643 + C5644) * C51217 + (C5645 + C5646 + C5647) * C118) *
               C51167 +
           ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
             C5414 * C310 + C5411 * C327) *
                C51217 +
            (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
             C5414 * C297 + C5411 * C311) *
                C118) *
               C2434) *
              C51303 * C1181 +
          (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
             C5416 * C2805 + C5413 * C2808) *
                C118 +
            (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
             C5416 * C2809 + C5413 * C2814) *
                C51217) *
               C2434 +
           ((C5648 + C5649 + C5650) * C118 + (C5651 + C5652 + C5653) * C51217) *
               C51167) *
              C51303 * C1182 -
          (((C5416 * C3818 + C5413 * C3820 + C5415 * C3355 + C5412 * C3359 +
             C5414 * C1193 + C5411 * C1199) *
                C51217 +
            (C5416 * C3814 + C5413 * C3817 + C5415 * C3350 + C5412 * C3354 +
             C5414 * C1187 + C5411 * C1194) *
                C118) *
               C51167 +
           ((C5416 * C3816 + C5413 * C3819 + C5415 * C3353 + C5412 * C3358 +
             C5414 * C1195 + C5411 * C1200) *
                C51217 +
            (C5416 * C3813 + C5413 * C3815 + C5415 * C3349 + C5412 * C3352 +
             C5414 * C1188 + C5411 * C1196) *
                C118) *
               C2434) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C483 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C480 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C484 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C481 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C485 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C482) *
               C2434 +
           ((C5454 + C5455 + C5456) * C483 + (C5457 + C5458 + C5459) * C480 -
            (C5836 + C5837 + C5838) * C484 - (C5839 + C5840 + C5841) * C481 +
            (C5842 + C5843 + C5844) * C485 + (C5845 + C5846 + C5847) * C482) *
               C51167) *
              C51303 * C1109 +
          (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
             C5416 * C4778 + C5413 * C4782) *
                C484 -
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C480 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C483) +
            (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
             C5416 * C4783 + C5413 * C4790) *
                C481 -
            (C5416 * C6781 + C5413 * C6783 + C5415 * C4778 + C5412 * C4782 +
             C5414 * C1299 + C5411 * C1303) *
                C485 -
            (C5416 * C6784 + C5413 * C6787 + C5415 * C4783 + C5412 * C4790 +
             C5414 * C1304 + C5411 * C1311) *
                C482) *
               C2434 +
           ((C6386 + C6387 + C6388) * C484 -
            ((C5642 + C5643 + C5644) * C480 + (C5645 + C5646 + C5647) * C483) +
            (C6389 + C6390 + C6391) * C481 -
            (C5416 * C6782 + C5413 * C6785 + C5415 * C4779 + C5412 * C4784 +
             C5414 * C1300 + C5411 * C1305) *
                C485 -
            (C5416 * C6786 + C5413 * C6788 + C5415 * C4785 + C5412 * C4791 +
             C5414 * C1306 + C5411 * C1312) *
                C482) *
               C51167) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C804 + C805 - C806 - C807) * C51167) *
                C2436 +
            ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
            ((C3369 + C3370 - C3397 - C3398) * C2434 + C3399 * C51167) *
                C2438) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
                C2436 +
            ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
                C2437 +
            (((C117 * C3349 + C51314 * C3352) * C798 -
              (C2634 * C51444 + C2635 * C797) +
              (C117 * C3353 + C51314 * C3358) * C51281) *
                 C2434 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C2438) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C2434 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C2436 +
            (C3400 * C2434 + (C1008 - (C990 + C991) + C1009) * C51167) * C2437 +
            (C3401 * C2434 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C2438) *
               C1109 +
           ((C3396 * C2434 + (C991 + C990 - C1008 - C1009) * C51167) * C2436 +
            (C3399 * C2434 + (C3149 + C3148 - C3154 - C3155) * C51167) * C2437 +
            ((C3381 + C3380 - C3402 - C3403) * C2434 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
               C51303 * C1109 +
           (((C117 * C961 + C51314 * C966) * C798 -
             ((C117 * C310 + C51314 * C327) * C51444 +
              (C117 * C297 + C51314 * C311) * C797) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C51303 * C51253) *
              C51435 +
          (((C806 - (C805 + C804) + C807) * C107 +
            (C810 - (C809 + C808) + C811) * C108 +
            (C814 - (C813 + C812) + C815) * C109 +
            (C828 - (C818 + C819) + C829) * C110) *
               C51303 * C1109 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C694 * C797 + C695 * C51444 -
             (C117 * C965 + C51314 * C974) * C798 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C797 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51444 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C798 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C2434 +
            ((C5454 + C5455 + C5456) * C797 + (C5457 + C5458 + C5459) * C51444 -
             (C5836 + C5837 + C5838) * C798 -
             (C5839 + C5840 + C5841) * C51281) *
                C51167) *
               C51303 * C1109 +
           (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
              C5416 * C4778 + C5413 * C4782) *
                 C798 -
             ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
               C5414 * C310 + C5411 * C327) *
                  C51444 +
              (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
               C5414 * C297 + C5411 * C311) *
                  C797) +
             (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
              C5416 * C4783 + C5413 * C4790) *
                 C51281) *
                C2434 +
            ((C6386 + C6387 + C6388) * C798 -
             ((C5642 + C5643 + C5644) * C51444 +
              (C5645 + C5646 + C5647) * C797) +
             (C6389 + C6390 + C6391) * C51281) *
                C51167) *
               C51303 * C51253) *
              C51435 +
          ((((C5838 + C5837 + C5836) * C798 -
             ((C5459 + C5458 + C5457) * C51444 +
              (C5456 + C5455 + C5454) * C797) +
             (C5841 + C5840 + C5839) * C51281) *
                C2434 +
            ((C6170 + C6171 + C6172) * C798 -
             ((C5460 + C5461 + C5462) * C51444 +
              (C5463 + C5464 + C5465) * C797) +
             (C6173 + C6174 + C6175) * C51281) *
                C51167) *
               C51303 * C1109 +
           (((C5647 + C5646 + C5645) * C797 + (C5644 + C5643 + C5642) * C51444 -
             (C6388 + C6387 + C6386) * C798 -
             (C6391 + C6390 + C6389) * C51281) *
                C2434 +
            ((C6006 + C6007 + C6008) * C797 + (C6009 + C6010 + C6011) * C51444 -
             (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
              C5414 * C963 + C5411 * C970) *
                 C798 -
             (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
              C5414 * C971 + C5411 * C978) *
                 C51281) *
                C51167) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C1180 -
          (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C51314 * C327) * C51217 +
            (C117 * C297 + C51314 * C311) * C118) *
               C107) *
              C51303 * C1181 +
          (((C117 * C298 + C51314 * C312) * C118 +
            (C117 * C313 + C51314 * C328) * C51217) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C51303 * C1182 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C110 +
           ((C117 * C1191 + C51314 * C1198) * C51217 +
            (C117 * C1186 + C51314 * C1192) * C118) *
               C109 +
           ((C117 * C1193 + C51314 * C1199) * C51217 +
            (C117 * C1187 + C51314 * C1194) * C118) *
               C108 +
           ((C117 * C1195 + C51314 * C1200) * C51217 +
            (C117 * C1188 + C51314 * C1196) * C118) *
               C107) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C1109 -
           (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C51253) *
              C1111 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C696 + C697) * C110) *
               C51303 * C51253 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C1109) *
              C1112 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51303 * C1109 -
           (((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C110 +
            (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C1109 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51253) *
              C1111 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51253 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C1109) *
              C1112 +
          (((C188 * C2434 + C189 * C51167) * C2436 +
            (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
            (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C2434) *
                C2438 +
            ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
            (C688 * C51167 + C689 * C2434) * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 + C2659 * C2438) *
              C1180 -
          (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
           (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
              C1181 +
          (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
           ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            ((C117 * C3651 + C51314 * C3654) * C51217 +
             (C117 * C3648 + C51314 * C3652) * C118) *
                C2434) *
               C2438 +
           ((C2651 + C2650) * C51167 + (C3667 + C3666) * C2434) * C2437 +
           C3665 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51217) *
                C51167) *
               C51303 * C1109 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51167 +
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51217 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C118) *
                C2434) *
               C51303 * C51253) *
              C1111 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C2434 +
            ((C6006 + C6007 + C6008) * C118 +
             (C6009 + C6010 + C6011) * C51217) *
                C51167) *
               C51303 * C51253 -
           (((C5460 + C5461 + C5462) * C51217 +
             (C5463 + C5464 + C5465) * C118) *
                C51167 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51303 * C1109) *
              C1112 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51217) *
                C2434 +
            ((C5466 + C5467 + C5468) * C118 +
             (C5469 + C5470 + C5471) * C51217) *
                C51167) *
               C51303 * C1109 -
           (((C5416 * C1310 + C5413 * C1314 + C5415 * C973 + C5412 * C979 +
              C5414 * C304 + C5411 * C324) *
                 C51217 +
             (C5416 * C1302 + C5413 * C1309 + C5415 * C964 + C5412 * C972 +
              C5414 * C294 + C5411 * C305) *
                 C118) *
                C51167 +
            ((C6011 + C6010 + C6009) * C51217 +
             (C6008 + C6007 + C6006) * C118) *
                C2434) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51217) *
               C51167) *
              C51303 * C1180 -
          (((C5642 + C5643 + C5644) * C51217 + (C5645 + C5646 + C5647) * C118) *
               C51167 +
           ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
             C5414 * C310 + C5411 * C327) *
                C51217 +
            (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
             C5414 * C297 + C5411 * C311) *
                C118) *
               C2434) *
              C51303 * C1181 +
          (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
             C5416 * C2805 + C5413 * C2808) *
                C118 +
            (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
             C5416 * C2809 + C5413 * C2814) *
                C51217) *
               C2434 +
           ((C5648 + C5649 + C5650) * C118 + (C5651 + C5652 + C5653) * C51217) *
               C51167) *
              C51303 * C1182 -
          (((C5416 * C3818 + C5413 * C3820 + C5415 * C3355 + C5412 * C3359 +
             C5414 * C1193 + C5411 * C1199) *
                C51217 +
            (C5416 * C3814 + C5413 * C3817 + C5415 * C3350 + C5412 * C3354 +
             C5414 * C1187 + C5411 * C1194) *
                C118) *
               C51167 +
           ((C5416 * C3816 + C5413 * C3819 + C5415 * C3353 + C5412 * C3358 +
             C5414 * C1195 + C5411 * C1200) *
                C51217 +
            (C5416 * C3813 + C5413 * C3815 + C5415 * C3349 + C5412 * C3352 +
             C5414 * C1188 + C5411 * C1196) *
                C118) *
               C2434) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C1765 + C1766 - C1767 - C1768) * C51167) *
                C2436 +
            ((C4656 + C4657 - C4658 - C4659) * C2434 + C4995 * C51167) * C2437 +
            C4680 * C2438) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C2434 + C4996 * C51167) *
                C2436 +
            ((C4662 - (C4661 + C4660) + C4663) * C2434 + C4997 * C51167) *
                C2437 +
            ((C4665 - (C4666 + C4667) + C4668) * C2434 +
             (C4669 - (C4670 + C4671) + C4672) * C51167) *
                C2438) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C2434 +
             (C1771 - (C1770 + C1769) + C1772) * C51167) *
                C2436 +
            (C4996 * C2434 + (C2109 - (C2110 + C2111) + C2112) * C51167) *
                C2437 +
            (C4997 * C2434 + (C4506 - (C4507 + C4508) + C4509) * C51167) *
                C2438) *
               C51443 +
           ((C4995 * C2434 + (C2111 + C2110 - C2109 - C2112) * C51167) * C2436 +
            (C4676 * C2434 + (C4508 + C4507 - C4506 - C4509) * C51167) * C2437 +
            ((C4671 + C4670 - C4669 - C4672) * C2434 +
             (C2638 * C1762 + C2639 * C1760 -
              (C117 * C3351 + C51314 * C3356) * C1763 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
            C1786 * C110) *
               C51303 * C51443 +
           (((C117 * C961 + C51314 * C966) * C1763 -
             ((C117 * C310 + C51314 * C327) * C1760 +
              (C117 * C297 + C51314 * C311) * C1762) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C2105 - (C2106 + C2107) + C2108) * C108 +
            (C2109 - (C2110 + C2111) + C2112) * C109 +
            (C2113 - (C2114 + C2115) + C2116) * C110) *
               C51303 * C51253) *
              C51435 +
          (((C1767 - (C1766 + C1765) + C1768) * C107 +
            (C1771 - (C1770 + C1769) + C1772) * C108 +
            (C1775 - (C1774 + C1773) + C1776) * C109 +
            (C1777 - (C1778 + C1779) + C1780) * C110) *
               C51303 * C51443 +
           ((C2107 + C2106 - C2105 - C2108) * C107 +
            (C2111 + C2110 - C2109 - C2112) * C108 +
            (C2115 + C2114 - C2113 - C2116) * C109 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C1762 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C1760 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C1763 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C2434 +
            ((C5454 + C5455 + C5456) * C1762 + (C5457 + C5458 + C5459) * C1760 -
             (C5836 + C5837 + C5838) * C1763 -
             (C5839 + C5840 + C5841) * C51281) *
                C51167) *
               C51303 * C51443 +
           (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
              C5416 * C4778 + C5413 * C4782) *
                 C1763 -
             ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
               C5414 * C310 + C5411 * C327) *
                  C1760 +
              (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
               C5414 * C297 + C5411 * C311) *
                  C1762) +
             (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
              C5416 * C4783 + C5413 * C4790) *
                 C51281) *
                C2434 +
            ((C6386 + C6387 + C6388) * C1763 -
             ((C5642 + C5643 + C5644) * C1760 +
              (C5645 + C5646 + C5647) * C1762) +
             (C6389 + C6390 + C6391) * C51281) *
                C51167) *
               C51303 * C51253) *
              C51435 +
          ((((C5838 + C5837 + C5836) * C1763 -
             ((C5459 + C5458 + C5457) * C1760 +
              (C5456 + C5455 + C5454) * C1762) +
             (C5841 + C5840 + C5839) * C51281) *
                C2434 +
            ((C6170 + C6171 + C6172) * C1763 -
             ((C5460 + C5461 + C5462) * C1760 +
              (C5463 + C5464 + C5465) * C1762) +
             (C6173 + C6174 + C6175) * C51281) *
                C51167) *
               C51303 * C51443 +
           (((C5647 + C5646 + C5645) * C1762 + (C5644 + C5643 + C5642) * C1760 -
             (C6388 + C6387 + C6386) * C1763 -
             (C6391 + C6390 + C6389) * C51281) *
                C2434 +
            ((C6006 + C6007 + C6008) * C1762 + (C6009 + C6010 + C6011) * C1760 -
             (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
              C5414 * C963 + C5411 * C970) *
                 C1763 -
             (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
              C5414 * C971 + C5411 * C978) *
                 C51281) *
                C51167) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C2434 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C2436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C2434 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C2437 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C2434 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C2438) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C2434 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51167) *
               C2436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C2434 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51167) *
               C2437 +
           ((C4349 * C2218 - (C2634 * C51490 + C2635 * C2217) + C4350 * C51491 -
             (C117 * C3813 + C51314 * C3815) * C2219 -
             (C117 * C3816 + C51314 * C3819) * C2216) *
                C2434 +
            (C3392 * C2218 - (C2632 * C51490 + C2633 * C2217) + C3393 * C51491 -
             (C117 * C3814 + C51314 * C3817) * C2219 -
             (C117 * C3818 + C51314 * C3820) * C2216) *
                C51167) *
               C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C107 +
           (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C108 +
           (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C109 +
           (C2233 + C2234 - C2235 - C2236 + C2237 + C2238) * C110) *
              C51303 * C51443 +
          (((C117 * C961 + C51314 * C966) * C2218 -
            ((C117 * C310 + C51314 * C327) * C51490 +
             (C117 * C297 + C51314 * C311) * C2217) +
            (C117 * C967 + C51314 * C976) * C51491 -
            (C117 * C1299 + C51314 * C1303) * C2219 -
            (C117 * C1304 + C51314 * C1311) * C2216) *
               C107 +
           (C1000 * C2218 - (C363 * C51490 + C364 * C2217) + C1001 * C51491 -
            (C117 * C1300 + C51314 * C1305) * C2219 -
            (C117 * C1306 + C51314 * C1312) * C2216) *
               C108 +
           (C1002 * C2218 - (C361 * C51490 + C362 * C2217) + C1003 * C51491 -
            (C117 * C1301 + C51314 * C1307) * C2219 -
            (C117 * C1308 + C51314 * C1313) * C2216) *
               C109 +
           (C1004 * C2218 - (C359 * C51490 + C360 * C2217) + C1005 * C51491 -
            (C117 * C1302 + C51314 * C1309) * C2219 -
            (C117 * C1310 + C51314 * C1314) * C2216) *
               C110) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C2217 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51490 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C2218 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51491 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C2219 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C2216) *
               C2434 +
           ((C5454 + C5455 + C5456) * C2217 + (C5457 + C5458 + C5459) * C51490 -
            (C5836 + C5837 + C5838) * C2218 - (C5839 + C5840 + C5841) * C51491 +
            (C5842 + C5843 + C5844) * C2219 + (C5845 + C5846 + C5847) * C2216) *
               C51167) *
              C51303 * C51443 +
          (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
             C5416 * C4778 + C5413 * C4782) *
                C2218 -
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C51490 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C2217) +
            (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
             C5416 * C4783 + C5413 * C4790) *
                C51491 -
            (C5416 * C6781 + C5413 * C6783 + C5415 * C4778 + C5412 * C4782 +
             C5414 * C1299 + C5411 * C1303) *
                C2219 -
            (C5416 * C6784 + C5413 * C6787 + C5415 * C4783 + C5412 * C4790 +
             C5414 * C1304 + C5411 * C1311) *
                C2216) *
               C2434 +
           ((C6386 + C6387 + C6388) * C2218 -
            ((C5642 + C5643 + C5644) * C51490 +
             (C5645 + C5646 + C5647) * C2217) +
            (C6389 + C6390 + C6391) * C51491 -
            (C5416 * C6782 + C5413 * C6785 + C5415 * C4779 + C5412 * C4784 +
             C5414 * C1300 + C5411 * C1305) *
                C2219 -
            (C5416 * C6786 + C5413 * C6788 + C5415 * C4785 + C5412 * C4791 +
             C5414 * C1306 + C5411 * C1312) *
                C2216) *
               C51167) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51314 * C126) * C1762 +
                (C117 * C127 + C51314 * C140) * C1760 -
                (C117 * C486 + C51314 * C496) * C1763 -
                (C117 * C497 + C51314 * C516) * C51281) *
                   C107 +
               (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
               C1786 * C110) *
                  C51303 * C51202 * C1111 +
              ((C1767 - (C1766 + C1765) + C1768) * C107 +
               (C1771 - (C1770 + C1769) + C1772) * C108 +
               (C1775 - (C1774 + C1773) + C1776) * C109 +
               (C1777 - (C1778 + C1779) + C1780) * C110) *
                  C51303 * C51202 * C1112 +
              (C1785 * C107 + C1786 * C108 +
               (C1779 + C1778 - C1777 - C1780) * C109 +
               (C176 * C1762 + C177 * C1760 -
                (C117 * C799 + C51314 * C800) * C1763 -
                (C117 * C801 + C51314 * C802) * C51281) *
                   C110) *
                  C51303 * C51202 * C1113) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51314 * C126) * C1762 +
                (C117 * C127 + C51314 * C140) * C1760 -
                (C117 * C486 + C51314 * C496) * C1763 -
                (C117 * C497 + C51314 * C516) * C51281) *
                   C107 +
               (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
               C1786 * C110) *
                  C51303 * C289 +
              (((C117 * C961 + C51314 * C966) * C1763 -
                ((C117 * C310 + C51314 * C327) * C1760 +
                 (C117 * C297 + C51314 * C311) * C1762) +
                (C117 * C967 + C51314 * C976) * C51281) *
                   C107 +
               (C1000 * C1763 - (C363 * C1760 + C364 * C1762) +
                C1001 * C51281) *
                   C108 +
               (C1002 * C1763 - (C361 * C1760 + C362 * C1762) +
                C1003 * C51281) *
                   C109 +
               (C1004 * C1763 - (C359 * C1760 + C360 * C1762) +
                C1005 * C51281) *
                   C110) *
                  C51303 * C290 +
              (((C117 * C298 + C51314 * C312) * C1762 +
                (C117 * C313 + C51314 * C328) * C1760 -
                (C117 * C1646 + C51314 * C1650) * C1763 -
                (C117 * C1651 + C51314 * C1658) * C51281) *
                   C107 +
               (C365 * C1762 + C366 * C1760 -
                (C117 * C1647 + C51314 * C1652) * C1763 -
                (C117 * C1653 + C51314 * C1659) * C51281) *
                   C108 +
               (C367 * C1762 + C368 * C1760 -
                (C117 * C1648 + C51314 * C1654) * C1763 -
                (C117 * C1655 + C51314 * C1660) * C51281) *
                   C109 +
               (C369 * C1762 + C370 * C1760 -
                (C117 * C1649 + C51314 * C1656) * C1763 -
                (C117 * C1657 + C51314 * C1661) * C51281) *
                   C110) *
                  C51303 * C291) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51314 * C126) * C1954 +
           (C117 * C127 + C51314 * C140) * C1950 -
           (C117 * C486 + C51314 * C496) * C1955 -
           (C117 * C497 + C51314 * C516) * C1951 +
           (C117 * C487 + C51314 * C498) * C1956 +
           (C117 * C499 + C51314 * C517) * C1952 -
           (C117 * C1958 + C51314 * C1962) * C1957 -
           (C117 * C1963 + C51314 * C1970) * C1953) *
              C107 +
          (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
           C559 * C1956 + C560 * C1952 -
           (C117 * C1959 + C51314 * C1964) * C1957 -
           (C117 * C1965 + C51314 * C1971) * C1953) *
              C108 +
          (C170 * C1954 + C171 * C1950 - C561 * C1955 - C562 * C1951 +
           C563 * C1956 + C564 * C1952 -
           (C117 * C1960 + C51314 * C1966) * C1957 -
           (C117 * C1967 + C51314 * C1972) * C1953) *
              C109 +
          (C172 * C1954 + C173 * C1950 - C565 * C1955 - C566 * C1951 +
           C567 * C1956 + C568 * C1952 -
           (C117 * C1961 + C51314 * C1968) * C1957 -
           (C117 * C1969 + C51314 * C1973) * C1953) *
              C110) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C2627 * C1762 + C2628 * C1760 - C3384 * C1763 - C3385 * C51281) *
                C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           ((C2629 * C1762 + C2630 * C1760 - C3387 * C1763 - C3388 * C51281) *
                C2434 +
            (C4502 + C4503 - C4504 - C4505) * C51167) *
               C2438) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C2434 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C2436 +
           ((C2105 - (C2106 + C2107) + C2108) * C2434 +
            (C2109 - (C2110 + C2111) + C2112) * C51167) *
               C2437 +
           ((C4504 - (C4503 + C4502) + C4505) * C2434 +
            (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C2438) *
              C51202 * C1112 +
          ((C1785 * C2434 + C1786 * C51167) * C2436 +
           ((C2111 + C2110 - C2109 - C2112) * C2434 +
            (C2115 + C2114 - C2113 - C2116) * C51167) *
               C2437 +
           ((C4508 + C4507 - C4506 - C4509) * C2434 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C4656 + C4657 - C4658 - C4659) * C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           C4680 * C2438) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C2434 +
            (C2105 - (C2106 + C2107) + C2108) * C51167) *
               C2436 +
           ((C4662 - (C4661 + C4660) + C4663) * C2434 +
            (C4504 - (C4503 + C4502) + C4505) * C51167) *
               C2437 +
           ((C4665 - (C4666 + C4667) + C4668) * C2434 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C2438) *
              C290 +
          (C4680 * C2436 +
           ((C4667 + C4666 - C4665 - C4668) * C2434 +
            (C4671 + C4670 - C4669 - C4672) * C51167) *
               C2437 +
           ((C3663 * C1762 + C3664 * C1760 -
             (C117 * C4331 + C51314 * C4333) * C1763 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C2434 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C51167) *
              C2436 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C2434 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C51167) *
              C2437 +
          ((C2629 * C1954 + C2630 * C1950 - C3387 * C1955 - C3388 * C1951 +
            C3840 * C1956 + C3841 * C1952 -
            (C117 * C4780 + C51314 * C4786) * C1957 -
            (C117 * C4787 + C51314 * C4792) * C1953) *
               C2434 +
           (C365 * C1954 + C366 * C1950 - C2838 * C1955 - C2839 * C1951 +
            C2840 * C1956 + C2841 * C1952 -
            (C117 * C4781 + C51314 * C4788) * C1957 -
            (C117 * C4789 + C51314 * C4793) * C1953) *
               C51167) *
              C2438) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1762 + (C5457 + C5458 + C5459) * C1760 -
            (C5836 + C5837 + C5838) * C1763 -
            (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C51202 * C1111 +
          (((C5838 + C5837 + C5836) * C1763 -
            ((C5459 + C5458 + C5457) * C1760 +
             (C5456 + C5455 + C5454) * C1762) +
            (C5841 + C5840 + C5839) * C51281) *
               C2434 +
           ((C6170 + C6171 + C6172) * C1763 -
            ((C5460 + C5461 + C5462) * C1760 +
             (C5463 + C5464 + C5465) * C1762) +
            (C6173 + C6174 + C6175) * C51281) *
               C51167) *
              C51303 * C51202 * C1112 +
          (((C5465 + C5464 + C5463) * C1762 + (C5462 + C5461 + C5460) * C1760 -
            (C6172 + C6171 + C6170) * C1763 -
            (C6175 + C6174 + C6173) * C51281) *
               C2434 +
           ((C5466 + C5467 + C5468) * C1762 + (C5469 + C5470 + C5471) * C1760 -
            (C5416 * C1961 + C5413 * C1968 + C5415 * C493 + C5412 * C510 +
             C5414 * C492 + C5411 * C508) *
                C1763 -
            (C5416 * C1969 + C5413 * C1973 + C5415 * C511 + C5412 * C523 +
             C5414 * C509 + C5411 * C522) *
                C51281) *
               C51167) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1762 + (C5457 + C5458 + C5459) * C1760 -
            (C5836 + C5837 + C5838) * C1763 -
            (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C289 +
          (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
             C5416 * C4778 + C5413 * C4782) *
                C1763 -
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C1760 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C1762) +
            (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
             C5416 * C4783 + C5413 * C4790) *
                C51281) *
               C2434 +
           ((C6386 + C6387 + C6388) * C1763 -
            ((C5642 + C5643 + C5644) * C1760 +
             (C5645 + C5646 + C5647) * C1762) +
            (C6389 + C6390 + C6391) * C51281) *
               C51167) *
              C51303 * C290 +
          (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
             C5416 * C2805 + C5413 * C2808) *
                C1762 +
            (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
             C5416 * C2809 + C5413 * C2814) *
                C1760 -
            (C5416 * C4780 + C5413 * C4786 + C5415 * C2805 + C5412 * C2808 +
             C5414 * C1646 + C5411 * C1650) *
                C1763 -
            (C5416 * C4787 + C5413 * C4792 + C5415 * C2809 + C5412 * C2814 +
             C5414 * C1651 + C5411 * C1658) *
                C51281) *
               C2434 +
           ((C5648 + C5649 + C5650) * C1762 + (C5651 + C5652 + C5653) * C1760 -
            (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
             C5414 * C1647 + C5411 * C1652) *
                C1763 -
            (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
             C5414 * C1653 + C5411 * C1659) *
                C51281) *
               C51167) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
            C5416 * C487 + C5413 * C498) *
               C1954 +
           (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
            C5416 * C499 + C5413 * C517) *
               C1950 -
           (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
            C5414 * C486 + C5411 * C496) *
               C1955 -
           (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
            C5414 * C497 + C5411 * C516) *
               C1951 +
           (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
            C5416 * C5799 + C5413 * C5802) *
               C1956 +
           (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
            C5416 * C5803 + C5413 * C5808) *
               C1952 -
           (C5416 * C7665 + C5413 * C7667 + C5415 * C5799 + C5412 * C5802 +
            C5414 * C1958 + C5411 * C1962) *
               C1957 -
           (C5416 * C7668 + C5413 * C7671 + C5415 * C5803 + C5412 * C5808 +
            C5414 * C1963 + C5411 * C1970) *
               C1953) *
              C2434 +
          ((C5454 + C5455 + C5456) * C1954 + (C5457 + C5458 + C5459) * C1950 -
           (C5836 + C5837 + C5838) * C1955 - (C5839 + C5840 + C5841) * C1951 +
           (C5842 + C5843 + C5844) * C1956 + (C5845 + C5846 + C5847) * C1952 -
           (C5416 * C7666 + C5413 * C7669 + C5415 * C5800 + C5412 * C5804 +
            C5414 * C1959 + C5411 * C1964) *
               C1957 -
           (C5416 * C7670 + C5413 * C7672 + C5415 * C5805 + C5412 * C5809 +
            C5414 * C1965 + C5411 * C1971) *
               C1953) *
              C51167) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C2434 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C2436 +
           ((C2627 * C2217 + C2628 * C51490 - C3384 * C2218 - C3385 * C51491 +
             C3838 * C2219 + C3839 * C2216) *
                C2434 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C2437 +
           ((C2629 * C2217 + C2630 * C51490 - C3387 * C2218 - C3388 * C51491 +
             C3840 * C2219 + C3841 * C2216) *
                C2434 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C2438) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C2434 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C51167) *
               C2436 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C2434 +
            (C1002 * C2218 - (C361 * C51490 + C362 * C2217) + C1003 * C51491 -
             (C117 * C1301 + C51314 * C1307) * C2219 -
             (C117 * C1308 + C51314 * C1313) * C2216) *
                C51167) *
               C2437 +
           ((C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C2434 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C51167) *
               C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C107 +
           (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C108 +
           (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C109 +
           (C2233 + C2234 - C2235 - C2236 + C2237 + C2238) * C110) *
              C51303 * C51202 * C51435 +
          ((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C107 +
           (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C108 +
           (C2235 - (C2234 + C2233) + C2236 - C2237 - C2238) * C109 +
           (C824 * C2218 - (C174 * C51490 + C175 * C2217) + C825 * C51491 -
            (C117 * C495 + C51314 * C514) * C2219 -
            (C117 * C515 + C51314 * C525) * C2216) *
               C110) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C2217 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51490 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C2218 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51491 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C2219 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C2216) *
               C2434 +
           ((C5454 + C5455 + C5456) * C2217 + (C5457 + C5458 + C5459) * C51490 -
            (C5836 + C5837 + C5838) * C2218 - (C5839 + C5840 + C5841) * C51491 +
            (C5842 + C5843 + C5844) * C2219 + (C5845 + C5846 + C5847) * C2216) *
               C51167) *
              C51303 * C51202 * C51435 +
          (((C5838 + C5837 + C5836) * C2218 -
            ((C5459 + C5458 + C5457) * C51490 +
             (C5456 + C5455 + C5454) * C2217) +
            (C5841 + C5840 + C5839) * C51491 - (C5844 + C5843 + C5842) * C2219 -
            (C5847 + C5846 + C5845) * C2216) *
               C2434 +
           ((C6170 + C6171 + C6172) * C2218 -
            ((C5460 + C5461 + C5462) * C51490 +
             (C5463 + C5464 + C5465) * C2217) +
            (C6173 + C6174 + C6175) * C51491 -
            (C5416 * C5801 + C5413 * C5806 + C5415 * C1960 + C5412 * C1966 +
             C5414 * C491 + C5411 * C506) *
                C2219 -
            (C5416 * C5807 + C5413 * C5810 + C5415 * C1967 + C5412 * C1972 +
             C5414 * C507 + C5411 * C521) *
                C2216) *
               C51167) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C289 +
          (((C117 * C961 + C51314 * C966) * C1763 -
            ((C117 * C310 + C51314 * C327) * C1760 +
             (C117 * C297 + C51314 * C311) * C1762) +
            (C117 * C967 + C51314 * C976) * C51281) *
               C107 +
           (C1000 * C1763 - (C363 * C1760 + C364 * C1762) + C1001 * C51281) *
               C108 +
           (C1002 * C1763 - (C361 * C1760 + C362 * C1762) + C1003 * C51281) *
               C109 +
           (C1004 * C1763 - (C359 * C1760 + C360 * C1762) + C1005 * C51281) *
               C110) *
              C51303 * C290 +
          (((C117 * C298 + C51314 * C312) * C1762 +
            (C117 * C313 + C51314 * C328) * C1760 -
            (C117 * C1646 + C51314 * C1650) * C1763 -
            (C117 * C1651 + C51314 * C1658) * C51281) *
               C107 +
           (C365 * C1762 + C366 * C1760 -
            (C117 * C1647 + C51314 * C1652) * C1763 -
            (C117 * C1653 + C51314 * C1659) * C51281) *
               C108 +
           (C367 * C1762 + C368 * C1760 -
            (C117 * C1648 + C51314 * C1654) * C1763 -
            (C117 * C1655 + C51314 * C1660) * C51281) *
               C109 +
           (C369 * C1762 + C370 * C1760 -
            (C117 * C1649 + C51314 * C1656) * C1763 -
            (C117 * C1657 + C51314 * C1661) * C51281) *
               C110) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C107 +
           (C1771 - (C1770 + C1769) + C1772) * C108 +
           (C1775 - (C1774 + C1773) + C1776) * C109 +
           (C1777 - (C1778 + C1779) + C1780) * C110) *
              C51303 * C51202 * C1112 +
          (C1785 * C107 + C1786 * C108 +
           (C1779 + C1778 - C1777 - C1780) * C109 +
           (C176 * C1762 + C177 * C1760 -
            (C117 * C799 + C51314 * C800) * C1763 -
            (C117 * C801 + C51314 * C802) * C51281) *
               C110) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C2627 * C1762 + C2628 * C1760 - C3384 * C1763 - C3385 * C51281) *
                C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           ((C2629 * C1762 + C2630 * C1760 - C3387 * C1763 - C3388 * C51281) *
                C2434 +
            (C4502 + C4503 - C4504 - C4505) * C51167) *
               C2438) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C2434 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C2436 +
           ((C2105 - (C2106 + C2107) + C2108) * C2434 +
            (C2109 - (C2110 + C2111) + C2112) * C51167) *
               C2437 +
           ((C4504 - (C4503 + C4502) + C4505) * C2434 +
            (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C2438) *
              C51202 * C1112 +
          ((C1785 * C2434 + C1786 * C51167) * C2436 +
           ((C2111 + C2110 - C2109 - C2112) * C2434 +
            (C2115 + C2114 - C2113 - C2116) * C51167) *
               C2437 +
           ((C4508 + C4507 - C4506 - C4509) * C2434 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C4656 + C4657 - C4658 - C4659) * C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           C4680 * C2438) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C2434 +
            (C2105 - (C2106 + C2107) + C2108) * C51167) *
               C2436 +
           ((C4662 - (C4661 + C4660) + C4663) * C2434 +
            (C4504 - (C4503 + C4502) + C4505) * C51167) *
               C2437 +
           ((C4665 - (C4666 + C4667) + C4668) * C2434 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C2438) *
              C290 +
          (C4680 * C2436 +
           ((C4667 + C4666 - C4665 - C4668) * C2434 +
            (C4671 + C4670 - C4669 - C4672) * C51167) *
               C2437 +
           ((C3663 * C1762 + C3664 * C1760 -
             (C117 * C4331 + C51314 * C4333) * C1763 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1762 + (C5457 + C5458 + C5459) * C1760 -
            (C5836 + C5837 + C5838) * C1763 -
            (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C51202 * C1111 +
          (((C5838 + C5837 + C5836) * C1763 -
            ((C5459 + C5458 + C5457) * C1760 +
             (C5456 + C5455 + C5454) * C1762) +
            (C5841 + C5840 + C5839) * C51281) *
               C2434 +
           ((C6170 + C6171 + C6172) * C1763 -
            ((C5460 + C5461 + C5462) * C1760 +
             (C5463 + C5464 + C5465) * C1762) +
            (C6173 + C6174 + C6175) * C51281) *
               C51167) *
              C51303 * C51202 * C1112 +
          (((C5465 + C5464 + C5463) * C1762 + (C5462 + C5461 + C5460) * C1760 -
            (C6172 + C6171 + C6170) * C1763 -
            (C6175 + C6174 + C6173) * C51281) *
               C2434 +
           ((C5466 + C5467 + C5468) * C1762 + (C5469 + C5470 + C5471) * C1760 -
            (C5416 * C1961 + C5413 * C1968 + C5415 * C493 + C5412 * C510 +
             C5414 * C492 + C5411 * C508) *
                C1763 -
            (C5416 * C1969 + C5413 * C1973 + C5415 * C511 + C5412 * C523 +
             C5414 * C509 + C5411 * C522) *
                C51281) *
               C51167) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1762 + (C5457 + C5458 + C5459) * C1760 -
            (C5836 + C5837 + C5838) * C1763 -
            (C5839 + C5840 + C5841) * C51281) *
               C51167) *
              C51303 * C289 +
          (((C5414 * C961 + C5411 * C966 + C5415 * C1299 + C5412 * C1303 +
             C5416 * C4778 + C5413 * C4782) *
                C1763 -
            ((C5416 * C1304 + C5413 * C1311 + C5415 * C967 + C5412 * C976 +
              C5414 * C310 + C5411 * C327) *
                 C1760 +
             (C5416 * C1299 + C5413 * C1303 + C5415 * C961 + C5412 * C966 +
              C5414 * C297 + C5411 * C311) *
                 C1762) +
            (C5414 * C967 + C5411 * C976 + C5415 * C1304 + C5412 * C1311 +
             C5416 * C4783 + C5413 * C4790) *
                C51281) *
               C2434 +
           ((C6386 + C6387 + C6388) * C1763 -
            ((C5642 + C5643 + C5644) * C1760 +
             (C5645 + C5646 + C5647) * C1762) +
            (C6389 + C6390 + C6391) * C51281) *
               C51167) *
              C51303 * C290 +
          (((C5414 * C298 + C5411 * C312 + C5415 * C1646 + C5412 * C1650 +
             C5416 * C2805 + C5413 * C2808) *
                C1762 +
            (C5414 * C313 + C5411 * C328 + C5415 * C1651 + C5412 * C1658 +
             C5416 * C2809 + C5413 * C2814) *
                C1760 -
            (C5416 * C4780 + C5413 * C4786 + C5415 * C2805 + C5412 * C2808 +
             C5414 * C1646 + C5411 * C1650) *
                C1763 -
            (C5416 * C4787 + C5413 * C4792 + C5415 * C2809 + C5412 * C2814 +
             C5414 * C1651 + C5411 * C1658) *
                C51281) *
               C2434 +
           ((C5648 + C5649 + C5650) * C1762 + (C5651 + C5652 + C5653) * C1760 -
            (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
             C5414 * C1647 + C5411 * C1652) *
                C1763 -
            (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
             C5414 * C1653 + C5411 * C1659) *
                C51281) *
               C51167) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C51443 -
           (C11534 * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C51253) *
              C51486 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C8259) *
               C51303 * C51253 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C51443) *
              C51487 +
          ((C10982 * C51484 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51485 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51217) * C8259) *
               C51303 * C51443 -
           (((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C8259 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51485 +
            C11534 * C51484) *
               C51303 * C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51484 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51485 +
            C11701 * C8259) *
               C51303 * C51443 +
           (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                 C798 -
             ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                  C51444 +
              (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                  C797) +
             (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                 C51281) *
                C51484 +
            ((C11912 + C11913) * C798 -
             ((C11166 + C11167) * C51444 + (C11168 + C11169) * C797) +
             (C11914 + C11915) * C51281) *
                C51485 +
            ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
             (C11918 + C11919) * C51281) *
                C8259) *
               C51303 * C51253) *
              C292 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C51484 +
            ((C11365 + C11364) * C798 -
             ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
             (C11367 + C11366) * C51281) *
                C51485 +
            ((C11696 + C11697) * C798 - (C10976 * C51444 + C10977 * C797) +
             (C11698 + C11699) * C51281) *
                C8259) *
               C51303 * C51443 +
           (((C11169 + C11168) * C797 + (C11167 + C11166) * C51444 -
             (C11913 + C11912) * C798 - (C11915 + C11914) * C51281) *
                C51484 +
            ((C11165 + C11164) * C797 + (C11163 + C11162) * C51444 -
             (C11917 + C11916) * C798 - (C11919 + C11918) * C51281) *
                C51485 +
            ((C11530 + C11531) * C797 + (C11532 + C11533) * C51444 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C798 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C8259) *
               C51303 * C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C289 -
           (((C11162 + C11163) * C51217 + (C11164 + C11165) * C118) * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C290 +
           (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                 C118 +
             (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                 C51217) *
                C51484 +
            ((C11170 + C11171) * C118 + (C11172 + C11173) * C51217) * C51485 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C8259) *
               C51303 * C291) *
              C292 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C10923 * C294 + C51457 * C305 + C10924 * C964 + C51378 * C972) *
                 C118 +
             (C10923 * C304 + C51457 * C324 + C10924 * C973 + C51378 * C979) *
                 C51217) *
                C8259) *
               C51303 * C290 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C289 -
           (((C10924 * C1657 + C51378 * C1661 + C10923 * C319 + C51457 * C331) *
                 C51217 +
             (C10924 * C1649 + C51378 * C1656 + C10923 * C301 + C51457 * C318) *
                 C118) *
                C8259 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51485 +
            ((C11173 + C11172) * C51217 + (C11171 + C11170) * C118) * C51484) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51484 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
           C10982 * C8259) *
              C51303 * C51202 * C113 -
          (C10983 * C8259 +
           ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
           ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
              C51303 * C51202 * C114 +
          (C10982 * C51484 +
           ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51485 +
           ((C10970 + C10971) * C118 + (C10972 + C10973) * C51217) * C8259) *
              C51303 * C51202 * C115 -
          (((C10924 * C801 + C51378 * C802 + C10923 * C137 + C51457 * C145) *
                C51217 +
            (C10924 * C799 + C51378 * C800 + C10923 * C124 + C51457 * C136) *
                C118) *
               C8259 +
           ((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51485 +
           C10983 * C51484) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C483 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C480 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C484 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C481 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C485 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C482) *
               C51484 +
           ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
            (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
            (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
               C51485 +
           (C10974 * C483 + C10975 * C480 - (C11364 + C11365) * C484 -
            (C11366 + C11367) * C481 + (C11368 + C11369) * C485 +
            (C11370 + C11371) * C482) *
               C8259) *
              C51303 * C51202 * C292 +
          (((C11357 + C11356) * C484 -
            ((C10961 + C10960) * C480 + (C10959 + C10958) * C483) +
            (C11359 + C11358) * C481 - (C11361 + C11360) * C485 -
            (C11363 + C11362) * C482) *
               C51484 +
           ((C11365 + C11364) * C484 -
            ((C10965 + C10964) * C480 + (C10963 + C10962) * C483) +
            (C11367 + C11366) * C481 - (C11369 + C11368) * C485 -
            (C11371 + C11370) * C482) *
               C51485 +
           ((C10923 * C492 + C51457 * C508 + C10924 * C493 + C51378 * C510) *
                C484 -
            (C10976 * C480 + C10977 * C483) +
            (C10923 * C509 + C51457 * C522 + C10924 * C511 + C51378 * C523) *
                C481 -
            (C10924 * C1961 + C51378 * C1968 + C10923 * C493 + C51457 * C510) *
                C485 -
            (C10924 * C1969 + C51378 * C1973 + C10923 * C511 + C51457 * C523) *
                C482) *
               C8259) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C797 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51444 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C798 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
            (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
               C51485 +
           C11701 * C8259) *
              C51303 * C51202 * C51486 +
          (((C11357 + C11356) * C798 -
            ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
            (C11359 + C11358) * C51281) *
               C51484 +
           ((C11365 + C11364) * C798 -
            ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
            (C11367 + C11366) * C51281) *
               C51485 +
           ((C11696 + C11697) * C798 - (C10976 * C51444 + C10977 * C797) +
            (C11698 + C11699) * C51281) *
               C8259) *
              C51303 * C51202 * C51487 +
          (C11701 * C51484 +
           ((C10969 + C10968) * C797 + (C10967 + C10966) * C51444 -
            (C11697 + C11696) * C798 - (C11699 + C11698) * C51281) *
               C51485 +
           ((C10970 + C10971) * C797 + (C10972 + C10973) * C51444 -
            (C10924 * C495 + C51378 * C514 + C10923 * C494 + C51457 * C512) *
                C798 -
            (C10924 * C515 + C51378 * C525 + C10923 * C513 + C51457 * C524) *
                C51281) *
               C8259) *
              C51303 * C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51484 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
           C10982 * C8259) *
              C51303 * C51202 * C113 -
          (C10983 * C8259 +
           ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
           ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
              C51303 * C51202 * C114 +
          (C10982 * C51484 +
           ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51485 +
           ((C10970 + C10971) * C118 + (C10972 + C10973) * C51217) * C8259) *
              C51303 * C51202 * C115 -
          (((C10924 * C801 + C51378 * C802 + C10923 * C137 + C51457 * C145) *
                C51217 +
            (C10924 * C799 + C51378 * C800 + C10923 * C124 + C51457 * C136) *
                C118) *
               C8259 +
           ((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51485 +
           C10983 * C51484) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C289 -
           (((C11162 + C11163) * C51217 + (C11164 + C11165) * C118) * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C290 +
           (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                 C118 +
             (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                 C51217) *
                C51484 +
            ((C11170 + C11171) * C118 + (C11172 + C11173) * C51217) * C51485 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C8259) *
               C51303 * C291) *
              C292 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C10923 * C294 + C51457 * C305 + C10924 * C964 + C51378 * C972) *
                 C118 +
             (C10923 * C304 + C51457 * C324 + C10924 * C973 + C51378 * C979) *
                 C51217) *
                C8259) *
               C51303 * C290 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C289 -
           (((C10924 * C1657 + C51378 * C1661 + C10923 * C319 + C51457 * C331) *
                 C51217 +
             (C10924 * C1649 + C51378 * C1656 + C10923 * C301 + C51457 * C318) *
                 C118) *
                C8259 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51485 +
            ((C11173 + C11172) * C51217 + (C11171 + C11170) * C118) * C51484) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C51488 -
           (C11534 * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C51489 +
           (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                 C118 +
             (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                 C51217) *
                C51484 +
            ((C11170 + C11171) * C118 + (C11172 + C11173) * C51217) * C51485 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C8259) *
               C51303 * C1415) *
              C51435 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C8259) *
               C51303 * C51489 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C51488 -
           (((C10924 * C1657 + C51378 * C1661 + C10923 * C319 + C51457 * C331) *
                 C51217 +
             (C10924 * C1649 + C51378 * C1656 + C10923 * C301 + C51457 * C318) *
                 C118) *
                C8259 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51485 +
            ((C11173 + C11172) * C51217 + (C11171 + C11170) * C118) * C51484) *
               C51303 * C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C797 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51444 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C798 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
            (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
               C51485 +
           C11701 * C8259) *
              C51303 * C51488 +
          (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                C798 -
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51444 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C797) +
            (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                C51281) *
               C51484 +
           ((C11912 + C11913) * C798 -
            ((C11166 + C11167) * C51444 + (C11168 + C11169) * C797) +
            (C11914 + C11915) * C51281) *
               C51485 +
           ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
            (C11918 + C11919) * C51281) *
               C8259) *
              C51303 * C51489 +
          (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                C797 +
            (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                C51444 -
            (C10924 * C2805 + C51378 * C2808 + C10923 * C1646 +
             C51457 * C1650) *
                C798 -
            (C10924 * C2809 + C51378 * C2814 + C10923 * C1651 +
             C51457 * C1658) *
                C51281) *
               C51484 +
           ((C11170 + C11171) * C797 + (C11172 + C11173) * C51444 -
            (C10924 * C2806 + C51378 * C2810 + C10923 * C1647 +
             C51457 * C1652) *
                C798 -
            (C10924 * C2811 + C51378 * C2815 + C10923 * C1653 +
             C51457 * C1659) *
                C51281) *
               C51485 +
           ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C798 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C8259) *
              C51303 * C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51484 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
           C10982 * C8259) *
              C51303 * C1180 -
          (C11534 * C8259 +
           ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
           ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                C51217 +
            (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                C118) *
               C51484) *
              C51303 * C1181 +
          (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                C118 +
            (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                C51217) *
               C51484 +
           ((C11170 + C11171) * C118 + (C11172 + C11173) * C51217) * C51485 +
           ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C8259) *
              C51303 * C1182 -
          (((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
             C51457 * C1198) *
                C51217 +
            (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
             C51457 * C1192) *
                C118) *
               C8259 +
           ((C10924 * C3355 + C51378 * C3359 + C10923 * C1193 +
             C51457 * C1199) *
                C51217 +
            (C10924 * C3350 + C51378 * C3354 + C10923 * C1187 +
             C51457 * C1194) *
                C118) *
               C51485 +
           ((C10924 * C3353 + C51378 * C3358 + C10923 * C1195 +
             C51457 * C1200) *
                C51217 +
            (C10924 * C3349 + C51378 * C3352 + C10923 * C1188 +
             C51457 * C1196) *
                C118) *
               C51484) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C1109 -
           (C11534 * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C51253) *
              C1111 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C8259) *
               C51303 * C51253 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C1109) *
              C1112 +
          ((C10982 * C51484 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51485 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51217) * C8259) *
               C51303 * C1109 -
           (((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C8259 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51485 +
            C11534 * C51484) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C483 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C480 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C484 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C481 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C485 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C482) *
               C51484 +
           ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
            (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
            (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
               C51485 +
           (C10974 * C483 + C10975 * C480 - C11683 * C484 - C11684 * C481 +
            (C11368 + C11369) * C485 + (C11370 + C11371) * C482) *
               C8259) *
              C51303 * C1109 +
          (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                C484 -
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C480 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C483) +
            (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                C481 -
            (C10924 * C4778 + C51378 * C4782 + C10923 * C1299 +
             C51457 * C1303) *
                C485 -
            (C10924 * C4783 + C51378 * C4790 + C10923 * C1304 +
             C51457 * C1311) *
                C482) *
               C51484 +
           ((C11912 + C11913) * C484 -
            ((C11166 + C11167) * C480 + (C11168 + C11169) * C483) +
            (C11914 + C11915) * C481 -
            (C10924 * C4779 + C51378 * C4784 + C10923 * C1300 +
             C51457 * C1305) *
                C485 -
            (C10924 * C4785 + C51378 * C4791 + C10923 * C1306 +
             C51457 * C1312) *
                C482) *
               C51485 +
           ((C11916 + C11917) * C484 - (C11518 * C480 + C11519 * C483) +
            (C11918 + C11919) * C481 -
            (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
             C51457 * C1307) *
                C485 -
            (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
             C51457 * C1313) *
                C482) *
               C8259) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51484 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51485 +
            C11701 * C8259) *
               C51303 * C1109 +
           (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                 C798 -
             ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                  C51444 +
              (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                  C797) +
             (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                 C51281) *
                C51484 +
            ((C11912 + C11913) * C798 -
             ((C11166 + C11167) * C51444 + (C11168 + C11169) * C797) +
             (C11914 + C11915) * C51281) *
                C51485 +
            ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
             (C11918 + C11919) * C51281) *
                C8259) *
               C51303 * C51253) *
              C51435 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C51484 +
            ((C11365 + C11364) * C798 -
             ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
             (C11367 + C11366) * C51281) *
                C51485 +
            ((C11696 + C11697) * C798 - (C10976 * C51444 + C10977 * C797) +
             (C11698 + C11699) * C51281) *
                C8259) *
               C51303 * C1109 +
           (((C11169 + C11168) * C797 + (C11167 + C11166) * C51444 -
             (C11913 + C11912) * C798 - (C11915 + C11914) * C51281) *
                C51484 +
            ((C11165 + C11164) * C797 + (C11163 + C11162) * C51444 -
             (C11917 + C11916) * C798 - (C11919 + C11918) * C51281) *
                C51485 +
            ((C11530 + C11531) * C797 + (C11532 + C11533) * C51444 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C798 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C8259) *
               C51303 * C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51484 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
            C10982 * C8259) *
               C51303 * C1109 -
           (C11534 * C8259 +
            ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51217 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C118) *
                C51484) *
               C51303 * C51253) *
              C1111 +
          ((((C11169 + C11168) * C118 + (C11167 + C11166) * C51217) * C51484 +
            ((C11165 + C11164) * C118 + (C11163 + C11162) * C51217) * C51485 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C8259) *
               C51303 * C51253 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51485 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51484) *
               C51303 * C1109) *
              C1112 +
          ((C10982 * C51484 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51485 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51217) * C8259) *
               C51303 * C1109 -
           (((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C8259 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51485 +
            C11534 * C51484) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51484 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51485 +
           C10982 * C8259) *
              C51303 * C1180 -
          (C11534 * C8259 +
           ((C11166 + C11167) * C51217 + (C11168 + C11169) * C118) * C51485 +
           ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                C51217 +
            (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                C118) *
               C51484) *
              C51303 * C1181 +
          (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                C118 +
            (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                C51217) *
               C51484 +
           ((C11170 + C11171) * C118 + (C11172 + C11173) * C51217) * C51485 +
           ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C8259) *
              C51303 * C1182 -
          (((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
             C51457 * C1198) *
                C51217 +
            (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
             C51457 * C1192) *
                C118) *
               C8259 +
           ((C10924 * C3355 + C51378 * C3359 + C10923 * C1193 +
             C51457 * C1199) *
                C51217 +
            (C10924 * C3350 + C51378 * C3354 + C10923 * C1187 +
             C51457 * C1194) *
                C118) *
               C51485 +
           ((C10924 * C3353 + C51378 * C3358 + C10923 * C1195 +
             C51457 * C1200) *
                C51217 +
            (C10924 * C3349 + C51378 * C3352 + C10923 * C1188 +
             C51457 * C1196) *
                C118) *
               C51484) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51484 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51485 +
            C12948 * C8259) *
               C51303 * C51443 +
           (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                 C1763 -
             ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                  C1760 +
              (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                  C1762) +
             (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                 C51281) *
                C51484 +
            ((C11912 + C11913) * C1763 -
             ((C11166 + C11167) * C1760 + (C11168 + C11169) * C1762) +
             (C11914 + C11915) * C51281) *
                C51485 +
            ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
             (C11918 + C11919) * C51281) *
                C8259) *
               C51303 * C51253) *
              C51435 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C51484 +
            ((C11365 + C11364) * C1763 -
             ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
             (C11367 + C11366) * C51281) *
                C51485 +
            ((C11696 + C11697) * C1763 - (C10976 * C1760 + C10977 * C1762) +
             (C11698 + C11699) * C51281) *
                C8259) *
               C51303 * C51443 +
           (((C11169 + C11168) * C1762 + (C11167 + C11166) * C1760 -
             (C11913 + C11912) * C1763 - (C11915 + C11914) * C51281) *
                C51484 +
            ((C11165 + C11164) * C1762 + (C11163 + C11162) * C1760 -
             (C11917 + C11916) * C1763 - (C11919 + C11918) * C51281) *
                C51485 +
            ((C11530 + C11531) * C1762 + (C11532 + C11533) * C1760 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C1763 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C8259) *
               C51303 * C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C2217 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51490 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C2218 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51491 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C2219 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C2216) *
               C51484 +
           ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
            (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
            (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
               C51485 +
           (C10974 * C2217 + C10975 * C51490 - C11683 * C2218 -
            C11684 * C51491 + (C11368 + C11369) * C2219 +
            (C11370 + C11371) * C2216) *
               C8259) *
              C51303 * C51443 +
          (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                C2218 -
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C51490 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C2217) +
            (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                C51491 -
            (C10924 * C4778 + C51378 * C4782 + C10923 * C1299 +
             C51457 * C1303) *
                C2219 -
            (C10924 * C4783 + C51378 * C4790 + C10923 * C1304 +
             C51457 * C1311) *
                C2216) *
               C51484 +
           ((C11912 + C11913) * C2218 -
            ((C11166 + C11167) * C51490 + (C11168 + C11169) * C2217) +
            (C11914 + C11915) * C51491 -
            (C10924 * C4779 + C51378 * C4784 + C10923 * C1300 +
             C51457 * C1305) *
                C2219 -
            (C10924 * C4785 + C51378 * C4791 + C10923 * C1306 +
             C51457 * C1312) *
                C2216) *
               C51485 +
           ((C11916 + C11917) * C2218 - (C11518 * C51490 + C11519 * C2217) +
            (C11918 + C11919) * C51491 -
            (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
             C51457 * C1307) *
                C2219 -
            (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
             C51457 * C1313) *
                C2216) *
               C8259) *
              C51303 * C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
            (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
               C51485 +
           C12948 * C8259) *
              C51303 * C289 +
          (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                C1763 -
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C1760 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C1762) +
            (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                C51281) *
               C51484 +
           ((C11912 + C11913) * C1763 -
            ((C11166 + C11167) * C1760 + (C11168 + C11169) * C1762) +
            (C11914 + C11915) * C51281) *
               C51485 +
           ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
            (C11918 + C11919) * C51281) *
               C8259) *
              C51303 * C290 +
          (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                C1762 +
            (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                C1760 -
            (C10924 * C2805 + C51378 * C2808 + C10923 * C1646 +
             C51457 * C1650) *
                C1763 -
            (C10924 * C2809 + C51378 * C2814 + C10923 * C1651 +
             C51457 * C1658) *
                C51281) *
               C51484 +
           ((C11170 + C11171) * C1762 + (C11172 + C11173) * C1760 -
            (C10924 * C2806 + C51378 * C2810 + C10923 * C1647 +
             C51457 * C1652) *
                C1763 -
            (C10924 * C2811 + C51378 * C2815 + C10923 * C1653 +
             C51457 * C1659) *
                C51281) *
               C51485 +
           ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C1763 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C8259) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
            (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
               C51485 +
           C12948 * C8259) *
              C51303 * C51202 * C1111 +
          (((C11357 + C11356) * C1763 -
            ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
            (C11359 + C11358) * C51281) *
               C51484 +
           ((C11365 + C11364) * C1763 -
            ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
            (C11367 + C11366) * C51281) *
               C51485 +
           ((C11696 + C11697) * C1763 - (C10976 * C1760 + C10977 * C1762) +
            (C11698 + C11699) * C51281) *
               C8259) *
              C51303 * C51202 * C1112 +
          (C12948 * C51484 +
           ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
            (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
               C51485 +
           ((C10970 + C10971) * C1762 + (C10972 + C10973) * C1760 -
            (C10924 * C495 + C51378 * C514 + C10923 * C494 + C51457 * C512) *
                C1763 -
            (C10924 * C515 + C51378 * C525 + C10923 * C513 + C51457 * C524) *
                C51281) *
               C8259) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
               C1954 +
           (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
               C1950 -
           (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
               C1955 -
           (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
               C1951 +
           (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
               C1956 +
           (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
               C1952 -
           (C10924 * C5799 + C51378 * C5802 + C10923 * C1958 + C51457 * C1962) *
               C1957 -
           (C10924 * C5803 + C51378 * C5808 + C10923 * C1963 + C51457 * C1970) *
               C1953) *
              C51484 +
          ((C10958 + C10959) * C1954 + (C10960 + C10961) * C1950 -
           (C11356 + C11357) * C1955 - (C11358 + C11359) * C1951 +
           (C11360 + C11361) * C1956 + (C11362 + C11363) * C1952 -
           (C10924 * C5800 + C51378 * C5804 + C10923 * C1959 + C51457 * C1964) *
               C1957 -
           (C10924 * C5805 + C51378 * C5809 + C10923 * C1965 + C51457 * C1971) *
               C1953) *
              C51485 +
          (C10974 * C1954 + C10975 * C1950 - C11683 * C1955 - C11684 * C1951 +
           (C11368 + C11369) * C1956 + (C11370 + C11371) * C1952 -
           (C10924 * C5801 + C51378 * C5806 + C10923 * C1960 + C51457 * C1966) *
               C1957 -
           (C10924 * C5807 + C51378 * C5810 + C10923 * C1967 + C51457 * C1972) *
               C1953) *
              C8259) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C2217 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51490 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C2218 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51491 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C2219 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C2216) *
               C51484 +
           ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
            (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
            (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
               C51485 +
           (C10974 * C2217 + C10975 * C51490 - C11683 * C2218 -
            C11684 * C51491 + (C11368 + C11369) * C2219 +
            (C11370 + C11371) * C2216) *
               C8259) *
              C51303 * C51202 * C51435 +
          (((C11357 + C11356) * C2218 -
            ((C10961 + C10960) * C51490 + (C10959 + C10958) * C2217) +
            (C11359 + C11358) * C51491 - (C11361 + C11360) * C2219 -
            (C11363 + C11362) * C2216) *
               C51484 +
           ((C11365 + C11364) * C2218 -
            ((C10965 + C10964) * C51490 + (C10963 + C10962) * C2217) +
            (C11367 + C11366) * C51491 - (C11369 + C11368) * C2219 -
            (C11371 + C11370) * C2216) *
               C51485 +
           ((C11696 + C11697) * C2218 - (C10976 * C51490 + C10977 * C2217) +
            (C11698 + C11699) * C51491 -
            (C10924 * C1961 + C51378 * C1968 + C10923 * C493 + C51457 * C510) *
                C2219 -
            (C10924 * C1969 + C51378 * C1973 + C10923 * C511 + C51457 * C523) *
                C2216) *
               C8259) *
              C51303 * C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
            (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
               C51485 +
           C12948 * C8259) *
              C51303 * C51202 * C1111 +
          (((C11357 + C11356) * C1763 -
            ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
            (C11359 + C11358) * C51281) *
               C51484 +
           ((C11365 + C11364) * C1763 -
            ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
            (C11367 + C11366) * C51281) *
               C51485 +
           ((C11696 + C11697) * C1763 - (C10976 * C1760 + C10977 * C1762) +
            (C11698 + C11699) * C51281) *
               C8259) *
              C51303 * C51202 * C1112 +
          (C12948 * C51484 +
           ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
            (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
               C51485 +
           ((C10970 + C10971) * C1762 + (C10972 + C10973) * C1760 -
            (C10924 * C495 + C51378 * C514 + C10923 * C494 + C51457 * C512) *
                C1763 -
            (C10924 * C515 + C51378 * C525 + C10923 * C513 + C51457 * C524) *
                C51281) *
               C8259) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51484 +
           ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
            (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
               C51485 +
           C12948 * C8259) *
              C51303 * C289 +
          (((C10923 * C961 + C51457 * C966 + C10924 * C1299 + C51378 * C1303) *
                C1763 -
            ((C10924 * C967 + C51378 * C976 + C10923 * C310 + C51457 * C327) *
                 C1760 +
             (C10924 * C961 + C51378 * C966 + C10923 * C297 + C51457 * C311) *
                 C1762) +
            (C10923 * C967 + C51457 * C976 + C10924 * C1304 + C51378 * C1311) *
                C51281) *
               C51484 +
           ((C11912 + C11913) * C1763 -
            ((C11166 + C11167) * C1760 + (C11168 + C11169) * C1762) +
            (C11914 + C11915) * C51281) *
               C51485 +
           ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
            (C11918 + C11919) * C51281) *
               C8259) *
              C51303 * C290 +
          (((C10923 * C298 + C51457 * C312 + C10924 * C1646 + C51378 * C1650) *
                C1762 +
            (C10923 * C313 + C51457 * C328 + C10924 * C1651 + C51378 * C1658) *
                C1760 -
            (C10924 * C2805 + C51378 * C2808 + C10923 * C1646 +
             C51457 * C1650) *
                C1763 -
            (C10924 * C2809 + C51378 * C2814 + C10923 * C1651 +
             C51457 * C1658) *
                C51281) *
               C51484 +
           ((C11170 + C11171) * C1762 + (C11172 + C11173) * C1760 -
            (C10924 * C2806 + C51378 * C2810 + C10923 * C1647 +
             C51457 * C1652) *
                C1763 -
            (C10924 * C2811 + C51378 * C2815 + C10923 * C1653 +
             C51457 * C1659) *
                C51281) *
               C51485 +
           ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C1763 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C8259) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C51314 * C126) * C118 +
                     (C117 * C127 + C51314 * C140) * C51217) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C51303 * C51443 -
                   (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C51314 * C327) * C51217 +
                     (C117 * C297 + C51314 * C311) * C118) *
                        C107) *
                       C51303 * C51253) *
                      C51486 +
                  (((C376 + C375) * C107 + (C374 + C373) * C108 +
                    (C372 + C371) * C109 + (C696 + C697) * C110) *
                       C51303 * C51253 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C51303 * C51443) *
                      C51487 +
                  ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                    (C186 + C187) * C110) *
                       C51303 * C51443 -
                   (((C117 * C684 + C51314 * C686) * C51217 +
                     (C117 * C683 + C51314 * C685) * C118) *
                        C110 +
                    (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
                       C51303 * C51253) *
                      C682)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C51314 * C126) * C118 +
                      (C117 * C127 + C51314 * C140) * C51217) *
                         C2434 +
                     (C178 + C179) * C51167) *
                        C2436 +
                    ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
                    C2659 * C2438) *
                       C51443 -
                   ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
                    (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
                    (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
                       C51253) *
                      C51486 +
                  (((C2602 * C2434 + C2994 * C51167) * C2436 +
                    (C2607 * C2434 + C2995 * C51167) * C2437 +
                    (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
                       C51253 -
                   (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
                    ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
                       C51443) *
                      C51487 +
                  (((C188 * C2434 + C189 * C51167) * C2436 +
                    (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
                    (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
                       C51443 -
                   ((((C117 * C1189 + C51314 * C1197) * C51217 +
                      (C117 * C1185 + C51314 * C1190) * C118) *
                         C51167 +
                     (C2653 + C2652) * C2434) *
                        C2438 +
                    ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
                    (C688 * C51167 + C689 * C2434) * C2436) *
                       C51253) *
                      C682)) /
                    (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
               C51303 * C51443 +
           (((C117 * C961 + C51314 * C966) * C798 -
             ((C117 * C310 + C51314 * C327) * C51444 +
              (C117 * C297 + C51314 * C311) * C797) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C51303 * C51253) *
              C292 +
          (((C806 - (C805 + C804) + C807) * C107 +
            (C810 - (C809 + C808) + C811) * C108 +
            (C814 - (C813 + C812) + C815) * C109 +
            (C828 - (C818 + C819) + C829) * C110) *
               C51303 * C51443 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C694 * C797 + C695 * C51444 -
             (C117 * C965 + C51314 * C974) * C798 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C804 + C805 - C806 - C807) * C51167) *
                C2436 +
            ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
            ((C3369 + C3370 - C3397 - C3398) * C2434 + C3399 * C51167) *
                C2438) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
                C2436 +
            ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
                C2437 +
            (((C117 * C3349 + C51314 * C3352) * C798 -
              (C2634 * C51444 + C2635 * C797) +
              (C117 * C3353 + C51314 * C3358) * C51281) *
                 C2434 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C2438) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C2434 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C2436 +
            (C3400 * C2434 + (C1008 - (C990 + C991) + C1009) * C51167) * C2437 +
            (C3401 * C2434 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C2438) *
               C51443 +
           ((C3396 * C2434 + (C991 + C990 - C1008 - C1009) * C51167) * C2436 +
            (C3399 * C2434 + (C3149 + C3148 - C3154 - C3155) * C51167) * C2437 +
            ((C3381 + C3380 - C3402 - C3403) * C2434 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C290 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C51303 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C51314 * C320) * C118 +
             (C117 * C321 + C51314 * C332) * C51217) *
                C110) *
               C51303 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C289 -
           (((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C51202 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51303 * C51202 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51303 * C51202 * C115 -
          (((C117 * C138 + C51314 * C146) * C51217 +
            (C117 * C125 + C51314 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C107 +
           (C527 + C528 - C569 - C570 + C571 + C572) * C108 +
           (C537 + C538 - C573 - C574 + C575 + C576) * C109 +
           (C547 + C548 - C577 - C578 + C579 + C580) * C110) *
              C51303 * C51202 * C292 +
          ((C569 - (C528 + C527) + C570 - C571 - C572) * C107 +
           (C573 - (C538 + C537) + C574 - C575 - C576) * C108 +
           (C577 - (C548 + C547) + C578 - C579 - C580) * C109 +
           ((C117 * C494 + C51314 * C512) * C484 - (C174 * C480 + C175 * C483) +
            (C117 * C513 + C51314 * C524) * C481 -
            (C117 * C495 + C51314 * C514) * C485 -
            (C117 * C515 + C51314 * C525) * C482) *
               C110) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           (((C117 * C297 + C51314 * C311) * C118 +
             (C117 * C310 + C51314 * C327) * C51217) *
                C2434 +
            (C376 + C375) * C51167) *
               C2437 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C2434 +
            (C377 + C378) * C51167) *
               C2438) *
              C51202 * C113 -
          (((C380 + C379) * C51167 + (C378 + C377) * C2434) * C2438 +
           (C689 * C51167 + (C375 + C376) * C2434) * C2437 +
           ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
              C51202 * C114 +
          ((C188 * C2434 + C189 * C51167) * C2436 +
           ((C374 + C373) * C2434 + (C372 + C371) * C51167) * C2437 +
           ((C379 + C380) * C2434 + (C381 + C382) * C51167) * C2438) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C2434) *
               C2438 +
           ((C697 + C696) * C51167 + C688 * C2434) * C2437 +
           (C190 * C51167 + C191 * C2434) * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C289 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C290 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            (((C117 * C2585 + C51314 * C2588) * C118 +
              (C117 * C2589 + C51314 * C2594) * C51217) *
                 C2434 +
             (C2650 + C2651) * C51167) *
                C2438) *
               C291) *
              C292 +
          (((C2602 * C2434 + (C374 + C373) * C51167) * C2436 +
            (C2607 * C2434 + (C379 + C380) * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C290 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C2434 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C2436 +
           ((C2627 * C483 + C2628 * C480 -
             (C117 * C961 + C51314 * C966) * C484 -
             (C117 * C967 + C51314 * C976) * C481 +
             (C117 * C1299 + C51314 * C1303) * C485 +
             (C117 * C1304 + C51314 * C1311) * C482) *
                C2434 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C2437 +
           ((C2629 * C483 + C2630 * C480 -
             (C117 * C1646 + C51314 * C1650) * C484 -
             (C117 * C1651 + C51314 * C1658) * C481 +
             (C117 * C2805 + C51314 * C2808) * C485 +
             (C117 * C2809 + C51314 * C2814) * C482) *
                C2434 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C2438) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C2434 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C51167) *
               C2436 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C2434 +
            (C1002 * C484 - (C361 * C480 + C362 * C483) + C1003 * C481 -
             (C117 * C1301 + C51314 * C1307) * C485 -
             (C117 * C1308 + C51314 * C1313) * C482) *
                C51167) *
               C2437 +
           ((C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C2434 +
            ((C117 * C1648 + C51314 * C1654) * C484 -
             (C368 * C480 + C367 * C483) +
             (C117 * C1655 + C51314 * C1660) * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C51167) *
               C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
              C51303 * C51202 * C51486 +
          ((C806 - (C805 + C804) + C807) * C107 +
           (C810 - (C809 + C808) + C811) * C108 +
           (C814 - (C813 + C812) + C815) * C109 +
           (C828 - (C818 + C819) + C829) * C110) *
              C51303 * C51202 * C51487 +
          (C830 * C107 + C831 * C108 + (C819 + C818 - C828 - C829) * C109 +
           (C176 * C797 + C177 * C51444 - (C117 * C799 + C51314 * C800) * C798 -
            (C117 * C801 + C51314 * C802) * C51281) *
               C110) *
              C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C804 + C805 - C806 - C807) * C51167) *
               C2436 +
           ((C2627 * C797 + C2628 * C51444 -
             (C117 * C961 + C51314 * C966) * C798 -
             (C117 * C967 + C51314 * C976) * C51281) *
                C2434 +
            (C985 + C984 - C1006 - C1007) * C51167) *
               C2437 +
           ((C2629 * C797 + C2630 * C51444 -
             (C117 * C1646 + C51314 * C1650) * C798 -
             (C117 * C1651 + C51314 * C1658) * C51281) *
                C2434 +
            (C3142 + C3143 - C3144 - C3145) * C51167) *
               C2438) *
              C51202 * C51486 +
          (((C806 - (C805 + C804) + C807) * C2434 +
            (C810 - (C809 + C808) + C811) * C51167) *
               C2436 +
           ((C1006 - (C984 + C985) + C1007) * C2434 +
            (C1008 - (C990 + C991) + C1009) * C51167) *
               C2437 +
           ((C3144 - (C3143 + C3142) + C3145) * C2434 +
            (C3154 - (C3148 + C3149) + C3155) * C51167) *
               C2438) *
              C51202 * C51487 +
          ((C830 * C2434 + C831 * C51167) * C2436 +
           ((C991 + C990 - C1008 - C1009) * C2434 +
            (C997 + C996 - C1010 - C1011) * C51167) *
               C2437 +
           ((C3149 + C3148 - C3154 - C3155) * C2434 +
            (C369 * C797 + C370 * C51444 -
             (C117 * C1649 + C51314 * C1656) * C798 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C51202 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51303 * C51202 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51303 * C51202 * C115 -
          (((C117 * C138 + C51314 * C146) * C51217 +
            (C117 * C125 + C51314 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C290 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C51303 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C51314 * C320) * C118 +
             (C117 * C321 + C51314 * C332) * C51217) *
                C110) *
               C51303 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C289 -
           (((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           (((C117 * C297 + C51314 * C311) * C118 +
             (C117 * C310 + C51314 * C327) * C51217) *
                C2434 +
            (C376 + C375) * C51167) *
               C2437 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C2434 +
            (C377 + C378) * C51167) *
               C2438) *
              C51202 * C113 -
          (((C380 + C379) * C51167 + (C378 + C377) * C2434) * C2438 +
           (C689 * C51167 + (C375 + C376) * C2434) * C2437 +
           ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
              C51202 * C114 +
          ((C188 * C2434 + C189 * C51167) * C2436 +
           ((C374 + C373) * C2434 + (C372 + C371) * C51167) * C2437 +
           ((C379 + C380) * C2434 + (C381 + C382) * C51167) * C2438) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C2434) *
               C2438 +
           ((C697 + C696) * C51167 + C688 * C2434) * C2437 +
           (C190 * C51167 + C191 * C2434) * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C289 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C290 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            (((C117 * C2585 + C51314 * C2588) * C118 +
              (C117 * C2589 + C51314 * C2594) * C51217) *
                 C2434 +
             (C2650 + C2651) * C51167) *
                C2438) *
               C291) *
              C292 +
          (((C2602 * C2434 + (C374 + C373) * C51167) * C2436 +
            (C2607 * C2434 + (C379 + C380) * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C290 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C51488 -
           (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C51489 +
           (((C117 * C298 + C51314 * C312) * C118 +
             (C117 * C313 + C51314 * C328) * C51217) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C51303 * C1415) *
              C51435 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C696 + C697) * C110) *
               C51303 * C51489 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C51488 -
           (((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C51488 -
           (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51489 +
           (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
            ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
               C1415) *
              C51435 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51489 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C51488 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C2434) *
                C2438 +
            ((C2653 + C2652) * C51167 + C2656 * C2434) * C2437 +
            C2654 * C2436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
              C51303 * C51488 +
          (((C117 * C961 + C51314 * C966) * C798 -
            ((C117 * C310 + C51314 * C327) * C51444 +
             (C117 * C297 + C51314 * C311) * C797) +
            (C117 * C967 + C51314 * C976) * C51281) *
               C107 +
           (C1006 - (C984 + C985) + C1007) * C108 +
           (C1008 - (C990 + C991) + C1009) * C109 +
           (C1010 - (C996 + C997) + C1011) * C110) *
              C51303 * C51489 +
          (((C117 * C298 + C51314 * C312) * C797 +
            (C117 * C313 + C51314 * C328) * C51444 -
            (C117 * C1646 + C51314 * C1650) * C798 -
            (C117 * C1651 + C51314 * C1658) * C51281) *
               C107 +
           (C365 * C797 + C366 * C51444 -
            (C117 * C1647 + C51314 * C1652) * C798 -
            (C117 * C1653 + C51314 * C1659) * C51281) *
               C108 +
           (C367 * C797 + C368 * C51444 -
            (C117 * C1648 + C51314 * C1654) * C798 -
            (C117 * C1655 + C51314 * C1660) * C51281) *
               C109 +
           (C369 * C797 + C370 * C51444 -
            (C117 * C1649 + C51314 * C1656) * C798 -
            (C117 * C1657 + C51314 * C1661) * C51281) *
               C110) *
              C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C804 + C805 - C806 - C807) * C51167) *
               C2436 +
           ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
           C4355 * C2438) *
              C51488 +
          (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
               C2436 +
           ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
               C2437 +
           ((C4352 - (C4344 + C4345) + C4353) * C2434 +
            (C3402 - (C3380 + C3381) + C3403) * C51167) *
               C2438) *
              C51489 +
          (C4355 * C2436 +
           ((C4345 + C4344 - C4352 - C4353) * C2434 +
            (C3381 + C3380 - C3402 - C3403) * C51167) *
               C2437 +
           ((C3663 * C797 + C3664 * C51444 -
             (C117 * C4331 + C51314 * C4333) * C798 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C1180 -
          (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C51314 * C327) * C51217 +
            (C117 * C297 + C51314 * C311) * C118) *
               C107) *
              C51303 * C1181 +
          (((C117 * C298 + C51314 * C312) * C118 +
            (C117 * C313 + C51314 * C328) * C51217) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C51303 * C1182 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C110 +
           ((C117 * C1191 + C51314 * C1198) * C51217 +
            (C117 * C1186 + C51314 * C1192) * C118) *
               C109 +
           ((C117 * C1193 + C51314 * C1199) * C51217 +
            (C117 * C1187 + C51314 * C1194) * C118) *
               C108 +
           ((C117 * C1195 + C51314 * C1200) * C51217 +
            (C117 * C1188 + C51314 * C1196) * C118) *
               C107) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C1109 -
           (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C51253) *
              C1111 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C696 + C697) * C110) *
               C51303 * C51253 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C1109) *
              C1112 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51303 * C1109 -
           (((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C110 +
            (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C107 +
           (C527 + C528 - C569 - C570 + C571 + C572) * C108 +
           (C537 + C538 - C573 - C574 + C575 + C576) * C109 +
           (C547 + C548 - C577 - C578 + C579 + C580) * C110) *
              C51303 * C1109 +
          (((C117 * C961 + C51314 * C966) * C484 -
            ((C117 * C310 + C51314 * C327) * C480 +
             (C117 * C297 + C51314 * C311) * C483) +
            (C117 * C967 + C51314 * C976) * C481 -
            (C117 * C1299 + C51314 * C1303) * C485 -
            (C117 * C1304 + C51314 * C1311) * C482) *
               C107 +
           (C1000 * C484 - (C363 * C480 + C364 * C483) + C1001 * C481 -
            (C117 * C1300 + C51314 * C1305) * C485 -
            (C117 * C1306 + C51314 * C1312) * C482) *
               C108 +
           (C1002 * C484 - (C361 * C480 + C362 * C483) + C1003 * C481 -
            (C117 * C1301 + C51314 * C1307) * C485 -
            (C117 * C1308 + C51314 * C1313) * C482) *
               C109 +
           (C1004 * C484 - (C359 * C480 + C360 * C483) + C1005 * C481 -
            (C117 * C1302 + C51314 * C1309) * C485 -
            (C117 * C1310 + C51314 * C1314) * C482) *
               C110) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C1109 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51253) *
              C1111 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51253 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C1109) *
              C1112 +
          (((C188 * C2434 + C189 * C51167) * C2436 +
            (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
            (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C2434) *
                C2438 +
            ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
            (C688 * C51167 + C689 * C2434) * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 + C2659 * C2438) *
              C1180 -
          (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
           (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
              C1181 +
          (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
           ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            ((C117 * C3651 + C51314 * C3654) * C51217 +
             (C117 * C3648 + C51314 * C3652) * C118) *
                C2434) *
               C2438 +
           ((C2651 + C2650) * C51167 + (C3667 + C3666) * C2434) * C2437 +
           C3665 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C2434 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C2436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C2434 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C2437 +
           ((C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C2434 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C2438) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C2434 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51167) *
               C2436 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C2434 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51167) *
               C2437 +
           (((C117 * C3349 + C51314 * C3352) * C484 -
             (C2634 * C480 + C2635 * C483) +
             (C117 * C3353 + C51314 * C3358) * C481 -
             (C117 * C3813 + C51314 * C3815) * C485 -
             (C117 * C3816 + C51314 * C3819) * C482) *
                C2434 +
            (C3392 * C484 - (C2632 * C480 + C2633 * C483) + C3393 * C481 -
             (C117 * C3814 + C51314 * C3817) * C485 -
             (C117 * C3818 + C51314 * C3820) * C482) *
                C51167) *
               C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C804 + C805 - C806 - C807) * C108 + C830 * C109 + C831 * C110) *
               C51303 * C1109 +
           (((C117 * C961 + C51314 * C966) * C798 -
             ((C117 * C310 + C51314 * C327) * C51444 +
              (C117 * C297 + C51314 * C311) * C797) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C1006 - (C984 + C985) + C1007) * C108 +
            (C1008 - (C990 + C991) + C1009) * C109 +
            (C1010 - (C996 + C997) + C1011) * C110) *
               C51303 * C51253) *
              C51435 +
          (((C806 - (C805 + C804) + C807) * C107 +
            (C810 - (C809 + C808) + C811) * C108 +
            (C814 - (C813 + C812) + C815) * C109 +
            (C828 - (C818 + C819) + C829) * C110) *
               C51303 * C1109 +
           ((C985 + C984 - C1006 - C1007) * C107 +
            (C991 + C990 - C1008 - C1009) * C108 +
            (C997 + C996 - C1010 - C1011) * C109 +
            (C694 * C797 + C695 * C51444 -
             (C117 * C965 + C51314 * C974) * C798 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C804 + C805 - C806 - C807) * C51167) *
                C2436 +
            ((C3362 + C3363 - C3394 - C3395) * C2434 + C3396 * C51167) * C2437 +
            ((C3369 + C3370 - C3397 - C3398) * C2434 + C3399 * C51167) *
                C2438) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C2434 + C3400 * C51167) *
                C2436 +
            ((C3397 - (C3370 + C3369) + C3398) * C2434 + C3401 * C51167) *
                C2437 +
            (((C117 * C3349 + C51314 * C3352) * C798 -
              (C2634 * C51444 + C2635 * C797) +
              (C117 * C3353 + C51314 * C3358) * C51281) *
                 C2434 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C2438) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C2434 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C2436 +
            (C3400 * C2434 + (C1008 - (C990 + C991) + C1009) * C51167) * C2437 +
            (C3401 * C2434 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C2438) *
               C1109 +
           ((C3396 * C2434 + (C991 + C990 - C1008 - C1009) * C51167) * C2436 +
            (C3399 * C2434 + (C3149 + C3148 - C3154 - C3155) * C51167) * C2437 +
            ((C3381 + C3380 - C3402 - C3403) * C2434 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51303 * C1109 -
           (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C51314 * C327) * C51217 +
             (C117 * C297 + C51314 * C311) * C118) *
                C107) *
               C51303 * C51253) *
              C1111 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C696 + C697) * C110) *
               C51303 * C51253 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51303 * C1109) *
              C1112 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51303 * C1109 -
           (((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C110 +
            (C697 + C696) * C109 + C688 * C108 + C689 * C107) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51303 * C1180 -
          (C688 * C110 + C689 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C51314 * C327) * C51217 +
            (C117 * C297 + C51314 * C311) * C118) *
               C107) *
              C51303 * C1181 +
          (((C117 * C298 + C51314 * C312) * C118 +
            (C117 * C313 + C51314 * C328) * C51217) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C51303 * C1182 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C110 +
           ((C117 * C1191 + C51314 * C1198) * C51217 +
            (C117 * C1186 + C51314 * C1192) * C118) *
               C109 +
           ((C117 * C1193 + C51314 * C1199) * C51217 +
            (C117 * C1187 + C51314 * C1194) * C118) *
               C108 +
           ((C117 * C1195 + C51314 * C1200) * C51217 +
            (C117 * C1188 + C51314 * C1196) * C118) *
               C107) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C2434 +
             (C178 + C179) * C51167) *
                C2436 +
            ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 +
            C2659 * C2438) *
               C1109 -
           ((C2656 * C51167 + (C2648 + C2649) * C2434) * C2438 +
            (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
            (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
               C51253) *
              C1111 +
          (((C2602 * C2434 + C2994 * C51167) * C2436 +
            (C2607 * C2434 + C2995 * C51167) * C2437 +
            (C2657 * C2434 + (C2652 + C2653) * C51167) * C2438) *
               C51253 -
           (C2654 * C2438 + (C689 * C51167 + C2617 * C2434) * C2437 +
            ((C181 + C180) * C51167 + (C179 + C178) * C2434) * C2436) *
               C1109) *
              C1112 +
          (((C188 * C2434 + C189 * C51167) * C2436 +
            (C2994 * C2434 + (C372 + C371) * C51167) * C2437 +
            (C2995 * C2434 + (C381 + C382) * C51167) * C2438) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C2434) *
                C2438 +
            ((C382 + C381) * C51167 + C2626 * C2434) * C2437 +
            (C688 * C51167 + C689 * C2434) * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C2434 +
            (C178 + C179) * C51167) *
               C2436 +
           ((C2642 + C2643) * C2434 + C2602 * C51167) * C2437 + C2659 * C2438) *
              C1180 -
          (C3665 * C2438 + (C2616 * C51167 + (C2645 + C2644) * C2434) * C2437 +
           (C2617 * C51167 + (C2643 + C2642) * C2434) * C2436) *
              C1181 +
          (C2659 * C2436 + ((C2649 + C2648) * C2434 + C2657 * C51167) * C2437 +
           ((C3666 + C3667) * C2434 + (C2650 + C2651) * C51167) * C2438) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            ((C117 * C3651 + C51314 * C3654) * C51217 +
             (C117 * C3648 + C51314 * C3652) * C118) *
                C2434) *
               C2438 +
           ((C2651 + C2650) * C51167 + (C3667 + C3666) * C2434) * C2437 +
           C3665 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C107 +
            (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
            C1786 * C110) *
               C51303 * C51443 +
           (((C117 * C961 + C51314 * C966) * C1763 -
             ((C117 * C310 + C51314 * C327) * C1760 +
              (C117 * C297 + C51314 * C311) * C1762) +
             (C117 * C967 + C51314 * C976) * C51281) *
                C107 +
            (C2105 - (C2106 + C2107) + C2108) * C108 +
            (C2109 - (C2110 + C2111) + C2112) * C109 +
            (C2113 - (C2114 + C2115) + C2116) * C110) *
               C51303 * C51253) *
              C51435 +
          (((C1767 - (C1766 + C1765) + C1768) * C107 +
            (C1771 - (C1770 + C1769) + C1772) * C108 +
            (C1775 - (C1774 + C1773) + C1776) * C109 +
            (C1777 - (C1778 + C1779) + C1780) * C110) *
               C51303 * C51443 +
           ((C2107 + C2106 - C2105 - C2108) * C107 +
            (C2111 + C2110 - C2109 - C2112) * C108 +
            (C2115 + C2114 - C2113 - C2116) * C109 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C110) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C2434 +
             (C1765 + C1766 - C1767 - C1768) * C51167) *
                C2436 +
            ((C4656 + C4657 - C4658 - C4659) * C2434 + C4995 * C51167) * C2437 +
            C4680 * C2438) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C2434 + C4996 * C51167) *
                C2436 +
            ((C4662 - (C4661 + C4660) + C4663) * C2434 + C4997 * C51167) *
                C2437 +
            ((C4665 - (C4666 + C4667) + C4668) * C2434 +
             (C4669 - (C4670 + C4671) + C4672) * C51167) *
                C2438) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C2434 +
             (C1771 - (C1770 + C1769) + C1772) * C51167) *
                C2436 +
            (C4996 * C2434 + (C2109 - (C2110 + C2111) + C2112) * C51167) *
                C2437 +
            (C4997 * C2434 + (C4506 - (C4507 + C4508) + C4509) * C51167) *
                C2438) *
               C51443 +
           ((C4995 * C2434 + (C2111 + C2110 - C2109 - C2112) * C51167) * C2436 +
            (C4676 * C2434 + (C4508 + C4507 - C4506 - C4509) * C51167) * C2437 +
            ((C4671 + C4670 - C4669 - C4672) * C2434 +
             (C2638 * C1762 + C2639 * C1760 -
              (C117 * C3351 + C51314 * C3356) * C1763 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C107 +
           (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C108 +
           (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C109 +
           (C2233 + C2234 - C2235 - C2236 + C2237 + C2238) * C110) *
              C51303 * C51443 +
          (((C117 * C961 + C51314 * C966) * C2218 -
            ((C117 * C310 + C51314 * C327) * C51490 +
             (C117 * C297 + C51314 * C311) * C2217) +
            (C117 * C967 + C51314 * C976) * C51491 -
            (C117 * C1299 + C51314 * C1303) * C2219 -
            (C117 * C1304 + C51314 * C1311) * C2216) *
               C107 +
           (C1000 * C2218 - (C363 * C51490 + C364 * C2217) + C1001 * C51491 -
            (C117 * C1300 + C51314 * C1305) * C2219 -
            (C117 * C1306 + C51314 * C1312) * C2216) *
               C108 +
           (C1002 * C2218 - (C361 * C51490 + C362 * C2217) + C1003 * C51491 -
            (C117 * C1301 + C51314 * C1307) * C2219 -
            (C117 * C1308 + C51314 * C1313) * C2216) *
               C109 +
           (C1004 * C2218 - (C359 * C51490 + C360 * C2217) + C1005 * C51491 -
            (C117 * C1302 + C51314 * C1309) * C2219 -
            (C117 * C1310 + C51314 * C1314) * C2216) *
               C110) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C2434 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C2436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C2434 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C2437 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C2434 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C2438) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C2434 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51167) *
               C2436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C2434 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51167) *
               C2437 +
           ((C4349 * C2218 - (C2634 * C51490 + C2635 * C2217) + C4350 * C51491 -
             (C117 * C3813 + C51314 * C3815) * C2219 -
             (C117 * C3816 + C51314 * C3819) * C2216) *
                C2434 +
            (C3392 * C2218 - (C2632 * C51490 + C2633 * C2217) + C3393 * C51491 -
             (C117 * C3814 + C51314 * C3817) * C2219 -
             (C117 * C3818 + C51314 * C3820) * C2216) *
                C51167) *
               C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C289 +
          (((C117 * C961 + C51314 * C966) * C1763 -
            ((C117 * C310 + C51314 * C327) * C1760 +
             (C117 * C297 + C51314 * C311) * C1762) +
            (C117 * C967 + C51314 * C976) * C51281) *
               C107 +
           (C1000 * C1763 - (C363 * C1760 + C364 * C1762) + C1001 * C51281) *
               C108 +
           (C1002 * C1763 - (C361 * C1760 + C362 * C1762) + C1003 * C51281) *
               C109 +
           (C1004 * C1763 - (C359 * C1760 + C360 * C1762) + C1005 * C51281) *
               C110) *
              C51303 * C290 +
          (((C117 * C298 + C51314 * C312) * C1762 +
            (C117 * C313 + C51314 * C328) * C1760 -
            (C117 * C1646 + C51314 * C1650) * C1763 -
            (C117 * C1651 + C51314 * C1658) * C51281) *
               C107 +
           (C365 * C1762 + C366 * C1760 -
            (C117 * C1647 + C51314 * C1652) * C1763 -
            (C117 * C1653 + C51314 * C1659) * C51281) *
               C108 +
           (C367 * C1762 + C368 * C1760 -
            (C117 * C1648 + C51314 * C1654) * C1763 -
            (C117 * C1655 + C51314 * C1660) * C51281) *
               C109 +
           (C369 * C1762 + C370 * C1760 -
            (C117 * C1649 + C51314 * C1656) * C1763 -
            (C117 * C1657 + C51314 * C1661) * C51281) *
               C110) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C107 +
           (C1771 - (C1770 + C1769) + C1772) * C108 +
           (C1775 - (C1774 + C1773) + C1776) * C109 +
           (C1777 - (C1778 + C1779) + C1780) * C110) *
              C51303 * C51202 * C1112 +
          (C1785 * C107 + C1786 * C108 +
           (C1779 + C1778 - C1777 - C1780) * C109 +
           (C176 * C1762 + C177 * C1760 -
            (C117 * C799 + C51314 * C800) * C1763 -
            (C117 * C801 + C51314 * C802) * C51281) *
               C110) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51314 * C126) * C1954 +
           (C117 * C127 + C51314 * C140) * C1950 -
           (C117 * C486 + C51314 * C496) * C1955 -
           (C117 * C497 + C51314 * C516) * C1951 +
           (C117 * C487 + C51314 * C498) * C1956 +
           (C117 * C499 + C51314 * C517) * C1952 -
           (C117 * C1958 + C51314 * C1962) * C1957 -
           (C117 * C1963 + C51314 * C1970) * C1953) *
              C107 +
          (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
           C559 * C1956 + C560 * C1952 -
           (C117 * C1959 + C51314 * C1964) * C1957 -
           (C117 * C1965 + C51314 * C1971) * C1953) *
              C108 +
          (C170 * C1954 + C171 * C1950 - C561 * C1955 - C562 * C1951 +
           C563 * C1956 + C564 * C1952 -
           (C117 * C1960 + C51314 * C1966) * C1957 -
           (C117 * C1967 + C51314 * C1972) * C1953) *
              C109 +
          (C172 * C1954 + C173 * C1950 - C565 * C1955 - C566 * C1951 +
           C567 * C1956 + C568 * C1952 -
           (C117 * C1961 + C51314 * C1968) * C1957 -
           (C117 * C1969 + C51314 * C1973) * C1953) *
              C110) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C2627 * C1762 + C2628 * C1760 - C3384 * C1763 - C3385 * C51281) *
                C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           ((C2629 * C1762 + C2630 * C1760 - C3387 * C1763 - C3388 * C51281) *
                C2434 +
            (C4502 + C4503 - C4504 - C4505) * C51167) *
               C2438) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C2434 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C2436 +
           ((C2105 - (C2106 + C2107) + C2108) * C2434 +
            (C2109 - (C2110 + C2111) + C2112) * C51167) *
               C2437 +
           ((C4504 - (C4503 + C4502) + C4505) * C2434 +
            (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C2438) *
              C51202 * C1112 +
          ((C1785 * C2434 + C1786 * C51167) * C2436 +
           ((C2111 + C2110 - C2109 - C2112) * C2434 +
            (C2115 + C2114 - C2113 - C2116) * C51167) *
               C2437 +
           ((C4508 + C4507 - C4506 - C4509) * C2434 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C4656 + C4657 - C4658 - C4659) * C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           C4680 * C2438) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C2434 +
            (C2105 - (C2106 + C2107) + C2108) * C51167) *
               C2436 +
           ((C4662 - (C4661 + C4660) + C4663) * C2434 +
            (C4504 - (C4503 + C4502) + C4505) * C51167) *
               C2437 +
           ((C4665 - (C4666 + C4667) + C4668) * C2434 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C2438) *
              C290 +
          (C4680 * C2436 +
           ((C4667 + C4666 - C4665 - C4668) * C2434 +
            (C4671 + C4670 - C4669 - C4672) * C51167) *
               C2437 +
           ((C3663 * C1762 + C3664 * C1760 -
             (C117 * C4331 + C51314 * C4333) * C1763 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C2434 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C51167) *
              C2436 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C2434 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C51167) *
              C2437 +
          ((C2629 * C1954 + C2630 * C1950 - C3387 * C1955 - C3388 * C1951 +
            C3840 * C1956 + C3841 * C1952 -
            (C117 * C4780 + C51314 * C4786) * C1957 -
            (C117 * C4787 + C51314 * C4792) * C1953) *
               C2434 +
           (C365 * C1954 + C366 * C1950 - C2838 * C1955 - C2839 * C1951 +
            C2840 * C1956 + C2841 * C1952 -
            (C117 * C4781 + C51314 * C4788) * C1957 -
            (C117 * C4789 + C51314 * C4793) * C1953) *
               C51167) *
              C2438) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C107 +
           (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C108 +
           (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C109 +
           (C2233 + C2234 - C2235 - C2236 + C2237 + C2238) * C110) *
              C51303 * C51202 * C51435 +
          ((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C107 +
           (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C108 +
           (C2235 - (C2234 + C2233) + C2236 - C2237 - C2238) * C109 +
           (C824 * C2218 - (C174 * C51490 + C175 * C2217) + C825 * C51491 -
            (C117 * C495 + C51314 * C514) * C2219 -
            (C117 * C515 + C51314 * C525) * C2216) *
               C110) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C2434 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C2436 +
           ((C2627 * C2217 + C2628 * C51490 - C3384 * C2218 - C3385 * C51491 +
             C3838 * C2219 + C3839 * C2216) *
                C2434 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C2437 +
           ((C2629 * C2217 + C2630 * C51490 - C3387 * C2218 - C3388 * C51491 +
             C3840 * C2219 + C3841 * C2216) *
                C2434 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C2438) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C2434 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C51167) *
               C2436 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C2434 +
            (C1002 * C2218 - (C361 * C51490 + C362 * C2217) + C1003 * C51491 -
             (C117 * C1301 + C51314 * C1307) * C2219 -
             (C117 * C1308 + C51314 * C1313) * C2216) *
                C51167) *
               C2437 +
           ((C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C2434 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C51167) *
               C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C107 +
           (C1771 - (C1770 + C1769) + C1772) * C108 +
           (C1775 - (C1774 + C1773) + C1776) * C109 +
           (C1777 - (C1778 + C1779) + C1780) * C110) *
              C51303 * C51202 * C1112 +
          (C1785 * C107 + C1786 * C108 +
           (C1779 + C1778 - C1777 - C1780) * C109 +
           (C176 * C1762 + C177 * C1760 -
            (C117 * C799 + C51314 * C800) * C1763 -
            (C117 * C801 + C51314 * C802) * C51281) *
               C110) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C107 +
           (C1765 + C1766 - C1767 - C1768) * C108 + C1785 * C109 +
           C1786 * C110) *
              C51303 * C289 +
          (((C117 * C961 + C51314 * C966) * C1763 -
            ((C117 * C310 + C51314 * C327) * C1760 +
             (C117 * C297 + C51314 * C311) * C1762) +
            (C117 * C967 + C51314 * C976) * C51281) *
               C107 +
           (C1000 * C1763 - (C363 * C1760 + C364 * C1762) + C1001 * C51281) *
               C108 +
           (C1002 * C1763 - (C361 * C1760 + C362 * C1762) + C1003 * C51281) *
               C109 +
           (C1004 * C1763 - (C359 * C1760 + C360 * C1762) + C1005 * C51281) *
               C110) *
              C51303 * C290 +
          (((C117 * C298 + C51314 * C312) * C1762 +
            (C117 * C313 + C51314 * C328) * C1760 -
            (C117 * C1646 + C51314 * C1650) * C1763 -
            (C117 * C1651 + C51314 * C1658) * C51281) *
               C107 +
           (C365 * C1762 + C366 * C1760 -
            (C117 * C1647 + C51314 * C1652) * C1763 -
            (C117 * C1653 + C51314 * C1659) * C51281) *
               C108 +
           (C367 * C1762 + C368 * C1760 -
            (C117 * C1648 + C51314 * C1654) * C1763 -
            (C117 * C1655 + C51314 * C1660) * C51281) *
               C109 +
           (C369 * C1762 + C370 * C1760 -
            (C117 * C1649 + C51314 * C1656) * C1763 -
            (C117 * C1657 + C51314 * C1661) * C51281) *
               C110) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C2627 * C1762 + C2628 * C1760 - C3384 * C1763 - C3385 * C51281) *
                C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           ((C2629 * C1762 + C2630 * C1760 - C3387 * C1763 - C3388 * C51281) *
                C2434 +
            (C4502 + C4503 - C4504 - C4505) * C51167) *
               C2438) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C2434 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C2436 +
           ((C2105 - (C2106 + C2107) + C2108) * C2434 +
            (C2109 - (C2110 + C2111) + C2112) * C51167) *
               C2437 +
           ((C4504 - (C4503 + C4502) + C4505) * C2434 +
            (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C2438) *
              C51202 * C1112 +
          ((C1785 * C2434 + C1786 * C51167) * C2436 +
           ((C2111 + C2110 - C2109 - C2112) * C2434 +
            (C2115 + C2114 - C2113 - C2116) * C51167) *
               C2437 +
           ((C4508 + C4507 - C4506 - C4509) * C2434 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C2434 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C2436 +
           ((C4656 + C4657 - C4658 - C4659) * C2434 +
            (C2107 + C2106 - C2105 - C2108) * C51167) *
               C2437 +
           C4680 * C2438) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C2434 +
            (C2105 - (C2106 + C2107) + C2108) * C51167) *
               C2436 +
           ((C4662 - (C4661 + C4660) + C4663) * C2434 +
            (C4504 - (C4503 + C4502) + C4505) * C51167) *
               C2437 +
           ((C4665 - (C4666 + C4667) + C4668) * C2434 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C2438) *
              C290 +
          (C4680 * C2436 +
           ((C4667 + C4666 - C4665 - C4668) * C2434 +
            (C4671 + C4670 - C4669 - C4672) * C51167) *
               C2437 +
           ((C3663 * C1762 + C3664 * C1760 -
             (C117 * C4331 + C51314 * C4333) * C1763 -
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C2434 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C51443 -
           ((C2656 * C51167 + C3657 * C51428) * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C51253) *
              C51486 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C51253 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C51443) *
              C51487 +
          (((C188 * C51428 + C189 * C51167) * C51492 +
            (C2994 * C51428 + C8713 * C51167) * C51493 +
            (C2995 * C51428 + (C381 + C382) * C51167) * C24657) *
               C51443 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C51428) *
                C24657 +
            ((C382 + C381) * C51167 + C2626 * C51428) * C51493 +
            (C688 * C51167 + C689 * C51428) * C51492) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51428 +
             (C804 + C805 - C806 - C807) * C51167) *
                C51492 +
            ((C3362 + C3363 - C3394 - C3395) * C51428 + C3396 * C51167) *
                C51493 +
            (C4351 * C51428 + C3399 * C51167) * C24657) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C51428 + C3400 * C51167) *
                C51492 +
            ((C3397 - (C3370 + C3369) + C3398) * C51428 + C3401 * C51167) *
                C51493 +
            ((C4352 - (C4344 + C4345) + C4353) * C51428 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C24657) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C51428 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C51492 +
            (C3400 * C51428 + C9059 * C51167) * C51493 +
            (C3401 * C51428 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C24657) *
               C51443 +
           ((C3396 * C51428 + C8862 * C51167) * C51492 +
            (C3399 * C51428 + (C3149 + C3148 - C3154 - C3155) * C51167) *
                C51493 +
            ((C3381 + C3380 - C3402 - C3403) * C51428 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C289 -
           ((C2656 * C51167 + C3657 * C51428) * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C290 +
           (C24809 * C51492 + (C20139 * C51428 + C2657 * C51167) * C51493 +
            ((C3666 + C3667) * C51428 + (C2650 + C2651) * C51167) * C24657) *
               C291) *
              C292 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C290 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C51428) *
                C24657 +
            ((C2653 + C2652) * C51167 + C2656 * C51428) * C51493 +
            C24810 * C51492) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51428 +
            (C178 + C179) * C51167) *
               C51492 +
           ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
           (C2655 * C51428 + C2607 * C51167) * C24657) *
              C51202 * C113 -
          ((C2626 * C51167 + C2616 * C51428) * C24657 +
           (C689 * C51167 + C2617 * C51428) * C51493 +
           ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
              C51202 * C114 +
          ((C188 * C51428 + C189 * C51167) * C51492 +
           (C2994 * C51428 + C8713 * C51167) * C51493 +
           (C2995 * C51428 + (C381 + C382) * C51167) * C24657) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C51428) *
               C24657 +
           ((C697 + C696) * C51167 + C688 * C51428) * C51493 +
           (C190 * C51167 + C191 * C51428) * C51492) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C51428 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C51492 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51428 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C51493 +
           ((C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51428 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C24657) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C51428 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C51167) *
               C51492 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51428 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C51167) *
               C51493 +
           ((C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51428 +
            (C3152 * C484 - (C368 * C480 + C367 * C483) + C3153 * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C51167) *
               C24657) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C804 + C805 - C806 - C807) * C51167) *
               C51492 +
           ((C3362 + C3363 - C3394 - C3395) * C51428 + C3396 * C51167) *
               C51493 +
           (C4351 * C51428 + C3399 * C51167) * C24657) *
              C51202 * C51486 +
          (((C806 - (C805 + C804) + C807) * C51428 +
            (C810 - (C809 + C808) + C811) * C51167) *
               C51492 +
           (C3400 * C51428 + C9059 * C51167) * C51493 +
           (C3401 * C51428 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
               C24657) *
              C51202 * C51487 +
          ((C830 * C51428 + C831 * C51167) * C51492 +
           (C8862 * C51428 + (C997 + C996 - C1010 - C1011) * C51167) * C51493 +
           ((C3149 + C3148 - C3154 - C3155) * C51428 +
            (C369 * C797 + C370 * C51444 -
             (C117 * C1649 + C51314 * C1656) * C798 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C24657) *
              C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51428 +
            (C178 + C179) * C51167) *
               C51492 +
           ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
           (C2655 * C51428 + C2607 * C51167) * C24657) *
              C51202 * C113 -
          ((C2626 * C51167 + C2616 * C51428) * C24657 +
           (C689 * C51167 + C2617 * C51428) * C51493 +
           ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
              C51202 * C114 +
          ((C188 * C51428 + C189 * C51167) * C51492 +
           (C2994 * C51428 + C8713 * C51167) * C51493 +
           (C2995 * C51428 + (C381 + C382) * C51167) * C24657) *
              C51202 * C115 -
          ((((C117 * C322 + C51314 * C333) * C51217 +
             (C117 * C303 + C51314 * C323) * C118) *
                C51167 +
            (C382 + C381) * C51428) *
               C24657 +
           ((C697 + C696) * C51167 + C688 * C51428) * C51493 +
           (C190 * C51167 + C191 * C51428) * C51492) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C289 -
           ((C2656 * C51167 + C3657 * C51428) * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C290 +
           (C24809 * C51492 + (C20139 * C51428 + C2657 * C51167) * C51493 +
            ((C3666 + C3667) * C51428 + (C2650 + C2651) * C51167) * C24657) *
               C291) *
              C292 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C290 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C289 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C51428) *
                C24657 +
            ((C2653 + C2652) * C51167 + C2656 * C51428) * C51493 +
            C24810 * C51492) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C51488 -
           (C25689 * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C51489 +
           (C24809 * C51492 + (C20139 * C51428 + C2657 * C51167) * C51493 +
            ((C3666 + C3667) * C51428 + (C2650 + C2651) * C51167) * C24657) *
               C1415) *
              C51435 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C51489 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C51488 -
           ((((C117 * C2592 + C51314 * C2596) * C51217 +
              (C117 * C2587 + C51314 * C2593) * C118) *
                 C51167 +
             (C2651 + C2650) * C51428) *
                C24657 +
            ((C2653 + C2652) * C51167 + C2656 * C51428) * C51493 +
            C24810 * C51492) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C804 + C805 - C806 - C807) * C51167) *
               C51492 +
           ((C3362 + C3363 - C3394 - C3395) * C51428 + C3396 * C51167) *
               C51493 +
           C26324 * C24657) *
              C51488 +
          (((C3394 - (C3363 + C3362) + C3395) * C51428 + C3400 * C51167) *
               C51492 +
           ((C3397 - (C3370 + C3369) + C3398) * C51428 + C3401 * C51167) *
               C51493 +
           ((C4352 - (C4344 + C4345) + C4353) * C51428 +
            (C3402 - (C3380 + C3381) + C3403) * C51167) *
               C24657) *
              C51489 +
          (C26324 * C51492 +
           (C21201 * C51428 + (C3381 + C3380 - C3402 - C3403) * C51167) *
               C51493 +
           ((C21195 + C21194 - C21202 - C21203) * C51428 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C24657) *
              C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51428 +
            (C178 + C179) * C51167) *
               C51492 +
           ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
           C24809 * C24657) *
              C1180 -
          (C25689 * C24657 +
           (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
           (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
              C1181 +
          (C24809 * C51492 + (C20139 * C51428 + C2657 * C51167) * C51493 +
           ((C3666 + C3667) * C51428 + (C2650 + C2651) * C51167) * C24657) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            (C20745 + C20744) * C51428) *
               C24657 +
           ((C2651 + C2650) * C51167 + C20735 * C51428) * C51493 +
           C25689 * C51492) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C1109 -
           ((C2656 * C51167 + C3657 * C51428) * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C51253) *
              C1111 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C51253 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C1109) *
              C1112 +
          (((C188 * C51428 + C189 * C51167) * C51492 +
            (C2994 * C51428 + C8713 * C51167) * C51493 +
            (C2995 * C51428 + (C381 + C382) * C51167) * C24657) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C51428) *
                C24657 +
            ((C382 + C381) * C51167 + C2626 * C51428) * C51493 +
            (C688 * C51167 + C689 * C51428) * C51492) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C51428 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C51167) *
               C51492 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51428 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C51167) *
               C51493 +
           ((C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51428 +
            (C2826 + C2827 - C2844 - C2845 + C2846 + C2847) * C51167) *
               C24657) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C51428 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51167) *
               C51492 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C51428 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51167) *
               C51493 +
           ((C20850 - (C20849 + C20848) + C20851 - C20858 - C20859) * C51428 +
            (C3392 * C484 - (C2632 * C480 + C2633 * C483) + C3393 * C481 -
             (C117 * C3814 + C51314 * C3817) * C485 -
             (C117 * C3818 + C51314 * C3820) * C482) *
                C51167) *
               C24657) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51428 +
             (C804 + C805 - C806 - C807) * C51167) *
                C51492 +
            ((C3362 + C3363 - C3394 - C3395) * C51428 + C3396 * C51167) *
                C51493 +
            (C4351 * C51428 + C3399 * C51167) * C24657) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C51428 + C3400 * C51167) *
                C51492 +
            ((C3397 - (C3370 + C3369) + C3398) * C51428 + C3401 * C51167) *
                C51493 +
            ((C4352 - (C4344 + C4345) + C4353) * C51428 +
             (C3402 - (C3380 + C3381) + C3403) * C51167) *
                C24657) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C51428 +
             (C810 - (C809 + C808) + C811) * C51167) *
                C51492 +
            (C3400 * C51428 + C9059 * C51167) * C51493 +
            (C3401 * C51428 + (C3154 - (C3148 + C3149) + C3155) * C51167) *
                C24657) *
               C1109 +
           ((C3396 * C51428 + C8862 * C51167) * C51492 +
            (C3399 * C51428 + (C3149 + C3148 - C3154 - C3155) * C51167) *
                C51493 +
            ((C3381 + C3380 - C3402 - C3403) * C51428 +
             (C2638 * C797 + C2639 * C51444 -
              (C117 * C3351 + C51314 * C3356) * C798 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C51428 +
             (C178 + C179) * C51167) *
                C51492 +
            ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
            C24809 * C24657) *
               C1109 -
           ((C2656 * C51167 + C3657 * C51428) * C24657 +
            (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
            (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
               C51253) *
              C1111 +
          (((C2602 * C51428 + C2994 * C51167) * C51492 +
            (C2607 * C51428 + C2995 * C51167) * C51493 +
            (C2657 * C51428 + (C2652 + C2653) * C51167) * C24657) *
               C51253 -
           (C24810 * C24657 + (C689 * C51167 + C2617 * C51428) * C51493 +
            ((C181 + C180) * C51167 + (C179 + C178) * C51428) * C51492) *
               C1109) *
              C1112 +
          (((C188 * C51428 + C189 * C51167) * C51492 +
            (C2994 * C51428 + C8713 * C51167) * C51493 +
            (C2995 * C51428 + (C381 + C382) * C51167) * C24657) *
               C1109 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C51167 +
             (C2653 + C2652) * C51428) *
                C24657 +
            ((C382 + C381) * C51167 + C2626 * C51428) * C51493 +
            (C688 * C51167 + C689 * C51428) * C51492) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51428 +
            (C178 + C179) * C51167) *
               C51492 +
           ((C2642 + C2643) * C51428 + C2602 * C51167) * C51493 +
           C24809 * C24657) *
              C1180 -
          (C25689 * C24657 +
           (C2616 * C51167 + (C2645 + C2644) * C51428) * C51493 +
           (C2617 * C51167 + (C2643 + C2642) * C51428) * C51492) *
              C1181 +
          (C24809 * C51492 + (C20139 * C51428 + C2657 * C51167) * C51493 +
           ((C3666 + C3667) * C51428 + (C2650 + C2651) * C51167) * C24657) *
              C1182 -
          ((((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51167 +
            (C20745 + C20744) * C51428) *
               C24657 +
           ((C2651 + C2650) * C51167 + C20735 * C51428) * C51493 +
           C25689 * C51492) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C51428 +
             (C1765 + C1766 - C1767 - C1768) * C51167) *
                C51492 +
            ((C4656 + C4657 - C4658 - C4659) * C51428 + C4995 * C51167) *
                C51493 +
            C26619 * C24657) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C51428 + C4996 * C51167) *
                C51492 +
            ((C4662 - (C4661 + C4660) + C4663) * C51428 + C4997 * C51167) *
                C51493 +
            ((C4665 - (C4666 + C4667) + C4668) * C51428 +
             (C4669 - (C4670 + C4671) + C4672) * C51167) *
                C24657) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C51428 +
             (C1771 - (C1770 + C1769) + C1772) * C51167) *
                C51492 +
            (C4996 * C51428 + C10525 * C51167) * C51493 +
            (C4997 * C51428 + (C4506 - (C4507 + C4508) + C4509) * C51167) *
                C24657) *
               C51443 +
           ((C4995 * C51428 + C10084 * C51167) * C51492 +
            (C4676 * C51428 + (C4508 + C4507 - C4506 - C4509) * C51167) *
                C51493 +
            ((C4671 + C4670 - C4669 - C4672) * C51428 +
             (C2638 * C1762 + C2639 * C1760 -
              (C117 * C3351 + C51314 * C3356) * C1763 -
              (C117 * C3357 + C51314 * C3360) * C51281) *
                 C51167) *
                C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C51428 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C51492 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51428 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C51493 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51428 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C24657) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51428 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51167) *
               C51492 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51428 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51167) *
               C51493 +
           ((C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51428 +
            (C3392 * C2218 - (C2632 * C51490 + C2633 * C2217) + C3393 * C51491 -
             (C117 * C3814 + C51314 * C3817) * C2219 -
             (C117 * C3818 + C51314 * C3820) * C2216) *
                C51167) *
               C24657) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C51492 +
           ((C4656 + C4657 - C4658 - C4659) * C51428 + C4995 * C51167) *
               C51493 +
           C26619 * C24657) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C51428 + C4996 * C51167) *
               C51492 +
           ((C4662 - (C4661 + C4660) + C4663) * C51428 + C4997 * C51167) *
               C51493 +
           ((C4665 - (C4666 + C4667) + C4668) * C51428 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C24657) *
              C290 +
          (C26619 * C51492 +
           (C21408 * C51428 + (C4671 + C4670 - C4669 - C4672) * C51167) *
               C51493 +
           ((C21405 + C21404 - C21403 - C21406) * C51428 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C24657) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C51492 +
           ((C4656 + C4657 - C4658 - C4659) * C51428 + C4995 * C51167) *
               C51493 +
           (C4677 * C51428 + C4676 * C51167) * C24657) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C51428 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C51492 +
           (C4996 * C51428 + C10525 * C51167) * C51493 +
           (C4997 * C51428 + (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C24657) *
              C51202 * C1112 +
          ((C1785 * C51428 + C1786 * C51167) * C51492 +
           (C10084 * C51428 + (C2115 + C2114 - C2113 - C2116) * C51167) *
               C51493 +
           ((C4508 + C4507 - C4506 - C4509) * C51428 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C24657) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C51428 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C51167) *
              C51492 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C51428 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C51167) *
              C51493 +
          ((C2629 * C1954 + C2630 * C1950 - C3387 * C1955 - C3388 * C1951 +
            C3840 * C1956 + C3841 * C1952 -
            (C117 * C4780 + C51314 * C4786) * C1957 -
            (C117 * C4787 + C51314 * C4792) * C1953) *
               C51428 +
           (C365 * C1954 + C366 * C1950 - C2838 * C1955 - C2839 * C1951 +
            C2840 * C1956 + C2841 * C1952 -
            (C117 * C4781 + C51314 * C4788) * C1957 -
            (C117 * C4789 + C51314 * C4793) * C1953) *
               C51167) *
              C24657) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C51428 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C51167) *
               C51492 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51428 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C51167) *
               C51493 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51428 +
            (C5150 + C5151 - C5152 - C5153 + C5154 + C5155) * C51167) *
               C24657) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C51428 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C51167) *
               C51492 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51428 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C51167) *
               C51493 +
           ((C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51428 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C51167) *
               C24657) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C51492 +
           ((C4656 + C4657 - C4658 - C4659) * C51428 + C4995 * C51167) *
               C51493 +
           (C4677 * C51428 + C4676 * C51167) * C24657) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C51428 +
            (C1771 - (C1770 + C1769) + C1772) * C51167) *
               C51492 +
           (C4996 * C51428 + C10525 * C51167) * C51493 +
           (C4997 * C51428 + (C4506 - (C4507 + C4508) + C4509) * C51167) *
               C24657) *
              C51202 * C1112 +
          ((C1785 * C51428 + C1786 * C51167) * C51492 +
           (C10084 * C51428 + (C2115 + C2114 - C2113 - C2116) * C51167) *
               C51493 +
           ((C4508 + C4507 - C4506 - C4509) * C51428 +
            (C369 * C1762 + C370 * C1760 -
             (C117 * C1649 + C51314 * C1656) * C1763 -
             (C117 * C1657 + C51314 * C1661) * C51281) *
                C51167) *
               C24657) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51428 +
            (C1765 + C1766 - C1767 - C1768) * C51167) *
               C51492 +
           ((C4656 + C4657 - C4658 - C4659) * C51428 + C4995 * C51167) *
               C51493 +
           C26619 * C24657) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C51428 + C4996 * C51167) *
               C51492 +
           ((C4662 - (C4661 + C4660) + C4663) * C51428 + C4997 * C51167) *
               C51493 +
           ((C4665 - (C4666 + C4667) + C4668) * C51428 +
            (C4669 - (C4670 + C4671) + C4672) * C51167) *
               C24657) *
              C290 +
          (C26619 * C51492 +
           (C21408 * C51428 + (C4671 + C4670 - C4669 - C4672) * C51167) *
               C51493 +
           ((C21405 + C21404 - C21403 - C21406) * C51428 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51167) *
               C24657) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C51443 -
           (((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51162 *
                C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C51253) *
              C51486 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C51253 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C51443) *
              C51487 +
          ((C10982 * C51162 * C51492 + C14463 * C51162 * C51493 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51162 *
                C24657) *
               C51443 -
           (((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
              C51457 * C1198) *
                 C51217 +
             (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
              C51457 * C1192) *
                 C118) *
                C51162 * C24657 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51162 *
                C51493 +
            C11534 * C51162 * C51492) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51162 * C51492 +
            ((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                C51162 * C51493 +
            (C30940 * C797 + C30941 * C51444 - (C16155 + C16154) * C798 -
             (C16157 + C16156) * C51281) *
                C51162 * C24657) *
               C51443 +
           (((C14941 + C14940) * C798 -
             ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
             (C14943 + C14942) * C51281) *
                C51162 * C51492 +
            ((C16154 + C16155) * C798 -
             ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
             (C16156 + C16157) * C51281) *
                C51162 * C51493 +
            ((C10923 * C3349 + C51457 * C3352 + C10924 * C3813 +
              C51378 * C3815) *
                 C798 -
             ((C15293 + C15292) * C51444 + (C15291 + C15290) * C797) +
             (C10923 * C3353 + C51457 * C3358 + C10924 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C24657) *
               C51253) *
              C292 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C51162 * C51492 +
            C14957 * C51162 * C51493 +
            ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
             (C14952 + C14953) * C51281) *
                C51162 * C24657) *
               C51443 +
           (C14956 * C51162 * C51492 +
            (C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
             (C14953 + C14952) * C51281) *
                C51162 * C51493 +
            ((C14051 + C14052) * C797 + (C14053 + C14054) * C51444 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C798 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51162 * C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C289 -
           (((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51162 *
                C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C290 +
           (C30946 * C51492 +
            ((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51162 *
                C51493 +
            ((C10923 * C2585 + C51457 * C2588 + C10924 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C10923 * C2589 + C51457 * C2594 + C10924 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C24657) *
               C291) *
              C292 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C290 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C289 -
           (((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51162 * C24657 +
            ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51162 *
                C51493 +
            C30942 * C51492) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C51492 +
           ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
               C51493 +
           ((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51162 *
               C24657) *
              C51202 * C113 -
          (C14056 * C51162 * C24657 + C14057 * C51162 * C51493 +
           ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
               C51492) *
              C51202 * C114 +
          (C10982 * C51162 * C51492 + C14463 * C51162 * C51493 +
           ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51162 *
               C24657) *
              C51202 * C115 -
          (((C10924 * C1657 + C51378 * C1661 + C10923 * C319 + C51457 * C331) *
                C51217 +
            (C10924 * C1649 + C51378 * C1656 + C10923 * C301 + C51457 * C318) *
                C118) *
               C51162 * C24657 +
           ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51162 *
               C51493 +
           C10983 * C51162 * C51492) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C483 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C480 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C484 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C481 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C485 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C51492 +
           ((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
            (C14940 + C14941) * C484 - (C14942 + C14943) * C481 +
            (C15496 + C15497) * C485 + (C15498 + C15499) * C482) *
               C51162 * C51493 +
           (C30940 * C483 + C30941 * C480 - (C16155 + C16154) * C484 -
            (C16157 + C16156) * C481 +
            (C10923 * C2805 + C51457 * C2808 + C10924 * C4780 +
             C51378 * C4786) *
                C485 +
            (C10923 * C2809 + C51457 * C2814 + C10924 * C4787 +
             C51378 * C4792) *
                C482) *
               C51162 * C24657) *
              C51202 * C292 +
          (((C11357 + C11356) * C484 -
            ((C10961 + C10960) * C480 + (C10959 + C10958) * C483) +
            (C11359 + C11358) * C481 - (C11361 + C11360) * C485 -
            (C11363 + C11362) * C482) *
               C51162 * C51492 +
           (C14928 * C484 - (C14023 * C480 + C14024 * C483) + C14931 * C481 -
            (C14262 + C14261) * C485 - (C14264 + C14263) * C482) *
               C51162 * C51493 +
           ((C14950 + C14951) * C484 - (C14013 * C480 + C14014 * C483) +
            (C14952 + C14953) * C481 -
            (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
             C51457 * C2810) *
                C485 -
            (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
             C51457 * C2815) *
                C482) *
               C51162 * C24657) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C797 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51444 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C798 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
            (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           (C30940 * C797 + C30941 * C51444 - (C16155 + C16154) * C798 -
            (C16157 + C16156) * C51281) *
               C51162 * C24657) *
              C51202 * C51486 +
          (((C11357 + C11356) * C798 -
            ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
            (C11359 + C11358) * C51281) *
               C51162 * C51492 +
           C14957 * C51162 * C51493 +
           ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
            (C14952 + C14953) * C51281) *
               C51162 * C24657) *
              C51202 * C51487 +
          (C11701 * C51162 * C51492 +
           (C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
            (C11919 + C11918) * C51281) *
               C51162 * C51493 +
           ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C798 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C51162 * C24657) *
              C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C51492 +
           ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
               C51493 +
           ((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51162 *
               C24657) *
              C51202 * C113 -
          (C14056 * C51162 * C24657 + C14057 * C51162 * C51493 +
           ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
               C51492) *
              C51202 * C114 +
          (C10982 * C51162 * C51492 + C14463 * C51162 * C51493 +
           ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51162 *
               C24657) *
              C51202 * C115 -
          (((C10924 * C1657 + C51378 * C1661 + C10923 * C319 + C51457 * C331) *
                C51217 +
            (C10924 * C1649 + C51378 * C1656 + C10923 * C301 + C51457 * C318) *
                C118) *
               C51162 * C24657 +
           ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51162 *
               C51493 +
           C10983 * C51162 * C51492) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C289 -
           (((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51162 *
                C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C290 +
           (C30946 * C51492 +
            ((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51162 *
                C51493 +
            ((C10923 * C2585 + C51457 * C2588 + C10924 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C10923 * C2589 + C51457 * C2594 + C10924 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C24657) *
               C291) *
              C292 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C290 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C289 -
           (((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51162 * C24657 +
            ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51162 *
                C51493 +
            C30942 * C51492) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C51488 -
           (C31840 * C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C51489 +
           (C30946 * C51492 +
            ((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51162 *
                C51493 +
            ((C31835 + C31836) * C118 + (C31837 + C31838) * C51217) * C51162 *
                C24657) *
               C1415) *
              C51435 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C51489 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C51488 -
           (((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51162 * C24657 +
            ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51162 *
                C51493 +
            C30942 * C51492) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C797 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51444 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C798 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
            (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           C32506 * C24657) *
              C51488 +
          (((C14941 + C14940) * C798 -
            ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
            (C14943 + C14942) * C51281) *
               C51162 * C51492 +
           ((C16154 + C16155) * C798 -
            ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
            (C16156 + C16157) * C51281) *
               C51162 * C51493 +
           ((C32500 + C32501) * C798 - (C31823 * C51444 + C31824 * C797) +
            (C32502 + C32503) * C51281) *
               C51162 * C24657) *
              C51489 +
          (C32506 * C51492 +
           ((C15290 + C15291) * C797 + (C15292 + C15293) * C51444 -
            (C32501 + C32500) * C798 - (C32503 + C32502) * C51281) *
               C51162 * C51493 +
           ((C31835 + C31836) * C797 + (C31837 + C31838) * C51444 -
            (C10924 * C20843 + C51378 * C20844 + C10923 * C4331 +
             C51457 * C4333) *
                C798 -
            (C10924 * C20845 + C51378 * C20846 + C10923 * C4334 +
             C51457 * C4337) *
                C51281) *
               C51162 * C24657) *
              C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C51492 +
           ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
               C51493 +
           C30946 * C24657) *
              C1180 -
          (C31840 * C24657 +
           ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
               C51493 +
           ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
               C51492) *
              C1181 +
          (C30946 * C51492 +
           ((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51162 *
               C51493 +
           ((C31835 + C31836) * C118 + (C31837 + C31838) * C51217) * C51162 *
               C24657) *
              C1182 -
          (((C10924 * C21187 + C51378 * C21188 + C10923 * C3651 +
             C51457 * C3654) *
                C51217 +
            (C10924 * C21185 + C51378 * C21186 + C10923 * C3648 +
             C51457 * C3652) *
                C118) *
               C51162 * C24657 +
           ((C31838 + C31837) * C51217 + (C31836 + C31835) * C118) * C51162 *
               C51493 +
           C31840 * C51492) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C1109 -
           (((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51162 *
                C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C51253) *
              C1111 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C51253 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C1109) *
              C1112 +
          ((C10982 * C51162 * C51492 + C14463 * C51162 * C51493 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51162 *
                C24657) *
               C1109 -
           (((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
              C51457 * C1198) *
                 C51217 +
             (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
              C51457 * C1192) *
                 C118) *
                C51162 * C24657 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51162 *
                C51493 +
            C11534 * C51162 * C51492) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C483 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C480 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C484 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C481 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C485 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C51492 +
           ((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
            (C14940 + C14941) * C484 - (C14942 + C14943) * C481 +
            (C15496 + C15497) * C485 + (C15498 + C15499) * C482) *
               C51162 * C51493 +
           (C30940 * C483 + C30941 * C480 - (C16155 + C16154) * C484 -
            (C16157 + C16156) * C481 + (C31995 + C31996) * C485 +
            (C31997 + C31998) * C482) *
               C51162 * C24657) *
              C1109 +
          (((C14941 + C14940) * C484 -
            ((C14038 + C14037) * C480 + (C14036 + C14035) * C483) +
            (C14943 + C14942) * C481 - (C15497 + C15496) * C485 -
            (C15499 + C15498) * C482) *
               C51162 * C51492 +
           ((C16154 + C16155) * C484 -
            ((C14043 + C14044) * C480 + (C14045 + C14046) * C483) +
            (C16156 + C16157) * C481 - (C31996 + C31995) * C485 -
            (C31998 + C31997) * C482) *
               C51162 * C51493 +
           ((C10923 * C3349 + C51457 * C3352 + C10924 * C3813 +
             C51378 * C3815) *
                C484 -
            (C31823 * C480 + C31824 * C483) +
            (C10923 * C3353 + C51457 * C3358 + C10924 * C3816 +
             C51378 * C3819) *
                C481 -
            (C10924 * C21475 + C51378 * C21476 + C10923 * C3813 +
             C51457 * C3815) *
                C485 -
            (C10924 * C21477 + C51378 * C21478 + C10923 * C3816 +
             C51457 * C3819) *
                C482) *
               C51162 * C24657) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51162 * C51492 +
            ((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                C51162 * C51493 +
            (C30940 * C797 + C30941 * C51444 - (C16155 + C16154) * C798 -
             (C16157 + C16156) * C51281) *
                C51162 * C24657) *
               C1109 +
           (((C14941 + C14940) * C798 -
             ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
             (C14943 + C14942) * C51281) *
                C51162 * C51492 +
            ((C16154 + C16155) * C798 -
             ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
             (C16156 + C16157) * C51281) *
                C51162 * C51493 +
            ((C10923 * C3349 + C51457 * C3352 + C10924 * C3813 +
              C51378 * C3815) *
                 C798 -
             (C31823 * C51444 + C31824 * C797) +
             (C10923 * C3353 + C51457 * C3358 + C10924 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C24657) *
               C51253) *
              C51435 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C51162 * C51492 +
            C14957 * C51162 * C51493 +
            ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
             (C14952 + C14953) * C51281) *
                C51162 * C24657) *
               C1109 +
           (C14956 * C51162 * C51492 +
            (C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
             (C14953 + C14952) * C51281) *
                C51162 * C51493 +
            ((C14051 + C14052) * C797 + (C14053 + C14054) * C51444 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C798 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51162 * C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C51492 +
            ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
                C51493 +
            C30946 * C24657) *
               C1109 -
           (((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51162 *
                C24657 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
                C51493 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
                C51492) *
               C51253) *
              C1111 +
          ((C14055 * C51162 * C51492 + C14058 * C51162 * C51493 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51162 *
                C24657) *
               C51253 -
           (C30942 * C24657 + C14057 * C51162 * C51493 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51162 *
                C51492) *
               C1109) *
              C1112 +
          ((C10982 * C51162 * C51492 + C14463 * C51162 * C51493 +
            ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51162 *
                C24657) *
               C1109 -
           (((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
              C51457 * C1198) *
                 C51217 +
             (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
              C51457 * C1192) *
                 C118) *
                C51162 * C24657 +
            ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51162 *
                C51493 +
            C11534 * C51162 * C51492) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C118 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C51492 +
           ((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51162 *
               C51493 +
           C30946 * C24657) *
              C1180 -
          (C31840 * C24657 +
           ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51162 *
               C51493 +
           ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51162 *
               C51492) *
              C1181 +
          (C30946 * C51492 +
           ((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51162 *
               C51493 +
           ((C31835 + C31836) * C118 + (C31837 + C31838) * C51217) * C51162 *
               C24657) *
              C1182 -
          (((C10924 * C21187 + C51378 * C21188 + C10923 * C3651 +
             C51457 * C3654) *
                C51217 +
            (C10924 * C21185 + C51378 * C21186 + C10923 * C3648 +
             C51457 * C3652) *
                C118) *
               C51162 * C24657 +
           ((C31838 + C31837) * C51217 + (C31836 + C31835) * C118) * C51162 *
               C51493 +
           C31840 * C51492) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51162 * C51492 +
            ((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C51162 * C51493 +
            C32806 * C24657) *
               C51443 +
           (((C14941 + C14940) * C1763 -
             ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
             (C14943 + C14942) * C51281) *
                C51162 * C51492 +
            ((C16154 + C16155) * C1763 -
             ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
             (C16156 + C16157) * C51281) *
                C51162 * C51493 +
            ((C32500 + C32501) * C1763 - (C31823 * C1760 + C31824 * C1762) +
             (C32502 + C32503) * C51281) *
                C51162 * C24657) *
               C51253) *
              C51435 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C51162 * C51492 +
            C16947 * C51162 * C51493 +
            ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
             (C14952 + C14953) * C51281) *
                C51162 * C24657) *
               C51443 +
           (C16946 * C51162 * C51492 +
            (C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
             (C14953 + C14952) * C51281) *
                C51162 * C51493 +
            ((C14051 + C14052) * C1762 + (C14053 + C14054) * C1760 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C1763 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51162 * C24657) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C2217 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51490 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C2218 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51491 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C2219 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C51492 +
           ((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
            (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
            (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
               C51162 * C51493 +
           (C30940 * C2217 + C30941 * C51490 - C32487 * C2218 -
            C32488 * C51491 + (C31995 + C31996) * C2219 +
            (C31997 + C31998) * C2216) *
               C51162 * C24657) *
              C51443 +
          (((C14941 + C14940) * C2218 -
            ((C14038 + C14037) * C51490 + (C14036 + C14035) * C2217) +
            (C14943 + C14942) * C51491 - (C15497 + C15496) * C2219 -
            (C15499 + C15498) * C2216) *
               C51162 * C51492 +
           ((C16154 + C16155) * C2218 -
            ((C14043 + C14044) * C51490 + (C14045 + C14046) * C2217) +
            (C16156 + C16157) * C51491 - (C31996 + C31995) * C2219 -
            (C31998 + C31997) * C2216) *
               C51162 * C51493 +
           ((C32500 + C32501) * C2218 - (C31823 * C51490 + C31824 * C2217) +
            (C32502 + C32503) * C51491 -
            (C10924 * C21475 + C51378 * C21476 + C10923 * C3813 +
             C51457 * C3815) *
                C2219 -
            (C10924 * C21477 + C51378 * C21478 + C10923 * C3816 +
             C51457 * C3819) *
                C2216) *
               C51162 * C24657) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
            (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           C32806 * C24657) *
              C289 +
          (((C14941 + C14940) * C1763 -
            ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
            (C14943 + C14942) * C51281) *
               C51162 * C51492 +
           ((C16154 + C16155) * C1763 -
            ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
            (C16156 + C16157) * C51281) *
               C51162 * C51493 +
           ((C32500 + C32501) * C1763 - (C31823 * C1760 + C31824 * C1762) +
            (C32502 + C32503) * C51281) *
               C51162 * C24657) *
              C290 +
          (C32806 * C51492 +
           ((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
            (C32501 + C32500) * C1763 - (C32503 + C32502) * C51281) *
               C51162 * C51493 +
           ((C31835 + C31836) * C1762 + (C31837 + C31838) * C1760 -
            (C10924 * C20843 + C51378 * C20844 + C10923 * C4331 +
             C51457 * C4333) *
                C1763 -
            (C10924 * C20845 + C51378 * C20846 + C10923 * C4334 +
             C51457 * C4337) *
                C51281) *
               C51162 * C24657) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
            (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           (C30940 * C1762 + C30941 * C1760 - C32487 * C1763 -
            C32488 * C51281) *
               C51162 * C24657) *
              C51202 * C1111 +
          (((C11357 + C11356) * C1763 -
            ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
            (C11359 + C11358) * C51281) *
               C51162 * C51492 +
           C16947 * C51162 * C51493 +
           ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
            (C14952 + C14953) * C51281) *
               C51162 * C24657) *
              C51202 * C1112 +
          (C12948 * C51162 * C51492 +
           (C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
            (C11919 + C11918) * C51281) *
               C51162 * C51493 +
           ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C1763 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C51162 * C24657) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
               C1954 +
           (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
               C1950 -
           (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
               C1955 -
           (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
               C1951 +
           (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
               C1956 +
           (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
               C1952 -
           (C10924 * C5799 + C51378 * C5802 + C10923 * C1958 + C51457 * C1962) *
               C1957 -
           (C10924 * C5803 + C51378 * C5808 + C10923 * C1963 + C51457 * C1970) *
               C1953) *
              C51162 * C51492 +
          ((C14035 + C14036) * C1954 + (C14037 + C14038) * C1950 -
           (C14940 + C14941) * C1955 - (C14942 + C14943) * C1951 +
           (C15496 + C15497) * C1956 + (C15498 + C15499) * C1952 -
           (C10924 * C6781 + C51378 * C6783 + C10923 * C4778 + C51457 * C4782) *
               C1957 -
           (C10924 * C6784 + C51378 * C6787 + C10923 * C4783 + C51457 * C4790) *
               C1953) *
              C51162 * C51493 +
          (C30940 * C1954 + C30941 * C1950 - C32487 * C1955 - C32488 * C1951 +
           (C31995 + C31996) * C1956 + (C31997 + C31998) * C1952 -
           (C10924 * C23149 + C51378 * C23150 + C10923 * C4780 +
            C51457 * C4786) *
               C1957 -
           (C10924 * C23151 + C51378 * C23152 + C10923 * C4787 +
            C51457 * C4792) *
               C1953) *
              C51162 * C24657) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C2217 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C51490 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C2218 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51491 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C2219 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C51492 +
           ((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
            (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
            (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
               C51162 * C51493 +
           (C30940 * C2217 + C30941 * C51490 - C32487 * C2218 -
            C32488 * C51491 + (C31995 + C31996) * C2219 +
            (C31997 + C31998) * C2216) *
               C51162 * C24657) *
              C51202 * C51435 +
          (((C11357 + C11356) * C2218 -
            ((C10961 + C10960) * C51490 + (C10959 + C10958) * C2217) +
            (C11359 + C11358) * C51491 - (C11361 + C11360) * C2219 -
            (C11363 + C11362) * C2216) *
               C51162 * C51492 +
           (C14928 * C2218 - (C14023 * C51490 + C14024 * C2217) +
            C14931 * C51491 - (C14262 + C14261) * C2219 -
            (C14264 + C14263) * C2216) *
               C51162 * C51493 +
           ((C14950 + C14951) * C2218 - (C14013 * C51490 + C14014 * C2217) +
            (C14952 + C14953) * C51491 -
            (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
             C51457 * C2810) *
                C2219 -
            (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
             C51457 * C2815) *
                C2216) *
               C51162 * C24657) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
            (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           (C30940 * C1762 + C30941 * C1760 - C32487 * C1763 -
            C32488 * C51281) *
               C51162 * C24657) *
              C51202 * C1111 +
          (((C11357 + C11356) * C1763 -
            ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
            (C11359 + C11358) * C51281) *
               C51162 * C51492 +
           C16947 * C51162 * C51493 +
           ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
            (C14952 + C14953) * C51281) *
               C51162 * C24657) *
              C51202 * C1112 +
          (C12948 * C51162 * C51492 +
           (C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
            (C11919 + C11918) * C51281) *
               C51162 * C51493 +
           ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
            (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
             C51457 * C1654) *
                C1763 -
            (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
             C51457 * C1660) *
                C51281) *
               C51162 * C24657) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1762 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1760 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1763 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C51281) *
               C51162 * C51492 +
           ((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
            (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
               C51162 * C51493 +
           C32806 * C24657) *
              C289 +
          (((C14941 + C14940) * C1763 -
            ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
            (C14943 + C14942) * C51281) *
               C51162 * C51492 +
           ((C16154 + C16155) * C1763 -
            ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
            (C16156 + C16157) * C51281) *
               C51162 * C51493 +
           ((C32500 + C32501) * C1763 - (C31823 * C1760 + C31824 * C1762) +
            (C32502 + C32503) * C51281) *
               C51162 * C24657) *
              C290 +
          (C32806 * C51492 +
           ((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
            (C32501 + C32500) * C1763 - (C32503 + C32502) * C51281) *
               C51162 * C51493 +
           ((C31835 + C31836) * C1762 + (C31837 + C31838) * C1760 -
            (C10924 * C20843 + C51378 * C20844 + C10923 * C4331 +
             C51457 * C4333) *
                C1763 -
            (C10924 * C20845 + C51378 * C20846 + C10923 * C4334 +
             C51457 * C4337) *
                C51281) *
               C51162 * C24657) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C51443 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C51486 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C51443) *
              C51487 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C51443 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C51443 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51253) *
              C51486 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51253 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51443) *
              C51487 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                C51352) *
               C51443 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C17435 +
             (C382 + C381) * C17434 + C2626 * C17433) *
                C51352 +
            ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) * C17436) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C51443 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C51253) *
              C51486 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C51253 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C51443) *
              C51487 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51217) *
                C51162 * C17436 +
            ((C6006 + C6007 + C6008) * C118 +
             (C6009 + C6010 + C6011) * C51217) *
                C51162 * C51352) *
               C51443 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51162 * C51352 +
            ((C6011 + C6010 + C6009) * C51217 +
             (C6008 + C6007 + C6006) * C118) *
                C51162 * C17436) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
            C4351 * C51162 * C20037 +
            (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
               C51443 +
           ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
            (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
            (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
            ((C117 * C4331 + C51314 * C4333) * C798 -
             (C3664 * C51444 + C3663 * C797) +
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C51162 * C20038) *
               C51253) *
              C292 +
          (((C806 - (C805 + C804) + C807) * C51162 * C20035 +
            C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
            (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
               C51443 +
           (C3396 * C51162 * C20035 + C3399 * C51162 * C20036 +
            (C3381 + C3380 - C3402 - C3403) * C51162 * C20037 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
                C17436 +
            ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
             C8862 * C17435) *
                C51352) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
             C9059 * C17435) *
                C17436 +
            ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
             (C3154 - (C3148 + C3149) + C3155) * C17435) *
                C51352) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C17433 +
             (C810 - (C809 + C808) + C811) * C17434 +
             (C814 - (C813 + C812) + C815) * C17435) *
                C17436 +
            (C3400 * C17433 + C9059 * C17434 +
             (C1010 - (C996 + C997) + C1011) * C17435) *
                C51352) *
               C51443 +
           ((C3396 * C17433 + C8862 * C17434 +
             (C997 + C996 - C1010 - C1011) * C17435) *
                C17436 +
            (C3399 * C17433 + (C3149 + C3148 - C3154 - C3155) * C17434 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C797 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51444 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C798 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C797 +
             (C22083 + C22084 + C22085) * C51444 -
             (C22736 + C22737 + C22738) * C798 -
             (C22739 + C22740 + C22741) * C51281) *
                C51162 * C51352) *
               C51443 +
           (((C22738 + C22737 + C22736) * C798 -
             ((C22085 + C22084 + C22083) * C51444 +
              (C22082 + C22081 + C22080) * C797) +
             (C22741 + C22740 + C22739) * C51281) *
                C51162 * C17436 +
            ((C5414 * C1646 + C5411 * C1650 + C5415 * C2805 + C5412 * C2808 +
              C5416 * C4780 + C5413 * C4786) *
                 C798 -
             ((C22086 + C22087 + C22088) * C51444 +
              (C22089 + C22090 + C22091) * C797) +
             (C5414 * C1651 + C5411 * C1658 + C5415 * C2809 + C5412 * C2814 +
              C5416 * C4787 + C5413 * C4792) *
                 C51281) *
                C51162 * C51352) *
               C51253) *
              C292 +
          ((((C5838 + C5837 + C5836) * C798 -
             ((C5459 + C5458 + C5457) * C51444 +
              (C5456 + C5455 + C5454) * C797) +
             (C5841 + C5840 + C5839) * C51281) *
                C51162 * C17436 +
            ((C6386 + C6387 + C6388) * C798 -
             ((C5642 + C5643 + C5644) * C51444 +
              (C5645 + C5646 + C5647) * C797) +
             (C6389 + C6390 + C6391) * C51281) *
                C51162 * C51352) *
               C51443 +
           (((C5647 + C5646 + C5645) * C797 + (C5644 + C5643 + C5642) * C51444 -
             (C6388 + C6387 + C6386) * C798 -
             (C6391 + C6390 + C6389) * C51281) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C797 + (C5651 + C5652 + C5653) * C51444 -
             (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
              C5414 * C1647 + C5411 * C1652) *
                 C798 -
             (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
              C5414 * C1653 + C5411 * C1659) *
                 C51281) *
                C51162 * C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C118 +
                 (C117 * C127 + C51314 * C140) * C51217) *
                    C17433 +
                (C178 + C179) * C17434 + C188 * C17435) *
                   C17436 +
               ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                   C51352) *
                  C51202 * C113 -
              ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
               (C191 * C17435 + (C181 + C180) * C17434 +
                (C179 + C178) * C17433) *
                   C17436) *
                  C51202 * C114 +
              ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) *
                   C17436 +
               (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                   C51352) *
                  C51202 * C115 -
              ((((C117 * C684 + C51314 * C686) * C51217 +
                 (C117 * C683 + C51314 * C685) * C118) *
                    C17435 +
                (C697 + C696) * C17434 + C688 * C17433) *
                   C51352 +
               ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) *
                   C17436) *
                  C51202 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51314 * C126) * C118 +
                  (C117 * C127 + C51314 * C140) * C51217) *
                     C17433 +
                 (C178 + C179) * C17434 + C188 * C17435) *
                    C17436 +
                ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                    C51352) *
                   C289 -
               ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                    C51352 +
                (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                    C17436) *
                   C290 +
               ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
                ((C2649 + C2648) * C17433 + C2657 * C17434 +
                 (C2652 + C2653) * C17435) *
                    C51352) *
                   C291) *
                  C292 +
              (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
                (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                    C51352) *
                   C290 -
               ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
                (C191 * C17435 + (C181 + C180) * C17434 +
                 (C179 + C178) * C17433) *
                    C17436) *
                   C289 -
               ((((C117 * C1189 + C51314 * C1197) * C51217 +
                  (C117 * C1185 + C51314 * C1190) * C118) *
                     C17435 +
                 (C2653 + C2652) * C17434 + C2656 * C17433) *
                    C51352 +
                ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                    C17436) *
                   C291) *
                  C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C17433 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C17434 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C17435) *
               C17436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C17433 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C17434 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C17435) *
               C51352) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C17433 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C17434 +
            (C577 - (C548 + C547) + C578 - C579 - C580) * C17435) *
               C17436 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C17433 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C17434 +
            (C1004 * C484 - (C359 * C480 + C360 * C483) + C1005 * C481 -
             (C117 * C1302 + C51314 * C1309) * C485 -
             (C117 * C1310 + C51314 * C1314) * C482) *
                C17435) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C2655 * C51162 * C20037 +
           (C2649 + C2648) * C51162 * C20038) *
              C51202 * C113 -
          (C2656 * C51162 * C20038 + C2616 * C51162 * C20037 +
           C2617 * C51162 * C20036 + (C179 + C178) * C51162 * C20035) *
              C51202 * C114 +
          (C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
           C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
              C51202 * C115 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C51162 * C20038 +
           (C382 + C381) * C51162 * C20037 + C688 * C51162 * C20036 +
           C191 * C51162 * C20035) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C289 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C290 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            ((C117 * C3648 + C51314 * C3652) * C118 +
             (C117 * C3651 + C51314 * C3654) * C51217) *
                C51162 * C20038) *
               C291) *
              C292 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C290 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C289 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C51162 * C20035 +
           (C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51162 * C20036 +
           (C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51162 * C20037 +
           (C2635 * C483 + C2634 * C480 - C4349 * C484 - C4350 * C481 +
            (C117 * C3813 + C51314 * C3815) * C485 +
            (C117 * C3816 + C51314 * C3819) * C482) *
               C51162 * C20038) *
              C51202 * C292 +
          ((C569 - (C528 + C527) + C570 - C571 - C572) * C51162 * C20035 +
           (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51162 * C20036 +
           (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51162 * C20037 +
           (C3392 * C484 - (C2632 * C480 + C2633 * C483) + C3393 * C481 -
            (C117 * C3814 + C51314 * C3817) * C485 -
            (C117 * C3818 + C51314 * C3820) * C482) *
               C51162 * C20038) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C51162 * C17436 +
           ((C5414 * C297 + C5411 * C311 + C5415 * C961 + C5412 * C966 +
             C5416 * C1299 + C5413 * C1303) *
                C118 +
            (C5414 * C310 + C5411 * C327 + C5415 * C967 + C5412 * C976 +
             C5416 * C1304 + C5413 * C1311) *
                C51217) *
               C51162 * C51352) *
              C51202 * C113 -
          (((C5642 + C5643 + C5644) * C51217 + (C5645 + C5646 + C5647) * C118) *
               C51162 * C51352 +
           ((C5459 + C5458 + C5457) * C51217 + (C5456 + C5455 + C5454) * C118) *
               C51162 * C17436) *
              C51202 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51217) *
               C51162 * C17436 +
           ((C6006 + C6007 + C6008) * C118 + (C6009 + C6010 + C6011) * C51217) *
               C51162 * C51352) *
              C51202 * C115 -
          (((C5416 * C1310 + C5413 * C1314 + C5415 * C973 + C5412 * C979 +
             C5414 * C304 + C5411 * C324) *
                C51217 +
            (C5416 * C1302 + C5413 * C1309 + C5415 * C964 + C5412 * C972 +
             C5414 * C294 + C5411 * C305) *
                C118) *
               C51162 * C51352 +
           ((C5471 + C5470 + C5469) * C51217 + (C5468 + C5467 + C5466) * C118) *
               C51162 * C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C289 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C290 +
           (((C22091 + C22090 + C22089) * C118 +
             (C22088 + C22087 + C22086) * C51217) *
                C51162 * C17436 +
            ((C5414 * C1188 + C5411 * C1196 + C5415 * C3349 + C5412 * C3352 +
              C5416 * C3813 + C5413 * C3815) *
                 C118 +
             (C5414 * C1195 + C5411 * C1200 + C5415 * C3353 + C5412 * C3358 +
              C5416 * C3816 + C5413 * C3819) *
                 C51217) *
                C51162 * C51352) *
               C291) *
              C292 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C290 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C289 -
           (((C5416 * C3818 + C5413 * C3820 + C5415 * C3355 + C5412 * C3359 +
              C5414 * C1193 + C5411 * C1199) *
                 C51217 +
             (C5416 * C3814 + C5413 * C3817 + C5415 * C3350 + C5412 * C3354 +
              C5414 * C1187 + C5411 * C1194) *
                 C118) *
                C51162 * C51352 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C51162 * C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C483 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C480 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C484 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C481 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C485 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C482) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C483 +
            (C22083 + C22084 + C22085) * C480 -
            (C5416 * C4778 + C5413 * C4782 + C5415 * C1299 + C5412 * C1303 +
             C5414 * C961 + C5411 * C966) *
                C484 -
            (C5416 * C4783 + C5413 * C4790 + C5415 * C1304 + C5412 * C1311 +
             C5414 * C967 + C5411 * C976) *
                C481 +
            (C5414 * C1299 + C5411 * C1303 + C5415 * C4778 + C5412 * C4782 +
             C5416 * C6781 + C5413 * C6783) *
                C485 +
            (C5414 * C1304 + C5411 * C1311 + C5415 * C4783 + C5412 * C4790 +
             C5416 * C6784 + C5413 * C6787) *
                C482) *
               C51162 * C51352) *
              C51202 * C292 +
          (((C5838 + C5837 + C5836) * C484 -
            ((C5459 + C5458 + C5457) * C480 + (C5456 + C5455 + C5454) * C483) +
            (C5841 + C5840 + C5839) * C481 - (C5844 + C5843 + C5842) * C485 -
            (C5847 + C5846 + C5845) * C482) *
               C51162 * C17436 +
           ((C6386 + C6387 + C6388) * C484 -
            ((C5642 + C5643 + C5644) * C480 + (C5645 + C5646 + C5647) * C483) +
            (C6389 + C6390 + C6391) * C481 -
            (C5416 * C6782 + C5413 * C6785 + C5415 * C4779 + C5412 * C4784 +
             C5414 * C1300 + C5411 * C1305) *
                C485 -
            (C5416 * C6786 + C5413 * C6788 + C5415 * C4785 + C5412 * C4791 +
             C5414 * C1306 + C5411 * C1312) *
                C482) *
               C51162 * C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
           C4351 * C51162 * C20037 +
           (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
              C51202 * C51486 +
          ((C806 - (C805 + C804) + C807) * C51162 * C20035 +
           C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
           (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
              C51202 * C51487 +
          (C830 * C51162 * C20035 + C8862 * C51162 * C20036 +
           (C3149 + C3148 - C3154 - C3155) * C51162 * C20037 +
           (C2638 * C797 + C2639 * C51444 -
            (C117 * C3351 + C51314 * C3356) * C798 -
            (C117 * C3357 + C51314 * C3360) * C51281) *
               C51162 * C20038) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
               C17436 +
           ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
            C8862 * C17435) *
               C51352) *
              C51202 * C51486 +
          (((C806 - (C805 + C804) + C807) * C17433 +
            (C810 - (C809 + C808) + C811) * C17434 +
            (C814 - (C813 + C812) + C815) * C17435) *
               C17436 +
           (C3400 * C17433 + C9059 * C17434 +
            (C1010 - (C996 + C997) + C1011) * C17435) *
               C51352) *
              C51202 * C51487 +
          ((C830 * C17433 + C831 * C17434 +
            (C819 + C818 - C828 - C829) * C17435) *
               C17436 +
           (C8862 * C17433 + (C997 + C996 - C1010 - C1011) * C17434 +
            (C694 * C797 + C695 * C51444 -
             (C117 * C965 + C51314 * C974) * C798 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C17435) *
               C51352) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C797 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51444 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C798 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C797 +
            (C22083 + C22084 + C22085) * C51444 -
            (C5416 * C4778 + C5413 * C4782 + C5415 * C1299 + C5412 * C1303 +
             C5414 * C961 + C5411 * C966) *
                C798 -
            (C5416 * C4783 + C5413 * C4790 + C5415 * C1304 + C5412 * C1311 +
             C5414 * C967 + C5411 * C976) *
                C51281) *
               C51162 * C51352) *
              C51202 * C51486 +
          (((C5838 + C5837 + C5836) * C798 -
            ((C5459 + C5458 + C5457) * C51444 +
             (C5456 + C5455 + C5454) * C797) +
            (C5841 + C5840 + C5839) * C51281) *
               C51162 * C17436 +
           ((C6386 + C6387 + C6388) * C798 -
            ((C5642 + C5643 + C5644) * C51444 +
             (C5645 + C5646 + C5647) * C797) +
            (C6389 + C6390 + C6391) * C51281) *
               C51162 * C51352) *
              C51202 * C51487 +
          (((C5465 + C5464 + C5463) * C797 + (C5462 + C5461 + C5460) * C51444 -
            (C6172 + C6171 + C6170) * C798 - (C6175 + C6174 + C6173) * C51281) *
               C51162 * C17436 +
           ((C6006 + C6007 + C6008) * C797 + (C6009 + C6010 + C6011) * C51444 -
            (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
             C5414 * C963 + C5411 * C970) *
                C798 -
            (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
             C5414 * C971 + C5411 * C978) *
                C51281) *
               C51162 * C51352) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C289 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C290 +
           ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
            ((C2649 + C2648) * C17433 + C2657 * C17434 +
             (C2652 + C2653) * C17435) *
                C51352) *
               C291) *
              C292 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C290 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C289 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C17435 +
             (C2653 + C2652) * C17434 + C2656 * C17433) *
                C51352 +
            ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C51202 * C113 -
          ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51202 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
               C51352) *
              C51202 * C115 -
          ((((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C17435 +
            (C697 + C696) * C17434 + C688 * C17433) *
               C51352 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C2655 * C51162 * C20037 +
           (C2649 + C2648) * C51162 * C20038) *
              C51202 * C113 -
          (C2656 * C51162 * C20038 + C2616 * C51162 * C20037 +
           C2617 * C51162 * C20036 + (C179 + C178) * C51162 * C20035) *
              C51202 * C114 +
          (C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
           C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
              C51202 * C115 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C51162 * C20038 +
           (C382 + C381) * C51162 * C20037 + C688 * C51162 * C20036 +
           C191 * C51162 * C20035) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C289 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C290 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            ((C117 * C3648 + C51314 * C3652) * C118 +
             (C117 * C3651 + C51314 * C3654) * C51217) *
                C51162 * C20038) *
               C291) *
              C292 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C290 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C289 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C51162 * C17436 +
           ((C5414 * C297 + C5411 * C311 + C5415 * C961 + C5412 * C966 +
             C5416 * C1299 + C5413 * C1303) *
                C118 +
            (C5414 * C310 + C5411 * C327 + C5415 * C967 + C5412 * C976 +
             C5416 * C1304 + C5413 * C1311) *
                C51217) *
               C51162 * C51352) *
              C51202 * C113 -
          (((C5642 + C5643 + C5644) * C51217 + (C5645 + C5646 + C5647) * C118) *
               C51162 * C51352 +
           ((C5459 + C5458 + C5457) * C51217 + (C5456 + C5455 + C5454) * C118) *
               C51162 * C17436) *
              C51202 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51217) *
               C51162 * C17436 +
           ((C6006 + C6007 + C6008) * C118 + (C6009 + C6010 + C6011) * C51217) *
               C51162 * C51352) *
              C51202 * C115 -
          (((C5416 * C1310 + C5413 * C1314 + C5415 * C973 + C5412 * C979 +
             C5414 * C304 + C5411 * C324) *
                C51217 +
            (C5416 * C1302 + C5413 * C1309 + C5415 * C964 + C5412 * C972 +
             C5414 * C294 + C5411 * C305) *
                C118) *
               C51162 * C51352 +
           ((C5471 + C5470 + C5469) * C51217 + (C5468 + C5467 + C5466) * C118) *
               C51162 * C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C289 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C290 +
           (((C22091 + C22090 + C22089) * C118 +
             (C22088 + C22087 + C22086) * C51217) *
                C51162 * C17436 +
            ((C5414 * C1188 + C5411 * C1196 + C5415 * C3349 + C5412 * C3352 +
              C5416 * C3813 + C5413 * C3815) *
                 C118 +
             (C5414 * C1195 + C5411 * C1200 + C5415 * C3353 + C5412 * C3358 +
              C5416 * C3816 + C5413 * C3819) *
                 C51217) *
                C51162 * C51352) *
               C291) *
              C292 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C290 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C289 -
           (((C5416 * C3818 + C5413 * C3820 + C5415 * C3355 + C5412 * C3359 +
              C5414 * C1193 + C5411 * C1199) *
                 C51217 +
             (C5416 * C3814 + C5413 * C3817 + C5415 * C3350 + C5412 * C3354 +
              C5414 * C1187 + C5411 * C1194) *
                 C118) *
                C51162 * C51352 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C51162 * C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C51488 -
           (C20741 * C20038 + C20736 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51489 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            (C20744 + C20745) * C51162 * C20038) *
               C1415) *
              C51435 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51489 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C51488 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C51488 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51489 +
           ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
            ((C2649 + C2648) * C17433 + C2657 * C17434 +
             (C2652 + C2653) * C17435) *
                C51352) *
               C1415) *
              C51435 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51489 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51488 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C17435 +
             (C2653 + C2652) * C17434 + C2656 * C17433) *
                C51352 +
            ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                C17436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C51488 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C51489 +
           (((C22091 + C22090 + C22089) * C118 +
             (C22088 + C22087 + C22086) * C51217) *
                C51162 * C17436 +
            ((C22998 + C22999 + C23000) * C118 +
             (C23001 + C23002 + C23003) * C51217) *
                C51162 * C51352) *
               C1415) *
              C51435 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C51489 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C51488 -
           (((C5416 * C3818 + C5413 * C3820 + C5415 * C3355 + C5412 * C3359 +
              C5414 * C1193 + C5411 * C1199) *
                 C51217 +
             (C5416 * C3814 + C5413 * C3817 + C5415 * C3350 + C5412 * C3354 +
              C5414 * C1187 + C5411 * C1194) *
                 C118) *
                C51162 * C51352 +
            ((C5653 + C5652 + C5651) * C51217 +
             (C5650 + C5649 + C5648) * C118) *
                C51162 * C17436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 + C21190 * C20037 +
           C21204 * C20038) *
              C51488 +
          ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
           (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
           (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
           (C21202 - (C21194 + C21195) + C21203) * C51162 * C20038) *
              C51489 +
          (C21190 * C20035 + C21204 * C20036 +
           (C21195 + C21194 - C21202 - C21203) * C51162 * C20037 +
           (C20742 * C797 + C20743 * C51444 -
            (C117 * C21185 + C51314 * C21186) * C798 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
               C17436 +
           ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
            C8862 * C17435) *
               C51352) *
              C51488 +
          (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
            C9059 * C17435) *
               C17436 +
           ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
            (C3154 - (C3148 + C3149) + C3155) * C17435) *
               C51352) *
              C51489 +
          ((C4351 * C17433 + C3399 * C17434 +
            (C3149 + C3148 - C3154 - C3155) * C17435) *
               C17436 +
           ((C4345 + C4344 - C4352 - C4353) * C17433 +
            (C3381 + C3380 - C3402 - C3403) * C17434 +
            (C2638 * C797 + C2639 * C51444 -
             (C117 * C3351 + C51314 * C3356) * C798 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C17435) *
               C51352) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C797 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51444 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C798 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C797 +
            (C22083 + C22084 + C22085) * C51444 -
            (C22736 + C22737 + C22738) * C798 -
            (C22739 + C22740 + C22741) * C51281) *
               C51162 * C51352) *
              C51488 +
          (((C22738 + C22737 + C22736) * C798 -
            ((C22085 + C22084 + C22083) * C51444 +
             (C22082 + C22081 + C22080) * C797) +
            (C22741 + C22740 + C22739) * C51281) *
               C51162 * C17436 +
           ((C23670 + C23671 + C23672) * C798 -
            ((C22086 + C22087 + C22088) * C51444 +
             (C22089 + C22090 + C22091) * C797) +
            (C23673 + C23674 + C23675) * C51281) *
               C51162 * C51352) *
              C51489 +
          (((C22091 + C22090 + C22089) * C797 +
            (C22088 + C22087 + C22086) * C51444 -
            (C23672 + C23671 + C23670) * C798 -
            (C23675 + C23674 + C23673) * C51281) *
               C51162 * C17436 +
           ((C22998 + C22999 + C23000) * C797 +
            (C23001 + C23002 + C23003) * C51444 -
            (C5416 * C21475 + C5413 * C21476 + C5415 * C3813 + C5412 * C3815 +
             C5414 * C3349 + C5411 * C3352) *
                C798 -
            (C5416 * C21477 + C5413 * C21478 + C5415 * C3816 + C5412 * C3819 +
             C5414 * C3353 + C5411 * C3358) *
                C51281) *
               C51162 * C51352) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51314 * C126) * C118 +
                  (C117 * C127 + C51314 * C140) * C51217) *
                     C17433 +
                 (C178 + C179) * C17434 + C188 * C17435) *
                    C17436 +
                ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                    C51352) *
                   C1109 -
               ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                    C51352 +
                (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                    C17436) *
                   C51253) *
                  C1111 +
              (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
                (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                    C51352) *
                   C51253 -
               ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
                (C191 * C17435 + (C181 + C180) * C17434 +
                 (C179 + C178) * C17433) *
                    C17436) *
                   C1109) *
                  C1112 +
              (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) *
                    C17436 +
                (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                    C51352) *
                   C1109 -
               ((((C117 * C322 + C51314 * C333) * C51217 +
                  (C117 * C303 + C51314 * C323) * C118) *
                     C17435 +
                 (C382 + C381) * C17434 + C2626 * C17433) *
                    C51352 +
                ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) *
                    C17436) *
                   C51253) *
                  C1113) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C118 +
                 (C117 * C127 + C51314 * C140) * C51217) *
                    C17433 +
                (C178 + C179) * C17434 + C188 * C17435) *
                   C17436 +
               ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                   C51352) *
                  C1180 -
              ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                   C51352 +
               (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                   C17436) *
                  C1181 +
              ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
               ((C2649 + C2648) * C17433 + C2657 * C17434 +
                (C2652 + C2653) * C17435) *
                   C51352) *
                  C1182 -
              ((((C117 * C2592 + C51314 * C2596) * C51217 +
                 (C117 * C2587 + C51314 * C2593) * C118) *
                    C17435 +
                (C2651 + C2650) * C17434 + (C3667 + C3666) * C17433) *
                   C51352 +
               ((C2653 + C2652) * C17435 + C2656 * C17434 + C3657 * C17433) *
                   C17436) *
                  C1183) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C17433 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C17434 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C17435) *
               C17436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C17433 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C17434 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C17435) *
               C51352) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C17433 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C17434 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C17435) *
               C17436 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C17433 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C17434 +
            (C3152 * C484 - (C368 * C480 + C367 * C483) + C3153 * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C17435) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C1109 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C1111 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C1109) *
              C1112 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C1109 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
           C20142 * C20038) *
              C1180 -
          (C20741 * C20038 + C20736 * C20037 +
           (C2645 + C2644) * C51162 * C20036 +
           (C2643 + C2642) * C51162 * C20035) *
              C1181 +
          (C20138 * C20035 + C20142 * C20036 +
           (C3666 + C3667) * C51162 * C20037 +
           (C20744 + C20745) * C51162 * C20038) *
              C1182 -
          (((C117 * C20731 + C51314 * C20733) * C51217 +
            (C117 * C20730 + C51314 * C20732) * C118) *
               C51162 * C20038 +
           (C20745 + C20744) * C51162 * C20037 + C20741 * C20036 +
           C20736 * C20035) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C51162 * C20035 +
           (C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51162 * C20036 +
           (C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51162 * C20037 +
           (C20848 + C20849 - C20850 - C20851 + C20858 + C20859) * C51162 *
               C20038) *
              C1109 +
          ((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C51162 * C20035 +
           (C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C51162 * C20036 +
           (C20850 - (C20849 + C20848) + C20851 - C20858 - C20859) * C51162 *
               C20037 +
           ((C117 * C4331 + C51314 * C4333) * C484 -
            (C3664 * C480 + C3663 * C483) +
            (C117 * C4334 + C51314 * C4337) * C481 -
            (C117 * C20843 + C51314 * C20844) * C485 -
            (C117 * C20845 + C51314 * C20846) * C482) *
               C51162 * C20038) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C1109 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C51253) *
              C1111 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C51253 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C1109) *
              C1112 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51217) *
                C51162 * C17436 +
            ((C6006 + C6007 + C6008) * C118 +
             (C6009 + C6010 + C6011) * C51217) *
                C51162 * C51352) *
               C1109 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51162 * C51352 +
            ((C6011 + C6010 + C6009) * C51217 +
             (C6008 + C6007 + C6006) * C118) *
                C51162 * C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C118 +
            (C22083 + C22084 + C22085) * C51217) *
               C51162 * C51352) *
              C1180 -
          (((C22086 + C22087 + C22088) * C51217 +
            (C22089 + C22090 + C22091) * C118) *
               C51162 * C51352 +
           ((C22085 + C22084 + C22083) * C51217 +
            (C22082 + C22081 + C22080) * C118) *
               C51162 * C17436) *
              C1181 +
          (((C22091 + C22090 + C22089) * C118 +
            (C22088 + C22087 + C22086) * C51217) *
               C51162 * C17436 +
           ((C22998 + C22999 + C23000) * C118 +
            (C23001 + C23002 + C23003) * C51217) *
               C51162 * C51352) *
              C1182 -
          (((C5416 * C20845 + C5413 * C20846 + C5415 * C4334 + C5412 * C4337 +
             C5414 * C2589 + C5411 * C2594) *
                C51217 +
            (C5416 * C20843 + C5413 * C20844 + C5415 * C4331 + C5412 * C4333 +
             C5414 * C2585 + C5411 * C2588) *
                C118) *
               C51162 * C51352 +
           ((C23003 + C23002 + C23001) * C51217 +
            (C23000 + C22999 + C22998) * C118) *
               C51162 * C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C483 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C480 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C484 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C481 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C485 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C482) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C483 +
            (C22083 + C22084 + C22085) * C480 -
            (C22736 + C22737 + C22738) * C484 -
            (C22739 + C22740 + C22741) * C481 +
            (C23166 + C23167 + C23168) * C485 +
            (C23169 + C23170 + C23171) * C482) *
               C51162 * C51352) *
              C1109 +
          (((C22738 + C22737 + C22736) * C484 -
            ((C22085 + C22084 + C22083) * C480 +
             (C22082 + C22081 + C22080) * C483) +
            (C22741 + C22740 + C22739) * C481 -
            (C23168 + C23167 + C23166) * C485 -
            (C23171 + C23170 + C23169) * C482) *
               C51162 * C17436 +
           ((C5414 * C1646 + C5411 * C1650 + C5415 * C2805 + C5412 * C2808 +
             C5416 * C4780 + C5413 * C4786) *
                C484 -
            ((C22086 + C22087 + C22088) * C480 +
             (C22089 + C22090 + C22091) * C483) +
            (C5414 * C1651 + C5411 * C1658 + C5415 * C2809 + C5412 * C2814 +
             C5416 * C4787 + C5413 * C4792) *
                C481 -
            (C5416 * C23149 + C5413 * C23150 + C5415 * C4780 + C5412 * C4786 +
             C5414 * C2805 + C5411 * C2808) *
                C485 -
            (C5416 * C23151 + C5413 * C23152 + C5415 * C4787 + C5412 * C4792 +
             C5414 * C2809 + C5411 * C2814) *
                C482) *
               C51162 * C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
            C4351 * C51162 * C20037 +
            (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
               C1109 +
           ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
            (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
            (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
            ((C117 * C4331 + C51314 * C4333) * C798 -
             (C3664 * C51444 + C3663 * C797) +
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51435 +
          (((C806 - (C805 + C804) + C807) * C51162 * C20035 +
            C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
            (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
               C1109 +
           (C3396 * C51162 * C20035 + C3399 * C51162 * C20036 +
            (C3381 + C3380 - C3402 - C3403) * C51162 * C20037 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
                C17436 +
            ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
             C8862 * C17435) *
                C51352) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
             C9059 * C17435) *
                C17436 +
            ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
             (C3154 - (C3148 + C3149) + C3155) * C17435) *
                C51352) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C17433 +
             (C810 - (C809 + C808) + C811) * C17434 +
             (C814 - (C813 + C812) + C815) * C17435) *
                C17436 +
            (C3400 * C17433 + C9059 * C17434 +
             (C1010 - (C996 + C997) + C1011) * C17435) *
                C51352) *
               C1109 +
           ((C3396 * C17433 + C8862 * C17434 +
             (C997 + C996 - C1010 - C1011) * C17435) *
                C17436 +
            (C3399 * C17433 + (C3149 + C3148 - C3154 - C3155) * C17434 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C797 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51444 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C798 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C797 +
             (C22083 + C22084 + C22085) * C51444 -
             (C22736 + C22737 + C22738) * C798 -
             (C22739 + C22740 + C22741) * C51281) *
                C51162 * C51352) *
               C1109 +
           (((C22738 + C22737 + C22736) * C798 -
             ((C22085 + C22084 + C22083) * C51444 +
              (C22082 + C22081 + C22080) * C797) +
             (C22741 + C22740 + C22739) * C51281) *
                C51162 * C17436 +
            ((C5414 * C1646 + C5411 * C1650 + C5415 * C2805 + C5412 * C2808 +
              C5416 * C4780 + C5413 * C4786) *
                 C798 -
             ((C22086 + C22087 + C22088) * C51444 +
              (C22089 + C22090 + C22091) * C797) +
             (C5414 * C1651 + C5411 * C1658 + C5415 * C2809 + C5412 * C2814 +
              C5416 * C4787 + C5413 * C4792) *
                 C51281) *
                C51162 * C51352) *
               C51253) *
              C51435 +
          ((((C5838 + C5837 + C5836) * C798 -
             ((C5459 + C5458 + C5457) * C51444 +
              (C5456 + C5455 + C5454) * C797) +
             (C5841 + C5840 + C5839) * C51281) *
                C51162 * C17436 +
            ((C6386 + C6387 + C6388) * C798 -
             ((C5642 + C5643 + C5644) * C51444 +
              (C5645 + C5646 + C5647) * C797) +
             (C6389 + C6390 + C6391) * C51281) *
                C51162 * C51352) *
               C1109 +
           (((C5647 + C5646 + C5645) * C797 + (C5644 + C5643 + C5642) * C51444 -
             (C6388 + C6387 + C6386) * C798 -
             (C6391 + C6390 + C6389) * C51281) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C797 + (C5651 + C5652 + C5653) * C51444 -
             (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
              C5414 * C1647 + C5411 * C1652) *
                 C798 -
             (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
              C5414 * C1653 + C5411 * C1659) *
                 C51281) *
                C51162 * C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C1180 -
          ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
               C51352 +
           (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
               C17436) *
              C1181 +
          ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
           ((C2649 + C2648) * C17433 + C2657 * C17434 +
            (C2652 + C2653) * C17435) *
               C51352) *
              C1182 -
          ((((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C17435 +
            (C2651 + C2650) * C17434 + (C3667 + C3666) * C17433) *
               C51352 +
           ((C2653 + C2652) * C17435 + C2656 * C17434 + C3657 * C17433) *
               C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C1109 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51253) *
              C1111 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51253 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C1109) *
              C1112 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                C51352) *
               C1109 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C17435 +
             (C382 + C381) * C17434 + C2626 * C17433) *
                C51352 +
            ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) * C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C1109 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C1111 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C1109) *
              C1112 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C1109 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
           C20142 * C20038) *
              C1180 -
          (C20741 * C20038 + C20736 * C20037 +
           (C2645 + C2644) * C51162 * C20036 +
           (C2643 + C2642) * C51162 * C20035) *
              C1181 +
          (C20138 * C20035 + C20142 * C20036 +
           (C3666 + C3667) * C51162 * C20037 +
           (C20744 + C20745) * C51162 * C20038) *
              C1182 -
          (((C117 * C20731 + C51314 * C20733) * C51217 +
            (C117 * C20730 + C51314 * C20732) * C118) *
               C51162 * C20038 +
           (C20745 + C20744) * C51162 * C20037 + C20741 * C20036 +
           C20736 * C20035) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C51217) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C118 +
             (C22083 + C22084 + C22085) * C51217) *
                C51162 * C51352) *
               C1109 -
           (((C22086 + C22087 + C22088) * C51217 +
             (C22089 + C22090 + C22091) * C118) *
                C51162 * C51352 +
            ((C22085 + C22084 + C22083) * C51217 +
             (C22082 + C22081 + C22080) * C118) *
                C51162 * C17436) *
               C51253) *
              C1111 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51217) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51217) *
                C51162 * C51352) *
               C51253 -
           (((C5642 + C5643 + C5644) * C51217 +
             (C5645 + C5646 + C5647) * C118) *
                C51162 * C51352 +
            ((C5459 + C5458 + C5457) * C51217 +
             (C5456 + C5455 + C5454) * C118) *
                C51162 * C17436) *
               C1109) *
              C1112 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51217) *
                C51162 * C17436 +
            ((C6006 + C6007 + C6008) * C118 +
             (C6009 + C6010 + C6011) * C51217) *
                C51162 * C51352) *
               C1109 -
           (((C5416 * C2813 + C5413 * C2816 + C5415 * C1655 + C5412 * C1660 +
              C5414 * C317 + C5411 * C330) *
                 C51217 +
             (C5416 * C2807 + C5413 * C2812 + C5415 * C1648 + C5412 * C1654 +
              C5414 * C300 + C5411 * C316) *
                 C118) *
                C51162 * C51352 +
            ((C6011 + C6010 + C6009) * C51217 +
             (C6008 + C6007 + C6006) * C118) *
                C51162 * C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51217) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C118 +
            (C22083 + C22084 + C22085) * C51217) *
               C51162 * C51352) *
              C1180 -
          (((C22086 + C22087 + C22088) * C51217 +
            (C22089 + C22090 + C22091) * C118) *
               C51162 * C51352 +
           ((C22085 + C22084 + C22083) * C51217 +
            (C22082 + C22081 + C22080) * C118) *
               C51162 * C17436) *
              C1181 +
          (((C22091 + C22090 + C22089) * C118 +
            (C22088 + C22087 + C22086) * C51217) *
               C51162 * C17436 +
           ((C22998 + C22999 + C23000) * C118 +
            (C23001 + C23002 + C23003) * C51217) *
               C51162 * C51352) *
              C1182 -
          (((C5416 * C20845 + C5413 * C20846 + C5415 * C4334 + C5412 * C4337 +
             C5414 * C2589 + C5411 * C2594) *
                C51217 +
            (C5416 * C20843 + C5413 * C20844 + C5415 * C4331 + C5412 * C4333 +
             C5414 * C2585 + C5411 * C2588) *
                C118) *
               C51162 * C51352 +
           ((C23003 + C23002 + C23001) * C51217 +
            (C23000 + C22999 + C22998) * C118) *
               C51162 * C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
            C21401 * C20037 + C21409 * C20038) *
               C51443 +
           ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
            (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
            (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
            (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
               C51253) *
              C51435 +
          (((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
            C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
            (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
               C51443 +
           (C4995 * C51162 * C20035 + C4676 * C51162 * C20036 +
            (C4671 + C4670 - C4669 - C4672) * C51162 * C20037 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
                C17436 +
            ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
             C10084 * C17435) *
                C51352) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
             C10525 * C17435) *
                C17436 +
            ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
             (C4506 - (C4507 + C4508) + C4509) * C17435) *
                C51352) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C17433 +
             (C1771 - (C1770 + C1769) + C1772) * C17434 +
             (C1775 - (C1774 + C1773) + C1776) * C17435) *
                C17436 +
            (C4996 * C17433 + C10525 * C17434 +
             (C2113 - (C2114 + C2115) + C2116) * C17435) *
                C51352) *
               C51443 +
           ((C4995 * C17433 + C10084 * C17434 +
             (C2115 + C2114 - C2113 - C2116) * C17435) *
                C17436 +
            (C4676 * C17433 + (C4508 + C4507 - C4506 - C4509) * C17434 +
             (C369 * C1762 + C370 * C1760 -
              (C117 * C1649 + C51314 * C1656) * C1763 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
              C5416 * C487 + C5413 * C498) *
                 C1762 +
             (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
              C5416 * C499 + C5413 * C517) *
                 C1760 -
             (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
              C5414 * C486 + C5411 * C496) *
                 C1763 -
             (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
              C5414 * C497 + C5411 * C516) *
                 C51281) *
                C51162 * C17436 +
            ((C22080 + C22081 + C22082) * C1762 +
             (C22083 + C22084 + C22085) * C1760 -
             (C22736 + C22737 + C22738) * C1763 -
             (C22739 + C22740 + C22741) * C51281) *
                C51162 * C51352) *
               C51443 +
           (((C22738 + C22737 + C22736) * C1763 -
             ((C22085 + C22084 + C22083) * C1760 +
              (C22082 + C22081 + C22080) * C1762) +
             (C22741 + C22740 + C22739) * C51281) *
                C51162 * C17436 +
            ((C23670 + C23671 + C23672) * C1763 -
             ((C22086 + C22087 + C22088) * C1760 +
              (C22089 + C22090 + C22091) * C1762) +
             (C23673 + C23674 + C23675) * C51281) *
                C51162 * C51352) *
               C51253) *
              C51435 +
          ((((C5838 + C5837 + C5836) * C1763 -
             ((C5459 + C5458 + C5457) * C1760 +
              (C5456 + C5455 + C5454) * C1762) +
             (C5841 + C5840 + C5839) * C51281) *
                C51162 * C17436 +
            ((C6386 + C6387 + C6388) * C1763 -
             ((C5642 + C5643 + C5644) * C1760 +
              (C5645 + C5646 + C5647) * C1762) +
             (C6389 + C6390 + C6391) * C51281) *
                C51162 * C51352) *
               C51443 +
           (((C5647 + C5646 + C5645) * C1762 + (C5644 + C5643 + C5642) * C1760 -
             (C6388 + C6387 + C6386) * C1763 -
             (C6391 + C6390 + C6389) * C51281) *
                C51162 * C17436 +
            ((C5648 + C5649 + C5650) * C1762 + (C5651 + C5652 + C5653) * C1760 -
             (C5416 * C4781 + C5413 * C4788 + C5415 * C2806 + C5412 * C2810 +
              C5414 * C1647 + C5411 * C1652) *
                 C1763 -
             (C5416 * C4789 + C5413 * C4793 + C5415 * C2811 + C5412 * C2815 +
              C5414 * C1653 + C5411 * C1659) *
                 C51281) *
                C51162 * C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C51162 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51162 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51162 * C20037 +
           (C21806 + C21807 - C21808 - C21809 + C21810 + C21811) * C51162 *
               C20038) *
              C51443 +
          ((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51162 * C20035 +
           (C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51162 * C20036 +
           (C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51162 *
               C20037 +
           (C21199 * C2218 - (C3664 * C51490 + C3663 * C2217) +
            C21200 * C51491 - (C117 * C20843 + C51314 * C20844) * C2219 -
            (C117 * C20845 + C51314 * C20846) * C2216) *
               C51162 * C20038) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C17433 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C17434 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C17434 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C17435) *
               C51352) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C17433 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C17434 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C17435) *
               C17436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C17433 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C17434 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C17435) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C2217 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51490 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C2218 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51491 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C2219 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C2216) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C2217 +
            (C22083 + C22084 + C22085) * C51490 -
            (C22736 + C22737 + C22738) * C2218 -
            (C22739 + C22740 + C22741) * C51491 +
            (C23166 + C23167 + C23168) * C2219 +
            (C23169 + C23170 + C23171) * C2216) *
               C51162 * C51352) *
              C51443 +
          (((C22738 + C22737 + C22736) * C2218 -
            ((C22085 + C22084 + C22083) * C51490 +
             (C22082 + C22081 + C22080) * C2217) +
            (C22741 + C22740 + C22739) * C51491 -
            (C23168 + C23167 + C23166) * C2219 -
            (C23171 + C23170 + C23169) * C2216) *
               C51162 * C17436 +
           ((C23670 + C23671 + C23672) * C2218 -
            ((C22086 + C22087 + C22088) * C51490 +
             (C22089 + C22090 + C22091) * C2217) +
            (C23673 + C23674 + C23675) * C51491 -
            (C5416 * C23149 + C5413 * C23150 + C5415 * C4780 + C5412 * C4786 +
             C5414 * C2805 + C5411 * C2808) *
                C2219 -
            (C5416 * C23151 + C5413 * C23152 + C5415 * C4787 + C5412 * C4792 +
             C5414 * C2809 + C5411 * C2814) *
                C2216) *
               C51162 * C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C1762 +
                 (C117 * C127 + C51314 * C140) * C1760 -
                 (C117 * C486 + C51314 * C496) * C1763 -
                 (C117 * C497 + C51314 * C516) * C51281) *
                    C17433 +
                (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
                   C17436 +
               ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
                C10084 * C17435) *
                   C51352) *
                  C51202 * C1111 +
              (((C1767 - (C1766 + C1765) + C1768) * C17433 +
                (C1771 - (C1770 + C1769) + C1772) * C17434 +
                (C1775 - (C1774 + C1773) + C1776) * C17435) *
                   C17436 +
               (C4996 * C17433 + C10525 * C17434 +
                (C2113 - (C2114 + C2115) + C2116) * C17435) *
                   C51352) *
                  C51202 * C1112 +
              ((C1785 * C17433 + C1786 * C17434 +
                (C1779 + C1778 - C1777 - C1780) * C17435) *
                   C17436 +
               (C10084 * C17433 + (C2115 + C2114 - C2113 - C2116) * C17434 +
                (C694 * C1762 + C695 * C1760 -
                 (C117 * C965 + C51314 * C974) * C1763 -
                 (C117 * C975 + C51314 * C980) * C51281) *
                    C17435) *
                   C51352) *
                  C51202 * C1113) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51314 * C126) * C1762 +
                 (C117 * C127 + C51314 * C140) * C1760 -
                 (C117 * C486 + C51314 * C496) * C1763 -
                 (C117 * C497 + C51314 * C516) * C51281) *
                    C17433 +
                (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
                   C17436 +
               ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
                C10084 * C17435) *
                   C51352) *
                  C289 +
              (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
                C10525 * C17435) *
                   C17436 +
               ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
                (C4506 - (C4507 + C4508) + C4509) * C17435) *
                   C51352) *
                  C290 +
              ((C4677 * C17433 + C4676 * C17434 +
                (C4508 + C4507 - C4506 - C4509) * C17435) *
                   C17436 +
               ((C4667 + C4666 - C4665 - C4668) * C17433 +
                (C4671 + C4670 - C4669 - C4672) * C17434 +
                (C2638 * C1762 + C2639 * C1760 -
                 (C117 * C3351 + C51314 * C3356) * C1763 -
                 (C117 * C3357 + C51314 * C3360) * C51281) *
                    C17435) *
                   C51352) *
                  C291) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C17433 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C17434 +
           (C170 * C1954 + C171 * C1950 - C561 * C1955 - C562 * C1951 +
            C563 * C1956 + C564 * C1952 -
            (C117 * C1960 + C51314 * C1966) * C1957 -
            (C117 * C1967 + C51314 * C1972) * C1953) *
               C17435) *
              C17436 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C17433 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C17434 +
           (C362 * C1954 + C361 * C1950 - C1002 * C1955 - C1003 * C1951 +
            C8563 * C1956 + C8564 * C1952 -
            (C117 * C6369 + C51314 * C6370) * C1957 -
            (C117 * C6371 + C51314 * C6372) * C1953) *
               C17435) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
           C4677 * C51162 * C20037 +
           (C4667 + C4666 - C4665 - C4668) * C51162 * C20038) *
              C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
           C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
           (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
              C51202 * C1112 +
          (C1785 * C51162 * C20035 + C10084 * C51162 * C20036 +
           (C4508 + C4507 - C4506 - C4509) * C51162 * C20037 +
           (C2638 * C1762 + C2639 * C1760 -
            (C117 * C3351 + C51314 * C3356) * C1763 -
            (C117 * C3357 + C51314 * C3360) * C51281) *
               C51162 * C20038) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 + C21401 * C20037 +
           C21409 * C20038) *
              C289 +
          ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
           (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
           (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
           (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
              C290 +
          (C21401 * C20035 + C21409 * C20036 +
           (C21405 + C21404 - C21403 - C21406) * C51162 * C20037 +
           (C20742 * C1762 + C20743 * C1760 -
            (C117 * C21185 + C51314 * C21186) * C1763 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51314 * C126) * C1954 +
           (C117 * C127 + C51314 * C140) * C1950 -
           (C117 * C486 + C51314 * C496) * C1955 -
           (C117 * C497 + C51314 * C516) * C1951 +
           (C117 * C487 + C51314 * C498) * C1956 +
           (C117 * C499 + C51314 * C517) * C1952 -
           (C117 * C1958 + C51314 * C1962) * C1957 -
           (C117 * C1963 + C51314 * C1970) * C1953) *
              C51162 * C20035 +
          (C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
           C3838 * C1956 + C3839 * C1952 -
           (C117 * C4778 + C51314 * C4782) * C1957 -
           (C117 * C4783 + C51314 * C4790) * C1953) *
              C51162 * C20036 +
          (C2629 * C1954 + C2630 * C1950 - C3387 * C1955 - C3388 * C1951 +
           C3840 * C1956 + C3841 * C1952 -
           (C117 * C4780 + C51314 * C4786) * C1957 -
           (C117 * C4787 + C51314 * C4792) * C1953) *
              C51162 * C20037 +
          (C2635 * C1954 + C2634 * C1950 - C4349 * C1955 - C4350 * C1951 +
           C20856 * C1956 + C20857 * C1952 -
           (C117 * C21475 + C51314 * C21476) * C1957 -
           (C117 * C21477 + C51314 * C21478) * C1953) *
              C51162 * C20038) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C1762 +
            (C22083 + C22084 + C22085) * C1760 -
            (C22736 + C22737 + C22738) * C1763 -
            (C22739 + C22740 + C22741) * C51281) *
               C51162 * C51352) *
              C51202 * C1111 +
          (((C5838 + C5837 + C5836) * C1763 -
            ((C5459 + C5458 + C5457) * C1760 +
             (C5456 + C5455 + C5454) * C1762) +
            (C5841 + C5840 + C5839) * C51281) *
               C51162 * C17436 +
           ((C6386 + C6387 + C6388) * C1763 -
            ((C5642 + C5643 + C5644) * C1760 +
             (C5645 + C5646 + C5647) * C1762) +
            (C6389 + C6390 + C6391) * C51281) *
               C51162 * C51352) *
              C51202 * C1112 +
          (((C5465 + C5464 + C5463) * C1762 + (C5462 + C5461 + C5460) * C1760 -
            (C6172 + C6171 + C6170) * C1763 -
            (C6175 + C6174 + C6173) * C51281) *
               C51162 * C17436 +
           ((C6006 + C6007 + C6008) * C1762 + (C6009 + C6010 + C6011) * C1760 -
            (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
             C5414 * C963 + C5411 * C970) *
                C1763 -
            (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
             C5414 * C971 + C5411 * C978) *
                C51281) *
               C51162 * C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C1762 +
            (C22083 + C22084 + C22085) * C1760 -
            (C22736 + C22737 + C22738) * C1763 -
            (C22739 + C22740 + C22741) * C51281) *
               C51162 * C51352) *
              C289 +
          (((C22738 + C22737 + C22736) * C1763 -
            ((C22085 + C22084 + C22083) * C1760 +
             (C22082 + C22081 + C22080) * C1762) +
            (C22741 + C22740 + C22739) * C51281) *
               C51162 * C17436 +
           ((C23670 + C23671 + C23672) * C1763 -
            ((C22086 + C22087 + C22088) * C1760 +
             (C22089 + C22090 + C22091) * C1762) +
            (C23673 + C23674 + C23675) * C51281) *
               C51162 * C51352) *
              C290 +
          (((C22091 + C22090 + C22089) * C1762 +
            (C22088 + C22087 + C22086) * C1760 -
            (C23672 + C23671 + C23670) * C1763 -
            (C23675 + C23674 + C23673) * C51281) *
               C51162 * C17436 +
           ((C22998 + C22999 + C23000) * C1762 +
            (C23001 + C23002 + C23003) * C1760 -
            (C5416 * C21475 + C5413 * C21476 + C5415 * C3813 + C5412 * C3815 +
             C5414 * C3349 + C5411 * C3352) *
                C1763 -
            (C5416 * C21477 + C5413 * C21478 + C5415 * C3816 + C5412 * C3819 +
             C5414 * C3353 + C5411 * C3358) *
                C51281) *
               C51162 * C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
            C5416 * C487 + C5413 * C498) *
               C1954 +
           (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
            C5416 * C499 + C5413 * C517) *
               C1950 -
           (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
            C5414 * C486 + C5411 * C496) *
               C1955 -
           (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
            C5414 * C497 + C5411 * C516) *
               C1951 +
           (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
            C5416 * C5799 + C5413 * C5802) *
               C1956 +
           (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
            C5416 * C5803 + C5413 * C5808) *
               C1952 -
           (C5416 * C7665 + C5413 * C7667 + C5415 * C5799 + C5412 * C5802 +
            C5414 * C1958 + C5411 * C1962) *
               C1957 -
           (C5416 * C7668 + C5413 * C7671 + C5415 * C5803 + C5412 * C5808 +
            C5414 * C1963 + C5411 * C1970) *
               C1953) *
              C51162 * C17436 +
          ((C22080 + C22081 + C22082) * C1954 +
           (C22083 + C22084 + C22085) * C1950 -
           (C22736 + C22737 + C22738) * C1955 -
           (C22739 + C22740 + C22741) * C1951 +
           (C23166 + C23167 + C23168) * C1956 +
           (C23169 + C23170 + C23171) * C1952 -
           (C5416 * C24065 + C5413 * C24066 + C5415 * C6781 + C5412 * C6783 +
            C5414 * C4778 + C5411 * C4782) *
               C1957 -
           (C5416 * C24067 + C5413 * C24068 + C5415 * C6784 + C5412 * C6787 +
            C5414 * C4783 + C5411 * C4790) *
               C1953) *
              C51162 * C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C51162 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51162 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51162 * C20037 +
           (C2635 * C2217 + C2634 * C51490 - C4349 * C2218 - C4350 * C51491 +
            C20856 * C2219 + C20857 * C2216) *
               C51162 * C20038) *
              C51202 * C51435 +
          ((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C51162 * C20035 +
           (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51162 * C20036 +
           (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51162 * C20037 +
           (C3392 * C2218 - (C2632 * C51490 + C2633 * C2217) + C3393 * C51491 -
            (C117 * C3814 + C51314 * C3817) * C2219 -
            (C117 * C3818 + C51314 * C3820) * C2216) *
               C51162 * C20038) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C17433 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C17434 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C17434 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C17435) *
               C51352) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C17433 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C17434 +
            (C2235 - (C2234 + C2233) + C2236 - C2237 - C2238) * C17435) *
               C17436 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C17433 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C17434 +
            (C1004 * C2218 - (C359 * C51490 + C360 * C2217) + C1005 * C51491 -
             (C117 * C1302 + C51314 * C1309) * C2219 -
             (C117 * C1310 + C51314 * C1314) * C2216) *
                C17435) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C2217 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C51490 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C2218 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51491 +
            (C5414 * C487 + C5411 * C498 + C5415 * C1958 + C5412 * C1962 +
             C5416 * C5799 + C5413 * C5802) *
                C2219 +
            (C5414 * C499 + C5411 * C517 + C5415 * C1963 + C5412 * C1970 +
             C5416 * C5803 + C5413 * C5808) *
                C2216) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C2217 +
            (C22083 + C22084 + C22085) * C51490 -
            (C22736 + C22737 + C22738) * C2218 -
            (C22739 + C22740 + C22741) * C51491 +
            (C23166 + C23167 + C23168) * C2219 +
            (C23169 + C23170 + C23171) * C2216) *
               C51162 * C51352) *
              C51202 * C51435 +
          (((C5838 + C5837 + C5836) * C2218 -
            ((C5459 + C5458 + C5457) * C51490 +
             (C5456 + C5455 + C5454) * C2217) +
            (C5841 + C5840 + C5839) * C51491 - (C5844 + C5843 + C5842) * C2219 -
            (C5847 + C5846 + C5845) * C2216) *
               C51162 * C17436 +
           ((C6386 + C6387 + C6388) * C2218 -
            ((C5642 + C5643 + C5644) * C51490 +
             (C5645 + C5646 + C5647) * C2217) +
            (C6389 + C6390 + C6391) * C51491 -
            (C5416 * C6782 + C5413 * C6785 + C5415 * C4779 + C5412 * C4784 +
             C5414 * C1300 + C5411 * C1305) *
                C2219 -
            (C5416 * C6786 + C5413 * C6788 + C5415 * C4785 + C5412 * C4791 +
             C5414 * C1306 + C5411 * C1312) *
                C2216) *
               C51162 * C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
            C10525 * C17435) *
               C17436 +
           ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
            (C4506 - (C4507 + C4508) + C4509) * C17435) *
               C51352) *
              C290 +
          ((C4677 * C17433 + C4676 * C17434 +
            (C4508 + C4507 - C4506 - C4509) * C17435) *
               C17436 +
           ((C4667 + C4666 - C4665 - C4668) * C17433 +
            (C4671 + C4670 - C4669 - C4672) * C17434 +
            (C2638 * C1762 + C2639 * C1760 -
             (C117 * C3351 + C51314 * C3356) * C1763 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C17435) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C17433 +
            (C1771 - (C1770 + C1769) + C1772) * C17434 +
            (C1775 - (C1774 + C1773) + C1776) * C17435) *
               C17436 +
           (C4996 * C17433 + C10525 * C17434 +
            (C2113 - (C2114 + C2115) + C2116) * C17435) *
               C51352) *
              C51202 * C1112 +
          ((C1785 * C17433 + C1786 * C17434 +
            (C1779 + C1778 - C1777 - C1780) * C17435) *
               C17436 +
           (C10084 * C17433 + (C2115 + C2114 - C2113 - C2116) * C17434 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C17435) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
           C4677 * C51162 * C20037 +
           (C4667 + C4666 - C4665 - C4668) * C51162 * C20038) *
              C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
           C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
           (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
              C51202 * C1112 +
          (C1785 * C51162 * C20035 + C10084 * C51162 * C20036 +
           (C4508 + C4507 - C4506 - C4509) * C51162 * C20037 +
           (C2638 * C1762 + C2639 * C1760 -
            (C117 * C3351 + C51314 * C3356) * C1763 -
            (C117 * C3357 + C51314 * C3360) * C51281) *
               C51162 * C20038) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 + C21401 * C20037 +
           C21409 * C20038) *
              C289 +
          ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
           (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
           (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
           (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
              C290 +
          (C21401 * C20035 + C21409 * C20036 +
           (C21405 + C21404 - C21403 - C21406) * C51162 * C20037 +
           (C20742 * C1762 + C20743 * C1760 -
            (C117 * C21185 + C51314 * C21186) * C1763 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C1762 +
            (C22083 + C22084 + C22085) * C1760 -
            (C22736 + C22737 + C22738) * C1763 -
            (C22739 + C22740 + C22741) * C51281) *
               C51162 * C51352) *
              C51202 * C1111 +
          (((C5838 + C5837 + C5836) * C1763 -
            ((C5459 + C5458 + C5457) * C1760 +
             (C5456 + C5455 + C5454) * C1762) +
            (C5841 + C5840 + C5839) * C51281) *
               C51162 * C17436 +
           ((C6386 + C6387 + C6388) * C1763 -
            ((C5642 + C5643 + C5644) * C1760 +
             (C5645 + C5646 + C5647) * C1762) +
            (C6389 + C6390 + C6391) * C51281) *
               C51162 * C51352) *
              C51202 * C1112 +
          (((C5465 + C5464 + C5463) * C1762 + (C5462 + C5461 + C5460) * C1760 -
            (C6172 + C6171 + C6170) * C1763 -
            (C6175 + C6174 + C6173) * C51281) *
               C51162 * C17436 +
           ((C6006 + C6007 + C6008) * C1762 + (C6009 + C6010 + C6011) * C1760 -
            (C5416 * C6369 + C5413 * C6370 + C5415 * C1301 + C5412 * C1307 +
             C5414 * C963 + C5411 * C970) *
                C1763 -
            (C5416 * C6371 + C5413 * C6372 + C5415 * C1308 + C5412 * C1313 +
             C5414 * C971 + C5411 * C978) *
                C51281) *
               C51162 * C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C486 + C5412 * C496 +
             C5416 * C487 + C5413 * C498) *
                C1762 +
            (C5414 * C127 + C5411 * C140 + C5415 * C497 + C5412 * C516 +
             C5416 * C499 + C5413 * C517) *
                C1760 -
            (C5416 * C1958 + C5413 * C1962 + C5415 * C487 + C5412 * C498 +
             C5414 * C486 + C5411 * C496) *
                C1763 -
            (C5416 * C1963 + C5413 * C1970 + C5415 * C499 + C5412 * C517 +
             C5414 * C497 + C5411 * C516) *
                C51281) *
               C51162 * C17436 +
           ((C22080 + C22081 + C22082) * C1762 +
            (C22083 + C22084 + C22085) * C1760 -
            (C22736 + C22737 + C22738) * C1763 -
            (C22739 + C22740 + C22741) * C51281) *
               C51162 * C51352) *
              C289 +
          (((C22738 + C22737 + C22736) * C1763 -
            ((C22085 + C22084 + C22083) * C1760 +
             (C22082 + C22081 + C22080) * C1762) +
            (C22741 + C22740 + C22739) * C51281) *
               C51162 * C17436 +
           ((C23670 + C23671 + C23672) * C1763 -
            ((C22086 + C22087 + C22088) * C1760 +
             (C22089 + C22090 + C22091) * C1762) +
            (C23673 + C23674 + C23675) * C51281) *
               C51162 * C51352) *
              C290 +
          (((C22091 + C22090 + C22089) * C1762 +
            (C22088 + C22087 + C22086) * C1760 -
            (C23672 + C23671 + C23670) * C1763 -
            (C23675 + C23674 + C23673) * C51281) *
               C51162 * C17436 +
           ((C22998 + C22999 + C23000) * C1762 +
            (C23001 + C23002 + C23003) * C1760 -
            (C5416 * C21475 + C5413 * C21476 + C5415 * C3813 + C5412 * C3815 +
             C5414 * C3349 + C5411 * C3352) *
                C1763 -
            (C5416 * C21477 + C5413 * C21478 + C5415 * C3816 + C5412 * C3819 +
             C5414 * C3353 + C5411 * C3358) *
                C51281) *
               C51162 * C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C51443 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C51253) *
              C51486 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C51443) *
              C51487 +
          (((C10982 * C51428 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C17436 +
            (C14463 * C51428 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C51443 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51428) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C51428) *
                C17436) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C797 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51444 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C798 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C51428 +
             ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
              (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                 C51167) *
                C17436 +
            (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
              (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                 C51428 +
             C14956 * C51167) *
                C51352) *
               C51443 +
           ((((C14941 + C14940) * C798 -
              ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
              (C14943 + C14942) * C51281) *
                 C51428 +
             C14957 * C51167) *
                C17436 +
            (((C16154 + C16155) * C798 -
              ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
              (C16156 + C16157) * C51281) *
                 C51428 +
             ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C292 +
          (((((C11357 + C11356) * C798 -
              ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
              (C11359 + C11358) * C51281) *
                 C51428 +
             ((C11365 + C11364) * C798 -
              ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C17436 +
            (C14957 * C51428 +
             ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C14956 * C51428 +
             (C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C17436 +
            ((C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
              (C14953 + C14952) * C51281) *
                 C51428 +
             ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C798 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C289 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C290 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51428 +
             C14058 * C51167) *
                C17436 +
            (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51428 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C289 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51428) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C51428) *
                C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C17436 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
            C14055 * C51167) *
               C51352) *
              C51202 * C113 -
          ((C11534 * C51167 + C14057 * C51428) * C51352 +
           (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
               C17436) *
              C51202 * C114 +
          ((C10982 * C51428 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
               C17436 +
           (C14463 * C51428 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C51167 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51428) *
               C51352 +
           (((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51167 +
            C10983 * C51428) *
               C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C483 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C480 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C484 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C481 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C485 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C482) *
                C51428 +
            ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
             (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
             (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
             (C14940 + C14941) * C484 - (C14942 + C14943) * C481 +
             (C15496 + C15497) * C485 + (C15498 + C15499) * C482) *
                C51428 +
            (C14011 * C483 + C14012 * C480 - C14926 * C484 - C14927 * C481 +
             (C14261 + C14262) * C485 + (C14263 + C14264) * C482) *
                C51167) *
               C51352) *
              C51202 * C292 +
          ((((C11357 + C11356) * C484 -
             ((C10961 + C10960) * C480 + (C10959 + C10958) * C483) +
             (C11359 + C11358) * C481 - (C11361 + C11360) * C485 -
             (C11363 + C11362) * C482) *
                C51428 +
            ((C11365 + C11364) * C484 -
             ((C10965 + C10964) * C480 + (C10963 + C10962) * C483) +
             (C11367 + C11366) * C481 - (C11369 + C11368) * C485 -
             (C11371 + C11370) * C482) *
                C51167) *
               C17436 +
           ((C14928 * C484 - (C14023 * C480 + C14024 * C483) + C14931 * C481 -
             (C14262 + C14261) * C485 - (C14264 + C14263) * C482) *
                C51428 +
            ((C11916 + C11917) * C484 - (C11518 * C480 + C11519 * C483) +
             (C11918 + C11919) * C481 -
             (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
              C51457 * C1307) *
                 C485 -
             (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
              C51457 * C1313) *
                 C482) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                C51428 +
            C14956 * C51167) *
               C51352) *
              C51202 * C51486 +
          ((((C11357 + C11356) * C798 -
             ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
             (C11359 + C11358) * C51281) *
                C51428 +
            ((C11365 + C11364) * C798 -
             ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C17436 +
           (C14957 * C51428 +
            ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C51487 +
          ((C11701 * C51428 +
            ((C10969 + C10968) * C797 + (C10967 + C10966) * C51444 -
             (C11697 + C11696) * C798 - (C11699 + C11698) * C51281) *
                C51167) *
               C17436 +
           ((C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
             (C11919 + C11918) * C51281) *
                C51428 +
            ((C11530 + C11531) * C797 + (C11532 + C11533) * C51444 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C798 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C17436 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
            C14055 * C51167) *
               C51352) *
              C51202 * C113 -
          ((C11534 * C51167 + C14057 * C51428) * C51352 +
           (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
            ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
               C17436) *
              C51202 * C114 +
          ((C10982 * C51428 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
               C17436 +
           (C14463 * C51428 +
            ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C10924 * C975 + C51378 * C980 + C10923 * C321 + C51457 * C332) *
                 C51217 +
             (C10924 * C965 + C51378 * C974 + C10923 * C302 + C51457 * C320) *
                 C118) *
                C51167 +
            ((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51428) *
               C51352 +
           (((C10973 + C10972) * C51217 + (C10971 + C10970) * C118) * C51167 +
            C10983 * C51428) *
               C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C289 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C290 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51428 +
             C14058 * C51167) *
                C17436 +
            (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51428 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C289 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51428) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C51428) *
                C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C51488 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C51489 +
           ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51428 +
             C14058 * C51167) *
                C17436 +
            (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51428 +
             ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
                C51352) *
               C1415) *
              C51435 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51489 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C51488 -
           ((((C10924 * C3357 + C51378 * C3360 + C10923 * C1191 +
               C51457 * C1198) *
                  C51217 +
              (C10924 * C3351 + C51378 * C3356 + C10923 * C1186 +
               C51457 * C1192) *
                  C118) *
                 C51167 +
             ((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51428) *
                C51352 +
            (((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51167 +
             C14056 * C51428) *
                C17436) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C797 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51444 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C798 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
             (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
             (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                C51428 +
            C14956 * C51167) *
               C51352) *
              C51488 +
          ((((C14941 + C14940) * C798 -
             ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
             (C14943 + C14942) * C51281) *
                C51428 +
            C14957 * C51167) *
               C17436 +
           (((C16154 + C16155) * C798 -
             ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
             (C16156 + C16157) * C51281) *
                C51428 +
            ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C51489 +
          ((((C14046 + C14045) * C797 + (C14044 + C14043) * C51444 -
             (C16155 + C16154) * C798 - (C16157 + C16156) * C51281) *
                C51428 +
            (C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C17436 +
           (((C15290 + C15291) * C797 + (C15292 + C15293) * C51444 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C798 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C51428 +
            ((C14051 + C14052) * C797 + (C14053 + C14054) * C51444 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C798 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C17436 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
            C14055 * C51167) *
               C51352) *
              C1180 -
          ((C14056 * C51167 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
               C51352 +
           (C14057 * C51167 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
               C17436) *
              C1181 +
          ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51428 +
            C14058 * C51167) *
               C17436 +
           (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51428 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51167 +
            ((C10924 * C4334 + C51378 * C4337 + C10923 * C2589 +
              C51457 * C2594) *
                 C51217 +
             (C10924 * C4331 + C51378 * C4333 + C10923 * C2585 +
              C51457 * C2588) *
                 C118) *
                C51428) *
               C51352 +
           (((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51167 +
            ((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51428) *
               C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C1109 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C51253) *
              C1111 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C1109) *
              C1112 +
          (((C10982 * C51428 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C17436 +
            (C14463 * C51428 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51428) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C51428) *
                C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C483 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C480 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C484 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C481 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C485 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C482) *
                C51428 +
            ((C10958 + C10959) * C483 + (C10960 + C10961) * C480 -
             (C11356 + C11357) * C484 - (C11358 + C11359) * C481 +
             (C11360 + C11361) * C485 + (C11362 + C11363) * C482) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C483 + (C14037 + C14038) * C480 -
             (C14940 + C14941) * C484 - (C14942 + C14943) * C481 +
             (C15496 + C15497) * C485 + (C15498 + C15499) * C482) *
                C51428 +
            (C14011 * C483 + C14012 * C480 - C14926 * C484 - C14927 * C481 +
             (C14261 + C14262) * C485 + (C14263 + C14264) * C482) *
                C51167) *
               C51352) *
              C1109 +
          ((((C14941 + C14940) * C484 -
             ((C14038 + C14037) * C480 + (C14036 + C14035) * C483) +
             (C14943 + C14942) * C481 - (C15497 + C15496) * C485 -
             (C15499 + C15498) * C482) *
                C51428 +
            (C14928 * C484 - (C14023 * C480 + C14024 * C483) + C14931 * C481 -
             (C14262 + C14261) * C485 - (C14264 + C14263) * C482) *
                C51167) *
               C17436 +
           (((C16154 + C16155) * C484 -
             ((C14043 + C14044) * C480 + (C14045 + C14046) * C483) +
             (C16156 + C16157) * C481 -
             (C10924 * C4780 + C51378 * C4786 + C10923 * C2805 +
              C51457 * C2808) *
                 C485 -
             (C10924 * C4787 + C51378 * C4792 + C10923 * C2809 +
              C51457 * C2814) *
                 C482) *
                C51428 +
            ((C14950 + C14951) * C484 - (C14013 * C480 + C14014 * C483) +
             (C14952 + C14953) * C481 -
             (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
              C51457 * C2810) *
                 C485 -
             (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
              C51457 * C2815) *
                 C482) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C797 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51444 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C798 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C51428 +
             ((C10958 + C10959) * C797 + (C10960 + C10961) * C51444 -
              (C11356 + C11357) * C798 - (C11358 + C11359) * C51281) *
                 C51167) *
                C17436 +
            (((C14035 + C14036) * C797 + (C14037 + C14038) * C51444 -
              (C14940 + C14941) * C798 - (C14942 + C14943) * C51281) *
                 C51428 +
             C14956 * C51167) *
                C51352) *
               C1109 +
           ((((C14941 + C14940) * C798 -
              ((C14038 + C14037) * C51444 + (C14036 + C14035) * C797) +
              (C14943 + C14942) * C51281) *
                 C51428 +
             C14957 * C51167) *
                C17436 +
            (((C16154 + C16155) * C798 -
              ((C14043 + C14044) * C51444 + (C14045 + C14046) * C797) +
              (C16156 + C16157) * C51281) *
                 C51428 +
             ((C14950 + C14951) * C798 - (C14013 * C51444 + C14014 * C797) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C11357 + C11356) * C798 -
              ((C10961 + C10960) * C51444 + (C10959 + C10958) * C797) +
              (C11359 + C11358) * C51281) *
                 C51428 +
             ((C11365 + C11364) * C798 -
              ((C10965 + C10964) * C51444 + (C10963 + C10962) * C797) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C17436 +
            (C14957 * C51428 +
             ((C11916 + C11917) * C798 - (C11518 * C51444 + C11519 * C797) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C1109 +
           ((C14956 * C51428 +
             (C14459 * C797 + C14460 * C51444 - (C11917 + C11916) * C798 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C17436 +
            ((C14025 * C797 + C14026 * C51444 - (C14951 + C14950) * C798 -
              (C14953 + C14952) * C51281) *
                 C51428 +
             ((C11174 + C11175) * C797 + (C11176 + C11177) * C51444 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C798 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C118 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
                C17436 +
            (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
             C14055 * C51167) *
                C51352) *
               C1109 -
           ((C14056 * C51167 +
             ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
                C51352 +
            (C14057 * C51167 +
             ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
                C17436) *
               C51253) *
              C1111 +
          (((C14055 * C51428 + C14463 * C51167) * C17436 +
            (C14058 * C51428 +
             ((C11174 + C11175) * C118 + (C11176 + C11177) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C11534 * C51167 + C14057 * C51428) * C51352 +
            (((C10965 + C10964) * C51217 + (C10963 + C10962) * C118) * C51167 +
             ((C10961 + C10960) * C51217 + (C10959 + C10958) * C118) * C51428) *
                C17436) *
               C1109) *
              C1112 +
          (((C10982 * C51428 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51217) * C51167) *
                C17436 +
            (C14463 * C51428 +
             ((C11530 + C11531) * C118 + (C11532 + C11533) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C10924 * C1657 + C51378 * C1661 + C10923 * C319 +
               C51457 * C331) *
                  C51217 +
              (C10924 * C1649 + C51378 * C1656 + C10923 * C301 +
               C51457 * C318) *
                  C118) *
                 C51167 +
             ((C11177 + C11176) * C51217 + (C11175 + C11174) * C118) * C51428) *
                C51352 +
            (((C11533 + C11532) * C51217 + (C11531 + C11530) * C118) * C51167 +
             C11534 * C51428) *
                C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C118 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51217) * C51167) *
               C17436 +
           (((C14035 + C14036) * C118 + (C14037 + C14038) * C51217) * C51428 +
            C14055 * C51167) *
               C51352) *
              C1180 -
          ((C14056 * C51167 +
            ((C14043 + C14044) * C51217 + (C14045 + C14046) * C118) * C51428) *
               C51352 +
           (C14057 * C51167 +
            ((C14038 + C14037) * C51217 + (C14036 + C14035) * C118) * C51428) *
               C17436) *
              C1181 +
          ((((C14046 + C14045) * C118 + (C14044 + C14043) * C51217) * C51428 +
            C14058 * C51167) *
               C17436 +
           (((C15290 + C15291) * C118 + (C15292 + C15293) * C51217) * C51428 +
            ((C14051 + C14052) * C118 + (C14053 + C14054) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C10924 * C4336 + C51378 * C4338 + C10923 * C2591 +
              C51457 * C2595) *
                 C51217 +
             (C10924 * C4332 + C51378 * C4335 + C10923 * C2586 +
              C51457 * C2590) *
                 C118) *
                C51167 +
            ((C10924 * C4334 + C51378 * C4337 + C10923 * C2589 +
              C51457 * C2594) *
                 C51217 +
             (C10924 * C4331 + C51378 * C4333 + C10923 * C2585 +
              C51457 * C2588) *
                 C118) *
                C51428) *
               C51352 +
           (((C14054 + C14053) * C51217 + (C14052 + C14051) * C118) * C51167 +
            ((C15293 + C15292) * C51217 + (C15291 + C15290) * C118) * C51428) *
               C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                  C1762 +
              (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                  C1760 -
              (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                  C1763 -
              (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                  C51281) *
                 C51428 +
             ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
              (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                 C51167) *
                C17436 +
            (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
              (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                 C51428 +
             C16946 * C51167) *
                C51352) *
               C51443 +
           ((((C14941 + C14940) * C1763 -
              ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
              (C14943 + C14942) * C51281) *
                 C51428 +
             C16947 * C51167) *
                C17436 +
            (((C16154 + C16155) * C1763 -
              ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
              (C16156 + C16157) * C51281) *
                 C51428 +
             ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
              (C14952 + C14953) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C11357 + C11356) * C1763 -
              ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
              (C11359 + C11358) * C51281) *
                 C51428 +
             ((C11365 + C11364) * C1763 -
              ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
              (C11367 + C11366) * C51281) *
                 C51167) *
                C17436 +
            (C16947 * C51428 +
             ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
              (C11918 + C11919) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C16946 * C51428 +
             (C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
              (C11919 + C11918) * C51281) *
                 C51167) *
                C17436 +
            ((C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
              (C14953 + C14952) * C51281) *
                 C51428 +
             ((C11174 + C11175) * C1762 + (C11176 + C11177) * C1760 -
              (C10924 * C2807 + C51378 * C2812 + C10923 * C1648 +
               C51457 * C1654) *
                  C1763 -
              (C10924 * C2813 + C51378 * C2816 + C10923 * C1655 +
               C51457 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C2217 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51490 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C2218 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51491 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C2219 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C2216) *
                C51428 +
            ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
             (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
             (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
             (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
             (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
                C51428 +
            (C14011 * C2217 + C14012 * C51490 - C14926 * C2218 -
             C14927 * C51491 + (C14261 + C14262) * C2219 +
             (C14263 + C14264) * C2216) *
                C51167) *
               C51352) *
              C51443 +
          ((((C14941 + C14940) * C2218 -
             ((C14038 + C14037) * C51490 + (C14036 + C14035) * C2217) +
             (C14943 + C14942) * C51491 - (C15497 + C15496) * C2219 -
             (C15499 + C15498) * C2216) *
                C51428 +
            (C14928 * C2218 - (C14023 * C51490 + C14024 * C2217) +
             C14931 * C51491 - (C14262 + C14261) * C2219 -
             (C14264 + C14263) * C2216) *
                C51167) *
               C17436 +
           (((C16154 + C16155) * C2218 -
             ((C14043 + C14044) * C51490 + (C14045 + C14046) * C2217) +
             (C16156 + C16157) * C51491 -
             (C10924 * C4780 + C51378 * C4786 + C10923 * C2805 +
              C51457 * C2808) *
                 C2219 -
             (C10924 * C4787 + C51378 * C4792 + C10923 * C2809 +
              C51457 * C2814) *
                 C2216) *
                C51428 +
            ((C14950 + C14951) * C2218 - (C14013 * C51490 + C14014 * C2217) +
             (C14952 + C14953) * C51491 -
             (C10924 * C4781 + C51378 * C4788 + C10923 * C2806 +
              C51457 * C2810) *
                 C2219 -
             (C10924 * C4789 + C51378 * C4793 + C10923 * C2811 +
              C51457 * C2815) *
                 C2216) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C51428 +
            C16946 * C51167) *
               C51352) *
              C289 +
          ((((C14941 + C14940) * C1763 -
             ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
             (C14943 + C14942) * C51281) *
                C51428 +
            C16947 * C51167) *
               C17436 +
           (((C16154 + C16155) * C1763 -
             ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
             (C16156 + C16157) * C51281) *
                C51428 +
            ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((((C14046 + C14045) * C1762 + (C14044 + C14043) * C1760 -
             (C16155 + C16154) * C1763 - (C16157 + C16156) * C51281) *
                C51428 +
            (C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C17436 +
           (((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C1763 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C51428 +
            ((C14051 + C14052) * C1762 + (C14053 + C14054) * C1760 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C1763 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C51428 +
            C16946 * C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C51428 +
            ((C11365 + C11364) * C1763 -
             ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C17436 +
           (C16947 * C51428 +
            ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C12948 * C51428 +
            ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
             (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
                C51167) *
               C17436 +
           ((C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
             (C11919 + C11918) * C51281) *
                C51428 +
            ((C11530 + C11531) * C1762 + (C11532 + C11533) * C1760 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C1763 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                C1954 +
            (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                C1950 -
            (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                C1955 -
            (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                C1951 +
            (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                C1956 +
            (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                C1952 -
            (C10924 * C5799 + C51378 * C5802 + C10923 * C1958 +
             C51457 * C1962) *
                C1957 -
            (C10924 * C5803 + C51378 * C5808 + C10923 * C1963 +
             C51457 * C1970) *
                C1953) *
               C51428 +
           ((C10958 + C10959) * C1954 + (C10960 + C10961) * C1950 -
            (C11356 + C11357) * C1955 - (C11358 + C11359) * C1951 +
            (C11360 + C11361) * C1956 + (C11362 + C11363) * C1952 -
            (C10924 * C5800 + C51378 * C5804 + C10923 * C1959 +
             C51457 * C1964) *
                C1957 -
            (C10924 * C5805 + C51378 * C5809 + C10923 * C1965 +
             C51457 * C1971) *
                C1953) *
               C51167) *
              C17436 +
          (((C14035 + C14036) * C1954 + (C14037 + C14038) * C1950 -
            (C14940 + C14941) * C1955 - (C14942 + C14943) * C1951 +
            (C15496 + C15497) * C1956 + (C15498 + C15499) * C1952 -
            (C10924 * C6781 + C51378 * C6783 + C10923 * C4778 +
             C51457 * C4782) *
                C1957 -
            (C10924 * C6784 + C51378 * C6787 + C10923 * C4783 +
             C51457 * C4790) *
                C1953) *
               C51428 +
           (C14011 * C1954 + C14012 * C1950 - C14926 * C1955 - C14927 * C1951 +
            (C14261 + C14262) * C1956 + (C14263 + C14264) * C1952 -
            (C10924 * C6782 + C51378 * C6785 + C10923 * C4779 +
             C51457 * C4784) *
                C1957 -
            (C10924 * C6786 + C51378 * C6788 + C10923 * C4785 +
             C51457 * C4791) *
                C1953) *
               C51167) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C2217 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C51490 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C2218 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51491 +
             (C10923 * C487 + C51457 * C498 + C10924 * C1958 + C51378 * C1962) *
                 C2219 +
             (C10923 * C499 + C51457 * C517 + C10924 * C1963 + C51378 * C1970) *
                 C2216) *
                C51428 +
            ((C10958 + C10959) * C2217 + (C10960 + C10961) * C51490 -
             (C11356 + C11357) * C2218 - (C11358 + C11359) * C51491 +
             (C11360 + C11361) * C2219 + (C11362 + C11363) * C2216) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C2217 + (C14037 + C14038) * C51490 -
             (C14940 + C14941) * C2218 - (C14942 + C14943) * C51491 +
             (C15496 + C15497) * C2219 + (C15498 + C15499) * C2216) *
                C51428 +
            (C14011 * C2217 + C14012 * C51490 - C14926 * C2218 -
             C14927 * C51491 + (C14261 + C14262) * C2219 +
             (C14263 + C14264) * C2216) *
                C51167) *
               C51352) *
              C51202 * C51435 +
          ((((C11357 + C11356) * C2218 -
             ((C10961 + C10960) * C51490 + (C10959 + C10958) * C2217) +
             (C11359 + C11358) * C51491 - (C11361 + C11360) * C2219 -
             (C11363 + C11362) * C2216) *
                C51428 +
            ((C11365 + C11364) * C2218 -
             ((C10965 + C10964) * C51490 + (C10963 + C10962) * C2217) +
             (C11367 + C11366) * C51491 - (C11369 + C11368) * C2219 -
             (C11371 + C11370) * C2216) *
                C51167) *
               C17436 +
           ((C14928 * C2218 - (C14023 * C51490 + C14024 * C2217) +
             C14931 * C51491 - (C14262 + C14261) * C2219 -
             (C14264 + C14263) * C2216) *
                C51428 +
            ((C11916 + C11917) * C2218 - (C11518 * C51490 + C11519 * C2217) +
             (C11918 + C11919) * C51491 -
             (C10924 * C6369 + C51378 * C6370 + C10923 * C1301 +
              C51457 * C1307) *
                 C2219 -
             (C10924 * C6371 + C51378 * C6372 + C10923 * C1308 +
              C51457 * C1313) *
                 C2216) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C51428 +
            C16946 * C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C11357 + C11356) * C1763 -
             ((C10961 + C10960) * C1760 + (C10959 + C10958) * C1762) +
             (C11359 + C11358) * C51281) *
                C51428 +
            ((C11365 + C11364) * C1763 -
             ((C10965 + C10964) * C1760 + (C10963 + C10962) * C1762) +
             (C11367 + C11366) * C51281) *
                C51167) *
               C17436 +
           (C16947 * C51428 +
            ((C11916 + C11917) * C1763 - (C11518 * C1760 + C11519 * C1762) +
             (C11918 + C11919) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C12948 * C51428 +
            ((C10969 + C10968) * C1762 + (C10967 + C10966) * C1760 -
             (C11697 + C11696) * C1763 - (C11699 + C11698) * C51281) *
                C51167) *
               C17436 +
           ((C14459 * C1762 + C14460 * C1760 - (C11917 + C11916) * C1763 -
             (C11919 + C11918) * C51281) *
                C51428 +
            ((C11530 + C11531) * C1762 + (C11532 + C11533) * C1760 -
             (C10924 * C1302 + C51378 * C1309 + C10923 * C964 + C51457 * C972) *
                 C1763 -
             (C10924 * C1310 + C51378 * C1314 + C10923 * C973 + C51457 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51457 * C126 + C10924 * C486 + C51378 * C496) *
                 C1762 +
             (C10923 * C127 + C51457 * C140 + C10924 * C497 + C51378 * C516) *
                 C1760 -
             (C10924 * C487 + C51378 * C498 + C10923 * C486 + C51457 * C496) *
                 C1763 -
             (C10924 * C499 + C51378 * C517 + C10923 * C497 + C51457 * C516) *
                 C51281) *
                C51428 +
            ((C10958 + C10959) * C1762 + (C10960 + C10961) * C1760 -
             (C11356 + C11357) * C1763 - (C11358 + C11359) * C51281) *
                C51167) *
               C17436 +
           (((C14035 + C14036) * C1762 + (C14037 + C14038) * C1760 -
             (C14940 + C14941) * C1763 - (C14942 + C14943) * C51281) *
                C51428 +
            C16946 * C51167) *
               C51352) *
              C289 +
          ((((C14941 + C14940) * C1763 -
             ((C14038 + C14037) * C1760 + (C14036 + C14035) * C1762) +
             (C14943 + C14942) * C51281) *
                C51428 +
            C16947 * C51167) *
               C17436 +
           (((C16154 + C16155) * C1763 -
             ((C14043 + C14044) * C1760 + (C14045 + C14046) * C1762) +
             (C16156 + C16157) * C51281) *
                C51428 +
            ((C14950 + C14951) * C1763 - (C14013 * C1760 + C14014 * C1762) +
             (C14952 + C14953) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((((C14046 + C14045) * C1762 + (C14044 + C14043) * C1760 -
             (C16155 + C16154) * C1763 - (C16157 + C16156) * C51281) *
                C51428 +
            (C14025 * C1762 + C14026 * C1760 - (C14951 + C14950) * C1763 -
             (C14953 + C14952) * C51281) *
                C51167) *
               C17436 +
           (((C15290 + C15291) * C1762 + (C15292 + C15293) * C1760 -
             (C10924 * C3813 + C51378 * C3815 + C10923 * C3349 +
              C51457 * C3352) *
                 C1763 -
             (C10924 * C3816 + C51378 * C3819 + C10923 * C3353 +
              C51457 * C3358) *
                 C51281) *
                C51428 +
            ((C14051 + C14052) * C1762 + (C14053 + C14054) * C1760 -
             (C10924 * C3814 + C51378 * C3817 + C10923 * C3350 +
              C51457 * C3354) *
                 C1763 -
             (C10924 * C3818 + C51378 * C3820 + C10923 * C3355 +
              C51457 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C51443 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51253) *
              C51486 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51253 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51443) *
              C51487 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                C51352) *
               C51443 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C17435 +
             (C382 + C381) * C17434 + C2626 * C17433) *
                C51352 +
            ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) * C17436) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C51443 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C51486 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C51443) *
              C51487 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C51443 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
                C17436 +
            ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
             C8862 * C17435) *
                C51352) *
               C51443 +
           (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
             C9059 * C17435) *
                C17436 +
            ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
             (C3154 - (C3148 + C3149) + C3155) * C17435) *
                C51352) *
               C51253) *
              C292 +
          ((((C806 - (C805 + C804) + C807) * C17433 +
             (C810 - (C809 + C808) + C811) * C17434 +
             (C814 - (C813 + C812) + C815) * C17435) *
                C17436 +
            (C3400 * C17433 + C9059 * C17434 +
             (C1010 - (C996 + C997) + C1011) * C17435) *
                C51352) *
               C51443 +
           ((C3396 * C17433 + C8862 * C17434 +
             (C997 + C996 - C1010 - C1011) * C17435) *
                C17436 +
            (C3399 * C17433 + (C3149 + C3148 - C3154 - C3155) * C17434 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
            C4351 * C51162 * C20037 +
            (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
               C51443 +
           ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
            (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
            (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
            ((C117 * C4331 + C51314 * C4333) * C798 -
             (C3664 * C51444 + C3663 * C797) +
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C51162 * C20038) *
               C51253) *
              C292 +
          (((C806 - (C805 + C804) + C807) * C51162 * C20035 +
            C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
            (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
               C51443 +
           (C3396 * C51162 * C20035 + C3399 * C51162 * C20036 +
            (C3381 + C3380 - C3402 - C3403) * C51162 * C20037 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C289 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C290 +
           ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
            ((C2649 + C2648) * C17433 + C2657 * C17434 +
             (C2652 + C2653) * C17435) *
                C51352) *
               C291) *
              C292 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C290 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C289 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C17435 +
             (C2653 + C2652) * C17434 + C2656 * C17433) *
                C51352 +
            ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C51202 * C113 -
          ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51202 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
               C51352) *
              C51202 * C115 -
          ((((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C17435 +
            (C697 + C696) * C17434 + C688 * C17433) *
               C51352 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C17433 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C17434 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C17435) *
               C17436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C17433 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C17434 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C17435) *
               C51352) *
              C51202 * C292 +
          (((C569 - (C528 + C527) + C570 - C571 - C572) * C17433 +
            (C573 - (C538 + C537) + C574 - C575 - C576) * C17434 +
            (C577 - (C548 + C547) + C578 - C579 - C580) * C17435) *
               C17436 +
           ((C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C17433 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C17434 +
            (C1004 * C484 - (C359 * C480 + C360 * C483) + C1005 * C481 -
             (C117 * C1302 + C51314 * C1309) * C485 -
             (C117 * C1310 + C51314 * C1314) * C482) *
                C17435) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C2655 * C51162 * C20037 +
           (C2649 + C2648) * C51162 * C20038) *
              C51202 * C113 -
          (C2656 * C51162 * C20038 + C2616 * C51162 * C20037 +
           C2617 * C51162 * C20036 + (C179 + C178) * C51162 * C20035) *
              C51202 * C114 +
          (C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
           C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
              C51202 * C115 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C51162 * C20038 +
           (C382 + C381) * C51162 * C20037 + C688 * C51162 * C20036 +
           C191 * C51162 * C20035) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C289 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C290 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            ((C117 * C3648 + C51314 * C3652) * C118 +
             (C117 * C3651 + C51314 * C3654) * C51217) *
                C51162 * C20038) *
               C291) *
              C292 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C290 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C289 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C51162 * C20035 +
           (C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51162 * C20036 +
           (C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51162 * C20037 +
           (C2635 * C483 + C2634 * C480 - C4349 * C484 - C4350 * C481 +
            (C117 * C3813 + C51314 * C3815) * C485 +
            (C117 * C3816 + C51314 * C3819) * C482) *
               C51162 * C20038) *
              C51202 * C292 +
          ((C569 - (C528 + C527) + C570 - C571 - C572) * C51162 * C20035 +
           (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C51162 * C20036 +
           (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C51162 * C20037 +
           (C3392 * C484 - (C2632 * C480 + C2633 * C483) + C3393 * C481 -
            (C117 * C3814 + C51314 * C3817) * C485 -
            (C117 * C3818 + C51314 * C3820) * C482) *
               C51162 * C20038) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C51314 * C126) * C797 +
                      (C117 * C127 + C51314 * C140) * C51444 -
                      (C117 * C486 + C51314 * C496) * C798 -
                      (C117 * C497 + C51314 * C516) * C51281) *
                         C17433 +
                     (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
                        C17436 +
                    ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
                     C8862 * C17435) *
                        C51352) *
                       C51202 * C51486 +
                   (((C806 - (C805 + C804) + C807) * C17433 +
                     (C810 - (C809 + C808) + C811) * C17434 +
                     (C814 - (C813 + C812) + C815) * C17435) *
                        C17436 +
                    (C3400 * C17433 + C9059 * C17434 +
                     (C1010 - (C996 + C997) + C1011) * C17435) *
                        C51352) *
                       C51202 * C51487 +
                   ((C830 * C17433 + C831 * C17434 +
                     (C819 + C818 - C828 - C829) * C17435) *
                        C17436 +
                    (C8862 * C17433 + (C997 + C996 - C1010 - C1011) * C17434 +
                     (C694 * C797 + C695 * C51444 -
                      (C117 * C965 + C51314 * C974) * C798 -
                      (C117 * C975 + C51314 * C980) * C51281) *
                         C17435) *
                        C51352) *
                       C51202 * C682)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C51314 * C126) * C797 +
                     (C117 * C127 + C51314 * C140) * C51444 -
                     (C117 * C486 + C51314 * C496) * C798 -
                     (C117 * C497 + C51314 * C516) * C51281) *
                        C51162 * C20035 +
                    (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
                    C4351 * C51162 * C20037 +
                    (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
                       C51202 * C51486 +
                   ((C806 - (C805 + C804) + C807) * C51162 * C20035 +
                    C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
                    (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
                       C51202 * C51487 +
                   (C830 * C51162 * C20035 + C8862 * C51162 * C20036 +
                    (C3149 + C3148 - C3154 - C3155) * C51162 * C20037 +
                    (C2638 * C797 + C2639 * C51444 -
                     (C117 * C3351 + C51314 * C3356) * C798 -
                     (C117 * C3357 + C51314 * C3360) * C51281) *
                        C51162 * C20038) *
                       C51202 * C682)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C51202 * C113 -
          ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51202 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
               C51352) *
              C51202 * C115 -
          ((((C117 * C684 + C51314 * C686) * C51217 +
             (C117 * C683 + C51314 * C685) * C118) *
                C17435 +
            (C697 + C696) * C17434 + C688 * C17433) *
               C51352 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C289 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C290 +
           ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
            ((C2649 + C2648) * C17433 + C2657 * C17434 +
             (C2652 + C2653) * C17435) *
                C51352) *
               C291) *
              C292 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C290 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C289 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C17435 +
             (C2653 + C2652) * C17434 + C2656 * C17433) *
                C51352 +
            ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                C17436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C2655 * C51162 * C20037 +
           (C2649 + C2648) * C51162 * C20038) *
              C51202 * C113 -
          (C2656 * C51162 * C20038 + C2616 * C51162 * C20037 +
           C2617 * C51162 * C20036 + (C179 + C178) * C51162 * C20035) *
              C51202 * C114 +
          (C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
           C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
              C51202 * C115 -
          (((C117 * C1189 + C51314 * C1197) * C51217 +
            (C117 * C1185 + C51314 * C1190) * C118) *
               C51162 * C20038 +
           (C382 + C381) * C51162 * C20037 + C688 * C51162 * C20036 +
           C191 * C51162 * C20035) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C289 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C290 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            ((C117 * C3648 + C51314 * C3652) * C118 +
             (C117 * C3651 + C51314 * C3654) * C51217) *
                C51162 * C20038) *
               C291) *
              C292 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C290 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C289 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C51488 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51489 +
           ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
            ((C2649 + C2648) * C17433 + C2657 * C17434 +
             (C2652 + C2653) * C17435) *
                C51352) *
               C1415) *
              C51435 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51489 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51488 -
           ((((C117 * C1189 + C51314 * C1197) * C51217 +
              (C117 * C1185 + C51314 * C1190) * C118) *
                 C17435 +
             (C2653 + C2652) * C17434 + C2656 * C17433) *
                C51352 +
            ((C382 + C381) * C17435 + C2626 * C17434 + C2616 * C17433) *
                C17436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C51488 -
           (C20741 * C20038 + C20736 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51489 +
           (C20138 * C20035 + C20142 * C20036 +
            (C3666 + C3667) * C51162 * C20037 +
            (C20744 + C20745) * C51162 * C20038) *
               C1415) *
              C51435 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51489 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C51488 -
           (((C117 * C3649 + C51314 * C3653) * C51217 +
             (C117 * C3647 + C51314 * C3650) * C118) *
                C51162 * C20038 +
            (C2651 + C2650) * C51162 * C20037 + C20140 * C20036 +
            C20141 * C20035) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
               C17436 +
           ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
            C8862 * C17435) *
               C51352) *
              C51488 +
          (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
            C9059 * C17435) *
               C17436 +
           ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
            (C3154 - (C3148 + C3149) + C3155) * C17435) *
               C51352) *
              C51489 +
          ((C4351 * C17433 + C3399 * C17434 +
            (C3149 + C3148 - C3154 - C3155) * C17435) *
               C17436 +
           ((C4345 + C4344 - C4352 - C4353) * C17433 +
            (C3381 + C3380 - C3402 - C3403) * C17434 +
            (C2638 * C797 + C2639 * C51444 -
             (C117 * C3351 + C51314 * C3356) * C798 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C17435) *
               C51352) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C797 +
            (C117 * C127 + C51314 * C140) * C51444 -
            (C117 * C486 + C51314 * C496) * C798 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 + C21190 * C20037 +
           C21204 * C20038) *
              C51488 +
          ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
           (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
           (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
           (C21202 - (C21194 + C21195) + C21203) * C51162 * C20038) *
              C51489 +
          (C21190 * C20035 + C21204 * C20036 +
           (C21195 + C21194 - C21202 - C21203) * C51162 * C20037 +
           (C20742 * C797 + C20743 * C51444 -
            (C117 * C21185 + C51314 * C21186) * C798 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C1180 -
          ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
               C51352 +
           (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
               C17436) *
              C1181 +
          ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
           ((C2649 + C2648) * C17433 + C2657 * C17434 +
            (C2652 + C2653) * C17435) *
               C51352) *
              C1182 -
          ((((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C17435 +
            (C2651 + C2650) * C17434 + (C3667 + C3666) * C17433) *
               C51352 +
           ((C2653 + C2652) * C17435 + C2656 * C17434 + C3657 * C17433) *
               C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C1109 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51253) *
              C1111 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51253 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C1109) *
              C1112 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                C51352) *
               C1109 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C17435 +
             (C382 + C381) * C17434 + C2626 * C17433) *
                C51352 +
            ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) * C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C483 +
             (C117 * C127 + C51314 * C140) * C480 -
             (C117 * C486 + C51314 * C496) * C484 -
             (C117 * C497 + C51314 * C516) * C481 +
             (C117 * C487 + C51314 * C498) * C485 +
             (C117 * C499 + C51314 * C517) * C482) *
                C17433 +
            (C527 + C528 - C569 - C570 + C571 + C572) * C17434 +
            (C537 + C538 - C573 - C574 + C575 + C576) * C17435) *
               C17436 +
           ((C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C17433 +
            (C2818 + C2819 - C2820 - C2821 + C2842 + C2843) * C17434 +
            (C8555 + C8556 - C8557 - C8558 + C8565 + C8566) * C17435) *
               C51352) *
              C1109 +
          (((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C17433 +
            (C2820 - (C2819 + C2818) + C2821 - C2842 - C2843) * C17434 +
            (C8557 - (C8556 + C8555) + C8558 - C8565 - C8566) * C17435) *
               C17436 +
           ((C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C17433 +
            (C2844 - (C2827 + C2826) + C2845 - C2846 - C2847) * C17434 +
            (C3152 * C484 - (C368 * C480 + C367 * C483) + C3153 * C481 -
             (C117 * C2807 + C51314 * C2812) * C485 -
             (C117 * C2813 + C51314 * C2816) * C482) *
                C17435) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C1109 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C1111 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C1109) *
              C1112 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C1109 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
           C20142 * C20038) *
              C1180 -
          (C20741 * C20038 + C20736 * C20037 +
           (C2645 + C2644) * C51162 * C20036 +
           (C2643 + C2642) * C51162 * C20035) *
              C1181 +
          (C20138 * C20035 + C20142 * C20036 +
           (C3666 + C3667) * C51162 * C20037 +
           (C20744 + C20745) * C51162 * C20038) *
              C1182 -
          (((C117 * C20731 + C51314 * C20733) * C51217 +
            (C117 * C20730 + C51314 * C20732) * C118) *
               C51162 * C20038 +
           (C20745 + C20744) * C51162 * C20037 + C20741 * C20036 +
           C20736 * C20035) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C483 +
            (C117 * C127 + C51314 * C140) * C480 -
            (C117 * C486 + C51314 * C496) * C484 -
            (C117 * C497 + C51314 * C516) * C481 +
            (C117 * C487 + C51314 * C498) * C485 +
            (C117 * C499 + C51314 * C517) * C482) *
               C51162 * C20035 +
           (C3822 + C3823 - C3824 - C3825 + C3842 + C3843) * C51162 * C20036 +
           (C3830 + C3831 - C3832 - C3833 + C3844 + C3845) * C51162 * C20037 +
           (C20848 + C20849 - C20850 - C20851 + C20858 + C20859) * C51162 *
               C20038) *
              C1109 +
          ((C3824 - (C3823 + C3822) + C3825 - C3842 - C3843) * C51162 * C20035 +
           (C3832 - (C3831 + C3830) + C3833 - C3844 - C3845) * C51162 * C20036 +
           (C20850 - (C20849 + C20848) + C20851 - C20858 - C20859) * C51162 *
               C20037 +
           ((C117 * C4331 + C51314 * C4333) * C484 -
            (C3664 * C480 + C3663 * C483) +
            (C117 * C4334 + C51314 * C4337) * C481 -
            (C117 * C20843 + C51314 * C20844) * C485 -
            (C117 * C20845 + C51314 * C20846) * C482) *
               C51162 * C20038) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C797 +
              (C117 * C127 + C51314 * C140) * C51444 -
              (C117 * C486 + C51314 * C496) * C798 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C804 + C805 - C806 - C807) * C17434 + C830 * C17435) *
                C17436 +
            ((C3362 + C3363 - C3394 - C3395) * C17433 + C3396 * C17434 +
             C8862 * C17435) *
                C51352) *
               C1109 +
           (((C3394 - (C3363 + C3362) + C3395) * C17433 + C3400 * C17434 +
             C9059 * C17435) *
                C17436 +
            ((C3397 - (C3370 + C3369) + C3398) * C17433 + C3401 * C17434 +
             (C3154 - (C3148 + C3149) + C3155) * C17435) *
                C51352) *
               C51253) *
              C51435 +
          ((((C806 - (C805 + C804) + C807) * C17433 +
             (C810 - (C809 + C808) + C811) * C17434 +
             (C814 - (C813 + C812) + C815) * C17435) *
                C17436 +
            (C3400 * C17433 + C9059 * C17434 +
             (C1010 - (C996 + C997) + C1011) * C17435) *
                C51352) *
               C1109 +
           ((C3396 * C17433 + C8862 * C17434 +
             (C997 + C996 - C1010 - C1011) * C17435) *
                C17436 +
            (C3399 * C17433 + (C3149 + C3148 - C3154 - C3155) * C17434 +
             (C369 * C797 + C370 * C51444 -
              (C117 * C1649 + C51314 * C1656) * C798 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C797 +
             (C117 * C127 + C51314 * C140) * C51444 -
             (C117 * C486 + C51314 * C496) * C798 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C3362 + C3363 - C3394 - C3395) * C51162 * C20036 +
            C4351 * C51162 * C20037 +
            (C4345 + C4344 - C4352 - C4353) * C51162 * C20038) *
               C1109 +
           ((C3394 - (C3363 + C3362) + C3395) * C51162 * C20035 +
            (C3397 - (C3370 + C3369) + C3398) * C51162 * C20036 +
            (C4352 - (C4344 + C4345) + C4353) * C51162 * C20037 +
            ((C117 * C4331 + C51314 * C4333) * C798 -
             (C3664 * C51444 + C3663 * C797) +
             (C117 * C4334 + C51314 * C4337) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51435 +
          (((C806 - (C805 + C804) + C807) * C51162 * C20035 +
            C3400 * C51162 * C20036 + C3401 * C51162 * C20037 +
            (C3402 - (C3380 + C3381) + C3403) * C51162 * C20038) *
               C1109 +
           (C3396 * C51162 * C20035 + C3399 * C51162 * C20036 +
            (C3381 + C3380 - C3402 - C3403) * C51162 * C20037 +
            (C2636 * C797 + C2637 * C51444 -
             (C117 * C4332 + C51314 * C4335) * C798 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C118 +
              (C117 * C127 + C51314 * C140) * C51217) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
                C51352) *
               C1109 -
           ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
                C51352 +
            (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
                C17436) *
               C51253) *
              C1111 +
          (((C2602 * C17433 + C2994 * C17434 + C8713 * C17435) * C17436 +
            (C2607 * C17433 + C2995 * C17434 + (C381 + C382) * C17435) *
                C51352) *
               C51253 -
           ((C688 * C17435 + C689 * C17434 + C2617 * C17433) * C51352 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C1109) *
              C1112 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2994 * C17433 + C8713 * C17434 + (C696 + C697) * C17435) *
                C51352) *
               C1109 -
           ((((C117 * C322 + C51314 * C333) * C51217 +
              (C117 * C303 + C51314 * C323) * C118) *
                 C17435 +
             (C382 + C381) * C17434 + C2626 * C17433) *
                C51352 +
            ((C697 + C696) * C17435 + C688 * C17434 + C689 * C17433) * C17436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2642 + C2643) * C17433 + C2602 * C17434 + C2994 * C17435) *
               C51352) *
              C1180 -
          ((C2626 * C17435 + C2616 * C17434 + (C2645 + C2644) * C17433) *
               C51352 +
           (C689 * C17435 + C2617 * C17434 + (C2643 + C2642) * C17433) *
               C17436) *
              C1181 +
          ((C2655 * C17433 + C2607 * C17434 + C2995 * C17435) * C17436 +
           ((C2649 + C2648) * C17433 + C2657 * C17434 +
            (C2652 + C2653) * C17435) *
               C51352) *
              C1182 -
          ((((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C17435 +
            (C2651 + C2650) * C17434 + (C3667 + C3666) * C17433) *
               C51352 +
           ((C2653 + C2652) * C17435 + C2656 * C17434 + C3657 * C17433) *
               C17436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C118 +
             (C117 * C127 + C51314 * C140) * C51217) *
                C51162 * C20035 +
            (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
            C20142 * C20038) *
               C1109 -
           ((C3667 + C3666) * C51162 * C20038 + C3657 * C51162 * C20037 +
            (C2645 + C2644) * C51162 * C20036 +
            (C2643 + C2642) * C51162 * C20035) *
               C51253) *
              C1111 +
          ((C2602 * C51162 * C20035 + C2607 * C51162 * C20036 +
            C2657 * C51162 * C20037 + (C2650 + C2651) * C51162 * C20038) *
               C51253 -
           (C20140 * C20038 + C20141 * C20037 + C2617 * C51162 * C20036 +
            (C179 + C178) * C51162 * C20035) *
               C1109) *
              C1112 +
          ((C188 * C51162 * C20035 + C2994 * C51162 * C20036 +
            C2995 * C51162 * C20037 + (C2652 + C2653) * C51162 * C20038) *
               C1109 -
           (((C117 * C2592 + C51314 * C2596) * C51217 +
             (C117 * C2587 + C51314 * C2593) * C118) *
                C51162 * C20038 +
            (C2653 + C2652) * C51162 * C20037 + C2626 * C51162 * C20036 +
            C689 * C51162 * C20035) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C118 +
            (C117 * C127 + C51314 * C140) * C51217) *
               C51162 * C20035 +
           (C2642 + C2643) * C51162 * C20036 + C20138 * C20037 +
           C20142 * C20038) *
              C1180 -
          (C20741 * C20038 + C20736 * C20037 +
           (C2645 + C2644) * C51162 * C20036 +
           (C2643 + C2642) * C51162 * C20035) *
              C1181 +
          (C20138 * C20035 + C20142 * C20036 +
           (C3666 + C3667) * C51162 * C20037 +
           (C20744 + C20745) * C51162 * C20038) *
              C1182 -
          (((C117 * C20731 + C51314 * C20733) * C51217 +
            (C117 * C20730 + C51314 * C20732) * C118) *
               C51162 * C20038 +
           (C20745 + C20744) * C51162 * C20037 + C20741 * C20036 +
           C20736 * C20035) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51314 * C126) * C1762 +
              (C117 * C127 + C51314 * C140) * C1760 -
              (C117 * C486 + C51314 * C496) * C1763 -
              (C117 * C497 + C51314 * C516) * C51281) *
                 C17433 +
             (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
                C17436 +
            ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
             C10084 * C17435) *
                C51352) *
               C51443 +
           (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
             C10525 * C17435) *
                C17436 +
            ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
             (C4506 - (C4507 + C4508) + C4509) * C17435) *
                C51352) *
               C51253) *
              C51435 +
          ((((C1767 - (C1766 + C1765) + C1768) * C17433 +
             (C1771 - (C1770 + C1769) + C1772) * C17434 +
             (C1775 - (C1774 + C1773) + C1776) * C17435) *
                C17436 +
            (C4996 * C17433 + C10525 * C17434 +
             (C2113 - (C2114 + C2115) + C2116) * C17435) *
                C51352) *
               C51443 +
           ((C4995 * C17433 + C10084 * C17434 +
             (C2115 + C2114 - C2113 - C2116) * C17435) *
                C17436 +
            (C4676 * C17433 + (C4508 + C4507 - C4506 - C4509) * C17434 +
             (C369 * C1762 + C370 * C1760 -
              (C117 * C1649 + C51314 * C1656) * C1763 -
              (C117 * C1657 + C51314 * C1661) * C51281) *
                 C17435) *
                C51352) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C51162 * C20035 +
            (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
            C21401 * C20037 + C21409 * C20038) *
               C51443 +
           ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
            (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
            (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
            (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
               C51253) *
              C51435 +
          (((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
            C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
            (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
               C51443 +
           (C4995 * C51162 * C20035 + C4676 * C51162 * C20036 +
            (C4671 + C4670 - C4669 - C4672) * C51162 * C20037 +
            (C2636 * C1762 + C2637 * C1760 -
             (C117 * C4332 + C51314 * C4335) * C1763 -
             (C117 * C4336 + C51314 * C4338) * C51281) *
                C51162 * C20038) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C17433 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C17434 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C17434 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C17435) *
               C51352) *
              C51443 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C17433 +
            (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C17434 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C17435) *
               C17436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C17433 +
            (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C17434 +
            (C3152 * C2218 - (C368 * C51490 + C367 * C2217) + C3153 * C51491 -
             (C117 * C2807 + C51314 * C2812) * C2219 -
             (C117 * C2813 + C51314 * C2816) * C2216) *
                C17435) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C51162 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51162 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51162 * C20037 +
           (C21806 + C21807 - C21808 - C21809 + C21810 + C21811) * C51162 *
               C20038) *
              C51443 +
          ((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51162 * C20035 +
           (C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51162 * C20036 +
           (C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51162 *
               C20037 +
           (C21199 * C2218 - (C3664 * C51490 + C3663 * C2217) +
            C21200 * C51491 - (C117 * C20843 + C51314 * C20844) * C2219 -
            (C117 * C20845 + C51314 * C20846) * C2216) *
               C51162 * C20038) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
            C10525 * C17435) *
               C17436 +
           ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
            (C4506 - (C4507 + C4508) + C4509) * C17435) *
               C51352) *
              C290 +
          ((C4677 * C17433 + C4676 * C17434 +
            (C4508 + C4507 - C4506 - C4509) * C17435) *
               C17436 +
           ((C4667 + C4666 - C4665 - C4668) * C17433 +
            (C4671 + C4670 - C4669 - C4672) * C17434 +
            (C2638 * C1762 + C2639 * C1760 -
             (C117 * C3351 + C51314 * C3356) * C1763 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C17435) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C17433 +
            (C1771 - (C1770 + C1769) + C1772) * C17434 +
            (C1775 - (C1774 + C1773) + C1776) * C17435) *
               C17436 +
           (C4996 * C17433 + C10525 * C17434 +
            (C2113 - (C2114 + C2115) + C2116) * C17435) *
               C51352) *
              C51202 * C1112 +
          ((C1785 * C17433 + C1786 * C17434 +
            (C1779 + C1778 - C1777 - C1780) * C17435) *
               C17436 +
           (C10084 * C17433 + (C2115 + C2114 - C2113 - C2116) * C17434 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C17435) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1954 +
            (C117 * C127 + C51314 * C140) * C1950 -
            (C117 * C486 + C51314 * C496) * C1955 -
            (C117 * C497 + C51314 * C516) * C1951 +
            (C117 * C487 + C51314 * C498) * C1956 +
            (C117 * C499 + C51314 * C517) * C1952 -
            (C117 * C1958 + C51314 * C1962) * C1957 -
            (C117 * C1963 + C51314 * C1970) * C1953) *
               C17433 +
           (C168 * C1954 + C169 * C1950 - C557 * C1955 - C558 * C1951 +
            C559 * C1956 + C560 * C1952 -
            (C117 * C1959 + C51314 * C1964) * C1957 -
            (C117 * C1965 + C51314 * C1971) * C1953) *
               C17434 +
           (C170 * C1954 + C171 * C1950 - C561 * C1955 - C562 * C1951 +
            C563 * C1956 + C564 * C1952 -
            (C117 * C1960 + C51314 * C1966) * C1957 -
            (C117 * C1967 + C51314 * C1972) * C1953) *
               C17435) *
              C17436 +
          ((C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
            C3838 * C1956 + C3839 * C1952 -
            (C117 * C4778 + C51314 * C4782) * C1957 -
            (C117 * C4783 + C51314 * C4790) * C1953) *
               C17433 +
           (C364 * C1954 + C363 * C1950 - C1000 * C1955 - C1001 * C1951 +
            C2836 * C1956 + C2837 * C1952 -
            (C117 * C4779 + C51314 * C4784) * C1957 -
            (C117 * C4785 + C51314 * C4791) * C1953) *
               C17434 +
           (C362 * C1954 + C361 * C1950 - C1002 * C1955 - C1003 * C1951 +
            C8563 * C1956 + C8564 * C1952 -
            (C117 * C6369 + C51314 * C6370) * C1957 -
            (C117 * C6371 + C51314 * C6372) * C1953) *
               C17435) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
           C4677 * C51162 * C20037 +
           (C4667 + C4666 - C4665 - C4668) * C51162 * C20038) *
              C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
           C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
           (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
              C51202 * C1112 +
          (C1785 * C51162 * C20035 + C10084 * C51162 * C20036 +
           (C4508 + C4507 - C4506 - C4509) * C51162 * C20037 +
           (C2638 * C1762 + C2639 * C1760 -
            (C117 * C3351 + C51314 * C3356) * C1763 -
            (C117 * C3357 + C51314 * C3360) * C51281) *
               C51162 * C20038) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 + C21401 * C20037 +
           C21409 * C20038) *
              C289 +
          ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
           (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
           (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
           (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
              C290 +
          (C21401 * C20035 + C21409 * C20036 +
           (C21405 + C21404 - C21403 - C21406) * C51162 * C20037 +
           (C20742 * C1762 + C20743 * C1760 -
            (C117 * C21185 + C51314 * C21186) * C1763 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51314 * C126) * C1954 +
           (C117 * C127 + C51314 * C140) * C1950 -
           (C117 * C486 + C51314 * C496) * C1955 -
           (C117 * C497 + C51314 * C516) * C1951 +
           (C117 * C487 + C51314 * C498) * C1956 +
           (C117 * C499 + C51314 * C517) * C1952 -
           (C117 * C1958 + C51314 * C1962) * C1957 -
           (C117 * C1963 + C51314 * C1970) * C1953) *
              C51162 * C20035 +
          (C2627 * C1954 + C2628 * C1950 - C3384 * C1955 - C3385 * C1951 +
           C3838 * C1956 + C3839 * C1952 -
           (C117 * C4778 + C51314 * C4782) * C1957 -
           (C117 * C4783 + C51314 * C4790) * C1953) *
              C51162 * C20036 +
          (C2629 * C1954 + C2630 * C1950 - C3387 * C1955 - C3388 * C1951 +
           C3840 * C1956 + C3841 * C1952 -
           (C117 * C4780 + C51314 * C4786) * C1957 -
           (C117 * C4787 + C51314 * C4792) * C1953) *
              C51162 * C20037 +
          (C2635 * C1954 + C2634 * C1950 - C4349 * C1955 - C4350 * C1951 +
           C20856 * C1956 + C20857 * C1952 -
           (C117 * C21475 + C51314 * C21476) * C1957 -
           (C117 * C21477 + C51314 * C21478) * C1953) *
              C51162 * C20038) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C2217 +
             (C117 * C127 + C51314 * C140) * C51490 -
             (C117 * C486 + C51314 * C496) * C2218 -
             (C117 * C497 + C51314 * C516) * C51491 +
             (C117 * C487 + C51314 * C498) * C2219 +
             (C117 * C499 + C51314 * C517) * C2216) *
                C17433 +
            (C2221 + C2222 - C2223 - C2224 + C2225 + C2226) * C17434 +
            (C2227 + C2228 - C2229 - C2230 + C2231 + C2232) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C5144 + C5145 - C5146 - C5147 + C5148 + C5149) * C17434 +
            (C10672 + C10673 - C10674 - C10675 + C10676 + C10677) * C17435) *
               C51352) *
              C51202 * C51435 +
          (((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C17433 +
            (C2229 - (C2228 + C2227) + C2230 - C2231 - C2232) * C17434 +
            (C2235 - (C2234 + C2233) + C2236 - C2237 - C2238) * C17435) *
               C17436 +
           ((C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C17433 +
            (C10674 - (C10673 + C10672) + C10675 - C10676 - C10677) * C17434 +
            (C1004 * C2218 - (C359 * C51490 + C360 * C2217) + C1005 * C51491 -
             (C117 * C1302 + C51314 * C1309) * C2219 -
             (C117 * C1310 + C51314 * C1314) * C2216) *
                C17435) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C2217 +
            (C117 * C127 + C51314 * C140) * C51490 -
            (C117 * C486 + C51314 * C496) * C2218 -
            (C117 * C497 + C51314 * C516) * C51491 +
            (C117 * C487 + C51314 * C498) * C2219 +
            (C117 * C499 + C51314 * C517) * C2216) *
               C51162 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51162 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51162 * C20037 +
           (C2635 * C2217 + C2634 * C51490 - C4349 * C2218 - C4350 * C51491 +
            C20856 * C2219 + C20857 * C2216) *
               C51162 * C20038) *
              C51202 * C51435 +
          ((C2223 - (C2222 + C2221) + C2224 - C2225 - C2226) * C51162 * C20035 +
           (C5146 - (C5145 + C5144) + C5147 - C5148 - C5149) * C51162 * C20036 +
           (C5152 - (C5151 + C5150) + C5153 - C5154 - C5155) * C51162 * C20037 +
           (C3392 * C2218 - (C2632 * C51490 + C2633 * C2217) + C3393 * C51491 -
            (C117 * C3814 + C51314 * C3817) * C2219 -
            (C117 * C3818 + C51314 * C3820) * C2216) *
               C51162 * C20038) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C51202 * C1111 +
          (((C1767 - (C1766 + C1765) + C1768) * C17433 +
            (C1771 - (C1770 + C1769) + C1772) * C17434 +
            (C1775 - (C1774 + C1773) + C1776) * C17435) *
               C17436 +
           (C4996 * C17433 + C10525 * C17434 +
            (C2113 - (C2114 + C2115) + C2116) * C17435) *
               C51352) *
              C51202 * C1112 +
          ((C1785 * C17433 + C1786 * C17434 +
            (C1779 + C1778 - C1777 - C1780) * C17435) *
               C17436 +
           (C10084 * C17433 + (C2115 + C2114 - C2113 - C2116) * C17434 +
            (C694 * C1762 + C695 * C1760 -
             (C117 * C965 + C51314 * C974) * C1763 -
             (C117 * C975 + C51314 * C980) * C51281) *
                C17435) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51314 * C126) * C1762 +
             (C117 * C127 + C51314 * C140) * C1760 -
             (C117 * C486 + C51314 * C496) * C1763 -
             (C117 * C497 + C51314 * C516) * C51281) *
                C17433 +
            (C1765 + C1766 - C1767 - C1768) * C17434 + C1785 * C17435) *
               C17436 +
           ((C4656 + C4657 - C4658 - C4659) * C17433 + C4995 * C17434 +
            C10084 * C17435) *
               C51352) *
              C289 +
          (((C4658 - (C4657 + C4656) + C4659) * C17433 + C4996 * C17434 +
            C10525 * C17435) *
               C17436 +
           ((C4662 - (C4661 + C4660) + C4663) * C17433 + C4997 * C17434 +
            (C4506 - (C4507 + C4508) + C4509) * C17435) *
               C51352) *
              C290 +
          ((C4677 * C17433 + C4676 * C17434 +
            (C4508 + C4507 - C4506 - C4509) * C17435) *
               C17436 +
           ((C4667 + C4666 - C4665 - C4668) * C17433 +
            (C4671 + C4670 - C4669 - C4672) * C17434 +
            (C2638 * C1762 + C2639 * C1760 -
             (C117 * C3351 + C51314 * C3356) * C1763 -
             (C117 * C3357 + C51314 * C3360) * C51281) *
                C17435) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 +
           C4677 * C51162 * C20037 +
           (C4667 + C4666 - C4665 - C4668) * C51162 * C20038) *
              C51202 * C1111 +
          ((C1767 - (C1766 + C1765) + C1768) * C51162 * C20035 +
           C4996 * C51162 * C20036 + C4997 * C51162 * C20037 +
           (C4669 - (C4670 + C4671) + C4672) * C51162 * C20038) *
              C51202 * C1112 +
          (C1785 * C51162 * C20035 + C10084 * C51162 * C20036 +
           (C4508 + C4507 - C4506 - C4509) * C51162 * C20037 +
           (C2638 * C1762 + C2639 * C1760 -
            (C117 * C3351 + C51314 * C3356) * C1763 -
            (C117 * C3357 + C51314 * C3360) * C51281) *
               C51162 * C20038) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51314 * C126) * C1762 +
            (C117 * C127 + C51314 * C140) * C1760 -
            (C117 * C486 + C51314 * C496) * C1763 -
            (C117 * C497 + C51314 * C516) * C51281) *
               C51162 * C20035 +
           (C4656 + C4657 - C4658 - C4659) * C51162 * C20036 + C21401 * C20037 +
           C21409 * C20038) *
              C289 +
          ((C4658 - (C4657 + C4656) + C4659) * C51162 * C20035 +
           (C4662 - (C4661 + C4660) + C4663) * C51162 * C20036 +
           (C4665 - (C4666 + C4667) + C4668) * C51162 * C20037 +
           (C21403 - (C21404 + C21405) + C21406) * C51162 * C20038) *
              C290 +
          (C21401 * C20035 + C21409 * C20036 +
           (C21405 + C21404 - C21403 - C21406) * C51162 * C20037 +
           (C20742 * C1762 + C20743 * C1760 -
            (C117 * C21185 + C51314 * C21186) * C1763 -
            (C117 * C21187 + C51314 * C21188) * C51281) *
               C51162 * C20038) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C51443 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C51253) *
              C51486 +
          (((C41154 * C51428 + C41561 * C51167) * C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C51443) *
              C51487 +
          (((C33549 * C51428 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C51167) *
                C51456 +
            (C41561 * C51428 +
             ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C51167) *
                C51352) *
               C51443 -
           ((((C33491 * C1657 + C51378 * C1661 + C33490 * C319 +
               C33488 * C331) *
                  C51217 +
              (C33491 * C1649 + C51378 * C1656 + C33490 * C301 +
               C33488 * C318) *
                  C118) *
                 C51167 +
             ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51428) *
                C51352 +
            (((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51167 +
             C34101 * C51428) *
                C51456) *
               C51253) *
              C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C797 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51444 -
              (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                  C798 -
              (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                  C51281) *
                 C51428 +
             ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
              (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                 C51167) *
                C51456 +
            (((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
              (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                 C51428 +
             C42030 * C51167) *
                C51352) *
               C51443 +
           ((((C37207 + C37206) * C798 -
              ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
              (C37209 + C37208) * C51281) *
                 C51428 +
             C42031 * C51167) *
                C51456 +
            (((C37211 + C37210) * C798 -
              ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
              (C37213 + C37212) * C51281) *
                 C51428 +
             ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
              (C37216 + C37217) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C292 +
          (((((C33924 + C33923) * C798 -
              ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
              (C33926 + C33925) * C51281) *
                 C51428 +
             ((C33932 + C33931) * C798 -
              ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
              (C33934 + C33933) * C51281) *
                 C51167) *
                C51456 +
            (C42031 * C51428 +
             ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
              (C34485 + C34486) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C42030 * C51428 +
             (C41557 * C797 + C41558 * C51444 - (C34484 + C34483) * C798 -
              (C34486 + C34485) * C51281) *
                 C51167) *
                C51456 +
            ((C41146 * C797 + C41147 * C51444 - (C37215 + C37214) * C798 -
              (C37217 + C37216) * C51281) *
                 C51428 +
             ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
              (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
               C33488 * C1654) *
                  C798 -
              (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
               C33488 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C289 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C290 +
           ((C36548 * C51428 + C41156 * C51167) * C51456 +
            (((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51428 +
             ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C41154 * C51428 +
             ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51167) *
                C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C289 -
           ((((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
               C33488 * C1198) *
                  C51217 +
              (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
               C33488 * C1192) *
                  C118) *
                 C51167 +
             ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51428) *
                C51352 +
            (((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51167 +
             C36544 * C51428) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
               C51456 +
           (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
            ((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51167) *
               C51352) *
              C51202 * C113 -
          ((C34101 * C51167 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51428) *
               C51352 +
           (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
               C51456) *
              C51202 * C114 +
          ((C33549 * C51428 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C51167) *
               C51456 +
           (((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51428 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C51167 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51428) *
               C51352 +
           (((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) * C51167 +
            C33550 * C51428) *
               C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C483 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C480 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C484 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C481 +
             (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                 C485 +
             (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                 C482) *
                C51428 +
            ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
             (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
             (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
             (C37206 + C37207) * C484 - (C37208 + C37209) * C481 +
             (C37642 + C37643) * C485 + (C37644 + C37645) * C482) *
                C51428 +
            (C41142 * C483 + C41143 * C480 - (C34480 + C34479) * C484 -
             (C34482 + C34481) * C481 + (C41359 + C41360) * C485 +
             (C41361 + C41362) * C482) *
                C51167) *
               C51352) *
              C51202 * C292 +
          ((((C33924 + C33923) * C484 -
             ((C33528 + C33527) * C480 + (C33526 + C33525) * C483) +
             (C33926 + C33925) * C481 - (C33928 + C33927) * C485 -
             (C33930 + C33929) * C482) *
                C51428 +
            ((C33932 + C33931) * C484 -
             ((C33532 + C33531) * C480 + (C33530 + C33529) * C483) +
             (C33934 + C33933) * C481 - (C33936 + C33935) * C485 -
             (C33938 + C33937) * C482) *
                C51167) *
               C51456 +
           (((C34479 + C34480) * C484 - (C41144 * C480 + C41145 * C483) +
             (C34481 + C34482) * C481 - (C41360 + C41359) * C485 -
             (C41362 + C41361) * C482) *
                C51428 +
            ((C34483 + C34484) * C484 - (C34085 * C480 + C34086 * C483) +
             (C34485 + C34486) * C481 -
             (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
              C33488 * C1307) *
                 C485 -
             (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
              C33488 * C1313) *
                 C482) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51428 +
            (C41142 * C797 + C41143 * C51444 - (C34480 + C34479) * C798 -
             (C34482 + C34481) * C51281) *
                C51167) *
               C51352) *
              C51202 * C51486 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C51428 +
            ((C33932 + C33931) * C798 -
             ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
             (C33934 + C33933) * C51281) *
                C51167) *
               C51456 +
           (((C34479 + C34480) * C798 - (C41144 * C51444 + C41145 * C797) +
             (C34481 + C34482) * C51281) *
                C51428 +
            ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
             (C34485 + C34486) * C51281) *
                C51167) *
               C51352) *
              C51202 * C51487 +
          ((C34268 * C51428 +
            ((C33536 + C33535) * C797 + (C33534 + C33533) * C51444 -
             (C34264 + C34263) * C798 - (C34266 + C34265) * C51281) *
                C51167) *
               C51456 +
           ((C41557 * C797 + C41558 * C51444 - (C34484 + C34483) * C798 -
             (C34486 + C34485) * C51281) *
                C51428 +
            ((C34097 + C34098) * C797 + (C34099 + C34100) * C51444 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C798 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C682)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
               C51456 +
           (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
            ((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51167) *
               C51352) *
              C51202 * C113 -
          ((C34101 * C51167 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51428) *
               C51352 +
           (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
               C51456) *
              C51202 * C114 +
          ((C33549 * C51428 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C51167) *
               C51456 +
           (((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51428 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C51167) *
               C51352) *
              C51202 * C115 -
          ((((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C51167 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51428) *
               C51352 +
           (((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) * C51167 +
            C33550 * C51428) *
               C51456) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C289 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C290 +
           ((C36548 * C51428 + C41156 * C51167) * C51456 +
            (((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51428 +
             ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51167) *
                C51352) *
               C291) *
              C292 +
          (((C41154 * C51428 +
             ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51167) *
                C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C290 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C289 -
           ((((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
               C33488 * C1198) *
                  C51217 +
              (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
               C33488 * C1192) *
                  C118) *
                 C51167 +
             ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51428) *
                C51352 +
            (((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51167 +
             C36544 * C51428) *
                C51456) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C51488 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C51489 +
           ((C36548 * C51428 + C41156 * C51167) * C51456 +
            (((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51428 +
             ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51167) *
                C51352) *
               C1415) *
              C51435 +
          (((C41154 * C51428 + C41561 * C51167) * C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C51489 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C51488 -
           ((((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
               C33488 * C1198) *
                  C51217 +
              (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
               C33488 * C1192) *
                  C118) *
                 C51167 +
             ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51428) *
                C51352 +
            (((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51167 +
             C36544 * C51428) *
                C51456) *
               C1415) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51428 +
            C42030 * C51167) *
               C51352) *
              C51488 +
          ((((C37207 + C37206) * C798 -
             ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
             (C37209 + C37208) * C51281) *
                C51428 +
            C42031 * C51167) *
               C51456 +
           (((C37211 + C37210) * C798 -
             ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
             (C37213 + C37212) * C51281) *
                C51428 +
            ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
             (C37216 + C37217) * C51281) *
                C51167) *
               C51352) *
              C51489 +
          ((C38156 * C51428 +
            (C41146 * C797 + C41147 * C51444 - (C37215 + C37214) * C798 -
             (C37217 + C37216) * C51281) *
                C51167) *
               C51456 +
           (((C36535 + C36534) * C797 + (C36533 + C36532) * C51444 -
             (C38152 + C38151) * C798 - (C38154 + C38153) * C51281) *
                C51428 +
            ((C36536 + C36537) * C797 + (C36538 + C36539) * C51444 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C798 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C1415) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
               C51456 +
           (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
            C41154 * C51167) *
               C51352) *
              C1180 -
          ((C36544 * C51167 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
               C51352 +
           (C41155 * C51167 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
               C51456) *
              C1181 +
          ((C36548 * C51428 + C41156 * C51167) * C51456 +
           (((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51428 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51167 +
            ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51428) *
               C51352 +
           (((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51167 +
            C37478 * C51428) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C1109 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C51253) *
              C1111 +
          (((C41154 * C51428 + C41561 * C51167) * C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C1109) *
              C1112 +
          (((C33549 * C51428 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C51167) *
                C51456 +
            (C41561 * C51428 +
             ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C33491 * C1657 + C51378 * C1661 + C33490 * C319 +
               C33488 * C331) *
                  C51217 +
              (C33491 * C1649 + C51378 * C1656 + C33490 * C301 +
               C33488 * C318) *
                  C118) *
                 C51167 +
             ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51428) *
                C51352 +
            (((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51167 +
             C34101 * C51428) *
                C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C483 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C480 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C484 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C481 +
             (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                 C485 +
             (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                 C482) *
                C51428 +
            ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
             (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
             (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
             (C37206 + C37207) * C484 - (C37208 + C37209) * C481 +
             (C37642 + C37643) * C485 + (C37644 + C37645) * C482) *
                C51428 +
            (C41142 * C483 + C41143 * C480 - C42016 * C484 - C42017 * C481 +
             (C41359 + C41360) * C485 + (C41361 + C41362) * C482) *
                C51167) *
               C51352) *
              C1109 +
          ((((C37207 + C37206) * C484 -
             ((C36527 + C36526) * C480 + (C36525 + C36524) * C483) +
             (C37209 + C37208) * C481 - (C37643 + C37642) * C485 -
             (C37645 + C37644) * C482) *
                C51428 +
            (C42018 * C484 - (C41144 * C480 + C41145 * C483) + C42021 * C481 -
             (C41360 + C41359) * C485 - (C41362 + C41361) * C482) *
                C51167) *
               C51456 +
           (((C37211 + C37210) * C484 -
             ((C36531 + C36530) * C480 + (C36529 + C36528) * C483) +
             (C37213 + C37212) * C481 - (C37647 + C37646) * C485 -
             (C37649 + C37648) * C482) *
                C51428 +
            ((C37214 + C37215) * C484 - (C36522 * C480 + C36523 * C483) +
             (C37216 + C37217) * C481 -
             (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
              C33488 * C2810) *
                 C485 -
             (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
              C33488 * C2815) *
                 C482) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C797 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51444 -
              (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                  C798 -
              (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                  C51281) *
                 C51428 +
             ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
              (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                 C51167) *
                C51456 +
            (((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
              (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                 C51428 +
             C42030 * C51167) *
                C51352) *
               C1109 +
           ((((C37207 + C37206) * C798 -
              ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
              (C37209 + C37208) * C51281) *
                 C51428 +
             C42031 * C51167) *
                C51456 +
            (((C37211 + C37210) * C798 -
              ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
              (C37213 + C37212) * C51281) *
                 C51428 +
             ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
              (C37216 + C37217) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C33924 + C33923) * C798 -
              ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
              (C33926 + C33925) * C51281) *
                 C51428 +
             ((C33932 + C33931) * C798 -
              ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
              (C33934 + C33933) * C51281) *
                 C51167) *
                C51456 +
            (C42031 * C51428 +
             ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
              (C34485 + C34486) * C51281) *
                 C51167) *
                C51352) *
               C1109 +
           ((C42030 * C51428 +
             (C41557 * C797 + C41558 * C51444 - (C34484 + C34483) * C798 -
              (C34486 + C34485) * C51281) *
                 C51167) *
                C51456 +
            ((C41146 * C797 + C41147 * C51444 - (C37215 + C37214) * C798 -
              (C37217 + C37216) * C51281) *
                 C51428 +
             ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
              (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
               C33488 * C1654) *
                  C798 -
              (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
               C33488 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C51217) *
                 C51428 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
                C51456 +
            (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
             C41154 * C51167) *
                C51352) *
               C1109 -
           ((C36544 * C51167 +
             ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
                C51352 +
            (C41155 * C51167 +
             ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
                C51456) *
               C51253) *
              C1111 +
          (((C41154 * C51428 + C41561 * C51167) * C51456 +
            (C41156 * C51428 +
             ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51167) *
                C51352) *
               C51253 -
           ((C34101 * C51167 + C41155 * C51428) * C51352 +
            (((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C51167 +
             ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51428) *
                C51456) *
               C1109) *
              C1112 +
          (((C33549 * C51428 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C51167) *
                C51456 +
            (C41561 * C51428 +
             ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C51167) *
                C51352) *
               C1109 -
           ((((C33491 * C1657 + C51378 * C1661 + C33490 * C319 +
               C33488 * C331) *
                  C51217 +
              (C33491 * C1649 + C51378 * C1656 + C33490 * C301 +
               C33488 * C318) *
                  C118) *
                 C51167 +
             ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51428) *
                C51352 +
            (((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51167 +
             C34101 * C51428) *
                C51456) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51428 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C51167) *
               C51456 +
           (((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51428 +
            C41154 * C51167) *
               C51352) *
              C1180 -
          ((C36544 * C51167 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51428) *
               C51352 +
           (C41155 * C51167 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51428) *
               C51456) *
              C1181 +
          ((C36548 * C51428 + C41156 * C51167) * C51456 +
           (((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51428 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51167) *
               C51352) *
              C1182 -
          ((((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51167 +
            ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51428) *
               C51352 +
           (((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51167 +
            C37478 * C51428) *
               C51456) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                  C1762 +
              (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                  C1760 -
              (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                  C1763 -
              (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                  C51281) *
                 C51428 +
             ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
              (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                 C51167) *
                C51456 +
            (((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
              (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                 C51428 +
             C43984 * C51167) *
                C51352) *
               C51443 +
           ((((C37207 + C37206) * C1763 -
              ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
              (C37209 + C37208) * C51281) *
                 C51428 +
             C43985 * C51167) *
                C51456 +
            (((C37211 + C37210) * C1763 -
              ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
              (C37213 + C37212) * C51281) *
                 C51428 +
             ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
              (C37216 + C37217) * C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51435 +
          (((((C33924 + C33923) * C1763 -
              ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
              (C33926 + C33925) * C51281) *
                 C51428 +
             ((C33932 + C33931) * C1763 -
              ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
              (C33934 + C33933) * C51281) *
                 C51167) *
                C51456 +
            (C43985 * C51428 +
             ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
              (C34485 + C34486) * C51281) *
                 C51167) *
                C51352) *
               C51443 +
           ((C43984 * C51428 +
             (C41557 * C1762 + C41558 * C1760 - (C34484 + C34483) * C1763 -
              (C34486 + C34485) * C51281) *
                 C51167) *
                C51456 +
            ((C41146 * C1762 + C41147 * C1760 - (C37215 + C37214) * C1763 -
              (C37217 + C37216) * C51281) *
                 C51428 +
             ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
              (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
               C33488 * C1654) *
                  C1763 -
              (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
               C33488 * C1660) *
                  C51281) *
                 C51167) *
                C51352) *
               C51253) *
              C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C2217 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51490 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C2218 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51491 +
             (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                 C2219 +
             (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                 C2216) *
                C51428 +
            ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
             (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
             (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
             (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
             (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
                C51428 +
            (C41142 * C2217 + C41143 * C51490 - C42016 * C2218 -
             C42017 * C51491 + (C41359 + C41360) * C2219 +
             (C41361 + C41362) * C2216) *
                C51167) *
               C51352) *
              C51443 +
          ((((C37207 + C37206) * C2218 -
             ((C36527 + C36526) * C51490 + (C36525 + C36524) * C2217) +
             (C37209 + C37208) * C51491 - (C37643 + C37642) * C2219 -
             (C37645 + C37644) * C2216) *
                C51428 +
            (C42018 * C2218 - (C41144 * C51490 + C41145 * C2217) +
             C42021 * C51491 - (C41360 + C41359) * C2219 -
             (C41362 + C41361) * C2216) *
                C51167) *
               C51456 +
           (((C37211 + C37210) * C2218 -
             ((C36531 + C36530) * C51490 + (C36529 + C36528) * C2217) +
             (C37213 + C37212) * C51491 - (C37647 + C37646) * C2219 -
             (C37649 + C37648) * C2216) *
                C51428 +
            ((C37214 + C37215) * C2218 - (C36522 * C51490 + C36523 * C2217) +
             (C37216 + C37217) * C51491 -
             (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
              C33488 * C2810) *
                 C2219 -
             (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
              C33488 * C2815) *
                 C2216) *
                C51167) *
               C51352) *
              C51253) *
         C51185) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51428 +
            (C41142 * C1762 + C41143 * C1760 - C42016 * C1763 -
             C42017 * C51281) *
                C51167) *
               C51352) *
              C289 +
          ((((C37207 + C37206) * C1763 -
             ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
             (C37209 + C37208) * C51281) *
                C51428 +
            (C42018 * C1763 - (C41144 * C1760 + C41145 * C1762) +
             C42021 * C51281) *
                C51167) *
               C51456 +
           (((C37211 + C37210) * C1763 -
             ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
             (C37213 + C37212) * C51281) *
                C51428 +
            ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
             (C37216 + C37217) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((C38456 * C51428 +
            (C41146 * C1762 + C41147 * C1760 - (C37215 + C37214) * C1763 -
             (C37217 + C37216) * C51281) *
                C51167) *
               C51456 +
           (((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
             (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
                C51428 +
            ((C36536 + C36537) * C1762 + (C36538 + C36539) * C1760 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C1763 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51428 +
            (C41142 * C1762 + C41143 * C1760 - C42016 * C1763 -
             C42017 * C51281) *
                C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C51428 +
            ((C33932 + C33931) * C1763 -
             ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
             (C33934 + C33933) * C51281) *
                C51167) *
               C51456 +
           ((C42018 * C1763 - (C41144 * C1760 + C41145 * C1762) +
             C42021 * C51281) *
                C51428 +
            ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
             (C34485 + C34486) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C35515 * C51428 +
            ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
             (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
                C51167) *
               C51456 +
           ((C41557 * C1762 + C41558 * C1760 - (C34484 + C34483) * C1763 -
             (C34486 + C34485) * C51281) *
                C51428 +
            ((C34097 + C34098) * C1762 + (C34099 + C34100) * C1760 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C1763 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1954 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1950 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1955 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C1951 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C1956 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C1952 -
            (C33491 * C5799 + C51378 * C5802 + C33490 * C1958 +
             C33488 * C1962) *
                C1957 -
            (C33491 * C5803 + C51378 * C5808 + C33490 * C1963 +
             C33488 * C1970) *
                C1953) *
               C51428 +
           ((C33525 + C33526) * C1954 + (C33527 + C33528) * C1950 -
            (C33923 + C33924) * C1955 - (C33925 + C33926) * C1951 +
            (C33927 + C33928) * C1956 + (C33929 + C33930) * C1952 -
            (C33491 * C5800 + C51378 * C5804 + C33490 * C1959 +
             C33488 * C1964) *
                C1957 -
            (C33491 * C5805 + C51378 * C5809 + C33490 * C1965 +
             C33488 * C1971) *
                C1953) *
               C51167) *
              C51456 +
          (((C36524 + C36525) * C1954 + (C36526 + C36527) * C1950 -
            (C37206 + C37207) * C1955 - (C37208 + C37209) * C1951 +
            (C37642 + C37643) * C1956 + (C37644 + C37645) * C1952 -
            (C33491 * C6781 + C51378 * C6783 + C33490 * C4778 +
             C33488 * C4782) *
                C1957 -
            (C33491 * C6784 + C51378 * C6787 + C33490 * C4783 +
             C33488 * C4790) *
                C1953) *
               C51428 +
           (C41142 * C1954 + C41143 * C1950 - C42016 * C1955 - C42017 * C1951 +
            (C41359 + C41360) * C1956 + (C41361 + C41362) * C1952 -
            (C33491 * C6782 + C51378 * C6785 + C33490 * C4779 +
             C33488 * C4784) *
                C1957 -
            (C33491 * C6786 + C51378 * C6788 + C33490 * C4785 +
             C33488 * C4791) *
                C1953) *
               C51167) *
              C51352) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C2217 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51490 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C2218 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51491 +
             (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                 C2219 +
             (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                 C2216) *
                C51428 +
            ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
             (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
             (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
             (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
             (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
                C51428 +
            (C41142 * C2217 + C41143 * C51490 - C42016 * C2218 -
             C42017 * C51491 + (C41359 + C41360) * C2219 +
             (C41361 + C41362) * C2216) *
                C51167) *
               C51352) *
              C51202 * C51435 +
          ((((C33924 + C33923) * C2218 -
             ((C33528 + C33527) * C51490 + (C33526 + C33525) * C2217) +
             (C33926 + C33925) * C51491 - (C33928 + C33927) * C2219 -
             (C33930 + C33929) * C2216) *
                C51428 +
            ((C33932 + C33931) * C2218 -
             ((C33532 + C33531) * C51490 + (C33530 + C33529) * C2217) +
             (C33934 + C33933) * C51491 - (C33936 + C33935) * C2219 -
             (C33938 + C33937) * C2216) *
                C51167) *
               C51456 +
           ((C42018 * C2218 - (C41144 * C51490 + C41145 * C2217) +
             C42021 * C51491 - (C41360 + C41359) * C2219 -
             (C41362 + C41361) * C2216) *
                C51428 +
            ((C34483 + C34484) * C2218 - (C34085 * C51490 + C34086 * C2217) +
             (C34485 + C34486) * C51491 -
             (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
              C33488 * C1307) *
                 C2219 -
             (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
              C33488 * C1313) *
                 C2216) *
                C51167) *
               C51352) *
              C51202 * C51190)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51428 +
            (C41142 * C1762 + C41143 * C1760 - C42016 * C1763 -
             C42017 * C51281) *
                C51167) *
               C51352) *
              C51202 * C1111 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C51428 +
            ((C33932 + C33931) * C1763 -
             ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
             (C33934 + C33933) * C51281) *
                C51167) *
               C51456 +
           ((C42018 * C1763 - (C41144 * C1760 + C41145 * C1762) +
             C42021 * C51281) *
                C51428 +
            ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
             (C34485 + C34486) * C51281) *
                C51167) *
               C51352) *
              C51202 * C1112 +
          ((C35515 * C51428 +
            ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
             (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
                C51167) *
               C51456 +
           ((C41557 * C1762 + C41558 * C1760 - (C34484 + C34483) * C1763 -
             (C34486 + C34485) * C51281) *
                C51428 +
            ((C34097 + C34098) * C1762 + (C34099 + C34100) * C1760 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C1763 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C51167) *
               C51352) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51428 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C51167) *
               C51456 +
           (((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51428 +
            (C41142 * C1762 + C41143 * C1760 - C42016 * C1763 -
             C42017 * C51281) *
                C51167) *
               C51352) *
              C289 +
          ((((C37207 + C37206) * C1763 -
             ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
             (C37209 + C37208) * C51281) *
                C51428 +
            (C42018 * C1763 - (C41144 * C1760 + C41145 * C1762) +
             C42021 * C51281) *
                C51167) *
               C51456 +
           (((C37211 + C37210) * C1763 -
             ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
             (C37213 + C37212) * C51281) *
                C51428 +
            ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
             (C37216 + C37217) * C51281) *
                C51167) *
               C51352) *
              C290 +
          ((C38456 * C51428 +
            (C41146 * C1762 + C41147 * C1760 - (C37215 + C37214) * C1763 -
             (C37217 + C37216) * C51281) *
                C51167) *
               C51456 +
           (((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
             (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
                C51428 +
            ((C36536 + C36537) * C1762 + (C36538 + C36539) * C1760 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C1763 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51167) *
               C51352) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C51443 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C51486 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C51253 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C51443) *
                       C51487 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51162 * C51456 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51162 * C51352) *
                        C51443 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51162 * C51352 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C682)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C797 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51444 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C798 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C797 +
                      (C47459 + C47460 + C47461) * C51444 -
                      (C48112 + C48113 + C48114) * C798 -
                      (C48115 + C48116 + C48117) * C51281) *
                         C51162 * C51352) *
                        C51443 +
                    (((C48114 + C48113 + C48112) * C798 -
                      ((C47461 + C47460 + C47459) * C51444 +
                       (C47458 + C47457 + C47456) * C797) +
                      (C48117 + C48116 + C48115) * C51281) *
                         C51162 * C51456 +
                     ((C44474 * C1646 + C51494 * C1650 + C44475 * C2805 +
                       C51495 * C2808 + C44476 * C4780 + C44473 * C4786) *
                          C798 -
                      ((C47462 + C47463 + C47464) * C51444 +
                       (C47465 + C47466 + C47467) * C797) +
                      (C44474 * C1651 + C51494 * C1658 + C44475 * C2809 +
                       C51495 * C2814 + C44476 * C4787 + C44473 * C4792) *
                          C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C292 +
                   ((((C44886 + C44885 + C44884) * C798 -
                      ((C44519 + C44518 + C44517) * C51444 +
                       (C44516 + C44515 + C44514) * C797) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51162 * C51456 +
                     ((C45430 + C45431 + C45432) * C798 -
                      ((C44702 + C44703 + C44704) * C51444 +
                       (C44705 + C44706 + C44707) * C797) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51162 * C51352) *
                        C51443 +
                    (((C44707 + C44706 + C44705) * C797 +
                      (C44704 + C44703 + C44702) * C51444 -
                      (C45432 + C45431 + C45430) * C798 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C797 +
                      (C44711 + C44712 + C44713) * C51444 -
                      (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                       C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                          C798 -
                      (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                       C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                          C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C289 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C290 +
                    (((C47467 + C47466 + C47465) * C118 +
                      (C47464 + C47463 + C47462) * C51217) *
                         C51162 * C51456 +
                     ((C44474 * C1188 + C51494 * C1196 + C44475 * C3349 +
                       C51495 * C3352 + C44476 * C3813 + C44473 * C3815) *
                          C118 +
                      (C44474 * C1195 + C51494 * C1200 + C44475 * C3353 +
                       C51495 * C3358 + C44476 * C3816 + C44473 * C3819) *
                          C51217) *
                         C51162 * C51352) *
                        C291) *
                       C292 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C290 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C289 -
                    (((C44476 * C3818 + C44473 * C3820 + C44475 * C3355 +
                       C51495 * C3359 + C44474 * C1193 + C51494 * C1199) *
                          C51217 +
                      (C44476 * C3814 + C44473 * C3817 + C44475 * C3350 +
                       C51495 * C3354 + C44474 * C1187 + C51494 * C1194) *
                          C118) *
                         C51162 * C51352 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51162 * C51456) *
                        C291) *
                       C51190)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51162 * C51456 +
                    ((C44474 * C297 + C51494 * C311 + C44475 * C961 +
                      C51495 * C966 + C44476 * C1299 + C44473 * C1303) *
                         C118 +
                     (C44474 * C310 + C51494 * C327 + C44475 * C967 +
                      C51495 * C976 + C44476 * C1304 + C44473 * C1311) *
                         C51217) *
                        C51162 * C51352) *
                       C51202 * C113 -
                   (((C44702 + C44703 + C44704) * C51217 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51162 * C51352 +
                    ((C44519 + C44518 + C44517) * C51217 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51162 * C51456) *
                       C51202 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51217) *
                        C51162 * C51456 +
                    ((C45054 + C45055 + C45056) * C118 +
                     (C45057 + C45058 + C45059) * C51217) *
                        C51162 * C51352) *
                       C51202 * C115 -
                   (((C44476 * C1310 + C44473 * C1314 + C44475 * C973 +
                      C51495 * C979 + C44474 * C304 + C51494 * C324) *
                         C51217 +
                     (C44476 * C1302 + C44473 * C1309 + C44475 * C964 +
                      C51495 * C972 + C44474 * C294 + C51494 * C305) *
                         C118) *
                        C51162 * C51352 +
                    ((C44531 + C44530 + C44529) * C51217 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51162 * C51456) *
                       C51202 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C483 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C480 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C484 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C481 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C485 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C482) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C483 +
                     (C47459 + C47460 + C47461) * C480 -
                     (C44476 * C4778 + C44473 * C4782 + C44475 * C1299 +
                      C51495 * C1303 + C44474 * C961 + C51494 * C966) *
                         C484 -
                     (C44476 * C4783 + C44473 * C4790 + C44475 * C1304 +
                      C51495 * C1311 + C44474 * C967 + C51494 * C976) *
                         C481 +
                     (C44474 * C1299 + C51494 * C1303 + C44475 * C4778 +
                      C51495 * C4782 + C44476 * C6781 + C44473 * C6783) *
                         C485 +
                     (C44474 * C1304 + C51494 * C1311 + C44475 * C4783 +
                      C51495 * C4790 + C44476 * C6784 + C44473 * C6787) *
                         C482) *
                        C51162 * C51352) *
                       C51202 * C292 +
                   (((C44886 + C44885 + C44884) * C484 -
                     ((C44519 + C44518 + C44517) * C480 +
                      (C44516 + C44515 + C44514) * C483) +
                     (C44889 + C44888 + C44887) * C481 -
                     (C44892 + C44891 + C44890) * C485 -
                     (C44895 + C44894 + C44893) * C482) *
                        C51162 * C51456 +
                    ((C45430 + C45431 + C45432) * C484 -
                     ((C44702 + C44703 + C44704) * C480 +
                      (C44705 + C44706 + C44707) * C483) +
                     (C45433 + C45434 + C45435) * C481 -
                     (C44476 * C6782 + C44473 * C6785 + C44475 * C4779 +
                      C51495 * C4784 + C44474 * C1300 + C51494 * C1305) *
                         C485 -
                     (C44476 * C6786 + C44473 * C6788 + C44475 * C4785 +
                      C51495 * C4791 + C44474 * C1306 + C51494 * C1312) *
                         C482) *
                        C51162 * C51352) *
                       C51202 * C51190)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C797 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51444 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C798 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C797 +
                     (C47459 + C47460 + C47461) * C51444 -
                     (C44476 * C4778 + C44473 * C4782 + C44475 * C1299 +
                      C51495 * C1303 + C44474 * C961 + C51494 * C966) *
                         C798 -
                     (C44476 * C4783 + C44473 * C4790 + C44475 * C1304 +
                      C51495 * C1311 + C44474 * C967 + C51494 * C976) *
                         C51281) *
                        C51162 * C51352) *
                       C51202 * C51486 +
                   (((C44886 + C44885 + C44884) * C798 -
                     ((C44519 + C44518 + C44517) * C51444 +
                      (C44516 + C44515 + C44514) * C797) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51162 * C51456 +
                    ((C45430 + C45431 + C45432) * C798 -
                     ((C44702 + C44703 + C44704) * C51444 +
                      (C44705 + C44706 + C44707) * C797) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51162 * C51352) *
                       C51202 * C51487 +
                   (((C44525 + C44524 + C44523) * C797 +
                     (C44522 + C44521 + C44520) * C51444 -
                     (C45220 + C45219 + C45218) * C798 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51162 * C51456 +
                    ((C45054 + C45055 + C45056) * C797 +
                     (C45057 + C45058 + C45059) * C51444 -
                     (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                      C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                         C798 -
                     (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                      C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                         C51281) *
                        C51162 * C51352) *
                       C51202 * C682)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51162 * C51456 +
                    ((C44474 * C297 + C51494 * C311 + C44475 * C961 +
                      C51495 * C966 + C44476 * C1299 + C44473 * C1303) *
                         C118 +
                     (C44474 * C310 + C51494 * C327 + C44475 * C967 +
                      C51495 * C976 + C44476 * C1304 + C44473 * C1311) *
                         C51217) *
                        C51162 * C51352) *
                       C51202 * C113 -
                   (((C44702 + C44703 + C44704) * C51217 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51162 * C51352 +
                    ((C44519 + C44518 + C44517) * C51217 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51162 * C51456) *
                       C51202 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51217) *
                        C51162 * C51456 +
                    ((C45054 + C45055 + C45056) * C118 +
                     (C45057 + C45058 + C45059) * C51217) *
                        C51162 * C51352) *
                       C51202 * C115 -
                   (((C44476 * C1310 + C44473 * C1314 + C44475 * C973 +
                      C51495 * C979 + C44474 * C304 + C51494 * C324) *
                         C51217 +
                     (C44476 * C1302 + C44473 * C1309 + C44475 * C964 +
                      C51495 * C972 + C44474 * C294 + C51494 * C305) *
                         C118) *
                        C51162 * C51352 +
                    ((C44531 + C44530 + C44529) * C51217 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51162 * C51456) *
                       C51202 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C289 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C290 +
                    (((C47467 + C47466 + C47465) * C118 +
                      (C47464 + C47463 + C47462) * C51217) *
                         C51162 * C51456 +
                     ((C44474 * C1188 + C51494 * C1196 + C44475 * C3349 +
                       C51495 * C3352 + C44476 * C3813 + C44473 * C3815) *
                          C118 +
                      (C44474 * C1195 + C51494 * C1200 + C44475 * C3353 +
                       C51495 * C3358 + C44476 * C3816 + C44473 * C3819) *
                          C51217) *
                         C51162 * C51352) *
                        C291) *
                       C292 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C290 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C289 -
                    (((C44476 * C3818 + C44473 * C3820 + C44475 * C3355 +
                       C51495 * C3359 + C44474 * C1193 + C51494 * C1199) *
                          C51217 +
                      (C44476 * C3814 + C44473 * C3817 + C44475 * C3350 +
                       C51495 * C3354 + C44474 * C1187 + C51494 * C1194) *
                          C118) *
                         C51162 * C51352 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51162 * C51456) *
                        C291) *
                       C51190)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C51488 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C51489 +
                    (((C47467 + C47466 + C47465) * C118 +
                      (C47464 + C47463 + C47462) * C51217) *
                         C51162 * C51456 +
                     ((C48374 + C48375 + C48376) * C118 +
                      (C48377 + C48378 + C48379) * C51217) *
                         C51162 * C51352) *
                        C1415) *
                       C51435 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C51489 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C51488 -
                    (((C44476 * C3818 + C44473 * C3820 + C44475 * C3355 +
                       C51495 * C3359 + C44474 * C1193 + C51494 * C1199) *
                          C51217 +
                      (C44476 * C3814 + C44473 * C3817 + C44475 * C3350 +
                       C51495 * C3354 + C44474 * C1187 + C51494 * C1194) *
                          C118) *
                         C51162 * C51352 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51162 * C51456) *
                        C1415) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C797 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51444 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C798 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C797 +
                     (C47459 + C47460 + C47461) * C51444 -
                     (C48112 + C48113 + C48114) * C798 -
                     (C48115 + C48116 + C48117) * C51281) *
                        C51162 * C51352) *
                       C51488 +
                   (((C48114 + C48113 + C48112) * C798 -
                     ((C47461 + C47460 + C47459) * C51444 +
                      (C47458 + C47457 + C47456) * C797) +
                     (C48117 + C48116 + C48115) * C51281) *
                        C51162 * C51456 +
                    ((C49042 + C49043 + C49044) * C798 -
                     ((C47462 + C47463 + C47464) * C51444 +
                      (C47465 + C47466 + C47467) * C797) +
                     (C49045 + C49046 + C49047) * C51281) *
                        C51162 * C51352) *
                       C51489 +
                   (((C47467 + C47466 + C47465) * C797 +
                     (C47464 + C47463 + C47462) * C51444 -
                     (C49044 + C49043 + C49042) * C798 -
                     (C49047 + C49046 + C49045) * C51281) *
                        C51162 * C51456 +
                    ((C48374 + C48375 + C48376) * C797 +
                     (C48377 + C48378 + C48379) * C51444 -
                     (C44476 * C21475 + C44473 * C21476 + C44475 * C3813 +
                      C51495 * C3815 + C44474 * C3349 + C51494 * C3352) *
                         C798 -
                     (C44476 * C21477 + C44473 * C21478 + C44475 * C3816 +
                      C51495 * C3819 + C44474 * C3353 + C51494 * C3358) *
                         C51281) *
                        C51162 * C51352) *
                       C1415) *
                  C51185) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C118 +
                     (C47459 + C47460 + C47461) * C51217) *
                        C51162 * C51352) *
                       C1180 -
                   (((C47462 + C47463 + C47464) * C51217 +
                     (C47465 + C47466 + C47467) * C118) *
                        C51162 * C51352 +
                    ((C47461 + C47460 + C47459) * C51217 +
                     (C47458 + C47457 + C47456) * C118) *
                        C51162 * C51456) *
                       C1181 +
                   (((C47467 + C47466 + C47465) * C118 +
                     (C47464 + C47463 + C47462) * C51217) *
                        C51162 * C51456 +
                    ((C48374 + C48375 + C48376) * C118 +
                     (C48377 + C48378 + C48379) * C51217) *
                        C51162 * C51352) *
                       C1182 -
                   (((C44476 * C20845 + C44473 * C20846 + C44475 * C4334 +
                      C51495 * C4337 + C44474 * C2589 + C51494 * C2594) *
                         C51217 +
                     (C44476 * C20843 + C44473 * C20844 + C44475 * C4331 +
                      C51495 * C4333 + C44474 * C2585 + C51494 * C2588) *
                         C118) *
                        C51162 * C51352 +
                    ((C48379 + C48378 + C48377) * C51217 +
                     (C48376 + C48375 + C48374) * C118) *
                        C51162 * C51456) *
                       C1183) *
                  C51185) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C1109 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C1111 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C51253 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C1109) *
                       C1112 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51162 * C51456 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51162 * C51352) *
                        C1109 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51162 * C51352 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C1113)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C483 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C480 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C484 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C481 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C485 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C482) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C483 +
                     (C47459 + C47460 + C47461) * C480 -
                     (C48112 + C48113 + C48114) * C484 -
                     (C48115 + C48116 + C48117) * C481 +
                     (C48538 + C48539 + C48540) * C485 +
                     (C48541 + C48542 + C48543) * C482) *
                        C51162 * C51352) *
                       C1109 +
                   (((C48114 + C48113 + C48112) * C484 -
                     ((C47461 + C47460 + C47459) * C480 +
                      (C47458 + C47457 + C47456) * C483) +
                     (C48117 + C48116 + C48115) * C481 -
                     (C48540 + C48539 + C48538) * C485 -
                     (C48543 + C48542 + C48541) * C482) *
                        C51162 * C51456 +
                    ((C44474 * C1646 + C51494 * C1650 + C44475 * C2805 +
                      C51495 * C2808 + C44476 * C4780 + C44473 * C4786) *
                         C484 -
                     ((C47462 + C47463 + C47464) * C480 +
                      (C47465 + C47466 + C47467) * C483) +
                     (C44474 * C1651 + C51494 * C1658 + C44475 * C2809 +
                      C51495 * C2814 + C44476 * C4787 + C44473 * C4792) *
                         C481 -
                     (C44476 * C23149 + C44473 * C23150 + C44475 * C4780 +
                      C51495 * C4786 + C44474 * C2805 + C51494 * C2808) *
                         C485 -
                     (C44476 * C23151 + C44473 * C23152 + C44475 * C4787 +
                      C51495 * C4792 + C44474 * C2809 + C51494 * C2814) *
                         C482) *
                        C51162 * C51352) *
                       C51253) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C797 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51444 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C798 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C797 +
                      (C47459 + C47460 + C47461) * C51444 -
                      (C48112 + C48113 + C48114) * C798 -
                      (C48115 + C48116 + C48117) * C51281) *
                         C51162 * C51352) *
                        C1109 +
                    (((C48114 + C48113 + C48112) * C798 -
                      ((C47461 + C47460 + C47459) * C51444 +
                       (C47458 + C47457 + C47456) * C797) +
                      (C48117 + C48116 + C48115) * C51281) *
                         C51162 * C51456 +
                     ((C44474 * C1646 + C51494 * C1650 + C44475 * C2805 +
                       C51495 * C2808 + C44476 * C4780 + C44473 * C4786) *
                          C798 -
                      ((C47462 + C47463 + C47464) * C51444 +
                       (C47465 + C47466 + C47467) * C797) +
                      (C44474 * C1651 + C51494 * C1658 + C44475 * C2809 +
                       C51495 * C2814 + C44476 * C4787 + C44473 * C4792) *
                          C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C51435 +
                   ((((C44886 + C44885 + C44884) * C798 -
                      ((C44519 + C44518 + C44517) * C51444 +
                       (C44516 + C44515 + C44514) * C797) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51162 * C51456 +
                     ((C45430 + C45431 + C45432) * C798 -
                      ((C44702 + C44703 + C44704) * C51444 +
                       (C44705 + C44706 + C44707) * C797) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51162 * C51352) *
                        C1109 +
                    (((C44707 + C44706 + C44705) * C797 +
                      (C44704 + C44703 + C44702) * C51444 -
                      (C45432 + C45431 + C45430) * C798 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C797 +
                      (C44711 + C44712 + C44713) * C51444 -
                      (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                       C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                          C798 -
                      (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                       C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                          C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C118 +
                      (C47459 + C47460 + C47461) * C51217) *
                         C51162 * C51352) *
                        C1109 -
                    (((C47462 + C47463 + C47464) * C51217 +
                      (C47465 + C47466 + C47467) * C118) *
                         C51162 * C51352 +
                     ((C47461 + C47460 + C47459) * C51217 +
                      (C47458 + C47457 + C47456) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C1111 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51162 * C51352) *
                        C51253 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51162 * C51352 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51162 * C51456) *
                        C1109) *
                       C1112 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51162 * C51456 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51162 * C51352) *
                        C1109 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51162 * C51352 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51162 * C51456) *
                        C51253) *
                       C1113)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C118 +
                     (C47459 + C47460 + C47461) * C51217) *
                        C51162 * C51352) *
                       C1180 -
                   (((C47462 + C47463 + C47464) * C51217 +
                     (C47465 + C47466 + C47467) * C118) *
                        C51162 * C51352 +
                    ((C47461 + C47460 + C47459) * C51217 +
                     (C47458 + C47457 + C47456) * C118) *
                        C51162 * C51456) *
                       C1181 +
                   (((C47467 + C47466 + C47465) * C118 +
                     (C47464 + C47463 + C47462) * C51217) *
                        C51162 * C51456 +
                    ((C48374 + C48375 + C48376) * C118 +
                     (C48377 + C48378 + C48379) * C51217) *
                        C51162 * C51352) *
                       C1182 -
                   (((C44476 * C20845 + C44473 * C20846 + C44475 * C4334 +
                      C51495 * C4337 + C44474 * C2589 + C51494 * C2594) *
                         C51217 +
                     (C44476 * C20843 + C44473 * C20844 + C44475 * C4331 +
                      C51495 * C4333 + C44474 * C2585 + C51494 * C2588) *
                         C118) *
                        C51162 * C51352 +
                    ((C48379 + C48378 + C48377) * C51217 +
                     (C48376 + C48375 + C48374) * C118) *
                        C51162 * C51456) *
                       C1183) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C1762 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C1760 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C1763 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51162 * C51456 +
                     ((C47456 + C47457 + C47458) * C1762 +
                      (C47459 + C47460 + C47461) * C1760 -
                      (C48112 + C48113 + C48114) * C1763 -
                      (C48115 + C48116 + C48117) * C51281) *
                         C51162 * C51352) *
                        C51443 +
                    (((C48114 + C48113 + C48112) * C1763 -
                      ((C47461 + C47460 + C47459) * C1760 +
                       (C47458 + C47457 + C47456) * C1762) +
                      (C48117 + C48116 + C48115) * C51281) *
                         C51162 * C51456 +
                     ((C49042 + C49043 + C49044) * C1763 -
                      ((C47462 + C47463 + C47464) * C1760 +
                       (C47465 + C47466 + C47467) * C1762) +
                      (C49045 + C49046 + C49047) * C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C51435 +
                   ((((C44886 + C44885 + C44884) * C1763 -
                      ((C44519 + C44518 + C44517) * C1760 +
                       (C44516 + C44515 + C44514) * C1762) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51162 * C51456 +
                     ((C45430 + C45431 + C45432) * C1763 -
                      ((C44702 + C44703 + C44704) * C1760 +
                       (C44705 + C44706 + C44707) * C1762) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51162 * C51352) *
                        C51443 +
                    (((C44707 + C44706 + C44705) * C1762 +
                      (C44704 + C44703 + C44702) * C1760 -
                      (C45432 + C45431 + C45430) * C1763 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51162 * C51456 +
                     ((C44708 + C44709 + C44710) * C1762 +
                      (C44711 + C44712 + C44713) * C1760 -
                      (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                       C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                          C1763 -
                      (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                       C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                          C51281) *
                         C51162 * C51352) *
                        C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C2217 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51490 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C2218 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51491 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C2219 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C2216) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C2217 +
                     (C47459 + C47460 + C47461) * C51490 -
                     (C48112 + C48113 + C48114) * C2218 -
                     (C48115 + C48116 + C48117) * C51491 +
                     (C48538 + C48539 + C48540) * C2219 +
                     (C48541 + C48542 + C48543) * C2216) *
                        C51162 * C51352) *
                       C51443 +
                   (((C48114 + C48113 + C48112) * C2218 -
                     ((C47461 + C47460 + C47459) * C51490 +
                      (C47458 + C47457 + C47456) * C2217) +
                     (C48117 + C48116 + C48115) * C51491 -
                     (C48540 + C48539 + C48538) * C2219 -
                     (C48543 + C48542 + C48541) * C2216) *
                        C51162 * C51456 +
                    ((C49042 + C49043 + C49044) * C2218 -
                     ((C47462 + C47463 + C47464) * C51490 +
                      (C47465 + C47466 + C47467) * C2217) +
                     (C49045 + C49046 + C49047) * C51491 -
                     (C44476 * C23149 + C44473 * C23150 + C44475 * C4780 +
                      C51495 * C4786 + C44474 * C2805 + C51494 * C2808) *
                         C2219 -
                     (C44476 * C23151 + C44473 * C23152 + C44475 * C4787 +
                      C51495 * C4792 + C44474 * C2809 + C51494 * C2814) *
                         C2216) *
                        C51162 * C51352) *
                       C51253) *
                  C51185) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C1762 +
                     (C47459 + C47460 + C47461) * C1760 -
                     (C48112 + C48113 + C48114) * C1763 -
                     (C48115 + C48116 + C48117) * C51281) *
                        C51162 * C51352) *
                       C289 +
                   (((C48114 + C48113 + C48112) * C1763 -
                     ((C47461 + C47460 + C47459) * C1760 +
                      (C47458 + C47457 + C47456) * C1762) +
                     (C48117 + C48116 + C48115) * C51281) *
                        C51162 * C51456 +
                    ((C49042 + C49043 + C49044) * C1763 -
                     ((C47462 + C47463 + C47464) * C1760 +
                      (C47465 + C47466 + C47467) * C1762) +
                     (C49045 + C49046 + C49047) * C51281) *
                        C51162 * C51352) *
                       C290 +
                   (((C47467 + C47466 + C47465) * C1762 +
                     (C47464 + C47463 + C47462) * C1760 -
                     (C49044 + C49043 + C49042) * C1763 -
                     (C49047 + C49046 + C49045) * C51281) *
                        C51162 * C51456 +
                    ((C48374 + C48375 + C48376) * C1762 +
                     (C48377 + C48378 + C48379) * C1760 -
                     (C44476 * C21475 + C44473 * C21476 + C44475 * C3813 +
                      C51495 * C3815 + C44474 * C3349 + C51494 * C3352) *
                         C1763 -
                     (C44476 * C21477 + C44473 * C21478 + C44475 * C3816 +
                      C51495 * C3819 + C44474 * C3353 + C51494 * C3358) *
                         C51281) *
                        C51162 * C51352) *
                       C291) *
                  C51185) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C1762 +
                     (C47459 + C47460 + C47461) * C1760 -
                     (C48112 + C48113 + C48114) * C1763 -
                     (C48115 + C48116 + C48117) * C51281) *
                        C51162 * C51352) *
                       C51202 * C1111 +
                   (((C44886 + C44885 + C44884) * C1763 -
                     ((C44519 + C44518 + C44517) * C1760 +
                      (C44516 + C44515 + C44514) * C1762) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51162 * C51456 +
                    ((C45430 + C45431 + C45432) * C1763 -
                     ((C44702 + C44703 + C44704) * C1760 +
                      (C44705 + C44706 + C44707) * C1762) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51162 * C51352) *
                       C51202 * C1112 +
                   (((C44525 + C44524 + C44523) * C1762 +
                     (C44522 + C44521 + C44520) * C1760 -
                     (C45220 + C45219 + C45218) * C1763 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51162 * C51456 +
                    ((C45054 + C45055 + C45056) * C1762 +
                     (C45057 + C45058 + C45059) * C1760 -
                     (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                      C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                         C1763 -
                     (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                      C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                         C51281) *
                        C51162 * C51352) *
                       C51202 * C1113)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                     C51495 * C496 + C44476 * C487 + C44473 * C498) *
                        C1954 +
                    (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                     C51495 * C516 + C44476 * C499 + C44473 * C517) *
                        C1950 -
                    (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                     C51495 * C498 + C44474 * C486 + C51494 * C496) *
                        C1955 -
                    (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                     C51495 * C517 + C44474 * C497 + C51494 * C516) *
                        C1951 +
                    (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                     C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                        C1956 +
                    (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                     C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                        C1952 -
                    (C44476 * C7665 + C44473 * C7667 + C44475 * C5799 +
                     C51495 * C5802 + C44474 * C1958 + C51494 * C1962) *
                        C1957 -
                    (C44476 * C7668 + C44473 * C7671 + C44475 * C5803 +
                     C51495 * C5808 + C44474 * C1963 + C51494 * C1970) *
                        C1953) *
                       C51162 * C51456 +
                   ((C47456 + C47457 + C47458) * C1954 +
                    (C47459 + C47460 + C47461) * C1950 -
                    (C48112 + C48113 + C48114) * C1955 -
                    (C48115 + C48116 + C48117) * C1951 +
                    (C48538 + C48539 + C48540) * C1956 +
                    (C48541 + C48542 + C48543) * C1952 -
                    (C44476 * C24065 + C44473 * C24066 + C44475 * C6781 +
                     C51495 * C6783 + C44474 * C4778 + C51494 * C4782) *
                        C1957 -
                    (C44476 * C24067 + C44473 * C24068 + C44475 * C6784 +
                     C51495 * C6787 + C44474 * C4783 + C51494 * C4790) *
                        C1953) *
                       C51162 * C51352) *
                  C51202 * C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C2217 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51490 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C2218 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51491 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C2219 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C2216) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C2217 +
                     (C47459 + C47460 + C47461) * C51490 -
                     (C48112 + C48113 + C48114) * C2218 -
                     (C48115 + C48116 + C48117) * C51491 +
                     (C48538 + C48539 + C48540) * C2219 +
                     (C48541 + C48542 + C48543) * C2216) *
                        C51162 * C51352) *
                       C51202 * C51435 +
                   (((C44886 + C44885 + C44884) * C2218 -
                     ((C44519 + C44518 + C44517) * C51490 +
                      (C44516 + C44515 + C44514) * C2217) +
                     (C44889 + C44888 + C44887) * C51491 -
                     (C44892 + C44891 + C44890) * C2219 -
                     (C44895 + C44894 + C44893) * C2216) *
                        C51162 * C51456 +
                    ((C45430 + C45431 + C45432) * C2218 -
                     ((C44702 + C44703 + C44704) * C51490 +
                      (C44705 + C44706 + C44707) * C2217) +
                     (C45433 + C45434 + C45435) * C51491 -
                     (C44476 * C6782 + C44473 * C6785 + C44475 * C4779 +
                      C51495 * C4784 + C44474 * C1300 + C51494 * C1305) *
                         C2219 -
                     (C44476 * C6786 + C44473 * C6788 + C44475 * C4785 +
                      C51495 * C4791 + C44474 * C1306 + C51494 * C1312) *
                         C2216) *
                        C51162 * C51352) *
                       C51202 * C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C1762 +
                     (C47459 + C47460 + C47461) * C1760 -
                     (C48112 + C48113 + C48114) * C1763 -
                     (C48115 + C48116 + C48117) * C51281) *
                        C51162 * C51352) *
                       C51202 * C1111 +
                   (((C44886 + C44885 + C44884) * C1763 -
                     ((C44519 + C44518 + C44517) * C1760 +
                      (C44516 + C44515 + C44514) * C1762) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51162 * C51456 +
                    ((C45430 + C45431 + C45432) * C1763 -
                     ((C44702 + C44703 + C44704) * C1760 +
                      (C44705 + C44706 + C44707) * C1762) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51162 * C51352) *
                       C51202 * C1112 +
                   (((C44525 + C44524 + C44523) * C1762 +
                     (C44522 + C44521 + C44520) * C1760 -
                     (C45220 + C45219 + C45218) * C1763 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51162 * C51456 +
                    ((C45054 + C45055 + C45056) * C1762 +
                     (C45057 + C45058 + C45059) * C1760 -
                     (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                      C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                         C1763 -
                     (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                      C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                         C51281) *
                        C51162 * C51352) *
                       C51202 * C1113)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51162 * C51456 +
                    ((C47456 + C47457 + C47458) * C1762 +
                     (C47459 + C47460 + C47461) * C1760 -
                     (C48112 + C48113 + C48114) * C1763 -
                     (C48115 + C48116 + C48117) * C51281) *
                        C51162 * C51352) *
                       C289 +
                   (((C48114 + C48113 + C48112) * C1763 -
                     ((C47461 + C47460 + C47459) * C1760 +
                      (C47458 + C47457 + C47456) * C1762) +
                     (C48117 + C48116 + C48115) * C51281) *
                        C51162 * C51456 +
                    ((C49042 + C49043 + C49044) * C1763 -
                     ((C47462 + C47463 + C47464) * C1760 +
                      (C47465 + C47466 + C47467) * C1762) +
                     (C49045 + C49046 + C49047) * C51281) *
                        C51162 * C51352) *
                       C290 +
                   (((C47467 + C47466 + C47465) * C1762 +
                     (C47464 + C47463 + C47462) * C1760 -
                     (C49044 + C49043 + C49042) * C1763 -
                     (C49047 + C49046 + C49045) * C51281) *
                        C51162 * C51456 +
                    ((C48374 + C48375 + C48376) * C1762 +
                     (C48377 + C48378 + C48379) * C1760 -
                     (C44476 * C21475 + C44473 * C21476 + C44475 * C3813 +
                      C51495 * C3815 + C44474 * C3349 + C51494 * C3352) *
                         C1763 -
                     (C44476 * C21477 + C44473 * C21478 + C44475 * C3816 +
                      C51495 * C3819 + C44474 * C3353 + C51494 * C3358) *
                         C51281) *
                        C51162 * C51352) *
                       C291) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C51443 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C51486 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C51443) *
              C51487 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C51443 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C51443 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51253) *
              C51486 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51253 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C51443) *
              C51487 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
               C51303 * C51443 -
           (((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C17435 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C17434 +
            C34101 * C17433) *
               C51303 * C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C51443 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C51253) *
              C51486 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C51253 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C51443) *
              C51487 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
             C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
             C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
                C51217) *
               C51162 * C51303 * C51443 -
           ((C39114 * C6371 + C39110 * C6372 + C39113 * C1308 + C39109 * C1313 +
             C39112 * C971 + C39108 * C978 + C39111 * C306 + C39107 * C325) *
                C51217 +
            (C39114 * C6369 + C39110 * C6370 + C39113 * C1301 + C39109 * C1307 +
             C39112 * C963 + C39108 * C970 + C39111 * C295 + C39107 * C307) *
                C118) *
               C51162 * C51303 * C51253) *
              C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            (C36542 * C797 + C36543 * C51444 - (C37210 + C37211) * C798 -
             (C37212 + C37213) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C37207 + C37206) * C798 -
             ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C798 -
             ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
              C51378 * C3815) *
                 C798 -
             ((C36532 + C36533) * C51444 + (C36534 + C36535) * C797) +
             (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C292 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
             (C37215 + C37214) * C798 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C797 + (C36538 + C36539) * C51444 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C798 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C17434 +
            C34268 * C17435) *
               C51303 * C51443 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C798 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C51444 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C797) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C292 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C798 -
             ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C51443 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
             (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C797 + (C34099 + C34100) * C51444 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C798 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C797 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51444 -
            (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
             C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
                C798 -
            (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
             C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
                C51281) *
               C51162 * C51303 * C51443 +
           ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
             C39113 * C4778 + C39109 * C4782 + C39114 * C6781 +
             C39110 * C6783) *
                C798 -
            ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 +
              C39109 * C1311 + C39112 * C967 + C39108 * C976 + C39111 * C310 +
              C39107 * C327) *
                 C51444 +
             (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 +
              C39109 * C1303 + C39112 * C961 + C39108 * C966 + C39111 * C297 +
              C39107 * C311) *
                 C797) +
            (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
             C39113 * C4783 + C39109 * C4790 + C39114 * C6784 +
             C39110 * C6787) *
                C51281) *
               C51162 * C51303 * C51253) *
              C292 +
          (((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
             C39113 * C1959 + C39109 * C1964 + C39114 * C5800 +
             C39110 * C5804) *
                C798 -
            ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
              C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                 C51444 +
             (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
              C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                 C797) +
            (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
             C39113 * C1965 + C39109 * C1971 + C39114 * C5805 +
             C39110 * C5809) *
                C51281) *
               C51162 * C51303 * C51443 +
           ((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C797 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51444 -
            (C39114 * C6782 + C39110 * C6785 + C39113 * C4779 + C39109 * C4784 +
             C39112 * C1300 + C39108 * C1305 + C39111 * C962 + C39107 * C968) *
                C798 -
            (C39114 * C6786 + C39110 * C6788 + C39113 * C4785 + C39109 * C4791 +
             C39112 * C1306 + C39108 * C1312 + C39111 * C969 + C39107 * C977) *
                C51281) *
               C51162 * C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                 C51378 * C496) *
                    C118 +
                (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                 C51378 * C516) *
                    C51217) *
                   C17433 +
               ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) *
                   C17434 +
               C33549 * C17435) *
                  C51303 * C51202 * C113 -
              (C33550 * C17435 +
               ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) *
                   C17434 +
               ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) *
                   C17433) *
                  C51303 * C51202 * C114 +
              (C33549 * C17433 +
               ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) *
                   C17434 +
               ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) *
                   C17435) *
                  C51303 * C51202 * C115 -
              (((C33491 * C801 + C51378 * C802 + C33490 * C137 +
                 C33488 * C145) *
                    C51217 +
                (C33491 * C799 + C51378 * C800 + C33490 * C124 +
                 C33488 * C136) *
                    C118) *
                   C17435 +
               ((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) *
                   C17434 +
               C33550 * C17433) *
                  C51303 * C51202 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                  C51378 * C496) *
                     C118 +
                 (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                  C51378 * C516) *
                     C51217) *
                    C17433 +
                ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) *
                    C17434 +
                C33549 * C17435) *
                   C51303 * C289 -
               (((C33729 + C33730) * C51217 + (C33731 + C33732) * C118) *
                    C17435 +
                ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) *
                    C17434 +
                ((C33491 * C967 + C51378 * C976 + C33490 * C310 +
                  C33488 * C327) *
                     C51217 +
                 (C33491 * C961 + C51378 * C966 + C33490 * C297 +
                  C33488 * C311) *
                     C118) *
                    C17433) *
                   C51303 * C290 +
               (((C33490 * C298 + C33488 * C312 + C33491 * C1646 +
                  C51378 * C1650) *
                     C118 +
                 (C33490 * C313 + C33488 * C328 + C33491 * C1651 +
                  C51378 * C1658) *
                     C51217) *
                    C17433 +
                ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) *
                    C17434 +
                ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) *
                    C17435) *
                   C51303 * C291) *
                  C292 +
              ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) *
                    C17433 +
                ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) *
                    C17434 +
                ((C33490 * C294 + C33488 * C305 + C33491 * C964 +
                  C51378 * C972) *
                     C118 +
                 (C33490 * C304 + C33488 * C324 + C33491 * C973 +
                  C51378 * C979) *
                     C51217) *
                    C17435) *
                   C51303 * C290 -
               (C33550 * C17435 +
                ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) *
                    C17434 +
                ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) *
                    C17433) *
                   C51303 * C289 -
               (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 +
                  C33488 * C331) *
                     C51217 +
                 (C33491 * C1649 + C51378 * C1656 + C33490 * C301 +
                  C33488 * C318) *
                     C118) *
                    C17435 +
                ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) *
                    C17434 +
                ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) *
                    C17433) *
                   C51303 * C291) *
                  C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C17433 +
           ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
            (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
            (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
               C17434 +
           (C33541 * C483 + C33542 * C480 - (C33931 + C33932) * C484 -
            (C33933 + C33934) * C481 + (C33935 + C33936) * C485 +
            (C33937 + C33938) * C482) *
               C17435) *
              C51303 * C51202 * C292 +
          (((C33924 + C33923) * C484 -
            ((C33528 + C33527) * C480 + (C33526 + C33525) * C483) +
            (C33926 + C33925) * C481 - (C33928 + C33927) * C485 -
            (C33930 + C33929) * C482) *
               C17433 +
           ((C33932 + C33931) * C484 -
            ((C33532 + C33531) * C480 + (C33530 + C33529) * C483) +
            (C33934 + C33933) * C481 - (C33936 + C33935) * C485 -
            (C33938 + C33937) * C482) *
               C17434 +
           ((C33490 * C492 + C33488 * C508 + C33491 * C493 + C51378 * C510) *
                C484 -
            (C33543 * C480 + C33544 * C483) +
            (C33490 * C509 + C33488 * C522 + C33491 * C511 + C51378 * C523) *
                C481 -
            (C33491 * C1961 + C51378 * C1968 + C33490 * C493 + C33488 * C510) *
                C485 -
            (C33491 * C1969 + C51378 * C1973 + C33490 * C511 + C33488 * C523) *
                C482) *
               C17435) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C33490 * C297 + C33488 * C311 + C33491 * C961 + C51378 * C966) *
                C118 +
            (C33490 * C310 + C33488 * C327 + C33491 * C967 + C51378 * C976) *
                C51217) *
               C51162 * C2437 +
           ((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C51162 * C2438) *
              C51202 * C113 -
          (((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C51162 *
               C2438 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
               C2437 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
               C2436) *
              C51202 * C114 +
          (C33549 * C51162 * C2436 +
           ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
               C2437 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
               C2438) *
              C51202 * C115 -
          (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                C51217 +
            (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                C118) *
               C51162 * C2438 +
           ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51162 *
               C2437 +
           C33550 * C51162 * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C289 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C290 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C33490 * C2585 + C33488 * C2588 + C33491 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C33490 * C2589 + C33488 * C2594 + C33491 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C2438) *
               C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C290 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C289 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C2436 +
           ((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
            (C33491 * C1299 + C51378 * C1303 + C33490 * C961 + C33488 * C966) *
                C484 -
            (C33491 * C1304 + C51378 * C1311 + C33490 * C967 + C33488 * C976) *
                C481 +
            (C33490 * C1299 + C33488 * C1303 + C33491 * C4778 +
             C51378 * C4782) *
                C485 +
            (C33490 * C1304 + C33488 * C1311 + C33491 * C4783 +
             C51378 * C4790) *
                C482) *
               C51162 * C2437 +
           (C36542 * C483 + C36543 * C480 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C484 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C481 +
            (C33490 * C2805 + C33488 * C2808 + C33491 * C4780 +
             C51378 * C4786) *
                C485 +
            (C33490 * C2809 + C33488 * C2814 + C33491 * C4787 +
             C51378 * C4792) *
                C482) *
               C51162 * C2438) *
              C51202 * C292 +
          (((C33924 + C33923) * C484 -
            ((C33528 + C33527) * C480 + (C33526 + C33525) * C483) +
            (C33926 + C33925) * C481 - (C33928 + C33927) * C485 -
            (C33930 + C33929) * C482) *
               C51162 * C2436 +
           ((C34479 + C34480) * C484 -
            ((C33733 + C33734) * C480 + (C33735 + C33736) * C483) +
            (C34481 + C34482) * C481 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C485 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C482) *
               C51162 * C2437 +
           ((C33490 * C1647 + C33488 * C1652 + C33491 * C2806 +
             C51378 * C2810) *
                C484 -
            (C36522 * C480 + C36523 * C483) +
            (C33490 * C1653 + C33488 * C1659 + C33491 * C2811 +
             C51378 * C2815) *
                C481 -
            (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
             C33488 * C2810) *
                C485 -
            (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
             C33488 * C2815) *
                C482) *
               C51162 * C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51217) *
              C51162 * C51303 * C51202 * C113 -
          ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
            C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
               C51217 +
           (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
            C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
               C118) *
              C51162 * C51303 * C51202 * C114 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
            C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
               C118 +
           (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
            C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
               C51217) *
              C51162 * C51303 * C51202 * C115 -
          ((C39114 * C1969 + C39110 * C1973 + C39113 * C511 + C39109 * C523 +
            C39112 * C509 + C39108 * C522 + C39111 * C133 + C39107 * C143) *
               C51217 +
           (C39114 * C1961 + C39110 * C1968 + C39113 * C493 + C39109 * C510 +
            C39112 * C492 + C39108 * C508 + C39111 * C122 + C39107 * C132) *
               C118) *
              C51162 * C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C289 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C290 +
           ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
             C39113 * C2805 + C39109 * C2808 + C39114 * C4780 +
             C39110 * C4786) *
                C118 +
            (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
             C39113 * C2809 + C39109 * C2814 + C39114 * C4787 +
             C39110 * C4792) *
                C51217) *
               C51162 * C51303 * C291) *
              C292 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C290 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C289 -
           ((C39114 * C4789 + C39110 * C4793 + C39113 * C2811 + C39109 * C2815 +
             C39112 * C1653 + C39108 * C1659 + C39111 * C315 + C39107 * C329) *
                C51217 +
            (C39114 * C4781 + C39110 * C4788 + C39113 * C2806 + C39109 * C2810 +
             C39112 * C1647 + C39108 * C1652 + C39111 * C299 + C39107 * C314) *
                C118) *
               C51162 * C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C483 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C480 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C484 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C481 +
           (C39111 * C487 + C39107 * C498 + C39112 * C1958 + C39108 * C1962 +
            C39113 * C5799 + C39109 * C5802 + C39114 * C7665 + C39110 * C7667) *
               C485 +
           (C39111 * C499 + C39107 * C517 + C39112 * C1963 + C39108 * C1970 +
            C39113 * C5803 + C39109 * C5808 + C39114 * C7668 + C39110 * C7671) *
               C482) *
              C51162 * C51303 * C51202 * C292 +
          ((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
            C39113 * C1959 + C39109 * C1964 + C39114 * C5800 + C39110 * C5804) *
               C484 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C480 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C483) +
           (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
            C39113 * C1965 + C39109 * C1971 + C39114 * C5805 + C39110 * C5809) *
               C481 -
           (C39114 * C7666 + C39110 * C7669 + C39113 * C5800 + C39109 * C5804 +
            C39112 * C1959 + C39108 * C1964 + C39111 * C489 + C39107 * C502) *
               C485 -
           (C39114 * C7670 + C39110 * C7672 + C39113 * C5805 + C39109 * C5809 +
            C39112 * C1965 + C39108 * C1971 + C39111 * C503 + C39107 * C519) *
               C482) *
              C51162 * C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
            (C33491 * C1299 + C51378 * C1303 + C33490 * C961 + C33488 * C966) *
                C798 -
            (C33491 * C1304 + C51378 * C1311 + C33490 * C967 + C33488 * C976) *
                C51281) *
               C51162 * C2437 +
           (C36542 * C797 + C36543 * C51444 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C798 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C51162 * C2438) *
              C51202 * C51486 +
          (((C33924 + C33923) * C798 -
            ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C798 -
            ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C33490 * C1647 + C33488 * C1652 + C33491 * C2806 +
             C51378 * C2810) *
                C798 -
            (C36522 * C51444 + C36523 * C797) +
            (C33490 * C1653 + C33488 * C1659 + C33491 * C2811 +
             C51378 * C2815) *
                C51281) *
               C51162 * C2438) *
              C51202 * C51487 +
          (C34268 * C51162 * C2436 +
           ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
            (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C798 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
            (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
               C17434 +
           C34268 * C17435) *
              C51303 * C51202 * C51486 +
          (((C33924 + C33923) * C798 -
            ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
            (C33926 + C33925) * C51281) *
               C17433 +
           ((C33932 + C33931) * C798 -
            ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
            (C33934 + C33933) * C51281) *
               C17434 +
           ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
            (C34265 + C34266) * C51281) *
               C17435) *
              C51303 * C51202 * C51487 +
          (C34268 * C17433 +
           ((C33536 + C33535) * C797 + (C33534 + C33533) * C51444 -
            (C34264 + C34263) * C798 - (C34266 + C34265) * C51281) *
               C17434 +
           ((C33537 + C33538) * C797 + (C33539 + C33540) * C51444 -
            (C33491 * C495 + C51378 * C514 + C33490 * C494 + C33488 * C512) *
                C798 -
            (C33491 * C515 + C51378 * C525 + C33490 * C513 + C33488 * C524) *
                C51281) *
               C17435) *
              C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C797 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51444 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C798 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C51202 * C51486 +
          ((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
            C39113 * C1959 + C39109 * C1964 + C39114 * C5800 + C39110 * C5804) *
               C798 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51444 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C797) +
           (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
            C39113 * C1965 + C39109 * C1971 + C39114 * C5805 + C39110 * C5809) *
               C51281) *
              C51162 * C51303 * C51202 * C51487 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
            C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
               C797 +
           (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
            C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
               C51444 -
           (C39114 * C5801 + C39110 * C5806 + C39113 * C1960 + C39109 * C1966 +
            C39112 * C491 + C39108 * C506 + C39111 * C490 + C39107 * C504) *
               C798 -
           (C39114 * C5807 + C39110 * C5810 + C39113 * C1967 + C39109 * C1972 +
            C39112 * C507 + C39108 * C521 + C39111 * C505 + C39107 * C520) *
               C51281) *
              C51162 * C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C289 -
           (((C33729 + C33730) * C51217 + (C33731 + C33732) * C118) * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C290 +
           (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                 C118 +
             (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                 C51217) *
                C17433 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
               C51303 * C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C33490 * C294 + C33488 * C305 + C33491 * C964 + C51378 * C972) *
                 C118 +
             (C33490 * C304 + C33488 * C324 + C33491 * C973 + C51378 * C979) *
                 C51217) *
                C17435) *
               C51303 * C290 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C289 -
           (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                 C51217 +
             (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                 C118) *
                C17435 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C17434 +
            ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C17433) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C51202 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
              C51303 * C51202 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
              C51303 * C51202 * C115 -
          (((C33491 * C801 + C51378 * C802 + C33490 * C137 + C33488 * C145) *
                C51217 +
            (C33491 * C799 + C51378 * C800 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C33490 * C297 + C33488 * C311 + C33491 * C961 + C51378 * C966) *
                C118 +
            (C33490 * C310 + C33488 * C327 + C33491 * C967 + C51378 * C976) *
                C51217) *
               C51162 * C2437 +
           ((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C51162 * C2438) *
              C51202 * C113 -
          (((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C51162 *
               C2438 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
               C2437 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
               C2436) *
              C51202 * C114 +
          (C33549 * C51162 * C2436 +
           ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
               C2437 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
               C2438) *
              C51202 * C115 -
          (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                C51217 +
            (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                C118) *
               C51162 * C2438 +
           ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51162 *
               C2437 +
           C33550 * C51162 * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C289 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C290 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C33490 * C2585 + C33488 * C2588 + C33491 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C33490 * C2589 + C33488 * C2594 + C33491 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C2438) *
               C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C290 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C289 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51217) *
              C51162 * C51303 * C51202 * C113 -
          ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
            C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
               C51217 +
           (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
            C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
               C118) *
              C51162 * C51303 * C51202 * C114 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
            C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
               C118 +
           (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
            C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
               C51217) *
              C51162 * C51303 * C51202 * C115 -
          ((C39114 * C1969 + C39110 * C1973 + C39113 * C511 + C39109 * C523 +
            C39112 * C509 + C39108 * C522 + C39111 * C133 + C39107 * C143) *
               C51217 +
           (C39114 * C1961 + C39110 * C1968 + C39113 * C493 + C39109 * C510 +
            C39112 * C492 + C39108 * C508 + C39111 * C122 + C39107 * C132) *
               C118) *
              C51162 * C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C289 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C290 +
           ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
             C39113 * C2805 + C39109 * C2808 + C39114 * C4780 +
             C39110 * C4786) *
                C118 +
            (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
             C39113 * C2809 + C39109 * C2814 + C39114 * C4787 +
             C39110 * C4792) *
                C51217) *
               C51162 * C51303 * C291) *
              C292 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C290 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C289 -
           ((C39114 * C4789 + C39110 * C4793 + C39113 * C2811 + C39109 * C2815 +
             C39112 * C1653 + C39108 * C1659 + C39111 * C315 + C39107 * C329) *
                C51217 +
            (C39114 * C4781 + C39110 * C4788 + C39113 * C2806 + C39109 * C2810 +
             C39112 * C1647 + C39108 * C1652 + C39111 * C299 + C39107 * C314) *
                C118) *
               C51162 * C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C51488 -
           (C37479 * C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51489 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
                C2438) *
               C1415) *
              C51435 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51489 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C51488 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C51488 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51489 +
           (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                 C118 +
             (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                 C51217) *
                C17433 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
               C51303 * C1415) *
              C51435 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51489 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C51488 -
           (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                 C51217 +
             (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                 C118) *
                C17435 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C17434 +
            ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C17433) *
               C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C51488 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C51489 +
           ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
             C39113 * C2805 + C39109 * C2808 + C39114 * C4780 +
             C39110 * C4786) *
                C118 +
            (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
             C39113 * C2809 + C39109 * C2814 + C39114 * C4787 +
             C39110 * C4792) *
                C51217) *
               C51162 * C51303 * C1415) *
              C51435 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C51489 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C51488 -
           ((C39114 * C4789 + C39110 * C4793 + C39113 * C2811 + C39109 * C2815 +
             C39112 * C1653 + C39108 * C1659 + C39111 * C315 + C39107 * C329) *
                C51217 +
            (C39114 * C4781 + C39110 * C4788 + C39113 * C2806 + C39109 * C2810 +
             C39112 * C1647 + C39108 * C1652 + C39111 * C299 + C39107 * C314) *
                C118) *
               C51162 * C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
            (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38157 * C2438) *
              C51488 +
          (((C37207 + C37206) * C798 -
            ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C798 -
            ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C798 - (C37462 * C51444 + C37463 * C797) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C51489 +
          (C38157 * C2436 +
           ((C36535 + C36534) * C797 + (C36533 + C36532) * C51444 -
            (C38152 + C38151) * C798 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C797 + (C37476 + C37477) * C51444 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C798 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
            (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
               C17434 +
           C34268 * C17435) *
              C51303 * C51488 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C798 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51444 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C797) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51281) *
               C17433 +
           ((C34479 + C34480) * C798 -
            ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
            (C34481 + C34482) * C51281) *
               C17434 +
           ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
            (C34485 + C34486) * C51281) *
               C17435) *
              C51303 * C51489 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C797 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51444 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C798 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C17433 +
           ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
            (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
             C33488 * C1652) *
                C798 -
            (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
             C33488 * C1659) *
                C51281) *
               C17434 +
           ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C798 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C17435) *
              C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C797 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51444 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C798 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C51488 +
          ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
            C39113 * C4778 + C39109 * C4782 + C39114 * C6781 + C39110 * C6783) *
               C798 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51444 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C797) +
           (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
            C39113 * C4783 + C39109 * C4790 + C39114 * C6784 + C39110 * C6787) *
               C51281) *
              C51162 * C51303 * C51489 +
          ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
            C39113 * C2805 + C39109 * C2808 + C39114 * C4780 + C39110 * C4786) *
               C797 +
           (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
            C39113 * C2809 + C39109 * C2814 + C39114 * C4787 + C39110 * C4792) *
               C51444 -
           (C39114 * C23149 + C39110 * C23150 + C39113 * C4780 +
            C39109 * C4786 + C39112 * C2805 + C39108 * C2808 + C39111 * C1646 +
            C39107 * C1650) *
               C798 -
           (C39114 * C23151 + C39110 * C23152 + C39113 * C4787 +
            C39109 * C4792 + C39112 * C2809 + C39108 * C2814 + C39111 * C1651 +
            C39107 * C1658) *
               C51281) *
              C51162 * C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                  C51378 * C496) *
                     C118 +
                 (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                  C51378 * C516) *
                     C51217) *
                    C17433 +
                ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) *
                    C17434 +
                C33549 * C17435) *
                   C51303 * C1109 -
               (C34101 * C17435 +
                ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) *
                    C17434 +
                ((C33491 * C967 + C51378 * C976 + C33490 * C310 +
                  C33488 * C327) *
                     C51217 +
                 (C33491 * C961 + C51378 * C966 + C33490 * C297 +
                  C33488 * C311) *
                     C118) *
                    C17433) *
                   C51303 * C51253) *
                  C1111 +
              ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) *
                    C17433 +
                ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) *
                    C17434 +
                ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) *
                    C17435) *
                   C51303 * C51253 -
               (C33550 * C17435 +
                ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) *
                    C17434 +
                ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) *
                    C17433) *
                   C51303 * C1109) *
                  C1112 +
              ((C33549 * C17433 +
                ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) *
                    C17434 +
                ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) *
                    C17435) *
                   C51303 * C1109 -
               (((C33491 * C975 + C51378 * C980 + C33490 * C321 +
                  C33488 * C332) *
                     C51217 +
                 (C33491 * C965 + C51378 * C974 + C33490 * C302 +
                  C33488 * C320) *
                     C118) *
                    C17435 +
                ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) *
                    C17434 +
                C34101 * C17433) *
                   C51303 * C51253) *
                  C1113) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                 C51378 * C496) *
                    C118 +
                (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                 C51378 * C516) *
                    C51217) *
                   C17433 +
               ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) *
                   C17434 +
               C33549 * C17435) *
                  C51303 * C1180 -
              (C34101 * C17435 +
               ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) *
                   C17434 +
               ((C33491 * C967 + C51378 * C976 + C33490 * C310 +
                 C33488 * C327) *
                    C51217 +
                (C33491 * C961 + C51378 * C966 + C33490 * C297 +
                 C33488 * C311) *
                    C118) *
                   C17433) *
                  C51303 * C1181 +
              (((C33490 * C298 + C33488 * C312 + C33491 * C1646 +
                 C51378 * C1650) *
                    C118 +
                (C33490 * C313 + C33488 * C328 + C33491 * C1651 +
                 C51378 * C1658) *
                    C51217) *
                   C17433 +
               ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) *
                   C17434 +
               ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) *
                   C17435) *
                  C51303 * C1182 -
              (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
                 C33488 * C1198) *
                    C51217 +
                (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
                 C33488 * C1192) *
                    C118) *
                   C17435 +
               ((C33491 * C3355 + C51378 * C3359 + C33490 * C1193 +
                 C33488 * C1199) *
                    C51217 +
                (C33491 * C3350 + C51378 * C3354 + C33490 * C1187 +
                 C33488 * C1194) *
                    C118) *
                   C17434 +
               ((C33491 * C3353 + C51378 * C3358 + C33490 * C1195 +
                 C33488 * C1200) *
                    C51217 +
                (C33491 * C3349 + C51378 * C3352 + C33490 * C1188 +
                 C33488 * C1196) *
                    C118) *
                   C17433) *
                  C51303 * C1183) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C17433 +
           ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
            (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
            (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
               C17434 +
           (C33541 * C483 + C33542 * C480 - C34250 * C484 - C34251 * C481 +
            (C33935 + C33936) * C485 + (C33937 + C33938) * C482) *
               C17435) *
              C51303 * C1109 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C484 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C480 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C483) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C481 -
            (C33491 * C4778 + C51378 * C4782 + C33490 * C1299 +
             C33488 * C1303) *
                C485 -
            (C33491 * C4783 + C51378 * C4790 + C33490 * C1304 +
             C33488 * C1311) *
                C482) *
               C17433 +
           ((C34479 + C34480) * C484 -
            ((C33733 + C33734) * C480 + (C33735 + C33736) * C483) +
            (C34481 + C34482) * C481 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C485 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C482) *
               C17434 +
           ((C34483 + C34484) * C484 - (C34085 * C480 + C34086 * C483) +
            (C34485 + C34486) * C481 -
            (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
             C33488 * C1307) *
                C485 -
            (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
             C33488 * C1313) *
                C482) *
               C17435) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C1109 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C1109) *
              C1112 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C1109 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
               C2437 +
           C36549 * C2438) *
              C1180 -
          (C37479 * C2438 +
           ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
               C2437 +
           ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
               C2436) *
              C1181 +
          (C36549 * C2436 +
           ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
               C2437 +
           ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
               C2438) *
              C1182 -
          (((C33491 * C21187 + C51378 * C21188 + C33490 * C3651 +
             C33488 * C3654) *
                C51217 +
            (C33491 * C21185 + C51378 * C21186 + C33490 * C3648 +
             C33488 * C3652) *
                C118) *
               C51162 * C2438 +
           ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51162 *
               C2437 +
           C37479 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C2436 +
           ((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
            (C37206 + C37207) * C484 - (C37208 + C37209) * C481 +
            (C37642 + C37643) * C485 + (C37644 + C37645) * C482) *
               C51162 * C2437 +
           (C36542 * C483 + C36543 * C480 - (C37210 + C37211) * C484 -
            (C37212 + C37213) * C481 + (C37646 + C37647) * C485 +
            (C37648 + C37649) * C482) *
               C51162 * C2438) *
              C1109 +
          (((C37207 + C37206) * C484 -
            ((C36527 + C36526) * C480 + (C36525 + C36524) * C483) +
            (C37209 + C37208) * C481 - (C37643 + C37642) * C485 -
            (C37645 + C37644) * C482) *
               C51162 * C2436 +
           ((C37211 + C37210) * C484 -
            ((C36531 + C36530) * C480 + (C36529 + C36528) * C483) +
            (C37213 + C37212) * C481 - (C37647 + C37646) * C485 -
            (C37649 + C37648) * C482) *
               C51162 * C2437 +
           ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
             C51378 * C3815) *
                C484 -
            (C37462 * C480 + C37463 * C483) +
            (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
             C51378 * C3819) *
                C481 -
            (C33491 * C21475 + C51378 * C21476 + C33490 * C3813 +
             C33488 * C3815) *
                C485 -
            (C33491 * C21477 + C51378 * C21478 + C33490 * C3816 +
             C33488 * C3819) *
                C482) *
               C51162 * C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C1109 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C51253) *
              C1111 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C51253 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C1109) *
              C1112 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
             C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
             C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
                C51217) *
               C51162 * C51303 * C1109 -
           ((C39114 * C6371 + C39110 * C6372 + C39113 * C1308 + C39109 * C1313 +
             C39112 * C971 + C39108 * C978 + C39111 * C306 + C39107 * C325) *
                C51217 +
            (C39114 * C6369 + C39110 * C6370 + C39113 * C1301 + C39109 * C1307 +
             C39112 * C963 + C39108 * C970 + C39111 * C295 + C39107 * C307) *
                C118) *
               C51162 * C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51217) *
              C51162 * C51303 * C1180 -
          ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
            C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
               C51217 +
           (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
            C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
               C118) *
              C51162 * C51303 * C1181 +
          ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
            C39113 * C2805 + C39109 * C2808 + C39114 * C4780 + C39110 * C4786) *
               C118 +
           (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
            C39113 * C2809 + C39109 * C2814 + C39114 * C4787 + C39110 * C4792) *
               C51217) *
              C51162 * C51303 * C1182 -
          ((C39114 * C21477 + C39110 * C21478 + C39113 * C3816 +
            C39109 * C3819 + C39112 * C3353 + C39108 * C3358 + C39111 * C1195 +
            C39107 * C1200) *
               C51217 +
           (C39114 * C21475 + C39110 * C21476 + C39113 * C3813 +
            C39109 * C3815 + C39112 * C3349 + C39108 * C3352 + C39111 * C1188 +
            C39107 * C1196) *
               C118) *
              C51162 * C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C483 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C480 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C484 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C481 +
           (C39111 * C487 + C39107 * C498 + C39112 * C1958 + C39108 * C1962 +
            C39113 * C5799 + C39109 * C5802 + C39114 * C7665 + C39110 * C7667) *
               C485 +
           (C39111 * C499 + C39107 * C517 + C39112 * C1963 + C39108 * C1970 +
            C39113 * C5803 + C39109 * C5808 + C39114 * C7668 + C39110 * C7671) *
               C482) *
              C51162 * C51303 * C1109 +
          ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
            C39113 * C4778 + C39109 * C4782 + C39114 * C6781 + C39110 * C6783) *
               C484 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C480 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C483) +
           (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
            C39113 * C4783 + C39109 * C4790 + C39114 * C6784 + C39110 * C6787) *
               C481 -
           (C39114 * C24065 + C39110 * C24066 + C39113 * C6781 +
            C39109 * C6783 + C39112 * C4778 + C39108 * C4782 + C39111 * C1299 +
            C39107 * C1303) *
               C485 -
           (C39114 * C24067 + C39110 * C24068 + C39113 * C6784 +
            C39109 * C6787 + C39112 * C4783 + C39108 * C4790 + C39111 * C1304 +
            C39107 * C1311) *
               C482) *
              C51162 * C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            (C36542 * C797 + C36543 * C51444 - (C37210 + C37211) * C798 -
             (C37212 + C37213) * C51281) *
                C51162 * C2438) *
               C1109 +
           (((C37207 + C37206) * C798 -
             ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C798 -
             ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
              C51378 * C3815) *
                 C798 -
             (C37462 * C51444 + C37463 * C797) +
             (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51435 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C1109 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
             (C37215 + C37214) * C798 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C797 + (C36538 + C36539) * C51444 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C798 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C17434 +
            C34268 * C17435) *
               C51303 * C1109 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C798 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C51444 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C797) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C51435 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C798 -
             ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C1109 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
             (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C797 + (C34099 + C34100) * C51444 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C798 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C797 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51444 -
            (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
             C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
                C798 -
            (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
             C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
                C51281) *
               C51162 * C51303 * C1109 +
           ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
             C39113 * C4778 + C39109 * C4782 + C39114 * C6781 +
             C39110 * C6783) *
                C798 -
            ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 +
              C39109 * C1311 + C39112 * C967 + C39108 * C976 + C39111 * C310 +
              C39107 * C327) *
                 C51444 +
             (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 +
              C39109 * C1303 + C39112 * C961 + C39108 * C966 + C39111 * C297 +
              C39107 * C311) *
                 C797) +
            (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
             C39113 * C4783 + C39109 * C4790 + C39114 * C6784 +
             C39110 * C6787) *
                C51281) *
               C51162 * C51303 * C51253) *
              C51435 +
          (((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
             C39113 * C1959 + C39109 * C1964 + C39114 * C5800 +
             C39110 * C5804) *
                C798 -
            ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
              C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                 C51444 +
             (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
              C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                 C797) +
            (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
             C39113 * C1965 + C39109 * C1971 + C39114 * C5805 +
             C39110 * C5809) *
                C51281) *
               C51162 * C51303 * C1109 +
           ((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C797 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51444 -
            (C39114 * C6782 + C39110 * C6785 + C39113 * C4779 + C39109 * C4784 +
             C39112 * C1300 + C39108 * C1305 + C39111 * C962 + C39107 * C968) *
                C798 -
            (C39114 * C6786 + C39110 * C6788 + C39113 * C4785 + C39109 * C4791 +
             C39112 * C1306 + C39108 * C1312 + C39111 * C969 + C39107 * C977) *
                C51281) *
               C51162 * C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C1180 -
          (C34101 * C17435 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
           ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                C51217 +
            (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                C118) *
               C17433) *
              C51303 * C1181 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C17433 +
           ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
              C51303 * C1182 -
          (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
             C33488 * C1198) *
                C51217 +
            (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
             C33488 * C1192) *
                C118) *
               C17435 +
           ((C33491 * C3355 + C51378 * C3359 + C33490 * C1193 +
             C33488 * C1199) *
                C51217 +
            (C33491 * C3350 + C51378 * C3354 + C33490 * C1187 +
             C33488 * C1194) *
                C118) *
               C17434 +
           ((C33491 * C3353 + C51378 * C3358 + C33490 * C1195 +
             C33488 * C1200) *
                C51217 +
            (C33491 * C3349 + C51378 * C3352 + C33490 * C1188 +
             C33488 * C1196) *
                C118) *
               C17433) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C1109 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51253 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C1109) *
              C1112 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
               C51303 * C1109 -
           (((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C17435 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C17434 +
            C34101 * C17433) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C1109 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C1109) *
              C1112 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C1109 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
               C2437 +
           C36549 * C2438) *
              C1180 -
          (C37479 * C2438 +
           ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
               C2437 +
           ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
               C2436) *
              C1181 +
          (C36549 * C2436 +
           ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
               C2437 +
           ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
               C2438) *
              C1182 -
          (((C33491 * C21187 + C51378 * C21188 + C33490 * C3651 +
             C33488 * C3654) *
                C51217 +
            (C33491 * C21185 + C51378 * C21186 + C33490 * C3648 +
             C33488 * C3652) *
                C118) *
               C51162 * C2438 +
           ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51162 *
               C2437 +
           C37479 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C51217) *
               C51162 * C51303 * C1109 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51217 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C118) *
               C51162 * C51303 * C51253) *
              C1111 +
          (((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C118 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C51217) *
               C51162 * C51303 * C51253 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51217 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51162 * C51303 * C1109) *
              C1112 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
             C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
             C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
                C51217) *
               C51162 * C51303 * C1109 -
           ((C39114 * C6371 + C39110 * C6372 + C39113 * C1308 + C39109 * C1313 +
             C39112 * C971 + C39108 * C978 + C39111 * C306 + C39107 * C325) *
                C51217 +
            (C39114 * C6369 + C39110 * C6370 + C39113 * C1301 + C39109 * C1307 +
             C39112 * C963 + C39108 * C970 + C39111 * C295 + C39107 * C307) *
                C118) *
               C51162 * C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51217) *
              C51162 * C51303 * C1180 -
          ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
            C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
               C51217 +
           (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
            C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
               C118) *
              C51162 * C51303 * C1181 +
          ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
            C39113 * C2805 + C39109 * C2808 + C39114 * C4780 + C39110 * C4786) *
               C118 +
           (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
            C39113 * C2809 + C39109 * C2814 + C39114 * C4787 + C39110 * C4792) *
               C51217) *
              C51162 * C51303 * C1182 -
          ((C39114 * C21477 + C39110 * C21478 + C39113 * C3816 +
            C39109 * C3819 + C39112 * C3353 + C39108 * C3358 + C39111 * C1195 +
            C39107 * C1200) *
               C51217 +
           (C39114 * C21475 + C39110 * C21476 + C39113 * C3813 +
            C39109 * C3815 + C39112 * C3349 + C39108 * C3352 + C39111 * C1188 +
            C39107 * C1196) *
               C118) *
              C51162 * C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            C38457 * C2438) *
               C51443 +
           (((C37207 + C37206) * C1763 -
             ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C1763 -
             ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
             (C38153 + C38154) * C51281) *
                C51162 * C2438) *
               C51253) *
              C51435 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C1763 -
             ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C33736 + C33735) * C1762 + (C33734 + C33733) * C1760 -
             (C34480 + C34479) * C1763 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
             (C37215 + C37214) * C1763 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C1762 + (C36538 + C36539) * C1760 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C1763 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C17434 +
            C35515 * C17435) *
               C51303 * C51443 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C1763 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C1760 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C1762) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C1763 -
             ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C51435 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C1763 -
             ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C51443 +
           (((C33736 + C33735) * C1762 + (C33734 + C33733) * C1760 -
             (C34480 + C34479) * C1763 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
             (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C1762 + (C34099 + C34100) * C1760 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C1763 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
             C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
                C1762 +
            (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
             C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
                C1760 -
            (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
             C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
                C1763 -
            (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
             C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
                C51281) *
               C51162 * C51303 * C51443 +
           ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
             C39113 * C4778 + C39109 * C4782 + C39114 * C6781 +
             C39110 * C6783) *
                C1763 -
            ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 +
              C39109 * C1311 + C39112 * C967 + C39108 * C976 + C39111 * C310 +
              C39107 * C327) *
                 C1760 +
             (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 +
              C39109 * C1303 + C39112 * C961 + C39108 * C966 + C39111 * C297 +
              C39107 * C311) *
                 C1762) +
            (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
             C39113 * C4783 + C39109 * C4790 + C39114 * C6784 +
             C39110 * C6787) *
                C51281) *
               C51162 * C51303 * C51253) *
              C51435 +
          (((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
             C39113 * C1959 + C39109 * C1964 + C39114 * C5800 +
             C39110 * C5804) *
                C1763 -
            ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
              C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                 C1760 +
             (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
              C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                 C1762) +
            (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
             C39113 * C1965 + C39109 * C1971 + C39114 * C5805 +
             C39110 * C5809) *
                C51281) *
               C51162 * C51303 * C51443 +
           ((C39111 * C296 + C39107 * C309 + C39112 * C962 + C39108 * C968 +
             C39113 * C1300 + C39109 * C1305 + C39114 * C4779 +
             C39110 * C4784) *
                C1762 +
            (C39111 * C308 + C39107 * C326 + C39112 * C969 + C39108 * C977 +
             C39113 * C1306 + C39109 * C1312 + C39114 * C4785 +
             C39110 * C4791) *
                C1760 -
            (C39114 * C6782 + C39110 * C6785 + C39113 * C4779 + C39109 * C4784 +
             C39112 * C1300 + C39108 * C1305 + C39111 * C962 + C39107 * C968) *
                C1763 -
            (C39114 * C6786 + C39110 * C6788 + C39113 * C4785 + C39109 * C4791 +
             C39112 * C1306 + C39108 * C1312 + C39111 * C969 + C39107 * C977) *
                C51281) *
               C51162 * C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C2436 +
           ((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
            (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
            (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
               C51162 * C2437 +
           (C36542 * C2217 + C36543 * C51490 - C38138 * C2218 -
            C38139 * C51491 + (C37646 + C37647) * C2219 +
            (C37648 + C37649) * C2216) *
               C51162 * C2438) *
              C51443 +
          (((C37207 + C37206) * C2218 -
            ((C36527 + C36526) * C51490 + (C36525 + C36524) * C2217) +
            (C37209 + C37208) * C51491 - (C37643 + C37642) * C2219 -
            (C37645 + C37644) * C2216) *
               C51162 * C2436 +
           ((C37211 + C37210) * C2218 -
            ((C36531 + C36530) * C51490 + (C36529 + C36528) * C2217) +
            (C37213 + C37212) * C51491 - (C37647 + C37646) * C2219 -
            (C37649 + C37648) * C2216) *
               C51162 * C2437 +
           ((C38151 + C38152) * C2218 - (C37462 * C51490 + C37463 * C2217) +
            (C38153 + C38154) * C51491 -
            (C33491 * C21475 + C51378 * C21476 + C33490 * C3813 +
             C33488 * C3815) *
                C2219 -
            (C33491 * C21477 + C51378 * C21478 + C33490 * C3816 +
             C33488 * C3819) *
                C2216) *
               C51162 * C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C17433 +
           ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
            (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
            (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
               C17434 +
           (C33541 * C2217 + C33542 * C51490 - C34250 * C2218 -
            C34251 * C51491 + (C33935 + C33936) * C2219 +
            (C33937 + C33938) * C2216) *
               C17435) *
              C51303 * C51443 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C2218 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51490 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C2217) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51491 -
            (C33491 * C4778 + C51378 * C4782 + C33490 * C1299 +
             C33488 * C1303) *
                C2219 -
            (C33491 * C4783 + C51378 * C4790 + C33490 * C1304 +
             C33488 * C1311) *
                C2216) *
               C17433 +
           ((C34479 + C34480) * C2218 -
            ((C33733 + C33734) * C51490 + (C33735 + C33736) * C2217) +
            (C34481 + C34482) * C51491 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C2219 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C2216) *
               C17434 +
           ((C34483 + C34484) * C2218 - (C34085 * C51490 + C34086 * C2217) +
            (C34485 + C34486) * C51491 -
            (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
             C33488 * C1307) *
                C2219 -
            (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
             C33488 * C1313) *
                C2216) *
               C17435) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C2217 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51490 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C2218 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51491 +
           (C39111 * C487 + C39107 * C498 + C39112 * C1958 + C39108 * C1962 +
            C39113 * C5799 + C39109 * C5802 + C39114 * C7665 + C39110 * C7667) *
               C2219 +
           (C39111 * C499 + C39107 * C517 + C39112 * C1963 + C39108 * C1970 +
            C39113 * C5803 + C39109 * C5808 + C39114 * C7668 + C39110 * C7671) *
               C2216) *
              C51162 * C51303 * C51443 +
          ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
            C39113 * C4778 + C39109 * C4782 + C39114 * C6781 + C39110 * C6783) *
               C2218 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C51490 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C2217) +
           (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
            C39113 * C4783 + C39109 * C4790 + C39114 * C6784 + C39110 * C6787) *
               C51491 -
           (C39114 * C24065 + C39110 * C24066 + C39113 * C6781 +
            C39109 * C6783 + C39112 * C4778 + C39108 * C4782 + C39111 * C1299 +
            C39107 * C1303) *
               C2219 -
           (C39114 * C24067 + C39110 * C24068 + C39113 * C6784 +
            C39109 * C6787 + C39112 * C4783 + C39108 * C4790 + C39111 * C1304 +
            C39107 * C1311) *
               C2216) *
              C51162 * C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                 C51378 * C496) *
                    C1762 +
                (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                 C51378 * C516) *
                    C1760 -
                (C33491 * C487 + C51378 * C498 + C33490 * C486 +
                 C33488 * C496) *
                    C1763 -
                (C33491 * C499 + C51378 * C517 + C33490 * C497 +
                 C33488 * C516) *
                    C51281) *
                   C17433 +
               ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
                (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                   C17434 +
               C35515 * C17435) *
                  C51303 * C51202 * C1111 +
              (((C33924 + C33923) * C1763 -
                ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
                (C33926 + C33925) * C51281) *
                   C17433 +
               ((C33932 + C33931) * C1763 -
                ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
                (C33934 + C33933) * C51281) *
                   C17434 +
               ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
                (C34265 + C34266) * C51281) *
                   C17435) *
                  C51303 * C51202 * C1112 +
              (C35515 * C17433 +
               ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
                (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
                   C17434 +
               ((C33537 + C33538) * C1762 + (C33539 + C33540) * C1760 -
                (C33491 * C495 + C51378 * C514 + C33490 * C494 +
                 C33488 * C512) *
                    C1763 -
                (C33491 * C515 + C51378 * C525 + C33490 * C513 +
                 C33488 * C524) *
                    C51281) *
                   C17435) *
                  C51303 * C51202 * C1113) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C486 +
                 C51378 * C496) *
                    C1762 +
                (C33490 * C127 + C33488 * C140 + C33491 * C497 +
                 C51378 * C516) *
                    C1760 -
                (C33491 * C487 + C51378 * C498 + C33490 * C486 +
                 C33488 * C496) *
                    C1763 -
                (C33491 * C499 + C51378 * C517 + C33490 * C497 +
                 C33488 * C516) *
                    C51281) *
                   C17433 +
               ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
                (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                   C17434 +
               C35515 * C17435) *
                  C51303 * C289 +
              (((C33490 * C961 + C33488 * C966 + C33491 * C1299 +
                 C51378 * C1303) *
                    C1763 -
                ((C33491 * C967 + C51378 * C976 + C33490 * C310 +
                  C33488 * C327) *
                     C1760 +
                 (C33491 * C961 + C51378 * C966 + C33490 * C297 +
                  C33488 * C311) *
                     C1762) +
                (C33490 * C967 + C33488 * C976 + C33491 * C1304 +
                 C51378 * C1311) *
                    C51281) *
                   C17433 +
               ((C34479 + C34480) * C1763 -
                ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
                (C34481 + C34482) * C51281) *
                   C17434 +
               ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
                (C34485 + C34486) * C51281) *
                   C17435) *
                  C51303 * C290 +
              (((C33490 * C298 + C33488 * C312 + C33491 * C1646 +
                 C51378 * C1650) *
                    C1762 +
                (C33490 * C313 + C33488 * C328 + C33491 * C1651 +
                 C51378 * C1658) *
                    C1760 -
                (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
                 C33488 * C1650) *
                    C1763 -
                (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
                 C33488 * C1658) *
                    C51281) *
                   C17433 +
               ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
                (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
                 C33488 * C1652) *
                    C1763 -
                (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
                 C33488 * C1659) *
                    C51281) *
                   C17434 +
               ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
                (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
                 C33488 * C1654) *
                    C1763 -
                (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
                 C33488 * C1660) *
                    C51281) *
                   C17435) *
                  C51303 * C291) *
             C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
               C1954 +
           (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
               C1950 -
           (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
               C1955 -
           (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
               C1951 +
           (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
               C1956 +
           (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
               C1952 -
           (C33491 * C5799 + C51378 * C5802 + C33490 * C1958 + C33488 * C1962) *
               C1957 -
           (C33491 * C5803 + C51378 * C5808 + C33490 * C1963 + C33488 * C1970) *
               C1953) *
              C17433 +
          ((C33525 + C33526) * C1954 + (C33527 + C33528) * C1950 -
           (C33923 + C33924) * C1955 - (C33925 + C33926) * C1951 +
           (C33927 + C33928) * C1956 + (C33929 + C33930) * C1952 -
           (C33491 * C5800 + C51378 * C5804 + C33490 * C1959 + C33488 * C1964) *
               C1957 -
           (C33491 * C5805 + C51378 * C5809 + C33490 * C1965 + C33488 * C1971) *
               C1953) *
              C17434 +
          (C33541 * C1954 + C33542 * C1950 - C34250 * C1955 - C34251 * C1951 +
           (C33935 + C33936) * C1956 + (C33937 + C33938) * C1952 -
           (C33491 * C5801 + C51378 * C5806 + C33490 * C1960 + C33488 * C1966) *
               C1957 -
           (C33491 * C5807 + C51378 * C5810 + C33490 * C1967 + C33488 * C1972) *
               C1953) *
              C17435) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           (C36542 * C1762 + C36543 * C1760 - C38138 * C1763 -
            C38139 * C51281) *
               C51162 * C2438) *
              C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
            (C37216 + C37217) * C51281) *
               C51162 * C2438) *
              C51202 * C1112 +
          (C35515 * C51162 * C2436 +
           ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
            (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38457 * C2438) *
              C289 +
          (((C37207 + C37206) * C1763 -
            ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C1763 -
            ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C290 +
          (C38457 * C2436 +
           ((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
            (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C1762 + (C37476 + C37477) * C1760 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C1763 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
               C1954 +
           (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
               C1950 -
           (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
               C1955 -
           (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
               C1951 +
           (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
               C1956 +
           (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
               C1952 -
           (C33491 * C5799 + C51378 * C5802 + C33490 * C1958 + C33488 * C1962) *
               C1957 -
           (C33491 * C5803 + C51378 * C5808 + C33490 * C1963 + C33488 * C1970) *
               C1953) *
              C51162 * C2436 +
          ((C36524 + C36525) * C1954 + (C36526 + C36527) * C1950 -
           (C37206 + C37207) * C1955 - (C37208 + C37209) * C1951 +
           (C37642 + C37643) * C1956 + (C37644 + C37645) * C1952 -
           (C33491 * C6781 + C51378 * C6783 + C33490 * C4778 + C33488 * C4782) *
               C1957 -
           (C33491 * C6784 + C51378 * C6787 + C33490 * C4783 + C33488 * C4790) *
               C1953) *
              C51162 * C2437 +
          (C36542 * C1954 + C36543 * C1950 - C38138 * C1955 - C38139 * C1951 +
           (C37646 + C37647) * C1956 + (C37648 + C37649) * C1952 -
           (C33491 * C23149 + C51378 * C23150 + C33490 * C4780 +
            C33488 * C4786) *
               C1957 -
           (C33491 * C23151 + C51378 * C23152 + C33490 * C4787 +
            C33488 * C4792) *
               C1953) *
              C51162 * C2438) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C1762 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C1760 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C1763 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C51202 * C1111 +
          ((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
            C39113 * C1959 + C39109 * C1964 + C39114 * C5800 + C39110 * C5804) *
               C1763 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C1760 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C1762) +
           (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
            C39113 * C1965 + C39109 * C1971 + C39114 * C5805 + C39110 * C5809) *
               C51281) *
              C51162 * C51303 * C51202 * C1112 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
            C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
               C1762 +
           (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
            C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
               C1760 -
           (C39114 * C5801 + C39110 * C5806 + C39113 * C1960 + C39109 * C1966 +
            C39112 * C491 + C39108 * C506 + C39111 * C490 + C39107 * C504) *
               C1763 -
           (C39114 * C5807 + C39110 * C5810 + C39113 * C1967 + C39109 * C1972 +
            C39112 * C507 + C39108 * C521 + C39111 * C505 + C39107 * C520) *
               C51281) *
              C51162 * C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C1762 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C1760 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C1763 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C289 +
          ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
            C39113 * C4778 + C39109 * C4782 + C39114 * C6781 + C39110 * C6783) *
               C1763 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C1760 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C1762) +
           (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
            C39113 * C4783 + C39109 * C4790 + C39114 * C6784 + C39110 * C6787) *
               C51281) *
              C51162 * C51303 * C290 +
          ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
            C39113 * C2805 + C39109 * C2808 + C39114 * C4780 + C39110 * C4786) *
               C1762 +
           (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
            C39113 * C2809 + C39109 * C2814 + C39114 * C4787 + C39110 * C4792) *
               C1760 -
           (C39114 * C23149 + C39110 * C23150 + C39113 * C4780 +
            C39109 * C4786 + C39112 * C2805 + C39108 * C2808 + C39111 * C1646 +
            C39107 * C1650) *
               C1763 -
           (C39114 * C23151 + C39110 * C23152 + C39113 * C4787 +
            C39109 * C4792 + C39112 * C2809 + C39108 * C2814 + C39111 * C1651 +
            C39107 * C1658) *
               C51281) *
              C51162 * C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
           C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
              C1954 +
          (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
           C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
              C1950 -
          (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
           C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
              C1955 -
          (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
           C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
              C1951 +
          (C39111 * C487 + C39107 * C498 + C39112 * C1958 + C39108 * C1962 +
           C39113 * C5799 + C39109 * C5802 + C39114 * C7665 + C39110 * C7667) *
              C1956 +
          (C39111 * C499 + C39107 * C517 + C39112 * C1963 + C39108 * C1970 +
           C39113 * C5803 + C39109 * C5808 + C39114 * C7668 + C39110 * C7671) *
              C1952 -
          (C39114 * C40487 + C39110 * C40488 + C39113 * C7665 + C39109 * C7667 +
           C39112 * C5799 + C39108 * C5802 + C39111 * C1958 + C39107 * C1962) *
              C1957 -
          (C39114 * C40489 + C39110 * C40490 + C39113 * C7668 + C39109 * C7671 +
           C39112 * C5803 + C39108 * C5808 + C39111 * C1963 + C39107 * C1970) *
              C1953) *
         C51162 * C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C2436 +
           ((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
            (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
            (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
               C51162 * C2437 +
           (C36542 * C2217 + C36543 * C51490 - C38138 * C2218 -
            C38139 * C51491 + (C37646 + C37647) * C2219 +
            (C37648 + C37649) * C2216) *
               C51162 * C2438) *
              C51202 * C51435 +
          (((C33924 + C33923) * C2218 -
            ((C33528 + C33527) * C51490 + (C33526 + C33525) * C2217) +
            (C33926 + C33925) * C51491 - (C33928 + C33927) * C2219 -
            (C33930 + C33929) * C2216) *
               C51162 * C2436 +
           ((C34479 + C34480) * C2218 -
            ((C33733 + C33734) * C51490 + (C33735 + C33736) * C2217) +
            (C34481 + C34482) * C51491 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C2219 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C2216) *
               C51162 * C2437 +
           ((C37214 + C37215) * C2218 - (C36522 * C51490 + C36523 * C2217) +
            (C37216 + C37217) * C51491 -
            (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
             C33488 * C2810) *
                C2219 -
            (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
             C33488 * C2815) *
                C2216) *
               C51162 * C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C17433 +
           ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
            (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
            (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
               C17434 +
           (C33541 * C2217 + C33542 * C51490 - C34250 * C2218 -
            C34251 * C51491 + (C33935 + C33936) * C2219 +
            (C33937 + C33938) * C2216) *
               C17435) *
              C51303 * C51202 * C51435 +
          (((C33924 + C33923) * C2218 -
            ((C33528 + C33527) * C51490 + (C33526 + C33525) * C2217) +
            (C33926 + C33925) * C51491 - (C33928 + C33927) * C2219 -
            (C33930 + C33929) * C2216) *
               C17433 +
           ((C33932 + C33931) * C2218 -
            ((C33532 + C33531) * C51490 + (C33530 + C33529) * C2217) +
            (C33934 + C33933) * C51491 - (C33936 + C33935) * C2219 -
            (C33938 + C33937) * C2216) *
               C17434 +
           ((C34263 + C34264) * C2218 - (C33543 * C51490 + C33544 * C2217) +
            (C34265 + C34266) * C51491 -
            (C33491 * C1961 + C51378 * C1968 + C33490 * C493 + C33488 * C510) *
                C2219 -
            (C33491 * C1969 + C51378 * C1973 + C33490 * C511 + C33488 * C523) *
                C2216) *
               C17435) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C2217 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C51490 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C2218 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51491 +
           (C39111 * C487 + C39107 * C498 + C39112 * C1958 + C39108 * C1962 +
            C39113 * C5799 + C39109 * C5802 + C39114 * C7665 + C39110 * C7667) *
               C2219 +
           (C39111 * C499 + C39107 * C517 + C39112 * C1963 + C39108 * C1970 +
            C39113 * C5803 + C39109 * C5808 + C39114 * C7668 + C39110 * C7671) *
               C2216) *
              C51162 * C51303 * C51202 * C51435 +
          ((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
            C39113 * C1959 + C39109 * C1964 + C39114 * C5800 + C39110 * C5804) *
               C2218 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C51490 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C2217) +
           (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
            C39113 * C1965 + C39109 * C1971 + C39114 * C5805 + C39110 * C5809) *
               C51491 -
           (C39114 * C7666 + C39110 * C7669 + C39113 * C5800 + C39109 * C5804 +
            C39112 * C1959 + C39108 * C1964 + C39111 * C489 + C39107 * C502) *
               C2219 -
           (C39114 * C7670 + C39110 * C7672 + C39113 * C5805 + C39109 * C5809 +
            C39112 * C1965 + C39108 * C1971 + C39111 * C503 + C39107 * C519) *
               C2216) *
              C51162 * C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C289 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C1763 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C1760 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C1762) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51281) *
               C17433 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C17434 +
           ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
            (C34485 + C34486) * C51281) *
               C17435) *
              C51303 * C290 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C1762 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C1760 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C1763 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C17433 +
           ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
            (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
             C33488 * C1652) *
                C1763 -
            (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
             C33488 * C1659) *
                C51281) *
               C17434 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C17435) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C17433 +
           ((C33932 + C33931) * C1763 -
            ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
            (C33934 + C33933) * C51281) *
               C17434 +
           ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
            (C34265 + C34266) * C51281) *
               C17435) *
              C51303 * C51202 * C1112 +
          (C35515 * C17433 +
           ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
            (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
               C17434 +
           ((C33537 + C33538) * C1762 + (C33539 + C33540) * C1760 -
            (C33491 * C495 + C51378 * C514 + C33490 * C494 + C33488 * C512) *
                C1763 -
            (C33491 * C515 + C51378 * C525 + C33490 * C513 + C33488 * C524) *
                C51281) *
               C17435) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           (C36542 * C1762 + C36543 * C1760 - C38138 * C1763 -
            C38139 * C51281) *
               C51162 * C2438) *
              C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
            (C37216 + C37217) * C51281) *
               C51162 * C2438) *
              C51202 * C1112 +
          (C35515 * C51162 * C2436 +
           ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
            (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38457 * C2438) *
              C289 +
          (((C37207 + C37206) * C1763 -
            ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C1763 -
            ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C290 +
          (C38457 * C2436 +
           ((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
            (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C1762 + (C37476 + C37477) * C1760 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C1763 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C1762 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C1760 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C1763 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C51202 * C1111 +
          ((C39111 * C488 + C39107 * C500 + C39112 * C489 + C39108 * C502 +
            C39113 * C1959 + C39109 * C1964 + C39114 * C5800 + C39110 * C5804) *
               C1763 -
           ((C39114 * C1965 + C39110 * C1971 + C39113 * C503 + C39109 * C519 +
             C39112 * C501 + C39108 * C518 + C39111 * C129 + C39107 * C141) *
                C1760 +
            (C39114 * C1959 + C39110 * C1964 + C39113 * C489 + C39109 * C502 +
             C39112 * C488 + C39108 * C500 + C39111 * C120 + C39107 * C128) *
                C1762) +
           (C39111 * C501 + C39107 * C518 + C39112 * C503 + C39108 * C519 +
            C39113 * C1965 + C39109 * C1971 + C39114 * C5805 + C39110 * C5809) *
               C51281) *
              C51162 * C51303 * C51202 * C1112 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C490 + C39108 * C504 +
            C39113 * C491 + C39109 * C506 + C39114 * C1960 + C39110 * C1966) *
               C1762 +
           (C39111 * C131 + C39107 * C142 + C39112 * C505 + C39108 * C520 +
            C39113 * C507 + C39109 * C521 + C39114 * C1967 + C39110 * C1972) *
               C1760 -
           (C39114 * C5801 + C39110 * C5806 + C39113 * C1960 + C39109 * C1966 +
            C39112 * C491 + C39108 * C506 + C39111 * C490 + C39107 * C504) *
               C1763 -
           (C39114 * C5807 + C39110 * C5810 + C39113 * C1967 + C39109 * C1972 +
            C39112 * C507 + C39108 * C521 + C39111 * C505 + C39107 * C520) *
               C51281) *
              C51162 * C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C486 + C39108 * C496 +
            C39113 * C487 + C39109 * C498 + C39114 * C1958 + C39110 * C1962) *
               C1762 +
           (C39111 * C127 + C39107 * C140 + C39112 * C497 + C39108 * C516 +
            C39113 * C499 + C39109 * C517 + C39114 * C1963 + C39110 * C1970) *
               C1760 -
           (C39114 * C5799 + C39110 * C5802 + C39113 * C1958 + C39109 * C1962 +
            C39112 * C487 + C39108 * C498 + C39111 * C486 + C39107 * C496) *
               C1763 -
           (C39114 * C5803 + C39110 * C5808 + C39113 * C1963 + C39109 * C1970 +
            C39112 * C499 + C39108 * C517 + C39111 * C497 + C39107 * C516) *
               C51281) *
              C51162 * C51303 * C289 +
          ((C39111 * C961 + C39107 * C966 + C39112 * C1299 + C39108 * C1303 +
            C39113 * C4778 + C39109 * C4782 + C39114 * C6781 + C39110 * C6783) *
               C1763 -
           ((C39114 * C4783 + C39110 * C4790 + C39113 * C1304 + C39109 * C1311 +
             C39112 * C967 + C39108 * C976 + C39111 * C310 + C39107 * C327) *
                C1760 +
            (C39114 * C4778 + C39110 * C4782 + C39113 * C1299 + C39109 * C1303 +
             C39112 * C961 + C39108 * C966 + C39111 * C297 + C39107 * C311) *
                C1762) +
           (C39111 * C967 + C39107 * C976 + C39112 * C1304 + C39108 * C1311 +
            C39113 * C4783 + C39109 * C4790 + C39114 * C6784 + C39110 * C6787) *
               C51281) *
              C51162 * C51303 * C290 +
          ((C39111 * C298 + C39107 * C312 + C39112 * C1646 + C39108 * C1650 +
            C39113 * C2805 + C39109 * C2808 + C39114 * C4780 + C39110 * C4786) *
               C1762 +
           (C39111 * C313 + C39107 * C328 + C39112 * C1651 + C39108 * C1658 +
            C39113 * C2809 + C39109 * C2814 + C39114 * C4787 + C39110 * C4792) *
               C1760 -
           (C39114 * C23149 + C39110 * C23150 + C39113 * C4780 +
            C39109 * C4786 + C39112 * C2805 + C39108 * C2808 + C39111 * C1646 +
            C39107 * C1650) *
               C1763 -
           (C39114 * C23151 + C39110 * C23152 + C39113 * C4787 +
            C39109 * C4792 + C39112 * C2809 + C39108 * C2814 + C39111 * C1651 +
            C39107 * C1658) *
               C51281) *
              C51162 * C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C51443 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C51253) *
                       C51486 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51167) *
                        C51303 * C51253 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C51443) *
                       C51487 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51428 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51217) *
                         C51167) *
                        C51303 * C51443 -
                    (((C44476 * C1310 + C44473 * C1314 + C44475 * C973 +
                       C51495 * C979 + C44474 * C304 + C51494 * C324) *
                          C51217 +
                      (C44476 * C1302 + C44473 * C1309 + C44475 * C964 +
                       C51495 * C972 + C44474 * C294 + C51494 * C305) *
                          C118) *
                         C51167 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51428) *
                        C51303 * C51253) *
                       C682)) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C797 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51444 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C798 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C797 +
                      (C44517 + C44518 + C44519) * C51444 -
                      (C44884 + C44885 + C44886) * C798 -
                      (C44887 + C44888 + C44889) * C51281) *
                         C51167) *
                        C51303 * C51443 +
                    (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                       C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                          C798 -
                      ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                        C51495 * C976 + C44474 * C310 + C51494 * C327) *
                           C51444 +
                       (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                        C51495 * C966 + C44474 * C297 + C51494 * C311) *
                           C797) +
                      (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                       C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                          C51281) *
                         C51428 +
                     ((C45430 + C45431 + C45432) * C798 -
                      ((C44702 + C44703 + C44704) * C51444 +
                       (C44705 + C44706 + C44707) * C797) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C292 +
                   ((((C44886 + C44885 + C44884) * C798 -
                      ((C44519 + C44518 + C44517) * C51444 +
                       (C44516 + C44515 + C44514) * C797) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51428 +
                     ((C45218 + C45219 + C45220) * C798 -
                      ((C44520 + C44521 + C44522) * C51444 +
                       (C44523 + C44524 + C44525) * C797) +
                      (C45221 + C45222 + C45223) * C51281) *
                         C51167) *
                        C51303 * C51443 +
                    (((C44707 + C44706 + C44705) * C797 +
                      (C44704 + C44703 + C44702) * C51444 -
                      (C45432 + C45431 + C45430) * C798 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C797 +
                      (C45057 + C45058 + C45059) * C51444 -
                      (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                       C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                          C798 -
                      (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                       C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                          C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C289 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C290 +
                    (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                       C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                          C118 +
                      (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                       C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                          C51217) *
                         C51428 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51167) *
                        C51303 * C291) *
                       C292 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C44474 * C295 + C51494 * C307 + C44475 * C963 +
                       C51495 * C970 + C44476 * C1301 + C44473 * C1307) *
                          C118 +
                      (C44474 * C306 + C51494 * C325 + C44475 * C971 +
                       C51495 * C978 + C44476 * C1308 + C44473 * C1313) *
                          C51217) *
                         C51167) *
                        C51303 * C290 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C289 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51167 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51428) *
                        C51303 * C291) *
                       C51190)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51217) *
                        C51167) *
                       C51303 * C51202 * C113 -
                   (((C44520 + C44521 + C44522) * C51217 +
                     (C44523 + C44524 + C44525) * C118) *
                        C51167 +
                    ((C44519 + C44518 + C44517) * C51217 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51428) *
                       C51303 * C51202 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51217) *
                        C51428 +
                    ((C44526 + C44527 + C44528) * C118 +
                     (C44529 + C44530 + C44531) * C51217) *
                        C51167) *
                       C51303 * C51202 * C115 -
                   (((C44476 * C515 + C44473 * C525 + C44475 * C513 +
                      C51495 * C524 + C44474 * C134 + C51494 * C144) *
                         C51217 +
                     (C44476 * C495 + C44473 * C514 + C44475 * C494 +
                      C51495 * C512 + C44474 * C123 + C51494 * C135) *
                         C118) *
                        C51167 +
                    ((C44531 + C44530 + C44529) * C51217 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51428) *
                       C51303 * C51202 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C483 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C480 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C484 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C481 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C485 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C482) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C483 +
                     (C44517 + C44518 + C44519) * C480 -
                     (C44884 + C44885 + C44886) * C484 -
                     (C44887 + C44888 + C44889) * C481 +
                     (C44890 + C44891 + C44892) * C485 +
                     (C44893 + C44894 + C44895) * C482) *
                        C51167) *
                       C51303 * C51202 * C292 +
                   (((C44886 + C44885 + C44884) * C484 -
                     ((C44519 + C44518 + C44517) * C480 +
                      (C44516 + C44515 + C44514) * C483) +
                     (C44889 + C44888 + C44887) * C481 -
                     (C44892 + C44891 + C44890) * C485 -
                     (C44895 + C44894 + C44893) * C482) *
                        C51428 +
                    ((C44474 * C490 + C51494 * C504 + C44475 * C491 +
                      C51495 * C506 + C44476 * C1960 + C44473 * C1966) *
                         C484 -
                     ((C44520 + C44521 + C44522) * C480 +
                      (C44523 + C44524 + C44525) * C483) +
                     (C44474 * C505 + C51494 * C520 + C44475 * C507 +
                      C51495 * C521 + C44476 * C1967 + C44473 * C1972) *
                         C481 -
                     (C44476 * C5801 + C44473 * C5806 + C44475 * C1960 +
                      C51495 * C1966 + C44474 * C491 + C51494 * C506) *
                         C485 -
                     (C44476 * C5807 + C44473 * C5810 + C44475 * C1967 +
                      C51495 * C1972 + C44474 * C507 + C51494 * C521) *
                         C482) *
                        C51167) *
                       C51303 * C51202 * C51190)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C797 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51444 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C798 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C797 +
                     (C44517 + C44518 + C44519) * C51444 -
                     (C44884 + C44885 + C44886) * C798 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C51202 * C51486 +
                   (((C44886 + C44885 + C44884) * C798 -
                     ((C44519 + C44518 + C44517) * C51444 +
                      (C44516 + C44515 + C44514) * C797) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51428 +
                    ((C45218 + C45219 + C45220) * C798 -
                     ((C44520 + C44521 + C44522) * C51444 +
                      (C44523 + C44524 + C44525) * C797) +
                     (C45221 + C45222 + C45223) * C51281) *
                        C51167) *
                       C51303 * C51202 * C51487 +
                   (((C44525 + C44524 + C44523) * C797 +
                     (C44522 + C44521 + C44520) * C51444 -
                     (C45220 + C45219 + C45218) * C798 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51428 +
                    ((C44526 + C44527 + C44528) * C797 +
                     (C44529 + C44530 + C44531) * C51444 -
                     (C44476 * C1961 + C44473 * C1968 + C44475 * C493 +
                      C51495 * C510 + C44474 * C492 + C51494 * C508) *
                         C798 -
                     (C44476 * C1969 + C44473 * C1973 + C44475 * C511 +
                      C51495 * C523 + C44474 * C509 + C51494 * C522) *
                         C51281) *
                        C51167) *
                       C51303 * C51202 * C682)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51217) *
                        C51167) *
                       C51303 * C51202 * C113 -
                   (((C44520 + C44521 + C44522) * C51217 +
                     (C44523 + C44524 + C44525) * C118) *
                        C51167 +
                    ((C44519 + C44518 + C44517) * C51217 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51428) *
                       C51303 * C51202 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51217) *
                        C51428 +
                    ((C44526 + C44527 + C44528) * C118 +
                     (C44529 + C44530 + C44531) * C51217) *
                        C51167) *
                       C51303 * C51202 * C115 -
                   (((C44476 * C515 + C44473 * C525 + C44475 * C513 +
                      C51495 * C524 + C44474 * C134 + C51494 * C144) *
                         C51217 +
                     (C44476 * C495 + C44473 * C514 + C44475 * C494 +
                      C51495 * C512 + C44474 * C123 + C51494 * C135) *
                         C118) *
                        C51167 +
                    ((C44531 + C44530 + C44529) * C51217 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51428) *
                       C51303 * C51202 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C289 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C290 +
                    (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                       C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                          C118 +
                      (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                       C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                          C51217) *
                         C51428 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51167) *
                        C51303 * C291) *
                       C292 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C44474 * C295 + C51494 * C307 + C44475 * C963 +
                       C51495 * C970 + C44476 * C1301 + C44473 * C1307) *
                          C118 +
                      (C44474 * C306 + C51494 * C325 + C44475 * C971 +
                       C51495 * C978 + C44476 * C1308 + C44473 * C1313) *
                          C51217) *
                         C51167) *
                        C51303 * C290 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C289 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51167 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51428) *
                        C51303 * C291) *
                       C51190)) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C51488 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C51489 +
                    (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                       C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                          C118 +
                      (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                       C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                          C51217) *
                         C51428 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51217) *
                         C51167) *
                        C51303 * C1415) *
                       C51435 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51167) *
                        C51303 * C51489 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C51488 -
                    (((C44476 * C2813 + C44473 * C2816 + C44475 * C1655 +
                       C51495 * C1660 + C44474 * C317 + C51494 * C330) *
                          C51217 +
                      (C44476 * C2807 + C44473 * C2812 + C44475 * C1648 +
                       C51495 * C1654 + C44474 * C300 + C51494 * C316) *
                          C118) *
                         C51167 +
                     ((C44713 + C44712 + C44711) * C51217 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51428) *
                        C51303 * C1415) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C797 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51444 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C798 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C797 +
                     (C44517 + C44518 + C44519) * C51444 -
                     (C44884 + C44885 + C44886) * C798 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C51488 +
                   (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                      C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                         C798 -
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51444 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C797) +
                     (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                      C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                         C51281) *
                        C51428 +
                    ((C45430 + C45431 + C45432) * C798 -
                     ((C44702 + C44703 + C44704) * C51444 +
                      (C44705 + C44706 + C44707) * C797) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51167) *
                       C51303 * C51489 +
                   (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                      C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                         C797 +
                     (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                      C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                         C51444 -
                     (C44476 * C4780 + C44473 * C4786 + C44475 * C2805 +
                      C51495 * C2808 + C44474 * C1646 + C51494 * C1650) *
                         C798 -
                     (C44476 * C4787 + C44473 * C4792 + C44475 * C2809 +
                      C51495 * C2814 + C44474 * C1651 + C51494 * C1658) *
                         C51281) *
                        C51428 +
                    ((C44708 + C44709 + C44710) * C797 +
                     (C44711 + C44712 + C44713) * C51444 -
                     (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                      C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                         C798 -
                     (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                      C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                         C51281) *
                        C51167) *
                       C51303 * C1415) *
                  C51185) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51217) *
                        C51167) *
                       C51303 * C1180 -
                   (((C44702 + C44703 + C44704) * C51217 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51167 +
                    ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                      C51495 * C976 + C44474 * C310 + C51494 * C327) *
                         C51217 +
                     (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                      C51495 * C966 + C44474 * C297 + C51494 * C311) *
                         C118) *
                        C51428) *
                       C51303 * C1181 +
                   (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                      C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                         C118 +
                     (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                      C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                         C51217) *
                        C51428 +
                    ((C44708 + C44709 + C44710) * C118 +
                     (C44711 + C44712 + C44713) * C51217) *
                        C51167) *
                       C51303 * C1182 -
                   (((C44476 * C3818 + C44473 * C3820 + C44475 * C3355 +
                      C51495 * C3359 + C44474 * C1193 + C51494 * C1199) *
                         C51217 +
                     (C44476 * C3814 + C44473 * C3817 + C44475 * C3350 +
                      C51495 * C3354 + C44474 * C1187 + C51494 * C1194) *
                         C118) *
                        C51167 +
                    ((C44476 * C3816 + C44473 * C3819 + C44475 * C3353 +
                      C51495 * C3358 + C44474 * C1195 + C51494 * C1200) *
                         C51217 +
                     (C44476 * C3813 + C44473 * C3815 + C44475 * C3349 +
                      C51495 * C3352 + C44474 * C1188 + C51494 * C1196) *
                         C118) *
                        C51428) *
                       C51303 * C1183) *
                  C51185) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C1109 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C51253) *
                       C1111 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51167) *
                        C51303 * C51253 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C1109) *
                       C1112 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51428 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51217) *
                         C51167) *
                        C51303 * C1109 -
                    (((C44476 * C1310 + C44473 * C1314 + C44475 * C973 +
                       C51495 * C979 + C44474 * C304 + C51494 * C324) *
                          C51217 +
                      (C44476 * C1302 + C44473 * C1309 + C44475 * C964 +
                       C51495 * C972 + C44474 * C294 + C51494 * C305) *
                          C118) *
                         C51167 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51428) *
                        C51303 * C51253) *
                       C1113)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C483 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C480 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C484 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C481 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C485 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C482) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C483 +
                     (C44517 + C44518 + C44519) * C480 -
                     (C44884 + C44885 + C44886) * C484 -
                     (C44887 + C44888 + C44889) * C481 +
                     (C44890 + C44891 + C44892) * C485 +
                     (C44893 + C44894 + C44895) * C482) *
                        C51167) *
                       C51303 * C1109 +
                   (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                      C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                         C484 -
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C480 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C483) +
                     (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                      C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                         C481 -
                     (C44476 * C6781 + C44473 * C6783 + C44475 * C4778 +
                      C51495 * C4782 + C44474 * C1299 + C51494 * C1303) *
                         C485 -
                     (C44476 * C6784 + C44473 * C6787 + C44475 * C4783 +
                      C51495 * C4790 + C44474 * C1304 + C51494 * C1311) *
                         C482) *
                        C51428 +
                    ((C45430 + C45431 + C45432) * C484 -
                     ((C44702 + C44703 + C44704) * C480 +
                      (C44705 + C44706 + C44707) * C483) +
                     (C45433 + C45434 + C45435) * C481 -
                     (C44476 * C6782 + C44473 * C6785 + C44475 * C4779 +
                      C51495 * C4784 + C44474 * C1300 + C51494 * C1305) *
                         C485 -
                     (C44476 * C6786 + C44473 * C6788 + C44475 * C4785 +
                      C51495 * C4791 + C44474 * C1306 + C51494 * C1312) *
                         C482) *
                        C51167) *
                       C51303 * C51253) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C797 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51444 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C798 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C797 +
                      (C44517 + C44518 + C44519) * C51444 -
                      (C44884 + C44885 + C44886) * C798 -
                      (C44887 + C44888 + C44889) * C51281) *
                         C51167) *
                        C51303 * C1109 +
                    (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                       C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                          C798 -
                      ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                        C51495 * C976 + C44474 * C310 + C51494 * C327) *
                           C51444 +
                       (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                        C51495 * C966 + C44474 * C297 + C51494 * C311) *
                           C797) +
                      (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                       C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                          C51281) *
                         C51428 +
                     ((C45430 + C45431 + C45432) * C798 -
                      ((C44702 + C44703 + C44704) * C51444 +
                       (C44705 + C44706 + C44707) * C797) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C51435 +
                   ((((C44886 + C44885 + C44884) * C798 -
                      ((C44519 + C44518 + C44517) * C51444 +
                       (C44516 + C44515 + C44514) * C797) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51428 +
                     ((C45218 + C45219 + C45220) * C798 -
                      ((C44520 + C44521 + C44522) * C51444 +
                       (C44523 + C44524 + C44525) * C797) +
                      (C45221 + C45222 + C45223) * C51281) *
                         C51167) *
                        C51303 * C1109 +
                    (((C44707 + C44706 + C44705) * C797 +
                      (C44704 + C44703 + C44702) * C51444 -
                      (C45432 + C45431 + C45430) * C798 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C797 +
                      (C45057 + C45058 + C45059) * C51444 -
                      (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                       C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                          C798 -
                      (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                       C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                          C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C118 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C51217) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51217) *
                         C51167) *
                        C51303 * C1109 -
                    (((C44702 + C44703 + C44704) * C51217 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51167 +
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51217 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C118) *
                         C51428) *
                        C51303 * C51253) *
                       C1111 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51217) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51217) *
                         C51167) *
                        C51303 * C51253 -
                    (((C44520 + C44521 + C44522) * C51217 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51167 +
                     ((C44519 + C44518 + C44517) * C51217 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51428) *
                        C51303 * C1109) *
                       C1112 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51217) *
                         C51428 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51217) *
                         C51167) *
                        C51303 * C1109 -
                    (((C44476 * C1310 + C44473 * C1314 + C44475 * C973 +
                       C51495 * C979 + C44474 * C304 + C51494 * C324) *
                          C51217 +
                      (C44476 * C1302 + C44473 * C1309 + C44475 * C964 +
                       C51495 * C972 + C44474 * C294 + C51494 * C305) *
                          C118) *
                         C51167 +
                     ((C45059 + C45058 + C45057) * C51217 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51428) *
                        C51303 * C51253) *
                       C1113)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C118 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51217) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51217) *
                        C51167) *
                       C51303 * C1180 -
                   (((C44702 + C44703 + C44704) * C51217 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51167 +
                    ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                      C51495 * C976 + C44474 * C310 + C51494 * C327) *
                         C51217 +
                     (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                      C51495 * C966 + C44474 * C297 + C51494 * C311) *
                         C118) *
                        C51428) *
                       C51303 * C1181 +
                   (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                      C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                         C118 +
                     (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                      C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                         C51217) *
                        C51428 +
                    ((C44708 + C44709 + C44710) * C118 +
                     (C44711 + C44712 + C44713) * C51217) *
                        C51167) *
                       C51303 * C1182 -
                   (((C44476 * C3818 + C44473 * C3820 + C44475 * C3355 +
                      C51495 * C3359 + C44474 * C1193 + C51494 * C1199) *
                         C51217 +
                     (C44476 * C3814 + C44473 * C3817 + C44475 * C3350 +
                      C51495 * C3354 + C44474 * C1187 + C51494 * C1194) *
                         C118) *
                        C51167 +
                    ((C44476 * C3816 + C44473 * C3819 + C44475 * C3353 +
                      C51495 * C3358 + C44474 * C1195 + C51494 * C1200) *
                         C51217 +
                     (C44476 * C3813 + C44473 * C3815 + C44475 * C3349 +
                      C51495 * C3352 + C44474 * C1188 + C51494 * C1196) *
                         C118) *
                        C51428) *
                       C51303 * C1183) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                       C51495 * C496 + C44476 * C487 + C44473 * C498) *
                          C1762 +
                      (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                       C51495 * C516 + C44476 * C499 + C44473 * C517) *
                          C1760 -
                      (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                       C51495 * C498 + C44474 * C486 + C51494 * C496) *
                          C1763 -
                      (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                       C51495 * C517 + C44474 * C497 + C51494 * C516) *
                          C51281) *
                         C51428 +
                     ((C44514 + C44515 + C44516) * C1762 +
                      (C44517 + C44518 + C44519) * C1760 -
                      (C44884 + C44885 + C44886) * C1763 -
                      (C44887 + C44888 + C44889) * C51281) *
                         C51167) *
                        C51303 * C51443 +
                    (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                       C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                          C1763 -
                      ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                        C51495 * C976 + C44474 * C310 + C51494 * C327) *
                           C1760 +
                       (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                        C51495 * C966 + C44474 * C297 + C51494 * C311) *
                           C1762) +
                      (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                       C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                          C51281) *
                         C51428 +
                     ((C45430 + C45431 + C45432) * C1763 -
                      ((C44702 + C44703 + C44704) * C1760 +
                       (C44705 + C44706 + C44707) * C1762) +
                      (C45433 + C45434 + C45435) * C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C51435 +
                   ((((C44886 + C44885 + C44884) * C1763 -
                      ((C44519 + C44518 + C44517) * C1760 +
                       (C44516 + C44515 + C44514) * C1762) +
                      (C44889 + C44888 + C44887) * C51281) *
                         C51428 +
                     ((C45218 + C45219 + C45220) * C1763 -
                      ((C44520 + C44521 + C44522) * C1760 +
                       (C44523 + C44524 + C44525) * C1762) +
                      (C45221 + C45222 + C45223) * C51281) *
                         C51167) *
                        C51303 * C51443 +
                    (((C44707 + C44706 + C44705) * C1762 +
                      (C44704 + C44703 + C44702) * C1760 -
                      (C45432 + C45431 + C45430) * C1763 -
                      (C45435 + C45434 + C45433) * C51281) *
                         C51428 +
                     ((C45054 + C45055 + C45056) * C1762 +
                      (C45057 + C45058 + C45059) * C1760 -
                      (C44476 * C6369 + C44473 * C6370 + C44475 * C1301 +
                       C51495 * C1307 + C44474 * C963 + C51494 * C970) *
                          C1763 -
                      (C44476 * C6371 + C44473 * C6372 + C44475 * C1308 +
                       C51495 * C1313 + C44474 * C971 + C51494 * C978) *
                          C51281) *
                         C51167) *
                        C51303 * C51253) *
                       C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C2217 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51490 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C2218 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51491 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C2219 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C2216) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C2217 +
                     (C44517 + C44518 + C44519) * C51490 -
                     (C44884 + C44885 + C44886) * C2218 -
                     (C44887 + C44888 + C44889) * C51491 +
                     (C44890 + C44891 + C44892) * C2219 +
                     (C44893 + C44894 + C44895) * C2216) *
                        C51167) *
                       C51303 * C51443 +
                   (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                      C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                         C2218 -
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C51490 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C2217) +
                     (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                      C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                         C51491 -
                     (C44476 * C6781 + C44473 * C6783 + C44475 * C4778 +
                      C51495 * C4782 + C44474 * C1299 + C51494 * C1303) *
                         C2219 -
                     (C44476 * C6784 + C44473 * C6787 + C44475 * C4783 +
                      C51495 * C4790 + C44474 * C1304 + C51494 * C1311) *
                         C2216) *
                        C51428 +
                    ((C45430 + C45431 + C45432) * C2218 -
                     ((C44702 + C44703 + C44704) * C51490 +
                      (C44705 + C44706 + C44707) * C2217) +
                     (C45433 + C45434 + C45435) * C51491 -
                     (C44476 * C6782 + C44473 * C6785 + C44475 * C4779 +
                      C51495 * C4784 + C44474 * C1300 + C51494 * C1305) *
                         C2219 -
                     (C44476 * C6786 + C44473 * C6788 + C44475 * C4785 +
                      C51495 * C4791 + C44474 * C1306 + C51494 * C1312) *
                         C2216) *
                        C51167) *
                       C51303 * C51253) *
                  C51185) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C1762 +
                     (C44517 + C44518 + C44519) * C1760 -
                     (C44884 + C44885 + C44886) * C1763 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C289 +
                   (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                      C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                         C1763 -
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C1760 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C1762) +
                     (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                      C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                         C51281) *
                        C51428 +
                    ((C45430 + C45431 + C45432) * C1763 -
                     ((C44702 + C44703 + C44704) * C1760 +
                      (C44705 + C44706 + C44707) * C1762) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51167) *
                       C51303 * C290 +
                   (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                      C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                         C1762 +
                     (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                      C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                         C1760 -
                     (C44476 * C4780 + C44473 * C4786 + C44475 * C2805 +
                      C51495 * C2808 + C44474 * C1646 + C51494 * C1650) *
                         C1763 -
                     (C44476 * C4787 + C44473 * C4792 + C44475 * C2809 +
                      C51495 * C2814 + C44474 * C1651 + C51494 * C1658) *
                         C51281) *
                        C51428 +
                    ((C44708 + C44709 + C44710) * C1762 +
                     (C44711 + C44712 + C44713) * C1760 -
                     (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                      C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                         C1763 -
                     (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                      C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                         C51281) *
                        C51167) *
                       C51303 * C291) *
                  C51185) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C1762 +
                     (C44517 + C44518 + C44519) * C1760 -
                     (C44884 + C44885 + C44886) * C1763 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C51202 * C1111 +
                   (((C44886 + C44885 + C44884) * C1763 -
                     ((C44519 + C44518 + C44517) * C1760 +
                      (C44516 + C44515 + C44514) * C1762) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51428 +
                    ((C45218 + C45219 + C45220) * C1763 -
                     ((C44520 + C44521 + C44522) * C1760 +
                      (C44523 + C44524 + C44525) * C1762) +
                     (C45221 + C45222 + C45223) * C51281) *
                        C51167) *
                       C51303 * C51202 * C1112 +
                   (((C44525 + C44524 + C44523) * C1762 +
                     (C44522 + C44521 + C44520) * C1760 -
                     (C45220 + C45219 + C45218) * C1763 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51428 +
                    ((C44526 + C44527 + C44528) * C1762 +
                     (C44529 + C44530 + C44531) * C1760 -
                     (C44476 * C1961 + C44473 * C1968 + C44475 * C493 +
                      C51495 * C510 + C44474 * C492 + C51494 * C508) *
                         C1763 -
                     (C44476 * C1969 + C44473 * C1973 + C44475 * C511 +
                      C51495 * C523 + C44474 * C509 + C51494 * C522) *
                         C51281) *
                        C51167) *
                       C51303 * C51202 * C1113)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                     C51495 * C496 + C44476 * C487 + C44473 * C498) *
                        C1954 +
                    (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                     C51495 * C516 + C44476 * C499 + C44473 * C517) *
                        C1950 -
                    (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                     C51495 * C498 + C44474 * C486 + C51494 * C496) *
                        C1955 -
                    (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                     C51495 * C517 + C44474 * C497 + C51494 * C516) *
                        C1951 +
                    (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                     C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                        C1956 +
                    (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                     C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                        C1952 -
                    (C44476 * C7665 + C44473 * C7667 + C44475 * C5799 +
                     C51495 * C5802 + C44474 * C1958 + C51494 * C1962) *
                        C1957 -
                    (C44476 * C7668 + C44473 * C7671 + C44475 * C5803 +
                     C51495 * C5808 + C44474 * C1963 + C51494 * C1970) *
                        C1953) *
                       C51428 +
                   ((C44514 + C44515 + C44516) * C1954 +
                    (C44517 + C44518 + C44519) * C1950 -
                    (C44884 + C44885 + C44886) * C1955 -
                    (C44887 + C44888 + C44889) * C1951 +
                    (C44890 + C44891 + C44892) * C1956 +
                    (C44893 + C44894 + C44895) * C1952 -
                    (C44476 * C7666 + C44473 * C7669 + C44475 * C5800 +
                     C51495 * C5804 + C44474 * C1959 + C51494 * C1964) *
                        C1957 -
                    (C44476 * C7670 + C44473 * C7672 + C44475 * C5805 +
                     C51495 * C5809 + C44474 * C1965 + C51494 * C1971) *
                        C1953) *
                       C51167) *
                  C51303 * C51202 * C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C2217 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C51490 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C2218 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51491 +
                     (C44474 * C487 + C51494 * C498 + C44475 * C1958 +
                      C51495 * C1962 + C44476 * C5799 + C44473 * C5802) *
                         C2219 +
                     (C44474 * C499 + C51494 * C517 + C44475 * C1963 +
                      C51495 * C1970 + C44476 * C5803 + C44473 * C5808) *
                         C2216) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C2217 +
                     (C44517 + C44518 + C44519) * C51490 -
                     (C44884 + C44885 + C44886) * C2218 -
                     (C44887 + C44888 + C44889) * C51491 +
                     (C44890 + C44891 + C44892) * C2219 +
                     (C44893 + C44894 + C44895) * C2216) *
                        C51167) *
                       C51303 * C51202 * C51435 +
                   (((C44886 + C44885 + C44884) * C2218 -
                     ((C44519 + C44518 + C44517) * C51490 +
                      (C44516 + C44515 + C44514) * C2217) +
                     (C44889 + C44888 + C44887) * C51491 -
                     (C44892 + C44891 + C44890) * C2219 -
                     (C44895 + C44894 + C44893) * C2216) *
                        C51428 +
                    ((C45218 + C45219 + C45220) * C2218 -
                     ((C44520 + C44521 + C44522) * C51490 +
                      (C44523 + C44524 + C44525) * C2217) +
                     (C45221 + C45222 + C45223) * C51491 -
                     (C44476 * C5801 + C44473 * C5806 + C44475 * C1960 +
                      C51495 * C1966 + C44474 * C491 + C51494 * C506) *
                         C2219 -
                     (C44476 * C5807 + C44473 * C5810 + C44475 * C1967 +
                      C51495 * C1972 + C44474 * C507 + C51494 * C521) *
                         C2216) *
                        C51167) *
                       C51303 * C51202 * C51190)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C1762 +
                     (C44517 + C44518 + C44519) * C1760 -
                     (C44884 + C44885 + C44886) * C1763 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C51202 * C1111 +
                   (((C44886 + C44885 + C44884) * C1763 -
                     ((C44519 + C44518 + C44517) * C1760 +
                      (C44516 + C44515 + C44514) * C1762) +
                     (C44889 + C44888 + C44887) * C51281) *
                        C51428 +
                    ((C45218 + C45219 + C45220) * C1763 -
                     ((C44520 + C44521 + C44522) * C1760 +
                      (C44523 + C44524 + C44525) * C1762) +
                     (C45221 + C45222 + C45223) * C51281) *
                        C51167) *
                       C51303 * C51202 * C1112 +
                   (((C44525 + C44524 + C44523) * C1762 +
                     (C44522 + C44521 + C44520) * C1760 -
                     (C45220 + C45219 + C45218) * C1763 -
                     (C45223 + C45222 + C45221) * C51281) *
                        C51428 +
                    ((C44526 + C44527 + C44528) * C1762 +
                     (C44529 + C44530 + C44531) * C1760 -
                     (C44476 * C1961 + C44473 * C1968 + C44475 * C493 +
                      C51495 * C510 + C44474 * C492 + C51494 * C508) *
                         C1763 -
                     (C44476 * C1969 + C44473 * C1973 + C44475 * C511 +
                      C51495 * C523 + C44474 * C509 + C51494 * C522) *
                         C51281) *
                        C51167) *
                       C51303 * C51202 * C1113)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51494 * C126 + C44475 * C486 +
                      C51495 * C496 + C44476 * C487 + C44473 * C498) *
                         C1762 +
                     (C44474 * C127 + C51494 * C140 + C44475 * C497 +
                      C51495 * C516 + C44476 * C499 + C44473 * C517) *
                         C1760 -
                     (C44476 * C1958 + C44473 * C1962 + C44475 * C487 +
                      C51495 * C498 + C44474 * C486 + C51494 * C496) *
                         C1763 -
                     (C44476 * C1963 + C44473 * C1970 + C44475 * C499 +
                      C51495 * C517 + C44474 * C497 + C51494 * C516) *
                         C51281) *
                        C51428 +
                    ((C44514 + C44515 + C44516) * C1762 +
                     (C44517 + C44518 + C44519) * C1760 -
                     (C44884 + C44885 + C44886) * C1763 -
                     (C44887 + C44888 + C44889) * C51281) *
                        C51167) *
                       C51303 * C289 +
                   (((C44474 * C961 + C51494 * C966 + C44475 * C1299 +
                      C51495 * C1303 + C44476 * C4778 + C44473 * C4782) *
                         C1763 -
                     ((C44476 * C1304 + C44473 * C1311 + C44475 * C967 +
                       C51495 * C976 + C44474 * C310 + C51494 * C327) *
                          C1760 +
                      (C44476 * C1299 + C44473 * C1303 + C44475 * C961 +
                       C51495 * C966 + C44474 * C297 + C51494 * C311) *
                          C1762) +
                     (C44474 * C967 + C51494 * C976 + C44475 * C1304 +
                      C51495 * C1311 + C44476 * C4783 + C44473 * C4790) *
                         C51281) *
                        C51428 +
                    ((C45430 + C45431 + C45432) * C1763 -
                     ((C44702 + C44703 + C44704) * C1760 +
                      (C44705 + C44706 + C44707) * C1762) +
                     (C45433 + C45434 + C45435) * C51281) *
                        C51167) *
                       C51303 * C290 +
                   (((C44474 * C298 + C51494 * C312 + C44475 * C1646 +
                      C51495 * C1650 + C44476 * C2805 + C44473 * C2808) *
                         C1762 +
                     (C44474 * C313 + C51494 * C328 + C44475 * C1651 +
                      C51495 * C1658 + C44476 * C2809 + C44473 * C2814) *
                         C1760 -
                     (C44476 * C4780 + C44473 * C4786 + C44475 * C2805 +
                      C51495 * C2808 + C44474 * C1646 + C51494 * C1650) *
                         C1763 -
                     (C44476 * C4787 + C44473 * C4792 + C44475 * C2809 +
                      C51495 * C2814 + C44474 * C1651 + C51494 * C1658) *
                         C51281) *
                        C51428 +
                    ((C44708 + C44709 + C44710) * C1762 +
                     (C44711 + C44712 + C44713) * C1760 -
                     (C44476 * C4781 + C44473 * C4788 + C44475 * C2806 +
                      C51495 * C2810 + C44474 * C1647 + C51494 * C1652) *
                         C1763 -
                     (C44476 * C4789 + C44473 * C4793 + C44475 * C2811 +
                      C51495 * C2815 + C44474 * C1653 + C51494 * C1659) *
                         C51281) *
                        C51167) *
                       C51303 * C291) *
                  C51185) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C51443 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51253) *
              C51486 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51253 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C51443) *
              C51487 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
               C51303 * C51443 -
           (((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C17435 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C17434 +
            C34101 * C17433) *
               C51303 * C51253) *
              C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C51443 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C51486 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C51443) *
              C51487 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C51443 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C17434 +
            C34268 * C17435) *
               C51303 * C51443 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C798 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C51444 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C797) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C292 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C798 -
             ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C51443 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
             (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C797 + (C34099 + C34100) * C51444 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C798 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            (C36542 * C797 + C36543 * C51444 - (C37210 + C37211) * C798 -
             (C37212 + C37213) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C37207 + C37206) * C798 -
             ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C798 -
             ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
              C51378 * C3815) *
                 C798 -
             ((C36532 + C36533) * C51444 + (C36534 + C36535) * C797) +
             (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C292 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
             (C37215 + C37214) * C798 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C797 + (C36538 + C36539) * C51444 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C798 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C289 -
           (((C33729 + C33730) * C51217 + (C33731 + C33732) * C118) * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C290 +
           (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                 C118 +
             (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                 C51217) *
                C17433 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
               C51303 * C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C33490 * C294 + C33488 * C305 + C33491 * C964 + C51378 * C972) *
                 C118 +
             (C33490 * C304 + C33488 * C324 + C33491 * C973 + C51378 * C979) *
                 C51217) *
                C17435) *
               C51303 * C290 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C289 -
           (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                 C51217 +
             (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                 C118) *
                C17435 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C17434 +
            ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C17433) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C51202 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
              C51303 * C51202 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
              C51303 * C51202 * C115 -
          (((C33491 * C801 + C51378 * C802 + C33490 * C137 + C33488 * C145) *
                C51217 +
            (C33491 * C799 + C51378 * C800 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C17433 +
           ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
            (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
            (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
               C17434 +
           (C33541 * C483 + C33542 * C480 - (C33931 + C33932) * C484 -
            (C33933 + C33934) * C481 + (C33935 + C33936) * C485 +
            (C33937 + C33938) * C482) *
               C17435) *
              C51303 * C51202 * C292 +
          (((C33924 + C33923) * C484 -
            ((C33528 + C33527) * C480 + (C33526 + C33525) * C483) +
            (C33926 + C33925) * C481 - (C33928 + C33927) * C485 -
            (C33930 + C33929) * C482) *
               C17433 +
           ((C33932 + C33931) * C484 -
            ((C33532 + C33531) * C480 + (C33530 + C33529) * C483) +
            (C33934 + C33933) * C481 - (C33936 + C33935) * C485 -
            (C33938 + C33937) * C482) *
               C17434 +
           ((C33490 * C492 + C33488 * C508 + C33491 * C493 + C51378 * C510) *
                C484 -
            (C33543 * C480 + C33544 * C483) +
            (C33490 * C509 + C33488 * C522 + C33491 * C511 + C51378 * C523) *
                C481 -
            (C33491 * C1961 + C51378 * C1968 + C33490 * C493 + C33488 * C510) *
                C485 -
            (C33491 * C1969 + C51378 * C1973 + C33490 * C511 + C33488 * C523) *
                C482) *
               C17435) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C33490 * C297 + C33488 * C311 + C33491 * C961 + C51378 * C966) *
                C118 +
            (C33490 * C310 + C33488 * C327 + C33491 * C967 + C51378 * C976) *
                C51217) *
               C51162 * C2437 +
           ((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C51162 * C2438) *
              C51202 * C113 -
          (((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C51162 *
               C2438 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
               C2437 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
               C2436) *
              C51202 * C114 +
          (C33549 * C51162 * C2436 +
           ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
               C2437 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
               C2438) *
              C51202 * C115 -
          (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                C51217 +
            (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                C118) *
               C51162 * C2438 +
           ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51162 *
               C2437 +
           C33550 * C51162 * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C289 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C290 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C33490 * C2585 + C33488 * C2588 + C33491 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C33490 * C2589 + C33488 * C2594 + C33491 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C2438) *
               C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C290 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C289 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C2436 +
           ((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
            (C33491 * C1299 + C51378 * C1303 + C33490 * C961 + C33488 * C966) *
                C484 -
            (C33491 * C1304 + C51378 * C1311 + C33490 * C967 + C33488 * C976) *
                C481 +
            (C33490 * C1299 + C33488 * C1303 + C33491 * C4778 +
             C51378 * C4782) *
                C485 +
            (C33490 * C1304 + C33488 * C1311 + C33491 * C4783 +
             C51378 * C4790) *
                C482) *
               C51162 * C2437 +
           (C36542 * C483 + C36543 * C480 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C484 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C481 +
            (C33490 * C2805 + C33488 * C2808 + C33491 * C4780 +
             C51378 * C4786) *
                C485 +
            (C33490 * C2809 + C33488 * C2814 + C33491 * C4787 +
             C51378 * C4792) *
                C482) *
               C51162 * C2438) *
              C51202 * C292 +
          (((C33924 + C33923) * C484 -
            ((C33528 + C33527) * C480 + (C33526 + C33525) * C483) +
            (C33926 + C33925) * C481 - (C33928 + C33927) * C485 -
            (C33930 + C33929) * C482) *
               C51162 * C2436 +
           ((C34479 + C34480) * C484 -
            ((C33733 + C33734) * C480 + (C33735 + C33736) * C483) +
            (C34481 + C34482) * C481 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C485 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C482) *
               C51162 * C2437 +
           ((C33490 * C1647 + C33488 * C1652 + C33491 * C2806 +
             C51378 * C2810) *
                C484 -
            (C36522 * C480 + C36523 * C483) +
            (C33490 * C1653 + C33488 * C1659 + C33491 * C2811 +
             C51378 * C2815) *
                C481 -
            (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
             C33488 * C2810) *
                C485 -
            (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
             C33488 * C2815) *
                C482) *
               C51162 * C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
            (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
               C17434 +
           C34268 * C17435) *
              C51303 * C51202 * C51486 +
          (((C33924 + C33923) * C798 -
            ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
            (C33926 + C33925) * C51281) *
               C17433 +
           ((C33932 + C33931) * C798 -
            ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
            (C33934 + C33933) * C51281) *
               C17434 +
           ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
            (C34265 + C34266) * C51281) *
               C17435) *
              C51303 * C51202 * C51487 +
          (C34268 * C17433 +
           ((C33536 + C33535) * C797 + (C33534 + C33533) * C51444 -
            (C34264 + C34263) * C798 - (C34266 + C34265) * C51281) *
               C17434 +
           ((C33537 + C33538) * C797 + (C33539 + C33540) * C51444 -
            (C33491 * C495 + C51378 * C514 + C33490 * C494 + C33488 * C512) *
                C798 -
            (C33491 * C515 + C51378 * C525 + C33490 * C513 + C33488 * C524) *
                C51281) *
               C17435) *
              C51303 * C51202 * C682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
            (C33491 * C1299 + C51378 * C1303 + C33490 * C961 + C33488 * C966) *
                C798 -
            (C33491 * C1304 + C51378 * C1311 + C33490 * C967 + C33488 * C976) *
                C51281) *
               C51162 * C2437 +
           (C36542 * C797 + C36543 * C51444 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C798 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C51162 * C2438) *
              C51202 * C51486 +
          (((C33924 + C33923) * C798 -
            ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C798 -
            ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C33490 * C1647 + C33488 * C1652 + C33491 * C2806 +
             C51378 * C2810) *
                C798 -
            (C36522 * C51444 + C36523 * C797) +
            (C33490 * C1653 + C33488 * C1659 + C33491 * C2811 +
             C51378 * C2815) *
                C51281) *
               C51162 * C2438) *
              C51202 * C51487 +
          (C34268 * C51162 * C2436 +
           ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
            (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C798 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C682)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C51202 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
              C51303 * C51202 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
              C51303 * C51202 * C115 -
          (((C33491 * C801 + C51378 * C802 + C33490 * C137 + C33488 * C145) *
                C51217 +
            (C33491 * C799 + C51378 * C800 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51217 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51303 * C51202 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C289 -
           (((C33729 + C33730) * C51217 + (C33731 + C33732) * C118) * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C290 +
           (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                 C118 +
             (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                 C51217) *
                C17433 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
               C51303 * C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C33490 * C294 + C33488 * C305 + C33491 * C964 + C51378 * C972) *
                 C118 +
             (C33490 * C304 + C33488 * C324 + C33491 * C973 + C51378 * C979) *
                 C51217) *
                C17435) *
               C51303 * C290 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C289 -
           (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                 C51217 +
             (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                 C118) *
                C17435 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C17434 +
            ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C17433) *
               C51303 * C291) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C33490 * C297 + C33488 * C311 + C33491 * C961 + C51378 * C966) *
                C118 +
            (C33490 * C310 + C33488 * C327 + C33491 * C967 + C51378 * C976) *
                C51217) *
               C51162 * C2437 +
           ((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C51162 * C2438) *
              C51202 * C113 -
          (((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C51162 *
               C2438 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
               C2437 +
           ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
               C2436) *
              C51202 * C114 +
          (C33549 * C51162 * C2436 +
           ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
               C2437 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
               C2438) *
              C51202 * C115 -
          (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                C51217 +
            (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                C118) *
               C51162 * C2438 +
           ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C51162 *
               C2437 +
           C33550 * C51162 * C2436) *
              C51202 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C289 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C290 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C33490 * C2585 + C33488 * C2588 + C33491 * C4331 +
              C51378 * C4333) *
                 C118 +
             (C33490 * C2589 + C33488 * C2594 + C33491 * C4334 +
              C51378 * C4337) *
                 C51217) *
                C51162 * C2438) *
               C291) *
              C292 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C290 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C289 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C291) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C51488 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51489 +
           (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                 C118 +
             (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                 C51217) *
                C17433 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
               C51303 * C1415) *
              C51435 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51489 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C51488 -
           (((C33491 * C1657 + C51378 * C1661 + C33490 * C319 + C33488 * C331) *
                 C51217 +
             (C33491 * C1649 + C51378 * C1656 + C33490 * C301 + C33488 * C318) *
                 C118) *
                C17435 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C17434 +
            ((C33740 + C33739) * C51217 + (C33738 + C33737) * C118) * C17433) *
               C51303 * C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C51488 -
           (C37479 * C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51489 +
           (C36549 * C2436 +
            ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
                C2437 +
            ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
                C2438) *
               C1415) *
              C51435 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51489 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C51488 -
           (((C33491 * C4336 + C51378 * C4338 + C33490 * C2591 +
              C33488 * C2595) *
                 C51217 +
             (C33491 * C4332 + C51378 * C4335 + C33490 * C2586 +
              C33488 * C2590) *
                 C118) *
                C51162 * C2438 +
            ((C36539 + C36538) * C51217 + (C36537 + C36536) * C118) * C51162 *
                C2437 +
            C36547 * C2436) *
               C1415) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
            (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
               C17434 +
           C34268 * C17435) *
              C51303 * C51488 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C798 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51444 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C797) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51281) *
               C17433 +
           ((C34479 + C34480) * C798 -
            ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
            (C34481 + C34482) * C51281) *
               C17434 +
           ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
            (C34485 + C34486) * C51281) *
               C17435) *
              C51303 * C51489 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C797 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51444 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C798 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C17433 +
           ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
            (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
             C33488 * C1652) *
                C798 -
            (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
             C33488 * C1659) *
                C51281) *
               C17434 +
           ((C33741 + C33742) * C797 + (C33743 + C33744) * C51444 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C798 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C17435) *
              C51303 * C1415) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C797 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51444 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C798 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
            (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38157 * C2438) *
              C51488 +
          (((C37207 + C37206) * C798 -
            ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C798 -
            ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C798 - (C37462 * C51444 + C37463 * C797) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C51489 +
          (C38157 * C2436 +
           ((C36535 + C36534) * C797 + (C36533 + C36532) * C51444 -
            (C38152 + C38151) * C798 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C797 + (C37476 + C37477) * C51444 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C798 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C1415) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C1180 -
          (C34101 * C17435 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
           ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                C51217 +
            (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                C118) *
               C17433) *
              C51303 * C1181 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C17433 +
           ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
              C51303 * C1182 -
          (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
             C33488 * C1198) *
                C51217 +
            (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
             C33488 * C1192) *
                C118) *
               C17435 +
           ((C33491 * C3355 + C51378 * C3359 + C33490 * C1193 +
             C33488 * C1199) *
                C51217 +
            (C33491 * C3350 + C51378 * C3354 + C33490 * C1187 +
             C33488 * C1194) *
                C118) *
               C17434 +
           ((C33491 * C3353 + C51378 * C3358 + C33490 * C1195 +
             C33488 * C1200) *
                C51217 +
            (C33491 * C3349 + C51378 * C3352 + C33490 * C1188 +
             C33488 * C1196) *
                C118) *
               C17433) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C1109 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51253 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C1109) *
              C1112 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
               C51303 * C1109 -
           (((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C17435 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C17434 +
            C34101 * C17433) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C17433 +
           ((C33525 + C33526) * C483 + (C33527 + C33528) * C480 -
            (C33923 + C33924) * C484 - (C33925 + C33926) * C481 +
            (C33927 + C33928) * C485 + (C33929 + C33930) * C482) *
               C17434 +
           (C33541 * C483 + C33542 * C480 - C34250 * C484 - C34251 * C481 +
            (C33935 + C33936) * C485 + (C33937 + C33938) * C482) *
               C17435) *
              C51303 * C1109 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C484 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C480 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C483) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C481 -
            (C33491 * C4778 + C51378 * C4782 + C33490 * C1299 +
             C33488 * C1303) *
                C485 -
            (C33491 * C4783 + C51378 * C4790 + C33490 * C1304 +
             C33488 * C1311) *
                C482) *
               C17433 +
           ((C34479 + C34480) * C484 -
            ((C33733 + C33734) * C480 + (C33735 + C33736) * C483) +
            (C34481 + C34482) * C481 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C485 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C482) *
               C17434 +
           ((C34483 + C34484) * C484 - (C34085 * C480 + C34086 * C483) +
            (C34485 + C34486) * C481 -
            (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
             C33488 * C1307) *
                C485 -
            (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
             C33488 * C1313) *
                C482) *
               C17435) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C1109 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C1109) *
              C1112 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C1109 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
               C2437 +
           C36549 * C2438) *
              C1180 -
          (C37479 * C2438 +
           ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
               C2437 +
           ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
               C2436) *
              C1181 +
          (C36549 * C2436 +
           ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
               C2437 +
           ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
               C2438) *
              C1182 -
          (((C33491 * C21187 + C51378 * C21188 + C33490 * C3651 +
             C33488 * C3654) *
                C51217 +
            (C33491 * C21185 + C51378 * C21186 + C33490 * C3648 +
             C33488 * C3652) *
                C118) *
               C51162 * C2438 +
           ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51162 *
               C2437 +
           C37479 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C483 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C480 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C484 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C481 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C485 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C482) *
               C51162 * C2436 +
           ((C36524 + C36525) * C483 + (C36526 + C36527) * C480 -
            (C37206 + C37207) * C484 - (C37208 + C37209) * C481 +
            (C37642 + C37643) * C485 + (C37644 + C37645) * C482) *
               C51162 * C2437 +
           (C36542 * C483 + C36543 * C480 - (C37210 + C37211) * C484 -
            (C37212 + C37213) * C481 + (C37646 + C37647) * C485 +
            (C37648 + C37649) * C482) *
               C51162 * C2438) *
              C1109 +
          (((C37207 + C37206) * C484 -
            ((C36527 + C36526) * C480 + (C36525 + C36524) * C483) +
            (C37209 + C37208) * C481 - (C37643 + C37642) * C485 -
            (C37645 + C37644) * C482) *
               C51162 * C2436 +
           ((C37211 + C37210) * C484 -
            ((C36531 + C36530) * C480 + (C36529 + C36528) * C483) +
            (C37213 + C37212) * C481 - (C37647 + C37646) * C485 -
            (C37649 + C37648) * C482) *
               C51162 * C2437 +
           ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
             C51378 * C3815) *
                C484 -
            (C37462 * C480 + C37463 * C483) +
            (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
             C51378 * C3819) *
                C481 -
            (C33491 * C21475 + C51378 * C21476 + C33490 * C3813 +
             C33488 * C3815) *
                C485 -
            (C33491 * C21477 + C51378 * C21478 + C33490 * C3816 +
             C33488 * C3819) *
                C482) *
               C51162 * C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C797 + (C33527 + C33528) * C51444 -
             (C33923 + C33924) * C798 - (C33925 + C33926) * C51281) *
                C17434 +
            C34268 * C17435) *
               C51303 * C1109 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C798 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C51444 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C797) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C798 - (C34085 * C51444 + C34086 * C797) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C51435 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C798 -
             ((C33532 + C33531) * C51444 + (C33530 + C33529) * C797) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C798 - (C33543 * C51444 + C33544 * C797) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C1109 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C797 + (C33730 + C33729) * C51444 -
             (C34484 + C34483) * C798 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C797 + (C34099 + C34100) * C51444 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C798 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C797 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51444 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C798 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C797 + (C36526 + C36527) * C51444 -
             (C37206 + C37207) * C798 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            (C36542 * C797 + C36543 * C51444 - (C37210 + C37211) * C798 -
             (C37212 + C37213) * C51281) *
                C51162 * C2438) *
               C1109 +
           (((C37207 + C37206) * C798 -
             ((C36527 + C36526) * C51444 + (C36525 + C36524) * C797) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C798 -
             ((C36531 + C36530) * C51444 + (C36529 + C36528) * C797) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C33490 * C3349 + C33488 * C3352 + C33491 * C3813 +
              C51378 * C3815) *
                 C798 -
             (C37462 * C51444 + C37463 * C797) +
             (C33490 * C3353 + C33488 * C3358 + C33491 * C3816 +
              C51378 * C3819) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51435 +
          ((((C33924 + C33923) * C798 -
             ((C33528 + C33527) * C51444 + (C33526 + C33525) * C797) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C798 -
             ((C33733 + C33734) * C51444 + (C33735 + C33736) * C797) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C798 - (C36522 * C51444 + C36523 * C797) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C1109 +
           (((C33736 + C33735) * C797 + (C33734 + C33733) * C51444 -
             (C34480 + C34479) * C798 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C797 + (C33739 + C33740) * C51444 -
             (C37215 + C37214) * C798 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C797 + (C36538 + C36539) * C51444 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C798 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
            C33549 * C17435) *
               C51303 * C1109 -
           (C34101 * C17435 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51217 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C118) *
                C17433) *
               C51303 * C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C17433 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C17434 +
            ((C34097 + C34098) * C118 + (C34099 + C34100) * C51217) * C17435) *
               C51303 * C51253 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51217 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C17433) *
               C51303 * C1109) *
              C1112 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51217) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51217) * C17435) *
               C51303 * C1109 -
           (((C33491 * C975 + C51378 * C980 + C33490 * C321 + C33488 * C332) *
                 C51217 +
             (C33491 * C965 + C51378 * C974 + C33490 * C302 + C33488 * C320) *
                 C118) *
                C17435 +
            ((C34100 + C34099) * C51217 + (C34098 + C34097) * C118) * C17434 +
            C34101 * C17433) *
               C51303 * C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51217) * C17434 +
           C33549 * C17435) *
              C51303 * C1180 -
          (C34101 * C17435 +
           ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C17434 +
           ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                C51217 +
            (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                C118) *
               C17433) *
              C51303 * C1181 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C118 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C51217) *
               C17433 +
           ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C17434 +
           ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C17435) *
              C51303 * C1182 -
          (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
             C33488 * C1198) *
                C51217 +
            (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
             C33488 * C1192) *
                C118) *
               C17435 +
           ((C33491 * C3355 + C51378 * C3359 + C33490 * C1193 +
             C33488 * C1199) *
                C51217 +
            (C33491 * C3350 + C51378 * C3354 + C33490 * C1187 +
             C33488 * C1194) *
                C118) *
               C17434 +
           ((C33491 * C3353 + C51378 * C3358 + C33490 * C1195 +
             C33488 * C1200) *
                C51217 +
            (C33491 * C3349 + C51378 * C3352 + C33490 * C1188 +
             C33488 * C1196) *
                C118) *
               C17433) *
              C51303 * C1183) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C51217) *
                C51162 * C2436 +
            ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
                C2437 +
            C36549 * C2438) *
               C1109 -
           (((C36532 + C36533) * C51217 + (C36534 + C36535) * C118) * C51162 *
                C2438 +
            ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
                C2437 +
            ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
                C2436) *
               C51253) *
              C1111 +
          ((((C33736 + C33735) * C118 + (C33734 + C33733) * C51217) * C51162 *
                C2436 +
            ((C33737 + C33738) * C118 + (C33739 + C33740) * C51217) * C51162 *
                C2437 +
            ((C36536 + C36537) * C118 + (C36538 + C36539) * C51217) * C51162 *
                C2438) *
               C51253 -
           (C36547 * C2438 +
            ((C33733 + C33734) * C51217 + (C33735 + C33736) * C118) * C51162 *
                C2437 +
            ((C33528 + C33527) * C51217 + (C33526 + C33525) * C118) * C51162 *
                C2436) *
               C1109) *
              C1112 +
          ((C33549 * C51162 * C2436 +
            ((C33732 + C33731) * C118 + (C33730 + C33729) * C51217) * C51162 *
                C2437 +
            ((C33741 + C33742) * C118 + (C33743 + C33744) * C51217) * C51162 *
                C2438) *
               C1109 -
           (((C33491 * C3357 + C51378 * C3360 + C33490 * C1191 +
              C33488 * C1198) *
                 C51217 +
             (C33491 * C3351 + C51378 * C3356 + C33490 * C1186 +
              C33488 * C1192) *
                 C118) *
                C51162 * C2438 +
            ((C33744 + C33743) * C51217 + (C33742 + C33741) * C118) * C51162 *
                C2437 +
            C34101 * C51162 * C2436) *
               C51253) *
              C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51217) *
               C51162 * C2436 +
           ((C36524 + C36525) * C118 + (C36526 + C36527) * C51217) * C51162 *
               C2437 +
           C36549 * C2438) *
              C1180 -
          (C37479 * C2438 +
           ((C36531 + C36530) * C51217 + (C36529 + C36528) * C118) * C51162 *
               C2437 +
           ((C36527 + C36526) * C51217 + (C36525 + C36524) * C118) * C51162 *
               C2436) *
              C1181 +
          (C36549 * C2436 +
           ((C36535 + C36534) * C118 + (C36533 + C36532) * C51217) * C51162 *
               C2437 +
           ((C37474 + C37475) * C118 + (C37476 + C37477) * C51217) * C51162 *
               C2438) *
              C1182 -
          (((C33491 * C21187 + C51378 * C21188 + C33490 * C3651 +
             C33488 * C3654) *
                C51217 +
            (C33491 * C21185 + C51378 * C21186 + C33490 * C3648 +
             C33488 * C3652) *
                C118) *
               C51162 * C2438 +
           ((C37477 + C37476) * C51217 + (C37475 + C37474) * C118) * C51162 *
               C2437 +
           C37479 * C2436) *
              C1183) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C17433 +
            ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
             (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
                C17434 +
            C35515 * C17435) *
               C51303 * C51443 +
           (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                 C1763 -
             ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                  C1760 +
              (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                  C1762) +
             (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                 C51281) *
                C17433 +
            ((C34479 + C34480) * C1763 -
             ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
             (C34481 + C34482) * C51281) *
                C17434 +
            ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
             (C34485 + C34486) * C51281) *
                C17435) *
               C51303 * C51253) *
              C51435 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C17433 +
            ((C33932 + C33931) * C1763 -
             ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
             (C33934 + C33933) * C51281) *
                C17434 +
            ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
             (C34265 + C34266) * C51281) *
                C17435) *
               C51303 * C51443 +
           (((C33736 + C33735) * C1762 + (C33734 + C33733) * C1760 -
             (C34480 + C34479) * C1763 - (C34482 + C34481) * C51281) *
                C17433 +
            ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
             (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
                C17434 +
            ((C34097 + C34098) * C1762 + (C34099 + C34100) * C1760 -
             (C33491 * C1302 + C51378 * C1309 + C33490 * C964 + C33488 * C972) *
                 C1763 -
             (C33491 * C1310 + C51378 * C1314 + C33490 * C973 + C33488 * C979) *
                 C51281) *
                C17435) *
               C51303 * C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                 C1762 +
             (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                 C1760 -
             (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                 C1763 -
             (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                 C51281) *
                C51162 * C2436 +
            ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
             (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
                C51162 * C2437 +
            C38457 * C2438) *
               C51443 +
           (((C37207 + C37206) * C1763 -
             ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
             (C37209 + C37208) * C51281) *
                C51162 * C2436 +
            ((C37211 + C37210) * C1763 -
             ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
             (C37213 + C37212) * C51281) *
                C51162 * C2437 +
            ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
             (C38153 + C38154) * C51281) *
                C51162 * C2438) *
               C51253) *
              C51435 +
          ((((C33924 + C33923) * C1763 -
             ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
             (C33926 + C33925) * C51281) *
                C51162 * C2436 +
            ((C34479 + C34480) * C1763 -
             ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
             (C34481 + C34482) * C51281) *
                C51162 * C2437 +
            ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
             (C37216 + C37217) * C51281) *
                C51162 * C2438) *
               C51443 +
           (((C33736 + C33735) * C1762 + (C33734 + C33733) * C1760 -
             (C34480 + C34479) * C1763 - (C34482 + C34481) * C51281) *
                C51162 * C2436 +
            ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
             (C37215 + C37214) * C1763 - (C37217 + C37216) * C51281) *
                C51162 * C2437 +
            ((C36536 + C36537) * C1762 + (C36538 + C36539) * C1760 -
             (C33491 * C3814 + C51378 * C3817 + C33490 * C3350 +
              C33488 * C3354) *
                 C1763 -
             (C33491 * C3818 + C51378 * C3820 + C33490 * C3355 +
              C33488 * C3359) *
                 C51281) *
                C51162 * C2438) *
               C51253) *
              C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C17433 +
           ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
            (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
            (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
               C17434 +
           (C33541 * C2217 + C33542 * C51490 - C34250 * C2218 -
            C34251 * C51491 + (C33935 + C33936) * C2219 +
            (C33937 + C33938) * C2216) *
               C17435) *
              C51303 * C51443 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C2218 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C51490 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C2217) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51491 -
            (C33491 * C4778 + C51378 * C4782 + C33490 * C1299 +
             C33488 * C1303) *
                C2219 -
            (C33491 * C4783 + C51378 * C4790 + C33490 * C1304 +
             C33488 * C1311) *
                C2216) *
               C17433 +
           ((C34479 + C34480) * C2218 -
            ((C33733 + C33734) * C51490 + (C33735 + C33736) * C2217) +
            (C34481 + C34482) * C51491 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C2219 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C2216) *
               C17434 +
           ((C34483 + C34484) * C2218 - (C34085 * C51490 + C34086 * C2217) +
            (C34485 + C34486) * C51491 -
            (C33491 * C6369 + C51378 * C6370 + C33490 * C1301 +
             C33488 * C1307) *
                C2219 -
            (C33491 * C6371 + C51378 * C6372 + C33490 * C1308 +
             C33488 * C1313) *
                C2216) *
               C17435) *
              C51303 * C51253) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C2436 +
           ((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
            (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
            (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
               C51162 * C2437 +
           (C36542 * C2217 + C36543 * C51490 - C38138 * C2218 -
            C38139 * C51491 + (C37646 + C37647) * C2219 +
            (C37648 + C37649) * C2216) *
               C51162 * C2438) *
              C51443 +
          (((C37207 + C37206) * C2218 -
            ((C36527 + C36526) * C51490 + (C36525 + C36524) * C2217) +
            (C37209 + C37208) * C51491 - (C37643 + C37642) * C2219 -
            (C37645 + C37644) * C2216) *
               C51162 * C2436 +
           ((C37211 + C37210) * C2218 -
            ((C36531 + C36530) * C51490 + (C36529 + C36528) * C2217) +
            (C37213 + C37212) * C51491 - (C37647 + C37646) * C2219 -
            (C37649 + C37648) * C2216) *
               C51162 * C2437 +
           ((C38151 + C38152) * C2218 - (C37462 * C51490 + C37463 * C2217) +
            (C38153 + C38154) * C51491 -
            (C33491 * C21475 + C51378 * C21476 + C33490 * C3813 +
             C33488 * C3815) *
                C2219 -
            (C33491 * C21477 + C51378 * C21478 + C33490 * C3816 +
             C33488 * C3819) *
                C2216) *
               C51162 * C2438) *
              C51253) *
         C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C289 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C1763 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C1760 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C1762) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51281) *
               C17433 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C17434 +
           ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
            (C34485 + C34486) * C51281) *
               C17435) *
              C51303 * C290 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C1762 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C1760 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C1763 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C17433 +
           ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
            (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
             C33488 * C1652) *
                C1763 -
            (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
             C33488 * C1659) *
                C51281) *
               C17434 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C17435) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C17433 +
           ((C33932 + C33931) * C1763 -
            ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
            (C33934 + C33933) * C51281) *
               C17434 +
           ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
            (C34265 + C34266) * C51281) *
               C17435) *
              C51303 * C51202 * C1112 +
          (C35515 * C17433 +
           ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
            (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
               C17434 +
           ((C33537 + C33538) * C1762 + (C33539 + C33540) * C1760 -
            (C33491 * C495 + C51378 * C514 + C33490 * C494 + C33488 * C512) *
                C1763 -
            (C33491 * C515 + C51378 * C525 + C33490 * C513 + C33488 * C524) *
                C51281) *
               C17435) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
               C1954 +
           (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
               C1950 -
           (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
               C1955 -
           (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
               C1951 +
           (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
               C1956 +
           (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
               C1952 -
           (C33491 * C5799 + C51378 * C5802 + C33490 * C1958 + C33488 * C1962) *
               C1957 -
           (C33491 * C5803 + C51378 * C5808 + C33490 * C1963 + C33488 * C1970) *
               C1953) *
              C17433 +
          ((C33525 + C33526) * C1954 + (C33527 + C33528) * C1950 -
           (C33923 + C33924) * C1955 - (C33925 + C33926) * C1951 +
           (C33927 + C33928) * C1956 + (C33929 + C33930) * C1952 -
           (C33491 * C5800 + C51378 * C5804 + C33490 * C1959 + C33488 * C1964) *
               C1957 -
           (C33491 * C5805 + C51378 * C5809 + C33490 * C1965 + C33488 * C1971) *
               C1953) *
              C17434 +
          (C33541 * C1954 + C33542 * C1950 - C34250 * C1955 - C34251 * C1951 +
           (C33935 + C33936) * C1956 + (C33937 + C33938) * C1952 -
           (C33491 * C5801 + C51378 * C5806 + C33490 * C1960 + C33488 * C1966) *
               C1957 -
           (C33491 * C5807 + C51378 * C5810 + C33490 * C1967 + C33488 * C1972) *
               C1953) *
              C17435) *
         C51303 * C51202 * C51185) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           (C36542 * C1762 + C36543 * C1760 - C38138 * C1763 -
            C38139 * C51281) *
               C51162 * C2438) *
              C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
            (C37216 + C37217) * C51281) *
               C51162 * C2438) *
              C51202 * C1112 +
          (C35515 * C51162 * C2436 +
           ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
            (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38457 * C2438) *
              C289 +
          (((C37207 + C37206) * C1763 -
            ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C1763 -
            ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C290 +
          (C38457 * C2436 +
           ((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
            (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C1762 + (C37476 + C37477) * C1760 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C1763 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
               C1954 +
           (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
               C1950 -
           (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
               C1955 -
           (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
               C1951 +
           (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
               C1956 +
           (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
               C1952 -
           (C33491 * C5799 + C51378 * C5802 + C33490 * C1958 + C33488 * C1962) *
               C1957 -
           (C33491 * C5803 + C51378 * C5808 + C33490 * C1963 + C33488 * C1970) *
               C1953) *
              C51162 * C2436 +
          ((C36524 + C36525) * C1954 + (C36526 + C36527) * C1950 -
           (C37206 + C37207) * C1955 - (C37208 + C37209) * C1951 +
           (C37642 + C37643) * C1956 + (C37644 + C37645) * C1952 -
           (C33491 * C6781 + C51378 * C6783 + C33490 * C4778 + C33488 * C4782) *
               C1957 -
           (C33491 * C6784 + C51378 * C6787 + C33490 * C4783 + C33488 * C4790) *
               C1953) *
              C51162 * C2437 +
          (C36542 * C1954 + C36543 * C1950 - C38138 * C1955 - C38139 * C1951 +
           (C37646 + C37647) * C1956 + (C37648 + C37649) * C1952 -
           (C33491 * C23149 + C51378 * C23150 + C33490 * C4780 +
            C33488 * C4786) *
               C1957 -
           (C33491 * C23151 + C51378 * C23152 + C33490 * C4787 +
            C33488 * C4792) *
               C1953) *
              C51162 * C2438) *
         C51202 * C51185) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C17433 +
           ((C33525 + C33526) * C2217 + (C33527 + C33528) * C51490 -
            (C33923 + C33924) * C2218 - (C33925 + C33926) * C51491 +
            (C33927 + C33928) * C2219 + (C33929 + C33930) * C2216) *
               C17434 +
           (C33541 * C2217 + C33542 * C51490 - C34250 * C2218 -
            C34251 * C51491 + (C33935 + C33936) * C2219 +
            (C33937 + C33938) * C2216) *
               C17435) *
              C51303 * C51202 * C51435 +
          (((C33924 + C33923) * C2218 -
            ((C33528 + C33527) * C51490 + (C33526 + C33525) * C2217) +
            (C33926 + C33925) * C51491 - (C33928 + C33927) * C2219 -
            (C33930 + C33929) * C2216) *
               C17433 +
           ((C33932 + C33931) * C2218 -
            ((C33532 + C33531) * C51490 + (C33530 + C33529) * C2217) +
            (C33934 + C33933) * C51491 - (C33936 + C33935) * C2219 -
            (C33938 + C33937) * C2216) *
               C17434 +
           ((C34263 + C34264) * C2218 - (C33543 * C51490 + C33544 * C2217) +
            (C34265 + C34266) * C51491 -
            (C33491 * C1961 + C51378 * C1968 + C33490 * C493 + C33488 * C510) *
                C2219 -
            (C33491 * C1969 + C51378 * C1973 + C33490 * C511 + C33488 * C523) *
                C2216) *
               C17435) *
              C51303 * C51202 * C51190)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C2217 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C51490 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C2218 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51491 +
            (C33490 * C487 + C33488 * C498 + C33491 * C1958 + C51378 * C1962) *
                C2219 +
            (C33490 * C499 + C33488 * C517 + C33491 * C1963 + C51378 * C1970) *
                C2216) *
               C51162 * C2436 +
           ((C36524 + C36525) * C2217 + (C36526 + C36527) * C51490 -
            (C37206 + C37207) * C2218 - (C37208 + C37209) * C51491 +
            (C37642 + C37643) * C2219 + (C37644 + C37645) * C2216) *
               C51162 * C2437 +
           (C36542 * C2217 + C36543 * C51490 - C38138 * C2218 -
            C38139 * C51491 + (C37646 + C37647) * C2219 +
            (C37648 + C37649) * C2216) *
               C51162 * C2438) *
              C51202 * C51435 +
          (((C33924 + C33923) * C2218 -
            ((C33528 + C33527) * C51490 + (C33526 + C33525) * C2217) +
            (C33926 + C33925) * C51491 - (C33928 + C33927) * C2219 -
            (C33930 + C33929) * C2216) *
               C51162 * C2436 +
           ((C34479 + C34480) * C2218 -
            ((C33733 + C33734) * C51490 + (C33735 + C33736) * C2217) +
            (C34481 + C34482) * C51491 -
            (C33491 * C4779 + C51378 * C4784 + C33490 * C1300 +
             C33488 * C1305) *
                C2219 -
            (C33491 * C4785 + C51378 * C4791 + C33490 * C1306 +
             C33488 * C1312) *
                C2216) *
               C51162 * C2437 +
           ((C37214 + C37215) * C2218 - (C36522 * C51490 + C36523 * C2217) +
            (C37216 + C37217) * C51491 -
            (C33491 * C4781 + C51378 * C4788 + C33490 * C2806 +
             C33488 * C2810) *
                C2219 -
            (C33491 * C4789 + C51378 * C4793 + C33490 * C2811 +
             C33488 * C2815) *
                C2216) *
               C51162 * C2438) *
              C51202 * C51190)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C17433 +
           ((C33932 + C33931) * C1763 -
            ((C33532 + C33531) * C1760 + (C33530 + C33529) * C1762) +
            (C33934 + C33933) * C51281) *
               C17434 +
           ((C34263 + C34264) * C1763 - (C33543 * C1760 + C33544 * C1762) +
            (C34265 + C34266) * C51281) *
               C17435) *
              C51303 * C51202 * C1112 +
          (C35515 * C17433 +
           ((C33536 + C33535) * C1762 + (C33534 + C33533) * C1760 -
            (C34264 + C34263) * C1763 - (C34266 + C34265) * C51281) *
               C17434 +
           ((C33537 + C33538) * C1762 + (C33539 + C33540) * C1760 -
            (C33491 * C495 + C51378 * C514 + C33490 * C494 + C33488 * C512) *
                C1763 -
            (C33491 * C515 + C51378 * C525 + C33490 * C513 + C33488 * C524) *
                C51281) *
               C17435) *
              C51303 * C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C17433 +
           ((C33525 + C33526) * C1762 + (C33527 + C33528) * C1760 -
            (C33923 + C33924) * C1763 - (C33925 + C33926) * C51281) *
               C17434 +
           C35515 * C17435) *
              C51303 * C289 +
          (((C33490 * C961 + C33488 * C966 + C33491 * C1299 + C51378 * C1303) *
                C1763 -
            ((C33491 * C967 + C51378 * C976 + C33490 * C310 + C33488 * C327) *
                 C1760 +
             (C33491 * C961 + C51378 * C966 + C33490 * C297 + C33488 * C311) *
                 C1762) +
            (C33490 * C967 + C33488 * C976 + C33491 * C1304 + C51378 * C1311) *
                C51281) *
               C17433 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C17434 +
           ((C34483 + C34484) * C1763 - (C34085 * C1760 + C34086 * C1762) +
            (C34485 + C34486) * C51281) *
               C17435) *
              C51303 * C290 +
          (((C33490 * C298 + C33488 * C312 + C33491 * C1646 + C51378 * C1650) *
                C1762 +
            (C33490 * C313 + C33488 * C328 + C33491 * C1651 + C51378 * C1658) *
                C1760 -
            (C33491 * C2805 + C51378 * C2808 + C33490 * C1646 +
             C33488 * C1650) *
                C1763 -
            (C33491 * C2809 + C51378 * C2814 + C33490 * C1651 +
             C33488 * C1658) *
                C51281) *
               C17433 +
           ((C33737 + C33738) * C1762 + (C33739 + C33740) * C1760 -
            (C33491 * C2806 + C51378 * C2810 + C33490 * C1647 +
             C33488 * C1652) *
                C1763 -
            (C33491 * C2811 + C51378 * C2815 + C33490 * C1653 +
             C33488 * C1659) *
                C51281) *
               C17434 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C17435) *
              C51303 * C291) *
         C51185) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           (C36542 * C1762 + C36543 * C1760 - C38138 * C1763 -
            C38139 * C51281) *
               C51162 * C2438) *
              C51202 * C1111 +
          (((C33924 + C33923) * C1763 -
            ((C33528 + C33527) * C1760 + (C33526 + C33525) * C1762) +
            (C33926 + C33925) * C51281) *
               C51162 * C2436 +
           ((C34479 + C34480) * C1763 -
            ((C33733 + C33734) * C1760 + (C33735 + C33736) * C1762) +
            (C34481 + C34482) * C51281) *
               C51162 * C2437 +
           ((C37214 + C37215) * C1763 - (C36522 * C1760 + C36523 * C1762) +
            (C37216 + C37217) * C51281) *
               C51162 * C2438) *
              C51202 * C1112 +
          (C35515 * C51162 * C2436 +
           ((C33732 + C33731) * C1762 + (C33730 + C33729) * C1760 -
            (C34484 + C34483) * C1763 - (C34486 + C34485) * C51281) *
               C51162 * C2437 +
           ((C33741 + C33742) * C1762 + (C33743 + C33744) * C1760 -
            (C33491 * C2807 + C51378 * C2812 + C33490 * C1648 +
             C33488 * C1654) *
                C1763 -
            (C33491 * C2813 + C51378 * C2816 + C33490 * C1655 +
             C33488 * C1660) *
                C51281) *
               C51162 * C2438) *
              C51202 * C1113)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C486 + C51378 * C496) *
                C1762 +
            (C33490 * C127 + C33488 * C140 + C33491 * C497 + C51378 * C516) *
                C1760 -
            (C33491 * C487 + C51378 * C498 + C33490 * C486 + C33488 * C496) *
                C1763 -
            (C33491 * C499 + C51378 * C517 + C33490 * C497 + C33488 * C516) *
                C51281) *
               C51162 * C2436 +
           ((C36524 + C36525) * C1762 + (C36526 + C36527) * C1760 -
            (C37206 + C37207) * C1763 - (C37208 + C37209) * C51281) *
               C51162 * C2437 +
           C38457 * C2438) *
              C289 +
          (((C37207 + C37206) * C1763 -
            ((C36527 + C36526) * C1760 + (C36525 + C36524) * C1762) +
            (C37209 + C37208) * C51281) *
               C51162 * C2436 +
           ((C37211 + C37210) * C1763 -
            ((C36531 + C36530) * C1760 + (C36529 + C36528) * C1762) +
            (C37213 + C37212) * C51281) *
               C51162 * C2437 +
           ((C38151 + C38152) * C1763 - (C37462 * C1760 + C37463 * C1762) +
            (C38153 + C38154) * C51281) *
               C51162 * C2438) *
              C290 +
          (C38457 * C2436 +
           ((C36535 + C36534) * C1762 + (C36533 + C36532) * C1760 -
            (C38152 + C38151) * C1763 - (C38154 + C38153) * C51281) *
               C51162 * C2437 +
           ((C37474 + C37475) * C1762 + (C37476 + C37477) * C1760 -
            (C33491 * C20843 + C51378 * C20844 + C33490 * C4331 +
             C33488 * C4333) *
                C1763 -
            (C33491 * C20845 + C51378 * C20846 + C33490 * C4334 +
             C33488 * C4337) *
                C51281) *
               C51162 * C2438) *
              C291) *
         C51185) /
            (p * q * std::sqrt(p + q));
}
