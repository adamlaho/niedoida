/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdsd_AA.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1202_11(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C91700 = 0 * ae;
    const double C91699 = ae * be;
    const double C91698 = 0 * be;
    const double C91697 = xA - xB;
    const double C91696 = ae + be;
    const double C91695 = 0 * be;
    const double C91760 = yA - yB;
    const double C91763 = zA - zB;
    const double C91778 = 0 * be;
    const double C91804 = 0 * be;
    const double C91885 = 0 * ae;
    const double C91881 = 0 * be;
    const double C91956 = 0 * ae;
    const double C91952 = 0 * be;
    const double C92004 = p + q;
    const double C92003 = p * q;
    const double C92009 = xP - xQ;
    const double C92008 = bs[2];
    const double C92016 = std::pow(ae, 2);
    const double C92014 = bs[3];
    const double C92027 = bs[4];
    const double C92048 = bs[5];
    const double C92081 = bs[6];
    const double C92124 = yP - yQ;
    const double C92167 = zP - zQ;
    const double C108 = bs[0];
    const double C93604 = ce + de;
    const double C93603 = ce * de;
    const double C93602 = xC - xD;
    const double C93616 = yC - yD;
    const double C93630 = zC - zD;
    const double C91706 = 2 * C91699;
    const double C91703 = -2 * C91698;
    const double C91705 = C91699 * C91697;
    const double C91704 = C91697 * C91698;
    const double C93578 = C91697 * be;
    const double C93577 = C91697 * ae;
    const double C93576 = std::pow(C91697, 2);
    const double C91707 = C91700 / C91696;
    const double C91702 = 2 * C91696;
    const double C91701 = std::pow(C91696, 2);
    const double C91779 = C91699 * C91760;
    const double C93658 = std::pow(C91760, 2);
    const double C93707 = C91760 * be;
    const double C93706 = C91760 * ae;
    const double C91805 = C91699 * C91763;
    const double C93669 = std::pow(C91763, 2);
    const double C93733 = C91763 * be;
    const double C93732 = C91763 * ae;
    const double C91882 = C91760 * C91778;
    const double C91906 = -2 * C91778;
    const double C91953 = C91763 * C91804;
    const double C91977 = -2 * C91804;
    const double C91890 = C91885 / C91696;
    const double C91961 = C91956 / C91696;
    const double C92005 = 2 * C92003;
    const double C92017 = C92009 * ae;
    const double C92013 = std::pow(C92009, 2);
    const double C92127 = C92124 * ae;
    const double C92126 = C92009 * C92124;
    const double C92211 = C92124 * C92009;
    const double C92232 = std::pow(C92124, 2);
    const double C92170 = C92167 * ae;
    const double C92169 = C92009 * C92167;
    const double C92253 = C92124 * C92167;
    const double C92269 = C92167 * C92009;
    const double C92290 = C92167 * C92124;
    const double C92306 = std::pow(C92167, 2);
    const double C93812 = 2 * C93604;
    const double C93811 = std::pow(C93604, 2);
    const double C93605 = std::pow(C93602, 2);
    const double C93810 = C93602 * ce;
    const double C93617 = std::pow(C93616, 2);
    const double C93813 = C93616 * ce;
    const double C93631 = std::pow(C93630, 2);
    const double C93814 = C93630 * ce;
    const double C91709 = ae * C91703;
    const double C91710 = C91704 / C91696;
    const double C93579 = C93576 * C91699;
    const double C93586 = std::pow(C91702, -1);
    const double C93816 = std::pow(C91702, -2);
    const double C91711 = 2 * C91701;
    const double C91708 = C91701 * C91702;
    const double C93809 = 4 * C91701;
    const double C93659 = C93658 * C91699;
    const double C93670 = C93669 * C91699;
    const double C91887 = C91882 / C91696;
    const double C91909 = ae * C91906;
    const double C91958 = C91953 / C91696;
    const double C91980 = ae * C91977;
    const double C92007 = C92005 / C92004;
    const double C120 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C92005 / C92004, 2) -
          (bs[1] * C92005) / C92004) *
         std::pow(ae, 2)) /
        C91701;
    const double C109 = -(C92009 * bs[1] * C92005) / C92004;
    const double C807 = -(C92124 * bs[1] * C92005) / C92004;
    const double C1388 = -(C92167 * bs[1] * C92005) / C92004;
    const double C92019 = C92014 * C92017;
    const double C92030 = C92027 * C92017;
    const double C92053 = C92048 * C92017;
    const double C92089 = C92081 * C92017;
    const double C114 = (-(bs[1] * C92017 * C92005) / C92004) / C91696;
    const double C92029 = C92013 * C92027;
    const double C92052 = C92013 * C92048;
    const double C92088 = C92013 * C92081;
    const double C92129 = C92014 * C92127;
    const double C92133 = C92027 * C92127;
    const double C92140 = C92048 * C92127;
    const double C92151 = C92081 * C92127;
    const double C189 = (-(bs[1] * C92127 * C92005) / C92004) / C91696;
    const double C92128 = C92126 * C92016;
    const double C92212 = C92211 * C92016;
    const double C92234 = C92232 * C92027;
    const double C92239 = C92232 * C92048;
    const double C92244 = C92232 * C92081;
    const double C92172 = C92014 * C92170;
    const double C92176 = C92027 * C92170;
    const double C92183 = C92048 * C92170;
    const double C92194 = C92081 * C92170;
    const double C276 = (-(bs[1] * C92170 * C92005) / C92004) / C91696;
    const double C92171 = C92169 * C92016;
    const double C92254 = C92253 * C92016;
    const double C92270 = C92269 * C92016;
    const double C92291 = C92290 * C92016;
    const double C92308 = C92306 * C92027;
    const double C92313 = C92306 * C92048;
    const double C92318 = C92306 * C92081;
    const double C93833 = std::pow(C93812, -2);
    const double C93831 = std::pow(C93812, -1);
    const double C93606 = C93605 * C93603;
    const double C93618 = C93617 * C93603;
    const double C93632 = C93631 * C93603;
    const double C91713 = 0 - C91710;
    const double C93580 = C93579 / C91696;
    const double C91717 = C91698 / C91711;
    const double C91714 = C91695 / C91711;
    const double C91884 = C91778 / C91711;
    const double C91888 = C91881 / C91711;
    const double C91955 = C91804 / C91711;
    const double C91959 = C91952 / C91711;
    const double C93660 = C93659 / C91696;
    const double C93671 = C93670 / C91696;
    const double C91891 = 0 - C91887;
    const double C91962 = 0 - C91958;
    const double C92010 = std::pow(C92007, 2);
    const double C92015 = -C92007;
    const double C92028 = std::pow(C92007, 4);
    const double C92082 = std::pow(C92007, 6);
    const double C92132 = C92027 * C92128;
    const double C92139 = C92048 * C92128;
    const double C92150 = C92081 * C92128;
    const double C92214 = C92027 * C92212;
    const double C92217 = C92048 * C92212;
    const double C92223 = C92081 * C92212;
    const double C92175 = C92027 * C92171;
    const double C92182 = C92048 * C92171;
    const double C92193 = C92081 * C92171;
    const double C92256 = C92027 * C92254;
    const double C92259 = C92048 * C92254;
    const double C92262 = C92081 * C92254;
    const double C92272 = C92027 * C92270;
    const double C92275 = C92048 * C92270;
    const double C92281 = C92081 * C92270;
    const double C92293 = C92027 * C92291;
    const double C92296 = C92048 * C92291;
    const double C92299 = C92081 * C92291;
    const double C93607 = C93606 / C93604;
    const double C93619 = C93618 / C93604;
    const double C93633 = C93632 / C93604;
    const double C91719 = C91713 * ae;
    const double C93581 = -C93580;
    const double C93661 = -C93660;
    const double C93672 = -C93671;
    const double C91894 = C91891 * ae;
    const double C91965 = C91962 * ae;
    const double C92012 = C92008 * C92010;
    const double C121 = (2 * ae * C92010 * C92008 * C92009 * ae +
                         C92009 *
                             (C92008 * C92010 + std::pow(C92009, 2) * bs[3] *
                                                    std::pow(-C92007, 3)) *
                             std::pow(ae, 2)) /
                        C91701;
    const double C195 =
        (C92010 * C92008 * C92009 * (yP - yQ) * C92016) / C91701;
    const double C282 =
        (C92010 * C92008 * C92009 * (zP - zQ) * C92016) / C91701;
    const double C362 = (C92010 * C92008 * C92124 * C92009 * C92016) / C91701;
    const double C419 =
        ((std::pow(C92124, 2) * C92008 * C92010 - (bs[1] * C92005) / C92004) *
         C92016) /
        C91701;
    const double C501 = (C92010 * C92008 * C92124 * C92167 * C92016) / C91701;
    const double C579 = (C92010 * C92008 * C92167 * C92009 * C92016) / C91701;
    const double C635 = (C92010 * C92008 * C92167 * C92124 * C92016) / C91701;
    const double C714 =
        ((std::pow(C92167, 2) * C92008 * C92010 - (bs[1] * C92005) / C92004) *
         C92016) /
        C91701;
    const double C115 = (C92009 * C92010 * C92008 * C92017) / C91696 -
                        (ae * bs[1] * C92005) / (C92004 * C91696);
    const double C190 = (C92009 * C92010 * C92008 * C92127) / C91696;
    const double C277 = (C92009 * C92010 * C92008 * C92170) / C91696;
    const double C815 = (C92124 * C92010 * C92008 * C92017) / C91696;
    const double C889 = (C92124 * C92010 * C92008 * C92127) / C91696 -
                        (ae * bs[1] * C92005) / (C92004 * C91696);
    const double C955 = (C92124 * C92010 * C92008 * C92170) / C91696;
    const double C1396 = (C92167 * C92010 * C92008 * C92017) / C91696;
    const double C1470 = (C92167 * C92010 * C92008 * C92127) / C91696;
    const double C1536 = (C92167 * C92010 * C92008 * C92170) / C91696 -
                         (ae * bs[1] * C92005) / (C92004 * C91696);
    const double C92018 = std::pow(C92015, 3);
    const double C92049 = std::pow(C92015, 5);
    const double C92034 = C92028 * C92030;
    const double C92033 = C92029 * C92028;
    const double C92047 = C92027 * C92028;
    const double C92135 = C92028 * C92133;
    const double C92178 = C92028 * C92176;
    const double C92235 = C92234 * C92028;
    const double C92309 = C92308 * C92028;
    const double C92094 = C92082 * C92089;
    const double C92093 = C92088 * C92082;
    const double C92155 = C92082 * C92151;
    const double C92198 = C92082 * C92194;
    const double C92245 = C92244 * C92082;
    const double C92319 = C92318 * C92082;
    const double C92134 = C92028 * C92132;
    const double C92153 = C92082 * C92150;
    const double C92215 = C92028 * C92214;
    const double C92224 = C92082 * C92223;
    const double C92177 = C92028 * C92175;
    const double C92196 = C92082 * C92193;
    const double C92257 = C92028 * C92256;
    const double C92263 = C92082 * C92262;
    const double C92273 = C92028 * C92272;
    const double C92282 = C92082 * C92281;
    const double C92294 = C92028 * C92293;
    const double C92300 = C92082 * C92299;
    const double C93608 = -C93607;
    const double C93620 = -C93619;
    const double C93634 = -C93633;
    const double C91723 = C91719 / C91696;
    const double C93582 = std::exp(C93581);
    const double C93662 = std::exp(C93661);
    const double C93673 = std::exp(C93672);
    const double C91895 = C91894 / C91696;
    const double C91966 = C91965 / C91696;
    const double C92020 = C92012 * ae;
    const double C110 = C92012 * C92013 - (bs[1] * C92005) / C92004;
    const double C806 = C92124 * C92009 * C92012;
    const double C808 = C92012 * C92232 - (bs[1] * C92005) / C92004;
    const double C1387 = C92167 * C92009 * C92012;
    const double C1389 = C92012 * C92306 - (bs[1] * C92005) / C92004;
    const double C3409 = C92167 * C92124 * C92012;
    const double C92021 = C92018 * C92019;
    const double C92026 = C92014 * C92018;
    const double C92130 = C92018 * C92129;
    const double C92173 = C92018 * C92172;
    const double C196 = (ae * C92010 * C92008 * C92124 * ae +
                         C92009 * C92018 * C92014 * C92009 * C92124 * C92016) /
                        C91701;
    const double C283 = (ae * C92010 * C92008 * C92167 * ae +
                         C92009 * C92018 * C92014 * C92009 * C92167 * C92016) /
                        C91701;
    const double C363 = (ae * C92010 * C92008 * C92127 +
                         C92009 * C92018 * C92014 * C92124 * C92009 * C92016) /
                        C91701;
    const double C420 =
        (C92009 * (C92012 + std::pow(C92124, 2) * C92014 * C92018) * C92016) /
        C91701;
    const double C502 =
        (C92009 * C92018 * C92014 * C92124 * C92167 * C92016) / C91701;
    const double C503 =
        (C92018 * C92014 * C92254 + C92028 * C92027 * C92254 * C92013) / C91701;
    const double C580 = (ae * C92010 * C92008 * C92170 +
                         C92009 * C92018 * C92014 * C92167 * C92009 * C92016) /
                        C91701;
    const double C636 =
        (C92009 * C92018 * C92014 * C92167 * C92124 * C92016) / C91701;
    const double C637 =
        (C92018 * C92014 * C92291 + C92028 * C92027 * C92291 * C92013) / C91701;
    const double C715 =
        (C92009 * (C92012 + std::pow(C92167, 2) * C92014 * C92018) * C92016) /
        C91701;
    const double C823 =
        (C92124 * (C92012 + C92013 * C92014 * C92018) * C92016) / C91701;
    const double C897 =
        (ae * C92010 * C92008 * C92017 + C92124 * C92018 * C92014 * C92128) /
        C91701;
    const double C963 = (C92124 * C92018 * C92014 * C92171) / C91701;
    const double C1021 =
        (ae * C92010 * C92008 * C92017 + C92124 * C92018 * C92014 * C92212) /
        C91701;
    const double C1079 =
        (2 * ae * C92010 * C92008 * C92127 +
         C92124 * (C92012 + C92232 * C92014 * C92018) * C92016) /
        C91701;
    const double C1145 =
        (ae * C92010 * C92008 * C92170 + C92124 * C92018 * C92014 * C92254) /
        C91701;
    const double C1203 = (C92124 * C92018 * C92014 * C92270) / C91701;
    const double C1261 =
        (ae * C92010 * C92008 * C92170 + C92124 * C92018 * C92014 * C92291) /
        C91701;
    const double C1319 =
        (C92124 * (C92012 + C92306 * C92014 * C92018) * C92016) / C91701;
    const double C1404 =
        (C92167 * (C92012 + C92013 * C92014 * C92018) * C92016) / C91701;
    const double C1478 = (C92167 * C92018 * C92014 * C92128) / C91701;
    const double C1544 =
        (ae * C92010 * C92008 * C92017 + C92167 * C92018 * C92014 * C92171) /
        C91701;
    const double C1602 = (C92167 * C92018 * C92014 * C92212) / C91701;
    const double C1660 =
        (C92167 * (C92012 + C92232 * C92014 * C92018) * C92016) / C91701;
    const double C1726 =
        (ae * C92010 * C92008 * C92127 + C92167 * C92018 * C92014 * C92254) /
        C91701;
    const double C1784 =
        (ae * C92010 * C92008 * C92017 + C92167 * C92018 * C92014 * C92270) /
        C91701;
    const double C1842 =
        (ae * C92010 * C92008 * C92127 + C92167 * C92018 * C92014 * C92291) /
        C91701;
    const double C1900 =
        (2 * ae * C92010 * C92008 * C92170 +
         C92167 * (C92012 + C92306 * C92014 * C92018) * C92016) /
        C91701;
    const double C92058 = C92049 * C92053;
    const double C92057 = C92052 * C92049;
    const double C92080 = C92048 * C92049;
    const double C92142 = C92049 * C92140;
    const double C92141 = C92049 * C92139;
    const double C92185 = C92049 * C92183;
    const double C92184 = C92049 * C92182;
    const double C92218 = C92049 * C92217;
    const double C92240 = C92239 * C92049;
    const double C92260 = C92049 * C92259;
    const double C92276 = C92049 * C92275;
    const double C92297 = C92049 * C92296;
    const double C92314 = C92313 * C92049;
    const double C92037 = C92009 * C92034;
    const double C92046 = ae * C92034;
    const double C92620 = C92124 * C92034;
    const double C92898 = C92167 * C92034;
    const double C92056 = C92047 * C92013;
    const double C92055 = C92009 * C92047;
    const double C92054 = C92047 * ae;
    const double C92667 = C92047 * C92232;
    const double C92666 = C92124 * C92047;
    const double C92966 = C92047 * C92306;
    const double C92965 = C92167 * C92047;
    const double C92138 = ae * C92135;
    const double C92137 = C92009 * C92135;
    const double C92652 = C92124 * C92135;
    const double C92917 = C92167 * C92135;
    const double C92181 = ae * C92178;
    const double C92180 = C92009 * C92178;
    const double C92709 = C92124 * C92178;
    const double C92951 = C92167 * C92178;
    const double C92098 = C92009 * C92094;
    const double C93089 = C92094 * C92232;
    const double C93221 = C92124 * C92094;
    const double C93293 = C92094 * C92306;
    const double C92158 = C92155 * C92013;
    const double C92686 = C92009 * C92155;
    const double C93111 = C92124 * C92155;
    const double C93230 = C92155 * C92306;
    const double C92201 = C92198 * C92013;
    const double C92717 = C92009 * C92198;
    const double C93143 = C92198 * C92232;
    const double C93244 = C92124 * C92198;
    const double C93324 = C92167 * C92198;
    const double C1479 = (C92018 * C92014 * C92128 + C92134 * C92306) / C91701;
    const double C92157 = C92009 * C92153;
    const double C93087 = C92124 * C92153;
    const double C93287 = C92153 * C92306;
    const double C1603 = (C92018 * C92014 * C92212 + C92215 * C92306) / C91701;
    const double C92225 = C92009 * C92224;
    const double C93101 = C92124 * C92224;
    const double C93167 = C92224 * C92306;
    const double C93196 = C92167 * C92224;
    const double C964 = (C92018 * C92014 * C92171 + C92177 * C92232) / C91701;
    const double C92200 = C92009 * C92196;
    const double C93097 = C92196 * C92232;
    const double C93220 = C92124 * C92196;
    const double C93291 = C92167 * C92196;
    const double C504 =
        (2 * C92009 * C92257 +
         C92009 * (C92257 + C92049 * C92048 * C92254 * C92013)) /
        C91701;
    const double C92264 = C92263 * C92013;
    const double C92716 = C92009 * C92263;
    const double C93141 = C92124 * C92263;
    const double C93180 = C92167 * C92263;
    const double C1204 = (C92018 * C92014 * C92270 + C92273 * C92232) / C91701;
    const double C92283 = C92009 * C92282;
    const double C93152 = C92282 * C92232;
    const double C93234 = C92124 * C92282;
    const double C93308 = C92167 * C92282;
    const double C638 =
        (2 * C92009 * C92294 +
         C92009 * (C92294 + C92049 * C92048 * C92291 * C92013)) /
        C91701;
    const double C92301 = C92300 * C92013;
    const double C92733 = C92009 * C92300;
    const double C93156 = C92124 * C92300;
    const double C93314 = C92167 * C92300;
    const double C93609 = std::exp(C93608);
    const double C93621 = std::exp(C93620);
    const double C93635 = std::exp(C93634);
    const double C91725 = C91723 - C91714;
    const double C37684 = C93582 * C815;
    const double C42270 = C93582 * C1396;
    const double C91712 = C91705 * C93582;
    const double C93583 = C93582 * C93577;
    const double C93587 = C93586 * C93582;
    const double C93806 = C93582 * C93578;
    const double C93803 = C93582 / C91702;
    const double C31827 = C93816 * C93582;
    const double C203 = C93662 * C190;
    const double C11233 = C93662 * C1470;
    const double C91780 = C91779 * C93662;
    const double C188 = -(2 * C91699 * (yA - yB) * C93662) / C91696;
    const double C418 =
        -((C93662 - (C91760 * 2 * C91699 * C91760 * C93662) / C91696) *
          C91706) /
        C91696;
    const double C93708 = C93662 * C93706;
    const double C93711 = C93586 * C93662;
    const double C93820 = C93662 * C93707;
    const double C93815 = C93662 / C91702;
    const double C4079 = C93816 * C93662;
    const double C290 = C93673 * C277;
    const double C5130 = C93673 * C955;
    const double C91806 = C91805 * C93673;
    const double C275 = -(2 * C91699 * (zA - zB) * C93673) / C91696;
    const double C713 =
        -((C93673 - (C91763 * 2 * C91699 * C91763 * C93673) / C91696) *
          C91706) /
        C91696;
    const double C93734 = C93673 * C93732;
    const double C93737 = C93586 * C93673;
    const double C93824 = C93673 * C93733;
    const double C93817 = C93673 / C91702;
    const double C9603 = C93816 * C93673;
    const double C91896 = C91895 - C91888;
    const double C91967 = C91966 - C91959;
    const double C92022 = C92009 * C92021;
    const double C898 = (C92018 * C92014 * C92128 + ae * C92124 * C92021 +
                         C92124 * (ae * C92021 + C92124 * C92134)) /
                        C91701;
    const double C1022 = (C92018 * C92014 * C92212 + ae * C92124 * C92021 +
                          C92124 * (ae * C92021 + C92124 * C92215)) /
                         C91701;
    const double C1545 = (C92018 * C92014 * C92171 + ae * C92167 * C92021 +
                          C92167 * (ae * C92021 + C92167 * C92177)) /
                         C91701;
    const double C1785 = (C92018 * C92014 * C92270 + ae * C92167 * C92021 +
                          C92167 * (ae * C92021 + C92167 * C92273)) /
                         C91701;
    const double C3495 = (C92167 * (ae * C92021 + C92124 * C92134)) / C91701;
    const double C3569 =
        (ae * C92124 * C92021 + C92167 * C92124 * C92177) / C91701;
    const double C3639 =
        (ae * C92167 * C92021 + C92124 * C92167 * C92215) / C91701;
    const double C3853 =
        (ae * C92124 * C92021 + C92167 * C92124 * C92273) / C91701;
    const double C816 = (C92010 * C92008 * C92017 + C92021 * C92232) / C91696;
    const double C1397 = (C92010 * C92008 * C92017 + C92021 * C92306) / C91696;
    const double C3413 = (C92167 * C92124 * C92021) / C91696;
    const double C4921 =
        (2 * C92124 * C92021 + C92124 * (C92021 + C92034 * C92232)) / C91696;
    const double C5824 = (C92167 * (C92021 + C92034 * C92232)) / C91696;
    const double C11107 =
        (2 * C92167 * C92021 + C92167 * (C92021 + C92034 * C92306)) / C91696;
    const double C92032 = C92009 * C92026;
    const double C92031 = C92026 * ae;
    const double C92036 = C92026 + C92033;
    const double C92236 = C92026 + C92235;
    const double C92310 = C92026 + C92309;
    const double C92653 = C92124 * C92026;
    const double C92952 = C92167 * C92026;
    const double C421 =
        ((C92012 + C92232 * C92014 * C92018) * C92016 +
         (C92026 + C92232 * C92027 * C92028) * C92016 * C92013) /
        C91701;
    const double C716 =
        ((C92012 + C92306 * C92014 * C92018) * C92016 +
         (C92026 + C92306 * C92027 * C92028) * C92016 * C92013) /
        C91701;
    const double C111 =
        2 * C92009 * C92012 + C92009 * (C92012 + C92026 * C92013);
    const double C805 = C92124 * (C92012 + C92026 * C92013);
    const double C1386 = C92167 * (C92012 + C92026 * C92013);
    const double C4917 =
        2 * C92124 * C92012 + C92124 * (C92012 + C92026 * C92232);
    const double C5818 = C92167 * (C92012 + C92026 * C92232);
    const double C11103 =
        2 * C92167 * C92012 + C92167 * (C92012 + C92026 * C92306);
    const double C92379 = C92124 * C92130;
    const double C197 =
        (C92018 * C92014 * C92128 + ae * C92009 * C92130 +
         C92009 * (ae * C92130 + C92009 * C92028 * C92027 * C92128)) /
        C91701;
    const double C198 =
        (2 * (ae * C92130 + C92009 * C92134) + ae * (C92130 + C92135 * C92013) +
         C92009 *
             (C92134 + ae * C92009 * C92135 +
              C92009 * (ae * C92135 + C92009 * C92049 * C92048 * C92128))) /
        C91701;
    const double C364 =
        (C92018 * C92014 * C92212 + ae * C92009 * C92130 +
         C92009 * (ae * C92130 + C92009 * C92028 * C92027 * C92212)) /
        C91701;
    const double C1477 = (C92167 * (ae * C92130 + C92009 * C92134)) / C91701;
    const double C1601 = (C92167 * (ae * C92130 + C92009 * C92215)) / C91701;
    const double C1725 =
        (ae * C92009 * C92130 + C92167 * C92009 * C92257) / C91701;
    const double C1727 = (C92018 * C92014 * C92254 + ae * C92167 * C92130 +
                          C92167 * (ae * C92130 + C92167 * C92257)) /
                         C91701;
    const double C1841 =
        (ae * C92009 * C92130 + C92167 * C92009 * C92294) / C91701;
    const double C1843 = (C92018 * C92014 * C92291 + ae * C92167 * C92130 +
                          C92167 * (ae * C92130 + C92167 * C92294)) /
                         C91701;
    const double C191 = (C92010 * C92008 * C92127 + C92130 * C92013) / C91696;
    const double C192 =
        (2 * C92009 * C92130 + C92009 * (C92130 + C92135 * C92013)) / C91696;
    const double C887 = (C92124 * (C92130 + C92135 * C92013) +
                         (C92012 + C92026 * C92013) * ae) /
                        C91696;
    const double C888 =
        (C92124 * C92009 * C92130 + C92009 * C92012 * ae) / C91696;
    const double C1468 = (C92167 * (C92130 + C92135 * C92013)) / C91696;
    const double C1469 = (C92167 * C92009 * C92130) / C91696;
    const double C1471 = (C92010 * C92008 * C92127 + C92130 * C92306) / C91696;
    const double C11224 =
        (2 * C92167 * C92130 + C92167 * (C92130 + C92135 * C92306)) / C91696;
    const double C92513 = C92167 * C92173;
    const double C284 =
        (C92018 * C92014 * C92171 + ae * C92009 * C92173 +
         C92009 * (ae * C92173 + C92009 * C92028 * C92027 * C92171)) /
        C91701;
    const double C285 =
        (2 * (ae * C92173 + C92009 * C92177) + ae * (C92173 + C92178 * C92013) +
         C92009 *
             (C92177 + ae * C92009 * C92178 +
              C92009 * (ae * C92178 + C92009 * C92049 * C92048 * C92171))) /
        C91701;
    const double C581 =
        (C92018 * C92014 * C92270 + ae * C92009 * C92173 +
         C92009 * (ae * C92173 + C92009 * C92028 * C92027 * C92270)) /
        C91701;
    const double C962 = (C92124 * (ae * C92173 + C92009 * C92177)) / C91701;
    const double C1144 =
        (ae * C92009 * C92173 + C92124 * C92009 * C92257) / C91701;
    const double C1146 = (C92018 * C92014 * C92254 + ae * C92124 * C92173 +
                          C92124 * (ae * C92173 + C92124 * C92257)) /
                         C91701;
    const double C1202 = (C92124 * (ae * C92173 + C92009 * C92273)) / C91701;
    const double C1260 =
        (ae * C92009 * C92173 + C92124 * C92009 * C92294) / C91701;
    const double C1262 = (C92018 * C92014 * C92291 + ae * C92124 * C92173 +
                          C92124 * (ae * C92173 + C92124 * C92294)) /
                         C91701;
    const double C278 = (C92010 * C92008 * C92170 + C92173 * C92013) / C91696;
    const double C279 =
        (2 * C92009 * C92173 + C92009 * (C92173 + C92178 * C92013)) / C91696;
    const double C953 = (C92124 * (C92173 + C92178 * C92013)) / C91696;
    const double C954 = (C92124 * C92009 * C92173) / C91696;
    const double C956 = (C92010 * C92008 * C92170 + C92173 * C92232) / C91696;
    const double C1534 = (C92167 * (C92173 + C92178 * C92013) +
                          (C92012 + C92026 * C92013) * ae) /
                         C91696;
    const double C1535 =
        (C92167 * C92009 * C92173 + C92009 * C92012 * ae) / C91696;
    const double C3565 =
        (C92167 * C92124 * C92173 + C92124 * C92012 * ae) / C91696;
    const double C5121 =
        (2 * C92124 * C92173 + C92124 * (C92173 + C92178 * C92232)) / C91696;
    const double C6008 = (C92167 * (C92173 + C92178 * C92232) +
                          (C92012 + C92026 * C92232) * ae) /
                         C91696;
    const double C205 = C93662 * C196;
    const double C292 = C93673 * C283;
    const double C429 = C93662 * C420;
    const double C510 = C93673 * C502;
    const double C513 = C93673 * C503;
    const double C644 = C93662 * C636;
    const double C647 = C93662 * C637;
    const double C724 = C93673 * C715;
    const double C37487 = C93582 * C823;
    const double C5132 = C93673 * C963;
    const double C37686 = C93582 * C1021;
    const double C5453 = C93673 * C1145;
    const double C37873 = C93582 * C1203;
    const double C5721 = C93673 * C1319;
    const double C41978 = C93582 * C1404;
    const double C11235 = C93662 * C1478;
    const double C42272 = C93582 * C1602;
    const double C11551 = C93662 * C1660;
    const double C42570 = C93582 * C1784;
    const double C11835 = C93662 * C1842;
    const double C92062 = C92009 * C92058;
    const double C92079 = ae * C92058;
    const double C92529 = C92124 * C92058;
    const double C92550 = C92167 * C92058;
    const double C92622 = C92058 * C92232;
    const double C92900 = C92058 * C92306;
    const double C92061 = C92047 + C92057;
    const double C92092 = C92080 * C92013;
    const double C92091 = C92009 * C92080;
    const double C92090 = C92080 * ae;
    const double C92097 = C92080 + C92093;
    const double C92246 = C92080 + C92245;
    const double C92320 = C92080 + C92319;
    const double C93113 = C92080 * C92232;
    const double C93112 = C92124 * C92080;
    const double C93229 = C92080 * C92306;
    const double C93325 = C92167 * C92080;
    const double C92144 = C92142 * C92013;
    const double C92149 = ae * C92142;
    const double C92148 = C92009 * C92142;
    const double C92665 = C92124 * C92142;
    const double C92918 = C92142 * C92306;
    const double C93179 = C92167 * C92142;
    const double C92143 = C92009 * C92141;
    const double C92621 = C92124 * C92141;
    const double C11228 =
        (2 * C92167 * C92134 + C92167 * (C92134 + C92141 * C92306)) / C91701;
    const double C11229 =
        (3 * (C92134 + C92141 * C92306) +
         C92167 * (2 * C92167 * C92141 + C92167 * (C92141 + C92153 * C92306))) /
        C91701;
    const double C92187 = C92185 * C92013;
    const double C92192 = ae * C92185;
    const double C92191 = C92009 * C92185;
    const double C92711 = C92185 * C92232;
    const double C92964 = C92167 * C92185;
    const double C93062 = C92124 * C92185;
    const double C92186 = C92009 * C92184;
    const double C92899 = C92167 * C92184;
    const double C93045 = C92124 * C92184;
    const double C5125 =
        (2 * C92124 * C92177 + C92124 * (C92177 + C92184 * C92232)) / C91701;
    const double C5126 =
        (3 * (C92177 + C92184 * C92232) +
         C92124 * (2 * C92124 * C92184 + C92124 * (C92184 + C92196 * C92232))) /
        C91701;
    const double C6014 = (ae * (C92021 + C92034 * C92232) +
                          C92167 * (C92177 + C92184 * C92232)) /
                         C91701;
    const double C92219 = C92009 * C92218;
    const double C92635 = C92124 * C92218;
    const double C92860 = C92167 * C92218;
    const double C6095 = (ae * (C92021 + C92034 * C92306) +
                          C92124 * (C92215 + C92218 * C92306)) /
                         C91701;
    const double C11427 =
        (2 * C92167 * C92215 + C92167 * (C92215 + C92218 * C92306)) / C91701;
    const double C92241 = C92047 + C92240;
    const double C92706 = C92009 * C92260;
    const double C92710 = C92124 * C92260;
    const double C92876 = C92167 * C92260;
    const double C505 =
        (3 * (C92257 + C92260 * C92013) +
         C92009 * (2 * C92009 * C92260 +
                   C92009 * (C92260 + C92082 * C92081 * C92254 * C92013))) /
        C91701;
    const double C1143 = (ae * (C92173 + C92178 * C92013) +
                          C92124 * (C92257 + C92260 * C92013)) /
                         C91701;
    const double C1724 = (ae * (C92130 + C92135 * C92013) +
                          C92167 * (C92257 + C92260 * C92013)) /
                         C91701;
    const double C92277 = C92009 * C92276;
    const double C92927 = C92167 * C92276;
    const double C93055 = C92124 * C92276;
    const double C5538 =
        (2 * C92124 * C92273 + C92124 * (C92273 + C92276 * C92232)) / C91701;
    const double C5539 =
        (3 * (C92273 + C92276 * C92232) +
         C92124 * (2 * C92124 * C92276 + C92124 * (C92276 + C92282 * C92232))) /
        C91701;
    const double C6346 = (ae * (C92021 + C92034 * C92232) +
                          C92167 * (C92273 + C92276 * C92232)) /
                         C91701;
    const double C92727 = C92009 * C92297;
    const double C92730 = C92124 * C92297;
    const double C92935 = C92167 * C92297;
    const double C639 =
        (3 * (C92294 + C92297 * C92013) +
         C92009 * (2 * C92009 * C92297 +
                   C92009 * (C92297 + C92082 * C92081 * C92291 * C92013))) /
        C91701;
    const double C1259 = (ae * (C92173 + C92178 * C92013) +
                          C92124 * (C92294 + C92297 * C92013)) /
                         C91701;
    const double C1840 = (ae * (C92130 + C92135 * C92013) +
                          C92167 * (C92294 + C92297 * C92013)) /
                         C91701;
    const double C92315 = C92047 + C92314;
    const double C92051 = 2 * C92046;
    const double C5043 =
        (2 * (ae * C92021 + C92124 * C92134) + ae * (C92021 + C92034 * C92232) +
         C92124 * (C92134 + ae * C92124 * C92034 +
                   C92124 * (C92046 + C92124 * C92141))) /
        C91701;
    const double C11349 =
        (2 * (ae * C92021 + C92167 * C92177) + ae * (C92021 + C92034 * C92306) +
         C92167 * (C92177 + ae * C92167 * C92034 +
                   C92167 * (C92046 + C92167 * C92184))) /
        C91701;
    const double C5242 =
        (2 * (ae * C92021 + C92124 * C92215) + ae * (C92021 + C92034 * C92232) +
         C92124 *
             (C92215 + ae * C92620 + C92124 * (C92046 + C92124 * C92218))) /
        C91701;
    const double C6015 = (C92124 * C92177 + ae * C92167 * C92620 +
                          C92167 * (ae * C92620 + C92167 * C92124 * C92184)) /
                         C91701;
    const double C6094 =
        (C92167 * C92215 + ae * C92167 * C92620 +
         C92124 * (ae * C92167 * C92034 + C92124 * C92167 * C92218)) /
        C91701;
    const double C6347 = (C92124 * C92273 + ae * C92167 * C92620 +
                          C92167 * (ae * C92620 + C92167 * C92124 * C92276)) /
                         C91701;
    const double C5825 = (C92124 * C92021 + C92620 * C92306) / C91696;
    const double C11733 =
        (2 * (ae * C92021 + C92167 * C92273) + ae * (C92021 + C92034 * C92306) +
         C92167 *
             (C92273 + ae * C92898 + C92167 * (C92046 + C92167 * C92276))) /
        C91701;
    const double C92060 = C92026 + C92056;
    const double C92059 = C92055 * ae;
    const double C92085 = 2 * C92055;
    const double C92643 = C92124 * C92055;
    const double C92942 = C92167 * C92055;
    const double C92671 = C92026 + C92667;
    const double C92670 = C92666 * ae;
    const double C93063 = C92167 * C92666;
    const double C93114 = 2 * C92666;
    const double C92970 = C92026 + C92966;
    const double C92969 = C92965 * ae;
    const double C93327 = 2 * C92965;
    const double C92662 = 2 * C92138;
    const double C92383 = C92124 * C92137;
    const double C365 =
        (2 * (ae * C92130 + C92009 * C92215) + ae * (C92130 + C92135 * C92013) +
         C92009 * (C92215 + ae * C92137 +
                   C92009 * (C92138 + C92009 * C92049 * C92048 * C92212))) /
        C91701;
    const double C1728 = (C92009 * C92257 + ae * C92167 * C92137 +
                          C92167 * (ae * C92137 + C92167 * C92009 * C92260)) /
                         C91701;
    const double C1844 = (C92009 * C92294 + ae * C92167 * C92137 +
                          C92167 * (ae * C92137 + C92167 * C92009 * C92297)) /
                         C91701;
    const double C1472 = (C92009 * C92130 + C92137 * C92306) / C91696;
    const double C11830 =
        (2 * (ae * C92130 + C92167 * C92294) + ae * (C92130 + C92135 * C92306) +
         C92167 *
             (C92294 + ae * C92917 + C92167 * (C92138 + C92167 * C92297))) /
        C91701;
    const double C92961 = 2 * C92181;
    const double C5448 =
        (2 * (ae * C92173 + C92124 * C92257) + ae * (C92173 + C92178 * C92232) +
         C92124 * (C92257 + ae * C92124 * C92178 +
                   C92124 * (C92181 + C92124 * C92260))) /
        C91701;
    const double C92517 = C92167 * C92180;
    const double C582 =
        (2 * (ae * C92173 + C92009 * C92273) + ae * (C92173 + C92178 * C92013) +
         C92009 * (C92273 + ae * C92180 +
                   C92009 * (C92181 + C92009 * C92049 * C92048 * C92270))) /
        C91701;
    const double C1147 = (C92009 * C92257 + ae * C92124 * C92180 +
                          C92124 * (ae * C92180 + C92124 * C92009 * C92260)) /
                         C91701;
    const double C1263 = (C92009 * C92294 + ae * C92124 * C92180 +
                          C92124 * (ae * C92180 + C92124 * C92009 * C92297)) /
                         C91701;
    const double C957 = (C92009 * C92173 + C92180 * C92232) / C91696;
    const double C92803 = C92167 * C92709;
    const double C5638 =
        (2 * (ae * C92173 + C92124 * C92294) + ae * (C92173 + C92178 * C92232) +
         C92124 *
             (C92294 + ae * C92709 + C92124 * (C92181 + C92124 * C92297))) /
        C91701;
    const double C93091 = C92058 + C93089;
    const double C93223 = C93221 * C92306;
    const double C93295 = C92058 + C93293;
    const double C92160 = C92142 + C92158;
    const double C92690 = C92124 * C92686;
    const double C92922 = C92686 * C92306;
    const double C93232 = C92142 + C93230;
    const double C92203 = C92185 + C92201;
    const double C92719 = C92717 * C92232;
    const double C92985 = C92167 * C92717;
    const double C93074 = C92124 * C92717;
    const double C93146 = C92185 + C93143;
    const double C93248 = C92167 * C93244;
    const double C11241 = C93662 * C1479;
    const double C93288 = C92141 + C93287;
    const double C42278 = C93582 * C1603;
    const double C93168 = C92218 + C93167;
    const double C93197 = C92124 * C93196;
    const double C5138 = C93673 * C964;
    const double C93098 = C92184 + C93097;
    const double C93222 = C92167 * C93220;
    const double C516 = C93673 * C504;
    const double C92265 = C92260 + C92264;
    const double C92718 = C92124 * C92716;
    const double C92879 = C92167 * C92716;
    const double C37876 = C93582 * C1204;
    const double C93153 = C92276 + C93152;
    const double C93235 = C92167 * C93234;
    const double C650 = C93662 * C638;
    const double C92302 = C92297 + C92301;
    const double C92734 = C92124 * C92733;
    const double C92938 = C92167 * C92733;
    const double C93832 = C93609 * C93810;
    const double C97 =
        (C93609 * std::pow(C93810, 2)) / C93811 + C93609 / C93812;
    const double C99 = C93833 * C93609;
    const double C1982 = C93831 * C93609;
    const double C93834 = C93621 * C93813;
    const double C800 =
        (C93621 * std::pow(C93813, 2)) / C93811 + C93621 / C93812;
    const double C802 = C93833 * C93621;
    const double C1980 = C93831 * C93621;
    const double C93835 = C93635 * C93814;
    const double C1382 =
        (C93635 * std::pow(C93814, 2)) / C93811 + C93635 / C93812;
    const double C1384 = C93833 * C93635;
    const double C2696 = C93831 * C93635;
    const double C91718 = C91712 / C91701;
    const double C91716 = 2 * C91712;
    const double C91715 = -4 * C91712;
    const double C93807 = C93583 / C91711;
    const double C93805 = C93583 / C91696;
    const double C93804 = C93583 * C93578;
    const double C31826 = (2 * C93586 * C93583) / C91696;
    const double C93808 = C93587 * C93578;
    const double C92 = C93587 / C93809;
    const double C14991 = C93587 / C91702;
    const double C93829 = C93806 / C91696;
    const double C31825 = (C93582 * std::pow(C93577, 2)) / C91701 + C93803;
    const double C91788 = 2 * C91780;
    const double C91886 = C91780 / C91701;
    const double C91907 = -4 * C91780;
    const double C4178 =
        ((0 * ae) / C91696 - C91780 / C91701) / C91702 + (0 * ae) / C91696;
    const double C15093 = (0 * ae) / C91696 - C91780 / C91701;
    const double C206 = C188 * C110;
    const double C204 = C188 * C115;
    const double C202 = C188 * C109;
    const double C428 = C188 * C190;
    const double C426 = C188 * C189;
    const double C643 = C188 * C277;
    const double C1088 = C188 * C889;
    const double C1669 = C188 * C1470;
    const double C2069 = C188 * C806;
    const double C2783 = C188 * C1387;
    const double C11238 = C188 * C1389;
    const double C11234 = C188 * C1396;
    const double C11232 = C188 * C1388;
    const double C11834 = C188 * C1536;
    const double C14148 = C188 * C3409;
    const double C430 = C418 * C110;
    const double C427 = C418 * C109;
    const double C2301 = C418 * C806;
    const double C3015 = C418 * C1387;
    const double C11553 = C418 * C1389;
    const double C11550 = C418 * C1388;
    const double C14482 = C418 * C3409;
    const double C93822 = C93708 / C91711;
    const double C93821 = C93708 * C93707;
    const double C93818 = C93708 / C91696;
    const double C4078 = (2 * C93586 * C93708) / C91696;
    const double C4177 =
        (((C93662 - (C91760 * 2 * C91780) / C91696) * ae) / C91696 -
         C91778 / C91711) /
            C91702 +
        ((C91760 * ((0 * ae) / C91696 - C91780 / C91701) + C93711) * ae) /
            C91696;
    const double C93823 = C93711 * C93707;
    const double C36997 = C93711 / C93809;
    const double C45718 = C93711 / C91702;
    const double C93836 = C93820 / C91696;
    const double C4077 = (C93662 * std::pow(C93706, 2)) / C91701 + C93815;
    const double C91814 = 2 * C91806;
    const double C91957 = C91806 / C91701;
    const double C91978 = -4 * C91806;
    const double C9772 =
        ((0 * ae) / C91696 - C91806 / C91701) / C91702 + (0 * ae) / C91696;
    const double C20350 = (0 * ae) / C91696 - C91806 / C91701;
    const double C293 = C275 * C110;
    const double C291 = C275 * C115;
    const double C289 = C275 * C109;
    const double C509 = C275 * C190;
    const double C723 = C275 * C277;
    const double C721 = C275 * C276;
    const double C1328 = C275 * C955;
    const double C1909 = C275 * C1536;
    const double C2155 = C275 * C806;
    const double C2869 = C275 * C1387;
    const double C5135 = C275 * C808;
    const double C5131 = C275 * C815;
    const double C5129 = C275 * C807;
    const double C5452 = C275 * C889;
    const double C8858 = C275 * C3409;
    const double C725 = C713 * C110;
    const double C722 = C713 * C109;
    const double C2615 = C713 * C806;
    const double C3329 = C713 * C1387;
    const double C5722 = C713 * C808;
    const double C5720 = C713 * C807;
    const double C9518 = C713 * C3409;
    const double C93826 = C93734 / C91711;
    const double C93825 = C93734 * C93733;
    const double C93819 = C93734 / C91696;
    const double C9602 = (2 * C93586 * C93734) / C91696;
    const double C9771 =
        (((C93673 - (C91763 * 2 * C91806) / C91696) * ae) / C91696 -
         C91804 / C91711) /
            C91702 +
        ((C91763 * ((0 * ae) / C91696 - C91806 / C91701) + C93737) * ae) /
            C91696;
    const double C93827 = C93737 * C93733;
    const double C72310 = C93737 / C93809;
    const double C81840 = C93737 / C91702;
    const double C93839 = C93824 / C91696;
    const double C9601 = (C93673 * std::pow(C93732, 2)) / C91701 + C93817;
    const double C92023 = C92022 + C92020;
    const double C37690 = C93582 * C1022;
    const double C42572 = C93582 * C1785;
    const double C14151 = C93662 * C3495;
    const double C27299 = C93711 * C3495;
    const double C42084 = C93711 * C3495;
    const double C8857 = C93673 * C3569;
    const double C26423 = C93737 * C3569;
    const double C68120 = C93737 * C3569;
    const double C40051 = C93582 * C3639;
    const double C40275 = C93582 * C3853;
    const double C5137 = C275 * C816;
    const double C37688 = C93582 * C816;
    const double C11240 = C188 * C1397;
    const double C42276 = C93582 * C1397;
    const double C8856 = C275 * C3413;
    const double C14150 = C188 * C3413;
    const double C40053 = C93582 * C3413;
    const double C5145 = C275 * C4921;
    const double C37692 = C93582 * C4921;
    const double C8850 = C275 * C5824;
    const double C40049 = C93582 * C5824;
    const double C11248 = C188 * C11107;
    const double C42288 = C93582 * C11107;
    const double C92035 = C92032 * ae;
    const double C3566 =
        (C92167 * C92124 * C92180 + C92124 * C92032 * ae) / C91696;
    const double C809 = C92009 * C92012 + C92032 * C92232;
    const double C1390 = C92009 * C92012 + C92032 * C92306;
    const double C3410 = C92167 * C92124 * C92032;
    const double C4916 =
        2 * C92124 * C92032 + C92124 * (C92032 + C92055 * C92232);
    const double C5817 = C92167 * (C92032 + C92055 * C92232);
    const double C11102 =
        2 * C92167 * C92032 + C92167 * (C92032 + C92055 * C92306);
    const double C92039 = C92037 + C92031;
    const double C92654 = C92652 + C92031;
    const double C92953 = C92951 + C92031;
    const double C6267 = (ae * (C92173 + C92167 * (C92167 * C92178 + C92031) +
                                C92167 * C92026 * ae) +
                          C92124 * (C92257 + ae * C92167 * C92135 +
                                    C92167 * (C92138 + C92167 * C92260))) /
                         C91701;
    const double C92038 = C92036 * C92016;
    const double C92237 = C92236 * C92016;
    const double C92311 = C92310 * C92016;
    const double C92655 = C92653 * ae;
    const double C5819 = C92124 * C92012 + C92653 * C92306;
    const double C14027 =
        2 * C92167 * C92653 + C92167 * (C92653 + C92666 * C92306);
    const double C92954 = C92952 * ae;
    const double C432 = C93662 * C421;
    const double C727 = C93673 * C716;
    const double C210 = C188 * C111;
    const double C297 = C275 * C111;
    const double C433 = C418 * C111;
    const double C728 = C713 * C111;
    const double C2065 = C188 * C805;
    const double C2151 = C275 * C805;
    const double C2299 = C418 * C805;
    const double C2613 = C713 * C805;
    const double C2779 = C188 * C1386;
    const double C2865 = C275 * C1386;
    const double C3013 = C418 * C1386;
    const double C3327 = C713 * C1386;
    const double C5147 = C275 * C4917;
    const double C5727 = C713 * C4917;
    const double C8852 = C275 * C5818;
    const double C9516 = C713 * C5818;
    const double C11250 = C188 * C11103;
    const double C11559 = C418 * C11103;
    const double C92380 = C92379 + C92020;
    const double C209 = C93662 * C197;
    const double C213 = C93662 * C198;
    const double C2782 = C93662 * C1477;
    const double C11438 = C93587 * C1601;
    const double C44094 = C93582 * C1601;
    const double C53034 = C93587 * C1601;
    const double C3101 = C93673 * C1725;
    const double C20615 = C93737 * C1725;
    const double C62610 = C93737 * C1725;
    const double C3250 = C93662 * C1841;
    const double C11837 = C93662 * C1843;
    const double C207 = C93662 * C191;
    const double C431 = C188 * C191;
    const double C512 = C275 * C191;
    const double C211 = C93662 * C192;
    const double C434 = C188 * C192;
    const double C515 = C275 * C192;
    const double C1086 = C188 * C887;
    const double C2066 = C93662 * C887;
    const double C2383 = C275 * C887;
    const double C15106 = C93711 * C887;
    const double C31942 = C93711 * C887;
    const double C1087 = C188 * C888;
    const double C2070 = C93662 * C888;
    const double C2386 = C275 * C888;
    const double C15098 = C93711 * C888;
    const double C31934 = C93711 * C888;
    const double C1667 = C188 * C1468;
    const double C2780 = C93662 * C1468;
    const double C3097 = C275 * C1468;
    const double C1668 = C188 * C1469;
    const double C2784 = C93662 * C1469;
    const double C3100 = C275 * C1469;
    const double C1670 = C188 * C1471;
    const double C11239 = C93662 * C1471;
    const double C11251 = C93662 * C11224;
    const double C11560 = C188 * C11224;
    const double C92514 = C92513 + C92020;
    const double C296 = C93673 * C284;
    const double C300 = C93673 * C285;
    const double C2154 = C93673 * C962;
    const double C2387 = C93673 * C1144;
    const double C5455 = C93673 * C1146;
    const double C5545 = C93587 * C1202;
    const double C38992 = C93582 * C1202;
    const double C47076 = C93587 * C1202;
    const double C2536 = C93662 * C1260;
    const double C15638 = C93711 * C1260;
    const double C32474 = C93711 * C1260;
    const double C294 = C93673 * C278;
    const double C646 = C188 * C278;
    const double C726 = C275 * C278;
    const double C298 = C93673 * C279;
    const double C649 = C188 * C279;
    const double C729 = C275 * C279;
    const double C1326 = C275 * C953;
    const double C2152 = C93673 * C953;
    const double C2532 = C188 * C953;
    const double C1327 = C275 * C954;
    const double C2156 = C93673 * C954;
    const double C2535 = C188 * C954;
    const double C1329 = C275 * C956;
    const double C5136 = C93673 * C956;
    const double C1907 = C275 * C1534;
    const double C2866 = C93673 * C1534;
    const double C3246 = C188 * C1534;
    const double C20363 = C93737 * C1534;
    const double C62358 = C93737 * C1534;
    const double C1908 = C275 * C1535;
    const double C2870 = C93673 * C1535;
    const double C3249 = C188 * C1535;
    const double C20355 = C93737 * C1535;
    const double C62350 = C93737 * C1535;
    const double C3998 = C275 * C3565;
    const double C8859 = C93673 * C3565;
    const double C14804 = C188 * C3565;
    const double C26419 = C93737 * C3565;
    const double C68116 = C93737 * C3565;
    const double C5148 = C93673 * C5121;
    const double C5728 = C275 * C5121;
    const double C6513 = C275 * C6008;
    const double C8853 = C93673 * C6008;
    const double C26437 = C93737 * C6008;
    const double C68124 = C93737 * C6008;
    const double C92065 = C92062 + C92054;
    const double C92087 = 2 * C92079;
    const double C93090 = C92079 + C93087;
    const double C93102 = C92079 + C93101;
    const double C93294 = C92079 + C93291;
    const double C93309 = C92079 + C93308;
    const double C92534 = ae * C92529;
    const double C93088 = 2 * C92529;
    const double C93219 = C92167 * C92529;
    const double C6097 =
        (C92215 + C92218 * C92306 + ae * (C92620 + C92529 * C92306) +
         C92124 * (ae * (C92034 + C92058 * C92306) +
                   C92124 * (C92218 + C92224 * C92306))) /
        C91701;
    const double C14029 =
        (2 * C92167 * C92620 + C92167 * (C92620 + C92529 * C92306)) / C91696;
    const double C92555 = ae * C92550;
    const double C93292 = 2 * C92550;
    const double C92624 = C92034 + C92622;
    const double C92902 = C92034 + C92900;
    const double C92064 = C92061 * C92016;
    const double C92096 = C92047 + C92092;
    const double C92095 = C92091 * ae;
    const double C92688 = C92091 * C92232;
    const double C92687 = C92124 * C92091;
    const double C92987 = C92091 * C92306;
    const double C92986 = C92167 * C92091;
    const double C92102 = C92098 + C92090;
    const double C93117 = C93111 + C92090;
    const double C93331 = C93324 + C92090;
    const double C92101 = C92097 * C92016;
    const double C92247 = C92246 * C92016;
    const double C92321 = C92320 * C92016;
    const double C93119 = C92047 + C93113;
    const double C93118 = C93112 * ae;
    const double C93246 = C93112 * C92306;
    const double C93245 = C92167 * C93112;
    const double C93231 = C92047 + C93229;
    const double C93332 = C93325 * ae;
    const double C92146 = C92135 + C92144;
    const double C92159 = C92149 + C92157;
    const double C92226 = C92149 + C92225;
    const double C93107 = 2 * C92149;
    const double C93182 = C92149 + C93180;
    const double C93315 = C92149 + C93314;
    const double C92154 = 2 * C92148;
    const double C92152 = ae * C92148;
    const double C92642 = C92124 * C92148;
    const double C92921 = C92167 * C92148;
    const double C11223 =
        (2 * C92167 * C92137 + C92167 * (C92137 + C92148 * C92306)) / C91696;
    const double C92669 = C92665 + C92054;
    const double C92919 = C92135 + C92918;
    const double C93181 = ae * C93179;
    const double C93303 = 2 * C93179;
    const double C92145 = C92138 + C92143;
    const double C92623 = C92046 + C92621;
    const double C11249 = C93662 * C11228;
    const double C73310 = C93662 * C11229;
    const double C92189 = C92178 + C92187;
    const double C92202 = C92192 + C92200;
    const double C92284 = C92192 + C92283;
    const double C93145 = C92192 + C93141;
    const double C93157 = C92192 + C93156;
    const double C93320 = 2 * C92192;
    const double C92197 = 2 * C92191;
    const double C92195 = ae * C92191;
    const double C92715 = C92124 * C92191;
    const double C92941 = C92167 * C92191;
    const double C5120 =
        (2 * C92124 * C92180 + C92124 * (C92180 + C92191 * C92232)) / C91696;
    const double C6007 = (C92167 * (C92180 + C92191 * C92232) +
                          (C92032 + C92055 * C92232) * ae) /
                         C91696;
    const double C92713 = C92178 + C92711;
    const double C92968 = C92964 + C92054;
    const double C93064 = C92167 * C93062;
    const double C93142 = 2 * C93062;
    const double C93140 = ae * C93062;
    const double C92188 = C92181 + C92186;
    const double C92901 = C92046 + C92899;
    const double C5146 = C93673 * C5125;
    const double C37623 = C93673 * C5126;
    const double C8851 = C93673 * C6014;
    const double C26433 = C93737 * C6014;
    const double C68128 = C93737 * C6014;
    const double C92220 = C92138 + C92219;
    const double C92636 = C92046 + C92635;
    const double C11428 =
        (3 * (C92215 + C92218 * C92306) +
         C92167 * (2 * C92860 + C92167 * (C92218 + C92224 * C92306))) /
        C91701;
    const double C41446 = C93582 * C6095;
    const double C42286 = C93582 * C11427;
    const double C92242 = C92241 * C92016;
    const double C92712 = C92181 + C92710;
    const double C92877 = C92138 + C92876;
    const double C518 = C93673 * C505;
    const double C2384 = C93673 * C1143;
    const double C3098 = C93673 * C1724;
    const double C20620 = C93737 * C1724;
    const double C62615 = C93737 * C1724;
    const double C92278 = C92181 + C92277;
    const double C92928 = C92046 + C92927;
    const double C37879 = C93582 * C5538;
    const double C37881 = C93582 * C5539;
    const double C40272 = C93582 * C6346;
    const double C92731 = C92181 + C92730;
    const double C92936 = C92138 + C92935;
    const double C652 = C93662 * C639;
    const double C2533 = C93662 * C1259;
    const double C15643 = C93711 * C1259;
    const double C32479 = C93711 * C1259;
    const double C3247 = C93662 * C1840;
    const double C92316 = C92315 * C92016;
    const double C37694 = C93582 * C5242;
    const double C30915 = C93737 * C6015;
    const double C41344 = C9603 * C6015;
    const double C71580 = C93737 * C6015;
    const double C40047 = C93582 * C6094;
    const double C41707 = C93582 * C6347;
    const double C14156 = C188 * C5825;
    const double C41444 = C93582 * C5825;
    const double C42576 = C93582 * C11733;
    const double C92063 = C92060 * ae;
    const double C112 = 3 * (C92012 + C92026 * C92013) +
                        C92009 * (2 * C92032 + C92009 * C92060);
    const double C804 = C92124 * (2 * C92032 + C92009 * C92060);
    const double C810 = C92012 + C92026 * C92013 + C92060 * C92232;
    const double C1385 = C92167 * (2 * C92032 + C92009 * C92060);
    const double C1391 = C92012 + C92026 * C92013 + C92060 * C92306;
    const double C3411 = C92167 * C92124 * C92060;
    const double C92645 = C92643 * ae;
    const double C5820 = C92124 * C92032 + C92643 * C92306;
    const double C92944 = C92942 * ae;
    const double C92673 = C92671 * ae;
    const double C4918 = 3 * (C92012 + C92026 * C92232) +
                         C92124 * (2 * C92653 + C92124 * C92671);
    const double C5821 = C92012 + C92026 * C92232 + C92671 * C92306;
    const double C8615 = C92167 * (2 * C92653 + C92124 * C92671);
    const double C6268 =
        (C92257 + ae * C92167 * C92135 + C92167 * (C92138 + C92167 * C92260) +
         ae * (C92709 + C92167 * (C92167 * C92124 * C92185 + C92670) +
               C92167 * C92666 * ae) +
         C92124 * (ae * (C92178 + C92167 * (C92167 * C92185 + C92054) +
                         C92167 * C92047 * ae) +
                   C92124 * (C92260 + ae * C92167 * C92142 +
                             C92167 * (C92149 + C92167 * C92263)))) /
        C91701;
    const double C93065 = C93063 * ae;
    const double C92972 = C92970 * ae;
    const double C11104 = 3 * (C92012 + C92026 * C92306) +
                          C92167 * (2 * C92952 + C92167 * C92970);
    const double C10047 = C9603 * C1728;
    const double C24001 = C93737 * C1728;
    const double C65981 = C93737 * C1728;
    const double C10214 = C93662 * C1844;
    const double C1671 = C188 * C1472;
    const double C9686 = C93662 * C1472;
    const double C11841 = C93662 * C11830;
    const double C5459 = C93673 * C5448;
    const double C4575 = C93673 * C1147;
    const double C4740 = C4079 * C1263;
    const double C18103 = C93711 * C1263;
    const double C34938 = C93711 * C1263;
    const double C1330 = C275 * C957;
    const double C4291 = C93673 * C957;
    const double C93093 = C92124 * C93091;
    const double C93225 = C92529 + C93223;
    const double C93297 = C92167 * C93295;
    const double C92162 = C92009 * C92160;
    const double C92827 = C92124 * C92160;
    const double C92923 = C92148 + C92922;
    const double C93304 = C92167 * C93232;
    const double C92205 = C92009 * C92203;
    const double C93014 = C92124 * C92203;
    const double C93031 = C92167 * C92203;
    const double C92721 = C92191 + C92719;
    const double C93076 = C92167 * C93074;
    const double C93148 = C92124 * C93146;
    const double C93276 = C92167 * C93146;
    const double C73301 =
        (4 * (2 * C92167 * C92141 + C92167 * C93288) +
         C92167 * (3 * C93288 +
                   C92167 * (2 * C92167 * C92153 +
                             C92167 * (C92153 + std::pow(C92015, 7) * bs[7] *
                                                    C92128 * C92306)))) /
        C91701;
    const double C73420 =
        (4 * (2 * C92860 + C92167 * C93168) +
         C92167 * (3 * C93168 +
                   C92167 * (2 * C93196 +
                             C92167 * (C92224 + std::pow(C92015, 7) * bs[7] *
                                                    C92212 * C92306)))) /
        C91701;
    const double C37614 =
        (4 * (2 * C93045 + C92124 * C93098) +
         C92124 * (3 * C93098 +
                   C92124 * (2 * C92124 * C92196 +
                             C92124 * (C92196 + std::pow(C92015, 7) * bs[7] *
                                                    C92171 * C92232)))) /
        C91701;
    const double C506 =
        (4 * (2 * C92009 * C92260 + C92009 * C92265) +
         C92009 * (3 * C92265 +
                   C92009 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C37869 =
        (4 * (2 * C93055 + C92124 * C93153) +
         C92124 * (3 * C93153 +
                   C92124 * (2 * C92124 * C92282 +
                             C92124 * (C92282 + std::pow(C92015, 7) * bs[7] *
                                                    C92270 * C92232)))) /
        C91701;
    const double C640 =
        (4 * (2 * C92009 * C92297 + C92009 * C92302) +
         C92009 * (3 * C92302 +
                   C92009 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C98 = (2 * C93831 * C93832) / C93604;
    const double C1981 = C93832 / C93604;
    const double C801 = (2 * C93831 * C93834) / C93604;
    const double C1979 = C93834 / C93604;
    const double C1383 = (2 * C93831 * C93835) / C93604;
    const double C2695 = C93835 / C93604;
    const double C91722 = C91707 - C91718;
    const double C91721 = C91697 * C91716;
    const double C4083 = (-C91716 / C91696) / C91702 - (0 * be) / C91696;
    const double C36999 = -C91716 / C91696;
    const double C91720 = C91715 / C91696;
    const double C46529 = C93805 * C823;
    const double C46824 = C93805 * C4921;
    const double C46820 = C93805 * C5242;
    const double C46814 = C93805 * C1022;
    const double C46810 = C93805 * C816;
    const double C46806 = C93805 * C1021;
    const double C46802 = C93805 * C815;
    const double C47085 = C93805 * C5538;
    const double C47079 = C93805 * C1204;
    const double C47074 = C93805 * C1203;
    const double C48716 = C93805 * C1202;
    const double C50314 = C93805 * C3413;
    const double C50310 = C93805 * C3639;
    const double C50306 = C93805 * C5824;
    const double C50302 = C93805 * C6094;
    const double C50630 = C93805 * C3853;
    const double C50626 = C93805 * C6346;
    const double C52700 = C93805 * C1404;
    const double C53050 = C93805 * C1397;
    const double C53046 = C93805 * C1603;
    const double C53042 = C93805 * C5825;
    const double C53038 = C93805 * C6095;
    const double C53032 = C93805 * C1602;
    const double C53028 = C93805 * C1396;
    const double C53368 = C93805 * C1785;
    const double C53364 = C93805 * C6347;
    const double C53358 = C93805 * C1784;
    const double C55340 = C93805 * C1601;
    const double C83561 = C93805 * C11107;
    const double C83557 = C93805 * C11427;
    const double C83802 = C93805 * C11733;
    const double C93828 = C93804 / C91701;
    const double C33191 = C31826 * C1202;
    const double C63938 = C31826 * C1601;
    const double C93830 = C93808 / C91696;
    const double C4075 = -C93829;
    const double C32649 = C31825 * C823;
    const double C32941 = C31825 * C816;
    const double C32935 = C31825 * C1022;
    const double C32925 = C31825 * C1021;
    const double C32919 = C31825 * C815;
    const double C33199 = C31825 * C1204;
    const double C33189 = C31825 * C1203;
    const double C34827 = C31825 * C1202;
    const double C36432 = C31825 * C3413;
    const double C36426 = C31825 * C3639;
    const double C36744 = C31825 * C3853;
    const double C63663 = C31825 * C1404;
    const double C63952 = C31825 * C1397;
    const double C63946 = C31825 * C1603;
    const double C63936 = C31825 * C1602;
    const double C63930 = C31825 * C1396;
    const double C64204 = C31825 * C1785;
    const double C64194 = C31825 * C1784;
    const double C65766 = C31825 * C1601;
    const double C91789 = C91760 * C91788;
    const double C31929 = (-C91788 / C91696) / C91702 - (0 * be) / C91696;
    const double C91893 = C91890 - C91886;
    const double C91910 = C91907 / C91696;
    const double C4739 = C4178 * C957;
    const double C68828 = C4178 * C5824;
    const double C68822 = C4178 * C5818;
    const double C69347 = C4178 * C6008;
    const double C15105 = C15093 * C805;
    const double C15097 = C15093 * C806;
    const double C15369 = C15093 * C887;
    const double C15363 = C15093 * C888;
    const double C15358 = C15093 * C889;
    const double C15642 = C15093 * C953;
    const double C15637 = C15093 * C954;
    const double C18102 = C15093 * C957;
    const double C27308 = C15093 * C5825;
    const double C27298 = C15093 * C3413;
    const double C27294 = C15093 * C3409;
    const double C27952 = C15093 * C3565;
    const double C30778 = C15093 * C5824;
    const double C30774 = C15093 * C5818;
    const double C31604 = C15093 * C6008;
    const double C219 = C204 + C205;
    const double C218 = C202 + C203;
    const double C654 = C643 + C644;
    const double C11253 = C11234 + C11235;
    const double C11252 = C11232 + C11233;
    const double C11842 = C11834 + C11835;
    const double C440 = C427 + C428;
    const double C11564 = C11550 + C1669;
    const double C93837 = C93821 / C91701;
    const double C15118 = C93818 * C192;
    const double C15114 = C93818 * C198;
    const double C15108 = C93818 * C197;
    const double C15104 = C93818 * C191;
    const double C15100 = C93818 * C196;
    const double C15096 = C93818 * C190;
    const double C15367 = C93818 * C421;
    const double C15361 = C93818 * C420;
    const double C15647 = C93818 * C638;
    const double C15641 = C93818 * C637;
    const double C15636 = C93818 * C636;
    const double C17438 = C93818 * C888;
    const double C17430 = C93818 * C887;
    const double C18105 = C93818 * C1260;
    const double C18101 = C93818 * C1259;
    const double C18429 = C93818 * C1469;
    const double C18425 = C93818 * C1477;
    const double C18421 = C93818 * C1468;
    const double C19072 = C93818 * C1841;
    const double C19068 = C93818 * C1840;
    const double C27315 = C93818 * C1471;
    const double C27311 = C93818 * C1479;
    const double C27307 = C93818 * C1472;
    const double C27297 = C93818 * C1478;
    const double C27293 = C93818 * C1470;
    const double C27623 = C93818 * C1660;
    const double C27961 = C93818 * C1843;
    const double C27957 = C93818 * C1844;
    const double C27951 = C93818 * C1842;
    const double C30777 = C93818 * C3495;
    const double C88369 = C93818 * C11224;
    const double C88365 = C93818 * C11228;
    const double C88854 = C93818 * C11830;
    const double C4176 =
        (((0 - (C91760 * C91778) / C91696) * ae) / C91696 - (0 * be) / C91711) /
            C91702 +
        ((C91760 * (((C93662 - (C91760 * 2 * C91780) / C91696) * ae) / C91696 -
                    C91778 / C91711) +
          C93818) *
         ae) /
            C91696 +
        (0 * ae) / C91696 - C91780 / C91701;
    const double C4201 = C4078 * C887;
    const double C4183 = C4078 * C888;
    const double C4744 = C4078 * C1259;
    const double C4738 = C4078 * C1260;
    const double C7425 = C4078 * C1263;
    const double C68827 = C4078 * C3495;
    const double C4200 = C4177 * C805;
    const double C4182 = C4177 * C806;
    const double C4469 = C4177 * C887;
    const double C4460 = C4177 * C888;
    const double C4454 = C4177 * C889;
    const double C4743 = C4177 * C953;
    const double C4737 = C4177 * C954;
    const double C7424 = C4177 * C957;
    const double C68832 = C4177 * C5825;
    const double C68826 = C4177 * C3413;
    const double C68820 = C4177 * C3409;
    const double C69345 = C4177 * C3565;
    const double C71463 = C4177 * C5824;
    const double C71457 = C4177 * C5818;
    const double C72131 = C4177 * C6008;
    const double C93838 = C93823 / C91696;
    const double C46361 = C45718 * C1263;
    const double C31828 = -C93836;
    const double C4203 = C4077 * C191;
    const double C4197 = C4077 * C197;
    const double C4187 = C4077 * C196;
    const double C4181 = C4077 * C190;
    const double C4473 = C4077 * C421;
    const double C4458 = C4077 * C420;
    const double C4746 = C4077 * C637;
    const double C4736 = C4077 * C636;
    const double C6752 = C4077 * C888;
    const double C7427 = C4077 * C1260;
    const double C7752 = C4077 * C1469;
    const double C7746 = C4077 * C1477;
    const double C8401 = C4077 * C1841;
    const double C68841 = C4077 * C1471;
    const double C68835 = C4077 * C1479;
    const double C68825 = C4077 * C1478;
    const double C68819 = C4077 * C1470;
    const double C69089 = C4077 * C1660;
    const double C69354 = C4077 * C1843;
    const double C69344 = C4077 * C1842;
    const double C71462 = C4077 * C3495;
    const double C91815 = C91763 * C91814;
    const double C62345 = (-C91814 / C91696) / C91702 - (0 * be) / C91696;
    const double C91964 = C91961 - C91957;
    const double C91981 = C91978 / C91696;
    const double C10046 = C9772 * C1472;
    const double C41343 = C9772 * C5825;
    const double C20362 = C20350 * C1386;
    const double C20354 = C20350 * C1387;
    const double C20619 = C20350 * C1468;
    const double C20614 = C20350 * C1469;
    const double C20885 = C20350 * C1534;
    const double C20879 = C20350 * C1535;
    const double C20874 = C20350 * C1536;
    const double C21589 = C20350 * C6008;
    const double C21586 = C20350 * C3565;
    const double C24000 = C20350 * C1472;
    const double C26436 = C20350 * C5818;
    const double C26432 = C20350 * C5824;
    const double C26422 = C20350 * C3413;
    const double C26418 = C20350 * C3409;
    const double C30914 = C20350 * C5825;
    const double C306 = C291 + C292;
    const double C305 = C289 + C290;
    const double C520 = C509 + C510;
    const double C5150 = C5131 + C5132;
    const double C5149 = C5129 + C5130;
    const double C5460 = C5452 + C5453;
    const double C735 = C722 + C723;
    const double C5732 = C5720 + C1328;
    const double C93840 = C93825 / C91701;
    const double C20375 = C93819 * C279;
    const double C20371 = C93819 * C285;
    const double C20365 = C93819 * C284;
    const double C20361 = C93819 * C278;
    const double C20357 = C93819 * C283;
    const double C20353 = C93819 * C277;
    const double C20624 = C93819 * C504;
    const double C20618 = C93819 * C503;
    const double C20613 = C93819 * C502;
    const double C20883 = C93819 * C716;
    const double C20877 = C93819 * C715;
    const double C22692 = C93819 * C954;
    const double C22688 = C93819 * C962;
    const double C22684 = C93819 * C953;
    const double C23007 = C93819 * C1144;
    const double C23003 = C93819 * C1143;
    const double C23672 = C93819 * C1535;
    const double C23664 = C93819 * C1534;
    const double C24003 = C93819 * C1725;
    const double C23999 = C93819 * C1724;
    const double C26439 = C93819 * C956;
    const double C26435 = C93819 * C964;
    const double C26431 = C93819 * C957;
    const double C26421 = C93819 * C963;
    const double C26417 = C93819 * C955;
    const double C26761 = C93819 * C1146;
    const double C26757 = C93819 * C1147;
    const double C26751 = C93819 * C1145;
    const double C27063 = C93819 * C1319;
    const double C30921 = C93819 * C3565;
    const double C30917 = C93819 * C3569;
    const double C58090 = C93819 * C5121;
    const double C58086 = C93819 * C5125;
    const double C58327 = C93819 * C5448;
    const double C61466 = C93819 * C6008;
    const double C61462 = C93819 * C6014;
    const double C9770 =
        (((0 - (C91763 * C91804) / C91696) * ae) / C91696 - (0 * be) / C91711) /
            C91702 +
        ((C91763 * (((C93673 - (C91763 * 2 * C91806) / C91696) * ae) / C91696 -
                    C91804 / C91711) +
          C93819) *
         ae) /
            C91696 +
        (0 * ae) / C91696 - C91806 / C91701;
    const double C9795 = C9602 * C1534;
    const double C9777 = C9602 * C1535;
    const double C10051 = C9602 * C1724;
    const double C10045 = C9602 * C1725;
    const double C13591 = C9602 * C1728;
    const double C41354 = C9602 * C6008;
    const double C41348 = C9602 * C6014;
    const double C41342 = C9602 * C3569;
    const double C41336 = C9602 * C3565;
    const double C44957 = C9602 * C6015;
    const double C9794 = C9771 * C1386;
    const double C9776 = C9771 * C1387;
    const double C10050 = C9771 * C1468;
    const double C10044 = C9771 * C1469;
    const double C10319 = C9771 * C1534;
    const double C10310 = C9771 * C1535;
    const double C10304 = C9771 * C1536;
    const double C11024 = C9771 * C6008;
    const double C11021 = C9771 * C3565;
    const double C13590 = C9771 * C1472;
    const double C41353 = C9771 * C5818;
    const double C41347 = C9771 * C5824;
    const double C41341 = C9771 * C3413;
    const double C41335 = C9771 * C3409;
    const double C44956 = C9771 * C5825;
    const double C93841 = C93827 / C91696;
    const double C82258 = C81840 * C1728;
    const double C87678 = C81840 * C6015;
    const double C62191 = -C93839;
    const double C9797 = C9601 * C278;
    const double C9791 = C9601 * C284;
    const double C9781 = C9601 * C283;
    const double C9775 = C9601 * C277;
    const double C10053 = C9601 * C503;
    const double C10043 = C9601 * C502;
    const double C10323 = C9601 * C716;
    const double C10308 = C9601 * C715;
    const double C12262 = C9601 * C954;
    const double C12256 = C9601 * C962;
    const double C12582 = C9601 * C1144;
    const double C13255 = C9601 * C1535;
    const double C13593 = C9601 * C1725;
    const double C41356 = C9601 * C956;
    const double C41350 = C9601 * C964;
    const double C41340 = C9601 * C963;
    const double C41334 = C9601 * C955;
    const double C41620 = C9601 * C1146;
    const double C41610 = C9601 * C1145;
    const double C41868 = C9601 * C1319;
    const double C44965 = C9601 * C3565;
    const double C44959 = C9601 * C3569;
    const double C92024 = ae * C92023;
    const double C116 =
        (C92010 * C92008 * C92017 + C92009 * C92023 + C92009 * C92012 * ae) /
        C91696;
    const double C814 = (C92124 * C92023) / C91696;
    const double C1395 = (C92167 * C92023) / C91696;
    const double C5152 = C5137 + C5138;
    const double C11255 = C11240 + C11241;
    const double C8862 = C8856 + C8857;
    const double C14161 = C14150 + C14151;
    const double C92384 = C92383 + C92035;
    const double C92518 = C92517 + C92035;
    const double C3999 = C275 * C3566;
    const double C7866 = C93673 * C3566;
    const double C8398 = C4177 * C3566;
    const double C11018 = C9771 * C3566;
    const double C12260 = C9602 * C3566;
    const double C12787 = C188 * C3566;
    const double C19069 = C15093 * C3566;
    const double C21584 = C20350 * C3566;
    const double C22690 = C93737 * C3566;
    const double C29705 = C93819 * C3566;
    const double C64678 = C93737 * C3566;
    const double C4184 = C4178 * C809;
    const double C4290 = C275 * C809;
    const double C4829 = C713 * C809;
    const double C6749 = C4177 * C809;
    const double C17435 = C15093 * C809;
    const double C9685 = C188 * C1390;
    const double C9778 = C9772 * C1390;
    const double C9958 = C418 * C1390;
    const double C13252 = C9771 * C1390;
    const double C23669 = C20350 * C1390;
    const double C7749 = C4177 * C3410;
    const double C7865 = C275 * C3410;
    const double C8506 = C713 * C3410;
    const double C12145 = C188 * C3410;
    const double C12259 = C9771 * C3410;
    const double C12469 = C418 * C3410;
    const double C18426 = C15093 * C3410;
    const double C22689 = C20350 * C3410;
    const double C5143 = C275 * C4916;
    const double C5724 = C713 * C4916;
    const double C6747 = C4178 * C4916;
    const double C7747 = C4178 * C5817;
    const double C7861 = C275 * C5817;
    const double C8504 = C713 * C5817;
    const double C26428 = C20350 * C5817;
    const double C28344 = C15093 * C5817;
    const double C11246 = C188 * C11102;
    const double C11556 = C418 * C11102;
    const double C13250 = C9772 * C11102;
    const double C92041 = ae * C92039;
    const double C92040 = C92009 * C92039;
    const double C92050 = 2 * C92039;
    const double C92331 = C92124 * C92039;
    const double C92433 = C92167 * C92039;
    const double C817 = (C92023 + C92039 * C92232) / C91696;
    const double C1398 = (C92023 + C92039 * C92306) / C91696;
    const double C92657 = ae * C92654;
    const double C92656 = C92124 * C92654;
    const double C92664 = 2 * C92654;
    const double C92770 = C92167 * C92654;
    const double C92956 = ae * C92953;
    const double C92955 = C92167 * C92953;
    const double C92963 = 2 * C92953;
    const double C31335 = C93737 * C6267;
    const double C41614 = C9603 * C6267;
    const double C45302 = C9602 * C6267;
    const double C71918 = C93737 * C6267;
    const double C87932 = C81840 * C6267;
    const double C822 =
        (2 * ae * C92124 * C92021 + C92009 * C92124 * C92038) / C91701;
    const double C824 =
        ((C92012 + C92013 * C92014 * C92018) * C92016 + C92038 * C92232) /
        C91701;
    const double C1403 =
        (2 * ae * C92167 * C92021 + C92009 * C92167 * C92038) / C91701;
    const double C1405 =
        ((C92012 + C92013 * C92014 * C92018) * C92016 + C92038 * C92306) /
        C91701;
    const double C3417 = (C92167 * C92124 * C92038) / C91701;
    const double C422 =
        (2 * C92009 * C92237 +
         C92009 *
             (C92237 + (C92047 + C92232 * C92048 * C92049) * C92016 * C92013)) /
        C91701;
    const double C1078 =
        (2 * ae * C92009 * C92130 + C92124 * C92009 * C92237) / C91701;
    const double C1659 = (C92167 * C92009 * C92237) / C91701;
    const double C1661 =
        ((C92012 + C92232 * C92014 * C92018) * C92016 + C92237 * C92306) /
        C91701;
    const double C3709 =
        (2 * ae * C92167 * C92130 + C92124 * C92167 * C92237) / C91701;
    const double C717 =
        (2 * C92009 * C92311 +
         C92009 *
             (C92311 + (C92047 + C92306 * C92048 * C92049) * C92016 * C92013)) /
        C91701;
    const double C1318 = (C92124 * C92009 * C92311) / C91701;
    const double C1320 =
        ((C92012 + C92306 * C92014 * C92018) * C92016 + C92311 * C92232) /
        C91701;
    const double C1899 =
        (2 * ae * C92009 * C92173 + C92167 * C92009 * C92311) / C91701;
    const double C3993 =
        (2 * ae * C92124 * C92173 + C92167 * C92124 * C92311) / C91701;
    const double C92804 = C92803 + C92655;
    const double C6266 =
        (ae * C92130 + C92167 * C92257 + ae * (C92167 * C92709 + C92655) +
         C92124 * (ae * (C92167 * C92178 + C92031) +
                   C92124 * (C92138 + C92167 * C92260))) /
        C91701;
    const double C14154 = C188 * C5819;
    const double C14485 = C418 * C5819;
    const double C27312 = C15093 * C5819;
    const double C30918 = C20350 * C5819;
    const double C41337 = C9772 * C5819;
    const double C44962 = C9771 * C5819;
    const double C68838 = C4177 * C5819;
    const double C44960 = C9772 * C14027;
    const double C75079 = C188 * C14027;
    const double C75293 = C418 * C14027;
    const double C88366 = C15093 * C14027;
    const double C92381 = ae * C92380;
    const double C890 =
        (C92010 * C92008 * C92127 + C92124 * C92380 + C92124 * C92012 * ae) /
        C91696;
    const double C3491 = (C92167 * C92380) / C91696;
    const double C5923 = (C92380 + C92654 * C92306) / C91696;
    const double C220 = C206 + C207;
    const double C441 = C430 + C431;
    const double C521 = C512 + C513;
    const double C222 = C210 + C211;
    const double C442 = C433 + C434;
    const double C522 = C515 + C516;
    const double C2305 = C2299 + C1086;
    const double C2074 = C2065 + C2066;
    const double C2306 = C2301 + C1087;
    const double C2076 = C2069 + C2070;
    const double C3019 = C3013 + C1667;
    const double C2788 = C2779 + C2780;
    const double C3020 = C3015 + C1668;
    const double C2790 = C2783 + C2784;
    const double C3105 = C3100 + C3101;
    const double C11565 = C11553 + C1670;
    const double C11254 = C11238 + C11239;
    const double C11259 = C11250 + C11251;
    const double C11567 = C11559 + C11560;
    const double C92515 = ae * C92514;
    const double C1537 =
        (C92010 * C92008 * C92170 + C92167 * C92514 + C92167 * C92012 * ae) /
        C91696;
    const double C2391 = C2386 + C2387;
    const double C307 = C293 + C294;
    const double C655 = C646 + C647;
    const double C736 = C725 + C726;
    const double C309 = C297 + C298;
    const double C656 = C649 + C650;
    const double C737 = C728 + C729;
    const double C2619 = C2613 + C1326;
    const double C2160 = C2151 + C2152;
    const double C2620 = C2615 + C1327;
    const double C2162 = C2155 + C2156;
    const double C2540 = C2535 + C2536;
    const double C5733 = C5722 + C1329;
    const double C5151 = C5135 + C5136;
    const double C3333 = C3327 + C1907;
    const double C2874 = C2865 + C2866;
    const double C3334 = C3329 + C1908;
    const double C2876 = C2869 + C2870;
    const double C3254 = C3249 + C3250;
    const double C9523 = C9518 + C3998;
    const double C8863 = C8858 + C8859;
    const double C5156 = C5147 + C5148;
    const double C5735 = C5727 + C5728;
    const double C9522 = C9516 + C6513;
    const double C8861 = C8852 + C8853;
    const double C92068 = ae * C92065;
    const double C92067 = C92009 * C92065;
    const double C92084 = 2 * C92065;
    const double C92327 = C92124 * C92065;
    const double C92338 = C92065 * C92232;
    const double C92429 = C92167 * C92065;
    const double C92440 = C92065 * C92306;
    const double C93092 = C92124 * C93090;
    const double C93103 = C92124 * C93102;
    const double C93296 = C92167 * C93294;
    const double C93310 = C92167 * C93309;
    const double C92539 = 2 * C92534;
    const double C93086 = C92141 + C92534;
    const double C93100 = C92218 + C92534;
    const double C93224 = C92534 + C93222;
    const double C93236 = C92534 + C93235;
    const double C14267 =
        (2 * (ae * C92620 + C92167 * C93045) + ae * (C92620 + C92529 * C92306) +
         C92167 * (C93045 + ae * C92167 * C92529 +
                   C92167 * (C92534 + C92167 * C92124 * C92196))) /
        C91701;
    const double C14695 =
        (2 * (ae * C92620 + C92167 * C93055) + ae * (C92620 + C92529 * C92306) +
         C92167 * (C93055 + ae * C92167 * C92529 +
                   C92167 * (C92534 + C92167 * C92124 * C92282))) /
        C91701;
    const double C41448 = C93582 * C6097;
    const double C42284 = C93582 * C14029;
    const double C44954 = C9772 * C14029;
    const double C75081 = C188 * C14029;
    const double C88362 = C15093 * C14029;
    const double C92560 = 2 * C92555;
    const double C93198 = C92555 + C93197;
    const double C93290 = C92184 + C92555;
    const double C93307 = C92276 + C92555;
    const double C6017 =
        (C92177 + C92184 * C92232 + ae * C92167 * C92624 +
         C92167 * (ae * C92624 + C92167 * (C92184 + C92196 * C92232))) /
        C91701;
    const double C6349 =
        (C92273 + C92276 * C92232 + ae * C92167 * C92624 +
         C92167 * (ae * C92624 + C92167 * (C92276 + C92282 * C92232))) /
        C91701;
    const double C8845 =
        (ae * (2 * C92620 + C92124 * C92624) +
         C92167 * (2 * C92124 * C92184 + C92124 * (C92184 + C92196 * C92232))) /
        C91701;
    const double C8965 =
        (2 * (ae * C92167 * C92034 + C92124 * C92860) + ae * C92167 * C92624 +
         C92124 * (C92860 + ae * C92167 * C92529 +
                   C92124 * (C92555 + C92124 * C92167 * C92224))) /
        C91701;
    const double C9301 =
        (ae * (2 * C92620 + C92124 * C92624) +
         C92167 * (2 * C92124 * C92276 + C92124 * (C92276 + C92282 * C92232))) /
        C91701;
    const double C44952 =
        (2 * (ae * C92624 + C92167 * C93098) + ae * (C92624 + C93091 * C92306) +
         C92167 * (C93098 + ae * C92167 * C93091 +
                   C92167 * (ae * C93091 +
                             C92167 * (C92196 + std::pow(C92015, 7) * bs[7] *
                                                    C92171 * C92232)))) /
        C91701;
    const double C45405 =
        (2 * (ae * C92624 + C92167 * C93153) + ae * (C92624 + C93091 * C92306) +
         C92167 * (C93153 + ae * C92167 * C93091 +
                   C92167 * (ae * C93091 +
                             C92167 * (C92282 + std::pow(C92015, 7) * bs[7] *
                                                    C92270 * C92232)))) /
        C91701;
    const double C4922 = (3 * (C92021 + C92034 * C92232) +
                          C92124 * (2 * C92620 + C92124 * C92624)) /
                         C91696;
    const double C5827 = (C92021 + C92034 * C92232 + C92624 * C92306) / C91696;
    const double C8617 = (C92167 * (2 * C92620 + C92124 * C92624)) / C91696;
    const double C44723 =
        (2 * C92167 * C92624 + C92167 * (C92624 + C93091 * C92306)) / C91696;
    const double C14367 =
        (ae * (2 * C92898 + C92167 * C92902) +
         C92124 * (2 * C92860 + C92167 * (C92218 + C92224 * C92306))) /
        C91701;
    const double C38215 =
        (2 * (ae * C92902 + C92124 * C93168) + ae * (C92624 + C93091 * C92306) +
         C92124 * (C93168 + ae * (C92529 + C92124 * C92094 * C92306) +
                   C92124 * (ae * (C92058 + C92094 * C92306) +
                             C92124 * (C92224 + std::pow(C92015, 7) * bs[7] *
                                                    C92212 * C92306)))) /
        C91701;
    const double C42267 =
        (ae * (3 * C92902 +
               C92167 * (2 * C92550 + C92167 * (C92058 + C92094 * C92306))) +
         C92124 * (3 * C93168 +
                   C92167 * (2 * C93196 +
                             C92167 * (C92224 + std::pow(C92015, 7) * bs[7] *
                                                    C92212 * C92306)))) /
        C91701;
    const double C11108 = (3 * (C92021 + C92034 * C92306) +
                           C92167 * (2 * C92898 + C92167 * C92902)) /
                          C91696;
    const double C92066 = C92009 * C92064;
    const double C92325 = C92124 * C92064;
    const double C92427 = C92167 * C92064;
    const double C825 = (2 * ae * (C92021 + C92034 * C92232) +
                         C92009 * (C92038 + C92064 * C92232)) /
                        C91701;
    const double C1406 = (2 * ae * (C92021 + C92034 * C92306) +
                          C92009 * (C92038 + C92064 * C92306)) /
                         C91701;
    const double C4925 =
        (2 * C92124 * C92038 + C92124 * (C92038 + C92064 * C92232)) / C91701;
    const double C5830 = (C92167 * (C92038 + C92064 * C92232)) / C91701;
    const double C11111 =
        (2 * C92167 * C92038 + C92167 * (C92038 + C92064 * C92306)) / C91701;
    const double C92100 = C92009 * C92096;
    const double C92099 = C92096 * ae;
    const double C92828 = C92124 * C92096;
    const double C93032 = C92167 * C92096;
    const double C6615 =
        2 * C92124 * C92060 + C92124 * (C92060 + C92096 * C92232);
    const double C7631 = C92167 * (C92060 + C92096 * C92232);
    const double C13010 =
        2 * C92167 * C92060 + C92167 * (C92060 + C92096 * C92306);
    const double C92694 = C92690 + C92095;
    const double C92989 = C92985 + C92095;
    const double C92692 = C92055 + C92688;
    const double C92691 = C92687 * ae;
    const double C93075 = C92167 * C92687;
    const double C14028 =
        2 * C92167 * C92643 + C92167 * (C92643 + C92687 * C92306);
    const double C92991 = C92055 + C92987;
    const double C92990 = C92986 * ae;
    const double C92107 = ae * C92102;
    const double C92105 = C92009 * C92102;
    const double C92344 = C92102 * C92232;
    const double C92446 = C92102 * C92306;
    const double C92533 = C92124 * C92102;
    const double C92554 = C92167 * C92102;
    const double C93124 = ae * C93117;
    const double C93121 = C92124 * C93117;
    const double C93172 = C93117 * C92306;
    const double C93204 = C92167 * C93117;
    const double C93337 = ae * C93331;
    const double C93335 = C92167 * C93331;
    const double C92104 = C92009 * C92101;
    const double C92342 = C92101 * C92232;
    const double C92444 = C92101 * C92306;
    const double C92530 = C92124 * C92101;
    const double C92551 = C92167 * C92101;
    const double C92248 = C92247 * C92013;
    const double C92684 = C92009 * C92247;
    const double C93108 = C92124 * C92247;
    const double C93170 = C92247 * C92306;
    const double C93201 = C92167 * C92247;
    const double C92322 = C92321 * C92013;
    const double C92741 = C92009 * C92321;
    const double C93161 = C92321 * C92232;
    const double C93242 = C92124 * C92321;
    const double C93321 = C92167 * C92321;
    const double C93123 = C92124 * C93119;
    const double C93122 = C93119 * ae;
    const double C93277 = C92167 * C93119;
    const double C44722 =
        2 * C92167 * C92671 + C92167 * (C92671 + C93119 * C92306);
    const double C93252 = C93248 + C93118;
    const double C93250 = C92666 + C93246;
    const double C93249 = C93245 * ae;
    const double C93328 = C92167 * C93231;
    const double C93326 = C93231 * ae;
    const double C92387 = C92124 * C92146;
    const double C1723 = (ae * (2 * C92137 + C92009 * C92146) +
                          C92167 * (2 * C92009 * C92260 + C92009 * C92265)) /
                         C91701;
    const double C1729 = (C92257 + C92260 * C92013 + ae * C92167 * C92146 +
                          C92167 * (ae * C92146 + C92167 * C92265)) /
                         C91701;
    const double C1839 = (ae * (2 * C92137 + C92009 * C92146) +
                          C92167 * (2 * C92009 * C92297 + C92009 * C92302)) /
                         C91701;
    const double C1845 = (C92294 + C92297 * C92013 + ae * C92167 * C92146 +
                          C92167 * (ae * C92146 + C92167 * C92302)) /
                         C91701;
    const double C13586 =
        (2 * (ae * C92146 + C92167 * C92265) + ae * (C92146 + C92160 * C92306) +
         C92167 * (C92265 + ae * C92167 * C92160 +
                   C92167 * (ae * C92160 +
                             C92167 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C13805 =
        (2 * (ae * C92146 + C92167 * C92302) + ae * (C92146 + C92160 * C92306) +
         C92167 * (C92302 + ae * C92167 * C92160 +
                   C92167 * (ae * C92160 +
                             C92167 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C193 = (3 * (C92130 + C92135 * C92013) +
                         C92009 * (2 * C92137 + C92009 * C92146)) /
                        C91696;
    const double C886 = (C92124 * (2 * C92137 + C92009 * C92146) +
                         (2 * C92032 + C92009 * C92060) * ae) /
                        C91696;
    const double C1467 = (C92167 * (2 * C92137 + C92009 * C92146)) / C91696;
    const double C1473 = (C92130 + C92135 * C92013 + C92146 * C92306) / C91696;
    const double C13133 =
        (2 * C92167 * C92146 + C92167 * (C92146 + C92160 * C92306)) / C91696;
    const double C92161 = C92009 * C92159;
    const double C92626 = C92124 * C92159;
    const double C92227 = C92009 * C92226;
    const double C92638 = C92124 * C92226;
    const double C92862 = C92167 * C92226;
    const double C93184 = C92167 * C93182;
    const double C93211 = C92124 * C93182;
    const double C93316 = C92167 * C93315;
    const double C92156 = C92141 + C92152;
    const double C92222 = C92218 + C92152;
    const double C92683 = 2 * C92152;
    const double C92880 = C92152 + C92879;
    const double C92939 = C92152 + C92938;
    const double C6269 = (ae * (C92180 + C92167 * (C92167 * C92191 + C92059) +
                                C92167 * C92055 * ae) +
                          C92124 * (C92706 + ae * C92167 * C92148 +
                                    C92167 * (C92152 + C92167 * C92716))) /
                         C91701;
    const double C92644 = C92642 + C92059;
    const double C11829 =
        (2 * (ae * C92137 + C92167 * C92727) + ae * (C92137 + C92148 * C92306) +
         C92167 *
             (C92727 + ae * C92921 + C92167 * (C92152 + C92167 * C92733))) /
        C91701;
    const double C11247 = C93662 * C11223;
    const double C11557 = C188 * C11223;
    const double C13588 = C9772 * C11223;
    const double C92674 = ae * C92669;
    const double C92672 = C92124 * C92669;
    const double C92774 = C92669 * C92306;
    const double C92866 = C92167 * C92669;
    const double C93110 = 2 * C92669;
    const double C11225 = (3 * (C92130 + C92135 * C92306) +
                           C92167 * (2 * C92917 + C92167 * C92919)) /
                          C91696;
    const double C93183 = C92260 + C93181;
    const double C93200 = 2 * C93181;
    const double C93313 = C92297 + C93181;
    const double C199 =
        (3 * (C92134 + ae * C92137 + C92009 * C92145) +
         ae * (2 * C92137 + C92009 * C92146) +
         C92009 * (2 * C92145 + ae * C92146 +
                   C92009 * (C92141 + ae * C92009 * C92142 +
                             C92009 * (ae * C92142 +
                                       C92009 * C92082 * C92081 * C92128)))) /
        C91701;
    const double C1476 =
        (C92167 * (C92134 + ae * C92137 + C92009 * C92145)) / C91701;
    const double C1480 =
        (ae * C92130 + C92009 * C92134 + C92145 * C92306) / C91701;
    const double C11227 =
        (2 * C92167 * C92145 + C92167 * (C92145 + C92159 * C92306)) / C91701;
    const double C11230 =
        (3 * (C92145 + C92159 * C92306) +
         C92167 *
             (2 * C92167 * C92159 +
              C92167 * (C92159 + (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92128) *
                                     C92306))) /
        C91701;
    const double C5044 =
        (3 * (C92134 + ae * C92620 + C92124 * C92623) +
         ae * (2 * C92620 + C92124 * C92624) +
         C92124 * (2 * C92623 + ae * C92624 +
                   C92124 * (C92141 + C92534 +
                             C92124 * (C92079 + C92124 * C92153)))) /
        C91701;
    const double C5928 =
        (C92167 * (C92134 + ae * C92620 + C92124 * C92623)) / C91701;
    const double C5929 =
        (ae * C92021 + C92124 * C92134 + C92623 * C92306) / C91701;
    const double C5930 =
        (C92134 + ae * C92620 + C92124 * C92623 +
         (C92141 + C92534 + C92124 * (C92079 + C92124 * C92153)) * C92306) /
        C91701;
    const double C8743 =
        (C92167 *
         (2 * C92623 + ae * C92624 +
          C92124 * (C92141 + C92534 + C92124 * (C92079 + C92124 * C92153)))) /
        C91701;
    const double C14145 =
        (2 * C92167 * C92623 +
         C92167 * (C92623 + (C92079 + C92124 * C92153) * C92306)) /
        C91701;
    const double C42075 =
        (3 * (C92623 + C93090 * C92306) +
         C92167 *
             (2 * C92167 * C93090 +
              C92167 * (C93090 + (ae * C92094 + C92124 * std::pow(C92015, 7) *
                                                    bs[7] * C92128) *
                                     C92306))) /
        C91701;
    const double C11258 = C11248 + C11249;
    const double C92521 = C92167 * C92189;
    const double C1142 = (ae * (2 * C92180 + C92009 * C92189) +
                          C92124 * (2 * C92009 * C92260 + C92009 * C92265)) /
                         C91701;
    const double C1148 = (C92257 + C92260 * C92013 + ae * C92124 * C92189 +
                          C92124 * (ae * C92189 + C92124 * C92265)) /
                         C91701;
    const double C1258 = (ae * (2 * C92180 + C92009 * C92189) +
                          C92124 * (2 * C92009 * C92297 + C92009 * C92302)) /
                         C91701;
    const double C1264 = (C92294 + C92297 * C92013 + ae * C92124 * C92189 +
                          C92124 * (ae * C92189 + C92124 * C92302)) /
                         C91701;
    const double C7204 =
        (2 * (ae * C92189 + C92124 * C92265) + ae * (C92189 + C92203 * C92232) +
         C92124 * (C92265 + ae * C92124 * C92203 +
                   C92124 * (ae * C92203 +
                             C92124 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C7420 =
        (2 * (ae * C92189 + C92124 * C92302) + ae * (C92189 + C92203 * C92232) +
         C92124 * (C92302 + ae * C92124 * C92203 +
                   C92124 * (ae * C92203 +
                             C92124 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C280 = (3 * (C92173 + C92178 * C92013) +
                         C92009 * (2 * C92180 + C92009 * C92189)) /
                        C91696;
    const double C952 = (C92124 * (2 * C92180 + C92009 * C92189)) / C91696;
    const double C958 = (C92173 + C92178 * C92013 + C92189 * C92232) / C91696;
    const double C1533 = (C92167 * (2 * C92180 + C92009 * C92189) +
                          (2 * C92032 + C92009 * C92060) * ae) /
                         C91696;
    const double C3567 =
        (C92167 * C92124 * C92189 + C92124 * C92060 * ae) / C91696;
    const double C6856 =
        (2 * C92124 * C92189 + C92124 * (C92189 + C92203 * C92232)) / C91696;
    const double C7856 = (C92167 * (C92189 + C92203 * C92232) +
                          (C92060 + C92096 * C92232) * ae) /
                         C91696;
    const double C92204 = C92009 * C92202;
    const double C92904 = C92167 * C92202;
    const double C93047 = C92124 * C92202;
    const double C92285 = C92009 * C92284;
    const double C92930 = C92167 * C92284;
    const double C93057 = C92124 * C92284;
    const double C93147 = C92124 * C93145;
    const double C93158 = C92124 * C93157;
    const double C93238 = C92167 * C93157;
    const double C92199 = C92184 + C92195;
    const double C92280 = C92276 + C92195;
    const double C92720 = C92195 + C92718;
    const double C92735 = C92195 + C92734;
    const double C92982 = 2 * C92195;
    const double C5447 =
        (2 * (ae * C92180 + C92124 * C92706) + ae * (C92180 + C92191 * C92232) +
         C92124 * (C92706 + ae * C92124 * C92191 +
                   C92124 * (C92195 + C92124 * C92009 * C92263))) /
        C91701;
    const double C92811 = C92167 * C92715;
    const double C5637 =
        (2 * (ae * C92180 + C92124 * C92727) + ae * (C92180 + C92191 * C92232) +
         C92124 * (C92727 + ae * C92715 +
                   C92124 * (C92195 + C92124 * C92009 * C92300))) /
        C91701;
    const double C92943 = C92941 + C92059;
    const double C5144 = C93673 * C5120;
    const double C5725 = C275 * C5120;
    const double C7422 = C4178 * C5120;
    const double C6512 = C275 * C6007;
    const double C7862 = C93673 * C6007;
    const double C8396 = C4178 * C6007;
    const double C11027 = C9771 * C6007;
    const double C21591 = C20350 * C6007;
    const double C26429 = C93737 * C6007;
    const double C29166 = C15093 * C6007;
    const double C69742 = C93737 * C6007;
    const double C92807 = C92167 * C92713;
    const double C5122 = (3 * (C92173 + C92178 * C92232) +
                          C92124 * (2 * C92709 + C92124 * C92713)) /
                         C91696;
    const double C8843 = (C92167 * (2 * C92709 + C92124 * C92713) +
                          (2 * C92653 + C92124 * C92671) * ae) /
                         C91696;
    const double C92973 = ae * C92968;
    const double C92971 = C92167 * C92968;
    const double C93323 = 2 * C92968;
    const double C93066 = C93064 + C92670;
    const double C93144 = C92260 + C93140;
    const double C93155 = C92297 + C93140;
    const double C93241 = 2 * C93140;
    const double C286 =
        (3 * (C92177 + ae * C92180 + C92009 * C92188) +
         ae * (2 * C92180 + C92009 * C92189) +
         C92009 * (2 * C92188 + ae * C92189 +
                   C92009 * (C92184 + ae * C92009 * C92185 +
                             C92009 * (ae * C92185 +
                                       C92009 * C92082 * C92081 * C92171)))) /
        C91701;
    const double C961 =
        (C92124 * (C92177 + ae * C92180 + C92009 * C92188)) / C91701;
    const double C965 =
        (ae * C92173 + C92009 * C92177 + C92188 * C92232) / C91701;
    const double C5124 =
        (2 * C92124 * C92188 + C92124 * (C92188 + C92202 * C92232)) / C91701;
    const double C5127 =
        (3 * (C92188 + C92202 * C92232) +
         C92124 *
             (2 * C92124 * C92202 +
              C92124 * (C92202 + (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171) *
                                     C92232))) /
        C91701;
    const double C11350 =
        (3 * (C92177 + ae * C92898 + C92167 * C92901) +
         ae * (2 * C92898 + C92167 * C92902) +
         C92167 * (2 * C92901 + ae * C92902 +
                   C92167 * (C92184 + C92555 +
                             C92167 * (C92079 + C92167 * C92196)))) /
        C91701;
    const double C5155 = C5145 + C5146;
    const double C8860 = C8850 + C8851;
    const double C366 =
        (3 * (C92215 + ae * C92137 + C92009 * C92220) +
         ae * (2 * C92137 + C92009 * C92146) +
         C92009 * (2 * C92220 + ae * C92146 +
                   C92009 * (C92218 + C92152 +
                             C92009 * (C92149 +
                                       C92009 * C92082 * C92081 * C92212)))) /
        C91701;
    const double C1600 =
        (C92167 * (C92215 + ae * C92137 + C92009 * C92220)) / C91701;
    const double C1604 =
        (ae * C92130 + C92009 * C92215 + C92220 * C92306) / C91701;
    const double C11426 =
        (2 * C92167 * C92220 + C92167 * (C92220 + C92226 * C92306)) / C91701;
    const double C5243 =
        (3 * (C92215 + ae * C92620 + C92124 * C92636) +
         ae * (2 * C92620 + C92124 * C92624) +
         C92124 * (2 * C92636 + ae * C92624 +
                   C92124 * (C92218 + C92534 +
                             C92124 * (C92079 + C92124 * C92224)))) /
        C91701;
    const double C73429 = C93582 * C11428;
    const double C92641 = C92009 * C92242;
    const double C92663 = C92124 * C92242;
    const double C92864 = C92167 * C92242;
    const double C423 =
        (3 * (C92237 + C92242 * C92013) +
         C92009 * (2 * C92009 * C92242 +
                   C92009 * (C92242 + (C92080 + C92232 * C92081 * C92082) *
                                          C92016 * C92013))) /
        C91701;
    const double C1077 = (2 * ae * (C92130 + C92135 * C92013) +
                          C92124 * (C92237 + C92242 * C92013)) /
                         C91701;
    const double C1658 = (C92167 * (C92237 + C92242 * C92013)) / C91701;
    const double C1662 = (C92009 * C92237 + C92009 * C92242 * C92306) / C91701;
    const double C3710 =
        (2 * ae * C92167 * C92137 + C92124 * C92167 * C92009 * C92242) / C91701;
    const double C6175 = (2 * ae * (C92130 + C92135 * C92306) +
                          C92124 * (C92237 + C92242 * C92306)) /
                         C91701;
    const double C11546 =
        (2 * C92167 * C92237 + C92167 * (C92237 + C92242 * C92306)) / C91701;
    const double C5449 =
        (3 * (C92257 + ae * C92709 + C92124 * C92712) +
         ae * (2 * C92709 + C92124 * C92713) +
         C92124 * (2 * C92712 + ae * C92713 +
                   C92124 * (C92260 + ae * C92124 * C92185 +
                             C92124 * (C92192 + C92124 * C92263)))) /
        C91701;
    const double C11655 =
        (2 * (ae * C92130 + C92167 * C92257) + ae * (C92130 + C92135 * C92306) +
         C92167 * (C92257 + ae * C92167 * C92135 + C92167 * C92877)) /
        C91701;
    const double C11656 =
        (3 * (C92257 + ae * C92917 + C92167 * C92877) +
         ae * (2 * C92917 + C92167 * C92919) +
         C92167 * (2 * C92877 + ae * C92919 +
                   C92167 * (C92260 + ae * C92167 * C92142 +
                             C92167 * (C92149 + C92167 * C92263)))) /
        C91701;
    const double C2390 = C2383 + C2384;
    const double C3104 = C3097 + C3098;
    const double C583 =
        (3 * (C92273 + ae * C92180 + C92009 * C92278) +
         ae * (2 * C92180 + C92009 * C92189) +
         C92009 * (2 * C92278 + ae * C92189 +
                   C92009 * (C92276 + C92195 +
                             C92009 * (C92192 +
                                       C92009 * C92082 * C92081 * C92270)))) /
        C91701;
    const double C1201 =
        (C92124 * (C92273 + ae * C92180 + C92009 * C92278)) / C91701;
    const double C1205 =
        (ae * C92173 + C92009 * C92273 + C92278 * C92232) / C91701;
    const double C5537 =
        (2 * C92124 * C92278 + C92124 * (C92278 + C92284 * C92232)) / C91701;
    const double C5540 =
        (3 * (C92278 + C92284 * C92232) +
         C92124 *
             (2 * C92124 * C92284 +
              C92124 * (C92284 + (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270) *
                                     C92232))) /
        C91701;
    const double C11734 =
        (3 * (C92273 + ae * C92898 + C92167 * C92928) +
         ae * (2 * C92898 + C92167 * C92902) +
         C92167 * (2 * C92928 + ae * C92902 +
                   C92167 * (C92276 + C92555 +
                             C92167 * (C92079 + C92167 * C92282)))) /
        C91701;
    const double C5639 =
        (3 * (C92294 + ae * C92709 + C92124 * C92731) +
         ae * (2 * C92709 + C92124 * C92713) +
         C92124 * (2 * C92731 + ae * C92713 +
                   C92124 * (C92297 + ae * C92124 * C92185 +
                             C92124 * (C92192 + C92124 * C92300)))) /
        C91701;
    const double C11831 =
        (3 * (C92294 + ae * C92917 + C92167 * C92936) +
         ae * (2 * C92917 + C92167 * C92919) +
         C92167 * (2 * C92936 + ae * C92919 +
                   C92167 * (C92297 + ae * C92167 * C92142 +
                             C92167 * (C92149 + C92167 * C92300)))) /
        C91701;
    const double C2539 = C2532 + C2533;
    const double C3253 = C3246 + C3247;
    const double C92737 = C92009 * C92316;
    const double C92962 = C92167 * C92316;
    const double C93061 = C92124 * C92316;
    const double C718 =
        (3 * (C92311 + C92316 * C92013) +
         C92009 * (2 * C92009 * C92316 +
                   C92009 * (C92316 + (C92080 + C92306 * C92081 * C92082) *
                                          C92016 * C92013))) /
        C91701;
    const double C1317 = (C92124 * (C92311 + C92316 * C92013)) / C91701;
    const double C1321 = (C92009 * C92311 + C92009 * C92316 * C92232) / C91701;
    const double C1898 = (2 * ae * (C92173 + C92178 * C92013) +
                          C92167 * (C92311 + C92316 * C92013)) /
                         C91701;
    const double C3994 =
        (2 * ae * C92124 * C92180 + C92167 * C92124 * C92009 * C92316) / C91701;
    const double C5716 =
        (2 * C92124 * C92311 + C92124 * (C92311 + C92316 * C92232)) / C91701;
    const double C5717 =
        (3 * (C92311 + C92316 * C92232) +
         C92124 * (2 * C92124 * C92316 + C92124 * (C92316 + C92321 * C92232))) /
        C91701;
    const double C6506 = (2 * ae * (C92173 + C92178 * C92232) +
                          C92167 * (C92311 + C92316 * C92232)) /
                         C91701;
    const double C9513 =
        (2 * ae * (2 * C92709 + C92124 * C92713) +
         C92167 * (2 * C92124 * C92316 + C92124 * (C92316 + C92321 * C92232))) /
        C91701;
    const double C216 = C188 * C112;
    const double C303 = C275 * C112;
    const double C436 = C418 * C112;
    const double C731 = C713 * C112;
    const double C2061 = C188 * C804;
    const double C2147 = C275 * C804;
    const double C2297 = C418 * C804;
    const double C2611 = C713 * C804;
    const double C15115 = C15093 * C804;
    const double C4198 = C4178 * C810;
    const double C4296 = C275 * C810;
    const double C4831 = C713 * C810;
    const double C17427 = C15093 * C810;
    const double C2775 = C188 * C1385;
    const double C2861 = C275 * C1385;
    const double C3011 = C418 * C1385;
    const double C3325 = C713 * C1385;
    const double C20372 = C20350 * C1385;
    const double C9691 = C188 * C1391;
    const double C9792 = C9772 * C1391;
    const double C9960 = C418 * C1391;
    const double C23661 = C20350 * C1391;
    const double C18418 = C15093 * C3411;
    const double C18538 = C275 * C3411;
    const double C19175 = C713 * C3411;
    const double C22575 = C188 * C3411;
    const double C22681 = C20350 * C3411;
    const double C22897 = C418 * C3411;
    const double C6265 =
        (ae * C92137 + C92167 * C92706 + ae * (C92167 * C92715 + C92645) +
         C92124 * (ae * (C92167 * C92191 + C92059) +
                   C92124 * (C92152 + C92167 * C92716))) /
        C91701;
    const double C12141 = C188 * C5820;
    const double C12257 = C9772 * C5820;
    const double C12467 = C418 * C5820;
    const double C27304 = C15093 * C5820;
    const double C29702 = C20350 * C5820;
    const double C37624 = C275 * C4918;
    const double C37995 = C713 * C4918;
    const double C41351 = C9772 * C5821;
    const double C61463 = C20350 * C5821;
    const double C68836 = C4178 * C5821;
    const double C90916 = C15093 * C5821;
    const double C39965 = C275 * C8615;
    const double C40417 = C713 * C8615;
    const double C58087 = C20350 * C8615;
    const double C71459 = C4178 * C8615;
    const double C41616 = C9603 * C6268;
    const double C61790 = C93737 * C6268;
    const double C71914 = C93737 * C6268;
    const double C87934 = C81840 * C6268;
    const double C73311 = C188 * C11104;
    const double C73492 = C418 * C11104;
    const double C93095 = C93088 + C93093;
    const double C45069 =
        (2 * C92860 + C92167 * C93168 + ae * (2 * C93219 + C92167 * C93225) +
         C92124 * (ae * (2 * C92550 + C92167 * (C92058 + C92094 * C92306)) +
                   C92124 * (2 * C93196 +
                             C92167 * (C92224 + std::pow(C92015, 7) * bs[7] *
                                                    C92212 * C92306)))) /
        C91701;
    const double C41974 = (3 * (C92620 + C92529 * C92306) +
                           C92167 * (2 * C93219 + C92167 * C93225)) /
                          C91696;
    const double C93299 = C93292 + C93297;
    const double C92164 = C92154 + C92162;
    const double C11226 = (3 * (C92137 + C92148 * C92306) +
                           C92167 * (2 * C92921 + C92167 * C92923)) /
                          C91696;
    const double C93305 = C93303 + C93304;
    const double C92207 = C92197 + C92205;
    const double C93015 = C92167 * C93014;
    const double C92815 = C92167 * C92721;
    const double C5123 = (3 * (C92180 + C92191 * C92232) +
                          C92124 * (2 * C92715 + C92124 * C92721)) /
                         C91696;
    const double C93150 = C93142 + C93148;
    const double C45725 = C91722 * C115;
    const double C46821 = C91722 * C4916;
    const double C46811 = C91722 * C809;
    const double C46807 = C91722 * C888;
    const double C46803 = C91722 * C806;
    const double C47082 = C91722 * C5120;
    const double C47080 = C91722 * C957;
    const double C47075 = C91722 * C954;
    const double C48383 = C91722 * C810;
    const double C48379 = C91722 * C887;
    const double C48375 = C91722 * C805;
    const double C48717 = C91722 * C953;
    const double C50311 = C91722 * C3410;
    const double C50303 = C91722 * C5817;
    const double C50627 = C91722 * C3566;
    const double C50623 = C91722 * C6007;
    const double C53047 = C91722 * C1390;
    const double C53043 = C91722 * C1472;
    const double C53039 = C91722 * C5820;
    const double C53033 = C91722 * C1469;
    const double C53029 = C91722 * C1387;
    const double C53359 = C91722 * C1535;
    const double C54115 = C91722 * C3411;
    const double C55341 = C91722 * C1468;
    const double C55337 = C91722 * C1386;
    const double C55741 = C91722 * C1534;
    const double C83558 = C91722 * C11102;
    const double C83554 = C91722 * C11223;
    const double C85330 = C91722 * C1391;
    const double C107 =
        (C91722 / C91702 - (0 * be) / C91696) / C91702 + (0 * ae) / C91696;
    const double C14999 = C91722 / C91702 - (0 * be) / C91696;
    const double C31835 = C91722 / C91702 + (0 * ae) / C91696;
    const double C91724 = C91721 / C91696;
    const double C4086 = C4083 * C115;
    const double C5266 = C4083 * C4916;
    const double C5256 = C4083 * C809;
    const double C5252 = C4083 * C888;
    const double C5248 = C4083 * C806;
    const double C5551 = C4083 * C5120;
    const double C5549 = C4083 * C957;
    const double C5544 = C4083 * C954;
    const double C6976 = C4083 * C810;
    const double C6972 = C4083 * C887;
    const double C6968 = C4083 * C805;
    const double C7313 = C4083 * C953;
    const double C8980 = C4083 * C3410;
    const double C8972 = C4083 * C5817;
    const double C9308 = C4083 * C3566;
    const double C9304 = C4083 * C6007;
    const double C11451 = C4083 * C11102;
    const double C11447 = C4083 * C11223;
    const double C11445 = C4083 * C1472;
    const double C11441 = C4083 * C1390;
    const double C11437 = C4083 * C1469;
    const double C11433 = C4083 * C1387;
    const double C11739 = C4083 * C1535;
    const double C13371 = C4083 * C1391;
    const double C13367 = C4083 * C1468;
    const double C13363 = C4083 * C1386;
    const double C13698 = C4083 * C1534;
    const double C14372 = C4083 * C5820;
    const double C28618 = C4083 * C3411;
    const double C37008 = C36999 * C115;
    const double C37004 = C36999 * C4921;
    const double C37003 = C36999 * C816;
    const double C37002 = C36999 * C815;
    const double C37001 = C36999 * C114;
    const double C37697 = C36999 * C4918;
    const double C37691 = C36999 * C4917;
    const double C37687 = C36999 * C808;
    const double C37685 = C36999 * C889;
    const double C37683 = C36999 * C807;
    const double C37878 = C36999 * C5121;
    const double C37875 = C36999 * C956;
    const double C37872 = C36999 * C955;
    const double C38059 = C36999 * C5825;
    const double C38058 = C36999 * C1397;
    const double C38057 = C36999 * C1396;
    const double C38056 = C36999 * C3413;
    const double C38055 = C36999 * C5824;
    const double C38778 = C36999 * C4916;
    const double C38774 = C36999 * C809;
    const double C38772 = C36999 * C888;
    const double C38770 = C36999 * C806;
    const double C38997 = C36999 * C5120;
    const double C38994 = C36999 * C957;
    const double C38991 = C36999 * C954;
    const double C40052 = C36999 * C3409;
    const double C40048 = C36999 * C5818;
    const double C40044 = C36999 * C8615;
    const double C40274 = C36999 * C3565;
    const double C40271 = C36999 * C6008;
    const double C41449 = C36999 * C5821;
    const double C41443 = C36999 * C5819;
    const double C41985 = C36999 * C11107;
    const double C41982 = C36999 * C14029;
    const double C42287 = C36999 * C11103;
    const double C42285 = C36999 * C11224;
    const double C42283 = C36999 * C14027;
    const double C42277 = C36999 * C1471;
    const double C42275 = C36999 * C1389;
    const double C42271 = C36999 * C1470;
    const double C42269 = C36999 * C1388;
    const double C42569 = C36999 * C1536;
    const double C43163 = C36999 * C5820;
    const double C43159 = C36999 * C3410;
    const double C43470 = C36999 * C3566;
    const double C44099 = C36999 * C1472;
    const double C44097 = C36999 * C1390;
    const double C44093 = C36999 * C1469;
    const double C44091 = C36999 * C1387;
    const double C44417 = C36999 * C1535;
    const double C59748 = C36999 * C5817;
    const double C60055 = C36999 * C6007;
    const double C73430 = C36999 * C11104;
    const double C74597 = C36999 * C11223;
    const double C74595 = C36999 * C11102;
    const double C93842 = C93803 - C93828;
    const double C93843 = C93807 - C93830;
    const double C4930 = C4075 * C823;
    const double C5269 = C4075 * C4921;
    const double C5265 = C4075 * C5242;
    const double C5259 = C4075 * C1022;
    const double C5255 = C4075 * C816;
    const double C5251 = C4075 * C1021;
    const double C5247 = C4075 * C815;
    const double C5554 = C4075 * C5538;
    const double C5548 = C4075 * C1204;
    const double C5543 = C4075 * C1203;
    const double C7312 = C4075 * C1202;
    const double C8983 = C4075 * C3413;
    const double C8979 = C4075 * C3639;
    const double C8975 = C4075 * C5824;
    const double C8971 = C4075 * C6094;
    const double C9311 = C4075 * C3853;
    const double C9307 = C4075 * C6346;
    const double C11116 = C4075 * C1404;
    const double C11454 = C4075 * C11107;
    const double C11450 = C4075 * C11427;
    const double C11444 = C4075 * C1603;
    const double C11440 = C4075 * C1397;
    const double C11436 = C4075 * C1602;
    const double C11432 = C4075 * C1396;
    const double C11748 = C4075 * C11733;
    const double C11742 = C4075 * C1785;
    const double C11738 = C4075 * C1784;
    const double C13366 = C4075 * C1601;
    const double C14375 = C4075 * C6095;
    const double C14371 = C4075 * C5825;
    const double C14699 = C4075 * C6347;
    const double C91790 = C91789 / C91696;
    const double C31951 = C31929 * C804;
    const double C31941 = C31929 * C805;
    const double C31933 = C31929 * C806;
    const double C32205 = C31929 * C887;
    const double C32199 = C31929 * C888;
    const double C32194 = C31929 * C889;
    const double C32478 = C31929 * C953;
    const double C32473 = C31929 * C954;
    const double C34270 = C31929 * C809;
    const double C34262 = C31929 * C810;
    const double C34937 = C31929 * C957;
    const double C35261 = C31929 * C3410;
    const double C35253 = C31929 * C3411;
    const double C35895 = C31929 * C3566;
    const double C42097 = C31929 * C14027;
    const double C42093 = C31929 * C14029;
    const double C42091 = C31929 * C5825;
    const double C42087 = C31929 * C5819;
    const double C42083 = C31929 * C3413;
    const double C42079 = C31929 * C3409;
    const double C42658 = C31929 * C3565;
    const double C43885 = C31929 * C5820;
    const double C44840 = C31929 * C5821;
    const double C44836 = C31929 * C5824;
    const double C44832 = C31929 * C5818;
    const double C45514 = C31929 * C6008;
    const double C53845 = C31929 * C5817;
    const double C54661 = C31929 * C6007;
    const double C37065 =
        (C91893 / C91702 - (0 * be) / C91696) / C91702 + (0 * ae) / C91696;
    const double C45817 = C91893 / C91702 - (0 * be) / C91696;
    const double C4749 = C4739 + C4740;
    const double C15124 = C15105 + C15106;
    const double C15120 = C15097 + C15098;
    const double C15651 = C15642 + C15643;
    const double C15649 = C15637 + C15638;
    const double C18108 = C18102 + C18103;
    const double C27319 = C27298 + C27299;
    const double C642 = C218 * C275;
    const double C658 = C654 * C93673;
    const double C10209 = C654 * C9601;
    const double C20783 = C654 * C93819;
    const double C11261 = C11253 * C4075;
    const double C63770 = C11253 * C31825;
    const double C73304 = C11253 * C93582;
    const double C83390 = C11253 * C93805;
    const double C73303 = C11252 * C36999;
    const double C444 = C440 + C428;
    const double C11568 = C11564 + C1669;
    const double C93844 = C93815 - C93837;
    const double C4202 = C4176 * C110;
    const double C4186 = C4176 * C115;
    const double C4180 = C4176 * C109;
    const double C4474 = C4176 * C192;
    const double C4472 = C4176 * C191;
    const double C4457 = C4176 * C190;
    const double C4453 = C4176 * C189;
    const double C4745 = C4176 * C278;
    const double C4735 = C4176 * C277;
    const double C5367 = C4176 * C889;
    const double C5364 = C4176 * C888;
    const double C6189 = C4176 * C1472;
    const double C6186 = C4176 * C1471;
    const double C6185 = C4176 * C1470;
    const double C6182 = C4176 * C1469;
    const double C6751 = C4176 * C806;
    const double C7095 = C4176 * C887;
    const double C7426 = C4176 * C954;
    const double C7751 = C4176 * C1387;
    const double C8075 = C4176 * C1468;
    const double C8400 = C4176 * C1535;
    const double C68840 = C4176 * C1389;
    const double C68834 = C4176 * C1397;
    const double C68824 = C4176 * C1396;
    const double C68818 = C4176 * C1388;
    const double C69100 = C4176 * C11224;
    const double C69343 = C4176 * C1536;
    const double C71461 = C4176 * C3413;
    const double C71455 = C4176 * C3409;
    const double C72129 = C4176 * C3565;
    const double C4214 = C4200 + C4201;
    const double C4205 = C4182 + C4183;
    const double C4751 = C4743 + C4744;
    const double C4748 = C4737 + C4738;
    const double C7429 = C7424 + C7425;
    const double C68846 = C68826 + C68827;
    const double C93845 = C93822 - C93838;
    const double C31954 = C31828 * C192;
    const double C31950 = C31828 * C198;
    const double C31944 = C31828 * C197;
    const double C31940 = C31828 * C191;
    const double C31936 = C31828 * C196;
    const double C31932 = C31828 * C190;
    const double C32203 = C31828 * C421;
    const double C32197 = C31828 * C420;
    const double C32483 = C31828 * C638;
    const double C32477 = C31828 * C637;
    const double C32472 = C31828 * C636;
    const double C34273 = C31828 * C888;
    const double C34265 = C31828 * C887;
    const double C34940 = C31828 * C1260;
    const double C34936 = C31828 * C1259;
    const double C35264 = C31828 * C1469;
    const double C35260 = C31828 * C1477;
    const double C35256 = C31828 * C1468;
    const double C35898 = C31828 * C1841;
    const double C35894 = C31828 * C1840;
    const double C42100 = C31828 * C11224;
    const double C42096 = C31828 * C11228;
    const double C42090 = C31828 * C1479;
    const double C42086 = C31828 * C1471;
    const double C42082 = C31828 * C1478;
    const double C42078 = C31828 * C1470;
    const double C42384 = C31828 * C1660;
    const double C42667 = C31828 * C11830;
    const double C42661 = C31828 * C1843;
    const double C42657 = C31828 * C1842;
    const double C43884 = C31828 * C1472;
    const double C44522 = C31828 * C1844;
    const double C44835 = C31828 * C3495;
    const double C91816 = C91815 / C91696;
    const double C62367 = C62345 * C1385;
    const double C62357 = C62345 * C1386;
    const double C62349 = C62345 * C1387;
    const double C62614 = C62345 * C1468;
    const double C62609 = C62345 * C1469;
    const double C62880 = C62345 * C1534;
    const double C62874 = C62345 * C1535;
    const double C62869 = C62345 * C1536;
    const double C63585 = C62345 * C6007;
    const double C63583 = C62345 * C6008;
    const double C63580 = C62345 * C3565;
    const double C63578 = C62345 * C3566;
    const double C64677 = C62345 * C3410;
    const double C64669 = C62345 * C3411;
    const double C65649 = C62345 * C1390;
    const double C65641 = C62345 * C1391;
    const double C65980 = C62345 * C1472;
    const double C68133 = C62345 * C8615;
    const double C68127 = C62345 * C5824;
    const double C68123 = C62345 * C5818;
    const double C68119 = C62345 * C3413;
    const double C68115 = C62345 * C3409;
    const double C69741 = C62345 * C5817;
    const double C71583 = C62345 * C5819;
    const double C71579 = C62345 * C5825;
    const double C71575 = C62345 * C5821;
    const double C79791 = C62345 * C5820;
    const double C72415 =
        (C91964 / C91702 - (0 * be) / C91696) / C91702 + (0 * ae) / C91696;
    const double C81993 = C91964 / C91702 - (0 * be) / C91696;
    const double C10056 = C10046 + C10047;
    const double C41362 = C41343 + C41344;
    const double C20381 = C20362 + C20363;
    const double C20377 = C20354 + C20355;
    const double C20628 = C20619 + C20620;
    const double C20626 = C20614 + C20615;
    const double C24006 = C24000 + C24001;
    const double C26450 = C26436 + C26437;
    const double C26448 = C26432 + C26433;
    const double C26443 = C26422 + C26423;
    const double C26441 = C26418 + C26419;
    const double C30922 = C30914 + C30915;
    const double C508 = C305 * C188;
    const double C4569 = C305 * C4176;
    const double C524 = C520 * C93662;
    const double C4570 = C520 * C4077;
    const double C15473 = C520 * C93818;
    const double C32309 = C520 * C31828;
    const double C5158 = C5150 * C4075;
    const double C32833 = C5150 * C31825;
    const double C37617 = C5150 * C93582;
    const double C46713 = C5150 * C93805;
    const double C37616 = C5149 * C36999;
    const double C739 = C735 + C723;
    const double C5736 = C5732 + C1328;
    const double C93846 = C93817 - C93840;
    const double C9796 = C9770 * C110;
    const double C9780 = C9770 * C115;
    const double C9774 = C9770 * C109;
    const double C10052 = C9770 * C191;
    const double C10042 = C9770 * C190;
    const double C10208 = C218 * C9770;
    const double C10324 = C9770 * C279;
    const double C10322 = C9770 * C278;
    const double C10307 = C9770 * C277;
    const double C10303 = C9770 * C276;
    const double C11026 = C9770 * C957;
    const double C11023 = C9770 * C956;
    const double C11022 = C9770 * C955;
    const double C11019 = C9770 * C954;
    const double C11929 = C9770 * C1536;
    const double C11926 = C9770 * C1535;
    const double C12261 = C9770 * C806;
    const double C12581 = C9770 * C888;
    const double C12901 = C9770 * C953;
    const double C13254 = C9770 * C1387;
    const double C13592 = C9770 * C1469;
    const double C13918 = C9770 * C1534;
    const double C14913 = C9770 * C3566;
    const double C14910 = C9770 * C3565;
    const double C41355 = C9770 * C808;
    const double C41349 = C9770 * C816;
    const double C41339 = C9770 * C815;
    const double C41333 = C9770 * C807;
    const double C41609 = C9770 * C889;
    const double C41879 = C9770 * C5121;
    const double C44964 = C9770 * C3409;
    const double C44958 = C9770 * C3413;
    const double C45629 = C9770 * C6008;
    const double C9808 = C9794 + C9795;
    const double C9799 = C9776 + C9777;
    const double C10058 = C10050 + C10051;
    const double C10055 = C10044 + C10045;
    const double C13595 = C13590 + C13591;
    const double C41367 = C41353 + C41354;
    const double C41364 = C41347 + C41348;
    const double C41361 = C41341 + C41342;
    const double C41358 = C41335 + C41336;
    const double C44967 = C44956 + C44957;
    const double C93847 = C93826 - C93841;
    const double C62370 = C62191 * C279;
    const double C62366 = C62191 * C285;
    const double C62360 = C62191 * C284;
    const double C62356 = C62191 * C278;
    const double C62352 = C62191 * C283;
    const double C62348 = C62191 * C277;
    const double C62619 = C62191 * C504;
    const double C62613 = C62191 * C503;
    const double C62608 = C62191 * C502;
    const double C62778 = C654 * C62191;
    const double C62878 = C62191 * C716;
    const double C62872 = C62191 * C715;
    const double C64680 = C62191 * C954;
    const double C64676 = C62191 * C962;
    const double C64672 = C62191 * C953;
    const double C64990 = C62191 * C1144;
    const double C64986 = C62191 * C1143;
    const double C65652 = C62191 * C1535;
    const double C65644 = C62191 * C1534;
    const double C65983 = C62191 * C1725;
    const double C65979 = C62191 * C1724;
    const double C68136 = C62191 * C5121;
    const double C68132 = C62191 * C5125;
    const double C68126 = C62191 * C964;
    const double C68122 = C62191 * C956;
    const double C68118 = C62191 * C963;
    const double C68114 = C62191 * C955;
    const double C68390 = C62191 * C5448;
    const double C68384 = C62191 * C1146;
    const double C68380 = C62191 * C1145;
    const double C68636 = C62191 * C1319;
    const double C69740 = C62191 * C957;
    const double C70046 = C62191 * C1147;
    const double C71586 = C62191 * C3565;
    const double C71582 = C62191 * C3569;
    const double C71578 = C62191 * C6008;
    const double C71574 = C62191 * C6014;
    const double C79794 = C62191 * C3566;
    const double C122 =
        ((C92012 + C92013 * C92014 * C92018) * C92016 + C92024 + C92024 +
         C92009 *
             (2 * ae * C92021 +
              C92009 *
                  (C92014 * C92018 + C92013 * bs[4] * std::pow(C92007, 4)) *
                  C92016)) /
        C91701;
    const double C896 =
        (C92024 + C92124 * (ae * C92130 + C92009 * C92134)) / C91701;
    const double C1020 =
        (C92024 + C92124 * (ae * C92130 + C92009 * C92215)) / C91701;
    const double C1543 =
        (C92024 + C92167 * (ae * C92173 + C92009 * C92177)) / C91701;
    const double C1783 =
        (C92024 + C92167 * (ae * C92173 + C92009 * C92273)) / C91701;
    const double C208 = C188 * C116;
    const double C295 = C275 * C116;
    const double C4095 = C4083 * C116;
    const double C4196 = C4176 * C116;
    const double C9790 = C9770 * C116;
    const double C37009 = C36999 * C116;
    const double C45734 = C91722 * C116;
    const double C2067 = C188 * C814;
    const double C2153 = C275 * C814;
    const double C4088 = C4083 * C814;
    const double C4188 = C4177 * C814;
    const double C5249 = C93587 * C814;
    const double C6745 = C4176 * C814;
    const double C6967 = C4075 * C814;
    const double C12255 = C9770 * C814;
    const double C15101 = C15093 * C814;
    const double C31937 = C31929 * C814;
    const double C32921 = C31826 * C814;
    const double C34485 = C31825 * C814;
    const double C37007 = C36999 * C814;
    const double C38771 = C93582 * C814;
    const double C45727 = C91722 * C814;
    const double C46804 = C93587 * C814;
    const double C48374 = C93805 * C814;
    const double C2781 = C188 * C1395;
    const double C2867 = C275 * C1395;
    const double C5840 = C4083 * C1395;
    const double C7745 = C4176 * C1395;
    const double C9782 = C9771 * C1395;
    const double C11434 = C93587 * C1395;
    const double C13248 = C9770 * C1395;
    const double C13362 = C4075 * C1395;
    const double C20358 = C20350 * C1395;
    const double C39203 = C36999 * C1395;
    const double C44092 = C93582 * C1395;
    const double C47321 = C91722 * C1395;
    const double C53030 = C93587 * C1395;
    const double C55336 = C93805 * C1395;
    const double C62353 = C62345 * C1395;
    const double C63932 = C31826 * C1395;
    const double C65760 = C31825 * C1395;
    const double C5160 = C5152 * C4075;
    const double C32842 = C5152 * C31825;
    const double C37619 = C5152 * C93582;
    const double C46717 = C5152 * C93805;
    const double C11263 = C11255 * C4075;
    const double C63779 = C11255 * C31825;
    const double C73306 = C11255 * C93582;
    const double C83394 = C11255 * C93805;
    const double C8866 = C8862 * C4075;
    const double C36321 = C8862 * C31825;
    const double C39969 = C8862 * C93582;
    const double C50199 = C8862 * C93805;
    const double C14165 = C14161 * C4075;
    const double C66518 = C14161 * C31825;
    const double C75076 = C14161 * C93582;
    const double C86070 = C14161 * C93805;
    const double C92385 = ae * C92384;
    const double C891 =
        (C92009 * C92130 + C92124 * C92384 + C92124 * C92032 * ae) / C91696;
    const double C3492 = (C92167 * C92384) / C91696;
    const double C92519 = ae * C92518;
    const double C1538 =
        (C92009 * C92173 + C92167 * C92518 + C92167 * C92032 * ae) / C91696;
    const double C4298 = C4290 + C4291;
    const double C4835 = C4829 + C1330;
    const double C9693 = C9685 + C9686;
    const double C9962 = C9958 + C1671;
    const double C7870 = C7865 + C7866;
    const double C8511 = C8506 + C3999;
    const double C12267 = C12259 + C12260;
    const double C22699 = C22689 + C22690;
    const double C3496 = (C92167 * (C92041 + C92124 * C92145)) / C91701;
    const double C92042 = C92021 + C92040;
    const double C92332 = ae * C92331;
    const double C3414 = (C92167 * C92331) / C91696;
    const double C92434 = ae * C92433;
    const double C4090 = C4083 * C817;
    const double C4190 = C4178 * C817;
    const double C4292 = C275 * C817;
    const double C5257 = C93587 * C817;
    const double C6743 = C4177 * C817;
    const double C6975 = C4075 * C817;
    const double C17431 = C15093 * C817;
    const double C32939 = C31826 * C817;
    const double C34266 = C31929 * C817;
    const double C37006 = C36999 * C817;
    const double C38775 = C93582 * C817;
    const double C45729 = C91722 * C817;
    const double C46812 = C93587 * C817;
    const double C48382 = C93805 * C817;
    const double C5843 = C4083 * C1398;
    const double C9687 = C188 * C1398;
    const double C9784 = C9772 * C1398;
    const double C11442 = C93587 * C1398;
    const double C13246 = C9771 * C1398;
    const double C13370 = C4075 * C1398;
    const double C23665 = C20350 * C1398;
    const double C40498 = C36999 * C1398;
    const double C44098 = C93582 * C1398;
    const double C47324 = C91722 * C1398;
    const double C53048 = C93587 * C1398;
    const double C63950 = C31826 * C1398;
    const double C65645 = C62345 * C1398;
    const double C85329 = C93805 * C1398;
    const double C92658 = C92130 + C92656;
    const double C92771 = ae * C92770;
    const double C92957 = C92173 + C92955;
    const double C4932 = C93587 * C822;
    const double C6620 = C4075 * C822;
    const double C32651 = C31826 * C822;
    const double C34143 = C31825 * C822;
    const double C38548 = C93582 * C822;
    const double C46531 = C93587 * C822;
    const double C48032 = C93805 * C822;
    const double C4934 = C4075 * C824;
    const double C32662 = C31825 * C824;
    const double C37489 = C93582 * C824;
    const double C46533 = C93805 * C824;
    const double C11118 = C93587 * C1403;
    const double C13015 = C4075 * C1403;
    const double C43774 = C93582 * C1403;
    const double C52702 = C93587 * C1403;
    const double C54928 = C93805 * C1403;
    const double C63665 = C31826 * C1403;
    const double C65418 = C31825 * C1403;
    const double C11120 = C4075 * C1405;
    const double C41980 = C93582 * C1405;
    const double C52710 = C93805 * C1405;
    const double C63673 = C31825 * C1405;
    const double C8629 = C4075 * C3417;
    const double C36108 = C31825 * C3417;
    const double C39813 = C93582 * C3417;
    const double C49982 = C93805 * C3417;
    const double C435 = C93662 * C422;
    const double C15376 = C93818 * C422;
    const double C32212 = C31828 * C422;
    const double C2302 = C93662 * C1078;
    const double C4461 = C4078 * C1078;
    const double C7094 = C4077 * C1078;
    const double C15364 = C93711 * C1078;
    const double C17772 = C93818 * C1078;
    const double C32200 = C93711 * C1078;
    const double C34607 = C31828 * C1078;
    const double C3016 = C93662 * C1659;
    const double C8074 = C4077 * C1659;
    const double C18745 = C93818 * C1659;
    const double C35574 = C31828 * C1659;
    const double C11554 = C93662 * C1661;
    const double C27633 = C93818 * C1661;
    const double C42388 = C31828 * C1661;
    const double C69099 = C4077 * C1661;
    const double C14483 = C93662 * C3709;
    const double C27625 = C93711 * C3709;
    const double C31191 = C93818 * C3709;
    const double C42386 = C93711 * C3709;
    const double C45179 = C31828 * C3709;
    const double C69091 = C4078 * C3709;
    const double C71798 = C4077 * C3709;
    const double C730 = C93673 * C717;
    const double C20892 = C93819 * C717;
    const double C62887 = C62191 * C717;
    const double C2616 = C93673 * C1318;
    const double C12900 = C9601 * C1318;
    const double C23324 = C93819 * C1318;
    const double C65304 = C62191 * C1318;
    const double C5723 = C93673 * C1320;
    const double C27073 = C93819 * C1320;
    const double C41878 = C9601 * C1320;
    const double C68640 = C62191 * C1320;
    const double C3330 = C93673 * C1899;
    const double C10311 = C9602 * C1899;
    const double C13917 = C9601 * C1899;
    const double C20880 = C93737 * C1899;
    const double C24326 = C93819 * C1899;
    const double C62875 = C93737 * C1899;
    const double C66306 = C62191 * C1899;
    const double C9519 = C93673 * C3993;
    const double C27065 = C93737 * C3993;
    const double C31741 = C93819 * C3993;
    const double C41870 = C9602 * C3993;
    const double C45628 = C9601 * C3993;
    const double C68638 = C93737 * C3993;
    const double C72243 = C62191 * C3993;
    const double C92805 = ae * C92804;
    const double C6009 =
        (C92124 * C92173 + C92167 * C92804 + C92167 * C92653 * ae) / C91696;
    const double C9199 = C93673 * C6266;
    const double C26759 = C93737 * C6266;
    const double C41618 = C9602 * C6266;
    const double C61792 = C93819 * C6266;
    const double C68386 = C93737 * C6266;
    const double C71916 = C62191 * C6266;
    const double C1080 =
        ((C92012 + C92232 * C92014 * C92018) * C92016 + C92381 + C92381 +
         C92124 * (2 * ae * C92130 + C92124 * C92237)) /
        C91701;
    const double C3923 =
        (C92381 + C92167 * (ae * C92173 + C92124 * C92294)) / C91701;
    const double C1089 = C188 * C890;
    const double C4455 = C4178 * C890;
    const double C5368 = C4176 * C890;
    const double C5366 = C4177 * C890;
    const double C5454 = C275 * C890;
    const double C16196 = C15093 * C890;
    const double C33032 = C31929 * C890;
    const double C37689 = C36999 * C890;
    const double C41619 = C9770 * C890;
    const double C3714 = C188 * C3491;
    const double C6184 = C4177 * C3491;
    const double C9092 = C4176 * C3491;
    const double C9200 = C275 * C3491;
    const double C14149 = C93662 * C3491;
    const double C16904 = C15093 * C3491;
    const double C26752 = C20350 * C3491;
    const double C27295 = C93711 * C3491;
    const double C30773 = C93818 * C3491;
    const double C33740 = C31929 * C3491;
    const double C40050 = C36999 * C3491;
    const double C41611 = C9771 * C3491;
    const double C42080 = C93711 * C3491;
    const double C44831 = C31828 * C3491;
    const double C45303 = C9770 * C3491;
    const double C68381 = C62345 * C3491;
    const double C68821 = C4078 * C3491;
    const double C71456 = C4077 * C3491;
    const double C6187 = C4177 * C5923;
    const double C10716 = C188 * C5923;
    const double C14155 = C93662 * C5923;
    const double C16907 = C15093 * C5923;
    const double C27313 = C93711 * C5923;
    const double C31334 = C20350 * C5923;
    const double C33743 = C31929 * C5923;
    const double C41445 = C36999 * C5923;
    const double C41613 = C9772 * C5923;
    const double C42088 = C93711 * C5923;
    const double C44839 = C31828 * C5923;
    const double C45301 = C9771 * C5923;
    const double C68839 = C4078 * C5923;
    const double C71803 = C4176 * C5923;
    const double C71917 = C62345 * C5923;
    const double C90915 = C93818 * C5923;
    const double C645 = C220 * C275;
    const double C10221 = C220 * C9770;
    const double C445 = C441 + C431;
    const double C525 = C521 * C93662;
    const double C4581 = C521 * C4077;
    const double C15477 = C521 * C93818;
    const double C32313 = C521 * C31828;
    const double C648 = C222 * C275;
    const double C446 = C442 + C434;
    const double C526 = C522 * C93662;
    const double C15482 = C522 * C93818;
    const double C32318 = C522 * C31828;
    const double C2308 = C2305 + C1086;
    const double C2534 = C2074 * C275;
    const double C2309 = C2306 + C1087;
    const double C2537 = C2076 * C275;
    const double C12791 = C2076 * C9770;
    const double C3022 = C3019 + C1667;
    const double C3248 = C2788 * C275;
    const double C10219 = C2788 * C9771;
    const double C13138 = C2788 * C4083;
    const double C20788 = C2788 * C20350;
    const double C62783 = C2788 * C62345;
    const double C85108 = C2788 * C91722;
    const double C3023 = C3020 + C1668;
    const double C3251 = C2790 * C275;
    const double C10210 = C2790 * C9771;
    const double C11236 = C2790 * C4083;
    const double C13812 = C2790 * C9770;
    const double C20784 = C2790 * C20350;
    const double C62779 = C2790 * C62345;
    const double C74453 = C2790 * C36999;
    const double C83391 = C2790 * C91722;
    const double C3108 = C3105 * C93662;
    const double C8192 = C3105 * C4077;
    const double C18865 = C3105 * C93818;
    const double C35693 = C3105 * C31828;
    const double C11569 = C11565 + C1670;
    const double C73305 = C11254 * C36999;
    const double C73307 = C11259 * C36999;
    const double C11571 = C11567 + C11560;
    const double C1901 =
        ((C92012 + C92306 * C92014 * C92018) * C92016 + C92515 + C92515 +
         C92167 * (2 * ae * C92173 + C92167 * C92311)) /
        C91701;
    const double C3783 =
        (C92515 + C92124 * (ae * C92130 + C92167 * C92257)) / C91701;
    const double C1910 = C275 * C1537;
    const double C10305 = C9772 * C1537;
    const double C11836 = C188 * C1537;
    const double C11930 = C9770 * C1537;
    const double C11928 = C9771 * C1537;
    const double C22369 = C20350 * C1537;
    const double C42571 = C36999 * C1537;
    const double C64363 = C62345 * C1537;
    const double C69353 = C4176 * C1537;
    const double C2394 = C2391 * C93662;
    const double C4572 = C2391 * C4078;
    const double C7210 = C2391 * C4077;
    const double C15475 = C2391 * C93711;
    const double C17891 = C2391 * C93818;
    const double C32311 = C2391 * C93711;
    const double C34726 = C2391 * C31828;
    const double C511 = C307 * C188;
    const double C4582 = C307 * C4176;
    const double C659 = C655 * C93673;
    const double C10220 = C655 * C9601;
    const double C20787 = C655 * C93819;
    const double C62782 = C655 * C62191;
    const double C740 = C736 + C726;
    const double C514 = C309 * C188;
    const double C660 = C656 * C93673;
    const double C20792 = C656 * C93819;
    const double C62787 = C656 * C62191;
    const double C741 = C737 + C729;
    const double C2622 = C2619 + C1326;
    const double C2385 = C2160 * C188;
    const double C4580 = C2160 * C4177;
    const double C6861 = C2160 * C4083;
    const double C15478 = C2160 * C15093;
    const double C32314 = C2160 * C31929;
    const double C48269 = C2160 * C91722;
    const double C2623 = C2620 + C1327;
    const double C2388 = C2162 * C188;
    const double C4571 = C2162 * C4177;
    const double C5133 = C2162 * C4083;
    const double C7211 = C2162 * C4176;
    const double C15474 = C2162 * C15093;
    const double C32310 = C2162 * C31929;
    const double C38698 = C2162 * C36999;
    const double C46714 = C2162 * C91722;
    const double C2543 = C2540 * C93673;
    const double C12790 = C2540 * C9601;
    const double C23215 = C2540 * C93819;
    const double C65197 = C2540 * C62191;
    const double C5737 = C5733 + C1329;
    const double C37618 = C5151 * C36999;
    const double C3336 = C3333 + C1907;
    const double C3099 = C2874 * C188;
    const double C3337 = C3334 + C1908;
    const double C3102 = C2876 * C188;
    const double C8193 = C2876 * C4176;
    const double C3257 = C3254 * C93673;
    const double C10211 = C3254 * C9602;
    const double C13811 = C3254 * C9601;
    const double C20785 = C3254 * C93737;
    const double C24219 = C3254 * C93819;
    const double C62780 = C3254 * C93737;
    const double C66199 = C3254 * C62191;
    const double C9525 = C9523 + C3998;
    const double C39970 = C8863 * C36999;
    const double C37620 = C5156 * C36999;
    const double C5739 = C5735 + C5728;
    const double C9524 = C9522 + C6513;
    const double C39968 = C8861 * C36999;
    const double C92078 = C92064 + C92068;
    const double C92070 = C92034 + C92067;
    const double C92329 = ae * C92327;
    const double C92573 = C92167 * C92327;
    const double C92819 = 2 * C92327;
    const double C5826 = (C92331 + C92327 * C92306) / C91696;
    const double C92339 = C92039 + C92338;
    const double C92431 = ae * C92429;
    const double C93019 = 2 * C92429;
    const double C92441 = C92039 + C92440;
    const double C93094 = C93086 + C93092;
    const double C93104 = C93100 + C93103;
    const double C42192 =
        (3 * (C93045 + ae * C93219 + C92167 * C93224) +
         ae * (2 * C93219 + C92167 * C93225) +
         C92167 * (2 * C93224 + ae * C93225 +
                   C92167 * (C93220 + ae * C92167 * C93221 +
                             C92167 * (ae * C93221 + C92167 * C92124 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92171)))) /
        C91701;
    const double C42567 =
        (3 * (C93055 + ae * C93219 + C92167 * C93236) +
         ae * (2 * C93219 + C92167 * C93225) +
         C92167 * (2 * C93236 + ae * C93225 +
                   C92167 * (C93234 + ae * C92167 * C93221 +
                             C92167 * (ae * C93221 + C92167 * C92124 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92270)))) /
        C91701;
    const double C44955 = C9603 * C14267;
    const double C91025 = C81840 * C14267;
    const double C42574 = C93582 * C14695;
    const double C93298 = C93290 + C93296;
    const double C93311 = C93307 + C93310;
    const double C41346 = C9603 * C6017;
    const double C61460 = C93737 * C6017;
    const double C71572 = C93737 * C6017;
    const double C87680 = C81840 * C6017;
    const double C41709 = C93582 * C6349;
    const double C39964 = C93673 * C8845;
    const double C58084 = C93737 * C8845;
    const double C68130 = C93737 * C8845;
    const double C40043 = C93582 * C8965;
    const double C40269 = C93582 * C9301;
    const double C37493 = C36999 * C4922;
    const double C37622 = C275 * C4922;
    const double C37698 = C93582 * C4922;
    const double C38060 = C36999 * C5827;
    const double C41345 = C9772 * C5827;
    const double C41450 = C93582 * C5827;
    const double C44844 = C31929 * C5827;
    const double C61459 = C20350 * C5827;
    const double C68830 = C4178 * C5827;
    const double C71571 = C62345 * C5827;
    const double C90920 = C15093 * C5827;
    const double C38054 = C36999 * C8617;
    const double C39963 = C275 * C8617;
    const double C40045 = C93582 * C8617;
    const double C58083 = C20350 * C8617;
    const double C68129 = C62345 * C8617;
    const double C71465 = C4178 * C8617;
    const double C44729 = C36999 * C44723;
    const double C42282 = C93582 * C14367;
    const double C41987 = C36999 * C11108;
    const double C73309 = C188 * C11108;
    const double C73431 = C93582 * C11108;
    const double C92069 = C92051 + C92066;
    const double C3418 =
        (2 * ae * C92167 * C92124 * C92034 + C92009 * C92167 * C92325) / C91701;
    const double C5831 = (C92124 * C92038 + C92325 * C92306) / C91701;
    const double C4936 = C93587 * C825;
    const double C6624 = C4075 * C825;
    const double C32659 = C31826 * C825;
    const double C38550 = C93582 * C825;
    const double C46535 = C93587 * C825;
    const double C48036 = C93805 * C825;
    const double C11122 = C93587 * C1406;
    const double C13019 = C4075 * C1406;
    const double C43776 = C93582 * C1406;
    const double C52708 = C93587 * C1406;
    const double C63671 = C31826 * C1406;
    const double C84997 = C93805 * C1406;
    const double C4942 = C4075 * C4925;
    const double C37491 = C93582 * C4925;
    const double C46541 = C93805 * C4925;
    const double C8625 = C4075 * C5830;
    const double C39811 = C93582 * C5830;
    const double C49978 = C93805 * C5830;
    const double C11128 = C4075 * C11111;
    const double C41986 = C93582 * C11111;
    const double C83306 = C93805 * C11111;
    const double C92103 = C92085 + C92100;
    const double C92829 = C92827 + C92099;
    const double C93033 = C93031 + C92099;
    const double C12575 =
        (ae * (C92189 + C92167 * (C92167 * C92203 + C92099) +
               C92167 * C92096 * ae) +
         C92124 * (C92265 + ae * C92167 * C92160 +
                   C92167 * (ae * C92160 +
                             C92167 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C92830 = C92828 * ae;
    const double C12033 = C92124 * C92060 + C92828 * C92306;
    const double C93034 = C93032 * ae;
    const double C92697 = ae * C92694;
    const double C92696 = C92124 * C92694;
    const double C92779 = C92694 * C92306;
    const double C92872 = C92167 * C92694;
    const double C92994 = ae * C92989;
    const double C92992 = C92167 * C92989;
    const double C92695 = C92692 * ae;
    const double C8844 = (C92167 * (2 * C92715 + C92124 * C92721) +
                          (2 * C92643 + C92124 * C92692) * ae) /
                         C91696;
    const double C4919 = 3 * (C92032 + C92055 * C92232) +
                         C92124 * (2 * C92643 + C92124 * C92692);
    const double C5822 = C92032 + C92055 * C92232 + C92692 * C92306;
    const double C8616 = C92167 * (2 * C92643 + C92124 * C92692);
    const double C93078 = C93076 + C92691;
    const double C6270 =
        (C92706 + ae * C92167 * C92148 + C92167 * (C92152 + C92167 * C92716) +
         ae * (C92715 + C92167 * (C92167 * C92124 * C92717 + C92691) +
               C92167 * C92687 * ae) +
         C92124 * (ae * (C92191 + C92167 * (C92167 * C92717 + C92095) +
                         C92167 * C92091 * ae) +
                   C92124 * (C92716 + ae * C92167 * C92686 +
                             C92167 * (ae * C92686 + C92167 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92254)))) /
        C91701;
    const double C93077 = C93075 * ae;
    const double C92993 = C92991 * ae;
    const double C11105 = 3 * (C92032 + C92055 * C92306) +
                          C92167 * (2 * C92942 + C92167 * C92991);
    const double C92109 = C92058 + C92105;
    const double C92347 = C92065 + C92344;
    const double C92449 = C92065 + C92446;
    const double C92538 = ae * C92533;
    const double C92578 = C92167 * C92533;
    const double C93003 = C92533 * C92306;
    const double C92559 = ae * C92554;
    const double C93126 = C92142 + C93121;
    const double C93175 = C92669 + C93172;
    const double C93208 = ae * C93204;
    const double C93339 = C92185 + C93335;
    const double C92108 = C92087 + C92104;
    const double C92345 = C92064 + C92342;
    const double C92447 = C92064 + C92444;
    const double C92535 = C92009 * C92530;
    const double C92576 = C92167 * C92530;
    const double C5832 = (2 * ae * (C92620 + C92529 * C92306) +
                          C92009 * (C92325 + C92530 * C92306)) /
                         C91701;
    const double C8620 =
        (2 * ae * C92167 * (2 * C92529 + C92124 * (C92058 + C92094 * C92232)) +
         C92009 * C92167 *
             (2 * C92530 +
              C92124 * (C92101 + (C92081 * C92082 +
                                  C92013 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92232))) /
        C91701;
    const double C14031 =
        (2 * C92167 * C92325 + C92167 * (C92325 + C92530 * C92306)) / C91701;
    const double C92556 = C92009 * C92551;
    const double C92249 = C92242 + C92248;
    const double C92689 = C92124 * C92684;
    const double C92870 = C92167 * C92684;
    const double C93116 = C93107 + C93108;
    const double C93173 = C92242 + C93170;
    const double C93205 = C92124 * C93201;
    const double C92323 = C92316 + C92322;
    const double C92983 = C92167 * C92741;
    const double C93073 = C92124 * C92741;
    const double C9514 =
        (2 * ae * (2 * C92715 + C92124 * C92721) +
         C92167 *
             (2 * C92124 * C92741 +
              C92124 * (C92741 + C92009 *
                                     (C92081 * C92082 +
                                      C92306 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92232))) /
        C91701;
    const double C93162 = C92316 + C93161;
    const double C93247 = C92167 * C93242;
    const double C93330 = C93320 + C93321;
    const double C93127 = C93114 + C93123;
    const double C93278 = C93276 + C93122;
    const double C93279 = C93277 * ae;
    const double C93255 = ae * C93252;
    const double C93254 = C92167 * C93252;
    const double C93253 = C93250 * ae;
    const double C41973 = 3 * (C92653 + C92666 * C92306) +
                          C92167 * (2 * C93063 + C92167 * C93250);
    const double C93333 = C93327 + C93328;
    const double C92388 = C92387 + C92063;
    const double C3095 = C93673 * C1723;
    const double C20622 = C93737 * C1723;
    const double C62617 = C93737 * C1723;
    const double C10049 = C9603 * C1729;
    const double C23997 = C93737 * C1729;
    const double C65977 = C93737 * C1729;
    const double C82260 = C81840 * C1729;
    const double C3244 = C93662 * C1839;
    const double C10216 = C93662 * C1845;
    const double C217 = C93662 * C193;
    const double C437 = C188 * C193;
    const double C517 = C275 * C193;
    const double C1085 = C188 * C886;
    const double C2062 = C93662 * C886;
    const double C2380 = C275 * C886;
    const double C4475 = C4177 * C886;
    const double C15116 = C93711 * C886;
    const double C15372 = C15093 * C886;
    const double C31952 = C93711 * C886;
    const double C32208 = C31929 * C886;
    const double C1666 = C188 * C1467;
    const double C2776 = C93662 * C1467;
    const double C3094 = C275 * C1467;
    const double C20621 = C20350 * C1467;
    const double C62616 = C62345 * C1467;
    const double C1672 = C188 * C1473;
    const double C9692 = C93662 * C1473;
    const double C10048 = C9772 * C1473;
    const double C13375 = C4083 * C1473;
    const double C23996 = C20350 * C1473;
    const double C65976 = C62345 * C1473;
    const double C85334 = C91722 * C1473;
    const double C13488 = C188 * C13133;
    const double C92627 = C92068 + C92626;
    const double C92639 = C92068 + C92638;
    const double C11429 =
        (3 * (C92220 + C92226 * C92306) +
         C92167 *
             (2 * C92862 +
              C92167 * (C92226 + (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212) *
                                     C92306))) /
        C91701;
    const double C92163 = C92156 + C92161;
    const double C92228 = C92222 + C92227;
    const double C11654 =
        (2 * (ae * C92137 + C92167 * C92706) + ae * (C92137 + C92148 * C92306) +
         C92167 * (C92706 + ae * C92167 * C92148 + C92167 * C92880)) /
        C91701;
    const double C11657 =
        (3 * (C92706 + ae * C92921 + C92167 * C92880) +
         ae * (2 * C92921 + C92167 * C92923) +
         C92167 * (2 * C92880 + ae * C92923 +
                   C92167 * (C92716 + ae * C92167 * C92686 +
                             C92167 * (ae * C92686 + C92167 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92254)))) /
        C91701;
    const double C11832 =
        (3 * (C92727 + ae * C92921 + C92167 * C92939) +
         ae * (2 * C92921 + C92167 * C92923) +
         C92167 * (2 * C92939 + ae * C92923 +
                   C92167 * (C92733 + ae * C92167 * C92686 +
                             C92167 * (ae * C92686 + C92167 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92291)))) /
        C91701;
    const double C12578 = C9603 * C6269;
    const double C30103 = C93737 * C6269;
    const double C80190 = C93737 * C6269;
    const double C84572 = C81840 * C6269;
    const double C92647 = ae * C92644;
    const double C92646 = C92124 * C92644;
    const double C92685 = 2 * C92644;
    const double C92767 = C92167 * C92644;
    const double C5925 = (C92384 + C92644 * C92306) / C91696;
    const double C11839 = C93662 * C11829;
    const double C11257 = C11246 + C11247;
    const double C11566 = C11556 + C11557;
    const double C93106 = C92242 + C92674;
    const double C92675 = C92135 + C92672;
    const double C92775 = C92654 + C92774;
    const double C92868 = ae * C92866;
    const double C93268 = 2 * C92866;
    const double C11562 = C188 * C11225;
    const double C73312 = C93662 * C11225;
    const double C73428 = C36999 * C11225;
    const double C93185 = C93183 + C93184;
    const double C93317 = C93313 + C93316;
    const double C215 = C93662 * C199;
    const double C2778 = C93662 * C1476;
    const double C18417 = C93818 * C1476;
    const double C35252 = C31828 * C1476;
    const double C9688 = C93662 * C1480;
    const double C27303 = C93818 * C1480;
    const double C43888 = C31828 * C1480;
    const double C11245 = C93662 * C11227;
    const double C30779 = C93711 * C5928;
    const double C44837 = C93711 * C5928;
    const double C58739 = C45718 * C5928;
    const double C68829 = C4079 * C5928;
    const double C71464 = C4078 * C5928;
    const double C14157 = C93662 * C5929;
    const double C27309 = C93711 * C5929;
    const double C42092 = C93711 * C5929;
    const double C44843 = C31828 * C5929;
    const double C68833 = C4078 * C5929;
    const double C90919 = C93818 * C5929;
    const double C44845 = C93711 * C5930;
    const double C58741 = C45718 * C5930;
    const double C68831 = C4079 * C5930;
    const double C90921 = C93711 * C5930;
    const double C61354 = C45718 * C8743;
    const double C71466 = C4079 * C8743;
    const double C42094 = C93711 * C14145;
    const double C75082 = C93662 * C14145;
    const double C88363 = C93711 * C14145;
    const double C11266 = C11258 * C4075;
    const double C73308 = C11258 * C93582;
    const double C83399 = C11258 * C93805;
    const double C92522 = C92521 + C92063;
    const double C2381 = C93673 * C1142;
    const double C4577 = C93673 * C1148;
    const double C2530 = C93662 * C1258;
    const double C15645 = C93711 * C1258;
    const double C32481 = C93711 * C1258;
    const double C4742 = C4079 * C1264;
    const double C18099 = C93711 * C1264;
    const double C34934 = C93711 * C1264;
    const double C46363 = C45718 * C1264;
    const double C304 = C93673 * C280;
    const double C651 = C188 * C280;
    const double C732 = C275 * C280;
    const double C1325 = C275 * C952;
    const double C2148 = C93673 * C952;
    const double C2529 = C188 * C952;
    const double C15644 = C15093 * C952;
    const double C32480 = C31929 * C952;
    const double C1331 = C275 * C958;
    const double C4297 = C93673 * C958;
    const double C4741 = C4178 * C958;
    const double C7317 = C4083 * C958;
    const double C18098 = C15093 * C958;
    const double C34933 = C31929 * C958;
    const double C48721 = C91722 * C958;
    const double C1906 = C275 * C1533;
    const double C2862 = C93673 * C1533;
    const double C3243 = C188 * C1533;
    const double C10325 = C9771 * C1533;
    const double C20373 = C93737 * C1533;
    const double C20888 = C20350 * C1533;
    const double C62368 = C93737 * C1533;
    const double C62883 = C62345 * C1533;
    const double C4000 = C275 * C3567;
    const double C12902 = C9771 * C3567;
    const double C18539 = C93673 * C3567;
    const double C19065 = C15093 * C3567;
    const double C21582 = C20350 * C3567;
    const double C22682 = C93737 * C3567;
    const double C23208 = C188 * C3567;
    const double C29032 = C4083 * C3567;
    const double C35891 = C31929 * C3567;
    const double C54527 = C91722 * C3567;
    const double C63576 = C62345 * C3567;
    const double C64670 = C93737 * C3567;
    const double C7533 = C275 * C6856;
    const double C8509 = C275 * C7856;
    const double C21593 = C20350 * C7856;
    const double C63587 = C62345 * C7856;
    const double C92905 = C92068 + C92904;
    const double C92931 = C92068 + C92930;
    const double C93239 = C92674 + C93238;
    const double C92206 = C92199 + C92204;
    const double C92286 = C92280 + C92285;
    const double C5450 =
        (3 * (C92706 + ae * C92715 + C92124 * C92720) +
         ae * (2 * C92715 + C92124 * C92721) +
         C92124 * (2 * C92720 + ae * C92721 +
                   C92124 * (C92716 + ae * C92124 * C92717 +
                             C92124 * (ae * C92717 + C92124 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92254)))) /
        C91701;
    const double C5640 =
        (3 * (C92727 + ae * C92715 + C92124 * C92735) +
         ae * (2 * C92715 + C92124 * C92721) +
         C92124 * (2 * C92735 + ae * C92721 +
                   C92124 * (C92733 + ae * C92124 * C92717 +
                             C92124 * (ae * C92717 + C92124 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92291)))) /
        C91701;
    const double C5457 = C93673 * C5447;
    const double C92812 = C92811 + C92645;
    const double C7423 = C4079 * C5637;
    const double C48826 = C45718 * C5637;
    const double C92946 = ae * C92943;
    const double C92945 = C92167 * C92943;
    const double C92984 = 2 * C92943;
    const double C5154 = C5143 + C5144;
    const double C5734 = C5724 + C5725;
    const double C8510 = C8504 + C6512;
    const double C7868 = C7861 + C7862;
    const double C26446 = C26428 + C26429;
    const double C92808 = C92807 + C92673;
    const double C5730 = C275 * C5122;
    const double C37625 = C93673 * C5122;
    const double C37880 = C36999 * C5122;
    const double C9520 = C275 * C8843;
    const double C27075 = C20350 * C8843;
    const double C39966 = C93673 * C8843;
    const double C40268 = C36999 * C8843;
    const double C41880 = C9771 * C8843;
    const double C58088 = C93737 * C8843;
    const double C68134 = C93737 * C8843;
    const double C68644 = C62345 * C8843;
    const double C72133 = C4178 * C8843;
    const double C93212 = C92973 + C93211;
    const double C93319 = C92316 + C92973;
    const double C92974 = C92178 + C92971;
    const double C93068 = ae * C93066;
    const double C93067 = C92167 * C93066;
    const double C93243 = 2 * C93066;
    const double C93149 = C93144 + C93147;
    const double C93159 = C93155 + C93158;
    const double C302 = C93673 * C286;
    const double C2150 = C93673 * C961;
    const double C22680 = C93819 * C961;
    const double C64668 = C62191 * C961;
    const double C4293 = C93673 * C965;
    const double C26427 = C93819 * C965;
    const double C69744 = C62191 * C965;
    const double C5142 = C93673 * C5124;
    const double C5163 = C5155 * C4075;
    const double C37621 = C5155 * C93582;
    const double C46722 = C5155 * C93805;
    const double C8864 = C8860 * C4075;
    const double C39967 = C8860 * C93582;
    const double C50195 = C8860 * C93805;
    const double C13368 = C93587 * C1600;
    const double C21946 = C14991 * C1600;
    const double C55342 = C93587 * C1600;
    const double C63940 = C31827 * C1600;
    const double C65768 = C31826 * C1600;
    const double C11446 = C93587 * C1604;
    const double C13374 = C4075 * C1604;
    const double C44100 = C93582 * C1604;
    const double C53044 = C93587 * C1604;
    const double C63944 = C31826 * C1604;
    const double C85333 = C93805 * C1604;
    const double C11448 = C93587 * C11426;
    const double C74598 = C93582 * C11426;
    const double C83555 = C93587 * C11426;
    const double C37696 = C93582 * C5243;
    const double C6177 = (2 * ae * (C92137 + C92148 * C92306) +
                          C92124 * (C92641 + C92684 * C92306)) /
                         C91701;
    const double C11545 =
        (2 * C92167 * C92641 + C92167 * (C92641 + C92684 * C92306)) / C91701;
    const double C92668 = C92662 + C92663;
    const double C11547 =
        (3 * (C92237 + C92242 * C92306) +
         C92167 * (2 * C92864 + C92167 * (C92242 + C92247 * C92306))) /
        C91701;
    const double C14479 =
        (2 * ae * (2 * C92917 + C92167 * C92919) +
         C92124 * (2 * C92864 + C92167 * (C92242 + C92247 * C92306))) /
        C91701;
    const double C438 = C93662 * C423;
    const double C2300 = C93662 * C1077;
    const double C4470 = C4078 * C1077;
    const double C15370 = C93711 * C1077;
    const double C17768 = C93818 * C1077;
    const double C32206 = C93711 * C1077;
    const double C34603 = C31828 * C1077;
    const double C3014 = C93662 * C1658;
    const double C18741 = C93818 * C1658;
    const double C35570 = C31828 * C1658;
    const double C9959 = C93662 * C1662;
    const double C27629 = C93818 * C1662;
    const double C44210 = C31828 * C1662;
    const double C8072 = C4078 * C3710;
    const double C12470 = C93662 * C3710;
    const double C18743 = C93711 * C3710;
    const double C28761 = C93818 * C3710;
    const double C35572 = C93711 * C3710;
    const double C54258 = C31828 * C3710;
    const double C14486 = C93662 * C6175;
    const double C27631 = C93711 * C6175;
    const double C42390 = C93711 * C6175;
    const double C45183 = C31828 * C6175;
    const double C69097 = C4078 * C6175;
    const double C91247 = C93818 * C6175;
    const double C11561 = C93662 * C11546;
    const double C42396 = C31828 * C11546;
    const double C88618 = C93818 * C11546;
    const double C37818 = C93673 * C5449;
    const double C2393 = C2390 * C93662;
    const double C4579 = C2390 * C4078;
    const double C15479 = C2390 * C93711;
    const double C17887 = C2390 * C93818;
    const double C32315 = C2390 * C93711;
    const double C34722 = C2390 * C31828;
    const double C3107 = C3104 * C93662;
    const double C18861 = C3104 * C93818;
    const double C35689 = C3104 * C31828;
    const double C7314 = C93587 * C1201;
    const double C16357 = C14991 * C1201;
    const double C33193 = C31827 * C1201;
    const double C34829 = C31826 * C1201;
    const double C48718 = C93587 * C1201;
    const double C5550 = C93587 * C1205;
    const double C7316 = C4075 * C1205;
    const double C33197 = C31826 * C1205;
    const double C38995 = C93582 * C1205;
    const double C47081 = C93587 * C1205;
    const double C48720 = C93805 * C1205;
    const double C5552 = C93587 * C5537;
    const double C38998 = C93582 * C5537;
    const double C47083 = C93587 * C5537;
    const double C73602 = C93582 * C11734;
    const double C73656 = C93662 * C11831;
    const double C2542 = C2539 * C93673;
    const double C23211 = C2539 * C93819;
    const double C65193 = C2539 * C62191;
    const double C3256 = C3253 * C93673;
    const double C10218 = C3253 * C9602;
    const double C20789 = C3253 * C93737;
    const double C24215 = C3253 * C93819;
    const double C62784 = C3253 * C93737;
    const double C66195 = C3253 * C62191;
    const double C5715 =
        (2 * C92124 * C92737 + C92124 * (C92737 + C92009 * C92321 * C92232)) /
        C91701;
    const double C5718 =
        (3 * (C92737 + C92741 * C92232) +
         C92124 *
             (2 * C92124 * C92741 +
              C92124 * (C92741 + C92009 *
                                     (C92081 * C92082 +
                                      C92306 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92232))) /
        C91701;
    const double C6505 = (2 * ae * (C92180 + C92191 * C92232) +
                          C92167 * (C92737 + C92741 * C92232)) /
                         C91701;
    const double C92967 = C92961 + C92962;
    const double C733 = C93673 * C718;
    const double C2614 = C93673 * C1317;
    const double C23320 = C93819 * C1317;
    const double C65300 = C62191 * C1317;
    const double C4830 = C93673 * C1321;
    const double C27069 = C93819 * C1321;
    const double C70354 = C62191 * C1321;
    const double C3328 = C93673 * C1898;
    const double C10320 = C9602 * C1898;
    const double C20886 = C93737 * C1898;
    const double C24322 = C93819 * C1898;
    const double C62881 = C93737 * C1898;
    const double C66302 = C62191 * C1898;
    const double C8507 = C93673 * C3994;
    const double C12898 = C9602 * C3994;
    const double C23322 = C93737 * C3994;
    const double C30503 = C93819 * C3994;
    const double C65302 = C93737 * C3994;
    const double C80588 = C62191 * C3994;
    const double C5729 = C93673 * C5716;
    const double C58571 = C93819 * C5716;
    const double C68648 = C62191 * C5716;
    const double C37996 = C93673 * C5717;
    const double C9517 = C93673 * C6506;
    const double C27071 = C93737 * C6506;
    const double C41876 = C9602 * C6506;
    const double C62109 = C93819 * C6506;
    const double C68642 = C93737 * C6506;
    const double C72239 = C62191 * C6506;
    const double C40418 = C93673 * C9513;
    const double C58569 = C93737 * C9513;
    const double C68645 = C93737 * C9513;
    const double C8187 = C93673 * C6265;
    const double C26755 = C93737 * C6265;
    const double C70048 = C93737 * C6265;
    const double C38164 =
        (2 * C93045 + C92124 * C93098 + ae * C92167 * C93095 +
         C92167 * (ae * C93095 +
                   C92167 * (2 * C92124 * C92196 +
                             C92124 * (C92196 + std::pow(C92015, 7) * bs[7] *
                                                    C92171 * C92232)))) /
        C91701;
    const double C38376 =
        (2 * C93055 + C92124 * C93153 + ae * C92167 * C93095 +
         C92167 * (ae * C93095 +
                   C92167 * (2 * C92124 * C92282 +
                             C92124 * (C92282 + std::pow(C92015, 7) * bs[7] *
                                                    C92270 * C92232)))) /
        C91701;
    const double C39961 =
        (ae * (3 * C92624 + C92124 * C93095) +
         C92167 * (3 * C93098 +
                   C92124 * (2 * C92124 * C92196 +
                             C92124 * (C92196 + std::pow(C92015, 7) * bs[7] *
                                                    C92171 * C92232)))) /
        C91701;
    const double C40040 =
        (3 * (C92860 + ae * C92167 * C92529 + C92124 * C93198) +
         ae * C92167 * C93095 +
         C92124 * (2 * C93198 + ae * C92167 * C93091 +
                   C92124 * (C93196 + ae * C92167 * C92124 * C92094 +
                             C92124 * (ae * C92167 * C92094 +
                                       C92124 * C92167 * std::pow(C92015, 7) *
                                           bs[7] * C92212)))) /
        C91701;
    const double C40266 =
        (ae * (3 * C92624 + C92124 * C93095) +
         C92167 * (3 * C93153 +
                   C92124 * (2 * C92124 * C92282 +
                             C92124 * (C92282 + std::pow(C92015, 7) * bs[7] *
                                                    C92270 * C92232)))) /
        C91701;
    const double C37483 = (4 * (2 * C92620 + C92124 * C92624) +
                           C92124 * (3 * C92624 + C92124 * C93095)) /
                          C91696;
    const double C38051 =
        (2 * C92620 + C92124 * C92624 + C93095 * C92306) / C91696;
    const double C39805 = (C92167 * (3 * C92624 + C92124 * C93095)) / C91696;
    const double C41988 = C36999 * C41974;
    const double C73242 = (4 * (2 * C92898 + C92167 * C92902) +
                           C92167 * (3 * C92902 + C92167 * C93299)) /
                          C91696;
    const double C92391 = C92124 * C92164;
    const double C1730 =
        (2 * C92009 * C92260 + C92009 * C92265 + ae * C92167 * C92164 +
         C92167 * (ae * C92164 +
                   C92167 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C1846 =
        (2 * C92009 * C92297 + C92009 * C92302 + ae * C92167 * C92164 +
         C92167 * (ae * C92164 +
                   C92167 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C3092 =
        (ae * (3 * C92146 + C92009 * C92164) +
         C92167 * (3 * C92265 +
                   C92009 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C3241 =
        (ae * (3 * C92146 + C92009 * C92164) +
         C92167 * (3 * C92302 +
                   C92009 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C3712 =
        (2 * ae * C92167 * C92164 +
         C92124 * C92167 *
             (2 * C92009 * C92247 +
              C92009 * (C92247 + (C92081 * C92082 +
                                  C92232 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92013))) /
        C91701;
    const double C194 = (4 * (2 * C92137 + C92009 * C92146) +
                         C92009 * (3 * C92146 + C92009 * C92164)) /
                        C91696;
    const double C1474 =
        (2 * C92137 + C92009 * C92146 + C92164 * C92306) / C91696;
    const double C2770 = (C92167 * (3 * C92146 + C92009 * C92164)) / C91696;
    const double C11563 = C188 * C11226;
    const double C73300 = (4 * (2 * C92917 + C92167 * C92919) +
                           C92167 * (3 * C92919 + C92167 * C93305)) /
                          C91696;
    const double C92525 = C92167 * C92207;
    const double C1149 =
        (2 * C92009 * C92260 + C92009 * C92265 + ae * C92124 * C92207 +
         C92124 * (ae * C92207 +
                   C92124 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C1265 =
        (2 * C92009 * C92297 + C92009 * C92302 + ae * C92124 * C92207 +
         C92124 * (ae * C92207 +
                   C92124 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C2378 =
        (ae * (3 * C92189 + C92009 * C92207) +
         C92124 * (3 * C92265 +
                   C92009 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C2527 =
        (ae * (3 * C92189 + C92009 * C92207) +
         C92124 * (3 * C92302 +
                   C92009 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C3996 =
        (2 * ae * C92124 * C92207 +
         C92167 * C92124 *
             (2 * C92009 * C92321 +
              C92009 * (C92321 + (C92081 * C92082 +
                                  C92306 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92013))) /
        C91701;
    const double C281 = (4 * (2 * C92180 + C92009 * C92189) +
                         C92009 * (3 * C92189 + C92009 * C92207)) /
                        C91696;
    const double C959 =
        (2 * C92180 + C92009 * C92189 + C92207 * C92232) / C91696;
    const double C2142 = (C92124 * (3 * C92189 + C92009 * C92207)) / C91696;
    const double C5731 = C275 * C5123;
    const double C93189 = C92167 * C93150;
    const double C37613 = (4 * (2 * C92709 + C92124 * C92713) +
                           C92124 * (3 * C92713 + C92124 * C93150)) /
                          C91696;
    const double C47087 = C47075 + C47076;
    const double C53054 = C53033 + C53034;
    const double C15003 = C14999 * C116;
    const double C16000 = C2160 * C14999;
    const double C16100 = C14999 * C810;
    const double C16092 = C14999 * C887;
    const double C16086 = C14999 * C805;
    const double C16358 = C14999 * C958;
    const double C16356 = C14999 * C953;
    const double C17659 = C14999 * C886;
    const double C17653 = C14999 * C804;
    const double C17995 = C14999 * C952;
    const double C19606 = C14999 * C3411;
    const double C19918 = C14999 * C3567;
    const double C21779 = C2788 * C14999;
    const double C21953 = C14999 * C1391;
    const double C21947 = C14999 * C1473;
    const double C21945 = C14999 * C1468;
    const double C21939 = C14999 * C1386;
    const double C22203 = C14999 * C1534;
    const double C23789 = C14999 * C1467;
    const double C23783 = C14999 * C1385;
    const double C24110 = C14999 * C1533;
    const double C31839 = C31835 * C116;
    const double C32836 = C2160 * C31835;
    const double C32936 = C31835 * C810;
    const double C32928 = C31835 * C887;
    const double C32922 = C31835 * C805;
    const double C33194 = C31835 * C958;
    const double C33192 = C31835 * C953;
    const double C34494 = C31835 * C886;
    const double C34488 = C31835 * C804;
    const double C34830 = C31835 * C952;
    const double C36427 = C31835 * C3411;
    const double C36739 = C31835 * C3567;
    const double C63773 = C2788 * C31835;
    const double C63947 = C31835 * C1391;
    const double C63941 = C31835 * C1473;
    const double C63939 = C31835 * C1468;
    const double C63933 = C31835 * C1386;
    const double C64197 = C31835 * C1534;
    const double C65769 = C31835 * C1467;
    const double C65763 = C31835 * C1385;
    const double C66090 = C31835 * C1533;
    const double C91726 = C93582 - C91724;
    const double C5556 = C5544 + C5545;
    const double C11458 = C11437 + C11438;
    const double C37703 = C37691 + C37692;
    const double C37701 = C37687 + C37688;
    const double C37700 = C37685 + C37686;
    const double C37699 = C37683 + C37684;
    const double C37885 = C37878 + C37879;
    const double C37884 = C37875 + C37876;
    const double C37883 = C37872 + C37873;
    const double C38999 = C38991 + C38992;
    const double C40059 = C40052 + C40053;
    const double C40057 = C40048 + C40049;
    const double C40279 = C40274 + C40275;
    const double C40278 = C40271 + C40272;
    const double C41451 = C41443 + C41444;
    const double C42296 = C42287 + C42288;
    const double C42295 = C42285 + C42286;
    const double C42294 = C42283 + C42284;
    const double C42292 = C42277 + C42278;
    const double C42291 = C42275 + C42276;
    const double C42290 = C42271 + C42272;
    const double C42289 = C42269 + C42270;
    const double C42577 = C42569 + C42570;
    const double C44104 = C44093 + C44094;
    const double C15826 = C93842 * C824;
    const double C15813 = C93842 * C823;
    const double C16006 = C5152 * C93842;
    const double C15997 = C5150 * C93842;
    const double C16105 = C93842 * C816;
    const double C16099 = C93842 * C1022;
    const double C16089 = C93842 * C1021;
    const double C16083 = C93842 * C815;
    const double C16363 = C93842 * C1204;
    const double C16353 = C93842 * C1203;
    const double C17308 = C93842 * C822;
    const double C17650 = C93842 * C814;
    const double C17992 = C93842 * C1202;
    const double C19287 = C93842 * C3417;
    const double C19500 = C8862 * C93842;
    const double C19611 = C93842 * C3413;
    const double C19605 = C93842 * C3639;
    const double C19923 = C93842 * C3853;
    const double C21679 = C93842 * C1405;
    const double C21669 = C93842 * C1404;
    const double C21785 = C11255 * C93842;
    const double C21776 = C11253 * C93842;
    const double C21958 = C93842 * C1397;
    const double C21952 = C93842 * C1603;
    const double C21942 = C93842 * C1602;
    const double C21936 = C93842 * C1396;
    const double C22210 = C93842 * C1785;
    const double C22200 = C93842 * C1784;
    const double C23438 = C93842 * C1403;
    const double C23786 = C93842 * C1601;
    const double C23780 = C93842 * C1395;
    const double C24538 = C14161 * C93842;
    const double C89 = (C93842 * C93577) / C91696 + (C93805 - C93829) / C91702;
    const double C15823 = C93843 * C825;
    const double C15815 = C93843 * C822;
    const double C16103 = C93843 * C817;
    const double C16085 = C93843 * C814;
    const double C16361 = C93843 * C1205;
    const double C16355 = C93843 * C1202;
    const double C17994 = C93843 * C1201;
    const double C21677 = C93843 * C1406;
    const double C21671 = C93843 * C1403;
    const double C21956 = C93843 * C1398;
    const double C21950 = C93843 * C1604;
    const double C21944 = C93843 * C1601;
    const double C21938 = C93843 * C1395;
    const double C23788 = C93843 * C1600;
    const double C90 =
        (C93843 * C93577) / C91696 + (2 * C93587 + C93842) / C91702;
    const double C91 = (C93577 * C93587) / C91711 + C93843 / C91702;
    const double C91791 = C93662 - C91790;
    const double C31960 = C31941 + C31942;
    const double C31956 = C31933 + C31934;
    const double C32487 = C32478 + C32479;
    const double C32485 = C32473 + C32474;
    const double C34943 = C34937 + C34938;
    const double C42104 = C42083 + C42084;
    const double C45837 = C45817 * C810;
    const double C45829 = C45817 * C817;
    const double C45823 = C45817 * C809;
    const double C46082 = C45817 * C890;
    const double C46362 = C45817 * C958;
    const double C46360 = C45817 * C957;
    const double C48157 = C45817 * C4916;
    const double C48825 = C45817 * C5120;
    const double C49143 = C45817 * C5817;
    const double C49767 = C45817 * C6007;
    const double C58746 = C45817 * C5821;
    const double C58740 = C45817 * C5827;
    const double C58738 = C45817 * C5824;
    const double C58732 = C45817 * C5818;
    const double C59257 = C45817 * C6008;
    const double C61353 = C45817 * C8617;
    const double C61347 = C45817 * C8615;
    const double C62003 = C45817 * C8843;
    const double C448 = C444 + C429;
    const double C11572 = C11568 + C11551;
    const double C45842 = C93844 * C191;
    const double C45836 = C93844 * C197;
    const double C45826 = C93844 * C196;
    const double C45820 = C93844 * C190;
    const double C46100 = C93844 * C421;
    const double C46085 = C93844 * C420;
    const double C46206 = C521 * C93844;
    const double C46197 = C520 * C93844;
    const double C46367 = C93844 * C637;
    const double C46357 = C93844 * C636;
    const double C48162 = C93844 * C888;
    const double C48500 = C93844 * C1078;
    const double C48615 = C2391 * C93844;
    const double C48830 = C93844 * C1260;
    const double C49148 = C93844 * C1469;
    const double C49142 = C93844 * C1477;
    const double C49454 = C93844 * C1659;
    const double C49569 = C3105 * C93844;
    const double C49772 = C93844 * C1841;
    const double C58751 = C93844 * C1471;
    const double C58745 = C93844 * C1479;
    const double C58735 = C93844 * C1478;
    const double C58729 = C93844 * C1470;
    const double C59009 = C93844 * C1661;
    const double C58999 = C93844 * C1660;
    const double C59264 = C93844 * C1843;
    const double C59254 = C93844 * C1842;
    const double C61350 = C93844 * C3495;
    const double C61344 = C93844 * C3491;
    const double C61674 = C93844 * C3709;
    const double C36994 =
        (C93844 * C93706) / C91696 + (C93818 - C93836) / C91702;
    const double C4215 = C4202 + C4203;
    const double C4207 = C4186 + C4187;
    const double C4204 = C4180 + C4181;
    const double C4752 = C4745 + C4746;
    const double C4747 = C4735 + C4736;
    const double C6758 = C6751 + C6752;
    const double C7430 = C7426 + C7427;
    const double C7758 = C7751 + C7752;
    const double C8404 = C8400 + C8401;
    const double C68853 = C68840 + C68841;
    const double C68850 = C68834 + C68835;
    const double C68845 = C68824 + C68825;
    const double C68842 = C68818 + C68819;
    const double C69355 = C69343 + C69344;
    const double C71470 = C71461 + C71462;
    const double C45840 = C93845 * C887;
    const double C45822 = C93845 * C888;
    const double C46097 = C93845 * C1077;
    const double C46088 = C93845 * C1078;
    const double C46204 = C2390 * C93845;
    const double C46199 = C2391 * C93845;
    const double C46365 = C93845 * C1259;
    const double C46359 = C93845 * C1260;
    const double C48828 = C93845 * C1263;
    const double C49452 = C93845 * C3710;
    const double C58749 = C93845 * C5923;
    const double C58743 = C93845 * C5929;
    const double C58737 = C93845 * C3495;
    const double C58731 = C93845 * C3491;
    const double C59007 = C93845 * C6175;
    const double C59001 = C93845 * C3709;
    const double C61352 = C93845 * C5928;
    const double C36995 =
        (C93845 * C93706) / C91696 + (2 * C93711 + C93844) / C91702;
    const double C36996 = (C93706 * C93711) / C91711 + C93845 / C91702;
    const double C91817 = C93673 - C91816;
    const double C62376 = C62357 + C62358;
    const double C62372 = C62349 + C62350;
    const double C62623 = C62614 + C62615;
    const double C62621 = C62609 + C62610;
    const double C64687 = C64677 + C64678;
    const double C65986 = C65980 + C65981;
    const double C68144 = C68127 + C68128;
    const double C68142 = C68123 + C68124;
    const double C68140 = C68119 + C68120;
    const double C68138 = C68115 + C68116;
    const double C69748 = C69741 + C69742;
    const double C71591 = C71579 + C71580;
    const double C82013 = C81993 * C1391;
    const double C82005 = C81993 * C1398;
    const double C81999 = C81993 * C1390;
    const double C82259 = C81993 * C1473;
    const double C82257 = C81993 * C1472;
    const double C82510 = C81993 * C1537;
    const double C84265 = C81993 * C5820;
    const double C85218 = C81993 * C11102;
    const double C85540 = C81993 * C11223;
    const double C87685 = C81993 * C5821;
    const double C87679 = C81993 * C5827;
    const double C87677 = C81993 * C5825;
    const double C87671 = C81993 * C5819;
    const double C87931 = C81993 * C5923;
    const double C91030 = C81993 * C14027;
    const double C91024 = C81993 * C14029;
    const double C743 = C739 + C724;
    const double C5740 = C5736 + C5721;
    const double C82018 = C93846 * C278;
    const double C82012 = C93846 * C284;
    const double C82002 = C93846 * C283;
    const double C81996 = C93846 * C277;
    const double C82264 = C93846 * C503;
    const double C82254 = C93846 * C502;
    const double C82429 = C655 * C93846;
    const double C82420 = C654 * C93846;
    const double C82528 = C93846 * C716;
    const double C82513 = C93846 * C715;
    const double C84270 = C93846 * C954;
    const double C84264 = C93846 * C962;
    const double C84576 = C93846 * C1144;
    const double C84780 = C2540 * C93846;
    const double C84885 = C93846 * C1318;
    const double C85223 = C93846 * C1535;
    const double C85545 = C93846 * C1725;
    const double C85755 = C3254 * C93846;
    const double C85860 = C93846 * C1899;
    const double C87690 = C93846 * C956;
    const double C87684 = C93846 * C964;
    const double C87674 = C93846 * C963;
    const double C87668 = C93846 * C955;
    const double C87938 = C93846 * C1146;
    const double C87928 = C93846 * C1145;
    const double C88190 = C93846 * C1320;
    const double C88180 = C93846 * C1319;
    const double C91035 = C93846 * C3565;
    const double C91029 = C93846 * C3569;
    const double C91676 = C93846 * C3993;
    const double C72307 =
        (C93846 * C93732) / C91696 + (C93819 - C93839) / C91702;
    const double C9809 = C9796 + C9797;
    const double C9801 = C9780 + C9781;
    const double C9798 = C9774 + C9775;
    const double C10059 = C10052 + C10053;
    const double C10054 = C10042 + C10043;
    const double C12268 = C12261 + C12262;
    const double C12585 = C12581 + C12582;
    const double C13261 = C13254 + C13255;
    const double C13596 = C13592 + C13593;
    const double C41368 = C41355 + C41356;
    const double C41365 = C41349 + C41350;
    const double C41360 = C41339 + C41340;
    const double C41357 = C41333 + C41334;
    const double C41621 = C41609 + C41610;
    const double C44971 = C44964 + C44965;
    const double C44968 = C44958 + C44959;
    const double C82016 = C93847 * C1534;
    const double C81998 = C93847 * C1535;
    const double C82262 = C93847 * C1724;
    const double C82256 = C93847 * C1725;
    const double C82427 = C3253 * C93847;
    const double C82422 = C3254 * C93847;
    const double C82525 = C93847 * C1898;
    const double C82516 = C93847 * C1899;
    const double C84268 = C93847 * C3566;
    const double C84883 = C93847 * C3994;
    const double C85543 = C93847 * C1728;
    const double C87688 = C93847 * C6008;
    const double C87682 = C93847 * C6014;
    const double C87676 = C93847 * C3569;
    const double C87670 = C93847 * C3565;
    const double C87936 = C93847 * C6266;
    const double C88188 = C93847 * C6506;
    const double C88182 = C93847 * C3993;
    const double C91027 = C93847 * C6015;
    const double C91359 = C93847 * C6267;
    const double C72308 =
        (C93847 * C93732) / C91696 + (2 * C93737 + C93846) / C91702;
    const double C72309 = (C93732 * C93737) / C91711 + C93847 / C91702;
    const double C2068 = C93662 * C896;
    const double C4189 = C4078 * C896;
    const double C6746 = C4077 * C896;
    const double C15102 = C93711 * C896;
    const double C17434 = C93818 * C896;
    const double C31938 = C93711 * C896;
    const double C34269 = C31828 * C896;
    const double C45828 = C93845 * C896;
    const double C48156 = C93844 * C896;
    const double C5253 = C93587 * C1020;
    const double C6971 = C4075 * C1020;
    const double C16091 = C93843 * C1020;
    const double C17656 = C93842 * C1020;
    const double C32927 = C31826 * C1020;
    const double C34491 = C31825 * C1020;
    const double C38773 = C93582 * C1020;
    const double C46808 = C93587 * C1020;
    const double C48378 = C93805 * C1020;
    const double C2868 = C93673 * C1543;
    const double C9783 = C9602 * C1543;
    const double C13249 = C9601 * C1543;
    const double C20359 = C93737 * C1543;
    const double C23668 = C93819 * C1543;
    const double C62354 = C93737 * C1543;
    const double C65648 = C62191 * C1543;
    const double C82004 = C93847 * C1543;
    const double C85217 = C93846 * C1543;
    const double C11740 = C93587 * C1783;
    const double C13697 = C4075 * C1783;
    const double C22202 = C93843 * C1783;
    const double C24107 = C93842 * C1783;
    const double C44418 = C93582 * C1783;
    const double C53360 = C93587 * C1783;
    const double C55740 = C93805 * C1783;
    const double C64196 = C31826 * C1783;
    const double C66087 = C31825 * C1783;
    const double C221 = C208 + C209;
    const double C308 = C295 + C296;
    const double C4212 = C4196 + C4197;
    const double C9806 = C9790 + C9791;
    const double C2161 = C2153 + C2154;
    const double C5271 = C5248 + C5249;
    const double C12265 = C12255 + C12256;
    const double C38782 = C38770 + C38771;
    const double C46826 = C46803 + C46804;
    const double C2789 = C2781 + C2782;
    const double C7755 = C7745 + C7746;
    const double C11456 = C11433 + C11434;
    const double C44103 = C44091 + C44092;
    const double C53052 = C53029 + C53030;
    const double C1081 =
        (C92009 * C92237 + C92385 + C92385 +
         C92124 * (2 * ae * C92137 + C92124 * C92009 * C92242)) /
        C91701;
    const double C3924 =
        (C92385 + C92167 * (ae * C92180 + C92124 * C92009 * C92297)) / C91701;
    const double C1090 = C188 * C891;
    const double C4185 = C4079 * C891;
    const double C4463 = C4178 * C891;
    const double C4574 = C275 * C891;
    const double C5260 = C4083 * C891;
    const double C5371 = C4176 * C891;
    const double C5363 = C4177 * C891;
    const double C6750 = C4078 * C891;
    const double C16194 = C15093 * C891;
    const double C17436 = C93711 * C891;
    const double C33030 = C31929 * C891;
    const double C34271 = C93711 * C891;
    const double C38776 = C36999 * C891;
    const double C45824 = C45718 * C891;
    const double C46090 = C45817 * C891;
    const double C46815 = C91722 * C891;
    const double C48160 = C93845 * C891;
    const double C3715 = C188 * C3492;
    const double C6181 = C4177 * C3492;
    const double C7750 = C4078 * C3492;
    const double C8189 = C275 * C3492;
    const double C8976 = C4083 * C3492;
    const double C9095 = C4176 * C3492;
    const double C12146 = C93662 * C3492;
    const double C12579 = C9771 * C3492;
    const double C16902 = C15093 * C3492;
    const double C18427 = C93711 * C3492;
    const double C23004 = C20350 * C3492;
    const double C28347 = C93818 * C3492;
    const double C33738 = C31929 * C3492;
    const double C35262 = C93711 * C3492;
    const double C43161 = C36999 * C3492;
    const double C49146 = C93845 * C3492;
    const double C50307 = C91722 * C3492;
    const double C53848 = C31828 * C3492;
    const double C64987 = C62345 * C3492;
    const double C1902 =
        (C92009 * C92311 + C92519 + C92519 +
         C92167 * (2 * ae * C92180 + C92167 * C92009 * C92316)) /
        C91701;
    const double C3784 =
        (C92519 + C92124 * (ae * C92137 + C92167 * C92009 * C92260)) / C91701;
    const double C1911 = C275 * C1538;
    const double C9779 = C9603 * C1538;
    const double C10213 = C188 * C1538;
    const double C10313 = C9772 * C1538;
    const double C11743 = C4083 * C1538;
    const double C11933 = C9770 * C1538;
    const double C11925 = C9771 * C1538;
    const double C13253 = C9602 * C1538;
    const double C22367 = C20350 * C1538;
    const double C23670 = C93737 * C1538;
    const double C44419 = C36999 * C1538;
    const double C53365 = C91722 * C1538;
    const double C64361 = C62345 * C1538;
    const double C65650 = C93737 * C1538;
    const double C82000 = C81840 * C1538;
    const double C82518 = C81993 * C1538;
    const double C85221 = C93847 * C1538;
    const double C4573 = C4298 * C4178;
    const double C5139 = C4298 * C4083;
    const double C7209 = C4298 * C4177;
    const double C17890 = C4298 * C15093;
    const double C34725 = C4298 * C31929;
    const double C38700 = C4298 * C36999;
    const double C46200 = C4298 * C45817;
    const double C46718 = C4298 * C91722;
    const double C4837 = C4835 + C1330;
    const double C10212 = C9693 * C9772;
    const double C11242 = C9693 * C4083;
    const double C13810 = C9693 * C9771;
    const double C24218 = C9693 * C20350;
    const double C66198 = C9693 * C62345;
    const double C74455 = C9693 * C36999;
    const double C82423 = C9693 * C81993;
    const double C83395 = C9693 * C91722;
    const double C9964 = C9962 + C1671;
    const double C8191 = C7870 * C4177;
    const double C8855 = C7870 * C4083;
    const double C18864 = C7870 * C15093;
    const double C35692 = C7870 * C31929;
    const double C50198 = C7870 * C91722;
    const double C8513 = C8511 + C3999;
    const double C7744 = C4078 * C3496;
    const double C12144 = C93662 * C3496;
    const double C18423 = C93711 * C3496;
    const double C28343 = C93818 * C3496;
    const double C35258 = C93711 * C3496;
    const double C49140 = C93845 * C3496;
    const double C53844 = C31828 * C3496;
    const double C92043 = C92042 + C92035;
    const double C821 =
        (C92124 * C92038 + C92332 + C92332 +
         C92009 * (2 * ae * C92124 * C92034 + C92009 * C92325)) /
        C91701;
    const double C899 = (ae * C92130 + C92009 * C92134 + C92332 +
                         C92124 * (C92041 + C92124 * C92145)) /
                        C91701;
    const double C1023 = (ae * C92130 + C92009 * C92215 + C92332 +
                          C92124 * (C92041 + C92124 * C92220)) /
                         C91701;
    const double C3570 = (C92332 + C92167 * C92124 * C92188) / C91701;
    const double C3854 = (C92332 + C92167 * C92124 * C92278) / C91701;
    const double C5838 = C4083 * C3414;
    const double C7743 = C4177 * C3414;
    const double C7863 = C275 * C3414;
    const double C8981 = C93587 * C3414;
    const double C12143 = C188 * C3414;
    const double C12253 = C9771 * C3414;
    const double C18422 = C15093 * C3414;
    const double C19609 = C93843 * C3414;
    const double C22685 = C20350 * C3414;
    const double C28617 = C4075 * C3414;
    const double C35257 = C31929 * C3414;
    const double C36430 = C31826 * C3414;
    const double C39204 = C36999 * C3414;
    const double C43160 = C93582 * C3414;
    const double C47319 = C91722 * C3414;
    const double C50312 = C93587 * C3414;
    const double C54114 = C93805 * C3414;
    const double C64673 = C62345 * C3414;
    const double C1402 =
        (C92167 * C92038 + C92434 + C92434 +
         C92009 * (2 * ae * C92167 * C92034 + C92009 * C92427)) /
        C91701;
    const double C1546 = (ae * C92173 + C92009 * C92177 + C92434 +
                          C92167 * (C92041 + C92167 * C92188)) /
                         C91701;
    const double C1786 = (ae * C92173 + C92009 * C92273 + C92434 +
                          C92167 * (C92041 + C92167 * C92278)) /
                         C91701;
    const double C3640 = (C92434 + C92124 * C92167 * C92220) / C91701;
    const double C5275 = C5256 + C5257;
    const double C38784 = C38774 + C38775;
    const double C46830 = C46811 + C46812;
    const double C11460 = C11441 + C11442;
    const double C44105 = C44097 + C44098;
    const double C53061 = C53047 + C53048;
    const double C92659 = C92658 + C92655;
    const double C6174 =
        (C92167 * C92237 + C92771 + C92771 +
         C92124 * (2 * ae * C92167 * C92135 + C92124 * C92167 * C92242)) /
        C91701;
    const double C6427 = (ae * C92173 + C92124 * C92294 + C92771 +
                          C92167 * (C92657 + C92167 * C92731)) /
                         C91701;
    const double C92958 = C92957 + C92954;
    const double C6507 =
        (C92124 * C92311 + C92805 + C92805 +
         C92167 * (2 * ae * C92709 + C92167 * C92124 * C92316)) /
        C91701;
    const double C6514 = C275 * C6009;
    const double C11020 = C9772 * C6009;
    const double C14806 = C188 * C6009;
    const double C14911 = C9771 * C6009;
    const double C25233 = C20350 * C6009;
    const double C27958 = C15093 * C6009;
    const double C30919 = C93737 * C6009;
    const double C41338 = C9603 * C6009;
    const double C41706 = C36999 * C6009;
    const double C42662 = C31929 * C6009;
    const double C42750 = C9770 * C6009;
    const double C44963 = C9602 * C6009;
    const double C67213 = C62345 * C6009;
    const double C69351 = C4177 * C6009;
    const double C71584 = C93737 * C6009;
    const double C83219 = C81993 * C6009;
    const double C87672 = C81840 * C6009;
    const double C91033 = C93847 * C6009;
    const double C14805 = C93662 * C3923;
    const double C27953 = C93711 * C3923;
    const double C31603 = C93818 * C3923;
    const double C42659 = C93711 * C3923;
    const double C45513 = C31828 * C3923;
    const double C59256 = C93845 * C3923;
    const double C62000 = C93844 * C3923;
    const double C69346 = C4078 * C3923;
    const double C72130 = C4077 * C3923;
    const double C5461 = C5454 + C5455;
    const double C37702 = C37689 + C37690;
    const double C41626 = C41619 + C41620;
    const double C14490 = C14482 + C3714;
    const double C14160 = C14148 + C14149;
    const double C27317 = C27294 + C27295;
    const double C40058 = C40050 + C40051;
    const double C42102 = C42079 + C42080;
    const double C68843 = C68820 + C68821;
    const double C71467 = C71455 + C71456;
    const double C14491 = C14485 + C10716;
    const double C14162 = C14154 + C14155;
    const double C27326 = C27312 + C27313;
    const double C31338 = C31334 + C31335;
    const double C41452 = C41445 + C41446;
    const double C41623 = C41613 + C41614;
    const double C42106 = C42087 + C42088;
    const double C45306 = C45301 + C45302;
    const double C68852 = C68838 + C68839;
    const double C71923 = C71917 + C71918;
    const double C449 = C445 + C432;
    const double C450 = C446 + C435;
    const double C2312 = C2309 + C2302;
    const double C3026 = C3023 + C3016;
    const double C11573 = C11569 + C11554;
    const double C73313 = C73305 + C73306;
    const double C9201 = C93673 * C3783;
    const double C26753 = C93737 * C3783;
    const double C31337 = C93819 * C3783;
    const double C41612 = C9602 * C3783;
    const double C45304 = C9601 * C3783;
    const double C68382 = C93737 * C3783;
    const double C71920 = C62191 * C3783;
    const double C87930 = C93847 * C3783;
    const double C91361 = C93846 * C3783;
    const double C11843 = C11836 + C11837;
    const double C42578 = C42571 + C42572;
    const double C69360 = C69353 + C69354;
    const double C528 = C511 + C525;
    const double C662 = C645 + C659;
    const double C744 = C740 + C727;
    const double C529 = C514 + C526;
    const double C663 = C648 + C660;
    const double C745 = C741 + C730;
    const double C2626 = C2623 + C2616;
    const double C5741 = C5737 + C5723;
    const double C37626 = C37618 + C37619;
    const double C3340 = C3337 + C3330;
    const double C9527 = C9525 + C9519;
    const double C92086 = C92078 + C92068;
    const double C92071 = C92070 + C92059;
    const double C92574 = ae * C92573;
    const double C5845 = C4083 * C5826;
    const double C12139 = C188 * C5826;
    const double C12251 = C9772 * C5826;
    const double C14373 = C93587 * C5826;
    const double C27300 = C15093 * C5826;
    const double C29698 = C20350 * C5826;
    const double C40497 = C36999 * C5826;
    const double C43164 = C93582 * C5826;
    const double C43889 = C31929 * C5826;
    const double C47326 = C91722 * C5826;
    const double C53040 = C93587 * C5826;
    const double C79787 = C62345 * C5826;
    const double C84259 = C81993 * C5826;
    const double C92340 = ae * C92339;
    const double C4920 = (2 * C92331 + C92124 * C92339) / C91696;
    const double C5823 = (C92167 * C92339) / C91696;
    const double C92442 = ae * C92441;
    const double C11106 = (2 * C92433 + C92167 * C92441) / C91696;
    const double C37562 =
        (4 * (2 * C92623 + ae * C92624 + C92124 * C93094) +
         ae * (3 * C92624 + C92124 * C93095) +
         C92124 * (3 * C93094 + ae * C93095 +
                   C92124 * (2 * C93090 + ae * C93091 +
                             C92124 * (C92153 + ae * C92124 * C92094 +
                                       C92124 * (ae * C92094 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C38112 =
        (2 * C92623 + ae * C92624 + C92124 * C93094 +
         (2 * C93090 + ae * C93091 +
          C92124 * (C92153 + ae * C92124 * C92094 +
                    C92124 * (ae * C92094 +
                              C92124 * std::pow(C92015, 7) * bs[7] * C92128))) *
             C92306) /
        C91701;
    const double C39893 =
        (C92167 * (3 * C93094 + ae * C93095 +
                   C92124 * (2 * C93090 + ae * C93091 +
                             C92124 * (C92153 + ae * C92124 * C92094 +
                                       C92124 * (ae * C92094 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C44828 =
        (2 * C92167 * C93094 +
         C92167 *
             (C93094 + (C92153 + ae * C93221 +
                        C92124 * (ae * C92094 + C92124 * std::pow(C92015, 7) *
                                                    bs[7] * C92128)) *
                           C92306)) /
        C91701;
    const double C37681 =
        (4 * (2 * C92636 + ae * C92624 + C92124 * C93104) +
         ae * (3 * C92624 + C92124 * C93095) +
         C92124 * (3 * C93104 + ae * C93095 +
                   C92124 * (2 * C93102 + ae * C93091 +
                             C92124 * (C92224 + ae * C92124 * C92094 +
                                       C92124 * (ae * C92094 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C44966 = C44954 + C44955;
    const double C73369 =
        (4 * (2 * C92901 + ae * C92902 + C92167 * C93298) +
         ae * (3 * C92902 + C92167 * C93299) +
         C92167 * (3 * C93298 + ae * C93299 +
                   C92167 * (2 * C93294 + ae * C93295 +
                             C92167 * (C92196 + ae * C92167 * C92094 +
                                       C92167 * (ae * C92094 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C73599 =
        (4 * (2 * C92928 + ae * C92902 + C92167 * C93311) +
         ae * (3 * C92902 + C92167 * C93299) +
         C92167 * (3 * C93311 + ae * C93299 +
                   C92167 * (2 * C93309 + ae * C93295 +
                             C92167 * (C92282 + ae * C92167 * C92094 +
                                       C92167 * (ae * C92094 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C37628 = C37622 + C37623;
    const double C37706 = C37697 + C37698;
    const double C41363 = C41345 + C41346;
    const double C41454 = C41449 + C41450;
    const double C61467 = C61459 + C61460;
    const double C71587 = C71571 + C71572;
    const double C39971 = C39963 + C39964;
    const double C40055 = C40044 + C40045;
    const double C58093 = C58083 + C58084;
    const double C68145 = C68129 + C68130;
    const double C73315 = C73309 + C73310;
    const double C73435 = C73430 + C73431;
    const double C8627 = C93587 * C3418;
    const double C19285 = C93843 * C3418;
    const double C28201 = C4075 * C3418;
    const double C36106 = C31826 * C3418;
    const double C42853 = C93582 * C3418;
    const double C49980 = C93587 * C3418;
    const double C53702 = C93805 * C3418;
    const double C14035 = C4075 * C5831;
    const double C41172 = C93582 * C5831;
    const double C52706 = C93805 * C5831;
    const double C92106 = C92103 * ae;
    const double C2056 = (C92124 * (3 * C92146 + C92009 * C92164) +
                          (3 * C92060 + C92009 * C92103) * ae) /
                         C91696;
    const double C2856 = (C92167 * (3 * C92189 + C92009 * C92207) +
                          (3 * C92060 + C92009 * C92103) * ae) /
                         C91696;
    const double C3568 =
        (C92167 * C92124 * C92207 + C92124 * C92103 * ae) / C91696;
    const double C113 = 4 * (2 * C92032 + C92009 * C92060) +
                        C92009 * (3 * C92060 + C92009 * C92103);
    const double C811 = 2 * C92032 + C92009 * C92060 + C92103 * C92232;
    const double C1392 = 2 * C92032 + C92009 * C92060 + C92103 * C92306;
    const double C1983 = C92124 * (3 * C92060 + C92009 * C92103);
    const double C2697 = C92167 * (3 * C92060 + C92009 * C92103);
    const double C3412 = C92167 * C92124 * C92103;
    const double C92832 = ae * C92829;
    const double C92831 = C92124 * C92829;
    const double C92847 = C92167 * C92829;
    const double C93036 = ae * C93033;
    const double C93035 = C92167 * C93033;
    const double C93016 = C93015 + C92830;
    const double C8184 =
        (ae * C92146 + C92167 * C92265 +
         ae * (C92167 * C92124 * C92203 + C92830) +
         C92124 * (ae * (C92167 * C92203 + C92099) +
                   C92124 * (ae * C92160 +
                             C92167 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C92698 = C92148 + C92696;
    const double C92780 = C92644 + C92779;
    const double C92874 = ae * C92872;
    const double C92995 = C92191 + C92992;
    const double C92816 = C92815 + C92695;
    const double C9521 = C275 * C8844;
    const double C27077 = C20350 * C8844;
    const double C70358 = C62345 * C8844;
    const double C93080 = ae * C93078;
    const double C93079 = C92167 * C93078;
    const double C92111 = C92109 + C92095;
    const double C92349 = ae * C92347;
    const double C92820 = C92124 * C92347;
    const double C92841 = C92167 * C92347;
    const double C5828 = (C92339 + C92347 * C92306) / C91696;
    const double C92451 = ae * C92449;
    const double C93020 = C92167 * C92449;
    const double C92580 = ae * C92578;
    const double C93004 = C92327 + C93003;
    const double C93128 = C93126 + C93118;
    const double C93177 = ae * C93175;
    const double C93269 = C92167 * C93175;
    const double C93340 = C93339 + C93332;
    const double C92110 = C92009 * C92108;
    const double C4924 =
        (2 * ae * (2 * C92124 * C92034 + C92124 * (C92034 + C92058 * C92232)) +
         C92009 * (2 * C92325 + C92124 * C92345)) /
        C91701;
    const double C4926 = (3 * (C92038 + C92064 * C92232) +
                          C92124 * (2 * C92325 + C92124 * C92345)) /
                         C91701;
    const double C4927 =
        (2 * ae *
             (3 * (C92034 + C92058 * C92232) +
              C92124 * (2 * C92529 + C92124 * (C92058 + C92094 * C92232))) +
         C92009 * (3 * C92345 +
                   C92124 * (2 * C92530 +
                             C92124 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C5829 =
        (2 * ae * C92167 * C92624 + C92009 * C92167 * C92345) / C91701;
    const double C5833 = (C92038 + C92064 * C92232 + C92345 * C92306) / C91701;
    const double C5834 =
        (2 * ae * (C92624 + (C92058 + C92094 * C92232) * C92306) +
         C92009 * (C92345 + (C92101 + (C92081 * C92082 +
                                       C92013 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92232) *
                                C92306)) /
        C91701;
    const double C8619 = (C92167 * (2 * C92325 + C92124 * C92345)) / C91701;
    const double C37484 =
        (4 * (2 * C92325 + C92124 * C92345) +
         C92124 * (3 * C92345 +
                   C92124 * (2 * C92530 +
                             C92124 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C38052 =
        (2 * C92325 + C92124 * C92345 +
         (2 * C92530 +
          C92124 * (C92101 +
                    (C92081 * C92082 + C92013 * bs[7] * std::pow(C92015, 7)) *
                        C92016 * C92232)) *
             C92306) /
        C91701;
    const double C39806 =
        (C92167 *
         (3 * C92345 +
          C92124 * (2 * C92530 +
                    C92124 * (C92101 + (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C44724 =
        (2 * C92167 * C92345 +
         C92167 * (C92345 + (C92101 + (C92081 * C92082 +
                                       C92013 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92232) *
                                C92306)) /
        C91701;
    const double C11110 =
        (2 * ae * (2 * C92167 * C92034 + C92167 * (C92034 + C92058 * C92306)) +
         C92009 * (2 * C92427 + C92167 * C92447)) /
        C91701;
    const double C11112 = (3 * (C92038 + C92064 * C92306) +
                           C92167 * (2 * C92427 + C92167 * C92447)) /
                          C91701;
    const double C11113 =
        (2 * ae *
             (3 * (C92034 + C92058 * C92306) +
              C92167 * (2 * C92550 + C92167 * (C92058 + C92094 * C92306))) +
         C92009 * (3 * C92447 +
                   C92167 * (2 * C92551 +
                             C92167 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C73243 =
        (4 * (2 * C92427 + C92167 * C92447) +
         C92167 * (3 * C92447 +
                   C92167 * (2 * C92551 +
                             C92167 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C92540 = C92539 + C92535;
    const double C14032 =
        (2 * ae *
             (2 * C92167 * C92529 +
              C92167 * (C92529 + C92124 * C92094 * C92306)) +
         C92009 *
             (2 * C92576 +
              C92167 * (C92530 + C92124 *
                                     (C92081 * C92082 +
                                      C92013 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C41975 =
        (3 * (C92325 + C92530 * C92306) +
         C92167 *
             (2 * C92576 +
              C92167 * (C92530 + C92124 *
                                     (C92081 * C92082 +
                                      C92013 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C14037 = C93587 * C5832;
    const double C42855 = C93582 * C5832;
    const double C52704 = C93587 * C5832;
    const double C41983 = C93582 * C14031;
    const double C92561 = C92560 + C92556;
    const double C424 =
        (4 * (2 * C92009 * C92242 + C92009 * C92249) +
         C92009 * (3 * C92249 +
                   C92009 * (2 * C92009 * C92247 +
                             C92009 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C1076 = (2 * ae * (2 * C92137 + C92009 * C92146) +
                          C92124 * (2 * C92009 * C92242 + C92009 * C92249)) /
                         C91701;
    const double C1657 =
        (C92167 * (2 * C92009 * C92242 + C92009 * C92249)) / C91701;
    const double C1663 = (C92237 + C92242 * C92013 + C92249 * C92306) / C91701;
    const double C1664 =
        (2 * C92009 * C92242 + C92009 * C92249 +
         (2 * C92009 * C92247 +
          C92009 * (C92247 +
                    (C92081 * C92082 + C92232 * bs[7] * std::pow(C92015, 7)) *
                        C92016 * C92013)) *
             C92306) /
        C91701;
    const double C2295 =
        (2 * ae * (3 * C92146 + C92009 * C92164) +
         C92124 * (3 * C92249 +
                   C92009 * (2 * C92009 * C92247 +
                             C92009 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3009 =
        (C92167 *
         (3 * C92249 +
          C92009 * (2 * C92009 * C92247 +
                    C92009 * (C92247 + (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3711 =
        (2 * ae * C92167 * C92146 + C92124 * C92167 * C92249) / C91701;
    const double C12465 =
        (2 * ae * (C92146 + C92160 * C92306) +
         C92124 * (C92249 + (C92247 + (C92081 * C92082 +
                                       C92232 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92013) *
                                C92306)) /
        C91701;
    const double C13482 =
        (2 * C92167 * C92249 +
         C92167 * (C92249 + (C92247 + (C92081 * C92082 +
                                       C92232 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92013) *
                                C92306)) /
        C91701;
    const double C92693 = C92683 + C92689;
    const double C11548 =
        (3 * (C92641 + C92684 * C92306) +
         C92167 *
             (2 * C92870 +
              C92167 * (C92684 + C92009 *
                                     (C92081 * C92082 +
                                      C92232 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C14480 =
        (2 * ae * (2 * C92921 + C92167 * C92923) +
         C92124 *
             (2 * C92870 +
              C92167 * (C92684 + C92009 *
                                     (C92081 * C92082 +
                                      C92232 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C93120 = C92124 * C93116;
    const double C42381 =
        (2 * ae *
             (3 * C92919 +
              C92167 * (2 * C93179 + C92167 * (C92142 + C92155 * C92306))) +
         C92124 * (3 * C93173 +
                   C92167 * (2 * C93201 +
                             C92167 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C73487 =
        (4 * (2 * C92864 + C92167 * C93173) +
         C92167 * (3 * C93173 +
                   C92167 * (2 * C93201 +
                             C92167 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C93209 = C93200 + C93205;
    const double C719 =
        (4 * (2 * C92009 * C92316 + C92009 * C92323) +
         C92009 * (3 * C92323 +
                   C92009 * (2 * C92009 * C92321 +
                             C92009 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C1316 =
        (C92124 * (2 * C92009 * C92316 + C92009 * C92323)) / C91701;
    const double C1322 = (C92311 + C92316 * C92013 + C92323 * C92232) / C91701;
    const double C1323 =
        (2 * C92009 * C92316 + C92009 * C92323 +
         (2 * C92009 * C92321 +
          C92009 * (C92321 +
                    (C92081 * C92082 + C92306 * bs[7] * std::pow(C92015, 7)) *
                        C92016 * C92013)) *
             C92232) /
        C91701;
    const double C1897 = (2 * ae * (2 * C92180 + C92009 * C92189) +
                          C92167 * (2 * C92009 * C92316 + C92009 * C92323)) /
                         C91701;
    const double C2609 =
        (C92124 *
         (3 * C92323 +
          C92009 * (2 * C92009 * C92321 +
                    C92009 * (C92321 + (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3323 =
        (2 * ae * (3 * C92189 + C92009 * C92207) +
         C92167 * (3 * C92323 +
                   C92009 * (2 * C92009 * C92321 +
                             C92009 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3995 =
        (2 * ae * C92124 * C92189 + C92167 * C92124 * C92323) / C91701;
    const double C7528 =
        (2 * C92124 * C92323 +
         C92124 * (C92323 + (C92321 + (C92081 * C92082 +
                                       C92306 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92013) *
                                C92232)) /
        C91701;
    const double C8502 =
        (2 * ae * (C92189 + C92203 * C92232) +
         C92167 * (C92323 + (C92321 + (C92081 * C92082 +
                                       C92306 * bs[7] * std::pow(C92015, 7)) *
                                          C92016 * C92013) *
                                C92232)) /
        C91701;
    const double C92988 = C92982 + C92983;
    const double C37993 =
        (4 * (2 * C93061 + C92124 * C93162) +
         C92124 * (3 * C93162 +
                   C92124 * (2 * C92124 * C92321 +
                             C92124 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C40415 =
        (2 * ae * (3 * C92713 + C92124 * C93150) +
         C92167 * (3 * C93162 +
                   C92124 * (2 * C92124 * C92321 +
                             C92124 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C93251 = C93241 + C93247;
    const double C93334 = C92167 * C93330;
    const double C93129 = C93127 * ae;
    const double C39960 = (C92167 * (3 * C92713 + C92124 * C93150) +
                           (3 * C92671 + C92124 * C93127) * ae) /
                          C91696;
    const double C37482 = 4 * (2 * C92653 + C92124 * C92671) +
                          C92124 * (3 * C92671 + C92124 * C93127);
    const double C38050 = 2 * C92653 + C92124 * C92671 + C93127 * C92306;
    const double C39804 = C92167 * (3 * C92671 + C92124 * C93127);
    const double C93281 = ae * C93278;
    const double C93280 = C92167 * C93278;
    const double C93256 = C93062 + C93254;
    const double C93336 = C93333 * ae;
    const double C73241 = 4 * (2 * C92952 + C92167 * C92970) +
                          C92167 * (3 * C92970 + C92167 * C93333);
    const double C92389 = ae * C92388;
    const double C892 =
        (C92130 + C92135 * C92013 + C92124 * C92388 + C92124 * C92060 * ae) /
        C91696;
    const double C3493 = (C92167 * C92388) / C91696;
    const double C12136 = (C92388 + C92829 * C92306) / C91696;
    const double C225 = C216 + C217;
    const double C443 = C436 + C437;
    const double C523 = C517 + C518;
    const double C2304 = C2297 + C1085;
    const double C2072 = C2061 + C2062;
    const double C15129 = C15115 + C15116;
    const double C31965 = C31951 + C31952;
    const double C3018 = C3011 + C1666;
    const double C2786 = C2775 + C2776;
    const double C3103 = C3094 + C3095;
    const double C20629 = C20621 + C20622;
    const double C62624 = C62616 + C62617;
    const double C9963 = C9960 + C1672;
    const double C9696 = C9691 + C9692;
    const double C10057 = C10048 + C10049;
    const double C24004 = C23996 + C23997;
    const double C65984 = C65976 + C65977;
    const double C5927 =
        (C92167 * (C92145 + C92329 + C92124 * C92627)) / C91701;
    const double C5931 = (C92041 + C92124 * C92145 + C92627 * C92306) / C91701;
    const double C5932 =
        (C92145 + C92329 + C92124 * C92627 +
         (C92159 + C92538 +
          C92124 *
              (C92107 + C92124 * (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92128))) *
             C92306) /
        C91701;
    const double C14146 =
        (2 * C92167 * C92627 +
         C92167 * (C92627 + (C92107 + C92124 * (ae * C92155 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92128)) *
                                C92306)) /
        C91701;
    const double C200 =
        (4 * (2 * C92145 + ae * C92146 + C92009 * C92163) +
         ae * (3 * C92146 + C92009 * C92164) +
         C92009 * (3 * C92163 + ae * C92164 +
                   C92009 * (2 * C92159 + ae * C92160 +
                             C92009 * (C92153 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C1475 =
        (C92167 * (2 * C92145 + ae * C92146 + C92009 * C92163)) / C91701;
    const double C1481 =
        (C92134 + ae * C92137 + C92009 * C92145 + C92163 * C92306) / C91701;
    const double C1482 =
        (2 * C92145 + ae * C92146 + C92009 * C92163 +
         (2 * C92159 + ae * C92160 +
          C92009 * (C92153 + ae * C92009 * C92155 +
                    C92009 * (ae * C92155 +
                              C92009 * std::pow(C92015, 7) * bs[7] * C92128))) *
             C92306) /
        C91701;
    const double C2771 =
        (C92167 * (3 * C92163 + ae * C92164 +
                   C92009 * (2 * C92159 + ae * C92160 +
                             C92009 * (C92153 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C13134 =
        (2 * C92167 * C92163 +
         C92167 *
             (C92163 + (C92153 + ae * C92686 +
                        C92009 * (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92128)) *
                           C92306)) /
        C91701;
    const double C367 =
        (4 * (2 * C92220 + ae * C92146 + C92009 * C92228) +
         ae * (3 * C92146 + C92009 * C92164) +
         C92009 * (3 * C92228 + ae * C92164 +
                   C92009 * (2 * C92226 + ae * C92160 +
                             C92009 * (C92224 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C1599 =
        (C92167 * (2 * C92220 + ae * C92146 + C92009 * C92228)) / C91701;
    const double C1605 =
        (C92215 + ae * C92137 + C92009 * C92220 + C92228 * C92306) / C91701;
    const double C1606 =
        (2 * C92220 + ae * C92146 + C92009 * C92228 +
         (2 * C92226 + ae * C92160 +
          C92009 * (C92224 + ae * C92009 * C92155 +
                    C92009 * (ae * C92155 +
                              C92009 * std::pow(C92015, 7) * bs[7] * C92212))) *
             C92306) /
        C91701;
    const double C2942 =
        (C92167 * (3 * C92228 + ae * C92164 +
                   C92009 * (2 * C92226 + ae * C92160 +
                             C92009 * (C92224 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C13359 =
        (2 * C92167 * C92228 +
         C92167 *
             (C92228 + (C92224 + ae * C92686 +
                        C92009 * (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212)) *
                           C92306)) /
        C91701;
    const double C13589 = C9603 * C11654;
    const double C85541 = C81840 * C11654;
    const double C92648 = C92137 + C92646;
    const double C92768 = ae * C92767;
    const double C6190 = C4177 * C5925;
    const double C10715 = C188 * C5925;
    const double C12142 = C93662 * C5925;
    const double C12577 = C9772 * C5925;
    const double C14376 = C4083 * C5925;
    const double C16909 = C15093 * C5925;
    const double C27305 = C93711 * C5925;
    const double C30102 = C20350 * C5925;
    const double C33745 = C31929 * C5925;
    const double C43165 = C36999 * C5925;
    const double C43886 = C93711 * C5925;
    const double C53035 = C91722 * C5925;
    const double C80189 = C62345 * C5925;
    const double C84571 = C81993 * C5925;
    const double C11265 = C11257 * C4083;
    const double C13808 = C11257 * C9772;
    const double C74457 = C11257 * C36999;
    const double C83398 = C11257 * C91722;
    const double C85752 = C11257 * C81993;
    const double C11570 = C11566 + C11557;
    const double C93115 = C93106 + C92674;
    const double C92676 = C92675 + C92670;
    const double C92776 = ae * C92775;
    const double C14143 = (2 * C92770 + C92167 * C92775) / C91696;
    const double C73495 = C73492 + C11562;
    const double C73316 = C73311 + C73312;
    const double C73434 = C73428 + C73429;
    const double C73548 =
        (4 * (2 * C92877 + ae * C92919 + C92167 * C93185) +
         ae * (3 * C92919 + C92167 * C93305) +
         C92167 * (3 * C93185 + ae * C93305 +
                   C92167 * (2 * C93182 + ae * C93232 +
                             C92167 * (C92263 + ae * C92167 * C92155 +
                                       C92167 * (ae * C92155 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92254))))) /
        C91701;
    const double C73653 =
        (4 * (2 * C92936 + ae * C92919 + C92167 * C93317) +
         ae * (3 * C92919 + C92167 * C93305) +
         C92167 * (3 * C93317 + ae * C93305 +
                   C92167 * (2 * C93315 + ae * C93232 +
                             C92167 * (C92300 + ae * C92167 * C92155 +
                                       C92167 * (ae * C92155 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C9694 = C9687 + C9688;
    const double C30783 = C30778 + C30779;
    const double C44849 = C44836 + C44837;
    const double C68847 = C68828 + C68829;
    const double C71471 = C71463 + C71464;
    const double C14163 = C14156 + C14157;
    const double C27324 = C27308 + C27309;
    const double C42108 = C42091 + C42092;
    const double C68849 = C68832 + C68833;
    const double C44853 = C44844 + C44845;
    const double C68848 = C68830 + C68831;
    const double C90925 = C90920 + C90921;
    const double C71472 = C71465 + C71466;
    const double C42109 = C42093 + C42094;
    const double C75084 = C75081 + C75082;
    const double C88372 = C88362 + C88363;
    const double C73314 = C73307 + C73308;
    const double C92523 = ae * C92522;
    const double C1539 =
        (C92173 + C92178 * C92013 + C92167 * C92522 + C92167 * C92060 * ae) /
        C91696;
    const double C2389 = C2380 + C2381;
    const double C312 = C303 + C304;
    const double C657 = C651 + C652;
    const double C738 = C731 + C732;
    const double C2618 = C2611 + C1325;
    const double C2158 = C2147 + C2148;
    const double C2538 = C2529 + C2530;
    const double C15652 = C15644 + C15645;
    const double C32488 = C32480 + C32481;
    const double C4836 = C4831 + C1331;
    const double C4301 = C4296 + C4297;
    const double C4750 = C4741 + C4742;
    const double C18106 = C18098 + C18099;
    const double C34941 = C34933 + C34934;
    const double C3332 = C3325 + C1906;
    const double C2872 = C2861 + C2862;
    const double C3252 = C3243 + C3244;
    const double C20386 = C20372 + C20373;
    const double C62381 = C62367 + C62368;
    const double C19180 = C19175 + C4000;
    const double C18541 = C18538 + C18539;
    const double C22695 = C22681 + C22682;
    const double C64683 = C64669 + C64670;
    const double C287 =
        (4 * (2 * C92188 + ae * C92189 + C92009 * C92206) +
         ae * (3 * C92189 + C92009 * C92207) +
         C92009 * (3 * C92206 + ae * C92207 +
                   C92009 * (2 * C92202 + ae * C92203 +
                             C92009 * (C92196 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C960 =
        (C92124 * (2 * C92188 + ae * C92189 + C92009 * C92206)) / C91701;
    const double C966 =
        (C92177 + ae * C92180 + C92009 * C92188 + C92206 * C92232) / C91701;
    const double C967 =
        (2 * C92188 + ae * C92189 + C92009 * C92206 +
         (2 * C92202 + ae * C92203 +
          C92009 * (C92196 + ae * C92009 * C92198 +
                    C92009 * (ae * C92198 +
                              C92009 * std::pow(C92015, 7) * bs[7] * C92171))) *
             C92232) /
        C91701;
    const double C2143 =
        (C92124 * (3 * C92206 + ae * C92207 +
                   C92009 * (2 * C92202 + ae * C92203 +
                             C92009 * (C92196 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C6857 =
        (2 * C92124 * C92206 +
         C92124 *
             (C92206 + (C92196 + ae * C92717 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171)) *
                           C92232)) /
        C91701;
    const double C584 =
        (4 * (2 * C92278 + ae * C92189 + C92009 * C92286) +
         ae * (3 * C92189 + C92009 * C92207) +
         C92009 * (3 * C92286 + ae * C92207 +
                   C92009 * (2 * C92284 + ae * C92203 +
                             C92009 * (C92282 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C1200 =
        (C92124 * (2 * C92278 + ae * C92189 + C92009 * C92286)) / C91701;
    const double C1206 =
        (C92273 + ae * C92180 + C92009 * C92278 + C92286 * C92232) / C91701;
    const double C1207 =
        (2 * C92278 + ae * C92189 + C92009 * C92286 +
         (2 * C92284 + ae * C92203 +
          C92009 * (C92282 + ae * C92009 * C92198 +
                    C92009 * (ae * C92198 +
                              C92009 * std::pow(C92015, 7) * bs[7] * C92270))) *
             C92232) /
        C91701;
    const double C2460 =
        (C92124 * (3 * C92286 + ae * C92207 +
                   C92009 * (2 * C92284 + ae * C92203 +
                             C92009 * (C92282 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C7309 =
        (2 * C92124 * C92286 +
         C92124 *
             (C92286 + (C92282 + ae * C92717 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270)) *
                           C92232)) /
        C91701;
    const double C92813 = ae * C92812;
    const double C6010 =
        (C92124 * C92180 + C92167 * C92812 + C92167 * C92643 * ae) / C91696;
    const double C7428 = C7422 + C7423;
    const double C92947 = C92180 + C92945;
    const double C5162 = C5154 * C4083;
    const double C7207 = C5154 * C4178;
    const double C38702 = C5154 * C36999;
    const double C46721 = C5154 * C91722;
    const double C48612 = C5154 * C45817;
    const double C5738 = C5734 + C5725;
    const double C8512 = C8510 + C6512;
    const double C8188 = C7868 * C4178;
    const double C8849 = C7868 * C4083;
    const double C49566 = C7868 * C45817;
    const double C50194 = C7868 * C91722;
    const double C92809 = ae * C92808;
    const double C6011 =
        (C92173 + C92178 * C92232 + C92167 * C92808 + C92167 * C92671 * ae) /
        C91696;
    const double C37998 = C37995 + C5730;
    const double C37629 = C37624 + C37625;
    const double C37886 = C37880 + C37881;
    const double C40420 = C40417 + C9520;
    const double C39972 = C39965 + C39966;
    const double C40277 = C40268 + C40269;
    const double C58095 = C58087 + C58088;
    const double C68147 = C68133 + C68134;
    const double C93329 = C93319 + C92973;
    const double C92975 = C92974 + C92969;
    const double C93069 = C92709 + C93067;
    const double C37815 =
        (4 * (2 * C92712 + ae * C92713 + C92124 * C93149) +
         ae * (3 * C92713 + C92124 * C93150) +
         C92124 * (3 * C93149 + ae * C93150 +
                   C92124 * (2 * C93145 + ae * C93146 +
                             C92124 * (C92263 + ae * C92124 * C92198 +
                                       C92124 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92254))))) /
        C91701;
    const double C37942 =
        (4 * (2 * C92731 + ae * C92713 + C92124 * C93159) +
         ae * (3 * C92713 + C92124 * C93150) +
         C92124 * (3 * C93159 + ae * C93150 +
                   C92124 * (2 * C93157 + ae * C93146 +
                             C92124 * (C92300 + ae * C92124 * C92198 +
                                       C92124 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C4299 = C4292 + C4293;
    const double C37627 = C37620 + C37621;
    const double C13380 = C13367 + C13368;
    const double C55346 = C55341 + C55342;
    const double C11462 = C11445 + C11446;
    const double C44106 = C44099 + C44100;
    const double C53059 = C53043 + C53044;
    const double C11463 = C11447 + C11448;
    const double C74600 = C74597 + C74598;
    const double C83564 = C83554 + C83555;
    const double C12468 = C93662 * C6177;
    const double C27627 = C93711 * C6177;
    const double C44212 = C93711 * C6177;
    const double C11558 = C93662 * C11545;
    const double C73493 = C93662 * C11547;
    const double C42393 = C93711 * C14479;
    const double C75294 = C93662 * C14479;
    const double C88616 = C93711 * C14479;
    const double C2311 = C2308 + C2300;
    const double C3025 = C3022 + C3014;
    const double C11575 = C11571 + C11561;
    const double C7320 = C7313 + C7314;
    const double C48724 = C48717 + C48718;
    const double C5558 = C5549 + C5550;
    const double C39000 = C38994 + C38995;
    const double C47089 = C47080 + C47081;
    const double C5559 = C5551 + C5552;
    const double C39001 = C38997 + C38998;
    const double C47090 = C47082 + C47083;
    const double C5726 = C93673 * C5715;
    const double C8505 = C93673 * C6505;
    const double C27067 = C93737 * C6505;
    const double C70356 = C93737 * C6505;
    const double C2625 = C2622 + C2614;
    const double C3339 = C3336 + C3328;
    const double C5743 = C5739 + C5729;
    const double C9526 = C9524 + C9517;
    const double C37495 = C36999 * C37483;
    const double C38061 = C36999 * C38051;
    const double C39814 = C36999 * C39805;
    const double C73247 = C36999 * C73242;
    const double C439 = C188 * C194;
    const double C1673 = C188 * C1474;
    const double C3017 = C188 * C2770;
    const double C73494 = C188 * C73300;
    const double C734 = C275 * C281;
    const double C1332 = C275 * C959;
    const double C2617 = C275 * C2142;
    const double C37997 = C275 * C37613;
    const double C16366 = C16356 + C16357;
    const double C21964 = C21945 + C21946;
    const double C33202 = C33192 + C33193;
    const double C63958 = C63939 + C63940;
    const double C91728 = C91726 * ae;
    const double C91727 = C91726 * C91706;
    const double C4081 = (-C91698 / C91696) / C91702 - (C91726 * be) / C91696;
    const double C37877 = C37703 * C275;
    const double C37874 = C37701 * C275;
    const double C41714 = C37701 * C9770;
    const double C37871 = C37699 * C275;
    const double C41701 = C37699 * C9770;
    const double C37889 = C37885 * C93673;
    const double C58414 = C37885 * C93819;
    const double C68482 = C37885 * C62191;
    const double C37888 = C37884 * C93673;
    const double C41713 = C37884 * C9601;
    const double C58409 = C37884 * C93819;
    const double C68477 = C37884 * C62191;
    const double C88029 = C37884 * C93846;
    const double C37887 = C37883 * C93673;
    const double C41702 = C37883 * C9601;
    const double C58405 = C37883 * C93819;
    const double C68473 = C37883 * C62191;
    const double C88020 = C37883 * C93846;
    const double C39002 = C38999 * C93673;
    const double C43468 = C38999 * C9601;
    const double C60049 = C38999 * C93819;
    const double C70150 = C38999 * C62191;
    const double C89624 = C38999 * C93846;
    const double C40276 = C40059 * C275;
    const double C41703 = C40059 * C9771;
    const double C42273 = C40059 * C31929;
    const double C45412 = C40059 * C9770;
    const double C58406 = C40059 * C20350;
    const double C68474 = C40059 * C62345;
    const double C69004 = C40059 * C4177;
    const double C71693 = C40059 * C4176;
    const double C75219 = C40059 * C188;
    const double C88527 = C40059 * C15093;
    const double C40273 = C40057 * C275;
    const double C41712 = C40057 * C9771;
    const double C45073 = C40057 * C31929;
    const double C58410 = C40057 * C20350;
    const double C58916 = C40057 * C45817;
    const double C68478 = C40057 * C62345;
    const double C69006 = C40057 * C4178;
    const double C71695 = C40057 * C4177;
    const double C91142 = C40057 * C15093;
    const double C40282 = C40279 * C93673;
    const double C41704 = C40279 * C9602;
    const double C45411 = C40279 * C9601;
    const double C58407 = C40279 * C93737;
    const double C61899 = C40279 * C93819;
    const double C68475 = C40279 * C93737;
    const double C72029 = C40279 * C62191;
    const double C88022 = C40279 * C93847;
    const double C91467 = C40279 * C93846;
    const double C40281 = C40278 * C93673;
    const double C41711 = C40278 * C9602;
    const double C58411 = C40278 * C93737;
    const double C61895 = C40278 * C93819;
    const double C68479 = C40278 * C93737;
    const double C72025 = C40278 * C62191;
    const double C88027 = C40278 * C93847;
    const double C41705 = C41451 * C9772;
    const double C42279 = C41451 * C31929;
    const double C45410 = C41451 * C9771;
    const double C61898 = C41451 * C20350;
    const double C69011 = C41451 * C4177;
    const double C72028 = C41451 * C62345;
    const double C75221 = C41451 * C188;
    const double C88023 = C41451 * C81993;
    const double C88531 = C41451 * C15093;
    const double C73426 = C42296 * C188;
    const double C42303 = C42295 * C31828;
    const double C73427 = C42295 * C93662;
    const double C88535 = C42295 * C93818;
    const double C42302 = C42294 * C31929;
    const double C45408 = C42294 * C9772;
    const double C75223 = C42294 * C188;
    const double C88534 = C42294 * C15093;
    const double C91464 = C42294 * C81993;
    const double C42300 = C42292 * C31828;
    const double C58922 = C42292 * C93844;
    const double C69012 = C42292 * C4077;
    const double C73425 = C42292 * C93662;
    const double C88530 = C42292 * C93818;
    const double C69013 = C42291 * C4176;
    const double C73424 = C42291 * C188;
    const double C42298 = C42290 * C31828;
    const double C58913 = C42290 * C93844;
    const double C69003 = C42290 * C4077;
    const double C73423 = C42290 * C93662;
    const double C88526 = C42290 * C93818;
    const double C69002 = C42289 * C4176;
    const double C73422 = C42289 * C188;
    const double C44108 = C44104 * C31828;
    const double C60648 = C44104 * C93844;
    const double C70758 = C44104 * C4077;
    const double C74592 = C44104 * C93662;
    const double C90218 = C44104 * C93818;
    const double C91792 = C91791 * C91706;
    const double C91883 = C91791 * ae;
    const double C15092 = (C91791 * ae) / C91696 - C91778 / C91711;
    const double C31928 = (-C91778 / C91696) / C91702 - (C91791 * be) / C91696;
    const double C46371 = C46362 + C46363;
    const double C46370 = C46360 + C46361;
    const double C48831 = C48825 + C48826;
    const double C58758 = C58740 + C58741;
    const double C58757 = C58738 + C58739;
    const double C61360 = C61353 + C61354;
    const double C11576 = C11572 * C4075;
    const double C22045 = C11572 * C93842;
    const double C64039 = C11572 * C31825;
    const double C73489 = C11572 * C93582;
    const double C83643 = C11572 * C93805;
    const double C91818 = C91817 * C91706;
    const double C91954 = C91817 * ae;
    const double C20349 = (C91817 * ae) / C91696 - C91804 / C91711;
    const double C62344 = (-C91804 / C91696) / C91702 - (C91817 * be) / C91696;
    const double C82268 = C82259 + C82260;
    const double C82267 = C82257 + C82258;
    const double C87697 = C87679 + C87680;
    const double C87696 = C87677 + C87678;
    const double C87941 = C87931 + C87932;
    const double C91036 = C91024 + C91025;
    const double C747 = C743 * C93662;
    const double C4827 = C743 * C4077;
    const double C15731 = C743 * C93818;
    const double C32567 = C743 * C31828;
    const double C46448 = C743 * C93844;
    const double C2075 = C2067 + C2068;
    const double C4208 = C4188 + C4189;
    const double C6755 = C6745 + C6746;
    const double C15122 = C15101 + C15102;
    const double C31958 = C31937 + C31938;
    const double C5273 = C5252 + C5253;
    const double C38783 = C38772 + C38773;
    const double C46828 = C46807 + C46808;
    const double C2875 = C2867 + C2868;
    const double C9802 = C9782 + C9783;
    const double C13258 = C13248 + C13249;
    const double C20379 = C20358 + C20359;
    const double C62374 = C62353 + C62354;
    const double C11750 = C11739 + C11740;
    const double C44421 = C44417 + C44418;
    const double C53370 = C53359 + C53360;
    const double C5134 = C2161 * C93587;
    const double C6860 = C2161 * C4075;
    const double C15999 = C2161 * C93843;
    const double C17546 = C2161 * C93842;
    const double C32835 = C2161 * C31826;
    const double C34381 = C2161 * C31825;
    const double C38699 = C2161 * C93582;
    const double C46715 = C2161 * C93587;
    const double C48268 = C2161 * C93805;
    const double C38990 = C38782 * C275;
    const double C43467 = C38782 * C9770;
    const double C11237 = C2789 * C93587;
    const double C13137 = C2789 * C4075;
    const double C21778 = C2789 * C93843;
    const double C23554 = C2789 * C93842;
    const double C63772 = C2789 * C31826;
    const double C65534 = C2789 * C31825;
    const double C74454 = C2789 * C93582;
    const double C83392 = C2789 * C93587;
    const double C85107 = C2789 * C93805;
    const double C70757 = C44103 * C4176;
    const double C74591 = C44103 * C188;
    const double C4464 = C4079 * C1081;
    const double C7092 = C4078 * C1081;
    const double C17770 = C93711 * C1081;
    const double C34605 = C93711 * C1081;
    const double C46091 = C45718 * C1081;
    const double C48498 = C93845 * C1081;
    const double C8399 = C4078 * C3924;
    const double C12788 = C93662 * C3924;
    const double C19070 = C93711 * C3924;
    const double C29169 = C93818 * C3924;
    const double C35896 = C93711 * C3924;
    const double C49770 = C93845 * C3924;
    const double C54664 = C31828 * C3924;
    const double C4206 = C4184 + C4185;
    const double C4583 = C4574 + C4575;
    const double C6757 = C6749 + C6750;
    const double C17445 = C17435 + C17436;
    const double C34280 = C34270 + C34271;
    const double C45845 = C45823 + C45824;
    const double C12473 = C12469 + C3715;
    const double C7757 = C7749 + C7750;
    const double C12150 = C12145 + C12146;
    const double C18436 = C18426 + C18427;
    const double C35271 = C35261 + C35262;
    const double C10314 = C9603 * C1902;
    const double C13915 = C9602 * C1902;
    const double C24324 = C93737 * C1902;
    const double C66304 = C93737 * C1902;
    const double C82519 = C81840 * C1902;
    const double C85858 = C93847 * C1902;
    const double C8190 = C93673 * C3784;
    const double C12580 = C9602 * C3784;
    const double C23005 = C93737 * C3784;
    const double C30105 = C93819 * C3784;
    const double C64988 = C93737 * C3784;
    const double C80192 = C62191 * C3784;
    const double C84574 = C93847 * C3784;
    const double C9800 = C9778 + C9779;
    const double C10222 = C10213 + C10214;
    const double C13260 = C13252 + C13253;
    const double C23679 = C23669 + C23670;
    const double C65659 = C65649 + C65650;
    const double C82021 = C81999 + C82000;
    const double C4839 = C4837 + C4830;
    const double C9966 = C9964 + C9959;
    const double C8515 = C8513 + C8507;
    const double C92044 = ae * C92043;
    const double C117 =
        (2 * C92023 + C92009 * C92043 + (C92012 + C92026 * C92013) * ae) /
        C91696;
    const double C813 = (C92124 * C92043) / C91696;
    const double C1394 = (C92167 * C92043) / C91696;
    const double C6622 = C93587 * C821;
    const double C15817 = C14991 * C821;
    const double C17310 = C93843 * C821;
    const double C32653 = C31827 * C821;
    const double C34145 = C31826 * C821;
    const double C48034 = C93587 * C821;
    const double C4191 = C4079 * C899;
    const double C6744 = C4078 * C899;
    const double C17432 = C93711 * C899;
    const double C34267 = C93711 * C899;
    const double C45830 = C45718 * C899;
    const double C48154 = C93845 * C899;
    const double C5261 = C93587 * C1023;
    const double C6979 = C4075 * C1023;
    const double C16097 = C93843 * C1023;
    const double C32933 = C31826 * C1023;
    const double C38777 = C93582 * C1023;
    const double C46816 = C93587 * C1023;
    const double C48386 = C93805 * C1023;
    const double C7864 = C93673 * C3570;
    const double C12254 = C9602 * C3570;
    const double C22686 = C93737 * C3570;
    const double C29701 = C93819 * C3570;
    const double C64674 = C93737 * C3570;
    const double C79790 = C62191 * C3570;
    const double C84262 = C93847 * C3570;
    const double C9309 = C93587 * C3854;
    const double C19921 = C93843 * C3854;
    const double C29031 = C4075 * C3854;
    const double C36742 = C31826 * C3854;
    const double C43471 = C93582 * C3854;
    const double C50628 = C93587 * C3854;
    const double C54526 = C93805 * C3854;
    const double C7754 = C7743 + C7744;
    const double C8990 = C8980 + C8981;
    const double C12149 = C12143 + C12144;
    const double C18434 = C18422 + C18423;
    const double C35269 = C35257 + C35258;
    const double C43167 = C43159 + C43160;
    const double C50321 = C50311 + C50312;
    const double C13017 = C93587 * C1402;
    const double C21673 = C14991 * C1402;
    const double C23440 = C93843 * C1402;
    const double C54930 = C93587 * C1402;
    const double C63667 = C31827 * C1402;
    const double C65420 = C31826 * C1402;
    const double C9785 = C9603 * C1546;
    const double C13247 = C9602 * C1546;
    const double C23666 = C93737 * C1546;
    const double C65646 = C93737 * C1546;
    const double C82006 = C81840 * C1546;
    const double C85215 = C93847 * C1546;
    const double C11744 = C93587 * C1786;
    const double C13701 = C4075 * C1786;
    const double C22208 = C93843 * C1786;
    const double C44420 = C93582 * C1786;
    const double C53366 = C93587 * C1786;
    const double C64202 = C31826 * C1786;
    const double C85648 = C93805 * C1786;
    const double C8977 = C93587 * C3640;
    const double C19603 = C93843 * C3640;
    const double C28621 = C4075 * C3640;
    const double C36424 = C31826 * C3640;
    const double C43162 = C93582 * C3640;
    const double C50308 = C93587 * C3640;
    const double C54118 = C93805 * C3640;
    const double C38993 = C38784 * C275;
    const double C74593 = C44105 * C188;
    const double C92660 = ae * C92659;
    const double C5039 =
        (2 * C92380 + C92124 * C92659 + (C92012 + C92026 * C92232) * ae) /
        C91696;
    const double C5922 = (C92167 * C92659) / C91696;
    const double C31193 = C93711 * C6174;
    const double C45181 = C93711 * C6174;
    const double C59003 = C45718 * C6174;
    const double C61676 = C93845 * C6174;
    const double C69093 = C4079 * C6174;
    const double C71800 = C4078 * C6174;
    const double C14807 = C93662 * C6427;
    const double C27959 = C93711 * C6427;
    const double C42663 = C93711 * C6427;
    const double C45517 = C31828 * C6427;
    const double C59262 = C93845 * C6427;
    const double C69352 = C4078 * C6427;
    const double C91568 = C93818 * C6427;
    const double C92959 = ae * C92958;
    const double C11345 =
        (2 * C92514 + C92167 * C92958 + (C92012 + C92026 * C92306) * ae) /
        C91696;
    const double C31739 = C93737 * C6507;
    const double C41872 = C9603 * C6507;
    const double C45626 = C9602 * C6507;
    const double C72241 = C93737 * C6507;
    const double C88184 = C81840 * C6507;
    const double C91674 = C93847 * C6507;
    const double C30924 = C30918 + C30919;
    const double C41359 = C41337 + C41338;
    const double C41715 = C41706 + C41707;
    const double C44970 = C44962 + C44963;
    const double C71593 = C71583 + C71584;
    const double C87693 = C87671 + C87672;
    const double C14808 = C14804 + C14805;
    const double C27963 = C27952 + C27953;
    const double C42669 = C42658 + C42659;
    const double C69356 = C69345 + C69346;
    const double C72135 = C72129 + C72130;
    const double C14492 = C14490 + C3714;
    const double C75075 = C14160 * C36999;
    const double C42274 = C40058 * C93711;
    const double C45072 = C40058 * C31828;
    const double C58915 = C40058 * C93845;
    const double C61570 = C40058 * C93844;
    const double C69005 = C40058 * C4078;
    const double C71694 = C40058 * C4077;
    const double C75220 = C40058 * C93662;
    const double C88528 = C40058 * C93711;
    const double C91141 = C40058 * C93818;
    const double C14493 = C14491 + C10716;
    const double C75077 = C14162 * C36999;
    const double C42280 = C41452 * C93711;
    const double C45076 = C41452 * C31828;
    const double C58920 = C41452 * C93845;
    const double C69010 = C41452 * C4078;
    const double C75222 = C41452 * C93662;
    const double C88532 = C41452 * C93711;
    const double C91145 = C41452 * C93818;
    const double C11552 = C3026 * C93587;
    const double C13484 = C3026 * C4075;
    const double C22046 = C3026 * C93843;
    const double C23895 = C3026 * C93842;
    const double C64040 = C3026 * C31826;
    const double C65875 = C3026 * C31825;
    const double C74669 = C3026 * C93582;
    const double C83644 = C3026 * C93587;
    const double C85438 = C3026 * C93805;
    const double C11577 = C11573 * C4075;
    const double C22050 = C11573 * C93842;
    const double C64044 = C11573 * C31825;
    const double C73490 = C11573 * C93582;
    const double C83645 = C11573 * C93805;
    const double C9203 = C9200 + C9201;
    const double C26763 = C26752 + C26753;
    const double C41622 = C41611 + C41612;
    const double C45307 = C45303 + C45304;
    const double C68392 = C68381 + C68382;
    const double C748 = C744 * C93662;
    const double C4834 = C744 * C4077;
    const double C15733 = C744 * C93818;
    const double C32569 = C744 * C31828;
    const double C46453 = C744 * C93844;
    const double C749 = C745 * C93662;
    const double C15736 = C745 * C93818;
    const double C32572 = C745 * C31828;
    const double C2629 = C2626 * C93662;
    const double C4828 = C2626 * C4078;
    const double C7532 = C2626 * C4077;
    const double C15732 = C2626 * C93711;
    const double C18211 = C2626 * C93818;
    const double C32568 = C2626 * C93711;
    const double C35046 = C2626 * C31828;
    const double C46449 = C2626 * C93845;
    const double C48934 = C2626 * C93844;
    const double C3343 = C3340 * C93662;
    const double C8508 = C3340 * C4077;
    const double C19179 = C3340 * C93818;
    const double C36004 = C3340 * C31828;
    const double C49876 = C3340 * C93844;
    const double C92073 = ae * C92071;
    const double C92072 = C92009 * C92071;
    const double C92083 = 3 * C92071;
    const double C92326 = C92124 * C92071;
    const double C92428 = C92167 * C92071;
    const double C818 = (C92043 + C92071 * C92232) / C91696;
    const double C1399 = (C92043 + C92071 * C92306) / C91696;
    const double C3419 =
        (C92167 * C92325 + C92574 + C92574 +
         C92009 * (2 * ae * C92167 * C92529 + C92009 * C92167 * C92530)) /
        C91701;
    const double C6016 = (C92124 * C92188 + C92574 +
                          C92167 * (C92329 + C92167 * C92124 * C92202)) /
                         C91701;
    const double C6093 = (C92167 * C92220 + C92574 +
                          C92124 * (C92431 + C92124 * C92167 * C92226)) /
                         C91701;
    const double C6348 = (C92124 * C92278 + C92574 +
                          C92167 * (C92329 + C92167 * C92124 * C92284)) /
                         C91701;
    const double C14379 = C14372 + C14373;
    const double C43169 = C43163 + C43164;
    const double C53057 = C53039 + C53040;
    const double C826 = (C92038 + C92064 * C92232 + C92340 + C92340 +
                         C92009 * (2 * ae * (C92034 + C92058 * C92232) +
                                   C92009 * (C92064 + C92101 * C92232))) /
                        C91701;
    const double C5042 =
        (2 * (C92041 + C92124 * C92145) + C92340 +
         C92124 * (C92145 + C92329 + C92124 * (C92068 + C92124 * C92159))) /
        C91701;
    const double C5241 =
        (2 * (C92041 + C92124 * C92220) + C92340 +
         C92124 * (C92220 + C92329 + C92124 * (C92068 + C92124 * C92226))) /
        C91701;
    const double C6013 =
        (C92340 + C92167 * (C92188 + C92202 * C92232)) / C91701;
    const double C6345 =
        (C92340 + C92167 * (C92278 + C92284 * C92232)) / C91701;
    const double C4938 = C4083 * C4920;
    const double C5141 = C275 * C4920;
    const double C5267 = C93587 * C4920;
    const double C6741 = C4178 * C4920;
    const double C37005 = C36999 * C4920;
    const double C38779 = C93582 * C4920;
    const double C46537 = C91722 * C4920;
    const double C46822 = C93587 * C4920;
    const double C48151 = C45817 * C4920;
    const double C5836 = C4083 * C5823;
    const double C7741 = C4178 * C5823;
    const double C7859 = C275 * C5823;
    const double C8973 = C93587 * C5823;
    const double C26424 = C20350 * C5823;
    const double C28340 = C15093 * C5823;
    const double C39205 = C36999 * C5823;
    const double C47317 = C91722 * C5823;
    const double C49137 = C45817 * C5823;
    const double C50304 = C93587 * C5823;
    const double C53841 = C31929 * C5823;
    const double C59749 = C93582 * C5823;
    const double C69745 = C62345 * C5823;
    const double C1407 = (C92038 + C92064 * C92306 + C92442 + C92442 +
                          C92009 * (2 * ae * (C92034 + C92058 * C92306) +
                                    C92009 * (C92064 + C92101 * C92306))) /
                         C91701;
    const double C6096 =
        (C92442 + C92124 * (C92220 + C92226 * C92306)) / C91701;
    const double C11348 =
        (2 * (C92041 + C92167 * C92188) + C92442 +
         C92167 * (C92188 + C92431 + C92167 * (C92068 + C92167 * C92202))) /
        C91701;
    const double C11732 =
        (2 * (C92041 + C92167 * C92278) + C92442 +
         C92167 * (C92278 + C92431 + C92167 * (C92068 + C92167 * C92284))) /
        C91701;
    const double C11124 = C4083 * C11106;
    const double C11244 = C188 * C11106;
    const double C11452 = C93587 * C11106;
    const double C13244 = C9772 * C11106;
    const double C43777 = C36999 * C11106;
    const double C52712 = C91722 * C11106;
    const double C74596 = C93582 * C11106;
    const double C83559 = C93587 * C11106;
    const double C85212 = C81993 * C11106;
    const double C37630 = C37628 * C93582;
    const double C37882 = C37706 * C275;
    const double C41710 = C41454 * C9772;
    const double C45077 = C41454 * C31929;
    const double C58919 = C41454 * C45817;
    const double C61894 = C41454 * C20350;
    const double C69009 = C41454 * C4178;
    const double C72024 = C41454 * C62345;
    const double C88026 = C41454 * C81993;
    const double C91146 = C41454 * C15093;
    const double C39973 = C39971 * C93582;
    const double C40270 = C40055 * C275;
    const double C58413 = C40055 * C20350;
    const double C61573 = C40055 * C45817;
    const double C68481 = C40055 * C62345;
    const double C71697 = C40055 * C4178;
    const double C73317 = C73315 * C93582;
    const double C73437 = C73435 * C188;
    const double C92392 = C92391 + C92106;
    const double C92526 = C92525 + C92106;
    const double C2303 = C188 * C2056;
    const double C15378 = C15093 * C2056;
    const double C32214 = C31929 * C2056;
    const double C3331 = C275 * C2856;
    const double C20894 = C20350 * C2856;
    const double C62889 = C62345 * C2856;
    const double C4001 = C275 * C3568;
    const double C23326 = C20350 * C3568;
    const double C65306 = C62345 * C3568;
    const double C92833 = C92146 + C92831;
    const double C92848 = ae * C92847;
    const double C93037 = C92189 + C93035;
    const double C93017 = ae * C93016;
    const double C12248 =
        (C92124 * C92189 + C92167 * C93016 + C92167 * C92828 * ae) / C91696;
    const double C92699 = C92698 + C92691;
    const double C92781 = ae * C92780;
    const double C14144 = (2 * C92767 + C92167 * C92780) / C91696;
    const double C92996 = C92995 + C92990;
    const double C92817 = ae * C92816;
    const double C6012 =
        (C92180 + C92191 * C92232 + C92167 * C92816 + C92167 * C92692 * ae) /
        C91696;
    const double C93081 = C92715 + C93079;
    const double C92114 = ae * C92111;
    const double C92113 = C92009 * C92111;
    const double C92343 = C92111 * C92232;
    const double C92445 = C92111 * C92306;
    const double C92532 = C92124 * C92111;
    const double C92553 = C92167 * C92111;
    const double C5045 =
        (3 * (C92145 + C92329 + C92124 * C92627) +
         ae * (2 * C92327 + C92124 * C92347) +
         C92124 * (2 * C92627 + C92349 +
                   C92124 * (C92159 + C92538 +
                             C92124 * (C92107 +
                                       C92124 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C5244 =
        (3 * (C92220 + C92329 + C92124 * C92639) +
         ae * (2 * C92327 + C92124 * C92347) +
         C92124 * (2 * C92639 + C92349 +
                   C92124 * (C92226 + C92538 +
                             C92124 * (C92107 +
                                       C92124 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C6018 =
        (C92188 + C92202 * C92232 + ae * C92167 * C92347 +
         C92167 * (C92349 + C92167 * (C92202 + (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171) *
                                                   C92232))) /
        C91701;
    const double C6350 =
        (C92278 + C92284 * C92232 + ae * C92167 * C92347 +
         C92167 * (C92349 + C92167 * (C92284 + (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270) *
                                                   C92232))) /
        C91701;
    const double C8744 =
        (C92167 *
         (2 * C92627 + C92349 +
          C92124 * (C92159 + C92538 +
                    C92124 * (C92107 + C92124 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C92821 = C92819 + C92820;
    const double C92842 = ae * C92841;
    const double C5847 = C4083 * C5828;
    const double C42856 = C36999 * C5828;
    const double C47328 = C91722 * C5828;
    const double C6098 =
        (C92220 + C92226 * C92306 + ae * (C92327 + C92533 * C92306) +
         C92124 * (C92451 + C92124 * (C92226 + (ae * C92155 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212) *
                                                   C92306))) /
        C91701;
    const double C11351 =
        (3 * (C92188 + C92431 + C92167 * C92905) +
         ae * (2 * C92429 + C92167 * C92449) +
         C92167 * (2 * C92905 + C92451 +
                   C92167 * (C92202 + C92559 +
                             C92167 * (C92107 +
                                       C92167 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C11735 =
        (3 * (C92278 + C92431 + C92167 * C92931) +
         ae * (2 * C92429 + C92167 * C92449) +
         C92167 * (2 * C92931 + C92451 +
                   C92167 * (C92284 + C92559 +
                             C92167 * (C92107 +
                                       C92167 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C93021 = C93019 + C93020;
    const double C93005 = ae * C93004;
    const double C14030 = (2 * C92573 + C92167 * C93004) / C91696;
    const double C93131 = ae * C93128;
    const double C93130 = C92124 * C93128;
    const double C93171 = C93128 * C92306;
    const double C93203 = C92167 * C93128;
    const double C42654 =
        (3 * (C92731 + C92868 + C92167 * C93239) +
         ae * (2 * C92866 + C92167 * C93175) +
         C92167 * (2 * C93239 + C93177 +
                   C92167 * (C93157 + C93208 +
                             C92167 * (C93124 +
                                       C92167 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C93270 = C93268 + C93269;
    const double C93342 = ae * C93340;
    const double C93341 = C92167 * C93340;
    const double C92112 = C92086 + C92110;
    const double C4939 = C93587 * C4924;
    const double C38552 = C93582 * C4924;
    const double C46538 = C93587 * C4924;
    const double C37494 = C93582 * C4926;
    const double C8623 = C93587 * C5829;
    const double C49976 = C93587 * C5829;
    const double C59449 = C93582 * C5829;
    const double C41174 = C93582 * C5833;
    const double C39809 = C93582 * C8619;
    const double C11125 = C93587 * C11110;
    const double C74382 = C93582 * C11110;
    const double C83304 = C93587 * C11110;
    const double C73246 = C93582 * C11112;
    const double C2298 = C93662 * C1076;
    const double C15373 = C93711 * C1076;
    const double C32209 = C93711 * C1076;
    const double C3012 = C93662 * C1657;
    const double C9961 = C93662 * C1663;
    const double C18739 = C93711 * C3711;
    const double C22898 = C93662 * C3711;
    const double C35568 = C93711 * C3711;
    const double C2612 = C93673 * C1316;
    const double C4832 = C93673 * C1322;
    const double C3326 = C93673 * C1897;
    const double C20889 = C93737 * C1897;
    const double C62884 = C93737 * C1897;
    const double C19176 = C93673 * C3995;
    const double C23318 = C93737 * C3995;
    const double C65298 = C93737 * C3995;
    const double C93190 = C93189 + C93129;
    const double C40419 = C275 * C39960;
    const double C58573 = C20350 * C39960;
    const double C68650 = C62345 * C39960;
    const double C93282 = C92713 + C93280;
    const double C93257 = C93256 + C93249;
    const double C1082 = (C92237 + C92242 * C92013 + C92389 + C92389 +
                          C92124 * (2 * ae * C92146 + C92124 * C92249)) /
                         C91701;
    const double C3925 =
        (C92389 + C92167 * (ae * C92189 + C92124 * C92302)) / C91701;
    const double C1091 = C188 * C892;
    const double C4199 = C4079 * C892;
    const double C4466 = C4178 * C892;
    const double C4576 = C275 * C892;
    const double C6980 = C4083 * C892;
    const double C7096 = C4177 * C892;
    const double C16094 = C14999 * C892;
    const double C16192 = C15093 * C892;
    const double C17428 = C93711 * C892;
    const double C32930 = C31835 * C892;
    const double C33028 = C31929 * C892;
    const double C34263 = C93711 * C892;
    const double C45838 = C45718 * C892;
    const double C46093 = C45817 * C892;
    const double C48387 = C91722 * C892;
    const double C3716 = C188 * C3493;
    const double C8076 = C4177 * C3493;
    const double C16900 = C15093 * C3493;
    const double C18419 = C93711 * C3493;
    const double C18858 = C275 * C3493;
    const double C19600 = C14999 * C3493;
    const double C22576 = C93662 * C3493;
    const double C23000 = C20350 * C3493;
    const double C28622 = C4083 * C3493;
    const double C33736 = C31929 * C3493;
    const double C35254 = C93711 * C3493;
    const double C36421 = C31835 * C3493;
    const double C54119 = C91722 * C3493;
    const double C64983 = C62345 * C3493;
    const double C12471 = C188 * C12136;
    const double C16911 = C15093 * C12136;
    const double C33747 = C31929 * C12136;
    const double C653 = C225 * C275;
    const double C447 = C443 + C437;
    const double C527 = C523 * C93662;
    const double C2307 = C2304 + C1085;
    const double C2531 = C2072 * C275;
    const double C3021 = C3018 + C1666;
    const double C3245 = C2786 * C275;
    const double C20791 = C2786 * C20350;
    const double C23557 = C2786 * C14999;
    const double C62786 = C2786 * C62345;
    const double C65537 = C2786 * C31835;
    const double C3106 = C3103 * C93662;
    const double C9965 = C9963 + C1672;
    const double C10217 = C9696 * C9772;
    const double C13142 = C9696 * C4083;
    const double C21782 = C9696 * C14999;
    const double C24214 = C9696 * C20350;
    const double C63776 = C9696 * C31835;
    const double C66194 = C9696 * C62345;
    const double C82426 = C9696 * C81993;
    const double C85112 = C9696 * C91722;
    const double C7742 = C4079 * C5927;
    const double C28341 = C93711 * C5927;
    const double C49138 = C45718 * C5927;
    const double C53842 = C93711 * C5927;
    const double C12140 = C93662 * C5931;
    const double C27301 = C93711 * C5931;
    const double C43890 = C93711 * C5931;
    const double C2774 = C93662 * C1475;
    const double C9690 = C93662 * C1481;
    const double C23790 = C14991 * C1599;
    const double C65770 = C31827 * C1599;
    const double C13376 = C93587 * C1605;
    const double C21948 = C14991 * C1605;
    const double C63942 = C31827 * C1605;
    const double C85335 = C93587 * C1605;
    const double C13594 = C13588 + C13589;
    const double C85546 = C85540 + C85541;
    const double C92649 = C92648 + C92645;
    const double C6173 =
        (C92167 * C92641 + C92768 + C92768 +
         C92124 * (2 * ae * C92167 * C92148 + C92124 * C92167 * C92684)) /
        C91701;
    const double C6429 = (ae * C92180 + C92124 * C92727 + C92768 +
                          C92167 * (C92647 + C92167 * C92735)) /
                         C91701;
    const double C12472 = C12467 + C10715;
    const double C12148 = C12141 + C12142;
    const double C12583 = C12577 + C12578;
    const double C27322 = C27304 + C27305;
    const double C30106 = C30102 + C30103;
    const double C43892 = C43885 + C43886;
    const double C80193 = C80189 + C80190;
    const double C84577 = C84571 + C84572;
    const double C93125 = C93115 + C93120;
    const double C92678 = ae * C92676;
    const double C92677 = C92124 * C92676;
    const double C92865 = C92167 * C92676;
    const double C93109 = 3 * C92676;
    const double C5924 = (C92659 + C92676 * C92306) / C91696;
    const double C6176 = (C92237 + C92242 * C92306 + C92776 + C92776 +
                          C92124 * (2 * ae * (C92135 + C92142 * C92306) +
                                    C92124 * (C92242 + C92247 * C92306))) /
                         C91701;
    const double C14801 =
        (2 * (C92657 + C92167 * C92731) + C92776 +
         C92167 * (C92731 + C92868 +
                   C92167 * (C92674 + C92167 * (C92192 + C92124 * C92300)))) /
        C91701;
    const double C14488 = C188 * C14143;
    const double C27635 = C15093 * C14143;
    const double C42098 = C93711 * C14143;
    const double C42281 = C36999 * C14143;
    const double C42392 = C31929 * C14143;
    const double C45299 = C9772 * C14143;
    const double C69101 = C4177 * C14143;
    const double C75080 = C93662 * C14143;
    const double C88367 = C93711 * C14143;
    const double C91356 = C81993 * C14143;
    const double C73496 = C73495 + C11562;
    const double C73318 = C73316 * C36999;
    const double C73436 = C73434 * C93662;
    const double C11243 = C9694 * C93587;
    const double C13141 = C9694 * C4075;
    const double C21783 = C9694 * C93843;
    const double C63777 = C9694 * C31826;
    const double C74456 = C9694 * C93582;
    const double C83396 = C9694 * C93587;
    const double C85111 = C9694 * C93805;
    const double C14167 = C14163 * C4075;
    const double C75078 = C14163 * C93582;
    const double C86074 = C14163 * C93805;
    const double C75086 = C75084 * C93582;
    const double C1903 = (C92311 + C92316 * C92013 + C92523 + C92523 +
                          C92167 * (2 * ae * C92189 + C92167 * C92323)) /
                         C91701;
    const double C3785 =
        (C92523 + C92124 * (ae * C92146 + C92167 * C92265)) / C91701;
    const double C1912 = C275 * C1539;
    const double C9793 = C9603 * C1539;
    const double C10215 = C188 * C1539;
    const double C10316 = C9772 * C1539;
    const double C13702 = C4083 * C1539;
    const double C13919 = C9771 * C1539;
    const double C22205 = C14999 * C1539;
    const double C22365 = C20350 * C1539;
    const double C23662 = C93737 * C1539;
    const double C64199 = C31835 * C1539;
    const double C64359 = C62345 * C1539;
    const double C65642 = C93737 * C1539;
    const double C82014 = C81840 * C1539;
    const double C82521 = C81993 * C1539;
    const double C85649 = C91722 * C1539;
    const double C2392 = C2389 * C93662;
    const double C15480 = C2389 * C93711;
    const double C32316 = C2389 * C93711;
    const double C519 = C312 * C188;
    const double C661 = C657 * C93673;
    const double C742 = C738 + C732;
    const double C2621 = C2618 + C1325;
    const double C2382 = C2158 * C188;
    const double C15481 = C2158 * C15093;
    const double C17549 = C2158 * C14999;
    const double C32317 = C2158 * C31929;
    const double C34384 = C2158 * C31835;
    const double C2541 = C2538 * C93673;
    const double C4838 = C4836 + C1331;
    const double C4578 = C4301 * C4178;
    const double C6865 = C4301 * C4083;
    const double C16003 = C4301 * C14999;
    const double C17886 = C4301 * C15093;
    const double C32839 = C4301 * C31835;
    const double C34721 = C4301 * C31929;
    const double C46203 = C4301 * C45817;
    const double C48273 = C4301 * C91722;
    const double C3335 = C3332 + C1906;
    const double C3096 = C2872 * C188;
    const double C3255 = C3252 * C93673;
    const double C20790 = C3252 * C93737;
    const double C62785 = C3252 * C93737;
    const double C19181 = C19180 + C4000;
    const double C18860 = C18541 * C15093;
    const double C19497 = C18541 * C14999;
    const double C35688 = C18541 * C31929;
    const double C36318 = C18541 * C31835;
    const double C2146 = C93673 * C960;
    const double C4295 = C93673 * C966;
    const double C17996 = C14991 * C1200;
    const double C34831 = C31827 * C1200;
    const double C7318 = C93587 * C1206;
    const double C16359 = C14991 * C1206;
    const double C33195 = C31827 * C1206;
    const double C48722 = C93587 * C1206;
    const double C6509 =
        (C92124 * C92737 + C92813 + C92813 +
         C92167 * (2 * ae * C92715 + C92167 * C92124 * C92741)) /
        C91701;
    const double C6516 = C275 * C6010;
    const double C11017 = C9772 * C6010;
    const double C12258 = C9603 * C6010;
    const double C12784 = C188 * C6010;
    const double C14700 = C4083 * C6010;
    const double C14914 = C9771 * C6010;
    const double C25235 = C20350 * C6010;
    const double C27954 = C15093 * C6010;
    const double C29703 = C93737 * C6010;
    const double C43473 = C36999 * C6010;
    const double C44523 = C31929 * C6010;
    const double C53361 = C91722 * C6010;
    const double C67215 = C62345 * C6010;
    const double C79792 = C93737 * C6010;
    const double C83216 = C81993 * C6010;
    const double C84266 = C81840 * C6010;
    const double C92948 = C92947 + C92944;
    const double C6508 =
        (C92311 + C92316 * C92232 + C92809 + C92809 +
         C92167 * (2 * ae * C92713 + C92167 * (C92316 + C92321 * C92232))) /
        C91701;
    const double C9195 =
        (2 * (ae * (C92167 * C92178 + C92031) + C92124 * C92877) + C92809 +
         C92124 * (C92877 + ae * (C92167 * C92124 * C92185 + C92670) +
                   C92124 * (ae * (C92167 * C92185 + C92054) +
                             C92124 * (C92149 + C92167 * C92263)))) /
        C91701;
    const double C6515 = C275 * C6011;
    const double C11025 = C9772 * C6011;
    const double C31743 = C20350 * C6011;
    const double C41352 = C9603 * C6011;
    const double C41708 = C36999 * C6011;
    const double C45518 = C31929 * C6011;
    const double C45630 = C9771 * C6011;
    const double C59259 = C45817 * C6011;
    const double C61464 = C93737 * C6011;
    const double C69349 = C4178 * C6011;
    const double C69435 = C62345 * C6011;
    const double C71576 = C93737 * C6011;
    const double C83224 = C81993 * C6011;
    const double C87686 = C81840 * C6011;
    const double C91569 = C15093 * C6011;
    const double C37999 = C37998 + C5730;
    const double C37631 = C37629 * C36999;
    const double C37890 = C37886 * C93673;
    const double C40421 = C40420 + C9520;
    const double C39974 = C39972 * C36999;
    const double C40280 = C40277 * C93673;
    const double C58412 = C40277 * C93737;
    const double C68480 = C40277 * C93737;
    const double C93338 = C93329 + C93334;
    const double C92977 = ae * C92975;
    const double C92976 = C92167 * C92975;
    const double C93322 = 3 * C92975;
    const double C42492 =
        (ae *
             (3 * C92975 +
              C92167 * (2 * C92968 +
                        C92167 * (C92185 + C92167 * (C92167 * C92198 + C92090) +
                                  C92167 * C92080 * ae) +
                        C93231 * ae) +
              (2 * C92965 + C92167 * C93231) * ae) +
         C92124 * (3 * C93185 + ae * (2 * C93179 + C92167 * C93232) +
                   C92167 * (2 * C93182 + ae * C93232 +
                             C92167 * (C92263 + ae * C92167 * C92155 +
                                       C92167 * (ae * C92155 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92254))))) /
        C91701;
    const double C93070 = C93069 + C93065;
    const double C5140 = C4299 * C93587;
    const double C6864 = C4299 * C4075;
    const double C16004 = C4299 * C93843;
    const double C32840 = C4299 * C31826;
    const double C38701 = C4299 * C93582;
    const double C46719 = C4299 * C93587;
    const double C48272 = C4299 * C93805;
    const double C44110 = C44106 * C31828;
    const double C74594 = C44106 * C93662;
    const double C90222 = C44106 * C93818;
    const double C74602 = C74600 * C93662;
    const double C11574 = C11570 + C11558;
    const double C13485 = C3025 * C93587;
    const double C22047 = C3025 * C14991;
    const double C23896 = C3025 * C93843;
    const double C64041 = C3025 * C31827;
    const double C65876 = C3025 * C31826;
    const double C85439 = C3025 * C93587;
    const double C11579 = C11575 * C4075;
    const double C73491 = C11575 * C93582;
    const double C83648 = C11575 * C93805;
    const double C39003 = C39000 * C93673;
    const double C60053 = C39000 * C93819;
    const double C70154 = C39000 * C62191;
    const double C39004 = C39001 * C93673;
    const double C5742 = C5738 + C5726;
    const double C8514 = C8512 + C8505;
    const double C2628 = C2625 * C93662;
    const double C4833 = C2625 * C4078;
    const double C15734 = C2625 * C93711;
    const double C18209 = C2625 * C93818;
    const double C32570 = C2625 * C93711;
    const double C35044 = C2625 * C31828;
    const double C46452 = C2625 * C93845;
    const double C3342 = C3339 * C93662;
    const double C19177 = C3339 * C93818;
    const double C36002 = C3339 * C31828;
    const double C91730 = C91728 / C91696;
    const double C91729 = C91697 * C91727;
    const double C106 = (-C91727 / C91696) / (4 * C91708);
    const double C4082 = (-C91727 / C91696) / C91702;
    const double C14998 = (-C91727 / C91696) / (4 * C91701);
    const double C31834 = (-C91727 / C91696) / (4 * C91701);
    const double C36998 = -C91727 / C91696;
    const double C45721 = (-C91727 / C91696) / C91702;
    const double C4097 = C4081 * C116;
    const double C4096 = C4081 * C115;
    const double C4094 = C4081 * C814;
    const double C4092 = C4081 * C817;
    const double C4089 = C4081 * C816;
    const double C4087 = C4081 * C815;
    const double C4085 = C4081 * C114;
    const double C4943 = C4081 * C4922;
    const double C4941 = C4081 * C4921;
    const double C5164 = C5156 * C4081;
    const double C5159 = C5151 * C4081;
    const double C5157 = C5149 * C4081;
    const double C5268 = C4081 * C4917;
    const double C5258 = C4081 * C890;
    const double C5254 = C4081 * C808;
    const double C5250 = C4081 * C889;
    const double C5246 = C4081 * C807;
    const double C5553 = C4081 * C5121;
    const double C5547 = C4081 * C956;
    const double C5542 = C4081 * C955;
    const double C5846 = C4081 * C5827;
    const double C5844 = C4081 * C5825;
    const double C5842 = C4081 * C1397;
    const double C5841 = C4081 * C1396;
    const double C5839 = C4081 * C3413;
    const double C5837 = C4081 * C5824;
    const double C6627 = C4081 * C4920;
    const double C6863 = C4298 * C4081;
    const double C6859 = C2162 * C4081;
    const double C6978 = C4081 * C891;
    const double C6974 = C4081 * C809;
    const double C6970 = C4081 * C888;
    const double C6966 = C4081 * C806;
    const double C7315 = C4081 * C957;
    const double C7311 = C4081 * C954;
    const double C7639 = C4081 * C5823;
    const double C7637 = C4081 * C3414;
    const double C7635 = C4081 * C1395;
    const double C8630 = C4081 * C8617;
    const double C8867 = C8863 * C4081;
    const double C8865 = C8861 * C4081;
    const double C8982 = C4081 * C3409;
    const double C8978 = C4081 * C3491;
    const double C8974 = C4081 * C5818;
    const double C9310 = C4081 * C3565;
    const double C9306 = C4081 * C6008;
    const double C9606 = C4081 * C1398;
    const double C11129 = C4081 * C11108;
    const double C11127 = C4081 * C11107;
    const double C11267 = C11259 * C4081;
    const double C11262 = C11254 * C4081;
    const double C11260 = C11252 * C4081;
    const double C11453 = C4081 * C11103;
    const double C11449 = C4081 * C11224;
    const double C11443 = C4081 * C1471;
    const double C11439 = C4081 * C1389;
    const double C11435 = C4081 * C1470;
    const double C11431 = C4081 * C1388;
    const double C11741 = C4081 * C1537;
    const double C11737 = C4081 * C1536;
    const double C12037 = C4081 * C5826;
    const double C13022 = C4081 * C11106;
    const double C13140 = C9693 * C4081;
    const double C13136 = C2790 * C4081;
    const double C13373 = C4081 * C1472;
    const double C13369 = C4081 * C1390;
    const double C13365 = C4081 * C1469;
    const double C13361 = C4081 * C1387;
    const double C13700 = C4081 * C1538;
    const double C13696 = C4081 * C1535;
    const double C14038 = C4081 * C14029;
    const double C14166 = C14162 * C4081;
    const double C14164 = C14160 * C4081;
    const double C14374 = C4081 * C5923;
    const double C14370 = C4081 * C5819;
    const double C14698 = C4081 * C6009;
    const double C28620 = C4081 * C3492;
    const double C28616 = C4081 * C3410;
    const double C29030 = C4081 * C3566;
    const double C37892 = C37877 + C37889;
    const double C37891 = C37874 + C37888;
    const double C73433 = C73426 + C73427;
    const double C73432 = C73424 + C73425;
    const double C91795 = C91760 * C91792;
    const double C4449 =
        (ae * -2 * C91778) / C91708 +
        (((C91760 * ((-4 * C91780) / C91696 - (C91760 * C91792) / C91696) *
           ae) /
              C91696 +
          2 * ((C91791 * ae) / C91696 - C91778 / C91711)) *
         ae) /
            C91696 -
        C91792 / C91711;
    const double C4451 = (-C91792 / C91696) / (4 * C91701);
    const double C15355 = (-C91792 / C91696) / C91702;
    const double C32191 = (-C91792 / C91696) / C91702;
    const double C37219 = (-C91792 / C91696) / (4 * C91708);
    const double C46078 = (-C91792 / C91696) / (4 * C91701);
    const double C91889 = C91883 / C91696;
    const double C15117 = C15092 * C111;
    const double C15107 = C15092 * C116;
    const double C15103 = C15092 * C110;
    const double C15099 = C15092 * C115;
    const double C15095 = C15092 * C109;
    const double C15377 = C15092 * C193;
    const double C15375 = C15092 * C192;
    const double C15366 = C15092 * C191;
    const double C15360 = C15092 * C190;
    const double C15357 = C15092 * C189;
    const double C15483 = C309 * C15092;
    const double C15476 = C307 * C15092;
    const double C15472 = C305 * C15092;
    const double C15646 = C15092 * C279;
    const double C15640 = C15092 * C278;
    const double C15635 = C15092 * C277;
    const double C16202 = C15092 * C892;
    const double C16200 = C15092 * C891;
    const double C16198 = C15092 * C890;
    const double C16197 = C15092 * C889;
    const double C16195 = C15092 * C888;
    const double C16193 = C15092 * C887;
    const double C16910 = C15092 * C1473;
    const double C16908 = C15092 * C1472;
    const double C16906 = C15092 * C1471;
    const double C16905 = C15092 * C1470;
    const double C16903 = C15092 * C1469;
    const double C16901 = C15092 * C1468;
    const double C17437 = C15092 * C806;
    const double C17433 = C15092 * C814;
    const double C17429 = C15092 * C805;
    const double C17773 = C15092 * C886;
    const double C17892 = C2162 * C15092;
    const double C17888 = C2160 * C15092;
    const double C18104 = C15092 * C954;
    const double C18100 = C15092 * C953;
    const double C18428 = C15092 * C1387;
    const double C18424 = C15092 * C1395;
    const double C18420 = C15092 * C1386;
    const double C18746 = C15092 * C1467;
    const double C18866 = C2876 * C15092;
    const double C18862 = C2874 * C15092;
    const double C19071 = C15092 * C1535;
    const double C19067 = C15092 * C1534;
    const double C19720 = C15092 * C3493;
    const double C19718 = C15092 * C3492;
    const double C19716 = C15092 * C3491;
    const double C27314 = C15092 * C1389;
    const double C27310 = C15092 * C1397;
    const double C27306 = C15092 * C1390;
    const double C27302 = C15092 * C1398;
    const double C27296 = C15092 * C1396;
    const double C27292 = C15092 * C1388;
    const double C27636 = C15092 * C11223;
    const double C27634 = C15092 * C11224;
    const double C27960 = C15092 * C1537;
    const double C27956 = C15092 * C1538;
    const double C27950 = C15092 * C1536;
    const double C28346 = C15092 * C3410;
    const double C28342 = C15092 * C3414;
    const double C29168 = C15092 * C3566;
    const double C30776 = C15092 * C3413;
    const double C30772 = C15092 * C3409;
    const double C31196 = C15092 * C5925;
    const double C31194 = C15092 * C5923;
    const double C31602 = C15092 * C3565;
    const double C88368 = C15092 * C11103;
    const double C88364 = C15092 * C11107;
    const double C88536 = C42296 * C15092;
    const double C88529 = C42291 * C15092;
    const double C88525 = C42289 * C15092;
    const double C88619 = C15092 * C11225;
    const double C90221 = C44105 * C15092;
    const double C90217 = C44103 * C15092;
    const double C90918 = C15092 * C5825;
    const double C90914 = C15092 * C5819;
    const double C91144 = C41451 * C15092;
    const double C91140 = C40059 * C15092;
    const double C91250 = C15092 * C14143;
    const double C91567 = C15092 * C6009;
    const double C31953 = C31928 * C111;
    const double C31943 = C31928 * C116;
    const double C31939 = C31928 * C110;
    const double C31935 = C31928 * C115;
    const double C31931 = C31928 * C109;
    const double C32213 = C31928 * C193;
    const double C32211 = C31928 * C192;
    const double C32202 = C31928 * C191;
    const double C32196 = C31928 * C190;
    const double C32193 = C31928 * C189;
    const double C32319 = C309 * C31928;
    const double C32312 = C307 * C31928;
    const double C32308 = C305 * C31928;
    const double C32482 = C31928 * C279;
    const double C32476 = C31928 * C278;
    const double C32471 = C31928 * C277;
    const double C33038 = C31928 * C892;
    const double C33036 = C31928 * C891;
    const double C33034 = C31928 * C890;
    const double C33033 = C31928 * C889;
    const double C33031 = C31928 * C888;
    const double C33029 = C31928 * C887;
    const double C33746 = C31928 * C1473;
    const double C33744 = C31928 * C1472;
    const double C33742 = C31928 * C1471;
    const double C33741 = C31928 * C1470;
    const double C33739 = C31928 * C1469;
    const double C33737 = C31928 * C1468;
    const double C34272 = C31928 * C806;
    const double C34268 = C31928 * C814;
    const double C34264 = C31928 * C805;
    const double C34608 = C31928 * C886;
    const double C34727 = C2162 * C31928;
    const double C34723 = C2160 * C31928;
    const double C34939 = C31928 * C954;
    const double C34935 = C31928 * C953;
    const double C35263 = C31928 * C1387;
    const double C35259 = C31928 * C1395;
    const double C35255 = C31928 * C1386;
    const double C35575 = C31928 * C1467;
    const double C35694 = C2876 * C31928;
    const double C35690 = C2874 * C31928;
    const double C35897 = C31928 * C1535;
    const double C35893 = C31928 * C1534;
    const double C36541 = C31928 * C3493;
    const double C36539 = C31928 * C3492;
    const double C36537 = C31928 * C3491;
    const double C41530 = C31928 * C5923;
    const double C42099 = C31928 * C11103;
    const double C42095 = C31928 * C11107;
    const double C42089 = C31928 * C1397;
    const double C42085 = C31928 * C1389;
    const double C42081 = C31928 * C1396;
    const double C42077 = C31928 * C1388;
    const double C42304 = C42296 * C31928;
    const double C42299 = C42291 * C31928;
    const double C42297 = C42289 * C31928;
    const double C42397 = C31928 * C11225;
    const double C42395 = C31928 * C11224;
    const double C42660 = C31928 * C1537;
    const double C42656 = C31928 * C1536;
    const double C43269 = C31928 * C5925;
    const double C43887 = C31928 * C1398;
    const double C43883 = C31928 * C1390;
    const double C44109 = C44105 * C31928;
    const double C44107 = C44103 * C31928;
    const double C44213 = C31928 * C11223;
    const double C44521 = C31928 * C1538;
    const double C44842 = C31928 * C5825;
    const double C44838 = C31928 * C5819;
    const double C44834 = C31928 * C3413;
    const double C44830 = C31928 * C3409;
    const double C45075 = C41451 * C31928;
    const double C45071 = C40059 * C31928;
    const double C45186 = C31928 * C14143;
    const double C45516 = C31928 * C6009;
    const double C45512 = C31928 * C3565;
    const double C53847 = C31928 * C3410;
    const double C53843 = C31928 * C3414;
    const double C54663 = C31928 * C3566;
    const double C91821 = C91763 * C91818;
    const double C10299 =
        (ae * -2 * C91804) / C91708 +
        (((C91763 * ((-4 * C91806) / C91696 - (C91763 * C91818) / C91696) *
           ae) /
              C91696 +
          2 * ((C91817 * ae) / C91696 - C91804 / C91711)) *
         ae) /
            C91696 -
        C91818 / C91711;
    const double C10301 = (-C91818 / C91696) / (4 * C91701);
    const double C20871 = (-C91818 / C91696) / C91702;
    const double C62866 = (-C91818 / C91696) / C91702;
    const double C72719 = (-C91818 / C91696) / (4 * C91708);
    const double C82506 = (-C91818 / C91696) / (4 * C91701);
    const double C91960 = C91954 / C91696;
    const double C20374 = C20349 * C111;
    const double C20364 = C20349 * C116;
    const double C20360 = C20349 * C110;
    const double C20356 = C20349 * C115;
    const double C20352 = C20349 * C109;
    const double C20623 = C20349 * C192;
    const double C20617 = C20349 * C191;
    const double C20612 = C20349 * C190;
    const double C20793 = C222 * C20349;
    const double C20786 = C220 * C20349;
    const double C20782 = C218 * C20349;
    const double C20893 = C20349 * C280;
    const double C20891 = C20349 * C279;
    const double C20882 = C20349 * C278;
    const double C20876 = C20349 * C277;
    const double C20873 = C20349 * C276;
    const double C21592 = C20349 * C958;
    const double C21590 = C20349 * C957;
    const double C21588 = C20349 * C956;
    const double C21587 = C20349 * C955;
    const double C21585 = C20349 * C954;
    const double C21583 = C20349 * C953;
    const double C22375 = C20349 * C1539;
    const double C22373 = C20349 * C1538;
    const double C22371 = C20349 * C1537;
    const double C22370 = C20349 * C1536;
    const double C22368 = C20349 * C1535;
    const double C22366 = C20349 * C1534;
    const double C22691 = C20349 * C806;
    const double C22687 = C20349 * C814;
    const double C22683 = C20349 * C805;
    const double C23006 = C20349 * C888;
    const double C23002 = C20349 * C887;
    const double C23216 = C2076 * C20349;
    const double C23212 = C2074 * C20349;
    const double C23325 = C20349 * C952;
    const double C23671 = C20349 * C1387;
    const double C23667 = C20349 * C1395;
    const double C23663 = C20349 * C1386;
    const double C24002 = C20349 * C1469;
    const double C23998 = C20349 * C1468;
    const double C24220 = C2790 * C20349;
    const double C24216 = C2788 * C20349;
    const double C24327 = C20349 * C1533;
    const double C25236 = C20349 * C3567;
    const double C25234 = C20349 * C3566;
    const double C25232 = C20349 * C3565;
    const double C26438 = C20349 * C808;
    const double C26434 = C20349 * C816;
    const double C26430 = C20349 * C809;
    const double C26426 = C20349 * C817;
    const double C26420 = C20349 * C815;
    const double C26416 = C20349 * C807;
    const double C26760 = C20349 * C890;
    const double C26756 = C20349 * C891;
    const double C26750 = C20349 * C889;
    const double C27076 = C20349 * C5120;
    const double C27074 = C20349 * C5121;
    const double C28068 = C20349 * C6010;
    const double C28066 = C20349 * C6009;
    const double C29704 = C20349 * C3410;
    const double C29700 = C20349 * C3414;
    const double C30104 = C20349 * C3492;
    const double C30920 = C20349 * C3409;
    const double C30916 = C20349 * C3413;
    const double C31336 = C20349 * C3491;
    const double C31744 = C20349 * C6007;
    const double C31742 = C20349 * C6008;
    const double C58089 = C20349 * C4917;
    const double C58085 = C20349 * C4921;
    const double C58415 = C37703 * C20349;
    const double C58408 = C37701 * C20349;
    const double C58404 = C37699 * C20349;
    const double C58572 = C20349 * C5122;
    const double C59345 = C20349 * C6011;
    const double C60052 = C38784 * C20349;
    const double C60048 = C38782 * C20349;
    const double C61465 = C20349 * C5818;
    const double C61461 = C20349 * C5824;
    const double C61900 = C40059 * C20349;
    const double C61896 = C40057 * C20349;
    const double C62110 = C20349 * C8843;
    const double C62369 = C62344 * C111;
    const double C62359 = C62344 * C116;
    const double C62355 = C62344 * C110;
    const double C62351 = C62344 * C115;
    const double C62347 = C62344 * C109;
    const double C62618 = C62344 * C192;
    const double C62612 = C62344 * C191;
    const double C62607 = C62344 * C190;
    const double C62788 = C222 * C62344;
    const double C62781 = C220 * C62344;
    const double C62777 = C218 * C62344;
    const double C62888 = C62344 * C280;
    const double C62886 = C62344 * C279;
    const double C62877 = C62344 * C278;
    const double C62871 = C62344 * C277;
    const double C62868 = C62344 * C276;
    const double C63586 = C62344 * C958;
    const double C63584 = C62344 * C957;
    const double C63582 = C62344 * C956;
    const double C63581 = C62344 * C955;
    const double C63579 = C62344 * C954;
    const double C63577 = C62344 * C953;
    const double C64369 = C62344 * C1539;
    const double C64367 = C62344 * C1538;
    const double C64365 = C62344 * C1537;
    const double C64364 = C62344 * C1536;
    const double C64362 = C62344 * C1535;
    const double C64360 = C62344 * C1534;
    const double C64679 = C62344 * C806;
    const double C64675 = C62344 * C814;
    const double C64671 = C62344 * C805;
    const double C64989 = C62344 * C888;
    const double C64985 = C62344 * C887;
    const double C65198 = C2076 * C62344;
    const double C65194 = C2074 * C62344;
    const double C65305 = C62344 * C952;
    const double C65651 = C62344 * C1387;
    const double C65647 = C62344 * C1395;
    const double C65643 = C62344 * C1386;
    const double C65982 = C62344 * C1469;
    const double C65978 = C62344 * C1468;
    const double C66200 = C2790 * C62344;
    const double C66196 = C2788 * C62344;
    const double C66307 = C62344 * C1533;
    const double C67216 = C62344 * C3567;
    const double C67214 = C62344 * C3566;
    const double C67212 = C62344 * C3565;
    const double C68135 = C62344 * C4917;
    const double C68131 = C62344 * C4921;
    const double C68125 = C62344 * C816;
    const double C68121 = C62344 * C808;
    const double C68117 = C62344 * C815;
    const double C68113 = C62344 * C807;
    const double C68383 = C62344 * C890;
    const double C68379 = C62344 * C889;
    const double C68483 = C37703 * C62344;
    const double C68476 = C37701 * C62344;
    const double C68472 = C37699 * C62344;
    const double C68649 = C62344 * C5122;
    const double C68647 = C62344 * C5121;
    const double C69439 = C62344 * C6011;
    const double C69437 = C62344 * C6009;
    const double C69436 = C62344 * C6008;
    const double C69743 = C62344 * C817;
    const double C69739 = C62344 * C809;
    const double C70045 = C62344 * C891;
    const double C70153 = C38784 * C62344;
    const double C70149 = C38782 * C62344;
    const double C70357 = C62344 * C5120;
    const double C71253 = C62344 * C6007;
    const double C71585 = C62344 * C3409;
    const double C71581 = C62344 * C3413;
    const double C71577 = C62344 * C5818;
    const double C71573 = C62344 * C5824;
    const double C71919 = C62344 * C3491;
    const double C72030 = C40059 * C62344;
    const double C72026 = C40057 * C62344;
    const double C72244 = C62344 * C8843;
    const double C78217 = C62344 * C6010;
    const double C79793 = C62344 * C3410;
    const double C79789 = C62344 * C3414;
    const double C80191 = C62344 * C3492;
    const double C8403 = C8398 + C8399;
    const double C12793 = C12787 + C12788;
    const double C19075 = C19069 + C19070;
    const double C35901 = C35895 + C35896;
    const double C4585 = C4583 * C4079;
    const double C7208 = C4583 * C4078;
    const double C17889 = C4583 * C93711;
    const double C34724 = C4583 * C93711;
    const double C46201 = C4583 * C45718;
    const double C48613 = C4583 * C93845;
    const double C12475 = C12473 + C3715;
    const double C12789 = C12150 * C9771;
    const double C14152 = C12150 * C4083;
    const double C23214 = C12150 * C20350;
    const double C65196 = C12150 * C62345;
    const double C86071 = C12150 * C91722;
    const double C8195 = C8189 + C8190;
    const double C12584 = C12579 + C12580;
    const double C23010 = C23004 + C23005;
    const double C64993 = C64987 + C64988;
    const double C10224 = C10222 * C9603;
    const double C13809 = C10222 * C9602;
    const double C24217 = C10222 * C93737;
    const double C66197 = C10222 * C93737;
    const double C82424 = C10222 * C81840;
    const double C85753 = C10222 * C93847;
    const double C4841 = C4839 * C4079;
    const double C7531 = C4839 * C4078;
    const double C18210 = C4839 * C93711;
    const double C35045 = C4839 * C93711;
    const double C46450 = C4839 * C45718;
    const double C48933 = C4839 * C93845;
    const double C11555 = C9966 * C93587;
    const double C13486 = C9966 * C4075;
    const double C22049 = C9966 * C93843;
    const double C64043 = C9966 * C31826;
    const double C74670 = C9966 * C93582;
    const double C83646 = C9966 * C93587;
    const double C85440 = C9966 * C93805;
    const double C8517 = C8515 * C4078;
    const double C19178 = C8515 * C93711;
    const double C36003 = C8515 * C93711;
    const double C49875 = C8515 * C93845;
    const double C123 =
        (2 * (2 * ae * C92021 + C92009 * C92038) + C92044 + C92044 +
         C92009 * (C92038 + C92041 + C92041 +
                   C92009 * (2 * ae * C92034 +
                             C92009 *
                                 (C92027 * C92028 +
                                  C92013 * bs[5] * std::pow(C92015, 5)) *
                                 C92016))) /
        C91701;
    const double C895 =
        (C92044 + C92124 * (C92134 + ae * C92137 + C92009 * C92145)) / C91701;
    const double C1019 =
        (C92044 + C92124 * (C92215 + ae * C92137 + C92009 * C92220)) / C91701;
    const double C1542 =
        (C92044 + C92167 * (C92177 + ae * C92180 + C92009 * C92188)) / C91701;
    const double C1782 =
        (C92044 + C92167 * (C92273 + ae * C92180 + C92009 * C92278)) / C91701;
    const double C130 = C107 * C117;
    const double C212 = C188 * C117;
    const double C299 = C275 * C117;
    const double C4098 = C4083 * C117;
    const double C15010 = C14999 * C117;
    const double C15113 = C15092 * C117;
    const double C20370 = C20349 * C117;
    const double C31846 = C31835 * C117;
    const double C31949 = C31928 * C117;
    const double C45737 = C91722 * C117;
    const double C62365 = C62344 * C117;
    const double C2063 = C188 * C813;
    const double C2149 = C275 * C813;
    const double C4099 = C4081 * C813;
    const double C4093 = C4083 * C813;
    const double C4194 = C4177 * C813;
    const double C6969 = C93587 * C813;
    const double C15006 = C14999 * C813;
    const double C15109 = C15093 * C813;
    const double C16087 = C14991 * C813;
    const double C17425 = C15092 * C813;
    const double C17652 = C93843 * C813;
    const double C22679 = C20349 * C813;
    const double C31842 = C31835 * C813;
    const double C31945 = C31929 * C813;
    const double C32923 = C31827 * C813;
    const double C34260 = C31928 * C813;
    const double C34487 = C31826 * C813;
    const double C37010 = C36999 * C813;
    const double C45732 = C91722 * C813;
    const double C48376 = C93587 * C813;
    const double C64667 = C62344 * C813;
    const double C2777 = C188 * C1394;
    const double C2863 = C275 * C1394;
    const double C7636 = C4083 * C1394;
    const double C9607 = C4081 * C1394;
    const double C9788 = C9771 * C1394;
    const double C13364 = C93587 * C1394;
    const double C16595 = C14999 * C1394;
    const double C18416 = C15092 * C1394;
    const double C20366 = C20350 * C1394;
    const double C21940 = C14991 * C1394;
    const double C23659 = C20349 * C1394;
    const double C23782 = C93843 * C1394;
    const double C33431 = C31835 * C1394;
    const double C35251 = C31928 * C1394;
    const double C40499 = C36999 * C1394;
    const double C49034 = C91722 * C1394;
    const double C55338 = C93587 * C1394;
    const double C62361 = C62345 * C1394;
    const double C63934 = C31827 * C1394;
    const double C65639 = C62344 * C1394;
    const double C65762 = C31826 * C1394;
    const double C4209 = C4190 + C4191;
    const double C6754 = C6743 + C6744;
    const double C17443 = C17431 + C17432;
    const double C34278 = C34266 + C34267;
    const double C45848 = C45829 + C45830;
    const double C5277 = C5260 + C5261;
    const double C38785 = C38776 + C38777;
    const double C46832 = C46815 + C46816;
    const double C7869 = C7863 + C7864;
    const double C12264 = C12253 + C12254;
    const double C22697 = C22685 + C22686;
    const double C64685 = C64673 + C64674;
    const double C9314 = C9308 + C9309;
    const double C43475 = C43470 + C43471;
    const double C50633 = C50627 + C50628;
    const double C14153 = C12149 * C93587;
    const double C24540 = C12149 * C93843;
    const double C66520 = C12149 * C31826;
    const double C86072 = C12149 * C93587;
    const double C43469 = C43167 * C9771;
    const double C44095 = C43167 * C31929;
    const double C60050 = C43167 * C20350;
    const double C70151 = C43167 * C62345;
    const double C70759 = C43167 * C4177;
    const double C90219 = C43167 * C15093;
    const double C9803 = C9784 + C9785;
    const double C13257 = C13246 + C13247;
    const double C23677 = C23665 + C23666;
    const double C65657 = C65645 + C65646;
    const double C82024 = C82005 + C82006;
    const double C11752 = C11743 + C11744;
    const double C44422 = C44419 + C44420;
    const double C53373 = C53365 + C53366;
    const double C8988 = C8976 + C8977;
    const double C43168 = C43161 + C43162;
    const double C50319 = C50307 + C50308;
    const double C5358 =
        (2 * (2 * ae * C92130 + C92124 * C92237) + C92660 + C92660 +
         C92124 * (C92237 + C92657 + C92657 +
                   C92124 * (2 * C92138 + C92124 * C92242))) /
        C91701;
    const double C6426 =
        (C92660 + C92167 * (C92294 + ae * C92709 + C92124 * C92731)) / C91701;
    const double C5264 = C4081 * C5039;
    const double C5369 = C4177 * C5039;
    const double C5365 = C4178 * C5039;
    const double C5458 = C275 * C5039;
    const double C16199 = C15093 * C5039;
    const double C33035 = C31929 * C5039;
    const double C37224 = C37065 * C5039;
    const double C37693 = C36999 * C5039;
    const double C46916 = C45817 * C5039;
    const double C58326 = C20349 * C5039;
    const double C68389 = C62344 * C5039;
    const double C6183 = C4178 * C5922;
    const double C8970 = C4081 * C5922;
    const double C9093 = C4177 * C5922;
    const double C9198 = C275 * C5922;
    const double C10717 = C188 * C5922;
    const double C19717 = C15093 * C5922;
    const double C26648 = C15092 * C5922;
    const double C26758 = C20350 * C5922;
    const double C30775 = C93711 * C5922;
    const double C36538 = C31929 * C5922;
    const double C40046 = C36999 * C5922;
    const double C41531 = C31928 * C5922;
    const double C41617 = C9771 * C5922;
    const double C44833 = C93711 * C5922;
    const double C47628 = C45817 * C5922;
    const double C58733 = C45718 * C5922;
    const double C61346 = C93845 * C5922;
    const double C61791 = C20349 * C5922;
    const double C68302 = C4176 * C5922;
    const double C68385 = C62345 * C5922;
    const double C68823 = C4079 * C5922;
    const double C71458 = C4078 * C5922;
    const double C71915 = C62344 * C5922;
    const double C14809 = C14806 + C14807;
    const double C27966 = C27958 + C27959;
    const double C42671 = C42662 + C42663;
    const double C69359 = C69351 + C69352;
    const double C11920 =
        (2 * (2 * ae * C92173 + C92167 * C92311) + C92959 + C92959 +
         C92167 * (C92311 + C92956 + C92956 +
                   C92167 * (2 * C92181 + C92167 * C92316))) /
        C91701;
    const double C11747 = C4081 * C11345;
    const double C11840 = C188 * C11345;
    const double C11931 = C9771 * C11345;
    const double C11927 = C9772 * C11345;
    const double C22372 = C20350 * C11345;
    const double C42575 = C36999 * C11345;
    const double C42666 = C31928 * C11345;
    const double C64366 = C62345 * C11345;
    const double C72724 = C72415 * C11345;
    const double C83956 = C81993 * C11345;
    const double C88853 = C15092 * C11345;
    const double C41717 = C41715 * C9603;
    const double C45409 = C41715 * C9602;
    const double C61897 = C41715 * C93737;
    const double C72027 = C41715 * C93737;
    const double C88024 = C41715 * C81840;
    const double C91465 = C41715 * C93847;
    const double C14494 = C14492 + C14483;
    const double C14495 = C14493 + C14486;
    const double C3497 = (C92167 * (C92073 + C92124 * C92163)) / C91701;
    const double C92074 = C92050 + C92072;
    const double C92328 = ae * C92326;
    const double C3415 = (C92167 * C92326) / C91696;
    const double C92430 = ae * C92428;
    const double C4101 = C4081 * C818;
    const double C4091 = C4083 * C818;
    const double C4192 = C4178 * C818;
    const double C4294 = C275 * C818;
    const double C6977 = C93587 * C818;
    const double C15819 = C14999 * C818;
    const double C16101 = C14991 * C818;
    const double C17423 = C15093 * C818;
    const double C32655 = C31835 * C818;
    const double C32937 = C31827 * C818;
    const double C34258 = C31929 * C818;
    const double C37011 = C36999 * C818;
    const double C45730 = C91722 * C818;
    const double C45831 = C45817 * C818;
    const double C48384 = C93587 * C818;
    const double C9609 = C4081 * C1399;
    const double C9605 = C4083 * C1399;
    const double C9689 = C188 * C1399;
    const double C9786 = C9772 * C1399;
    const double C13372 = C93587 * C1399;
    const double C16600 = C14999 * C1399;
    const double C21954 = C14991 * C1399;
    const double C23657 = C20350 * C1399;
    const double C33436 = C31835 * C1399;
    const double C40500 = C36999 * C1399;
    const double C54932 = C91722 * C1399;
    const double C63948 = C31827 * C1399;
    const double C65637 = C62345 * C1399;
    const double C82007 = C81993 * C1399;
    const double C85331 = C93587 * C1399;
    const double C19283 = C14991 * C3419;
    const double C28203 = C93587 * C3419;
    const double C36104 = C31827 * C3419;
    const double C53704 = C93587 * C3419;
    const double C12252 = C9603 * C6016;
    const double C29699 = C93737 * C6016;
    const double C79788 = C93737 * C6016;
    const double C84260 = C81840 * C6016;
    const double C8969 = C93587 * C6093;
    const double C50300 = C93587 * C6093;
    const double C59751 = C93582 * C6093;
    const double C14701 = C93587 * C6348;
    const double C43474 = C93582 * C6348;
    const double C53362 = C93587 * C6348;
    const double C43472 = C43169 * C9772;
    const double C44101 = C43169 * C31929;
    const double C89627 = C43169 * C81993;
    const double C90223 = C43169 * C15093;
    const double C6626 = C93587 * C826;
    const double C15820 = C14991 * C826;
    const double C32656 = C31827 * C826;
    const double C48038 = C93587 * C826;
    const double C6742 = C4079 * C5042;
    const double C48152 = C45718 * C5042;
    const double C5263 = C93587 * C5241;
    const double C38781 = C93582 * C5241;
    const double C46818 = C93587 * C5241;
    const double C7860 = C93673 * C6013;
    const double C26425 = C93737 * C6013;
    const double C69746 = C93737 * C6013;
    const double C9305 = C93587 * C6345;
    const double C50624 = C93587 * C6345;
    const double C60056 = C93582 * C6345;
    const double C5153 = C5141 + C5142;
    const double C5280 = C5266 + C5267;
    const double C38786 = C38778 + C38779;
    const double C46835 = C46821 + C46822;
    const double C8986 = C8972 + C8973;
    const double C50317 = C50303 + C50304;
    const double C59752 = C59748 + C59749;
    const double C13021 = C93587 * C1407;
    const double C21675 = C14991 * C1407;
    const double C63669 = C31827 * C1407;
    const double C84999 = C93587 * C1407;
    const double C14377 = C93587 * C6096;
    const double C43166 = C93582 * C6096;
    const double C53036 = C93587 * C6096;
    const double C13245 = C9603 * C11348;
    const double C85213 = C81840 * C11348;
    const double C11746 = C93587 * C11732;
    const double C74805 = C93582 * C11732;
    const double C83800 = C93587 * C11732;
    const double C11256 = C11244 + C11245;
    const double C11465 = C11451 + C11452;
    const double C74599 = C74595 + C74596;
    const double C83566 = C83558 + C83559;
    const double C92393 = ae * C92392;
    const double C893 = (2 * C92137 + C92009 * C92146 + C92124 * C92392 +
                         C92124 * C92103 * ae) /
                        C91696;
    const double C3494 = (C92167 * C92392) / C91696;
    const double C92527 = ae * C92526;
    const double C1540 = (2 * C92180 + C92009 * C92189 + C92167 * C92526 +
                          C92167 * C92103 * ae) /
                         C91696;
    const double C92834 = C92833 + C92830;
    const double C8067 =
        (C92167 * C92249 + C92848 + C92848 +
         C92124 * (2 * ae * C92167 * C92160 +
                   C92124 * C92167 *
                       (C92247 + (C92081 * C92082 +
                                  C92232 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92013))) /
        C91701;
    const double C12782 =
        (ae * C92189 + C92124 * C92302 + C92848 +
         C92167 * (C92832 +
                   C92167 * (ae * C92203 +
                             C92124 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C93038 = C93037 + C93034;
    const double C12893 =
        (C92124 * C92323 + C93017 + C93017 +
         C92167 * (2 * ae * C93014 +
                   C92167 * C92124 *
                       (C92321 + (C92081 * C92082 +
                                  C92306 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92013))) /
        C91701;
    const double C12903 = C9772 * C12248;
    const double C17208 = C275 * C12248;
    const double C25237 = C20350 * C12248;
    const double C67217 = C62345 * C12248;
    const double C84888 = C81993 * C12248;
    const double C92701 = ae * C92699;
    const double C92700 = C92124 * C92699;
    const double C92871 = C92167 * C92699;
    const double C6178 =
        (C92641 + C92684 * C92306 + C92781 + C92781 +
         C92124 *
             (2 * ae * (C92148 + C92686 * C92306) +
              C92124 * (C92684 + C92009 *
                                     (C92081 * C92082 +
                                      C92232 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C14802 =
        (2 * (C92647 + C92167 * C92735) + C92781 +
         C92167 * (C92735 + C92874 +
                   C92167 * (C92697 +
                             C92167 * (ae * C92717 + C92124 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92291)))) /
        C91701;
    const double C14489 = C188 * C14144;
    const double C27637 = C15093 * C14144;
    const double C44214 = C31929 * C14144;
    const double C92998 = ae * C92996;
    const double C92997 = C92167 * C92996;
    const double C6510 =
        (C92737 + C92741 * C92232 + C92817 + C92817 +
         C92167 *
             (2 * ae * C92721 +
              C92167 * (C92741 + C92009 *
                                     (C92081 * C92082 +
                                      C92306 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92232))) /
        C91701;
    const double C9196 =
        (2 * (ae * (C92167 * C92191 + C92059) + C92124 * C92880) + C92817 +
         C92124 * (C92880 + ae * (C92167 * C92124 * C92717 + C92691) +
                   C92124 * (ae * (C92167 * C92717 + C92095) +
                             C92124 * (ae * C92686 + C92167 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92254)))) /
        C91701;
    const double C6517 = C275 * C6012;
    const double C11028 = C9772 * C6012;
    const double C31745 = C20350 * C6012;
    const double C71254 = C62345 * C6012;
    const double C83227 = C81993 * C6012;
    const double C93082 = C93081 + C93077;
    const double C12137 =
        (C92073 + C92124 * C92163 +
         (C92114 +
          C92124 * (C92153 + ae * C92686 +
                    C92009 * (ae * C92155 +
                              C92009 * std::pow(C92015, 7) * bs[7] * C92128))) *
             C92306) /
        C91701;
    const double C92115 = C92084 + C92113;
    const double C92346 = C92071 + C92343;
    const double C92448 = C92071 + C92445;
    const double C92537 = ae * C92532;
    const double C92577 = C92167 * C92532;
    const double C12034 = (C92326 + C92532 * C92306) / C91696;
    const double C92558 = ae * C92553;
    const double C92822 = ae * C92821;
    const double C4923 = (3 * C92339 + C92124 * C92821) / C91696;
    const double C8618 = (C92167 * C92821) / C91696;
    const double C7633 =
        (C92167 * C92345 + C92842 + C92842 +
         C92009 * (2 * ae * C92167 * (C92058 + C92094 * C92232) +
                   C92009 * C92167 *
                       (C92101 + (C92081 * C92082 +
                                  C92013 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92232))) /
        C91701;
    const double C8966 =
        (2 * (C92431 + C92124 * C92862) + C92842 +
         C92124 * (C92862 + C92580 +
                   C92124 * (C92559 +
                             C92124 * C92167 *
                                 (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212)))) /
        C91701;
    const double C93022 = ae * C93021;
    const double C11109 = (3 * C92441 + C92167 * C93021) / C91696;
    const double C12035 =
        (C92325 + C92530 * C92306 + C93005 + C93005 +
         C92009 *
             (2 * ae * (C92529 + C92124 * C92094 * C92306) +
              C92009 * (C92530 + C92124 *
                                     (C92081 * C92082 +
                                      C92013 * bs[7] * std::pow(C92015, 7)) *
                                     C92016 * C92306))) /
        C91701;
    const double C14268 =
        (2 * (C92329 + C92167 * C93047) + C93005 +
         C92167 * (C93047 + C92580 +
                   C92167 * (C92538 +
                             C92167 * C92124 *
                                 (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171)))) /
        C91701;
    const double C14696 =
        (2 * (C92329 + C92167 * C93057) + C93005 +
         C92167 * (C93057 + C92580 +
                   C92167 * (C92538 +
                             C92167 * C92124 *
                                 (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270)))) /
        C91701;
    const double C14039 = C4083 * C14030;
    const double C43778 = C36999 * C14030;
    const double C52714 = C91722 * C14030;
    const double C93132 = C93110 + C93130;
    const double C93174 = C92676 + C93171;
    const double C93207 = ae * C93203;
    const double C93271 = ae * C93270;
    const double C42074 = (3 * C92775 + C92167 * C93270) / C91696;
    const double C93343 = C93323 + C93341;
    const double C93191 = ae * C93190;
    const double C38163 = (2 * C92709 + C92124 * C92713 + C92167 * C93190 +
                           C92167 * C93127 * ae) /
                          C91696;
    const double C93283 = C93282 + C93279;
    const double C93259 = ae * C93257;
    const double C93258 = C92167 * C93257;
    const double C4467 = C4079 * C1082;
    const double C17766 = C93711 * C1082;
    const double C34601 = C93711 * C1082;
    const double C46094 = C45718 * C1082;
    const double C19066 = C93711 * C3925;
    const double C23209 = C93662 * C3925;
    const double C35892 = C93711 * C3925;
    const double C4213 = C4198 + C4199;
    const double C4584 = C4576 + C4577;
    const double C17441 = C17427 + C17428;
    const double C34276 = C34262 + C34263;
    const double C45852 = C45837 + C45838;
    const double C22899 = C22897 + C3716;
    const double C18432 = C18418 + C18419;
    const double C22578 = C22575 + C22576;
    const double C35267 = C35253 + C35254;
    const double C451 = C447 + C438;
    const double C2310 = C2307 + C2298;
    const double C3024 = C3021 + C3012;
    const double C9967 = C9965 + C9961;
    const double C7753 = C7741 + C7742;
    const double C28348 = C28340 + C28341;
    const double C49149 = C49137 + C49138;
    const double C53849 = C53841 + C53842;
    const double C12147 = C12139 + C12140;
    const double C27320 = C27300 + C27301;
    const double C43894 = C43889 + C43890;
    const double C23796 = C23789 + C23790;
    const double C65776 = C65769 + C65770;
    const double C13384 = C13375 + C13376;
    const double C21965 = C21947 + C21948;
    const double C63959 = C63941 + C63942;
    const double C85339 = C85334 + C85335;
    const double C92650 = ae * C92649;
    const double C5038 =
        (2 * C92384 + C92124 * C92649 + (C92032 + C92055 * C92232) * ae) /
        C91696;
    const double C5921 = (C92167 * C92649) / C91696;
    const double C5926 = (C92649 + C92699 * C92306) / C91696;
    const double C8070 = C4079 * C6173;
    const double C28759 = C93711 * C6173;
    const double C49450 = C45718 * C6173;
    const double C54256 = C93711 * C6173;
    const double C12785 = C93662 * C6429;
    const double C27955 = C93711 * C6429;
    const double C44524 = C93711 * C6429;
    const double C12474 = C12472 + C10715;
    const double C12786 = C12148 * C9772;
    const double C14158 = C12148 * C4083;
    const double C84777 = C12148 * C81993;
    const double C86075 = C12148 * C91722;
    const double C6428 =
        (C92294 + ae * C92709 + C92124 * C92731 + ae * C92167 * C92676 +
         C92167 * (C92678 + C92167 * (C92297 + ae * C92124 * C92185 +
                                      C92124 * (C92192 + C92124 * C92300)))) /
        C91701;
    const double C92679 = C92664 + C92677;
    const double C92867 = ae * C92865;
    const double C6188 = C4178 * C5924;
    const double C10719 = C188 * C5924;
    const double C31195 = C15093 * C5924;
    const double C41447 = C36999 * C5924;
    const double C41533 = C31928 * C5924;
    const double C41529 = C31929 * C5924;
    const double C41615 = C9772 * C5924;
    const double C44841 = C93711 * C5924;
    const double C47633 = C45817 * C5924;
    const double C58747 = C45718 * C5924;
    const double C61789 = C20350 * C5924;
    const double C68837 = C4079 * C5924;
    const double C71804 = C4177 * C5924;
    const double C71913 = C62345 * C5924;
    const double C87851 = C15092 * C5924;
    const double C87933 = C81993 * C5924;
    const double C90917 = C93711 * C5924;
    const double C45185 = C93711 * C6176;
    const double C59005 = C45718 * C6176;
    const double C69095 = C4079 * C6176;
    const double C91249 = C93711 * C6176;
    const double C42665 = C93711 * C14801;
    const double C75499 = C93662 * C14801;
    const double C88852 = C93711 * C14801;
    const double C75296 = C75293 + C14488;
    const double C42111 = C42097 + C42098;
    const double C42293 = C42281 + C42282;
    const double C75083 = C75079 + C75080;
    const double C88374 = C88366 + C88367;
    const double C73497 = C73496 + C73493;
    const double C10317 = C9603 * C1903;
    const double C24320 = C93737 * C1903;
    const double C66300 = C93737 * C1903;
    const double C82522 = C81840 * C1903;
    const double C18859 = C93673 * C3785;
    const double C23001 = C93737 * C3785;
    const double C64984 = C93737 * C3785;
    const double C9807 = C9792 + C9793;
    const double C10223 = C10215 + C10216;
    const double C23675 = C23661 + C23662;
    const double C65655 = C65641 + C65642;
    const double C82028 = C82013 + C82014;
    const double C746 = C742 + C733;
    const double C2624 = C2621 + C2612;
    const double C4840 = C4838 + C4832;
    const double C3338 = C3335 + C3326;
    const double C19182 = C19181 + C19176;
    const double C17999 = C17995 + C17996;
    const double C34834 = C34830 + C34831;
    const double C7322 = C7317 + C7318;
    const double C16367 = C16358 + C16359;
    const double C33203 = C33194 + C33195;
    const double C48726 = C48721 + C48722;
    const double C12896 = C9603 * C6509;
    const double C30501 = C93737 * C6509;
    const double C80586 = C93737 * C6509;
    const double C84881 = C81840 * C6509;
    const double C12266 = C12257 + C12258;
    const double C29708 = C29702 + C29703;
    const double C79797 = C79791 + C79792;
    const double C84274 = C84265 + C84266;
    const double C92949 = ae * C92948;
    const double C11344 =
        (2 * C92518 + C92167 * C92948 + (C92032 + C92055 * C92306) * ae) /
        C91696;
    const double C41874 = C9603 * C6508;
    const double C62107 = C93737 * C6508;
    const double C72237 = C93737 * C6508;
    const double C88186 = C81840 * C6508;
    const double C40199 = C93673 * C9195;
    const double C58325 = C93737 * C9195;
    const double C68388 = C93737 * C9195;
    const double C41366 = C41351 + C41352;
    const double C41716 = C41708 + C41709;
    const double C61469 = C61463 + C61464;
    const double C71589 = C71575 + C71576;
    const double C87700 = C87685 + C87686;
    const double C38000 = C37999 + C37996;
    const double C40422 = C40421 + C40418;
    const double C38325 =
        (2 * (C92977 + C92124 * C93185) +
         ae * (C92713 + C92167 * (C92167 * C93146 + C93122) +
               C92167 * C93119 * ae) +
         C92124 *
             (C93185 +
              ae * (C93062 + C92167 * (C92167 * C92124 * C92198 + C93118) +
                    C92167 * C93112 * ae) +
              C92124 * (ae * (C92185 + C92167 * (C92167 * C92198 + C92090) +
                              C92167 * C92080 * ae) +
                        C92124 * (C92263 + ae * C92167 * C92155 +
                                  C92167 * (ae * C92155 +
                                            C92167 * std::pow(C92015, 7) *
                                                bs[7] * C92254))))) /
        C91701;
    const double C92978 = C92963 + C92976;
    const double C93071 = ae * C93070;
    const double C14265 =
        (2 * C92804 + C92167 * C93070 + (C92653 + C92666 * C92306) * ae) /
        C91696;
    const double C11578 = C11574 * C93587;
    const double C74671 = C11574 * C93582;
    const double C83647 = C11574 * C93587;
    const double C7530 = C5742 * C4079;
    const double C48932 = C5742 * C45718;
    const double C8516 = C8514 * C4079;
    const double C49874 = C8514 * C45718;
    const double C15737 = C15733 + C15734;
    const double C32573 = C32569 + C32570;
    const double C91732 = C91730 - C91717;
    const double C91731 = C91729 / C91696;
    const double C4937 = C4082 * C4916;
    const double C4935 = C4082 * C809;
    const double C4931 = C4082 * C806;
    const double C6625 = C4082 * C810;
    const double C6621 = C4082 * C805;
    const double C8626 = C4082 * C3410;
    const double C8622 = C4082 * C5817;
    const double C11123 = C4082 * C11102;
    const double C11121 = C4082 * C1390;
    const double C11117 = C4082 * C1387;
    const double C13020 = C4082 * C1391;
    const double C13016 = C4082 * C1386;
    const double C14036 = C4082 * C5820;
    const double C28202 = C4082 * C3411;
    const double C15818 = C14998 * C810;
    const double C15816 = C14998 * C805;
    const double C17311 = C14998 * C804;
    const double C19282 = C14998 * C3411;
    const double C21674 = C14998 * C1391;
    const double C21672 = C14998 * C1386;
    const double C23441 = C14998 * C1385;
    const double C32654 = C31834 * C810;
    const double C32652 = C31834 * C805;
    const double C34146 = C31834 * C804;
    const double C36103 = C31834 * C3411;
    const double C63668 = C31834 * C1391;
    const double C63666 = C31834 * C1386;
    const double C65421 = C31834 * C1385;
    const double C37492 = C36998 * C4918;
    const double C37490 = C36998 * C4917;
    const double C37488 = C36998 * C808;
    const double C37486 = C36998 * C807;
    const double C38551 = C36998 * C4916;
    const double C38549 = C36998 * C809;
    const double C38547 = C36998 * C806;
    const double C39812 = C36998 * C3409;
    const double C39810 = C36998 * C5818;
    const double C39808 = C36998 * C8615;
    const double C41173 = C36998 * C5821;
    const double C41171 = C36998 * C5819;
    const double C41984 = C36998 * C11103;
    const double C41981 = C36998 * C14027;
    const double C41979 = C36998 * C1389;
    const double C41977 = C36998 * C1388;
    const double C42854 = C36998 * C5820;
    const double C42852 = C36998 * C3410;
    const double C43775 = C36998 * C1390;
    const double C43773 = C36998 * C1387;
    const double C59448 = C36998 * C5817;
    const double C73245 = C36998 * C11104;
    const double C74381 = C36998 * C11102;
    const double C46536 = C45721 * C4916;
    const double C46534 = C45721 * C809;
    const double C46530 = C45721 * C806;
    const double C48037 = C45721 * C810;
    const double C48033 = C45721 * C805;
    const double C49979 = C45721 * C3410;
    const double C49975 = C45721 * C5817;
    const double C52707 = C45721 * C1390;
    const double C52703 = C45721 * C5820;
    const double C52701 = C45721 * C1387;
    const double C53703 = C45721 * C3411;
    const double C54929 = C45721 * C1386;
    const double C83303 = C45721 * C11102;
    const double C84998 = C45721 * C1391;
    const double C5165 = C5159 + C5160;
    const double C5281 = C5268 + C5269;
    const double C5276 = C5258 + C5259;
    const double C5274 = C5254 + C5255;
    const double C5272 = C5250 + C5251;
    const double C5270 = C5246 + C5247;
    const double C5560 = C5553 + C5554;
    const double C5557 = C5547 + C5548;
    const double C5555 = C5542 + C5543;
    const double C6988 = C6978 + C6979;
    const double C6986 = C6974 + C6975;
    const double C6984 = C6970 + C6971;
    const double C6982 = C6966 + C6967;
    const double C7321 = C7315 + C7316;
    const double C7319 = C7311 + C7312;
    const double C8991 = C8982 + C8983;
    const double C8989 = C8978 + C8979;
    const double C8987 = C8974 + C8975;
    const double C9315 = C9310 + C9311;
    const double C9313 = C9306 + C9307;
    const double C11268 = C11262 + C11263;
    const double C11466 = C11453 + C11454;
    const double C11464 = C11449 + C11450;
    const double C11461 = C11443 + C11444;
    const double C11459 = C11439 + C11440;
    const double C11457 = C11435 + C11436;
    const double C11455 = C11431 + C11432;
    const double C11751 = C11741 + C11742;
    const double C11749 = C11737 + C11738;
    const double C13383 = C13373 + C13374;
    const double C13381 = C13369 + C13370;
    const double C13379 = C13365 + C13366;
    const double C13377 = C13361 + C13362;
    const double C13706 = C13700 + C13701;
    const double C13704 = C13696 + C13697;
    const double C14380 = C14374 + C14375;
    const double C14378 = C14370 + C14371;
    const double C14702 = C14698 + C14699;
    const double C28626 = C28620 + C28621;
    const double C28624 = C28616 + C28617;
    const double C29034 = C29030 + C29031;
    const double C91908 = C91795 / C91696;
    const double C4450 =
        (((-4 * C91780) / C91696 - C91795 / C91696) * ae) / C91711 +
        ((2 * ((0 * ae) / C91696 - C91780 / C91701) - C91795 / C91711) * ae) /
            C91696;
    const double C15354 =
        (((-4 * C91780) / C91696 - C91795 / C91696) * ae) / C91696;
    const double C32190 =
        -(((-4 * C91780) / C91696 - C91795 / C91696) * be) / C91696;
    const double C4471 = C4449 * C110;
    const double C4456 = C4449 * C109;
    const double C7093 = C4449 * C806;
    const double C8073 = C4449 * C1387;
    const double C69098 = C4449 * C1389;
    const double C69088 = C4449 * C1388;
    const double C71797 = C4449 * C3409;
    const double C4465 = C4451 * C810;
    const double C4462 = C4451 * C809;
    const double C7089 = C4451 * C4916;
    const double C8069 = C4451 * C5817;
    const double C69094 = C4451 * C5821;
    const double C69092 = C4451 * C5818;
    const double C71801 = C4451 * C8615;
    const double C15371 = C15355 * C804;
    const double C15368 = C15355 * C805;
    const double C15362 = C15355 * C806;
    const double C17769 = C15355 * C809;
    const double C17765 = C15355 * C810;
    const double C18742 = C15355 * C3410;
    const double C18738 = C15355 * C3411;
    const double C27630 = C15355 * C5819;
    const double C27626 = C15355 * C5820;
    const double C27624 = C15355 * C3409;
    const double C28758 = C15355 * C5817;
    const double C31192 = C15355 * C5818;
    const double C88615 = C15355 * C14027;
    const double C91248 = C15355 * C5821;
    const double C32207 = C32191 * C804;
    const double C32204 = C32191 * C805;
    const double C32198 = C32191 * C806;
    const double C34604 = C32191 * C809;
    const double C34600 = C32191 * C810;
    const double C35571 = C32191 * C3410;
    const double C35567 = C32191 * C3411;
    const double C42391 = C32191 * C14027;
    const double C42389 = C32191 * C5819;
    const double C42385 = C32191 * C3409;
    const double C44211 = C32191 * C5820;
    const double C45184 = C32191 * C5821;
    const double C45180 = C32191 * C5818;
    const double C54255 = C32191 * C5817;
    const double C46092 = C46078 * C810;
    const double C46089 = C46078 * C809;
    const double C48495 = C46078 * C4916;
    const double C49449 = C46078 * C5817;
    const double C59004 = C46078 * C5821;
    const double C59002 = C46078 * C5818;
    const double C61677 = C46078 * C8615;
    const double C91892 = C91889 - C91884;
    const double C15130 = C15117 + C15118;
    const double C15125 = C15107 + C15108;
    const double C15123 = C15103 + C15104;
    const double C15121 = C15099 + C15100;
    const double C15119 = C15095 + C15096;
    const double C15484 = C15476 + C15477;
    const double C15653 = C15646 + C15647;
    const double C15650 = C15640 + C15641;
    const double C15648 = C15635 + C15636;
    const double C17446 = C17437 + C17438;
    const double C17444 = C17433 + C17434;
    const double C17442 = C17429 + C17430;
    const double C18109 = C18104 + C18105;
    const double C18107 = C18100 + C18101;
    const double C18437 = C18428 + C18429;
    const double C18435 = C18424 + C18425;
    const double C18433 = C18420 + C18421;
    const double C19076 = C19071 + C19072;
    const double C19074 = C19067 + C19068;
    const double C27327 = C27314 + C27315;
    const double C27325 = C27310 + C27311;
    const double C27323 = C27306 + C27307;
    const double C27321 = C27302 + C27303;
    const double C27318 = C27296 + C27297;
    const double C27316 = C27292 + C27293;
    const double C27967 = C27960 + C27961;
    const double C27965 = C27956 + C27957;
    const double C27962 = C27950 + C27951;
    const double C28351 = C28346 + C28347;
    const double C28349 = C28342 + C28343;
    const double C29171 = C29168 + C29169;
    const double C30782 = C30776 + C30777;
    const double C30780 = C30772 + C30773;
    const double C31606 = C31602 + C31603;
    const double C88375 = C88368 + C88369;
    const double C88373 = C88364 + C88365;
    const double C88537 = C88529 + C88530;
    const double C90924 = C90918 + C90919;
    const double C90922 = C90914 + C90915;
    const double C91571 = C91567 + C91568;
    const double C31966 = C31953 + C31954;
    const double C31961 = C31943 + C31944;
    const double C31959 = C31939 + C31940;
    const double C31957 = C31935 + C31936;
    const double C31955 = C31931 + C31932;
    const double C32320 = C32312 + C32313;
    const double C32489 = C32482 + C32483;
    const double C32486 = C32476 + C32477;
    const double C32484 = C32471 + C32472;
    const double C34281 = C34272 + C34273;
    const double C34279 = C34268 + C34269;
    const double C34277 = C34264 + C34265;
    const double C34944 = C34939 + C34940;
    const double C34942 = C34935 + C34936;
    const double C35272 = C35263 + C35264;
    const double C35270 = C35259 + C35260;
    const double C35268 = C35255 + C35256;
    const double C35902 = C35897 + C35898;
    const double C35900 = C35893 + C35894;
    const double C42112 = C42099 + C42100;
    const double C42110 = C42095 + C42096;
    const double C42107 = C42089 + C42090;
    const double C42105 = C42085 + C42086;
    const double C42103 = C42081 + C42082;
    const double C42101 = C42077 + C42078;
    const double C42305 = C42299 + C42300;
    const double C42670 = C42660 + C42661;
    const double C42668 = C42656 + C42657;
    const double C43893 = C43887 + C43888;
    const double C43891 = C43883 + C43884;
    const double C44525 = C44521 + C44522;
    const double C44852 = C44842 + C44843;
    const double C44850 = C44838 + C44839;
    const double C44848 = C44834 + C44835;
    const double C44846 = C44830 + C44831;
    const double C45522 = C45516 + C45517;
    const double C45520 = C45512 + C45513;
    const double C53852 = C53847 + C53848;
    const double C53850 = C53843 + C53844;
    const double C54666 = C54663 + C54664;
    const double C91979 = C91821 / C91696;
    const double C10300 =
        (((-4 * C91806) / C91696 - C91821 / C91696) * ae) / C91711 +
        ((2 * ((0 * ae) / C91696 - C91806 / C91701) - C91821 / C91711) * ae) /
            C91696;
    const double C20870 =
        (((-4 * C91806) / C91696 - C91821 / C91696) * ae) / C91696;
    const double C62865 =
        -(((-4 * C91806) / C91696 - C91821 / C91696) * be) / C91696;
    const double C10321 = C10299 * C110;
    const double C10306 = C10299 * C109;
    const double C12899 = C10299 * C806;
    const double C13916 = C10299 * C1387;
    const double C41877 = C10299 * C808;
    const double C41867 = C10299 * C807;
    const double C45627 = C10299 * C3409;
    const double C10315 = C10301 * C1391;
    const double C10312 = C10301 * C1390;
    const double C12895 = C10301 * C5820;
    const double C13912 = C10301 * C11102;
    const double C41873 = C10301 * C5821;
    const double C41871 = C10301 * C5819;
    const double C45623 = C10301 * C14027;
    const double C20887 = C20871 * C1385;
    const double C20884 = C20871 * C1386;
    const double C20878 = C20871 * C1387;
    const double C23321 = C20871 * C3410;
    const double C23317 = C20871 * C3411;
    const double C24323 = C20871 * C1390;
    const double C24319 = C20871 * C1391;
    const double C27070 = C20871 * C5818;
    const double C27066 = C20871 * C5817;
    const double C27064 = C20871 * C3409;
    const double C30500 = C20871 * C5820;
    const double C31738 = C20871 * C5819;
    const double C58568 = C20871 * C8615;
    const double C62106 = C20871 * C5821;
    const double C62882 = C62866 * C1385;
    const double C62879 = C62866 * C1386;
    const double C62873 = C62866 * C1387;
    const double C65301 = C62866 * C3410;
    const double C65297 = C62866 * C3411;
    const double C66303 = C62866 * C1390;
    const double C66299 = C62866 * C1391;
    const double C68643 = C62866 * C8615;
    const double C68641 = C62866 * C5818;
    const double C68637 = C62866 * C3409;
    const double C70355 = C62866 * C5817;
    const double C72240 = C62866 * C5819;
    const double C72236 = C62866 * C5821;
    const double C80585 = C62866 * C5820;
    const double C82520 = C82506 * C1391;
    const double C82517 = C82506 * C1390;
    const double C84880 = C82506 * C5820;
    const double C85855 = C82506 * C11102;
    const double C88185 = C82506 * C5821;
    const double C88183 = C82506 * C5819;
    const double C91671 = C82506 * C14027;
    const double C91963 = C91960 - C91955;
    const double C20387 = C20374 + C20375;
    const double C20382 = C20364 + C20365;
    const double C20380 = C20360 + C20361;
    const double C20378 = C20356 + C20357;
    const double C20376 = C20352 + C20353;
    const double C20630 = C20623 + C20624;
    const double C20627 = C20617 + C20618;
    const double C20625 = C20612 + C20613;
    const double C20794 = C20786 + C20787;
    const double C22700 = C22691 + C22692;
    const double C22698 = C22687 + C22688;
    const double C22696 = C22683 + C22684;
    const double C23011 = C23006 + C23007;
    const double C23009 = C23002 + C23003;
    const double C23680 = C23671 + C23672;
    const double C23678 = C23667 + C23668;
    const double C23676 = C23663 + C23664;
    const double C24007 = C24002 + C24003;
    const double C24005 = C23998 + C23999;
    const double C26451 = C26438 + C26439;
    const double C26449 = C26434 + C26435;
    const double C26447 = C26430 + C26431;
    const double C26445 = C26426 + C26427;
    const double C26442 = C26420 + C26421;
    const double C26440 = C26416 + C26417;
    const double C26767 = C26760 + C26761;
    const double C26765 = C26756 + C26757;
    const double C26762 = C26750 + C26751;
    const double C29709 = C29704 + C29705;
    const double C29707 = C29700 + C29701;
    const double C30107 = C30104 + C30105;
    const double C30925 = C30920 + C30921;
    const double C30923 = C30916 + C30917;
    const double C31339 = C31336 + C31337;
    const double C58096 = C58089 + C58090;
    const double C58094 = C58085 + C58086;
    const double C58416 = C58408 + C58409;
    const double C61470 = C61465 + C61466;
    const double C61468 = C61461 + C61462;
    const double C62382 = C62369 + C62370;
    const double C62377 = C62359 + C62360;
    const double C62375 = C62355 + C62356;
    const double C62373 = C62351 + C62352;
    const double C62371 = C62347 + C62348;
    const double C62625 = C62618 + C62619;
    const double C62622 = C62612 + C62613;
    const double C62620 = C62607 + C62608;
    const double C62789 = C62781 + C62782;
    const double C64688 = C64679 + C64680;
    const double C64686 = C64675 + C64676;
    const double C64684 = C64671 + C64672;
    const double C64994 = C64989 + C64990;
    const double C64992 = C64985 + C64986;
    const double C65660 = C65651 + C65652;
    const double C65658 = C65647 + C65648;
    const double C65656 = C65643 + C65644;
    const double C65987 = C65982 + C65983;
    const double C65985 = C65978 + C65979;
    const double C68148 = C68135 + C68136;
    const double C68146 = C68131 + C68132;
    const double C68143 = C68125 + C68126;
    const double C68141 = C68121 + C68122;
    const double C68139 = C68117 + C68118;
    const double C68137 = C68113 + C68114;
    const double C68393 = C68383 + C68384;
    const double C68391 = C68379 + C68380;
    const double C68484 = C68476 + C68477;
    const double C69749 = C69743 + C69744;
    const double C69747 = C69739 + C69740;
    const double C70049 = C70045 + C70046;
    const double C71594 = C71585 + C71586;
    const double C71592 = C71581 + C71582;
    const double C71590 = C71577 + C71578;
    const double C71588 = C71573 + C71574;
    const double C71924 = C71919 + C71920;
    const double C79798 = C79793 + C79794;
    const double C79796 = C79789 + C79790;
    const double C80194 = C80191 + C80192;
    const double C12795 = C12793 * C9602;
    const double C23213 = C12793 * C93737;
    const double C65195 = C12793 * C93737;
    const double C84778 = C12793 * C93847;
    const double C12477 = C12475 + C12470;
    const double C8197 = C8195 * C4078;
    const double C18863 = C8195 * C93711;
    const double C35691 = C8195 * C93711;
    const double C49567 = C8195 * C93845;
    const double C11580 = C11577 + C11555;
    const double C83649 = C83645 + C83646;
    const double C2064 = C93662 * C895;
    const double C4195 = C4078 * C895;
    const double C15110 = C93711 * C895;
    const double C17426 = C93818 * C895;
    const double C31946 = C93711 * C895;
    const double C34261 = C31828 * C895;
    const double C45834 = C93845 * C895;
    const double C6973 = C93587 * C1019;
    const double C16093 = C14991 * C1019;
    const double C17658 = C93843 * C1019;
    const double C32929 = C31827 * C1019;
    const double C34493 = C31826 * C1019;
    const double C48380 = C93587 * C1019;
    const double C2864 = C93673 * C1542;
    const double C9789 = C9602 * C1542;
    const double C20367 = C93737 * C1542;
    const double C23660 = C93819 * C1542;
    const double C62362 = C93737 * C1542;
    const double C65640 = C62191 * C1542;
    const double C82010 = C93847 * C1542;
    const double C13699 = C93587 * C1782;
    const double C22204 = C14991 * C1782;
    const double C24109 = C93843 * C1782;
    const double C55742 = C93587 * C1782;
    const double C64198 = C31827 * C1782;
    const double C66089 = C31826 * C1782;
    const double C223 = C212 + C213;
    const double C310 = C299 + C300;
    const double C15128 = C15113 + C15114;
    const double C20385 = C20370 + C20371;
    const double C31964 = C31949 + C31950;
    const double C62380 = C62365 + C62366;
    const double C2159 = C2149 + C2150;
    const double C6983 = C6968 + C6969;
    const double C16108 = C16086 + C16087;
    const double C22694 = C22679 + C22680;
    const double C32944 = C32922 + C32923;
    const double C48390 = C48375 + C48376;
    const double C64682 = C64667 + C64668;
    const double C2787 = C2777 + C2778;
    const double C13378 = C13363 + C13364;
    const double C18431 = C18416 + C18417;
    const double C21961 = C21939 + C21940;
    const double C35266 = C35251 + C35252;
    const double C55344 = C55337 + C55338;
    const double C63955 = C63933 + C63934;
    const double C8854 = C7869 * C93587;
    const double C19498 = C7869 * C93843;
    const double C36319 = C7869 * C31826;
    const double C50197 = C7869 * C93587;
    const double C43477 = C43475 * C9602;
    const double C60051 = C43475 * C93737;
    const double C70152 = C43475 * C93737;
    const double C89626 = C43475 * C93847;
    const double C44096 = C43168 * C93711;
    const double C60650 = C43168 * C93845;
    const double C70760 = C43168 * C4078;
    const double C90220 = C43168 * C93711;
    const double C31605 = C93711 * C6426;
    const double C45515 = C93711 * C6426;
    const double C59258 = C45718 * C6426;
    const double C62002 = C93845 * C6426;
    const double C69348 = C4079 * C6426;
    const double C72132 = C4078 * C6426;
    const double C5279 = C5264 + C5265;
    const double C5463 = C5458 + C5459;
    const double C37704 = C37693 + C37694;
    const double C58329 = C58326 + C58327;
    const double C68396 = C68389 + C68390;
    const double C8985 = C8970 + C8971;
    const double C9202 = C9198 + C9199;
    const double C26766 = C26758 + C26759;
    const double C30781 = C30774 + C30775;
    const double C40056 = C40046 + C40047;
    const double C41625 = C41617 + C41618;
    const double C44847 = C44832 + C44833;
    const double C58754 = C58732 + C58733;
    const double C61794 = C61791 + C61792;
    const double C68394 = C68385 + C68386;
    const double C68844 = C68822 + C68823;
    const double C71468 = C71457 + C71458;
    const double C71922 = C71915 + C71916;
    const double C11754 = C11747 + C11748;
    const double C11845 = C11840 + C11841;
    const double C42580 = C42575 + C42576;
    const double C42673 = C42666 + C42667;
    const double C88856 = C88853 + C88854;
    const double C14496 = C14494 * C4075;
    const double C24837 = C14494 * C93842;
    const double C66817 = C14494 * C31825;
    const double C75291 = C14494 * C93582;
    const double C86371 = C14494 * C93805;
    const double C14497 = C14495 * C4075;
    const double C75292 = C14495 * C93582;
    const double C86373 = C14495 * C93805;
    const double C18415 = C93711 * C3497;
    const double C22574 = C93662 * C3497;
    const double C35250 = C93711 * C3497;
    const double C92075 = C92074 + C92063;
    const double C820 =
        (2 * (2 * ae * C92124 * C92034 + C92009 * C92325) + C92328 + C92328 +
         C92009 *
             (C92325 + C92329 + C92329 +
              C92009 * (2 * ae * C92124 * C92058 + C92009 * C92124 * C92101))) /
        C91701;
    const double C900 = (C92134 + ae * C92137 + C92009 * C92145 + C92328 +
                         C92124 * (C92073 + C92124 * C92163)) /
                        C91701;
    const double C1024 = (C92215 + ae * C92137 + C92009 * C92220 + C92328 +
                          C92124 * (C92073 + C92124 * C92228)) /
                         C91701;
    const double C3571 = (C92328 + C92167 * C92124 * C92206) / C91701;
    const double C3855 = (C92328 + C92167 * C92124 * C92286) / C91701;
    const double C7638 = C4083 * C3415;
    const double C16592 = C14999 * C3415;
    const double C18414 = C15093 * C3415;
    const double C18536 = C275 * C3415;
    const double C19607 = C14991 * C3415;
    const double C22573 = C188 * C3415;
    const double C22677 = C20350 * C3415;
    const double C25336 = C4081 * C3415;
    const double C28619 = C93587 * C3415;
    const double C33428 = C31835 * C3415;
    const double C35249 = C31929 * C3415;
    const double C36428 = C31827 * C3415;
    const double C40501 = C36999 * C3415;
    const double C49036 = C91722 * C3415;
    const double C54116 = C93587 * C3415;
    const double C64665 = C62345 * C3415;
    const double C1401 =
        (2 * (2 * ae * C92167 * C92034 + C92009 * C92427) + C92430 + C92430 +
         C92009 *
             (C92427 + C92431 + C92431 +
              C92009 * (2 * ae * C92167 * C92058 + C92009 * C92167 * C92101))) /
        C91701;
    const double C1547 = (C92177 + ae * C92180 + C92009 * C92188 + C92430 +
                          C92167 * (C92073 + C92167 * C92206)) /
                         C91701;
    const double C1787 = (C92273 + ae * C92180 + C92009 * C92278 + C92430 +
                          C92167 * (C92073 + C92167 * C92286)) /
                         C91701;
    const double C3641 = (C92430 + C92124 * C92167 * C92228) / C91701;
    const double C4300 = C4294 + C4295;
    const double C6987 = C6976 + C6977;
    const double C16115 = C16100 + C16101;
    const double C32951 = C32936 + C32937;
    const double C48394 = C48383 + C48384;
    const double C9695 = C9689 + C9690;
    const double C13382 = C13371 + C13372;
    const double C21968 = C21953 + C21954;
    const double C63962 = C63947 + C63948;
    const double C85337 = C85330 + C85331;
    const double C12263 = C12251 + C12252;
    const double C29706 = C29698 + C29699;
    const double C79795 = C79787 + C79788;
    const double C84271 = C84259 + C84260;
    const double C14703 = C14700 + C14701;
    const double C43476 = C43473 + C43474;
    const double C53371 = C53361 + C53362;
    const double C6753 = C6741 + C6742;
    const double C48163 = C48151 + C48152;
    const double C7867 = C7859 + C7860;
    const double C26444 = C26424 + C26425;
    const double C69750 = C69745 + C69746;
    const double C9312 = C9304 + C9305;
    const double C50631 = C50623 + C50624;
    const double C60057 = C60055 + C60056;
    const double C5161 = C5153 * C93587;
    const double C38703 = C5153 * C93582;
    const double C46720 = C5153 * C93587;
    const double C38996 = C38786 * C275;
    const double C60054 = C59752 * C20350;
    const double C60651 = C59752 * C45817;
    const double C70155 = C59752 * C62345;
    const double C70761 = C59752 * C4178;
    const double C14381 = C14376 + C14377;
    const double C43170 = C43165 + C43166;
    const double C53055 = C53035 + C53036;
    const double C13256 = C13244 + C13245;
    const double C85224 = C85212 + C85213;
    const double C11264 = C11256 * C93587;
    const double C74458 = C11256 * C93582;
    const double C83397 = C11256 * C93587;
    const double C74601 = C74599 * C188;
    const double C1083 =
        (2 * C92009 * C92242 + C92009 * C92249 + C92393 + C92393 +
         C92124 * (2 * ae * C92164 +
                   C92124 * (2 * C92009 * C92247 +
                             C92009 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3926 =
        (C92393 +
         C92167 * (ae * C92207 +
                   C92124 * (2 * C92009 * C92300 +
                             C92009 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C1092 = C188 * C893;
    const double C4476 = C4178 * C893;
    const double C17774 = C15093 * C893;
    const double C34609 = C31929 * C893;
    const double C46103 = C45817 * C893;
    const double C3717 = C188 * C3494;
    const double C18747 = C15093 * C3494;
    const double C35576 = C31929 * C3494;
    const double C1904 =
        (2 * C92009 * C92316 + C92009 * C92323 + C92527 + C92527 +
         C92167 * (2 * ae * C92207 +
                   C92167 * (2 * C92009 * C92321 +
                             C92009 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C3786 =
        (C92527 +
         C92124 * (ae * C92164 +
                   C92167 * (2 * C92009 * C92263 +
                             C92009 * (C92263 + std::pow(C92015, 7) * bs[7] *
                                                    C92254 * C92013)))) /
        C91701;
    const double C1913 = C275 * C1540;
    const double C10326 = C9772 * C1540;
    const double C24328 = C20350 * C1540;
    const double C66308 = C62345 * C1540;
    const double C82531 = C81993 * C1540;
    const double C92835 = ae * C92834;
    const double C6738 =
        (2 * C92388 + C92124 * C92834 + (C92060 + C92096 * C92232) * ae) /
        C91696;
    const double C7738 = (C92167 * C92834) / C91696;
    const double C93039 = ae * C93038;
    const double C13241 =
        (2 * C92522 + C92167 * C93038 + (C92060 + C92096 * C92306) * ae) /
        C91696;
    const double C6430 =
        (C92727 + ae * C92715 + C92124 * C92735 + ae * C92167 * C92699 +
         C92167 * (C92701 +
                   C92167 * (C92733 + ae * C92124 * C92717 +
                             C92124 * (ae * C92717 + C92124 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92291)))) /
        C91701;
    const double C92702 = C92685 + C92700;
    const double C92873 = ae * C92871;
    const double C92999 = C92984 + C92997;
    const double C93083 = ae * C93082;
    const double C14266 =
        (2 * C92812 + C92167 * C93082 + (C92643 + C92687 * C92306) * ae) /
        C91696;
    const double C92116 = C92115 + C92099;
    const double C92348 = ae * C92346;
    const double C6616 = (2 * C92326 + C92124 * C92346) / C91696;
    const double C7632 = (C92167 * C92346) / C91696;
    const double C92450 = ae * C92448;
    const double C13011 = (2 * C92428 + C92167 * C92448) / C91696;
    const double C7739 =
        (C92167 *
         (C92163 + C92537 +
          C92124 * (C92114 + C92124 * (C92153 + ae * C92686 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C92579 = ae * C92577;
    const double C12038 = C4083 * C12034;
    const double C16603 = C14999 * C12034;
    const double C33439 = C31835 * C12034;
    const double C40502 = C36999 * C12034;
    const double C54934 = C91722 * C12034;
    const double C6617 =
        (2 * C92325 + C92124 * C92345 + C92822 + C92822 +
         C92009 * (2 * ae * (2 * C92529 + C92124 * (C92058 + C92094 * C92232)) +
                   C92009 * (2 * C92530 +
                             C92124 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C8846 =
        (C92822 + C92167 * (2 * C92124 * C92202 +
                            C92124 * (C92202 + (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171) *
                                                   C92232))) /
        C91701;
    const double C9302 =
        (C92822 + C92167 * (2 * C92124 * C92284 +
                            C92124 * (C92284 + (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270) *
                                                   C92232))) /
        C91701;
    const double C4944 = C4083 * C4923;
    const double C38553 = C36999 * C4923;
    const double C46543 = C91722 * C4923;
    const double C8631 = C4083 * C8618;
    const double C39206 = C36999 * C8618;
    const double C49984 = C91722 * C8618;
    const double C13012 =
        (2 * C92427 + C92167 * C92447 + C93022 + C93022 +
         C92009 * (2 * ae * (2 * C92550 + C92167 * (C92058 + C92094 * C92306)) +
                   C92009 * (2 * C92551 +
                             C92167 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C14368 =
        (C93022 + C92124 * (2 * C92862 +
                            C92167 * (C92226 + (ae * C92155 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212) *
                                                   C92306))) /
        C91701;
    const double C11130 = C4083 * C11109;
    const double C74383 = C36999 * C11109;
    const double C83308 = C91722 * C11109;
    const double C93133 = C93132 + C93122;
    const double C93176 = ae * C93174;
    const double C44827 = (2 * C92865 + C92167 * C93174) / C91696;
    const double C45176 =
        (2 * C92864 + C92167 * C93173 + C93271 + C93271 +
         C92124 * (2 * ae * (2 * C93179 + C92167 * C93232) +
                   C92124 * (2 * C93201 +
                             C92167 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C42398 = C31929 * C42074;
    const double C75295 = C188 * C42074;
    const double C88620 = C15093 * C42074;
    const double C93344 = C93343 + C93326;
    const double C38478 =
        (2 * C93061 + C92124 * C93162 + C93191 + C93191 +
         C92167 * (2 * ae * C93150 +
                   C92167 * (2 * C92124 * C92321 +
                             C92124 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C40196 =
        (3 * (C92877 + C93068 + C92124 * C93212) + C93191 +
         C92124 * (2 * C93212 + ae * (C92167 * C93146 + C93122) +
                   C92124 * (C93182 + ae * (C92167 * C92124 * C92198 + C93118) +
                             C92124 * (ae * (C92167 * C92198 + C92090) +
                                       C92124 * (ae * C92155 +
                                                 C92167 * std::pow(C92015, 7) *
                                                     bs[7] * C92254))))) /
        C91701;
    const double C38480 = C275 * C38163;
    const double C41881 = C9772 * C38163;
    const double C62111 = C20350 * C38163;
    const double C72245 = C62345 * C38163;
    const double C88193 = C81993 * C38163;
    const double C93284 = ae * C93283;
    const double C44951 =
        (2 * C92808 + C92167 * C93283 + (C92671 + C93119 * C92306) * ae) /
        C91696;
    const double C93260 = C93243 + C93258;
    const double C19073 = C19065 + C19066;
    const double C23217 = C23208 + C23209;
    const double C35899 = C35891 + C35892;
    const double C4586 = C4584 * C4079;
    const double C17885 = C4584 * C93711;
    const double C34720 = C4584 * C93711;
    const double C46202 = C4584 * C45718;
    const double C22900 = C22899 + C3716;
    const double C23210 = C22578 * C20350;
    const double C24541 = C22578 * C14999;
    const double C65192 = C22578 * C62345;
    const double C66521 = C22578 * C31835;
    const double C23897 = C3024 * C14991;
    const double C65877 = C3024 * C31827;
    const double C13487 = C9967 * C93587;
    const double C22048 = C9967 * C14991;
    const double C64042 = C9967 * C31827;
    const double C85441 = C9967 * C93587;
    const double C14159 = C12147 * C93587;
    const double C86076 = C12147 * C93587;
    const double C5357 =
        (2 * (2 * ae * C92137 + C92124 * C92641) + C92650 + C92650 +
         C92124 * (C92641 + C92647 + C92647 +
                   C92124 * (2 * C92152 + C92124 * C92009 * C92247))) /
        C91701;
    const double C6425 =
        (C92650 + C92167 * (C92727 + ae * C92715 + C92124 * C92735)) / C91701;
    const double C5262 = C4083 * C5038;
    const double C5372 = C4177 * C5038;
    const double C5362 = C4178 * C5038;
    const double C5456 = C275 * C5038;
    const double C6748 = C4079 * C5038;
    const double C16201 = C15093 * C5038;
    const double C33037 = C31929 * C5038;
    const double C37225 = C37065 * C5038;
    const double C38780 = C36999 * C5038;
    const double C46817 = C91722 * C5038;
    const double C46913 = C45817 * C5038;
    const double C48158 = C45718 * C5038;
    const double C6180 = C4178 * C5921;
    const double C7748 = C4079 * C5921;
    const double C8186 = C275 * C5921;
    const double C8968 = C4083 * C5921;
    const double C9096 = C4177 * C5921;
    const double C10718 = C188 * C5921;
    const double C19719 = C15093 * C5921;
    const double C26650 = C15092 * C5921;
    const double C26754 = C20350 * C5921;
    const double C28345 = C93711 * C5921;
    const double C36540 = C31929 * C5921;
    const double C47625 = C45817 * C5921;
    const double C49144 = C45718 * C5921;
    const double C50299 = C91722 * C5921;
    const double C52207 = C31928 * C5921;
    const double C53846 = C93711 * C5921;
    const double C59750 = C36999 * C5921;
    const double C70047 = C62345 * C5921;
    const double C6191 = C4178 * C5926;
    const double C10720 = C188 * C5926;
    const double C31197 = C15093 * C5926;
    const double C43270 = C31929 * C5926;
    const double C47636 = C45817 * C5926;
    const double C12792 = C12784 + C12785;
    const double C27964 = C27954 + C27955;
    const double C44526 = C44523 + C44524;
    const double C12476 = C12474 + C12468;
    const double C45519 = C93711 * C6428;
    const double C59260 = C45718 * C6428;
    const double C69350 = C4079 * C6428;
    const double C91570 = C93711 * C6428;
    const double C92680 = C92679 + C92673;
    const double C9089 =
        (2 * (2 * ae * C92167 * C92135 + C92124 * C92864) + C92867 + C92867 +
         C92124 *
             (C92864 + C92868 + C92868 +
              C92124 * (2 * ae * C92167 * C92142 + C92124 * C92167 * C92247))) /
        C91701;
    const double C41453 = C41447 + C41448;
    const double C41624 = C41615 + C41616;
    const double C44851 = C44840 + C44841;
    const double C58761 = C58746 + C58747;
    const double C61793 = C61789 + C61790;
    const double C68851 = C68836 + C68837;
    const double C71921 = C71913 + C71914;
    const double C87942 = C87933 + C87934;
    const double C90923 = C90916 + C90917;
    const double C75297 = C75296 + C14488;
    const double C42301 = C42293 * C93711;
    const double C75224 = C42293 * C93662;
    const double C88533 = C42293 * C93711;
    const double C75085 = C75083 * C36999;
    const double C73498 = C73497 * C93582;
    const double C18867 = C18858 + C18859;
    const double C23008 = C23000 + C23001;
    const double C64991 = C64983 + C64984;
    const double C10225 = C10223 * C9603;
    const double C24213 = C10223 * C93737;
    const double C66193 = C10223 * C93737;
    const double C82425 = C10223 * C81840;
    const double C750 = C746 * C93662;
    const double C2627 = C2624 * C93662;
    const double C15735 = C2624 * C93711;
    const double C32571 = C2624 * C93711;
    const double C4842 = C4840 * C4079;
    const double C18208 = C4840 * C93711;
    const double C35043 = C4840 * C93711;
    const double C46451 = C4840 * C45718;
    const double C3341 = C3338 * C93662;
    const double C19183 = C19182 * C93711;
    const double C36001 = C19182 * C93711;
    const double C11919 =
        (2 * (2 * ae * C92180 + C92167 * C92737) + C92949 + C92949 +
         C92167 * (C92737 + C92946 + C92946 +
                   C92167 * (2 * C92195 + C92167 * C92741))) /
        C91701;
    const double C11745 = C4083 * C11344;
    const double C11838 = C188 * C11344;
    const double C11934 = C9771 * C11344;
    const double C11924 = C9772 * C11344;
    const double C13251 = C9603 * C11344;
    const double C22374 = C20350 * C11344;
    const double C64368 = C62345 * C11344;
    const double C72725 = C72415 * C11344;
    const double C74804 = C36999 * C11344;
    const double C83799 = C91722 * C11344;
    const double C83953 = C81993 * C11344;
    const double C85219 = C81840 * C11344;
    const double C41718 = C41716 * C9603;
    const double C61893 = C41716 * C93737;
    const double C72023 = C41716 * C93737;
    const double C88025 = C41716 * C81840;
    const double C92979 = C92978 + C92972;
    const double C14907 =
        (2 * (2 * ae * C92709 + C92167 * C93061) + C93071 + C93071 +
         C92167 * (C93061 + C93068 + C93068 +
                   C92167 * (2 * ae * C93062 + C92167 * C92124 * C92321))) /
        C91701;
    const double C14912 = C9772 * C14265;
    const double C28067 = C20350 * C14265;
    const double C42573 = C36999 * C14265;
    const double C42664 = C31929 * C14265;
    const double C42751 = C9771 * C14265;
    const double C44961 = C9603 * C14265;
    const double C69438 = C62345 * C14265;
    const double C73184 = C72415 * C14265;
    const double C75498 = C188 * C14265;
    const double C86769 = C81993 * C14265;
    const double C88851 = C15093 * C14265;
    const double C91031 = C81840 * C14265;
    const double C45740 = C91732 * C818;
    const double C45738 = C91732 * C813;
    const double C45736 = C91732 * C116;
    const double C45735 = C91732 * C115;
    const double C45733 = C91732 * C814;
    const double C45731 = C91732 * C817;
    const double C45728 = C91732 * C816;
    const double C45726 = C91732 * C815;
    const double C45724 = C91732 * C114;
    const double C46542 = C91732 * C4922;
    const double C46540 = C91732 * C4921;
    const double C46723 = C5156 * C91732;
    const double C46716 = C5151 * C91732;
    const double C46712 = C5149 * C91732;
    const double C46823 = C91732 * C4917;
    const double C46819 = C91732 * C5039;
    const double C46813 = C91732 * C890;
    const double C46809 = C91732 * C808;
    const double C46805 = C91732 * C889;
    const double C46801 = C91732 * C807;
    const double C47084 = C91732 * C5121;
    const double C47078 = C91732 * C956;
    const double C47073 = C91732 * C955;
    const double C47327 = C91732 * C5827;
    const double C47325 = C91732 * C5825;
    const double C47323 = C91732 * C1397;
    const double C47322 = C91732 * C1396;
    const double C47320 = C91732 * C3413;
    const double C47318 = C91732 * C5824;
    const double C48039 = C91732 * C4920;
    const double C48271 = C4298 * C91732;
    const double C48267 = C2162 * C91732;
    const double C48385 = C91732 * C891;
    const double C48381 = C91732 * C809;
    const double C48377 = C91732 * C888;
    const double C48373 = C91732 * C806;
    const double C48719 = C91732 * C957;
    const double C48715 = C91732 * C954;
    const double C49037 = C91732 * C5823;
    const double C49035 = C91732 * C3414;
    const double C49033 = C91732 * C1395;
    const double C49983 = C91732 * C8617;
    const double C50200 = C8863 * C91732;
    const double C50196 = C8861 * C91732;
    const double C50313 = C91732 * C3409;
    const double C50309 = C91732 * C3491;
    const double C50305 = C91732 * C5818;
    const double C50301 = C91732 * C5922;
    const double C50629 = C91732 * C3565;
    const double C50625 = C91732 * C6008;
    const double C50931 = C91732 * C3415;
    const double C50929 = C91732 * C1394;
    const double C52713 = C91732 * C14029;
    const double C52711 = C91732 * C11107;
    const double C53049 = C91732 * C1389;
    const double C53045 = C91732 * C1471;
    const double C53041 = C91732 * C5819;
    const double C53037 = C91732 * C5923;
    const double C53031 = C91732 * C1470;
    const double C53027 = C91732 * C1388;
    const double C53367 = C91732 * C1537;
    const double C53363 = C91732 * C6009;
    const double C53357 = C91732 * C1536;
    const double C54117 = C91732 * C3492;
    const double C54113 = C91732 * C3410;
    const double C54525 = C91732 * C3566;
    const double C54933 = C91732 * C5826;
    const double C54931 = C91732 * C1398;
    const double C55339 = C91732 * C1469;
    const double C55335 = C91732 * C1387;
    const double C55739 = C91732 * C1535;
    const double C81842 = C91732 * C1399;
    const double C83307 = C91732 * C11108;
    const double C83400 = C11259 * C91732;
    const double C83393 = C11254 * C91732;
    const double C83389 = C11252 * C91732;
    const double C83560 = C91732 * C11103;
    const double C83556 = C91732 * C11224;
    const double C83801 = C91732 * C11345;
    const double C85000 = C91732 * C11106;
    const double C85110 = C9693 * C91732;
    const double C85106 = C2790 * C91732;
    const double C85332 = C91732 * C1472;
    const double C85328 = C91732 * C1390;
    const double C85647 = C91732 * C1538;
    const double C86073 = C14162 * C91732;
    const double C86069 = C14160 * C91732;
    const double C101 =
        ((((0 - (C91697 * C91695) / C91696) * ae) / C91696 - (0 * be) / C91711 +
          C91698 / C91696) /
             C91702 -
         ((C91697 * C91725 + 0) * be) / C91696) /
            C91702 +
        ((C91697 * (C91725 / C91702 -
                    ((C91697 * C91732 + C93805) * be) / C91696 + C91722) +
          C93842) *
         ae) /
            C91696 +
        C91732 / C91702 - ((C91697 * C91722 + C93587) * be) / C91696;
    const double C103 =
        (C91725 / C91702 - ((C91697 * C91732 + C93805) * be) / C91696 +
         C91722) /
            C91702 +
        ((C91697 *
              (C91732 / C91702 - ((C91697 * C91722 + C93587) * be) / C91696) +
          C93843) *
         ae) /
            C91696 +
        2 * (C91722 / C91702 - (0 * be) / C91696);
    const double C105 =
        (C91732 / C91702 - ((C91697 * C91722 + C93587) * be) / C91696) /
            C91702 +
        ((C91697 * (C91722 / C91702 - (0 * be) / C91696) + C14991) * ae) /
            C91696;
    const double C14995 =
        C91725 / C91702 - ((C91697 * C91732 + C93805) * be) / C91696 + C91722;
    const double C14997 =
        C91732 / C91702 - ((C91697 * C91722 + C93587) * be) / C91696;
    const double C31831 =
        C91725 / C91702 + ((C91697 * C91732 + C93805) * ae) / C91696 + C91722;
    const double C31833 =
        C91732 / C91702 + ((C91697 * C91722 + C93587) * ae) / C91696;
    const double C91733 = C91720 - C91731;
    const double C4949 = C4937 + C4938;
    const double C4948 = C4935 + C4090;
    const double C4946 = C4931 + C4088;
    const double C6632 = C6625 + C4091;
    const double C6630 = C6621 + C4093;
    const double C8634 = C8626 + C5838;
    const double C8632 = C8622 + C5836;
    const double C11135 = C11123 + C11124;
    const double C11134 = C11121 + C5843;
    const double C11132 = C11117 + C5840;
    const double C13027 = C13020 + C9605;
    const double C13025 = C13016 + C7636;
    const double C14041 = C14036 + C5845;
    const double C15833 = C15818 + C15819;
    const double C15832 = C15816 + C15006;
    const double C21686 = C21674 + C16600;
    const double C21685 = C21672 + C16595;
    const double C32669 = C32654 + C32655;
    const double C32668 = C32652 + C31842;
    const double C63680 = C63668 + C33436;
    const double C63679 = C63666 + C33431;
    const double C37499 = C37492 + C37493;
    const double C37498 = C37490 + C37004;
    const double C37497 = C37488 + C37003;
    const double C37496 = C37486 + C37002;
    const double C38556 = C38551 + C37005;
    const double C38555 = C38549 + C37006;
    const double C38554 = C38547 + C37007;
    const double C39817 = C39812 + C38056;
    const double C39816 = C39810 + C38055;
    const double C39815 = C39808 + C38054;
    const double C41178 = C41173 + C38060;
    const double C41177 = C41171 + C38059;
    const double C41992 = C41984 + C41985;
    const double C41991 = C41981 + C41982;
    const double C41990 = C41979 + C38058;
    const double C41989 = C41977 + C38057;
    const double C42858 = C42854 + C40497;
    const double C42857 = C42852 + C39204;
    const double C43780 = C43775 + C40498;
    const double C43779 = C43773 + C39203;
    const double C59450 = C59448 + C39205;
    const double C73248 = C73245 + C41987;
    const double C74384 = C74381 + C43777;
    const double C46548 = C46536 + C46537;
    const double C46547 = C46534 + C45729;
    const double C46545 = C46530 + C45727;
    const double C48044 = C48037 + C45730;
    const double C48042 = C48033 + C45732;
    const double C49987 = C49979 + C47319;
    const double C49985 = C49975 + C47317;
    const double C52719 = C52707 + C47324;
    const double C52717 = C52703 + C47326;
    const double C52716 = C52701 + C47321;
    const double C54936 = C54929 + C49034;
    const double C83309 = C83303 + C52712;
    const double C85003 = C84998 + C54932;
    const double C5166 = C5165 + C5139;
    const double C5283 = C5276 + C5277;
    const double C5282 = C5274 + C5275;
    const double C5561 = C5557 + C5558;
    const double C31059 = C8990 + C8991;
    const double C31056 = C8991 + C8990;
    const double C31058 = C8988 + C8989;
    const double C31057 = C8989 + C8988;
    const double C31471 = C9314 + C9315;
    const double C31470 = C9315 + C9314;
    const double C11269 = C11268 + C11242;
    const double C11468 = C11461 + C11462;
    const double C11467 = C11459 + C11460;
    const double C11755 = C11751 + C11752;
    const double C91911 = C91910 - C91908;
    const double C4468 = C4450 * C805;
    const double C4459 = C4450 * C806;
    const double C7091 = C4450 * C809;
    const double C8071 = C4450 * C3410;
    const double C69096 = C4450 * C5819;
    const double C69090 = C4450 * C3409;
    const double C71799 = C4450 * C5818;
    const double C15374 = C15354 * C111;
    const double C15365 = C15354 * C110;
    const double C15359 = C15354 * C109;
    const double C17771 = C15354 * C806;
    const double C17767 = C15354 * C805;
    const double C18744 = C15354 * C1387;
    const double C18740 = C15354 * C1386;
    const double C27632 = C15354 * C1389;
    const double C27628 = C15354 * C1390;
    const double C27622 = C15354 * C1388;
    const double C28760 = C15354 * C3410;
    const double C31190 = C15354 * C3409;
    const double C88617 = C15354 * C11103;
    const double C91246 = C15354 * C5819;
    const double C32210 = C32190 * C111;
    const double C32201 = C32190 * C110;
    const double C32195 = C32190 * C109;
    const double C34606 = C32190 * C806;
    const double C34602 = C32190 * C805;
    const double C35573 = C32190 * C1387;
    const double C35569 = C32190 * C1386;
    const double C42394 = C32190 * C11103;
    const double C42387 = C32190 * C1389;
    const double C42383 = C32190 * C1388;
    const double C44209 = C32190 * C1390;
    const double C45182 = C32190 * C5819;
    const double C45178 = C32190 * C3409;
    const double C54257 = C32190 * C3410;
    const double C4482 = C4471 + C4472;
    const double C4477 = C4456 + C4457;
    const double C7100 = C7093 + C5364;
    const double C8080 = C8073 + C6182;
    const double C69108 = C69098 + C6186;
    const double C69103 = C69088 + C6185;
    const double C71806 = C71797 + C9092;
    const double C4480 = C4465 + C4466;
    const double C4479 = C4462 + C4463;
    const double C69106 = C69094 + C6188;
    const double C69105 = C69092 + C6183;
    const double C15383 = C15371 + C15372;
    const double C15382 = C15368 + C15369;
    const double C15380 = C15362 + C15363;
    const double C17777 = C17769 + C16194;
    const double C17775 = C17765 + C16192;
    const double C18750 = C18742 + C16902;
    const double C18748 = C18738 + C16900;
    const double C27642 = C27630 + C16907;
    const double C27640 = C27626 + C16909;
    const double C27639 = C27624 + C16904;
    const double C31199 = C31192 + C19717;
    const double C88622 = C88615 + C27635;
    const double C91253 = C91248 + C31195;
    const double C32219 = C32207 + C32208;
    const double C32218 = C32204 + C32205;
    const double C32216 = C32198 + C32199;
    const double C34612 = C34604 + C33030;
    const double C34610 = C34600 + C33028;
    const double C35579 = C35571 + C33738;
    const double C35577 = C35567 + C33736;
    const double C42403 = C42391 + C42392;
    const double C42402 = C42389 + C33743;
    const double C42400 = C42385 + C33740;
    const double C44216 = C44211 + C33745;
    const double C45191 = C45184 + C41529;
    const double C45189 = C45180 + C36538;
    const double C46107 = C46092 + C46093;
    const double C46106 = C46089 + C46090;
    const double C59016 = C59004 + C47633;
    const double C59015 = C59002 + C47628;
    const double C37062 =
        ((((0 - (C91760 * C91881) / C91696) * ae) / C91696 - (0 * be) / C91711 +
          C91778 / C91696) /
             C91702 -
         ((C91760 * C91896 + 0) * be) / C91696) /
            C91702 +
        ((C91760 * (C91896 / C91702 -
                    ((C91760 * C91892 + C93818) * be) / C91696 + C91893) +
          C93844) *
         ae) /
            C91696 +
        C91892 / C91702 - ((C91760 * C91893 + C93711) * be) / C91696;
    const double C37063 =
        (C91896 / C91702 - ((C91760 * C91892 + C93818) * be) / C91696 +
         C91893) /
            C91702 +
        ((C91760 *
              (C91892 / C91702 - ((C91760 * C91893 + C93711) * be) / C91696) +
          C93845) *
         ae) /
            C91696 +
        2 * (C91893 / C91702 - (0 * be) / C91696);
    const double C37064 =
        (C91892 / C91702 - ((C91760 * C91893 + C93711) * be) / C91696) /
            C91702 +
        ((C91760 * (C91893 / C91702 - (0 * be) / C91696) + C45718) * ae) /
            C91696;
    const double C45815 =
        C91896 / C91702 - ((C91760 * C91892 + C93818) * be) / C91696 + C91893;
    const double C45816 =
        C91892 / C91702 - ((C91760 * C91893 + C93711) * be) / C91696;
    const double C15131 = C15123 + C15124;
    const double C15485 = C15484 + C15478;
    const double C15654 = C15650 + C15651;
    const double C29567 = C18436 + C18437;
    const double C29564 = C18437 + C18436;
    const double C29566 = C18434 + C18435;
    const double C29565 = C18435 + C18434;
    const double C30369 = C19075 + C19076;
    const double C30368 = C19076 + C19075;
    const double C88360 = C27327 + C27326;
    const double C88361 = C27325 + C27324;
    const double C88850 = C27967 + C27966;
    const double C88538 = C88537 + C88531;
    const double C31967 = C31959 + C31960;
    const double C32321 = C32320 + C32314;
    const double C32490 = C32486 + C32487;
    const double C55074 = C35271 + C35272;
    const double C55071 = C35272 + C35271;
    const double C55073 = C35269 + C35270;
    const double C55072 = C35270 + C35269;
    const double C55876 = C35901 + C35902;
    const double C55875 = C35902 + C35901;
    const double C42114 = C42107 + C42108;
    const double C42113 = C42105 + C42106;
    const double C42306 = C42305 + C42279;
    const double C42674 = C42670 + C42671;
    const double C91982 = C91981 - C91979;
    const double C10318 = C10300 * C1386;
    const double C10309 = C10300 * C1387;
    const double C12897 = C10300 * C3410;
    const double C13914 = C10300 * C1390;
    const double C41875 = C10300 * C5818;
    const double C41869 = C10300 * C3409;
    const double C45625 = C10300 * C5819;
    const double C20890 = C20870 * C111;
    const double C20881 = C20870 * C110;
    const double C20875 = C20870 * C109;
    const double C23323 = C20870 * C806;
    const double C23319 = C20870 * C805;
    const double C24325 = C20870 * C1387;
    const double C24321 = C20870 * C1386;
    const double C27072 = C20870 * C808;
    const double C27068 = C20870 * C809;
    const double C27062 = C20870 * C807;
    const double C30502 = C20870 * C3410;
    const double C31740 = C20870 * C3409;
    const double C58570 = C20870 * C4917;
    const double C62108 = C20870 * C5818;
    const double C62885 = C62865 * C111;
    const double C62876 = C62865 * C110;
    const double C62870 = C62865 * C109;
    const double C65303 = C62865 * C806;
    const double C65299 = C62865 * C805;
    const double C66305 = C62865 * C1387;
    const double C66301 = C62865 * C1386;
    const double C68646 = C62865 * C4917;
    const double C68639 = C62865 * C808;
    const double C68635 = C62865 * C807;
    const double C70353 = C62865 * C809;
    const double C72242 = C62865 * C3409;
    const double C72238 = C62865 * C5818;
    const double C80587 = C62865 * C3410;
    const double C10332 = C10321 + C10322;
    const double C10327 = C10306 + C10307;
    const double C12906 = C12899 + C11019;
    const double C13923 = C13916 + C11926;
    const double C41887 = C41877 + C11023;
    const double C41882 = C41867 + C11022;
    const double C45634 = C45627 + C14910;
    const double C10330 = C10315 + C10316;
    const double C10329 = C10312 + C10313;
    const double C12904 = C12895 + C11017;
    const double C41885 = C41873 + C11025;
    const double C41884 = C41871 + C11020;
    const double C20899 = C20887 + C20888;
    const double C20898 = C20884 + C20885;
    const double C20896 = C20878 + C20879;
    const double C23329 = C23321 + C21584;
    const double C23327 = C23317 + C21582;
    const double C24331 = C24323 + C22367;
    const double C24329 = C24319 + C22365;
    const double C27082 = C27070 + C21589;
    const double C27080 = C27066 + C21591;
    const double C27079 = C27064 + C21586;
    const double C30504 = C30500 + C25235;
    const double C31746 = C31738 + C25233;
    const double C58574 = C58568 + C27075;
    const double C62112 = C62106 + C31743;
    const double C62894 = C62882 + C62883;
    const double C62893 = C62879 + C62880;
    const double C62891 = C62873 + C62874;
    const double C65309 = C65301 + C63578;
    const double C65307 = C65297 + C63576;
    const double C66311 = C66303 + C64361;
    const double C66309 = C66299 + C64359;
    const double C68655 = C68643 + C68644;
    const double C68654 = C68641 + C63583;
    const double C68652 = C68637 + C63580;
    const double C70360 = C70355 + C63585;
    const double C72248 = C72240 + C67213;
    const double C72246 = C72236 + C69435;
    const double C80589 = C80585 + C67215;
    const double C82535 = C82520 + C82521;
    const double C82534 = C82517 + C82518;
    const double C84889 = C84880 + C83216;
    const double C88197 = C88185 + C83224;
    const double C88196 = C88183 + C83219;
    const double C72412 =
        ((((0 - (C91763 * C91952) / C91696) * ae) / C91696 - (0 * be) / C91711 +
          C91804 / C91696) /
             C91702 -
         ((C91763 * C91967 + 0) * be) / C91696) /
            C91702 +
        ((C91763 * (C91967 / C91702 -
                    ((C91763 * C91963 + C93819) * be) / C91696 + C91964) +
          C93846) *
         ae) /
            C91696 +
        C91963 / C91702 - ((C91763 * C91964 + C93737) * be) / C91696;
    const double C72413 =
        (C91967 / C91702 - ((C91763 * C91963 + C93819) * be) / C91696 +
         C91964) /
            C91702 +
        ((C91763 *
              (C91963 / C91702 - ((C91763 * C91964 + C93737) * be) / C91696) +
          C93847) *
         ae) /
            C91696 +
        2 * (C91964 / C91702 - (0 * be) / C91696);
    const double C72414 =
        (C91963 / C91702 - ((C91763 * C91964 + C93737) * be) / C91696) /
            C91702 +
        ((C91763 * (C91964 / C91702 - (0 * be) / C91696) + C81840) * ae) /
            C91696;
    const double C81991 =
        C91967 / C91702 - ((C91763 * C91963 + C93819) * be) / C91696 + C91964;
    const double C81992 =
        C91963 / C91702 - ((C91763 * C91964 + C93737) * be) / C91696;
    const double C20388 = C20380 + C20381;
    const double C20631 = C20627 + C20628;
    const double C20795 = C20794 + C20788;
    const double C28485 = C22699 + C22700;
    const double C28482 = C22700 + C22699;
    const double C28484 = C22697 + C22698;
    const double C28483 = C22698 + C22697;
    const double C28899 = C23010 + C23011;
    const double C28898 = C23011 + C23010;
    const double C58081 = C26451 + C26450;
    const double C58082 = C26449 + C26448;
    const double C58417 = C58416 + C58410;
    const double C62383 = C62375 + C62376;
    const double C62626 = C62622 + C62623;
    const double C62790 = C62789 + C62783;
    const double C78612 = C64687 + C64688;
    const double C78609 = C64688 + C64687;
    const double C78611 = C64685 + C64686;
    const double C78610 = C64686 + C64685;
    const double C79004 = C64993 + C64994;
    const double C79003 = C64994 + C64993;
    const double C68150 = C68143 + C68144;
    const double C68149 = C68141 + C68142;
    const double C68485 = C68484 + C68478;
    const double C14484 = C12477 * C93587;
    const double C24838 = C12477 * C93843;
    const double C66818 = C12477 * C31826;
    const double C86372 = C12477 * C93587;
    const double C2073 = C2063 + C2064;
    const double C4211 = C4194 + C4195;
    const double C15126 = C15109 + C15110;
    const double C17440 = C17425 + C17426;
    const double C31962 = C31945 + C31946;
    const double C34275 = C34260 + C34261;
    const double C6985 = C6972 + C6973;
    const double C16111 = C16092 + C16093;
    const double C32947 = C32928 + C32929;
    const double C48392 = C48379 + C48380;
    const double C2873 = C2863 + C2864;
    const double C9805 = C9788 + C9789;
    const double C20383 = C20366 + C20367;
    const double C23674 = C23659 + C23660;
    const double C62378 = C62361 + C62362;
    const double C65654 = C65639 + C65640;
    const double C13705 = C13698 + C13699;
    const double C22213 = C22203 + C22204;
    const double C55744 = C55741 + C55742;
    const double C64207 = C64197 + C64198;
    const double C6862 = C2159 * C93587;
    const double C16001 = C2159 * C14991;
    const double C17548 = C2159 * C93843;
    const double C32837 = C2159 * C31827;
    const double C34383 = C2159 * C31826;
    const double C48270 = C2159 * C93587;
    const double C13139 = C2787 * C93587;
    const double C21780 = C2787 * C14991;
    const double C23556 = C2787 * C93843;
    const double C63774 = C2787 * C31827;
    const double C65536 = C2787 * C31826;
    const double C85109 = C2787 * C93587;
    const double C31607 = C31604 + C31605;
    const double C45521 = C45514 + C45515;
    const double C59267 = C59257 + C59258;
    const double C69357 = C69347 + C69348;
    const double C72136 = C72131 + C72132;
    const double C58323 = C26767 + C26766;
    const double C45074 = C40056 * C93711;
    const double C58917 = C40056 * C45718;
    const double C61572 = C40056 * C93845;
    const double C69007 = C40056 * C4079;
    const double C71696 = C40056 * C4078;
    const double C91143 = C40056 * C93711;
    const double C68397 = C68393 + C68394;
    const double C92076 = ae * C92075;
    const double C118 =
        (3 * C92043 + C92009 * C92075 + (2 * C92032 + C92009 * C92060) * ae) /
        C91696;
    const double C812 = (C92124 * C92075) / C91696;
    const double C1393 = (C92167 * C92075) / C91696;
    const double C17312 = C14991 * C820;
    const double C34147 = C31827 * C820;
    const double C4193 = C4079 * C900;
    const double C17424 = C93711 * C900;
    const double C34259 = C93711 * C900;
    const double C45832 = C45718 * C900;
    const double C6981 = C93587 * C1024;
    const double C16095 = C14991 * C1024;
    const double C32931 = C31827 * C1024;
    const double C48388 = C93587 * C1024;
    const double C18537 = C93673 * C3571;
    const double C22678 = C93737 * C3571;
    const double C64666 = C93737 * C3571;
    const double C19919 = C14991 * C3855;
    const double C29033 = C93587 * C3855;
    const double C36740 = C31827 * C3855;
    const double C54528 = C93587 * C3855;
    const double C28205 = C28202 + C7638;
    const double C19291 = C19282 + C16592;
    const double C18430 = C18414 + C18415;
    const double C19615 = C19606 + C19607;
    const double C22577 = C22573 + C22574;
    const double C28625 = C28618 + C28619;
    const double C36112 = C36103 + C33428;
    const double C35265 = C35249 + C35250;
    const double C36436 = C36427 + C36428;
    const double C53706 = C53703 + C49036;
    const double C54122 = C54115 + C54116;
    const double C23442 = C14991 * C1401;
    const double C65422 = C31827 * C1401;
    const double C9787 = C9603 * C1547;
    const double C23658 = C93737 * C1547;
    const double C65638 = C93737 * C1547;
    const double C82008 = C81840 * C1547;
    const double C13703 = C93587 * C1787;
    const double C22206 = C14991 * C1787;
    const double C64200 = C31827 * C1787;
    const double C85650 = C93587 * C1787;
    const double C19601 = C14991 * C3641;
    const double C28623 = C93587 * C3641;
    const double C36422 = C31827 * C3641;
    const double C54120 = C93587 * C3641;
    const double C6866 = C4300 * C93587;
    const double C16002 = C4300 * C14991;
    const double C32838 = C4300 * C31827;
    const double C48274 = C4300 * C93587;
    const double C13143 = C9695 * C93587;
    const double C21781 = C9695 * C14991;
    const double C63775 = C9695 * C31827;
    const double C85113 = C9695 * C93587;
    const double C43478 = C43476 * C9603;
    const double C89628 = C43476 * C81840;
    const double C8848 = C7867 * C93587;
    const double C50193 = C7867 * C93587;
    const double C60058 = C60057 * C93737;
    const double C70156 = C60057 * C93737;
    const double C44102 = C43170 * C93711;
    const double C90224 = C43170 * C93711;
    const double C7087 =
        (2 * (2 * ae * C92146 + C92124 * C92249) + C92835 + C92835 +
         C92124 * (C92249 + C92832 + C92832 +
                   C92124 * (2 * ae * C92160 +
                             C92124 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C8394 =
        (C92835 +
         C92167 * (C92302 + ae * C92124 * C92203 +
                   C92124 * (ae * C92203 +
                             C92124 * (C92300 + std::pow(C92015, 7) * bs[7] *
                                                    C92291 * C92013)))) /
        C91701;
    const double C7097 = C4178 * C6738;
    const double C16203 = C15093 * C6738;
    const double C33039 = C31929 * C6738;
    const double C37232 = C37065 * C6738;
    const double C48503 = C45817 * C6738;
    const double C8077 = C4178 * C7738;
    const double C19721 = C15093 * C7738;
    const double C21285 = C188 * C7738;
    const double C36542 = C31929 * C7738;
    const double C49457 = C45817 * C7738;
    const double C13910 =
        (2 * (2 * ae * C92189 + C92167 * C92323) + C93039 + C93039 +
         C92167 * (C92323 + C93036 + C93036 +
                   C92167 * (2 * ae * C92203 +
                             C92167 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92013)))) /
        C91701;
    const double C13920 = C9772 * C13241;
    const double C22376 = C20350 * C13241;
    const double C64370 = C62345 * C13241;
    const double C72732 = C72415 * C13241;
    const double C85863 = C81993 * C13241;
    const double C92703 = C92702 + C92695;
    const double C9090 =
        (2 * (2 * ae * C92167 * C92148 + C92124 * C92870) + C92873 + C92873 +
         C92124 * (C92870 + C92874 + C92874 +
                   C92124 * (2 * ae * C92167 * C92686 +
                             C92124 * C92167 * C92009 *
                                 (C92081 * C92082 +
                                  C92232 * bs[7] * std::pow(C92015, 7)) *
                                 C92016))) /
        C91701;
    const double C93000 = C92999 + C92993;
    const double C14908 =
        (2 * (2 * ae * C92715 + C92167 * C93073) + C93083 + C93083 +
         C92167 * (C93073 + C93080 + C93080 +
                   C92167 * (2 * ae * C93074 +
                             C92167 * C92124 * C92009 *
                                 (C92081 * C92082 +
                                  C92306 * bs[7] * std::pow(C92015, 7)) *
                                 C92016))) /
        C91701;
    const double C14915 = C9772 * C14266;
    const double C28069 = C20350 * C14266;
    const double C74314 = C72415 * C14266;
    const double C78218 = C62345 * C14266;
    const double C86772 = C81993 * C14266;
    const double C92118 = ae * C92116;
    const double C92117 = C92009 * C92116;
    const double C92531 = C92124 * C92116;
    const double C92552 = C92167 * C92116;
    const double C819 = (C92075 + C92116 * C92232) / C91696;
    const double C1400 = (C92075 + C92116 * C92306) / C91696;
    const double C827 =
        (2 * (2 * ae * (C92034 + C92058 * C92232) + C92009 * C92345) + C92348 +
         C92348 +
         C92009 * (C92345 + C92349 + C92349 +
                   C92009 * (2 * ae * (C92058 + C92094 * C92232) +
                             C92009 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C6739 =
        (2 * (C92073 + C92124 * C92163) + C92348 +
         C92124 * (C92163 + C92537 +
                   C92124 * (C92114 +
                             C92124 * (C92153 + ae * C92686 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C6964 =
        (2 * (C92073 + C92124 * C92228) + C92348 +
         C92124 * (C92228 + C92537 +
                   C92124 * (C92114 +
                             C92124 * (C92224 + ae * C92686 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C7857 =
        (C92348 + C92167 * (C92206 + (C92196 + ae * C92717 +
                                      C92009 * (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171)) *
                                         C92232)) /
        C91701;
    const double C8295 =
        (C92348 + C92167 * (C92286 + (C92282 + ae * C92717 +
                                      C92009 * (ae * C92198 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270)) *
                                         C92232)) /
        C91701;
    const double C6628 = C4083 * C6616;
    const double C15829 = C14999 * C6616;
    const double C32665 = C31835 * C6616;
    const double C37012 = C36999 * C6616;
    const double C48040 = C91722 * C6616;
    const double C7640 = C4083 * C7632;
    const double C19290 = C14999 * C7632;
    const double C36111 = C31835 * C7632;
    const double C49038 = C91722 * C7632;
    const double C57259 = C36999 * C7632;
    const double C1408 =
        (2 * (2 * ae * (C92034 + C92058 * C92306) + C92009 * C92447) + C92450 +
         C92450 +
         C92009 * (C92447 + C92451 + C92451 +
                   C92009 * (2 * ae * (C92058 + C92094 * C92306) +
                             C92009 * (C92101 +
                                       (C92081 * C92082 +
                                        C92013 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C12366 =
        (C92450 + C92124 * (C92228 + (C92224 + ae * C92686 +
                                      C92009 * (ae * C92155 +
                                                C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212)) *
                                         C92306)) /
        C91701;
    const double C13242 =
        (2 * (C92073 + C92167 * C92206) + C92450 +
         C92167 * (C92206 + C92558 +
                   C92167 * (C92114 +
                             C92167 * (C92196 + ae * C92717 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C13694 =
        (2 * (C92073 + C92167 * C92286) + C92450 +
         C92167 * (C92286 + C92558 +
                   C92167 * (C92114 +
                             C92167 * (C92282 + ae * C92717 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C13023 = C4083 * C13011;
    const double C21682 = C14999 * C13011;
    const double C63676 = C31835 * C13011;
    const double C72312 = C36999 * C13011;
    const double C85001 = C91722 * C13011;
    const double C3420 =
        (2 * (2 * ae * C92167 * C92529 + C92009 * C92576) + C92579 + C92579 +
         C92009 * (C92576 + C92580 + C92580 +
                   C92009 * (2 * ae * C92167 * C92124 * C92094 +
                             C92009 * C92167 * C92124 *
                                 (C92081 * C92082 +
                                  C92013 * bs[7] * std::pow(C92015, 7)) *
                                 C92016))) /
        C91701;
    const double C7968 =
        (C92167 * C92228 + C92579 +
         C92124 * (C92558 +
                   C92124 * C92167 *
                       (C92224 + ae * C92686 +
                        C92009 * (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212)))) /
        C91701;
    const double C12249 =
        (C92124 * C92206 + C92579 +
         C92167 * (C92537 +
                   C92167 * C92124 *
                       (C92196 + ae * C92717 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171)))) /
        C91701;
    const double C12683 =
        (C92124 * C92286 + C92579 +
         C92167 * (C92537 +
                   C92167 * C92124 *
                       (C92282 + ae * C92717 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270)))) /
        C91701;
    const double C93135 = ae * C93133;
    const double C93134 = C92124 * C93133;
    const double C93202 = C92167 * C93133;
    const double C38266 =
        (2 * (2 * ae * C92919 + C92124 * C93173) + C93176 + C93176 +
         C92124 * (C93173 + C93177 + C93177 +
                   C92124 * (2 * ae * (C92142 + C92155 * C92306) +
                             C92124 * (C92247 +
                                       (C92081 * C92082 +
                                        C92232 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92306)))) /
        C91701;
    const double C45510 =
        (2 * (C92678 + C92167 * C93159) + C93176 +
         C92167 * (C93159 + C93207 +
                   C92167 * (C93131 +
                             C92167 * (C92300 + ae * C93244 +
                                       C92124 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C45187 = C31929 * C44827;
    const double C59012 = C45817 * C44827;
    const double C69102 = C4178 * C44827;
    const double C72983 = C188 * C44827;
    const double C91251 = C15093 * C44827;
    const double C93346 = ae * C93344;
    const double C93345 = C92167 * C93344;
    const double C45621 =
        (2 * (2 * ae * C92713 + C92167 * C93162) + C93284 + C93284 +
         C92167 * (C93162 + C93281 + C93281 +
                   C92167 * (2 * ae * C93146 +
                             C92167 * (C92321 +
                                       (C92081 * C92082 +
                                        C92306 * bs[7] * std::pow(C92015, 7)) *
                                           C92016 * C92232)))) /
        C91701;
    const double C45631 = C9772 * C44951;
    const double C59346 = C20350 * C44951;
    const double C69440 = C62345 * C44951;
    const double C73191 = C72415 * C44951;
    const double C91679 = C81993 * C44951;
    const double C93261 = C93260 + C93253;
    const double C23218 = C23217 * C93737;
    const double C65191 = C23217 * C93737;
    const double C22901 = C22900 + C22898;
    const double C7090 = C4079 * C5357;
    const double C48496 = C45718 * C5357;
    const double C8397 = C4079 * C6425;
    const double C29167 = C93711 * C6425;
    const double C49768 = C45718 * C6425;
    const double C54662 = C93711 * C6425;
    const double C5278 = C5262 + C5263;
    const double C7098 = C7089 + C5362;
    const double C5462 = C5456 + C5457;
    const double C6756 = C6747 + C6748;
    const double C38787 = C38780 + C38781;
    const double C46833 = C46817 + C46818;
    const double C48504 = C48495 + C46913;
    const double C48166 = C48157 + C48158;
    const double C8078 = C8069 + C6180;
    const double C7756 = C7747 + C7748;
    const double C8194 = C8186 + C8187;
    const double C8984 = C8968 + C8969;
    const double C28762 = C28758 + C19719;
    const double C26764 = C26754 + C26755;
    const double C28350 = C28344 + C28345;
    const double C54259 = C54255 + C36540;
    const double C49458 = C49449 + C47625;
    const double C49152 = C49143 + C49144;
    const double C50315 = C50299 + C50300;
    const double C53851 = C53845 + C53846;
    const double C59753 = C59750 + C59751;
    const double C70050 = C70047 + C70048;
    const double C12794 = C12792 * C9603;
    const double C84776 = C12792 * C81840;
    const double C14487 = C12476 * C93587;
    const double C86374 = C12476 * C93587;
    const double C45523 = C45518 + C45519;
    const double C59268 = C59259 + C59260;
    const double C69358 = C69349 + C69350;
    const double C91572 = C91569 + C91570;
    const double C92681 = ae * C92680;
    const double C5040 =
        (3 * C92659 + C92124 * C92680 + (2 * C92653 + C92124 * C92671) * ae) /
        C91696;
    const double C8741 = (C92167 * C92680) / C91696;
    const double C38111 = (C92680 + C93133 * C92306) / C91696;
    const double C61678 = C45718 * C9089;
    const double C71802 = C4079 * C9089;
    const double C45078 = C41453 * C93711;
    const double C58918 = C41453 * C45718;
    const double C69008 = C41453 * C4079;
    const double C91147 = C41453 * C93711;
    const double C75298 = C75297 + C75294;
    const double C18868 = C18867 * C93711;
    const double C35687 = C18867 * C93711;
    const double C13913 = C9603 * C11919;
    const double C85856 = C81840 * C11919;
    const double C11753 = C11745 + C11746;
    const double C11844 = C11838 + C11839;
    const double C13921 = C13912 + C11924;
    const double C13259 = C13250 + C13251;
    const double C74806 = C74804 + C74805;
    const double C83803 = C83799 + C83800;
    const double C85864 = C85855 + C83953;
    const double C85227 = C85218 + C85219;
    const double C92980 = ae * C92979;
    const double C11346 =
        (3 * C92958 + C92167 * C92979 + (2 * C92952 + C92167 * C92970) * ae) /
        C91696;
    const double C45624 = C9603 * C14907;
    const double C91672 = C81840 * C14907;
    const double C45632 = C45623 + C14912;
    const double C42579 = C42573 + C42574;
    const double C42672 = C42664 + C42665;
    const double C44969 = C44960 + C44961;
    const double C75500 = C75498 + C75499;
    const double C91680 = C91671 + C86769;
    const double C88855 = C88851 + C88852;
    const double C91039 = C91030 + C91031;
    const double C46724 = C46716 + C46717;
    const double C46836 = C46823 + C46824;
    const double C46834 = C46819 + C46820;
    const double C46831 = C46813 + C46814;
    const double C46829 = C46809 + C46810;
    const double C46827 = C46805 + C46806;
    const double C46825 = C46801 + C46802;
    const double C47091 = C47084 + C47085;
    const double C47088 = C47078 + C47079;
    const double C47086 = C47073 + C47074;
    const double C48395 = C48385 + C48386;
    const double C48393 = C48381 + C48382;
    const double C48391 = C48377 + C48378;
    const double C48389 = C48373 + C48374;
    const double C48725 = C48719 + C48720;
    const double C48723 = C48715 + C48716;
    const double C50322 = C50313 + C50314;
    const double C50320 = C50309 + C50310;
    const double C50318 = C50305 + C50306;
    const double C50316 = C50301 + C50302;
    const double C50634 = C50629 + C50630;
    const double C50632 = C50625 + C50626;
    const double C53062 = C53049 + C53050;
    const double C53060 = C53045 + C53046;
    const double C53058 = C53041 + C53042;
    const double C53056 = C53037 + C53038;
    const double C53053 = C53031 + C53032;
    const double C53051 = C53027 + C53028;
    const double C53374 = C53367 + C53368;
    const double C53372 = C53363 + C53364;
    const double C53369 = C53357 + C53358;
    const double C54123 = C54117 + C54118;
    const double C54121 = C54113 + C54114;
    const double C54529 = C54525 + C54526;
    const double C55345 = C55339 + C55340;
    const double C55343 = C55335 + C55336;
    const double C55743 = C55739 + C55740;
    const double C83401 = C83393 + C83394;
    const double C83567 = C83560 + C83561;
    const double C83565 = C83556 + C83557;
    const double C83804 = C83801 + C83802;
    const double C85338 = C85332 + C85333;
    const double C85336 = C85328 + C85329;
    const double C85651 = C85647 + C85648;
    const double C135 = C101 * C116;
    const double C134 = C101 * C115;
    const double C127 = C101 * C114;
    const double C833 = C101 * C816;
    const double C832 = C101 * C815;
    const double C1414 = C101 * C1397;
    const double C1413 = C101 * C1396;
    const double C1987 = C101 * C814;
    const double C2701 = C101 * C1395;
    const double C3422 = C101 * C3413;
    const double C136 = C103 * C117;
    const double C133 = C103 * C116;
    const double C128 = C103 * C115;
    const double C834 = C103 * C817;
    const double C831 = C103 * C814;
    const double C1415 = C103 * C1398;
    const double C1412 = C103 * C1395;
    const double C1988 = C103 * C813;
    const double C2702 = C103 * C1394;
    const double C3423 = C103 * C3414;
    const double C132 = C105 * C117;
    const double C129 = C105 * C116;
    const double C835 = C105 * C818;
    const double C830 = C105 * C813;
    const double C1416 = C105 * C1399;
    const double C1411 = C105 * C1394;
    const double C3424 = C105 * C3415;
    const double C15016 = C14995 * C813;
    const double C15013 = C14995 * C116;
    const double C15012 = C14995 * C115;
    const double C15009 = C14995 * C814;
    const double C15004 = C14995 * C815;
    const double C15001 = C14995 * C114;
    const double C15827 = C14995 * C4921;
    const double C15825 = C14995 * C816;
    const double C16007 = C5151 * C14995;
    const double C15996 = C5149 * C14995;
    const double C16104 = C14995 * C808;
    const double C16098 = C14995 * C890;
    const double C16088 = C14995 * C889;
    const double C16082 = C14995 * C807;
    const double C16362 = C14995 * C956;
    const double C16352 = C14995 * C955;
    const double C16601 = C14995 * C5825;
    const double C16598 = C14995 * C1397;
    const double C16597 = C14995 * C1396;
    const double C16594 = C14995 * C3413;
    const double C17313 = C14995 * C817;
    const double C17545 = C2162 * C14995;
    const double C17655 = C14995 * C888;
    const double C17649 = C14995 * C806;
    const double C17991 = C14995 * C954;
    const double C18313 = C14995 * C3414;
    const double C18310 = C14995 * C1395;
    const double C19288 = C14995 * C5824;
    const double C19501 = C8863 * C14995;
    const double C19610 = C14995 * C3409;
    const double C19604 = C14995 * C3491;
    const double C19922 = C14995 * C3565;
    const double C20199 = C14995 * C1394;
    const double C21680 = C14995 * C11107;
    const double C21786 = C11254 * C14995;
    const double C21775 = C11252 * C14995;
    const double C21957 = C14995 * C1389;
    const double C21951 = C14995 * C1471;
    const double C21941 = C14995 * C1470;
    const double C21935 = C14995 * C1388;
    const double C22209 = C14995 * C1537;
    const double C22199 = C14995 * C1536;
    const double C23443 = C14995 * C1398;
    const double C23553 = C2790 * C14995;
    const double C23785 = C14995 * C1469;
    const double C23779 = C14995 * C1387;
    const double C24106 = C14995 * C1535;
    const double C24537 = C14160 * C14995;
    const double C15014 = C14997 * C117;
    const double C15011 = C14997 * C116;
    const double C15008 = C14997 * C813;
    const double C15005 = C14997 * C814;
    const double C15002 = C14997 * C115;
    const double C15828 = C14997 * C4920;
    const double C15822 = C14997 * C817;
    const double C16005 = C4298 * C14997;
    const double C15998 = C2162 * C14997;
    const double C16102 = C14997 * C809;
    const double C16096 = C14997 * C891;
    const double C16090 = C14997 * C888;
    const double C16084 = C14997 * C806;
    const double C16360 = C14997 * C957;
    const double C16354 = C14997 * C954;
    const double C16602 = C14997 * C5826;
    const double C16599 = C14997 * C1398;
    const double C16596 = C14997 * C1395;
    const double C16593 = C14997 * C3414;
    const double C17314 = C14997 * C818;
    const double C17547 = C2160 * C14997;
    const double C17657 = C14997 * C887;
    const double C17651 = C14997 * C805;
    const double C17993 = C14997 * C953;
    const double C18314 = C14997 * C3415;
    const double C18311 = C14997 * C1394;
    const double C19289 = C14997 * C5823;
    const double C19499 = C7870 * C14997;
    const double C19608 = C14997 * C3410;
    const double C19602 = C14997 * C3492;
    const double C19920 = C14997 * C3566;
    const double C21681 = C14997 * C11106;
    const double C21784 = C9693 * C14997;
    const double C21777 = C2790 * C14997;
    const double C21955 = C14997 * C1390;
    const double C21949 = C14997 * C1472;
    const double C21943 = C14997 * C1469;
    const double C21937 = C14997 * C1387;
    const double C22207 = C14997 * C1538;
    const double C22201 = C14997 * C1535;
    const double C23444 = C14997 * C1399;
    const double C23555 = C2788 * C14997;
    const double C23787 = C14997 * C1468;
    const double C23781 = C14997 * C1386;
    const double C24108 = C14997 * C1534;
    const double C24539 = C12150 * C14997;
    const double C31852 = C31831 * C813;
    const double C31849 = C31831 * C116;
    const double C31848 = C31831 * C115;
    const double C31845 = C31831 * C814;
    const double C31840 = C31831 * C815;
    const double C31837 = C31831 * C114;
    const double C32663 = C31831 * C4921;
    const double C32661 = C31831 * C816;
    const double C32843 = C5151 * C31831;
    const double C32832 = C5149 * C31831;
    const double C32940 = C31831 * C808;
    const double C32934 = C31831 * C890;
    const double C32924 = C31831 * C889;
    const double C32918 = C31831 * C807;
    const double C33198 = C31831 * C956;
    const double C33188 = C31831 * C955;
    const double C33437 = C31831 * C5825;
    const double C33434 = C31831 * C1397;
    const double C33433 = C31831 * C1396;
    const double C33430 = C31831 * C3413;
    const double C34148 = C31831 * C817;
    const double C34380 = C2162 * C31831;
    const double C34490 = C31831 * C888;
    const double C34484 = C31831 * C806;
    const double C34826 = C31831 * C954;
    const double C35148 = C31831 * C3414;
    const double C35145 = C31831 * C1395;
    const double C36109 = C31831 * C5824;
    const double C36322 = C8863 * C31831;
    const double C36431 = C31831 * C3409;
    const double C36425 = C31831 * C3491;
    const double C36743 = C31831 * C3565;
    const double C62194 = C31831 * C1394;
    const double C63674 = C31831 * C11107;
    const double C63780 = C11254 * C31831;
    const double C63769 = C11252 * C31831;
    const double C63951 = C31831 * C1389;
    const double C63945 = C31831 * C1471;
    const double C63935 = C31831 * C1470;
    const double C63929 = C31831 * C1388;
    const double C64203 = C31831 * C1537;
    const double C64193 = C31831 * C1536;
    const double C65423 = C31831 * C1398;
    const double C65533 = C2790 * C31831;
    const double C65765 = C31831 * C1469;
    const double C65759 = C31831 * C1387;
    const double C66086 = C31831 * C1535;
    const double C66517 = C14160 * C31831;
    const double C31850 = C31833 * C117;
    const double C31847 = C31833 * C116;
    const double C31844 = C31833 * C813;
    const double C31841 = C31833 * C814;
    const double C31838 = C31833 * C115;
    const double C32664 = C31833 * C4920;
    const double C32658 = C31833 * C817;
    const double C32841 = C4298 * C31833;
    const double C32834 = C2162 * C31833;
    const double C32938 = C31833 * C809;
    const double C32932 = C31833 * C891;
    const double C32926 = C31833 * C888;
    const double C32920 = C31833 * C806;
    const double C33196 = C31833 * C957;
    const double C33190 = C31833 * C954;
    const double C33438 = C31833 * C5826;
    const double C33435 = C31833 * C1398;
    const double C33432 = C31833 * C1395;
    const double C33429 = C31833 * C3414;
    const double C34149 = C31833 * C818;
    const double C34382 = C2160 * C31833;
    const double C34492 = C31833 * C887;
    const double C34486 = C31833 * C805;
    const double C34828 = C31833 * C953;
    const double C35149 = C31833 * C3415;
    const double C35146 = C31833 * C1394;
    const double C36110 = C31833 * C5823;
    const double C36320 = C7870 * C31833;
    const double C36429 = C31833 * C3410;
    const double C36423 = C31833 * C3492;
    const double C36741 = C31833 * C3566;
    const double C63675 = C31833 * C11106;
    const double C63778 = C9693 * C31833;
    const double C63771 = C2790 * C31833;
    const double C63949 = C31833 * C1390;
    const double C63943 = C31833 * C1472;
    const double C63937 = C31833 * C1469;
    const double C63931 = C31833 * C1387;
    const double C64201 = C31833 * C1538;
    const double C64195 = C31833 * C1535;
    const double C65424 = C31833 * C1399;
    const double C65535 = C2788 * C31833;
    const double C65767 = C31833 * C1468;
    const double C65761 = C31833 * C1386;
    const double C66088 = C31833 * C1534;
    const double C66519 = C12150 * C31833;
    const double C91734 = C91733 * ae;
    const double C4080 = -(C91733 * be) / C91696;
    const double C4955 = C4949 + C4938;
    const double C4954 = C4948 + C4090;
    const double C4952 = C4946 + C4088;
    const double C6636 = C6632 + C4091;
    const double C6634 = C6630 + C4093;
    const double C8638 = C8634 + C5838;
    const double C8636 = C8632 + C5836;
    const double C11141 = C11135 + C11124;
    const double C11140 = C11134 + C5843;
    const double C11138 = C11132 + C5840;
    const double C13031 = C13027 + C9605;
    const double C13029 = C13025 + C7636;
    const double C14043 = C14041 + C5845;
    const double C15839 = C15833 + C15819;
    const double C15838 = C15832 + C15006;
    const double C21692 = C21686 + C16600;
    const double C21691 = C21685 + C16595;
    const double C32675 = C32669 + C32655;
    const double C32674 = C32668 + C31842;
    const double C63686 = C63680 + C33436;
    const double C63685 = C63679 + C33431;
    const double C37503 = C37499 + C37493;
    const double C37502 = C37498 + C37004;
    const double C37501 = C37497 + C37003;
    const double C37500 = C37496 + C37002;
    const double C38559 = C38556 + C37005;
    const double C38558 = C38555 + C37006;
    const double C38557 = C38554 + C37007;
    const double C39820 = C39817 + C38056;
    const double C39819 = C39816 + C38055;
    const double C39818 = C39815 + C38054;
    const double C41180 = C41178 + C38060;
    const double C41179 = C41177 + C38059;
    const double C41996 = C41992 + C41985;
    const double C41995 = C41991 + C41982;
    const double C41994 = C41990 + C38058;
    const double C41993 = C41989 + C38057;
    const double C42860 = C42858 + C40497;
    const double C42859 = C42857 + C39204;
    const double C43782 = C43780 + C40498;
    const double C43781 = C43779 + C39203;
    const double C59451 = C59450 + C39205;
    const double C73249 = C73248 + C41987;
    const double C74385 = C74384 + C43777;
    const double C46554 = C46548 + C46537;
    const double C46553 = C46547 + C45729;
    const double C46551 = C46545 + C45727;
    const double C48048 = C48044 + C45730;
    const double C48046 = C48042 + C45732;
    const double C49991 = C49987 + C47319;
    const double C49989 = C49985 + C47317;
    const double C52725 = C52719 + C47324;
    const double C52723 = C52717 + C47326;
    const double C52722 = C52716 + C47321;
    const double C54938 = C54936 + C49034;
    const double C83311 = C83309 + C52712;
    const double C85005 = C85003 + C54932;
    const double C5167 = C5166 + C5140;
    const double C5546 = C5282 * C275;
    const double C5562 = C5561 * C93673;
    const double C11270 = C11269 + C11243;
    const double C11470 = C11468 * C93662;
    const double C11469 = C11467 * C188;
    const double C91912 = C91911 * ae;
    const double C4481 = C4468 + C4469;
    const double C4478 = C4459 + C4460;
    const double C7099 = C7091 + C5363;
    const double C8079 = C8071 + C6181;
    const double C69107 = C69096 + C6187;
    const double C69104 = C69090 + C6184;
    const double C71807 = C71799 + C9093;
    const double C15384 = C15374 + C15375;
    const double C15381 = C15365 + C15366;
    const double C15379 = C15359 + C15360;
    const double C17778 = C17771 + C16195;
    const double C17776 = C17767 + C16193;
    const double C18751 = C18744 + C16903;
    const double C18749 = C18740 + C16901;
    const double C27643 = C27632 + C16906;
    const double C27641 = C27628 + C16908;
    const double C27638 = C27622 + C16905;
    const double C28763 = C28760 + C19718;
    const double C31198 = C31190 + C19716;
    const double C88623 = C88617 + C27634;
    const double C91252 = C91246 + C31194;
    const double C32220 = C32210 + C32211;
    const double C32217 = C32201 + C32202;
    const double C32215 = C32195 + C32196;
    const double C34613 = C34606 + C33031;
    const double C34611 = C34602 + C33029;
    const double C35580 = C35573 + C33739;
    const double C35578 = C35569 + C33737;
    const double C42404 = C42394 + C42395;
    const double C42401 = C42387 + C33742;
    const double C42399 = C42383 + C33741;
    const double C44215 = C44209 + C33744;
    const double C45190 = C45182 + C41530;
    const double C45188 = C45178 + C36537;
    const double C54260 = C54257 + C36539;
    const double C4488 = C4482 + C4472;
    const double C4483 = C4477 + C4457;
    const double C7103 = C7100 + C5364;
    const double C8083 = C8080 + C6182;
    const double C69114 = C69108 + C6186;
    const double C69109 = C69103 + C6185;
    const double C71809 = C71806 + C9092;
    const double C4486 = C4480 + C4466;
    const double C4485 = C4479 + C4463;
    const double C69112 = C69106 + C6188;
    const double C69111 = C69105 + C6183;
    const double C15389 = C15383 + C15372;
    const double C15388 = C15382 + C15369;
    const double C15386 = C15380 + C15363;
    const double C17781 = C17777 + C16194;
    const double C17779 = C17775 + C16192;
    const double C18754 = C18750 + C16902;
    const double C18752 = C18748 + C16900;
    const double C27648 = C27642 + C16907;
    const double C27646 = C27640 + C16909;
    const double C27645 = C27639 + C16904;
    const double C31201 = C31199 + C19717;
    const double C88624 = C88622 + C27635;
    const double C91255 = C91253 + C31195;
    const double C32225 = C32219 + C32208;
    const double C32224 = C32218 + C32205;
    const double C32222 = C32216 + C32199;
    const double C34616 = C34612 + C33030;
    const double C34614 = C34610 + C33028;
    const double C35583 = C35579 + C33738;
    const double C35581 = C35577 + C33736;
    const double C42409 = C42403 + C42392;
    const double C42408 = C42402 + C33743;
    const double C42406 = C42400 + C33740;
    const double C44218 = C44216 + C33745;
    const double C45195 = C45191 + C41529;
    const double C45193 = C45189 + C36538;
    const double C46113 = C46107 + C46093;
    const double C46112 = C46106 + C46090;
    const double C59022 = C59016 + C47633;
    const double C59021 = C59015 + C47628;
    const double C37229 = C37062 * C191;
    const double C37228 = C37062 * C190;
    const double C37221 = C37062 * C189;
    const double C37762 = C37062 * C890;
    const double C37761 = C37062 * C889;
    const double C38272 = C37062 * C1471;
    const double C38271 = C37062 * C1470;
    const double C38854 = C37062 * C888;
    const double C39471 = C37062 * C1469;
    const double C40127 = C37062 * C3491;
    const double C37230 = C37063 * C887;
    const double C37227 = C37063 * C888;
    const double C37222 = C37063 * C889;
    const double C37763 = C37063 * C5039;
    const double C37760 = C37063 * C890;
    const double C38273 = C37063 * C5923;
    const double C38270 = C37063 * C3491;
    const double C38855 = C37063 * C891;
    const double C39472 = C37063 * C3492;
    const double C40128 = C37063 * C5922;
    const double C37231 = C37064 * C892;
    const double C37226 = C37064 * C891;
    const double C37223 = C37064 * C890;
    const double C37759 = C37064 * C5039;
    const double C38274 = C37064 * C5924;
    const double C38269 = C37064 * C5922;
    const double C38856 = C37064 * C5038;
    const double C39473 = C37064 * C5921;
    const double C45841 = C45815 * C110;
    const double C45835 = C45815 * C116;
    const double C45825 = C45815 * C115;
    const double C45819 = C45815 * C109;
    const double C46101 = C45815 * C192;
    const double C46099 = C45815 * C191;
    const double C46084 = C45815 * C190;
    const double C46080 = C45815 * C189;
    const double C46207 = C307 * C45815;
    const double C46196 = C305 * C45815;
    const double C46366 = C45815 * C278;
    const double C46356 = C45815 * C277;
    const double C46922 = C45815 * C891;
    const double C46919 = C45815 * C890;
    const double C46918 = C45815 * C889;
    const double C46915 = C45815 * C888;
    const double C47634 = C45815 * C1472;
    const double C47631 = C45815 * C1471;
    const double C47630 = C45815 * C1470;
    const double C47627 = C45815 * C1469;
    const double C48161 = C45815 * C806;
    const double C48155 = C45815 * C814;
    const double C48501 = C45815 * C887;
    const double C48616 = C2162 * C45815;
    const double C48829 = C45815 * C954;
    const double C49147 = C45815 * C1387;
    const double C49141 = C45815 * C1395;
    const double C49455 = C45815 * C1468;
    const double C49570 = C2876 * C45815;
    const double C49771 = C45815 * C1535;
    const double C50424 = C45815 * C3492;
    const double C50421 = C45815 * C3491;
    const double C58246 = C45815 * C5922;
    const double C58750 = C45815 * C1389;
    const double C58744 = C45815 * C1397;
    const double C58734 = C45815 * C1396;
    const double C58728 = C45815 * C1388;
    const double C58923 = C42291 * C45815;
    const double C58912 = C42289 * C45815;
    const double C59010 = C45815 * C11224;
    const double C59263 = C45815 * C1537;
    const double C59253 = C45815 * C1536;
    const double C60647 = C44103 * C45815;
    const double C61349 = C45815 * C3413;
    const double C61343 = C45815 * C3409;
    const double C61569 = C40059 * C45815;
    const double C61679 = C45815 * C5923;
    const double C61999 = C45815 * C3565;
    const double C45839 = C45816 * C805;
    const double C45833 = C45816 * C813;
    const double C45827 = C45816 * C814;
    const double C45821 = C45816 * C806;
    const double C46102 = C45816 * C886;
    const double C46096 = C45816 * C887;
    const double C46087 = C45816 * C888;
    const double C46081 = C45816 * C889;
    const double C46205 = C2160 * C45816;
    const double C46198 = C2162 * C45816;
    const double C46364 = C45816 * C953;
    const double C46358 = C45816 * C954;
    const double C46923 = C45816 * C5038;
    const double C46920 = C45816 * C5039;
    const double C46917 = C45816 * C890;
    const double C46914 = C45816 * C891;
    const double C47635 = C45816 * C5925;
    const double C47632 = C45816 * C5923;
    const double C47629 = C45816 * C3491;
    const double C47626 = C45816 * C3492;
    const double C48159 = C45816 * C809;
    const double C48153 = C45816 * C817;
    const double C48502 = C45816 * C892;
    const double C48614 = C4298 * C45816;
    const double C48827 = C45816 * C957;
    const double C49145 = C45816 * C3410;
    const double C49139 = C45816 * C3414;
    const double C49456 = C45816 * C3493;
    const double C49568 = C7870 * C45816;
    const double C49769 = C45816 * C3566;
    const double C50425 = C45816 * C5921;
    const double C50422 = C45816 * C5922;
    const double C58748 = C45816 * C5819;
    const double C58742 = C45816 * C5825;
    const double C58736 = C45816 * C3413;
    const double C58730 = C45816 * C3409;
    const double C58921 = C41451 * C45816;
    const double C58914 = C40059 * C45816;
    const double C59011 = C45816 * C14143;
    const double C59261 = C45816 * C6009;
    const double C59255 = C45816 * C3565;
    const double C60649 = C43167 * C45816;
    const double C61351 = C45816 * C5824;
    const double C61345 = C45816 * C5818;
    const double C61571 = C40057 * C45816;
    const double C61680 = C45816 * C5924;
    const double C62001 = C45816 * C6008;
    const double C15639 = C15131 * C275;
    const double C15486 = C15485 + C15479;
    const double C15655 = C15654 * C93673;
    const double C88370 = C88360 * C36999;
    const double C88371 = C88361 * C93582;
    const double C88539 = C88538 + C88532;
    const double C32475 = C31967 * C275;
    const double C32322 = C32321 + C32315;
    const double C32491 = C32490 * C93673;
    const double C42116 = C42114 * C93582;
    const double C42115 = C42113 * C36999;
    const double C42307 = C42306 + C42280;
    const double C91983 = C91982 * ae;
    const double C10331 = C10318 + C10319;
    const double C10328 = C10309 + C10310;
    const double C12905 = C12897 + C11018;
    const double C13922 = C13914 + C11925;
    const double C41886 = C41875 + C11024;
    const double C41883 = C41869 + C11021;
    const double C45633 = C45625 + C14911;
    const double C20900 = C20890 + C20891;
    const double C20897 = C20881 + C20882;
    const double C20895 = C20875 + C20876;
    const double C23330 = C23323 + C21585;
    const double C23328 = C23319 + C21583;
    const double C24332 = C24325 + C22368;
    const double C24330 = C24321 + C22366;
    const double C27083 = C27072 + C21588;
    const double C27081 = C27068 + C21590;
    const double C27078 = C27062 + C21587;
    const double C30505 = C30502 + C25234;
    const double C31747 = C31740 + C25232;
    const double C58575 = C58570 + C27074;
    const double C62113 = C62108 + C31742;
    const double C62895 = C62885 + C62886;
    const double C62892 = C62876 + C62877;
    const double C62890 = C62870 + C62871;
    const double C65310 = C65303 + C63579;
    const double C65308 = C65299 + C63577;
    const double C66312 = C66305 + C64362;
    const double C66310 = C66301 + C64360;
    const double C68656 = C68646 + C68647;
    const double C68653 = C68639 + C63582;
    const double C68651 = C68635 + C63581;
    const double C70359 = C70353 + C63584;
    const double C72249 = C72242 + C67212;
    const double C72247 = C72238 + C69436;
    const double C80590 = C80587 + C67214;
    const double C10338 = C10332 + C10322;
    const double C10333 = C10327 + C10307;
    const double C12909 = C12906 + C11019;
    const double C13926 = C13923 + C11926;
    const double C41893 = C41887 + C11023;
    const double C41888 = C41882 + C11022;
    const double C45637 = C45634 + C14910;
    const double C10336 = C10330 + C10316;
    const double C10335 = C10329 + C10313;
    const double C12907 = C12904 + C11017;
    const double C41891 = C41885 + C11025;
    const double C41890 = C41884 + C11020;
    const double C20905 = C20899 + C20888;
    const double C20904 = C20898 + C20885;
    const double C20902 = C20896 + C20879;
    const double C23333 = C23329 + C21584;
    const double C23331 = C23327 + C21582;
    const double C24335 = C24331 + C22367;
    const double C24333 = C24329 + C22365;
    const double C27088 = C27082 + C21589;
    const double C27086 = C27080 + C21591;
    const double C27085 = C27079 + C21586;
    const double C30506 = C30504 + C25235;
    const double C31748 = C31746 + C25233;
    const double C58576 = C58574 + C27075;
    const double C62114 = C62112 + C31743;
    const double C62900 = C62894 + C62883;
    const double C62899 = C62893 + C62880;
    const double C62897 = C62891 + C62874;
    const double C65313 = C65309 + C63578;
    const double C65311 = C65307 + C63576;
    const double C66315 = C66311 + C64361;
    const double C66313 = C66309 + C64359;
    const double C68661 = C68655 + C68644;
    const double C68660 = C68654 + C63583;
    const double C68658 = C68652 + C63580;
    const double C70362 = C70360 + C63585;
    const double C72252 = C72248 + C67213;
    const double C72250 = C72246 + C69435;
    const double C80591 = C80589 + C67215;
    const double C82541 = C82535 + C82521;
    const double C82540 = C82534 + C82518;
    const double C84892 = C84889 + C83216;
    const double C88203 = C88197 + C83224;
    const double C88202 = C88196 + C83219;
    const double C72729 = C72412 * C278;
    const double C72728 = C72412 * C277;
    const double C72721 = C72412 * C276;
    const double C73188 = C72412 * C956;
    const double C73187 = C72412 * C955;
    const double C73713 = C72412 * C1537;
    const double C73712 = C72412 * C1536;
    const double C74311 = C72412 * C954;
    const double C74939 = C72412 * C1535;
    const double C75567 = C72412 * C3565;
    const double C72730 = C72413 * C1534;
    const double C72727 = C72413 * C1535;
    const double C72722 = C72413 * C1536;
    const double C73189 = C72413 * C6008;
    const double C73186 = C72413 * C3565;
    const double C73714 = C72413 * C11345;
    const double C73711 = C72413 * C1537;
    const double C74312 = C72413 * C3566;
    const double C74940 = C72413 * C1538;
    const double C75568 = C72413 * C6009;
    const double C72731 = C72414 * C1539;
    const double C72726 = C72414 * C1538;
    const double C72723 = C72414 * C1537;
    const double C73190 = C72414 * C6011;
    const double C73185 = C72414 * C6009;
    const double C73710 = C72414 * C11345;
    const double C74313 = C72414 * C6010;
    const double C74941 = C72414 * C11344;
    const double C75569 = C72414 * C14265;
    const double C82017 = C81991 * C110;
    const double C82011 = C81991 * C116;
    const double C82001 = C81991 * C115;
    const double C81995 = C81991 * C109;
    const double C82263 = C81991 * C191;
    const double C82253 = C81991 * C190;
    const double C82430 = C220 * C81991;
    const double C82419 = C218 * C81991;
    const double C82529 = C81991 * C279;
    const double C82527 = C81991 * C278;
    const double C82512 = C81991 * C277;
    const double C82508 = C81991 * C276;
    const double C83225 = C81991 * C957;
    const double C83222 = C81991 * C956;
    const double C83221 = C81991 * C955;
    const double C83218 = C81991 * C954;
    const double C83962 = C81991 * C1538;
    const double C83959 = C81991 * C1537;
    const double C83958 = C81991 * C1536;
    const double C83955 = C81991 * C1535;
    const double C84269 = C81991 * C806;
    const double C84263 = C81991 * C814;
    const double C84575 = C81991 * C888;
    const double C84781 = C2076 * C81991;
    const double C84886 = C81991 * C953;
    const double C85222 = C81991 * C1387;
    const double C85216 = C81991 * C1395;
    const double C85544 = C81991 * C1469;
    const double C85756 = C2790 * C81991;
    const double C85861 = C81991 * C1534;
    const double C86770 = C81991 * C3566;
    const double C86767 = C81991 * C3565;
    const double C87689 = C81991 * C808;
    const double C87683 = C81991 * C816;
    const double C87673 = C81991 * C815;
    const double C87667 = C81991 * C807;
    const double C87937 = C81991 * C890;
    const double C87927 = C81991 * C889;
    const double C88030 = C37701 * C81991;
    const double C88019 = C37699 * C81991;
    const double C88191 = C81991 * C5121;
    const double C88931 = C81991 * C6009;
    const double C89623 = C38782 * C81991;
    const double C91034 = C81991 * C3409;
    const double C91028 = C81991 * C3413;
    const double C91360 = C81991 * C3491;
    const double C91468 = C40059 * C81991;
    const double C91677 = C81991 * C6008;
    const double C82015 = C81992 * C1386;
    const double C82009 = C81992 * C1394;
    const double C82003 = C81992 * C1395;
    const double C81997 = C81992 * C1387;
    const double C82261 = C81992 * C1468;
    const double C82255 = C81992 * C1469;
    const double C82428 = C2788 * C81992;
    const double C82421 = C2790 * C81992;
    const double C82530 = C81992 * C1533;
    const double C82524 = C81992 * C1534;
    const double C82515 = C81992 * C1535;
    const double C82509 = C81992 * C1536;
    const double C83226 = C81992 * C6007;
    const double C83223 = C81992 * C6008;
    const double C83220 = C81992 * C3565;
    const double C83217 = C81992 * C3566;
    const double C83963 = C81992 * C11344;
    const double C83960 = C81992 * C11345;
    const double C83957 = C81992 * C1537;
    const double C83954 = C81992 * C1538;
    const double C84267 = C81992 * C3410;
    const double C84261 = C81992 * C3414;
    const double C84573 = C81992 * C3492;
    const double C84779 = C12150 * C81992;
    const double C84887 = C81992 * C3567;
    const double C85220 = C81992 * C1390;
    const double C85214 = C81992 * C1398;
    const double C85542 = C81992 * C1472;
    const double C85754 = C9693 * C81992;
    const double C85862 = C81992 * C1539;
    const double C86771 = C81992 * C6010;
    const double C86768 = C81992 * C6009;
    const double C87687 = C81992 * C5818;
    const double C87681 = C81992 * C5824;
    const double C87675 = C81992 * C3413;
    const double C87669 = C81992 * C3409;
    const double C87935 = C81992 * C5922;
    const double C87929 = C81992 * C3491;
    const double C88028 = C40057 * C81992;
    const double C88021 = C40059 * C81992;
    const double C88192 = C81992 * C8843;
    const double C88932 = C81992 * C14265;
    const double C89625 = C43167 * C81992;
    const double C91032 = C81992 * C5819;
    const double C91026 = C81992 * C5825;
    const double C91358 = C81992 * C5923;
    const double C91466 = C41451 * C81992;
    const double C91678 = C81992 * C6011;
    const double C20616 = C20388 * C188;
    const double C20632 = C20631 * C93662;
    const double C20796 = C20795 + C20789;
    const double C58091 = C58081 * C36999;
    const double C58092 = C58082 * C93582;
    const double C58418 = C58417 + C58411;
    const double C62611 = C62383 * C188;
    const double C62627 = C62626 * C93662;
    const double C62791 = C62790 + C62784;
    const double C68152 = C68150 * C93582;
    const double C68151 = C68149 * C36999;
    const double C68486 = C68485 + C68479;
    const double C15132 = C15125 + C15126;
    const double C31968 = C31961 + C31962;
    const double C20389 = C20382 + C20383;
    const double C62384 = C62377 + C62378;
    const double C124 =
        (3 * (C92038 + C92041 + C92041 + C92009 * C92069) + C92076 + C92076 +
         C92009 *
             (2 * C92069 + C92073 + C92073 +
              C92009 * (C92064 + C92068 + C92068 +
                        C92009 * (2 * ae * C92058 +
                                  C92009 *
                                      (C92048 * C92049 +
                                       C92013 * bs[6] * std::pow(C92007, 6)) *
                                      C92016)))) /
        C91701;
    const double C894 =
        (C92076 + C92124 * (2 * C92145 + ae * C92146 + C92009 * C92163)) /
        C91701;
    const double C1018 =
        (C92076 + C92124 * (2 * C92220 + ae * C92146 + C92009 * C92228)) /
        C91701;
    const double C1541 =
        (C92076 + C92167 * (2 * C92188 + ae * C92189 + C92009 * C92206)) /
        C91701;
    const double C1781 =
        (C92076 + C92167 * (2 * C92278 + ae * C92189 + C92009 * C92286)) /
        C91701;
    const double C137 = C105 * C118;
    const double C131 = C107 * C118;
    const double C214 = C188 * C118;
    const double C301 = C275 * C118;
    const double C15015 = C14999 * C118;
    const double C31851 = C31835 * C118;
    const double C829 = C107 * C812;
    const double C1989 = C105 * C812;
    const double C2059 = C188 * C812;
    const double C2145 = C275 * C812;
    const double C4100 = C4083 * C812;
    const double C15017 = C14997 * C812;
    const double C15007 = C14999 * C812;
    const double C15111 = C15093 * C812;
    const double C17654 = C14991 * C812;
    const double C31853 = C31833 * C812;
    const double C31843 = C31835 * C812;
    const double C31947 = C31929 * C812;
    const double C34489 = C31827 * C812;
    const double C45739 = C91722 * C812;
    const double C1410 = C107 * C1393;
    const double C2703 = C105 * C1393;
    const double C2773 = C188 * C1393;
    const double C2859 = C275 * C1393;
    const double C9608 = C4083 * C1393;
    const double C18312 = C14999 * C1393;
    const double C20200 = C14997 * C1393;
    const double C20368 = C20350 * C1393;
    const double C23784 = C14991 * C1393;
    const double C35147 = C31835 * C1393;
    const double C50930 = C91722 * C1393;
    const double C62195 = C31833 * C1393;
    const double C62363 = C62345 * C1393;
    const double C65764 = C31827 * C1393;
    const double C4210 = C4192 + C4193;
    const double C17439 = C17423 + C17424;
    const double C34274 = C34258 + C34259;
    const double C45849 = C45831 + C45832;
    const double C6989 = C6980 + C6981;
    const double C16112 = C16094 + C16095;
    const double C32948 = C32930 + C32931;
    const double C48396 = C48387 + C48388;
    const double C18540 = C18536 + C18537;
    const double C22693 = C22677 + C22678;
    const double C64681 = C64665 + C64666;
    const double C19924 = C19918 + C19919;
    const double C29035 = C29032 + C29033;
    const double C36745 = C36739 + C36740;
    const double C54530 = C54527 + C54528;
    const double C28207 = C28205 + C7638;
    const double C19294 = C19291 + C16592;
    const double C24542 = C22577 * C14991;
    const double C66522 = C22577 * C31827;
    const double C36115 = C36112 + C33428;
    const double C53708 = C53706 + C49036;
    const double C9804 = C9786 + C9787;
    const double C23673 = C23657 + C23658;
    const double C65653 = C65637 + C65638;
    const double C82025 = C82007 + C82008;
    const double C13707 = C13702 + C13703;
    const double C22214 = C22205 + C22206;
    const double C64208 = C64199 + C64200;
    const double C85652 = C85649 + C85650;
    const double C19612 = C19600 + C19601;
    const double C28627 = C28622 + C28623;
    const double C36433 = C36421 + C36422;
    const double C54124 = C54119 + C54120;
    const double C92704 = ae * C92703;
    const double C5041 =
        (3 * C92649 + C92124 * C92703 + (2 * C92643 + C92124 * C92692) * ae) /
        C91696;
    const double C8742 = (C92167 * C92703) / C91696;
    const double C93001 = ae * C93000;
    const double C11347 =
        (3 * C92948 + C92167 * C93000 + (2 * C92942 + C92167 * C92991) * ae) /
        C91696;
    const double C901 =
        (2 * C92145 + ae * C92146 + C92009 * C92163 + ae * C92124 * C92116 +
         C92124 * (C92118 +
                   C92124 * (2 * C92159 + ae * C92160 +
                             C92009 * (C92153 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C1025 =
        (2 * C92220 + ae * C92146 + C92009 * C92228 + ae * C92124 * C92116 +
         C92124 * (C92118 +
                   C92124 * (2 * C92226 + ae * C92160 +
                             C92009 * (C92224 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C1548 =
        (2 * C92188 + ae * C92189 + C92009 * C92206 + ae * C92167 * C92116 +
         C92167 * (C92118 +
                   C92167 * (2 * C92202 + ae * C92203 +
                             C92009 * (C92196 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C1788 =
        (2 * C92278 + ae * C92189 + C92009 * C92286 + ae * C92167 * C92116 +
         C92167 * (C92118 +
                   C92167 * (2 * C92284 + ae * C92203 +
                             C92009 * (C92282 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C3498 =
        (C92167 *
         (C92118 + C92124 * (2 * C92159 + ae * C92160 +
                             C92009 * (C92153 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C92119 = C92083 + C92117;
    const double C92536 = ae * C92531;
    const double C3416 = (C92167 * C92531) / C91696;
    const double C92557 = ae * C92552;
    const double C836 = C107 * C819;
    const double C4102 = C4083 * C819;
    const double C17315 = C14999 * C819;
    const double C34150 = C31835 * C819;
    const double C45741 = C91722 * C819;
    const double C1417 = C107 * C1400;
    const double C9610 = C4083 * C1400;
    const double C23445 = C14999 * C1400;
    const double C65425 = C31835 * C1400;
    const double C81843 = C91722 * C1400;
    const double C38427 =
        (2 * C92731 + ae * C92713 + C92124 * C93159 + ae * C92167 * C93133 +
         C92167 * (C93135 +
                   C92167 * (2 * C93157 + ae * C93146 +
                             C92124 * (C92300 + ae * C92124 * C92198 +
                                       C92124 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C93136 = C93109 + C93134;
    const double C93206 = ae * C93202;
    const double C93347 = C93322 + C93345;
    const double C93262 = ae * C93261;
    const double C42191 =
        (3 * C93070 + C92167 * C93261 + (2 * C93063 + C92167 * C93250) * ae) /
        C91696;
    const double C24839 = C22901 * C14991;
    const double C66819 = C22901 * C31827;
    const double C8402 = C8396 + C8397;
    const double C29170 = C29166 + C29167;
    const double C49773 = C49767 + C49768;
    const double C54665 = C54661 + C54662;
    const double C7101 = C7098 + C5362;
    const double C7206 = C5462 * C4079;
    const double C48611 = C5462 * C45718;
    const double C48507 = C48504 + C46913;
    const double C8081 = C8078 + C6180;
    const double C8196 = C8194 * C4079;
    const double C49565 = C8194 * C45718;
    const double C28764 = C28762 + C19719;
    const double C54261 = C54259 + C36540;
    const double C49461 = C49458 + C47625;
    const double C60652 = C59753 * C45718;
    const double C70762 = C59753 * C4079;
    const double C5359 =
        (3 * (C92237 + C92657 + C92657 + C92124 * C92668) + C92681 + C92681 +
         C92124 * (2 * C92668 + C92678 + C92678 +
                   C92124 * (C92242 + C92674 + C92674 +
                             C92124 * (2 * C92149 + C92124 * C92247)))) /
        C91701;
    const double C9413 =
        (C92681 + C92167 * (2 * C92731 + ae * C92713 +
                            C92124 * (C92297 + ae * C92124 * C92185 +
                                      C92124 * (C92192 + C92124 * C92300)))) /
        C91701;
    const double C5370 = C4178 * C5040;
    const double C37695 = C36999 * C5040;
    const double C37764 = C37064 * C5040;
    const double C37758 = C37065 * C5040;
    const double C37817 = C275 * C5040;
    const double C46921 = C45817 * C5040;
    const double C9094 = C4178 * C8741;
    const double C26649 = C15093 * C8741;
    const double C38268 = C37065 * C8741;
    const double C40042 = C36999 * C8741;
    const double C40129 = C37064 * C8741;
    const double C40198 = C275 * C8741;
    const double C41532 = C31929 * C8741;
    const double C50423 = C45817 * C8741;
    const double C58247 = C45816 * C8741;
    const double C58324 = C20350 * C8741;
    const double C61348 = C45718 * C8741;
    const double C68303 = C4177 * C8741;
    const double C68387 = C62345 * C8741;
    const double C71460 = C4079 * C8741;
    const double C38275 = C37065 * C38111;
    const double C41534 = C31929 * C38111;
    const double C61681 = C45817 * C38111;
    const double C71805 = C4178 * C38111;
    const double C87852 = C15093 * C38111;
    const double C75299 = C75298 * C93582;
    const double C13807 = C11844 * C9603;
    const double C85751 = C11844 * C81840;
    const double C13924 = C13921 + C11924;
    const double C85867 = C85864 + C83953;
    const double C11921 =
        (3 * (C92311 + C92956 + C92956 + C92167 * C92967) + C92980 + C92980 +
         C92167 * (2 * C92967 + C92977 + C92977 +
                   C92167 * (C92316 + C92973 + C92973 +
                             C92167 * (2 * C92192 + C92167 * C92321)))) /
        C91701;
    const double C14595 =
        (C92980 + C92124 * (2 * C92877 + ae * C92919 +
                            C92167 * (C92260 + ae * C92167 * C92142 +
                                      C92167 * (C92149 + C92167 * C92263)))) /
        C91701;
    const double C11932 = C9772 * C11346;
    const double C73601 = C36999 * C11346;
    const double C73655 = C188 * C11346;
    const double C73715 = C72414 * C11346;
    const double C73709 = C72415 * C11346;
    const double C83961 = C81993 * C11346;
    const double C45635 = C45632 + C14912;
    const double C45407 = C42579 * C9603;
    const double C91463 = C42579 * C81840;
    const double C91683 = C91680 + C86769;
    const double C46725 = C46724 + C46718;
    const double C46838 = C46831 + C46832;
    const double C46837 = C46829 + C46830;
    const double C47092 = C47088 + C47089;
    const double C56532 = C50321 + C50322;
    const double C56529 = C50322 + C50321;
    const double C56531 = C50319 + C50320;
    const double C56530 = C50320 + C50319;
    const double C56924 = C50633 + C50634;
    const double C56923 = C50634 + C50633;
    const double C83552 = C53062 + C53061;
    const double C83553 = C53060 + C53059;
    const double C83798 = C53374 + C53373;
    const double C83402 = C83401 + C83395;
    const double C16117 = C16104 + C16105;
    const double C16114 = C16098 + C16099;
    const double C16109 = C16088 + C16089;
    const double C16106 = C16082 + C16083;
    const double C16369 = C16362 + C16363;
    const double C16364 = C16352 + C16353;
    const double C17664 = C17655 + C17656;
    const double C17661 = C17649 + C17650;
    const double C17997 = C17991 + C17992;
    const double C19617 = C19610 + C19611;
    const double C19614 = C19604 + C19605;
    const double C19926 = C19922 + C19923;
    const double C21970 = C21957 + C21958;
    const double C21967 = C21951 + C21952;
    const double C21962 = C21941 + C21942;
    const double C21959 = C21935 + C21936;
    const double C22216 = C22209 + C22210;
    const double C22211 = C22199 + C22200;
    const double C23794 = C23785 + C23786;
    const double C23791 = C23779 + C23780;
    const double C24112 = C24106 + C24107;
    const double C16116 = C16102 + C16103;
    const double C16113 = C16096 + C16097;
    const double C16110 = C16090 + C16091;
    const double C16107 = C16084 + C16085;
    const double C16368 = C16360 + C16361;
    const double C16365 = C16354 + C16355;
    const double C17665 = C17657 + C17658;
    const double C17662 = C17651 + C17652;
    const double C17998 = C17993 + C17994;
    const double C19616 = C19608 + C19609;
    const double C19613 = C19602 + C19603;
    const double C19925 = C19920 + C19921;
    const double C21969 = C21955 + C21956;
    const double C21966 = C21949 + C21950;
    const double C21963 = C21943 + C21944;
    const double C21960 = C21937 + C21938;
    const double C22215 = C22207 + C22208;
    const double C22212 = C22201 + C22202;
    const double C23795 = C23787 + C23788;
    const double C23792 = C23781 + C23782;
    const double C24113 = C24108 + C24109;
    const double C32953 = C32940 + C32941;
    const double C32950 = C32934 + C32935;
    const double C32945 = C32924 + C32925;
    const double C32942 = C32918 + C32919;
    const double C33205 = C33198 + C33199;
    const double C33200 = C33188 + C33189;
    const double C34499 = C34490 + C34491;
    const double C34496 = C34484 + C34485;
    const double C34832 = C34826 + C34827;
    const double C36438 = C36431 + C36432;
    const double C36435 = C36425 + C36426;
    const double C36747 = C36743 + C36744;
    const double C63964 = C63951 + C63952;
    const double C63961 = C63945 + C63946;
    const double C63956 = C63935 + C63936;
    const double C63953 = C63929 + C63930;
    const double C64210 = C64203 + C64204;
    const double C64205 = C64193 + C64194;
    const double C65774 = C65765 + C65766;
    const double C65771 = C65759 + C65760;
    const double C66092 = C66086 + C66087;
    const double C32952 = C32938 + C32939;
    const double C32949 = C32932 + C32933;
    const double C32946 = C32926 + C32927;
    const double C32943 = C32920 + C32921;
    const double C33204 = C33196 + C33197;
    const double C33201 = C33190 + C33191;
    const double C34500 = C34492 + C34493;
    const double C34497 = C34486 + C34487;
    const double C34833 = C34828 + C34829;
    const double C36437 = C36429 + C36430;
    const double C36434 = C36423 + C36424;
    const double C36746 = C36741 + C36742;
    const double C63963 = C63949 + C63950;
    const double C63960 = C63943 + C63944;
    const double C63957 = C63937 + C63938;
    const double C63954 = C63931 + C63932;
    const double C64209 = C64201 + C64202;
    const double C64206 = C64195 + C64196;
    const double C65775 = C65767 + C65768;
    const double C65772 = C65761 + C65762;
    const double C66093 = C66088 + C66089;
    const double C100 =
        ((ae * -2 * C91695) / C91708 -
         (((C91697 * C91709) / C91701 + 2 * C91725) * be) / C91696) /
            C91702 +
        ((C91697 * (C91709 / C91708 -
                    (((C91697 * C91734) / C91696 + 2 * C91732) * be) / C91696 -
                    C91727 / C91711) +
          2 * (C91725 / C91702 - ((C91697 * C91732 + C93805) * be) / C91696 +
               C91722)) *
         ae) /
            C91696 +
        C91734 / C91711 - ((2 * C91722 - C91729 / C91711) * be) / C91696;
    const double C102 =
        (C91709 / C91708 -
         (((C91697 * C91734) / C91696 + 2 * C91732) * be) / C91696 -
         C91727 / C91711) /
            C91702 +
        ((C91697 * (C91734 / C91711 -
                    ((2 * C91722 - C91729 / C91711) * be) / C91696) +
          2 * (C91732 / C91702 - ((C91697 * C91722 + C93587) * be) / C91696)) *
         ae) /
            C91696 +
        (-2 * C91727) / (C91696 * 4 * C91701);
    const double C104 =
        (C91734 / C91711 - ((2 * C91722 - C91729 / C91711) * be) / C91696) /
            C91702 +
        ((2 * (C91722 / C91702 - (0 * be) / C91696) -
          C91729 / (C91696 * 4 * C91701)) *
         ae) /
            C91696;
    const double C14994 =
        C91709 / C91708 -
        (((C91697 * C91734) / C91696 + 2 * C91732) * be) / C91696 -
        C91727 / C91711;
    const double C14996 =
        C91734 / C91711 - ((2 * C91722 - C91729 / C91711) * be) / C91696;
    const double C31830 =
        C91709 / C91708 +
        (((C91697 * C91734) / C91696 + 2 * C91732) * ae) / C91696 -
        C91727 / C91711;
    const double C31832 =
        C91734 / C91711 + ((2 * C91722 - C91729 / C91711) * ae) / C91696;
    const double C45719 = C91734 / C91696;
    const double C4940 = C4080 * C4917;
    const double C4933 = C4080 * C808;
    const double C4929 = C4080 * C807;
    const double C6623 = C4080 * C809;
    const double C6619 = C4080 * C806;
    const double C8628 = C4080 * C3409;
    const double C8624 = C4080 * C5818;
    const double C11126 = C4080 * C11103;
    const double C11119 = C4080 * C1389;
    const double C11115 = C4080 * C1388;
    const double C13018 = C4080 * C1390;
    const double C13014 = C4080 * C1387;
    const double C14034 = C4080 * C5819;
    const double C28200 = C4080 * C3410;
    const double C4961 = C4955 + C4939;
    const double C4960 = C4954 + C4936;
    const double C4958 = C4952 + C4932;
    const double C6640 = C6636 + C6626;
    const double C6638 = C6634 + C6622;
    const double C8642 = C8638 + C8627;
    const double C8640 = C8636 + C8623;
    const double C11147 = C11141 + C11125;
    const double C11146 = C11140 + C11122;
    const double C11144 = C11138 + C11118;
    const double C13035 = C13031 + C13021;
    const double C13033 = C13029 + C13017;
    const double C14045 = C14043 + C14037;
    const double C15845 = C15839 + C15820;
    const double C15844 = C15838 + C15817;
    const double C21698 = C21692 + C21675;
    const double C21697 = C21691 + C21673;
    const double C32681 = C32675 + C32656;
    const double C32680 = C32674 + C32653;
    const double C63692 = C63686 + C63669;
    const double C63691 = C63685 + C63667;
    const double C37507 = C37503 + C37494;
    const double C37506 = C37502 + C37491;
    const double C37505 = C37501 + C37489;
    const double C37504 = C37500 + C37487;
    const double C38562 = C38559 + C38552;
    const double C38561 = C38558 + C38550;
    const double C38560 = C38557 + C38548;
    const double C39823 = C39820 + C39813;
    const double C39822 = C39819 + C39811;
    const double C39821 = C39818 + C39809;
    const double C41182 = C41180 + C41174;
    const double C41181 = C41179 + C41172;
    const double C42000 = C41996 + C41986;
    const double C41999 = C41995 + C41983;
    const double C41998 = C41994 + C41980;
    const double C41997 = C41993 + C41978;
    const double C42862 = C42860 + C42855;
    const double C42861 = C42859 + C42853;
    const double C43784 = C43782 + C43776;
    const double C43783 = C43781 + C43774;
    const double C59452 = C59451 + C59449;
    const double C73250 = C73249 + C73246;
    const double C74386 = C74385 + C74382;
    const double C46560 = C46554 + C46538;
    const double C46559 = C46553 + C46535;
    const double C46557 = C46551 + C46531;
    const double C48052 = C48048 + C48038;
    const double C48050 = C48046 + C48034;
    const double C49995 = C49991 + C49980;
    const double C49993 = C49989 + C49976;
    const double C52731 = C52725 + C52708;
    const double C52729 = C52723 + C52704;
    const double C52728 = C52722 + C52702;
    const double C54940 = C54938 + C54930;
    const double C83313 = C83311 + C83304;
    const double C85007 = C85005 + C84999;
    const double C5563 = C5546 + C5562;
    const double C11471 = C11469 + C11470;
    const double C37216 =
        ((ae * -2 * C91881) / C91708 -
         (((C91760 * C91909) / C91701 + 2 * C91896) * be) / C91696) /
            C91702 +
        ((C91760 * (C91909 / C91708 -
                    (((C91760 * C91912) / C91696 + 2 * C91892) * be) / C91696 -
                    C91792 / C91711) +
          2 * (C91896 / C91702 - ((C91760 * C91892 + C93818) * be) / C91696 +
               C91893)) *
         ae) /
            C91696 +
        C91912 / C91711 - ((2 * C91893 - C91795 / C91711) * be) / C91696;
    const double C37217 =
        (C91909 / C91708 -
         (((C91760 * C91912) / C91696 + 2 * C91892) * be) / C91696 -
         C91792 / C91711) /
            C91702 +
        ((C91760 * (C91912 / C91711 -
                    ((2 * C91893 - C91795 / C91711) * be) / C91696) +
          2 * (C91892 / C91702 - ((C91760 * C91893 + C93711) * be) / C91696)) *
         ae) /
            C91696 +
        (-2 * C91792) / (C91696 * 4 * C91701);
    const double C37218 =
        (C91912 / C91711 - ((2 * C91893 - C91795 / C91711) * be) / C91696) /
            C91702 +
        ((2 * (C91893 / C91702 - (0 * be) / C91696) -
          C91795 / (C91696 * 4 * C91701)) *
         ae) /
            C91696;
    const double C46076 =
        C91909 / C91708 -
        (((C91760 * C91912) / C91696 + 2 * C91892) * be) / C91696 -
        C91792 / C91711;
    const double C46077 =
        C91912 / C91711 - ((2 * C91893 - C91795 / C91711) * be) / C91696;
    const double C4487 = C4481 + C4469;
    const double C4484 = C4478 + C4460;
    const double C7102 = C7099 + C5363;
    const double C8082 = C8079 + C6181;
    const double C69113 = C69107 + C6187;
    const double C69110 = C69104 + C6184;
    const double C71810 = C71807 + C9093;
    const double C15390 = C15384 + C15375;
    const double C15387 = C15381 + C15366;
    const double C15385 = C15379 + C15360;
    const double C17782 = C17778 + C16195;
    const double C17780 = C17776 + C16193;
    const double C18755 = C18751 + C16903;
    const double C18753 = C18749 + C16901;
    const double C27649 = C27643 + C16906;
    const double C27647 = C27641 + C16908;
    const double C27644 = C27638 + C16905;
    const double C28765 = C28763 + C19718;
    const double C31200 = C31198 + C19716;
    const double C88625 = C88623 + C27634;
    const double C91254 = C91252 + C31194;
    const double C32226 = C32220 + C32211;
    const double C32223 = C32217 + C32202;
    const double C32221 = C32215 + C32196;
    const double C34617 = C34613 + C33031;
    const double C34615 = C34611 + C33029;
    const double C35584 = C35580 + C33739;
    const double C35582 = C35578 + C33737;
    const double C42410 = C42404 + C42395;
    const double C42407 = C42401 + C33742;
    const double C42405 = C42399 + C33741;
    const double C44217 = C44215 + C33744;
    const double C45194 = C45190 + C41530;
    const double C45192 = C45188 + C36537;
    const double C54262 = C54260 + C36539;
    const double C4494 = C4488 + C4473;
    const double C4489 = C4483 + C4458;
    const double C7106 = C7103 + C7094;
    const double C8086 = C8083 + C8074;
    const double C69120 = C69114 + C69099;
    const double C69115 = C69109 + C69089;
    const double C71812 = C71809 + C71798;
    const double C4492 = C4486 + C4467;
    const double C4491 = C4485 + C4464;
    const double C69118 = C69112 + C69095;
    const double C69117 = C69111 + C69093;
    const double C15395 = C15389 + C15373;
    const double C15394 = C15388 + C15370;
    const double C15392 = C15386 + C15364;
    const double C17785 = C17781 + C17770;
    const double C17783 = C17779 + C17766;
    const double C18758 = C18754 + C18743;
    const double C18756 = C18752 + C18739;
    const double C27654 = C27648 + C27631;
    const double C27652 = C27646 + C27627;
    const double C27651 = C27645 + C27625;
    const double C31203 = C31201 + C31193;
    const double C88626 = C88624 + C88616;
    const double C91257 = C91255 + C91249;
    const double C32231 = C32225 + C32209;
    const double C32230 = C32224 + C32206;
    const double C32228 = C32222 + C32200;
    const double C34620 = C34616 + C34605;
    const double C34618 = C34614 + C34601;
    const double C35587 = C35583 + C35572;
    const double C35585 = C35581 + C35568;
    const double C42415 = C42409 + C42393;
    const double C42414 = C42408 + C42390;
    const double C42412 = C42406 + C42386;
    const double C44220 = C44218 + C44212;
    const double C45199 = C45195 + C45185;
    const double C45197 = C45193 + C45181;
    const double C46119 = C46113 + C46094;
    const double C46118 = C46112 + C46091;
    const double C59028 = C59022 + C59005;
    const double C59027 = C59021 + C59003;
    const double C45854 = C45841 + C45842;
    const double C45851 = C45835 + C45836;
    const double C45846 = C45825 + C45826;
    const double C45843 = C45819 + C45820;
    const double C46373 = C46366 + C46367;
    const double C46368 = C46356 + C46357;
    const double C48168 = C48161 + C48162;
    const double C48165 = C48155 + C48156;
    const double C48833 = C48829 + C48830;
    const double C49154 = C49147 + C49148;
    const double C49151 = C49141 + C49142;
    const double C49775 = C49771 + C49772;
    const double C58763 = C58750 + C58751;
    const double C58760 = C58744 + C58745;
    const double C58755 = C58734 + C58735;
    const double C58752 = C58728 + C58729;
    const double C59270 = C59263 + C59264;
    const double C59265 = C59253 + C59254;
    const double C61358 = C61349 + C61350;
    const double C61355 = C61343 + C61344;
    const double C62005 = C61999 + C62000;
    const double C45853 = C45839 + C45840;
    const double C45850 = C45833 + C45834;
    const double C45847 = C45827 + C45828;
    const double C45844 = C45821 + C45822;
    const double C46372 = C46364 + C46365;
    const double C46369 = C46358 + C46359;
    const double C48167 = C48159 + C48160;
    const double C48164 = C48153 + C48154;
    const double C48832 = C48827 + C48828;
    const double C49153 = C49145 + C49146;
    const double C49150 = C49139 + C49140;
    const double C49774 = C49769 + C49770;
    const double C58762 = C58748 + C58749;
    const double C58759 = C58742 + C58743;
    const double C58756 = C58736 + C58737;
    const double C58753 = C58730 + C58731;
    const double C59269 = C59261 + C59262;
    const double C59266 = C59255 + C59256;
    const double C61359 = C61351 + C61352;
    const double C61356 = C61345 + C61346;
    const double C62006 = C62001 + C62002;
    const double C15656 = C15639 + C15655;
    const double C88376 = C88370 + C88371;
    const double C32492 = C32475 + C32491;
    const double C42117 = C42115 + C42116;
    const double C72716 =
        ((ae * -2 * C91952) / C91708 -
         (((C91763 * C91980) / C91701 + 2 * C91967) * be) / C91696) /
            C91702 +
        ((C91763 * (C91980 / C91708 -
                    (((C91763 * C91983) / C91696 + 2 * C91963) * be) / C91696 -
                    C91818 / C91711) +
          2 * (C91967 / C91702 - ((C91763 * C91963 + C93819) * be) / C91696 +
               C91964)) *
         ae) /
            C91696 +
        C91983 / C91711 - ((2 * C91964 - C91821 / C91711) * be) / C91696;
    const double C72717 =
        (C91980 / C91708 -
         (((C91763 * C91983) / C91696 + 2 * C91963) * be) / C91696 -
         C91818 / C91711) /
            C91702 +
        ((C91763 * (C91983 / C91711 -
                    ((2 * C91964 - C91821 / C91711) * be) / C91696) +
          2 * (C91963 / C91702 - ((C91763 * C91964 + C93737) * be) / C91696)) *
         ae) /
            C91696 +
        (-2 * C91818) / (C91696 * 4 * C91701);
    const double C72718 =
        (C91983 / C91711 - ((2 * C91964 - C91821 / C91711) * be) / C91696) /
            C91702 +
        ((2 * (C91964 / C91702 - (0 * be) / C91696) -
          C91821 / (C91696 * 4 * C91701)) *
         ae) /
            C91696;
    const double C82504 =
        C91980 / C91708 -
        (((C91763 * C91983) / C91696 + 2 * C91963) * be) / C91696 -
        C91818 / C91711;
    const double C82505 =
        C91983 / C91711 - ((2 * C91964 - C91821 / C91711) * be) / C91696;
    const double C10337 = C10331 + C10319;
    const double C10334 = C10328 + C10310;
    const double C12908 = C12905 + C11018;
    const double C13925 = C13922 + C11925;
    const double C41892 = C41886 + C11024;
    const double C41889 = C41883 + C11021;
    const double C45636 = C45633 + C14911;
    const double C20906 = C20900 + C20891;
    const double C20903 = C20897 + C20882;
    const double C20901 = C20895 + C20876;
    const double C23334 = C23330 + C21585;
    const double C23332 = C23328 + C21583;
    const double C24336 = C24332 + C22368;
    const double C24334 = C24330 + C22366;
    const double C27089 = C27083 + C21588;
    const double C27087 = C27081 + C21590;
    const double C27084 = C27078 + C21587;
    const double C30507 = C30505 + C25234;
    const double C31749 = C31747 + C25232;
    const double C58577 = C58575 + C27074;
    const double C62115 = C62113 + C31742;
    const double C62901 = C62895 + C62886;
    const double C62898 = C62892 + C62877;
    const double C62896 = C62890 + C62871;
    const double C65314 = C65310 + C63579;
    const double C65312 = C65308 + C63577;
    const double C66316 = C66312 + C64362;
    const double C66314 = C66310 + C64360;
    const double C68662 = C68656 + C68647;
    const double C68659 = C68653 + C63582;
    const double C68657 = C68651 + C63581;
    const double C70361 = C70359 + C63584;
    const double C72253 = C72249 + C67212;
    const double C72251 = C72247 + C69436;
    const double C80592 = C80590 + C67214;
    const double C10344 = C10338 + C10323;
    const double C10339 = C10333 + C10308;
    const double C12912 = C12909 + C12900;
    const double C13929 = C13926 + C13917;
    const double C41899 = C41893 + C41878;
    const double C41894 = C41888 + C41868;
    const double C45640 = C45637 + C45628;
    const double C10342 = C10336 + C10317;
    const double C10341 = C10335 + C10314;
    const double C12910 = C12907 + C12896;
    const double C41897 = C41891 + C41874;
    const double C41896 = C41890 + C41872;
    const double C20911 = C20905 + C20889;
    const double C20910 = C20904 + C20886;
    const double C20908 = C20902 + C20880;
    const double C23337 = C23333 + C23322;
    const double C23335 = C23331 + C23318;
    const double C24339 = C24335 + C24324;
    const double C24337 = C24333 + C24320;
    const double C27094 = C27088 + C27071;
    const double C27092 = C27086 + C27067;
    const double C27091 = C27085 + C27065;
    const double C30508 = C30506 + C30501;
    const double C31750 = C31748 + C31739;
    const double C58578 = C58576 + C58569;
    const double C62116 = C62114 + C62107;
    const double C62906 = C62900 + C62884;
    const double C62905 = C62899 + C62881;
    const double C62903 = C62897 + C62875;
    const double C65317 = C65313 + C65302;
    const double C65315 = C65311 + C65298;
    const double C66319 = C66315 + C66304;
    const double C66317 = C66313 + C66300;
    const double C68667 = C68661 + C68645;
    const double C68666 = C68660 + C68642;
    const double C68664 = C68658 + C68638;
    const double C70364 = C70362 + C70356;
    const double C72256 = C72252 + C72241;
    const double C72254 = C72250 + C72237;
    const double C80593 = C80591 + C80586;
    const double C82547 = C82541 + C82522;
    const double C82546 = C82540 + C82519;
    const double C84895 = C84892 + C84881;
    const double C88209 = C88203 + C88186;
    const double C88208 = C88202 + C88184;
    const double C82030 = C82017 + C82018;
    const double C82027 = C82011 + C82012;
    const double C82022 = C82001 + C82002;
    const double C82019 = C81995 + C81996;
    const double C82270 = C82263 + C82264;
    const double C82265 = C82253 + C82254;
    const double C84276 = C84269 + C84270;
    const double C84273 = C84263 + C84264;
    const double C84579 = C84575 + C84576;
    const double C85229 = C85222 + C85223;
    const double C85226 = C85216 + C85217;
    const double C85548 = C85544 + C85545;
    const double C87702 = C87689 + C87690;
    const double C87699 = C87683 + C87684;
    const double C87694 = C87673 + C87674;
    const double C87691 = C87667 + C87668;
    const double C87944 = C87937 + C87938;
    const double C87939 = C87927 + C87928;
    const double C91041 = C91034 + C91035;
    const double C91038 = C91028 + C91029;
    const double C91364 = C91360 + C91361;
    const double C82029 = C82015 + C82016;
    const double C82026 = C82009 + C82010;
    const double C82023 = C82003 + C82004;
    const double C82020 = C81997 + C81998;
    const double C82269 = C82261 + C82262;
    const double C82266 = C82255 + C82256;
    const double C84275 = C84267 + C84268;
    const double C84272 = C84261 + C84262;
    const double C84578 = C84573 + C84574;
    const double C85228 = C85220 + C85221;
    const double C85225 = C85214 + C85215;
    const double C85547 = C85542 + C85543;
    const double C87701 = C87687 + C87688;
    const double C87698 = C87681 + C87682;
    const double C87695 = C87675 + C87676;
    const double C87692 = C87669 + C87670;
    const double C87943 = C87935 + C87936;
    const double C87940 = C87929 + C87930;
    const double C91040 = C91032 + C91033;
    const double C91037 = C91026 + C91027;
    const double C91363 = C91358 + C91359;
    const double C20633 = C20616 + C20632;
    const double C58097 = C58091 + C58092;
    const double C62628 = C62611 + C62627;
    const double C68153 = C68151 + C68152;
    const double C2060 = C93662 * C894;
    const double C15112 = C93711 * C894;
    const double C31948 = C93711 * C894;
    const double C17660 = C14991 * C1018;
    const double C34495 = C31827 * C1018;
    const double C2860 = C93673 * C1541;
    const double C20369 = C93737 * C1541;
    const double C62364 = C93737 * C1541;
    const double C24111 = C14991 * C1781;
    const double C66091 = C31827 * C1781;
    const double C224 = C214 + C215;
    const double C311 = C301 + C302;
    const double C2157 = C2145 + C2146;
    const double C17318 = C17311 + C15007;
    const double C17663 = C17653 + C17654;
    const double C34153 = C34146 + C31843;
    const double C34498 = C34488 + C34489;
    const double C2785 = C2773 + C2774;
    const double C23448 = C23441 + C18312;
    const double C23793 = C23783 + C23784;
    const double C65428 = C65421 + C35147;
    const double C65773 = C65763 + C65764;
    const double C19496 = C18540 * C14991;
    const double C36317 = C18540 * C31827;
    const double C28209 = C28207 + C28203;
    const double C19297 = C19294 + C19283;
    const double C36118 = C36115 + C36104;
    const double C53710 = C53708 + C53704;
    const double C5360 =
        (3 * (C92641 + C92647 + C92647 + C92124 * C92693) + C92704 + C92704 +
         C92124 *
             (2 * C92693 + C92701 + C92701 +
              C92124 * (C92684 + C92697 + C92697 +
                        C92124 * (2 * ae * C92686 +
                                  C92124 * C92009 *
                                      (C92081 * C92082 +
                                       C92232 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C9414 =
        (C92704 +
         C92167 * (2 * C92735 + ae * C92721 +
                   C92124 * (C92733 + ae * C92124 * C92717 +
                             C92124 * (ae * C92717 + C92124 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92291)))) /
        C91701;
    const double C5373 = C4178 * C5041;
    const double C38857 = C37065 * C5041;
    const double C46924 = C45817 * C5041;
    const double C9097 = C4178 * C8742;
    const double C26651 = C15093 * C8742;
    const double C39474 = C37065 * C8742;
    const double C50426 = C45817 * C8742;
    const double C52208 = C31929 * C8742;
    const double C11922 =
        (3 * (C92737 + C92946 + C92946 + C92167 * C92988) + C93001 + C93001 +
         C92167 *
             (2 * C92988 + C92998 + C92998 +
              C92167 * (C92741 + C92994 + C92994 +
                        C92167 * (2 * ae * C92717 +
                                  C92167 * C92009 *
                                      (C92081 * C92082 +
                                       C92306 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C14596 =
        (C93001 +
         C92124 * (2 * C92880 + ae * C92923 +
                   C92167 * (C92716 + ae * C92167 * C92686 +
                             C92167 * (ae * C92686 + C92167 * C92009 *
                                                         std::pow(C92015, 7) *
                                                         bs[7] * C92254)))) /
        C91701;
    const double C11935 = C9772 * C11347;
    const double C74942 = C72415 * C11347;
    const double C83964 = C81993 * C11347;
    const double C92120 = C92119 + C92106;
    const double C1985 =
        (3 * (C92325 + C92329 + C92329 + C92009 * C92540) + C92536 + C92536 +
         C92009 *
             (2 * C92540 + C92537 + C92537 +
              C92009 * (C92530 + C92538 + C92538 +
                        C92009 * (2 * ae * C92124 * C92094 +
                                  C92009 * C92124 *
                                      (C92081 * C92082 +
                                       C92013 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C3572 =
        (C92536 +
         C92167 * C92124 *
             (2 * C92202 + ae * C92203 +
              C92009 * (C92196 + ae * C92009 * C92198 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92171)))) /
        C91701;
    const double C3856 =
        (C92536 +
         C92167 * C92124 *
             (2 * C92284 + ae * C92203 +
              C92009 * (C92282 + ae * C92009 * C92198 +
                        C92009 * (ae * C92198 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92270)))) /
        C91701;
    const double C3425 = C107 * C3416;
    const double C18315 = C14999 * C3416;
    const double C25337 = C4083 * C3416;
    const double C35150 = C31835 * C3416;
    const double C50932 = C91722 * C3416;
    const double C2699 =
        (3 * (C92427 + C92431 + C92431 + C92009 * C92561) + C92557 + C92557 +
         C92009 *
             (2 * C92561 + C92558 + C92558 +
              C92009 * (C92551 + C92559 + C92559 +
                        C92009 * (2 * ae * C92167 * C92094 +
                                  C92009 * C92167 *
                                      (C92081 * C92082 +
                                       C92013 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C3642 =
        (C92557 +
         C92124 * C92167 *
             (2 * C92226 + ae * C92160 +
              C92009 * (C92224 + ae * C92009 * C92155 +
                        C92009 * (ae * C92155 + C92009 * std::pow(C92015, 7) *
                                                    bs[7] * C92212)))) /
        C91701;
    const double C93137 = C93136 + C93129;
    const double C40125 =
        (3 * (C92864 + C92868 + C92868 + C92124 * C93209) + C93206 + C93206 +
         C92124 *
             (2 * C93209 + C93207 + C93207 +
              C92124 * (C93201 + C93208 + C93208 +
                        C92124 * (2 * ae * C92167 * C92155 +
                                  C92124 * C92167 *
                                      (C92081 * C92082 +
                                       C92232 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C93348 = C93347 + C93336;
    const double C42748 =
        (3 * (C93061 + C93068 + C93068 + C92167 * C93251) + C93262 + C93262 +
         C92167 *
             (2 * C93251 + C93259 + C93259 +
              C92167 * (C93242 + C93255 + C93255 +
                        C92167 * (2 * ae * C93244 +
                                  C92167 * C92124 *
                                      (C92081 * C92082 +
                                       C92306 * bs[7] * std::pow(C92015, 7)) *
                                      C92016)))) /
        C91701;
    const double C45297 =
        (2 * C92877 + ae * C92919 + C92167 * C93185 + C93262 +
         C92124 *
             (ae * (2 * C92968 +
                    C92167 * (C92185 + C92167 * (C92167 * C92198 + C92090) +
                              C92167 * C92080 * ae) +
                    C93231 * ae) +
              C92124 * (2 * C93182 + ae * C93232 +
                        C92167 * (C92263 + ae * C92167 * C92155 +
                                  C92167 * (ae * C92155 +
                                            C92167 * std::pow(C92015, 7) *
                                                bs[7] * C92254))))) /
        C91701;
    const double C42752 = C9772 * C42191;
    const double C75570 = C72415 * C42191;
    const double C88933 = C81993 * C42191;
    const double C7104 = C7101 + C7090;
    const double C48510 = C48507 + C48496;
    const double C8084 = C8081 + C8070;
    const double C28766 = C28764 + C28759;
    const double C54263 = C54261 + C54256;
    const double C49464 = C49461 + C49450;
    const double C62004 = C45718 * C9413;
    const double C72134 = C4079 * C9413;
    const double C37705 = C37695 + C37696;
    const double C37819 = C37817 + C37818;
    const double C71808 = C71801 + C9094;
    const double C40054 = C40042 + C40043;
    const double C40200 = C40198 + C40199;
    const double C61684 = C61677 + C50423;
    const double C58328 = C58324 + C58325;
    const double C61357 = C61347 + C61348;
    const double C68395 = C68387 + C68388;
    const double C71469 = C71459 + C71460;
    const double C13927 = C13924 + C13913;
    const double C85870 = C85867 + C85856;
    const double C45300 = C9603 * C14595;
    const double C91357 = C81840 * C14595;
    const double C73603 = C73601 + C73602;
    const double C73657 = C73655 + C73656;
    const double C45638 = C45635 + C45624;
    const double C91686 = C91683 + C91672;
    const double C46726 = C46725 + C46719;
    const double C47077 = C46837 * C275;
    const double C47093 = C47092 * C93673;
    const double C83562 = C83552 * C188;
    const double C83563 = C83553 * C93662;
    const double C83403 = C83402 + C83396;
    const double C15824 = C14994 * C808;
    const double C15812 = C14994 * C807;
    const double C17307 = C14994 * C806;
    const double C19286 = C14994 * C3409;
    const double C21678 = C14994 * C1389;
    const double C21668 = C14994 * C1388;
    const double C23437 = C14994 * C1387;
    const double C15821 = C14996 * C809;
    const double C15814 = C14996 * C806;
    const double C17309 = C14996 * C805;
    const double C19284 = C14996 * C3410;
    const double C21676 = C14996 * C1390;
    const double C21670 = C14996 * C1387;
    const double C23439 = C14996 * C1386;
    const double C32660 = C31830 * C808;
    const double C32648 = C31830 * C807;
    const double C34142 = C31830 * C806;
    const double C36107 = C31830 * C3409;
    const double C63672 = C31830 * C1389;
    const double C63662 = C31830 * C1388;
    const double C65417 = C31830 * C1387;
    const double C32657 = C31832 * C809;
    const double C32650 = C31832 * C806;
    const double C34144 = C31832 * C805;
    const double C36105 = C31832 * C3410;
    const double C63670 = C31832 * C1390;
    const double C63664 = C31832 * C1387;
    const double C65419 = C31832 * C1386;
    const double C46539 = C45719 * C4917;
    const double C46532 = C45719 * C808;
    const double C46528 = C45719 * C807;
    const double C48035 = C45719 * C809;
    const double C48031 = C45719 * C806;
    const double C49981 = C45719 * C3409;
    const double C49977 = C45719 * C5818;
    const double C52709 = C45719 * C1389;
    const double C52705 = C45719 * C5819;
    const double C52699 = C45719 * C1388;
    const double C53701 = C45719 * C3410;
    const double C54927 = C45719 * C1387;
    const double C83305 = C45719 * C11103;
    const double C84996 = C45719 * C1390;
    const double C4950 = C4940 + C4941;
    const double C4947 = C4933 + C4089;
    const double C4945 = C4929 + C4087;
    const double C6631 = C6623 + C4092;
    const double C6629 = C6619 + C4094;
    const double C8635 = C8628 + C5839;
    const double C8633 = C8624 + C5837;
    const double C11136 = C11126 + C11127;
    const double C11133 = C11119 + C5842;
    const double C11131 = C11115 + C5841;
    const double C13026 = C13018 + C9606;
    const double C13024 = C13014 + C7635;
    const double C14040 = C14034 + C5844;
    const double C28204 = C28200 + C7637;
    const double C37511 = C37507 * C93673;
    const double C37510 = C37506 * C93673;
    const double C57931 = C37506 * C93819;
    const double C67963 = C37506 * C62191;
    const double C37509 = C37505 * C93673;
    const double C41176 = C37505 * C9601;
    const double C57928 = C37505 * C93819;
    const double C67960 = C37505 * C62191;
    const double C87518 = C37505 * C93846;
    const double C37508 = C37504 * C93673;
    const double C41169 = C37504 * C9601;
    const double C57926 = C37504 * C93819;
    const double C67958 = C37504 * C62191;
    const double C87513 = C37504 * C93846;
    const double C38565 = C38562 * C93673;
    const double C38564 = C38561 * C93673;
    const double C59447 = C38561 * C93819;
    const double C69541 = C38561 * C62191;
    const double C38563 = C38560 * C93673;
    const double C42851 = C38560 * C9601;
    const double C59445 = C38560 * C93819;
    const double C69539 = C38560 * C62191;
    const double C89032 = C38560 * C93846;
    const double C39826 = C39823 * C93673;
    const double C41170 = C39823 * C9602;
    const double C44728 = C39823 * C9601;
    const double C57927 = C39823 * C93737;
    const double C61244 = C39823 * C93819;
    const double C67959 = C39823 * C93737;
    const double C71356 = C39823 * C62191;
    const double C87514 = C39823 * C93847;
    const double C90815 = C39823 * C93846;
    const double C39825 = C39822 * C93673;
    const double C41175 = C39822 * C9602;
    const double C57929 = C39822 * C93737;
    const double C61242 = C39822 * C93819;
    const double C67961 = C39822 * C93737;
    const double C71354 = C39822 * C62191;
    const double C87517 = C39822 * C93847;
    const double C39824 = C39821 * C93673;
    const double C57930 = C39821 * C93737;
    const double C67962 = C39821 * C93737;
    const double C41184 = C41182 * C9603;
    const double C61241 = C41182 * C93737;
    const double C71353 = C41182 * C93737;
    const double C87516 = C41182 * C81840;
    const double C41183 = C41181 * C9603;
    const double C44727 = C41181 * C9602;
    const double C61243 = C41181 * C93737;
    const double C71355 = C41181 * C93737;
    const double C87515 = C41181 * C81840;
    const double C90814 = C41181 * C93847;
    const double C44726 = C41999 * C9603;
    const double C90813 = C41999 * C81840;
    const double C42864 = C42862 * C9603;
    const double C89034 = C42862 * C81840;
    const double C42863 = C42861 * C9602;
    const double C59446 = C42861 * C93737;
    const double C69540 = C42861 * C93737;
    const double C89033 = C42861 * C93847;
    const double C59453 = C59452 * C93737;
    const double C69542 = C59452 * C93737;
    const double C46098 = C46076 * C110;
    const double C46083 = C46076 * C109;
    const double C48499 = C46076 * C806;
    const double C49453 = C46076 * C1387;
    const double C59008 = C46076 * C1389;
    const double C58998 = C46076 * C1388;
    const double C61673 = C46076 * C3409;
    const double C46095 = C46077 * C805;
    const double C46086 = C46077 * C806;
    const double C48497 = C46077 * C809;
    const double C49451 = C46077 * C3410;
    const double C59006 = C46077 * C5819;
    const double C59000 = C46077 * C3409;
    const double C61675 = C46077 * C5818;
    const double C4493 = C4487 + C4470;
    const double C4490 = C4484 + C4461;
    const double C7105 = C7102 + C7092;
    const double C8085 = C8082 + C8072;
    const double C69119 = C69113 + C69097;
    const double C69116 = C69110 + C69091;
    const double C71813 = C71810 + C71800;
    const double C15396 = C15390 + C15376;
    const double C15393 = C15387 + C15367;
    const double C15391 = C15385 + C15361;
    const double C17786 = C17782 + C17772;
    const double C17784 = C17780 + C17768;
    const double C18759 = C18755 + C18745;
    const double C18757 = C18753 + C18741;
    const double C27655 = C27649 + C27633;
    const double C27653 = C27647 + C27629;
    const double C27650 = C27644 + C27623;
    const double C28767 = C28765 + C28761;
    const double C31202 = C31200 + C31191;
    const double C88627 = C88625 + C88618;
    const double C91256 = C91254 + C91247;
    const double C32232 = C32226 + C32212;
    const double C32229 = C32223 + C32203;
    const double C32227 = C32221 + C32197;
    const double C34621 = C34617 + C34607;
    const double C34619 = C34615 + C34603;
    const double C35588 = C35584 + C35574;
    const double C35586 = C35582 + C35570;
    const double C42416 = C42410 + C42396;
    const double C42413 = C42407 + C42388;
    const double C42411 = C42405 + C42384;
    const double C44219 = C44217 + C44210;
    const double C45198 = C45194 + C45183;
    const double C45196 = C45192 + C45179;
    const double C54264 = C54262 + C54258;
    const double C82526 = C82504 * C110;
    const double C82511 = C82504 * C109;
    const double C84884 = C82504 * C806;
    const double C85859 = C82504 * C1387;
    const double C88189 = C82504 * C808;
    const double C88179 = C82504 * C807;
    const double C91675 = C82504 * C3409;
    const double C82523 = C82505 * C1386;
    const double C82514 = C82505 * C1387;
    const double C84882 = C82505 * C3410;
    const double C85857 = C82505 * C1390;
    const double C88187 = C82505 * C5818;
    const double C88181 = C82505 * C3409;
    const double C91673 = C82505 * C5819;
    const double C10343 = C10337 + C10320;
    const double C10340 = C10334 + C10311;
    const double C12911 = C12908 + C12898;
    const double C13928 = C13925 + C13915;
    const double C41898 = C41892 + C41876;
    const double C41895 = C41889 + C41870;
    const double C45639 = C45636 + C45626;
    const double C20912 = C20906 + C20892;
    const double C20909 = C20903 + C20883;
    const double C20907 = C20901 + C20877;
    const double C23338 = C23334 + C23324;
    const double C23336 = C23332 + C23320;
    const double C24340 = C24336 + C24326;
    const double C24338 = C24334 + C24322;
    const double C27095 = C27089 + C27073;
    const double C27093 = C27087 + C27069;
    const double C27090 = C27084 + C27063;
    const double C30509 = C30507 + C30503;
    const double C31751 = C31749 + C31741;
    const double C58579 = C58577 + C58571;
    const double C62117 = C62115 + C62109;
    const double C62907 = C62901 + C62887;
    const double C62904 = C62898 + C62878;
    const double C62902 = C62896 + C62872;
    const double C65318 = C65314 + C65304;
    const double C65316 = C65312 + C65300;
    const double C66320 = C66316 + C66306;
    const double C66318 = C66314 + C66302;
    const double C68668 = C68662 + C68648;
    const double C68665 = C68659 + C68640;
    const double C68663 = C68657 + C68636;
    const double C70363 = C70361 + C70354;
    const double C72257 = C72253 + C72243;
    const double C72255 = C72251 + C72239;
    const double C80594 = C80592 + C80588;
    const double C2071 = C2059 + C2060;
    const double C15127 = C15111 + C15112;
    const double C31963 = C31947 + C31948;
    const double C17666 = C17659 + C17660;
    const double C34501 = C34494 + C34495;
    const double C2871 = C2859 + C2860;
    const double C20384 = C20368 + C20369;
    const double C62379 = C62363 + C62364;
    const double C24114 = C24110 + C24111;
    const double C66094 = C66090 + C66091;
    const double C17550 = C2157 * C14991;
    const double C34385 = C2157 * C31827;
    const double C17321 = C17318 + C15007;
    const double C34156 = C34153 + C31843;
    const double C23558 = C2785 * C14991;
    const double C65538 = C2785 * C31827;
    const double C23451 = C23448 + C18312;
    const double C65431 = C65428 + C35147;
    const double C92121 = ae * C92120;
    const double C119 =
        (4 * C92075 + C92009 * C92120 + (3 * C92060 + C92009 * C92103) * ae) /
        C91696;
    const double C1984 = (C92124 * C92120) / C91696;
    const double C2698 = (C92167 * C92120) / C91696;
    const double C93138 = ae * C93137;
    const double C37561 =
        (4 * C92680 + C92124 * C93137 + (3 * C92671 + C92124 * C93127) * ae) /
        C91696;
    const double C39892 = (C92167 * C93137) / C91696;
    const double C93349 = ae * C93348;
    const double C73368 =
        (4 * C92979 + C92167 * C93348 + (3 * C92970 + C92167 * C93333) * ae) /
        C91696;
    const double C62007 = C62003 + C62004;
    const double C72137 = C72133 + C72134;
    const double C71811 = C71808 + C9094;
    const double C61574 = C40054 * C45718;
    const double C71698 = C40054 * C4079;
    const double C61687 = C61684 + C50423;
    const double C45305 = C45299 + C45300;
    const double C91362 = C91356 + C91357;
    const double C47094 = C47077 + C47093;
    const double C83568 = C83562 + C83563;
    const double C15835 = C15824 + C15825;
    const double C15830 = C15812 + C15004;
    const double C17316 = C17307 + C15009;
    const double C19293 = C19286 + C16594;
    const double C21688 = C21678 + C16598;
    const double C21683 = C21668 + C16597;
    const double C23446 = C23437 + C18310;
    const double C15834 = C15821 + C15822;
    const double C15831 = C15814 + C15005;
    const double C17317 = C17309 + C15008;
    const double C19292 = C19284 + C16593;
    const double C21687 = C21676 + C16599;
    const double C21684 = C21670 + C16596;
    const double C23447 = C23439 + C18311;
    const double C32671 = C32660 + C32661;
    const double C32666 = C32648 + C31840;
    const double C34151 = C34142 + C31845;
    const double C36114 = C36107 + C33430;
    const double C63682 = C63672 + C33434;
    const double C63677 = C63662 + C33433;
    const double C65426 = C65417 + C35145;
    const double C32670 = C32657 + C32658;
    const double C32667 = C32650 + C31841;
    const double C34152 = C34144 + C31844;
    const double C36113 = C36105 + C33429;
    const double C63681 = C63670 + C33435;
    const double C63678 = C63664 + C33432;
    const double C65427 = C65419 + C35146;
    const double C46549 = C46539 + C46540;
    const double C46546 = C46532 + C45728;
    const double C46544 = C46528 + C45726;
    const double C48043 = C48035 + C45731;
    const double C48041 = C48031 + C45733;
    const double C49988 = C49981 + C47320;
    const double C49986 = C49977 + C47318;
    const double C52720 = C52709 + C47323;
    const double C52718 = C52705 + C47325;
    const double C52715 = C52699 + C47322;
    const double C53705 = C53701 + C49035;
    const double C54935 = C54927 + C49033;
    const double C83310 = C83305 + C52711;
    const double C85002 = C84996 + C54931;
    const double C4956 = C4950 + C4941;
    const double C4953 = C4947 + C4089;
    const double C4951 = C4945 + C4087;
    const double C6635 = C6631 + C4092;
    const double C6633 = C6629 + C4094;
    const double C8639 = C8635 + C5839;
    const double C8637 = C8633 + C5837;
    const double C11142 = C11136 + C11127;
    const double C11139 = C11133 + C5842;
    const double C11137 = C11131 + C5841;
    const double C13030 = C13026 + C9606;
    const double C13028 = C13024 + C7635;
    const double C14042 = C14040 + C5844;
    const double C28206 = C28204 + C7637;
    const double C57932 = C57928 + C57929;
    const double C67964 = C67960 + C67961;
    const double C46109 = C46098 + C46099;
    const double C46104 = C46083 + C46084;
    const double C48506 = C48499 + C46915;
    const double C49460 = C49453 + C47627;
    const double C59018 = C59008 + C47631;
    const double C59013 = C58998 + C47630;
    const double C61682 = C61673 + C50421;
    const double C46108 = C46095 + C46096;
    const double C46105 = C46086 + C46087;
    const double C48505 = C48497 + C46914;
    const double C49459 = C49451 + C47626;
    const double C59017 = C59006 + C47632;
    const double C59014 = C59000 + C47629;
    const double C61683 = C61675 + C50422;
    const double C15397 = C15393 + C15394;
    const double C29971 = C18758 + C18759;
    const double C29970 = C18759 + C18758;
    const double C88614 = C27655 + C27654;
    const double C32233 = C32229 + C32230;
    const double C55478 = C35587 + C35588;
    const double C55477 = C35588 + C35587;
    const double C42417 = C42413 + C42414;
    const double C82537 = C82526 + C82527;
    const double C82532 = C82511 + C82512;
    const double C84891 = C84884 + C83218;
    const double C85866 = C85859 + C83955;
    const double C88199 = C88189 + C83222;
    const double C88194 = C88179 + C83221;
    const double C91682 = C91675 + C86767;
    const double C82536 = C82523 + C82524;
    const double C82533 = C82514 + C82515;
    const double C84890 = C84882 + C83217;
    const double C85865 = C85857 + C83954;
    const double C88198 = C88187 + C83223;
    const double C88195 = C88181 + C83220;
    const double C91681 = C91673 + C86768;
    const double C20913 = C20909 + C20910;
    const double C29303 = C23337 + C23338;
    const double C29302 = C23338 + C23337;
    const double C58567 = C27095 + C27094;
    const double C62908 = C62904 + C62905;
    const double C79396 = C65317 + C65318;
    const double C79395 = C65318 + C65317;
    const double C68669 = C68665 + C68666;
    const double C17324 = C17321 + C17312;
    const double C34159 = C34156 + C34147;
    const double C23454 = C23451 + C23442;
    const double C65434 = C65431 + C65422;
    const double C125 =
        (4 * (2 * C92069 + C92073 + C92073 + C92009 * C92112) + C92121 +
         C92121 +
         C92009 * (3 * C92112 + C92118 + C92118 +
                   C92009 * (2 * C92108 + C92114 + C92114 +
                             C92009 * (C92101 + C92107 + C92107 +
                                       C92009 * (2 * ae * C92094 +
                                                 C92009 *
                                                     (C92081 * C92082 +
                                                      C92013 * bs[7] *
                                                          std::pow(C92015, 7)) *
                                                     C92016))))) /
        C91701;
    const double C2057 =
        (C92121 +
         C92124 * (3 * C92163 + ae * C92164 +
                   C92009 * (2 * C92159 + ae * C92160 +
                             C92009 * (C92153 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92128))))) /
        C91701;
    const double C2228 =
        (C92121 +
         C92124 * (3 * C92228 + ae * C92164 +
                   C92009 * (2 * C92226 + ae * C92160 +
                             C92009 * (C92224 + ae * C92009 * C92155 +
                                       C92009 * (ae * C92155 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92212))))) /
        C91701;
    const double C2857 =
        (C92121 +
         C92167 * (3 * C92206 + ae * C92207 +
                   C92009 * (2 * C92202 + ae * C92203 +
                             C92009 * (C92196 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92171))))) /
        C91701;
    const double C3174 =
        (C92121 +
         C92167 * (3 * C92286 + ae * C92207 +
                   C92009 * (2 * C92284 + ae * C92203 +
                             C92009 * (C92282 + ae * C92009 * C92198 +
                                       C92009 * (ae * C92198 +
                                                 C92009 * std::pow(C92015, 7) *
                                                     bs[7] * C92270))))) /
        C91701;
    const double C138 = C107 * C119;
    const double C1990 = C107 * C1984;
    const double C15018 = C14999 * C1984;
    const double C31854 = C31835 * C1984;
    const double C2704 = C107 * C2698;
    const double C20201 = C14999 * C2698;
    const double C62196 = C31835 * C2698;
    const double C37756 =
        (4 * (2 * C92668 + C92678 + C92678 + C92124 * C93125) + C93138 +
         C93138 +
         C92124 * (3 * C93125 + C93135 + C93135 +
                   C92124 * (2 * C93116 + C93131 + C93131 +
                             C92124 * (C92247 + C93124 + C93124 +
                                       C92124 * (2 * ae * C92155 +
                                                 C92124 *
                                                     (C92081 * C92082 +
                                                      C92232 * bs[7] *
                                                          std::pow(C92015, 7)) *
                                                     C92016))))) /
        C91701;
    const double C40348 =
        (C93138 +
         C92167 * (3 * C93159 + ae * C93150 +
                   C92124 * (2 * C93157 + ae * C93146 +
                             C92124 * (C92300 + ae * C92124 * C92198 +
                                       C92124 * (ae * C92198 +
                                                 C92124 * std::pow(C92015, 7) *
                                                     bs[7] * C92291))))) /
        C91701;
    const double C37765 = C37065 * C37561;
    const double C40130 = C37065 * C39892;
    const double C58248 = C45817 * C39892;
    const double C68304 = C4178 * C39892;
    const double C73707 =
        (4 * (2 * C92967 + C92977 + C92977 + C92167 * C93338) + C93349 +
         C93349 +
         C92167 * (3 * C93338 + C93346 + C93346 +
                   C92167 * (2 * C93330 + C93342 + C93342 +
                             C92167 * (C92321 + C93337 + C93337 +
                                       C92167 * (2 * ae * C92198 +
                                                 C92167 *
                                                     (C92081 * C92082 +
                                                      C92306 * bs[7] *
                                                          std::pow(C92015, 7)) *
                                                     C92016))))) /
        C91701;
    const double C73716 = C72415 * C73368;
    const double C71814 = C71811 + C71802;
    const double C61690 = C61687 + C61678;
    const double C15841 = C15835 + C15825;
    const double C15836 = C15830 + C15004;
    const double C17319 = C17316 + C15009;
    const double C19296 = C19293 + C16594;
    const double C21694 = C21688 + C16598;
    const double C21689 = C21683 + C16597;
    const double C23449 = C23446 + C18310;
    const double C15840 = C15834 + C15822;
    const double C15837 = C15831 + C15005;
    const double C17320 = C17317 + C15008;
    const double C19295 = C19292 + C16593;
    const double C21693 = C21687 + C16599;
    const double C21690 = C21684 + C16596;
    const double C23450 = C23447 + C18311;
    const double C32677 = C32671 + C32661;
    const double C32672 = C32666 + C31840;
    const double C34154 = C34151 + C31845;
    const double C36117 = C36114 + C33430;
    const double C63688 = C63682 + C33434;
    const double C63683 = C63677 + C33433;
    const double C65429 = C65426 + C35145;
    const double C32676 = C32670 + C32658;
    const double C32673 = C32667 + C31841;
    const double C34155 = C34152 + C31844;
    const double C36116 = C36113 + C33429;
    const double C63687 = C63681 + C33435;
    const double C63684 = C63678 + C33432;
    const double C65430 = C65427 + C35146;
    const double C46555 = C46549 + C46540;
    const double C46552 = C46546 + C45728;
    const double C46550 = C46544 + C45726;
    const double C48047 = C48043 + C45731;
    const double C48045 = C48041 + C45733;
    const double C49992 = C49988 + C47320;
    const double C49990 = C49986 + C47318;
    const double C52726 = C52720 + C47323;
    const double C52724 = C52718 + C47325;
    const double C52721 = C52715 + C47322;
    const double C53707 = C53705 + C49035;
    const double C54937 = C54935 + C49033;
    const double C83312 = C83310 + C52711;
    const double C85004 = C85002 + C54931;
    const double C4962 = C4956 + C4942;
    const double C4959 = C4953 + C4934;
    const double C4957 = C4951 + C4930;
    const double C6639 = C6635 + C6624;
    const double C6637 = C6633 + C6620;
    const double C8643 = C8639 + C8629;
    const double C8641 = C8637 + C8625;
    const double C11148 = C11142 + C11128;
    const double C11145 = C11139 + C11120;
    const double C11143 = C11137 + C11116;
    const double C13034 = C13030 + C13019;
    const double C13032 = C13028 + C13015;
    const double C14044 = C14042 + C14035;
    const double C28208 = C28206 + C28201;
    const double C46115 = C46109 + C46099;
    const double C46110 = C46104 + C46084;
    const double C48509 = C48506 + C46915;
    const double C49463 = C49460 + C47627;
    const double C59024 = C59018 + C47631;
    const double C59019 = C59013 + C47630;
    const double C61685 = C61682 + C50421;
    const double C46114 = C46108 + C46096;
    const double C46111 = C46105 + C46087;
    const double C48508 = C48505 + C46914;
    const double C49462 = C49459 + C47626;
    const double C59023 = C59017 + C47632;
    const double C59020 = C59014 + C47629;
    const double C61686 = C61683 + C50422;
    const double C88621 = C88614 * C93582;
    const double C42418 = C42417 * C93582;
    const double C82543 = C82537 + C82527;
    const double C82538 = C82532 + C82512;
    const double C84894 = C84891 + C83218;
    const double C85869 = C85866 + C83955;
    const double C88205 = C88199 + C83222;
    const double C88200 = C88194 + C83221;
    const double C91685 = C91682 + C86767;
    const double C82542 = C82536 + C82524;
    const double C82539 = C82533 + C82515;
    const double C84893 = C84890 + C83217;
    const double C85868 = C85865 + C83954;
    const double C88204 = C88198 + C83223;
    const double C88201 = C88195 + C83220;
    const double C91684 = C91681 + C86768;
    const double C20914 = C20913 * C93662;
    const double C62909 = C62908 * C93662;
    const double C15847 = C15841 + C15826;
    const double C15842 = C15836 + C15813;
    const double C17322 = C17319 + C17308;
    const double C19299 = C19296 + C19287;
    const double C21700 = C21694 + C21679;
    const double C21695 = C21689 + C21669;
    const double C23452 = C23449 + C23438;
    const double C15846 = C15840 + C15823;
    const double C15843 = C15837 + C15815;
    const double C17323 = C17320 + C17310;
    const double C19298 = C19295 + C19285;
    const double C21699 = C21693 + C21677;
    const double C21696 = C21690 + C21671;
    const double C23453 = C23450 + C23440;
    const double C32683 = C32677 + C32662;
    const double C32678 = C32672 + C32649;
    const double C34157 = C34154 + C34143;
    const double C36120 = C36117 + C36108;
    const double C63694 = C63688 + C63673;
    const double C63689 = C63683 + C63663;
    const double C65432 = C65429 + C65418;
    const double C32682 = C32676 + C32659;
    const double C32679 = C32673 + C32651;
    const double C34158 = C34155 + C34145;
    const double C36119 = C36116 + C36106;
    const double C63693 = C63687 + C63671;
    const double C63690 = C63684 + C63665;
    const double C65433 = C65430 + C65420;
    const double C46561 = C46555 + C46541;
    const double C46558 = C46552 + C46533;
    const double C46556 = C46550 + C46529;
    const double C48051 = C48047 + C48036;
    const double C48049 = C48045 + C48032;
    const double C49996 = C49992 + C49982;
    const double C49994 = C49990 + C49978;
    const double C52732 = C52726 + C52710;
    const double C52730 = C52724 + C52706;
    const double C52727 = C52721 + C52700;
    const double C53709 = C53707 + C53702;
    const double C54939 = C54937 + C54928;
    const double C83314 = C83312 + C83306;
    const double C85006 = C85004 + C84997;
    const double C4963 = C4959 + C4960;
    const double C30641 = C8642 + C8643;
    const double C30640 = C8643 + C8642;
    const double C11149 = C11145 + C11146;
    const double C46121 = C46115 + C46100;
    const double C46116 = C46110 + C46085;
    const double C48512 = C48509 + C48500;
    const double C49466 = C49463 + C49454;
    const double C59030 = C59024 + C59009;
    const double C59025 = C59019 + C58999;
    const double C61688 = C61685 + C61674;
    const double C46120 = C46114 + C46097;
    const double C46117 = C46111 + C46088;
    const double C48511 = C48508 + C48498;
    const double C49465 = C49462 + C49452;
    const double C59029 = C59023 + C59007;
    const double C59026 = C59020 + C59001;
    const double C61689 = C61686 + C61676;
    const double C82549 = C82543 + C82528;
    const double C82544 = C82538 + C82513;
    const double C84897 = C84894 + C84885;
    const double C85872 = C85869 + C85860;
    const double C88211 = C88205 + C88190;
    const double C88206 = C88200 + C88180;
    const double C91688 = C91685 + C91676;
    const double C82548 = C82542 + C82525;
    const double C82545 = C82539 + C82516;
    const double C84896 = C84893 + C84883;
    const double C85871 = C85868 + C85858;
    const double C88210 = C88204 + C88188;
    const double C88207 = C88201 + C88182;
    const double C91687 = C91684 + C91674;
    const double C46562 = C46558 + C46559;
    const double C56138 = C49995 + C49996;
    const double C56137 = C49996 + C49995;
    const double C83302 = C52732 + C52731;
    const double C4964 = C4963 * C93673;
    const double C46563 = C46562 * C93673;
    d2eexx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93673 * C93818 +
                     (C15842 + C15843 + C15844) * C93673 * C93711) *
                        C93635 * C1979 -
                    ((C15845 + C15846 + C15847) * C93673 * C93711 +
                     (C15844 + C15843 + C15842) * C93673 * C93818) *
                        C93635 * C1980) *
                       C1981 +
                   (((C17322 + C17323 + C17324) * C93673 * C93818 +
                     (C14994 * C809 + C17313 + C17313 + C93842 * C825 +
                      C14996 * C810 + C17314 + C17314 + C93843 * C826 +
                      C14998 * C811 + C17315 + C17315 + C14991 * C827) *
                         C93673 * C93711) *
                        C93635 * C1980 -
                    ((C17324 + C17323 + C17322) * C93673 * C93711 +
                     (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                      C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                      C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                         C93673 * C93818) *
                        C93635 * C1979) *
                       C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C14995 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93842 +
            (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
            C15131 * C14999 + C15132 * C14991) *
               C93673 * C93635 * C1979 -
           ((C17439 + C17440) * C14991 + (C17441 + C17442) * C14999 +
            (C17443 + C17444) * C93843 + (C17445 + C17446) * C14997 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93842 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C14995) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C17446 + C17445) * C14995 + (C17444 + C17443) * C93842 +
            (C17442 + C17441) * C14997 + (C17440 + C17439) * C93843 +
            (C15092 * C804 + C93818 * C886 + C15093 * C811 + C93711 * C893) *
                C14999 +
            (C15092 * C812 + C93818 * C894 + C15093 * C819 + C93711 * C901) *
                C14991) *
               C93673 * C93635 * C1980 -
           ((C15127 + C15128) * C14991 + (C15129 + C15130) * C14999 +
            (C15126 + C15125) * C93843 + (C15124 + C15123) * C14997 +
            (C15122 + C15121) * C93842 + (C15120 + C15119) * C14995) *
               C93673 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C14995 +
             (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
             C306 * C93843 + C307 * C14999 + C308 * C14991) *
                C93818 +
            (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
               C93635 * C1979 -
           ((C16002 + C16003 + C16004 + C16005 + C16006 + C16007) * C93711 +
            (C16001 + C16000 + C15999 + C15998 + C15997 + C15996) * C93818) *
               C93635 * C1980) *
              C1981 +
          (((C17545 + C17546 + C17547 + C17548 + C17549 + C17550) * C93818 +
            (C4298 * C14995 + C4299 * C93842 + C4301 * C14997 + C4300 * C93843 +
             (C275 * C811 + C93673 * C959) * C14999 +
             (C275 * C819 + C93673 * C967) * C14991) *
                C93711) *
               C93635 * C1980 -
           ((C17550 + C17549 + C17548 + C17547 + C17546 + C17545) * C93711 +
            (C310 * C14991 + C309 * C14999 + C308 * C93843 + C307 * C14997 +
             C306 * C93842 + C305 * C14995) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C15092 +
                     (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                      C93843 * C363 + C14999 * C191 + C14991 * C364) *
                         C93818 +
                     (C16106 + C16107 + C16108) * C15093 +
                     (C16109 + C16110 + C16111) * C93711) *
                        C93673 * C93635 * C1979 -
                    ((C16112 + C16113 + C16114) * C93711 +
                     (C16115 + C16116 + C16117) * C15093 +
                     (C16111 + C16110 + C16109) * C93818 +
                     (C16108 + C16107 + C16106) * C15092) *
                        C93673 * C93635 * C1980) *
                       C1981 +
                   (((C17661 + C17662 + C17663) * C15092 +
                     (C17664 + C17665 + C17666) * C93818 +
                     (C14995 * C809 + C93842 * C817 + C14997 * C810 +
                      C93843 * C818 + C14999 * C811 + C14991 * C819) *
                         C15093 +
                     (C14995 * C891 + C93842 * C1023 + C14997 * C892 +
                      C93843 * C1024 + C14999 * C893 + C14991 * C1025) *
                         C93711) *
                        C93673 * C93635 * C1980 -
                    ((C17666 + C17665 + C17664) * C93711 +
                     (C17663 + C17662 + C17661) * C15093 +
                     (C14999 * C192 + C14991 * C365 + C14997 * C191 +
                      C93843 * C364 + C14995 * C190 + C93842 * C363) *
                         C93818 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C15092) *
                        C93673 * C93635 * C1979) *
                       C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                      C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                         C93842 +
                     (C15391 + C15392) * C93843 + C15397 * C14991) *
                        C93673 * C93635 * C1979 -
                    ((C17783 + C17784) * C14991 + (C17785 + C17786) * C93843 +
                     (C15355 * C808 + C16196 + C16196 + C93711 * C1080 +
                      C15354 * C807 + C16197 + C16197 + C93818 * C1079) *
                         C93842) *
                        C93673 * C93635 * C1980) *
                       C1981 +
                   (((C17786 + C17785) * C93842 + (C17784 + C17783) * C93843 +
                     (C15354 * C804 + C17773 + C17773 + C93818 * C1076 +
                      C15355 * C811 + C17774 + C17774 + C93711 * C1083) *
                         C14991) *
                        C93673 * C93635 * C1980 -
                    ((C15395 + C15396) * C14991 + (C15394 + C15393) * C93843 +
                     (C15392 + C15391) * C93842) *
                        C93673 * C93635 * C1979) *
                       C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C15092 +
             (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
             C5460 * C93711) *
                C93842 +
            (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
               C93635 * C1979 -
           ((C17885 + C17886 + C17887 + C17888) * C14991 +
            (C17889 + C17890 + C17891 + C17892) * C93843 +
            (C5461 * C93711 + C5151 * C15093 + C5460 * C93818 +
             C5149 * C15092) *
                C93842) *
               C93635 * C1980) *
              C1981 +
          (((C17892 + C17891 + C17890 + C17889) * C93842 +
            (C17888 + C17887 + C17886 + C17885) * C93843 +
            (C2158 * C15092 + C2389 * C93818 +
             (C275 * C811 + C93673 * C959) * C15093 +
             (C275 * C893 + C93673 * C1149) * C93711) *
                C14991) *
               C93635 * C1980 -
           ((C15480 + C15481 + C15482 + C15483) * C14991 +
            (C15479 + C15478 + C15477 + C15476) * C93843 +
            (C15475 + C15474 + C15473 + C15472) * C93842) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C275 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93673) *
                         C93818 +
                     ((C16106 + C16107 + C16108) * C275 +
                      (C16364 + C16365 + C16366) * C93673) *
                         C93711) *
                        C93635 * C1979 -
                    (((C16367 + C16368 + C16369) * C93673 +
                      (C16115 + C16116 + C16117) * C275) *
                         C93711 +
                     ((C16366 + C16365 + C16364) * C93673 +
                      (C16108 + C16107 + C16106) * C275) *
                         C93818) *
                        C93635 * C1980) *
                       C1981 +
                   ((((C17661 + C17662 + C17663) * C275 +
                      (C17997 + C17998 + C17999) * C93673) *
                         C93818 +
                     ((C14995 * C809 + C93842 * C817 + C14997 * C810 +
                       C93843 * C818 + C14999 * C811 + C14991 * C819) *
                          C275 +
                      (C14995 * C957 + C93842 * C1205 + C14997 * C958 +
                       C93843 * C1206 + C14999 * C959 + C14991 * C1207) *
                          C93673) *
                         C93711) *
                        C93635 * C1980 -
                    (((C17999 + C17998 + C17997) * C93673 +
                      (C17663 + C17662 + C17661) * C275) *
                         C93711 +
                     ((C14999 * C279 + C14991 * C582 + C14997 * C278 +
                       C93843 * C581 + C14995 * C277 + C93842 * C580) *
                          C93673 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C275) *
                         C93818) *
                        C93635 * C1979) *
                       C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C275 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93673) *
                C93842 +
            ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
            C15656 * C14991) *
               C93635 * C1979 -
           (((C18106 + C18107) * C93673 + (C17441 + C17442) * C275) * C14991 +
            ((C18108 + C18109) * C93673 + (C17445 + C17446) * C275) * C93843 +
            ((C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C93673 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C275) *
                C93842) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C275 + (C18109 + C18108) * C93673) * C93842 +
            ((C17442 + C17441) * C275 + (C18107 + C18106) * C93673) * C93843 +
            ((C15092 * C804 + C93818 * C886 + C15093 * C811 + C93711 * C893) *
                 C275 +
             (C15092 * C952 + C93818 * C1258 + C15093 * C959 + C93711 * C1265) *
                 C93673) *
                C14991) *
               C93635 * C1980 -
           (((C15652 + C15653) * C93673 + (C15129 + C15130) * C275) * C14991 +
            ((C15651 + C15650) * C93673 + (C15124 + C15123) * C275) * C93843 +
            ((C15649 + C15648) * C93673 + (C15120 + C15119) * C275) * C93842) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
                      C5740 * C93711) *
                         C93842 +
                     (C15731 + C15732) * C93843 + C15737 * C14991) *
                        C93635 * C1979 -
                    ((C18208 + C18209) * C14991 + (C18210 + C18211) * C93843 +
                     (C5741 * C93711 + C5740 * C93818) * C93842) *
                        C93635 * C1980) *
                       C1981 +
                   (((C18211 + C18210) * C93842 + (C18209 + C18208) * C93843 +
                     (C2624 * C93818 +
                      (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93711) *
                         C14991) *
                        C93635 * C1980 -
                    ((C15735 + C15736) * C14991 + (C15734 + C15733) * C93843 +
                     (C15732 + C15731) * C93842) *
                        C93635 * C1979) *
                       C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93673 * C93818 +
                     (C15842 + C15843 + C15844) * C93673 * C93711) *
                        C2695 -
                    ((C19297 + C19298 + C19299) * C93673 * C93711 +
                     (C14998 * C1386 + C16595 + C16595 + C14991 * C1402 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14994 * C1388 + C16597 + C16597 + C93842 * C1404) *
                         C93673 * C93818) *
                        C2696) *
                       C1979 +
                   (((C19299 + C19298 + C19297) * C93673 * C93818 +
                     (C14994 * C5818 + C19288 + C19288 + C93842 * C5830 +
                      C14996 * C5817 + C19289 + C19289 + C93843 * C5829 +
                      C14998 * C7631 + C19290 + C19290 + C14991 * C7633) *
                         C93673 * C93711) *
                        C2696 -
                    ((C15845 + C15846 + C15847) * C93673 * C93711 +
                     (C15844 + C15843 + C15842) * C93673 * C93818) *
                        C2695) *
                       C1980) *
                  C93609) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C14995 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93842 +
            (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
            C15131 * C14999 + C15132 * C14991) *
               C93673 * C2695 -
           ((C18430 + C18431) * C14991 + (C18432 + C18433) * C14999 +
            (C18434 + C18435) * C93843 + (C18436 + C18437) * C14997 +
            (C15093 * C3413 + C93711 * C3495 + C15092 * C1396 +
             C93818 * C1478) *
                C93842 +
            (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 +
             C93818 * C1470) *
                C14995) *
               C93673 * C2696) *
              C1979 +
          (((C15092 * C3409 + C93818 * C3491 + C15093 * C5818 +
             C93711 * C5922) *
                C14995 +
            (C15092 * C3413 + C93818 * C3495 + C15093 * C5824 +
             C93711 * C5928) *
                C93842 +
            (C15092 * C3410 + C93818 * C3492 + C15093 * C5817 +
             C93711 * C5921) *
                C14997 +
            (C15092 * C3414 + C93818 * C3496 + C15093 * C5823 +
             C93711 * C5927) *
                C93843 +
            (C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
             C93711 * C7738) *
                C14999 +
            (C15092 * C3415 + C93818 * C3497 + C15093 * C7632 +
             C93711 * C7739) *
                C14991) *
               C93673 * C2696 -
           ((C17439 + C17440) * C14991 + (C17441 + C17442) * C14999 +
            (C17443 + C17444) * C93843 + (C17445 + C17446) * C14997 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93842 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C14995) *
               C93673 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C14995 +
             (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
             C306 * C93843 + C307 * C14999 + C308 * C14991) *
                C93818 +
            (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
               C2695 -
           ((C19496 + C19497 + C19498 + C19499 + C19500 + C19501) * C93711 +
            (C2873 * C14991 + C2874 * C14999 + C2875 * C93843 + C2876 * C14997 +
             (C275 * C1396 + C93673 * C1544) * C93842 +
             (C275 * C1388 + C93673 * C1536) * C14995) *
                C93818) *
               C2696) *
              C1979 +
          (((C19501 + C19500 + C19499 + C19498 + C19497 + C19496) * C93818 +
            (C8861 * C14995 + C8860 * C93842 + C7868 * C14997 + C7867 * C93843 +
             (C275 * C7631 + C93673 * C7856) * C14999 +
             (C275 * C7632 + C93673 * C7857) * C14991) *
                C93711) *
               C2696 -
           ((C16002 + C16003 + C16004 + C16005 + C16006 + C16007) * C93711 +
            (C16001 + C16000 + C15999 + C15998 + C15997 + C15996) * C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C15092 +
                     (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                      C93843 * C363 + C14999 * C191 + C14991 * C364) *
                         C93818 +
                     (C16106 + C16107 + C16108) * C15093 +
                     (C16109 + C16110 + C16111) * C93711) *
                        C93673 * C2695 -
                    ((C19612 + C19613 + C19614) * C93711 +
                     (C19615 + C19616 + C19617) * C15093 +
                     (C14999 * C1468 + C14991 * C1600 + C14997 * C1469 +
                      C93843 * C1601 + C14995 * C1470 + C93842 * C1602) *
                         C93818 +
                     (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                      C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                         C15092) *
                        C93673 * C2696) *
                       C1979 +
                   (((C19617 + C19616 + C19615) * C15092 +
                     (C19614 + C19613 + C19612) * C93818 +
                     (C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                      C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                         C15093 +
                     (C14995 * C5922 + C93842 * C6094 + C14997 * C5921 +
                      C93843 * C6093 + C14999 * C7738 + C14991 * C7968) *
                         C93711) *
                        C93673 * C2696 -
                    ((C16112 + C16113 + C16114) * C93711 +
                     (C16115 + C16116 + C16117) * C15093 +
                     (C16111 + C16110 + C16109) * C93818 +
                     (C16108 + C16107 + C16106) * C15092) *
                        C93673 * C2695) *
                       C1980) *
                  C93609) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                      C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                         C93842 +
                     (C15391 + C15392) * C93843 + C15397 * C14991) *
                        C93673 * C2695 -
                    ((C18756 + C18757) * C14991 + (C18758 + C18759) * C93843 +
                     (C15355 * C3409 + C16904 + C16904 + C93711 * C3709 +
                      C15354 * C1388 + C16905 + C16905 + C93818 * C1660) *
                         C93842) *
                        C93673 * C2696) *
                       C1979 +
                   (((C15354 * C3409 + C19716 + C19716 + C93818 * C3709 +
                      C15355 * C5818 + C19717 + C19717 + C93711 * C6174) *
                         C93842 +
                     (C15354 * C3410 + C19718 + C19718 + C93818 * C3710 +
                      C15355 * C5817 + C19719 + C19719 + C93711 * C6173) *
                         C93843 +
                     (C15354 * C3411 + C19720 + C19720 + C93818 * C3711 +
                      C15355 * C7631 + C19721 + C19721 + C93711 * C8067) *
                         C14991) *
                        C93673 * C2696 -
                    ((C17783 + C17784) * C14991 + (C17785 + C17786) * C93843 +
                     (C15355 * C808 + C16196 + C16196 + C93711 * C1080 +
                      C15354 * C807 + C16197 + C16197 + C93818 * C1079) *
                         C93842) *
                        C93673 * C2695) *
                       C1980) *
                  C93609) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C15092 +
             (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
             C5460 * C93711) *
                C93842 +
            (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
               C2695 -
           ((C18868 + C18860 + C18861 + C18862) * C14991 +
            (C18863 + C18864 + C18865 + C18866) * C93843 +
            (C9203 * C93711 + C8863 * C15093 +
             (C275 * C1470 + C93673 * C1726) * C93818 +
             (C275 * C1388 + C93673 * C1536) * C15092) *
                C93842) *
               C2696) *
              C1979 +
          (((C8863 * C15092 + C9203 * C93818 + C8861 * C15093 +
             C9202 * C93711) *
                C93842 +
            (C7870 * C15092 + C8195 * C93818 + C7868 * C15093 +
             C8194 * C93711) *
                C93843 +
            (C18541 * C15092 + C18867 * C93818 +
             (C275 * C7631 + C93673 * C7856) * C15093 +
             (C275 * C7738 + C93673 * C8184) * C93711) *
                C14991) *
               C2696 -
           ((C17885 + C17886 + C17887 + C17888) * C14991 +
            (C17889 + C17890 + C17891 + C17892) * C93843 +
            (C5461 * C93711 + C5151 * C15093 + C5460 * C93818 +
             C5149 * C15092) *
                C93842) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C275 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93673) *
                         C93818 +
                     ((C16106 + C16107 + C16108) * C275 +
                      (C16364 + C16365 + C16366) * C93673) *
                         C93711) *
                        C2695 -
                    (((C19924 + C19925 + C19926) * C93673 +
                      (C19615 + C19616 + C19617) * C275) *
                         C93711 +
                     ((C14999 * C1534 + C14991 * C1782 + C14997 * C1535 +
                       C93843 * C1783 + C14995 * C1536 + C93842 * C1784) *
                          C93673 +
                      (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                       C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                          C275) *
                         C93818) *
                        C2696) *
                       C1979 +
                   ((((C19617 + C19616 + C19615) * C275 +
                      (C19926 + C19925 + C19924) * C93673) *
                         C93818 +
                     ((C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                       C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                          C275 +
                      (C14995 * C6008 + C93842 * C6346 + C14997 * C6007 +
                       C93843 * C6345 + C14999 * C7856 + C14991 * C8295) *
                          C93673) *
                         C93711) *
                        C2696 -
                    (((C16367 + C16368 + C16369) * C93673 +
                      (C16115 + C16116 + C16117) * C275) *
                         C93711 +
                     ((C16366 + C16365 + C16364) * C93673 +
                      (C16108 + C16107 + C16106) * C275) *
                         C93818) *
                        C2695) *
                       C1980) *
                  C93609) /
                 (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C275 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93673) *
                C93842 +
            ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
            C15656 * C14991) *
               C2695 -
           (((C19073 + C19074) * C93673 + (C18432 + C18433) * C275) * C14991 +
            ((C19075 + C19076) * C93673 + (C18436 + C18437) * C275) * C93843 +
            ((C15093 * C3565 + C93711 * C3923 + C15092 * C1536 +
              C93818 * C1842) *
                 C93673 +
             (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 +
              C93818 * C1470) *
                 C275) *
                C93842) *
               C2696) *
              C1979 +
          ((((C15092 * C3409 + C93818 * C3491 + C15093 * C5818 +
              C93711 * C5922) *
                 C275 +
             (C15092 * C3565 + C93818 * C3923 + C15093 * C6008 +
              C93711 * C6426) *
                 C93673) *
                C93842 +
            ((C15092 * C3410 + C93818 * C3492 + C15093 * C5817 +
              C93711 * C5921) *
                 C275 +
             (C15092 * C3566 + C93818 * C3924 + C15093 * C6007 +
              C93711 * C6425) *
                 C93673) *
                C93843 +
            ((C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
              C93711 * C7738) *
                 C275 +
             (C15092 * C3567 + C93818 * C3925 + C15093 * C7856 +
              C93711 * C8394) *
                 C93673) *
                C14991) *
               C2696 -
           (((C18106 + C18107) * C93673 + (C17441 + C17442) * C275) * C14991 +
            ((C18108 + C18109) * C93673 + (C17445 + C17446) * C275) * C93843 +
            ((C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C93673 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C275) *
                C93842) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
             C5740 * C93711) *
                C93842 +
            (C15731 + C15732) * C93843 + C15737 * C14991) *
               C2695 -
           ((C19183 + C19177) * C14991 + (C19178 + C19179) * C93843 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93818) *
                C93842) *
               C2696) *
              C1979 +
          (((C9527 * C93818 + C9526 * C93711) * C93842 +
            (C8515 * C93818 + C8514 * C93711) * C93843 +
            (C19182 * C93818 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C93711) *
                C14991) *
               C2696 -
           ((C18208 + C18209) * C14991 + (C18210 + C18211) * C93843 +
            (C5741 * C93711 + C5740 * C93818) * C93842) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                     C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                     C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                        C93673 * C93818 +
                    (C15842 + C15843 + C15844) * C93673 * C93711) *
                       C93635 * C800 -
                   ((C15845 + C15846 + C15847) * C93673 * C93711 +
                    (C15844 + C15843 + C15842) * C93673 * C93818) *
                       C93635 * C801 +
                   ((C15847 + C15846 + C15845) * C93673 * C93818 +
                    (C14994 * C4917 + C15827 + C15827 + C93842 * C4925 +
                     C14996 * C4916 + C15828 + C15828 + C93843 * C4924 +
                     C14998 * C6615 + C15829 + C15829 + C14991 * C6617) *
                        C93673 * C93711) *
                       C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                     C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                     C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                        C93673 * C93818 +
                    (C14994 * C807 + C15004 + C15004 + C93842 * C823 +
                     C14996 * C806 + C15005 + C15005 + C93843 * C822 +
                     C14998 * C805 + C15006 + C15006 + C14991 * C821) *
                        C93673 * C93711) *
                       C93635 * C93621 * C97 -
                   ((C14998 * C804 + C15007 + C15007 + C14991 * C820 +
                     C14996 * C805 + C15008 + C15008 + C93843 * C821 +
                     C14994 * C806 + C15009 + C15009 + C93842 * C822) *
                        C93673 * C93711 +
                    (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                     C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                     C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                        C93673 * C93818) *
                       C93635 * C93621 * C98 +
                   ((C14994 * C110 + C15013 + C15013 + C93842 * C122 +
                     C14996 * C111 + C15014 + C15014 + C93843 * C123 +
                     C14998 * C112 + C15015 + C15015 + C14991 * C124) *
                        C93673 * C93818 +
                    (C14994 * C805 + C15016 + C15016 + C93842 * C821 +
                     C14996 * C804 + C15017 + C15017 + C93843 * C820 +
                     C14998 * C1983 + C15018 + C15018 + C14991 * C1985) *
                        C93673 * C93711) *
                       C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                     C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                     C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                        C93673 * C93818 +
                    (C15842 + C15843 + C15844) * C93673 * C93711) *
                       C1382 -
                   ((C14998 * C3411 + C16592 + C16592 + C14991 * C3419 +
                     C14996 * C3410 + C16593 + C16593 + C93843 * C3418 +
                     C14994 * C3409 + C16594 + C16594 + C93842 * C3417) *
                        C93673 * C93711 +
                    (C14998 * C1386 + C16595 + C16595 + C14991 * C1402 +
                     C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                     C14994 * C1388 + C16597 + C16597 + C93842 * C1404) *
                        C93673 * C93818) *
                       C1383 +
                   ((C14994 * C1389 + C16598 + C16598 + C93842 * C1405 +
                     C14996 * C1390 + C16599 + C16599 + C93843 * C1406 +
                     C14998 * C1391 + C16600 + C16600 + C14991 * C1407) *
                        C93673 * C93818 +
                    (C14994 * C5819 + C16601 + C16601 + C93842 * C5831 +
                     C14996 * C5820 + C16602 + C16602 + C93843 * C5832 +
                     C14998 * C12033 + C16603 + C16603 + C14991 * C12035) *
                        C93673 * C93711) *
                       C1384) *
                  C93621 * C93609) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C14995 +
           (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
               C93842 +
           (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
           C15131 * C14999 + C15132 * C14991) *
              C93673 * C93635 * C800 -
          ((C15093 * C818 + C93711 * C900 + C15092 * C813 + C93818 * C895) *
               C14991 +
           (C15093 * C810 + C93711 * C892 + C15092 * C805 + C93818 * C887) *
               C14999 +
           (C15093 * C817 + C93711 * C899 + C15092 * C814 + C93818 * C896) *
               C93843 +
           (C15093 * C809 + C93711 * C891 + C15092 * C806 + C93818 * C888) *
               C14997 +
           (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
               C93842 +
           (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
               C14995) *
              C93673 * C93635 * C801 +
          ((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
               C14995 +
           (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
               C93842 +
           (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
               C14997 +
           (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
               C93843 +
           (C15092 * C810 + C93818 * C892 + C15093 * C6615 + C93711 * C6738) *
               C14999 +
           (C15092 * C818 + C93818 * C900 + C15093 * C6616 + C93711 * C6739) *
               C14991) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C14995 +
           (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
               C93842 +
           (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
           C15131 * C14999 + C15132 * C14991) *
              C93673 * C93635 * C93621 * C97 -
          ((C15127 + C15128) * C14991 + (C15129 + C15130) * C14999 +
           (C15126 + C15125) * C93843 + (C15124 + C15123) * C14997 +
           (C15122 + C15121) * C93842 + (C15120 + C15119) * C14995) *
              C93673 * C93635 * C93621 * C98 +
          (C15131 * C14995 + C15132 * C93842 + (C15130 + C15129) * C14997 +
           (C15128 + C15127) * C93843 +
           (C15092 * C112 + C93818 * C193 + C15093 * C1983 + C93711 * C2056) *
               C14999 +
           (C15092 * C118 + C93818 * C199 + C15093 * C1984 + C93711 * C2057) *
               C14991) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C14995 +
           (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
               C93842 +
           (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
           C15131 * C14999 + C15132 * C14991) *
              C93673 * C1382 -
          ((C15093 * C3415 + C93711 * C3497 + C15092 * C1394 + C93818 * C1476) *
               C14991 +
           (C15093 * C3411 + C93711 * C3493 + C15092 * C1386 + C93818 * C1468) *
               C14999 +
           (C15093 * C3414 + C93711 * C3496 + C15092 * C1395 + C93818 * C1477) *
               C93843 +
           (C15093 * C3410 + C93711 * C3492 + C15092 * C1387 + C93818 * C1469) *
               C14997 +
           (C15093 * C3413 + C93711 * C3495 + C15092 * C1396 + C93818 * C1478) *
               C93842 +
           (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 + C93818 * C1470) *
               C14995) *
              C93673 * C1383 +
          ((C15092 * C1389 + C93818 * C1471 + C15093 * C5819 + C93711 * C5923) *
               C14995 +
           (C15092 * C1397 + C93818 * C1479 + C15093 * C5825 + C93711 * C5929) *
               C93842 +
           (C15092 * C1390 + C93818 * C1472 + C15093 * C5820 + C93711 * C5925) *
               C14997 +
           (C15092 * C1398 + C93818 * C1480 + C15093 * C5826 + C93711 * C5931) *
               C93843 +
           (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
            C93711 * C12136) *
               C14999 +
           (C15092 * C1399 + C93818 * C1481 + C15093 * C12034 +
            C93711 * C12137) *
               C14991) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C14995 +
            (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
            C306 * C93843 + C307 * C14999 + C308 * C14991) *
               C93818 +
           (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
              C93635 * C800 -
          ((C16002 + C16003 + C16004 + C16005 + C16006 + C16007) * C93711 +
           (C16001 + C16000 + C15999 + C15998 + C15997 + C15996) * C93818) *
              C93635 * C801 +
          ((C16007 + C16006 + C16005 + C16004 + C16003 + C16002) * C93818 +
           (C5156 * C14995 + C5155 * C93842 + C5154 * C14997 + C5153 * C93843 +
            (C275 * C6615 + C93673 * C6856) * C14999 +
            (C275 * C6616 + C93673 * C6857) * C14991) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C14995 +
            (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
            C306 * C93843 + C307 * C14999 + C308 * C14991) *
               C93818 +
           (C5149 * C14995 + C5150 * C93842 + C2162 * C14997 + C2161 * C93843 +
            C2160 * C14999 + C2159 * C14991) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C2157 * C14991 + C2158 * C14999 + C2159 * C93843 + C2160 * C14997 +
            C2161 * C93842 + C2162 * C14995) *
               C93711 +
           (C310 * C14991 + C309 * C14999 + C308 * C93843 + C307 * C14997 +
            C306 * C93842 + C305 * C14995) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C307 * C14995 + C308 * C93842 + C309 * C14997 + C310 * C93843 +
            C312 * C14999 + C311 * C14991) *
               C93818 +
           (C2160 * C14995 + C2159 * C93842 + C2158 * C14997 + C2157 * C93843 +
            (C275 * C1983 + C93673 * C2142) * C14999 +
            (C275 * C1984 + C93673 * C2143) * C14991) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C14995 +
            (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
            C306 * C93843 + C307 * C14999 + C308 * C14991) *
               C93818 +
           (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
              C1382 -
          (((C275 * C3415 + C93673 * C3571) * C14991 +
            (C275 * C3411 + C93673 * C3567) * C14999 + C7869 * C93843 +
            C7870 * C14997 + C8862 * C93842 + C8863 * C14995) *
               C93711 +
           (C2873 * C14991 + C2874 * C14999 + C2875 * C93843 + C2876 * C14997 +
            (C275 * C1396 + C93673 * C1544) * C93842 +
            (C275 * C1388 + C93673 * C1536) * C14995) *
               C93818) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C14995 +
            (C275 * C1397 + C93673 * C1545) * C93842 +
            (C275 * C1390 + C93673 * C1538) * C14997 +
            (C275 * C1398 + C93673 * C1546) * C93843 +
            (C275 * C1391 + C93673 * C1539) * C14999 +
            (C275 * C1399 + C93673 * C1547) * C14991) *
               C93818 +
           ((C275 * C5819 + C93673 * C6009) * C14995 +
            (C275 * C5825 + C93673 * C6015) * C93842 +
            (C275 * C5820 + C93673 * C6010) * C14997 +
            (C275 * C5826 + C93673 * C6016) * C93843 +
            (C275 * C12033 + C93673 * C12248) * C14999 +
            (C275 * C12034 + C93673 * C12249) * C14991) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                     C93843 * C115 + C14999 * C110 + C14991 * C116) *
                        C15092 +
                    (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                     C93843 * C363 + C14999 * C191 + C14991 * C364) *
                        C93818 +
                    (C16106 + C16107 + C16108) * C15093 +
                    (C16109 + C16110 + C16111) * C93711) *
                       C93673 * C93635 * C800 -
                   ((C16112 + C16113 + C16114) * C93711 +
                    (C16115 + C16116 + C16117) * C15093 +
                    (C16111 + C16110 + C16109) * C93818 +
                    (C16108 + C16107 + C16106) * C15092) *
                       C93673 * C93635 * C801 +
                   ((C16117 + C16116 + C16115) * C15092 +
                    (C16114 + C16113 + C16112) * C93818 +
                    (C14995 * C4917 + C93842 * C4921 + C14997 * C4916 +
                     C93843 * C4920 + C14999 * C6615 + C14991 * C6616) *
                        C15093 +
                    (C14995 * C5039 + C93842 * C5242 + C14997 * C5038 +
                     C93843 * C5241 + C14999 * C6738 + C14991 * C6964) *
                        C93711) *
                       C93673 * C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                     C93843 * C115 + C14999 * C110 + C14991 * C116) *
                        C15092 +
                    (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                     C93843 * C363 + C14999 * C191 + C14991 * C364) *
                        C93818 +
                    (C14995 * C807 + C93842 * C815 + C14997 * C806 +
                     C93843 * C814 + C14999 * C805 + C14991 * C813) *
                        C15093 +
                    (C14995 * C889 + C93842 * C1021 + C14997 * C888 +
                     C93843 * C1020 + C14999 * C887 + C14991 * C1019) *
                        C93711) *
                       C93673 * C93635 * C93621 * C97 -
                   ((C14999 * C886 + C14991 * C1018 + C14997 * C887 +
                     C93843 * C1019 + C14995 * C888 + C93842 * C1020) *
                        C93711 +
                    (C14999 * C804 + C14991 * C812 + C14997 * C805 +
                     C93843 * C813 + C14995 * C806 + C93842 * C814) *
                        C15093 +
                    (C14999 * C192 + C14991 * C365 + C14997 * C191 +
                     C93843 * C364 + C14995 * C190 + C93842 * C363) *
                        C93818 +
                    (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                     C93843 * C116 + C14995 * C109 + C93842 * C115) *
                        C15092) *
                       C93673 * C93635 * C93621 * C98 +
                   ((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                     C93843 * C117 + C14999 * C112 + C14991 * C118) *
                        C15092 +
                    (C14995 * C191 + C93842 * C364 + C14997 * C192 +
                     C93843 * C365 + C14999 * C193 + C14991 * C366) *
                        C93818 +
                    (C14995 * C805 + C93842 * C813 + C14997 * C804 +
                     C93843 * C812 + C14999 * C1983 + C14991 * C1984) *
                        C15093 +
                    (C14995 * C887 + C93842 * C1019 + C14997 * C886 +
                     C93843 * C1018 + C14999 * C2056 + C14991 * C2228) *
                        C93711) *
                       C93673 * C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                     C93843 * C115 + C14999 * C110 + C14991 * C116) *
                        C15092 +
                    (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                     C93843 * C363 + C14999 * C191 + C14991 * C364) *
                        C93818 +
                    (C16106 + C16107 + C16108) * C15093 +
                    (C16109 + C16110 + C16111) * C93711) *
                       C93673 * C1382 -
                   ((C14999 * C3493 + C14991 * C3641 + C14997 * C3492 +
                     C93843 * C3640 + C14995 * C3491 + C93842 * C3639) *
                        C93711 +
                    (C14999 * C3411 + C14991 * C3415 + C14997 * C3410 +
                     C93843 * C3414 + C14995 * C3409 + C93842 * C3413) *
                        C15093 +
                    (C14999 * C1468 + C14991 * C1600 + C14997 * C1469 +
                     C93843 * C1601 + C14995 * C1470 + C93842 * C1602) *
                        C93818 +
                    (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                     C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                        C15092) *
                       C93673 * C1383 +
                   ((C14995 * C1389 + C93842 * C1397 + C14997 * C1390 +
                     C93843 * C1398 + C14999 * C1391 + C14991 * C1399) *
                        C15092 +
                    (C14995 * C1471 + C93842 * C1603 + C14997 * C1472 +
                     C93843 * C1604 + C14999 * C1473 + C14991 * C1605) *
                        C93818 +
                    (C14995 * C5819 + C93842 * C5825 + C14997 * C5820 +
                     C93843 * C5826 + C14999 * C12033 + C14991 * C12034) *
                        C15093 +
                    (C14995 * C5923 + C93842 * C6095 + C14997 * C5925 +
                     C93843 * C6096 + C14999 * C12136 + C14991 * C12366) *
                        C93711) *
                       C93673 * C1384) *
                  C93621 * C93609) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                     C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                        C93842 +
                    (C15391 + C15392) * C93843 + C15397 * C14991) *
                       C93673 * C93635 * C800 -
                   ((C15355 * C810 + C16192 + C16192 + C93711 * C1082 +
                     C15354 * C805 + C16193 + C16193 + C93818 * C1077) *
                        C14991 +
                    (C15355 * C809 + C16194 + C16194 + C93711 * C1081 +
                     C15354 * C806 + C16195 + C16195 + C93818 * C1078) *
                        C93843 +
                    (C15355 * C808 + C16196 + C16196 + C93711 * C1080 +
                     C15354 * C807 + C16197 + C16197 + C93818 * C1079) *
                        C93842) *
                       C93673 * C93635 * C801 +
                   ((C15354 * C808 + C16198 + C16198 + C93818 * C1080 +
                     C15355 * C4917 + C16199 + C16199 + C93711 * C5358) *
                        C93842 +
                    (C15354 * C809 + C16200 + C16200 + C93818 * C1081 +
                     C15355 * C4916 + C16201 + C16201 + C93711 * C5357) *
                        C93843 +
                    (C15354 * C810 + C16202 + C16202 + C93818 * C1082 +
                     C15355 * C6615 + C16203 + C16203 + C93711 * C7087) *
                        C14991) *
                       C93673 * C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                     C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                        C93842 +
                    (C15391 + C15392) * C93843 + C15397 * C14991) *
                       C93673 * C93635 * C93621 * C97 -
                   ((C15395 + C15396) * C14991 + (C15394 + C15393) * C93843 +
                    (C15392 + C15391) * C93842) *
                       C93673 * C93635 * C93621 * C98 +
                   (C15397 * C93842 + (C15396 + C15395) * C93843 +
                    (C15354 * C112 + C15377 + C15377 + C93818 * C423 +
                     C15355 * C1983 + C15378 + C15378 + C93711 * C2295) *
                        C14991) *
                       C93673 * C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                     C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                        C93842 +
                    (C15391 + C15392) * C93843 + C15397 * C14991) *
                       C93673 * C1382 -
                   ((C15355 * C3411 + C16900 + C16900 + C93711 * C3711 +
                     C15354 * C1386 + C16901 + C16901 + C93818 * C1658) *
                        C14991 +
                    (C15355 * C3410 + C16902 + C16902 + C93711 * C3710 +
                     C15354 * C1387 + C16903 + C16903 + C93818 * C1659) *
                        C93843 +
                    (C15355 * C3409 + C16904 + C16904 + C93711 * C3709 +
                     C15354 * C1388 + C16905 + C16905 + C93818 * C1660) *
                        C93842) *
                       C93673 * C1383 +
                   ((C15354 * C1389 + C16906 + C16906 + C93818 * C1661 +
                     C15355 * C5819 + C16907 + C16907 + C93711 * C6175) *
                        C93842 +
                    (C15354 * C1390 + C16908 + C16908 + C93818 * C1662 +
                     C15355 * C5820 + C16909 + C16909 + C93711 * C6177) *
                        C93843 +
                    (C15354 * C1391 + C16910 + C16910 + C93818 * C1663 +
                     C15355 * C12033 + C16911 + C16911 + C93711 * C12465) *
                        C14991) *
                       C93673 * C1384) *
                  C93621 * C93609) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C15092 +
            (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
            C5460 * C93711) *
               C93842 +
           (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
              C93635 * C800 -
          ((C4584 * C93711 + C4301 * C15093 + C2390 * C93818 + C2160 * C15092) *
               C14991 +
           (C4583 * C93711 + C4298 * C15093 + C2391 * C93818 + C2162 * C15092) *
               C93843 +
           (C5461 * C93711 + C5151 * C15093 + C5460 * C93818 + C5149 * C15092) *
               C93842) *
              C93635 * C801 +
          ((C5151 * C15092 + C5461 * C93818 + C5156 * C15093 + C5463 * C93711) *
               C93842 +
           (C4298 * C15092 + C4583 * C93818 + C5154 * C15093 + C5462 * C93711) *
               C93843 +
           (C4301 * C15092 + C4584 * C93818 +
            (C275 * C6615 + C93673 * C6856) * C15093 +
            (C275 * C6738 + C93673 * C7204) * C93711) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C15092 +
            (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
            C5460 * C93711) *
               C93842 +
           (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
              C93635 * C93621 * C97 -
          ((C15480 + C15481 + C15482 + C15483) * C14991 +
           (C15479 + C15478 + C15477 + C15476) * C93843 +
           (C15475 + C15474 + C15473 + C15472) * C93842) *
              C93635 * C93621 * C98 +
          (C15486 * C93842 + (C15483 + C15482 + C15481 + C15480) * C93843 +
           (C312 * C15092 + C523 * C93818 +
            (C275 * C1983 + C93673 * C2142) * C15093 +
            (C275 * C2056 + C93673 * C2378) * C93711) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C15092 +
            (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
            C5460 * C93711) *
               C93842 +
           (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
              C1382 -
          (((C275 * C3493 + C93673 * C3785) * C93711 +
            (C275 * C3411 + C93673 * C3567) * C15093 + C3104 * C93818 +
            C2874 * C15092) *
               C14991 +
           (C8195 * C93711 + C7870 * C15093 + C3105 * C93818 + C2876 * C15092) *
               C93843 +
           (C9203 * C93711 + C8863 * C15093 +
            (C275 * C1470 + C93673 * C1726) * C93818 +
            (C275 * C1388 + C93673 * C1536) * C15092) *
               C93842) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C15092 +
            (C275 * C1471 + C93673 * C1727) * C93818 +
            (C275 * C5819 + C93673 * C6009) * C15093 +
            (C275 * C5923 + C93673 * C6267) * C93711) *
               C93842 +
           ((C275 * C1390 + C93673 * C1538) * C15092 +
            (C275 * C1472 + C93673 * C1728) * C93818 +
            (C275 * C5820 + C93673 * C6010) * C15093 +
            (C275 * C5925 + C93673 * C6269) * C93711) *
               C93843 +
           ((C275 * C1391 + C93673 * C1539) * C15092 +
            (C275 * C1473 + C93673 * C1729) * C93818 +
            (C275 * C12033 + C93673 * C12248) * C15093 +
            (C275 * C12136 + C93673 * C12575) * C93711) *
               C14991) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C275 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93673) *
                        C93818 +
                    ((C16106 + C16107 + C16108) * C275 +
                     (C16364 + C16365 + C16366) * C93673) *
                        C93711) *
                       C93635 * C800 -
                   (((C16367 + C16368 + C16369) * C93673 +
                     (C16115 + C16116 + C16117) * C275) *
                        C93711 +
                    ((C16366 + C16365 + C16364) * C93673 +
                     (C16108 + C16107 + C16106) * C275) *
                        C93818) *
                       C93635 * C801 +
                   (((C16117 + C16116 + C16115) * C275 +
                     (C16369 + C16368 + C16367) * C93673) *
                        C93818 +
                    ((C14995 * C4917 + C93842 * C4921 + C14997 * C4916 +
                      C93843 * C4920 + C14999 * C6615 + C14991 * C6616) *
                         C275 +
                     (C14995 * C5121 + C93842 * C5538 + C14997 * C5120 +
                      C93843 * C5537 + C14999 * C6856 + C14991 * C7309) *
                         C93673) *
                        C93711) *
                       C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C275 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93673) *
                        C93818 +
                    ((C14995 * C807 + C93842 * C815 + C14997 * C806 +
                      C93843 * C814 + C14999 * C805 + C14991 * C813) *
                         C275 +
                     (C14995 * C955 + C93842 * C1203 + C14997 * C954 +
                      C93843 * C1202 + C14999 * C953 + C14991 * C1201) *
                         C93673) *
                        C93711) *
                       C93635 * C93621 * C97 -
                   (((C14999 * C952 + C14991 * C1200 + C14997 * C953 +
                      C93843 * C1201 + C14995 * C954 + C93842 * C1202) *
                         C93673 +
                     (C14999 * C804 + C14991 * C812 + C14997 * C805 +
                      C93843 * C813 + C14995 * C806 + C93842 * C814) *
                         C275) *
                        C93711 +
                    ((C14999 * C279 + C14991 * C582 + C14997 * C278 +
                      C93843 * C581 + C14995 * C277 + C93842 * C580) *
                         C93673 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C275) *
                        C93818) *
                       C93635 * C93621 * C98 +
                   (((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                      C93843 * C117 + C14999 * C112 + C14991 * C118) *
                         C275 +
                     (C14995 * C278 + C93842 * C581 + C14997 * C279 +
                      C93843 * C582 + C14999 * C280 + C14991 * C583) *
                         C93673) *
                        C93818 +
                    ((C14995 * C805 + C93842 * C813 + C14997 * C804 +
                      C93843 * C812 + C14999 * C1983 + C14991 * C1984) *
                         C275 +
                     (C14995 * C953 + C93842 * C1201 + C14997 * C952 +
                      C93843 * C1200 + C14999 * C2142 + C14991 * C2460) *
                         C93673) *
                        C93711) *
                       C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C275 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93673) *
                        C93818 +
                    ((C16106 + C16107 + C16108) * C275 +
                     (C16364 + C16365 + C16366) * C93673) *
                        C93711) *
                       C1382 -
                   (((C14999 * C3567 + C14991 * C3855 + C14997 * C3566 +
                      C93843 * C3854 + C14995 * C3565 + C93842 * C3853) *
                         C93673 +
                     (C14999 * C3411 + C14991 * C3415 + C14997 * C3410 +
                      C93843 * C3414 + C14995 * C3409 + C93842 * C3413) *
                         C275) *
                        C93711 +
                    ((C14999 * C1534 + C14991 * C1782 + C14997 * C1535 +
                      C93843 * C1783 + C14995 * C1536 + C93842 * C1784) *
                         C93673 +
                     (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                      C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                         C275) *
                        C93818) *
                       C1383 +
                   (((C14995 * C1389 + C93842 * C1397 + C14997 * C1390 +
                      C93843 * C1398 + C14999 * C1391 + C14991 * C1399) *
                         C275 +
                     (C14995 * C1537 + C93842 * C1785 + C14997 * C1538 +
                      C93843 * C1786 + C14999 * C1539 + C14991 * C1787) *
                         C93673) *
                        C93818 +
                    ((C14995 * C5819 + C93842 * C5825 + C14997 * C5820 +
                      C93843 * C5826 + C14999 * C12033 + C14991 * C12034) *
                         C275 +
                     (C14995 * C6009 + C93842 * C6347 + C14997 * C6010 +
                      C93843 * C6348 + C14999 * C12248 + C14991 * C12683) *
                         C93673) *
                        C93711) *
                       C1384) *
                  C93621 * C93609) /
                     (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C275 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93673) *
               C93842 +
           ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
           C15656 * C14991) *
              C93635 * C800 -
          (((C15093 * C958 + C93711 * C1264 + C15092 * C953 + C93818 * C1259) *
                C93673 +
            (C15093 * C810 + C93711 * C892 + C15092 * C805 + C93818 * C887) *
                C275) *
               C14991 +
           ((C15093 * C957 + C93711 * C1263 + C15092 * C954 + C93818 * C1260) *
                C93673 +
            (C15093 * C809 + C93711 * C891 + C15092 * C806 + C93818 * C888) *
                C275) *
               C93843 +
           ((C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93673 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C275) *
               C93842) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C275 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C93673) *
               C93842 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C275 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C93673) *
               C93843 +
           ((C15092 * C810 + C93818 * C892 + C15093 * C6615 + C93711 * C6738) *
                C275 +
            (C15092 * C958 + C93818 * C1264 + C15093 * C6856 + C93711 * C7420) *
                C93673) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C275 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93673) *
               C93842 +
           ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
           C15656 * C14991) *
              C93635 * C93621 * C97 -
          (((C15652 + C15653) * C93673 + (C15129 + C15130) * C275) * C14991 +
           ((C15651 + C15650) * C93673 + (C15124 + C15123) * C275) * C93843 +
           ((C15649 + C15648) * C93673 + (C15120 + C15119) * C275) * C93842) *
              C93635 * C93621 * C98 +
          (C15656 * C93842 +
           ((C15130 + C15129) * C275 + (C15653 + C15652) * C93673) * C93843 +
           ((C15092 * C112 + C93818 * C193 + C15093 * C1983 + C93711 * C2056) *
                C275 +
            (C15092 * C280 + C93818 * C639 + C15093 * C2142 + C93711 * C2527) *
                C93673) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C275 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93673) *
               C93842 +
           ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
           C15656 * C14991) *
              C1382 -
          (((C15093 * C3567 + C93711 * C3925 + C15092 * C1534 +
             C93818 * C1840) *
                C93673 +
            (C15093 * C3411 + C93711 * C3493 + C15092 * C1386 +
             C93818 * C1468) *
                C275) *
               C14991 +
           ((C15093 * C3566 + C93711 * C3924 + C15092 * C1535 +
             C93818 * C1841) *
                C93673 +
            (C15093 * C3410 + C93711 * C3492 + C15092 * C1387 +
             C93818 * C1469) *
                C275) *
               C93843 +
           ((C15093 * C3565 + C93711 * C3923 + C15092 * C1536 +
             C93818 * C1842) *
                C93673 +
            (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 +
             C93818 * C1470) *
                C275) *
               C93842) *
              C1383 +
          (((C15092 * C1389 + C93818 * C1471 + C15093 * C5819 +
             C93711 * C5923) *
                C275 +
            (C15092 * C1537 + C93818 * C1843 + C15093 * C6009 +
             C93711 * C6427) *
                C93673) *
               C93842 +
           ((C15092 * C1390 + C93818 * C1472 + C15093 * C5820 +
             C93711 * C5925) *
                C275 +
            (C15092 * C1538 + C93818 * C1844 + C15093 * C6010 +
             C93711 * C6429) *
                C93673) *
               C93843 +
           ((C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
             C93711 * C12136) *
                C275 +
            (C15092 * C1539 + C93818 * C1845 + C15093 * C12248 +
             C93711 * C12782) *
                C93673) *
               C14991) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
            C5740 * C93711) *
               C93842 +
           (C15731 + C15732) * C93843 + C15737 * C14991) *
              C93635 * C800 -
          ((C4840 * C93711 + C2625 * C93818) * C14991 +
           (C4839 * C93711 + C2626 * C93818) * C93843 +
           (C5741 * C93711 + C5740 * C93818) * C93842) *
              C93635 * C801 +
          ((C5741 * C93818 + C5743 * C93711) * C93842 +
           (C4839 * C93818 + C5742 * C93711) * C93843 +
           (C4840 * C93818 +
            (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
            C5740 * C93711) *
               C93842 +
           (C15731 + C15732) * C93843 + C15737 * C14991) *
              C93635 * C93621 * C97 -
          ((C15735 + C15736) * C14991 + (C15734 + C15733) * C93843 +
           (C15732 + C15731) * C93842) *
              C93635 * C93621 * C98 +
          (C15737 * C93842 + (C15736 + C15735) * C93843 +
           (C746 * C93818 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
            C5740 * C93711) *
               C93842 +
           (C15731 + C15732) * C93843 + C15737 * C14991) *
              C1382 -
          (((C713 * C3411 + C4000 + C4000 + C93673 * C3995) * C93711 +
            C3339 * C93818) *
               C14991 +
           (C8515 * C93711 + C3340 * C93818) * C93843 +
           (C9527 * C93711 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93818) *
               C93842) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C93818 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C93711) *
               C93842 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C93818 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C93711) *
               C93843 +
           ((C713 * C1391 + C1912 + C1912 + C93673 * C1903) * C93818 +
            (C713 * C12033 + C17208 + C17208 + C93673 * C12893) * C93711) *
               C14991) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93673 * C93818 +
                     (C15842 + C15843 + C15844) * C93673 * C93711) *
                        C2695 -
                    ((C14998 * C3411 + C16592 + C16592 + C14991 * C3419 +
                      C14996 * C3410 + C16593 + C16593 + C93843 * C3418 +
                      C14994 * C3409 + C16594 + C16594 + C93842 * C3417) *
                         C93673 * C93711 +
                     (C14998 * C1386 + C16595 + C16595 + C14991 * C1402 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14994 * C1388 + C16597 + C16597 + C93842 * C1404) *
                         C93673 * C93818) *
                        C2696) *
                       C93621 * C1981 +
                   (((C14994 * C1387 + C18310 + C18310 + C93842 * C1403 +
                      C14996 * C1386 + C18311 + C18311 + C93843 * C1402 +
                      C14998 * C1385 + C18312 + C18312 + C14991 * C1401) *
                         C93673 * C93818 +
                     (C14994 * C3410 + C18313 + C18313 + C93842 * C3418 +
                      C14996 * C3411 + C18314 + C18314 + C93843 * C3419 +
                      C14998 * C3412 + C18315 + C18315 + C14991 * C3420) *
                         C93673 * C93711) *
                        C2696 -
                    ((C17324 + C17323 + C17322) * C93673 * C93711 +
                     (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                      C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                      C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                         C93673 * C93818) *
                        C2695) *
                       C93621 * C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C14995 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93842 +
            (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
            C15131 * C14999 + C15132 * C14991) *
               C93673 * C2695 -
           ((C18430 + C18431) * C14991 + (C18432 + C18433) * C14999 +
            (C18434 + C18435) * C93843 + (C18436 + C18437) * C14997 +
            (C15093 * C3413 + C93711 * C3495 + C15092 * C1396 +
             C93818 * C1478) *
                C93842 +
            (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 +
             C93818 * C1470) *
                C14995) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C18437 + C18436) * C14995 + (C18435 + C18434) * C93842 +
            (C18433 + C18432) * C14997 + (C18431 + C18430) * C93843 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C14999 +
            (C15092 * C1393 + C93818 * C1475 + C15093 * C3416 +
             C93711 * C3498) *
                C14991) *
               C93673 * C2696 -
           ((C15127 + C15128) * C14991 + (C15129 + C15130) * C14999 +
            (C15126 + C15125) * C93843 + (C15124 + C15123) * C14997 +
            (C15122 + C15121) * C93842 + (C15120 + C15119) * C14995) *
               C93673 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C14995 +
             (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
             C306 * C93843 + C307 * C14999 + C308 * C14991) *
                C93818 +
            (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
               C2695 -
           ((C18540 * C14991 + C18541 * C14999 + C7869 * C93843 +
             C7870 * C14997 + C8862 * C93842 + C8863 * C14995) *
                C93711 +
            (C2873 * C14991 + C2874 * C14999 + C2875 * C93843 + C2876 * C14997 +
             (C275 * C1396 + C93673 * C1544) * C93842 +
             (C275 * C1388 + C93673 * C1536) * C14995) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C14995 + C2875 * C93842 + C2874 * C14997 + C2873 * C93843 +
             C2872 * C14999 + C2871 * C14991) *
                C93818 +
            (C7870 * C14995 + C7869 * C93842 + C18541 * C14997 +
             C18540 * C93843 + (C275 * C3412 + C93673 * C3568) * C14999 +
             (C275 * C3416 + C93673 * C3572) * C14991) *
                C93711) *
               C2696 -
           ((C17550 + C17549 + C17548 + C17547 + C17546 + C17545) * C93711 +
            (C310 * C14991 + C309 * C14999 + C308 * C93843 + C307 * C14997 +
             C306 * C93842 + C305 * C14995) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C15092 +
                     (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                      C93843 * C363 + C14999 * C191 + C14991 * C364) *
                         C93818 +
                     (C16106 + C16107 + C16108) * C15093 +
                     (C16109 + C16110 + C16111) * C93711) *
                        C93673 * C2695 -
                    ((C14999 * C3493 + C14991 * C3641 + C14997 * C3492 +
                      C93843 * C3640 + C14995 * C3491 + C93842 * C3639) *
                         C93711 +
                     (C14999 * C3411 + C14991 * C3415 + C14997 * C3410 +
                      C93843 * C3414 + C14995 * C3409 + C93842 * C3413) *
                         C15093 +
                     (C14999 * C1468 + C14991 * C1600 + C14997 * C1469 +
                      C93843 * C1601 + C14995 * C1470 + C93842 * C1602) *
                         C93818 +
                     (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                      C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                         C15092) *
                        C93673 * C2696) *
                       C93621 * C1981 +
                   (((C14995 * C1387 + C93842 * C1395 + C14997 * C1386 +
                      C93843 * C1394 + C14999 * C1385 + C14991 * C1393) *
                         C15092 +
                     (C14995 * C1469 + C93842 * C1601 + C14997 * C1468 +
                      C93843 * C1600 + C14999 * C1467 + C14991 * C1599) *
                         C93818 +
                     (C14995 * C3410 + C93842 * C3414 + C14997 * C3411 +
                      C93843 * C3415 + C14999 * C3412 + C14991 * C3416) *
                         C15093 +
                     (C14995 * C3492 + C93842 * C3640 + C14997 * C3493 +
                      C93843 * C3641 + C14999 * C3494 + C14991 * C3642) *
                         C93711) *
                        C93673 * C2696 -
                    ((C17666 + C17665 + C17664) * C93711 +
                     (C17663 + C17662 + C17661) * C15093 +
                     (C14999 * C192 + C14991 * C365 + C14997 * C191 +
                      C93843 * C364 + C14995 * C190 + C93842 * C363) *
                         C93818 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C15092) *
                        C93673 * C2695) *
                       C93621 * C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                      C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                         C93842 +
                     (C15391 + C15392) * C93843 + C15397 * C14991) *
                        C93673 * C2695 -
                    ((C18756 + C18757) * C14991 + (C18758 + C18759) * C93843 +
                     (C15355 * C3409 + C16904 + C16904 + C93711 * C3709 +
                      C15354 * C1388 + C16905 + C16905 + C93818 * C1660) *
                         C93842) *
                        C93673 * C2696) *
                       C93621 * C1981 +
                   (((C18759 + C18758) * C93842 + (C18757 + C18756) * C93843 +
                     (C15354 * C1385 + C18746 + C18746 + C93818 * C1657 +
                      C15355 * C3412 + C18747 + C18747 + C93711 * C3712) *
                         C14991) *
                        C93673 * C2696 -
                    ((C15395 + C15396) * C14991 + (C15394 + C15393) * C93843 +
                     (C15392 + C15391) * C93842) *
                        C93673 * C2695) *
                       C93621 * C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C15092 +
             (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
             C5460 * C93711) *
                C93842 +
            (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
               C2695 -
           ((C18868 + C18860 + C18861 + C18862) * C14991 +
            (C18863 + C18864 + C18865 + C18866) * C93843 +
            (C9203 * C93711 + C8863 * C15093 +
             (C275 * C1470 + C93673 * C1726) * C93818 +
             (C275 * C1388 + C93673 * C1536) * C15092) *
                C93842) *
               C2696) *
              C93621 * C1981 +
          (((C18866 + C18865 + C18864 + C18863) * C93842 +
            (C18862 + C18861 + C18860 + C18868) * C93843 +
            (C2872 * C15092 + C3103 * C93818 +
             (C275 * C3412 + C93673 * C3568) * C15093 +
             (C275 * C3494 + C93673 * C3786) * C93711) *
                C14991) *
               C2696 -
           ((C15480 + C15481 + C15482 + C15483) * C14991 +
            (C15479 + C15478 + C15477 + C15476) * C93843 +
            (C15475 + C15474 + C15473 + C15472) * C93842) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C275 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93673) *
                         C93818 +
                     ((C16106 + C16107 + C16108) * C275 +
                      (C16364 + C16365 + C16366) * C93673) *
                         C93711) *
                        C2695 -
                    (((C14999 * C3567 + C14991 * C3855 + C14997 * C3566 +
                       C93843 * C3854 + C14995 * C3565 + C93842 * C3853) *
                          C93673 +
                      (C14999 * C3411 + C14991 * C3415 + C14997 * C3410 +
                       C93843 * C3414 + C14995 * C3409 + C93842 * C3413) *
                          C275) *
                         C93711 +
                     ((C14999 * C1534 + C14991 * C1782 + C14997 * C1535 +
                       C93843 * C1783 + C14995 * C1536 + C93842 * C1784) *
                          C93673 +
                      (C14999 * C1386 + C14991 * C1394 + C14997 * C1387 +
                       C93843 * C1395 + C14995 * C1388 + C93842 * C1396) *
                          C275) *
                         C93818) *
                        C2696) *
                       C93621 * C1981 +
                   ((((C14995 * C1387 + C93842 * C1395 + C14997 * C1386 +
                       C93843 * C1394 + C14999 * C1385 + C14991 * C1393) *
                          C275 +
                      (C14995 * C1535 + C93842 * C1783 + C14997 * C1534 +
                       C93843 * C1782 + C14999 * C1533 + C14991 * C1781) *
                          C93673) *
                         C93818 +
                     ((C14995 * C3410 + C93842 * C3414 + C14997 * C3411 +
                       C93843 * C3415 + C14999 * C3412 + C14991 * C3416) *
                          C275 +
                      (C14995 * C3566 + C93842 * C3854 + C14997 * C3567 +
                       C93843 * C3855 + C14999 * C3568 + C14991 * C3856) *
                          C93673) *
                         C93711) *
                        C2696 -
                    (((C17999 + C17998 + C17997) * C93673 +
                      (C17663 + C17662 + C17661) * C275) *
                         C93711 +
                     ((C14999 * C279 + C14991 * C582 + C14997 * C278 +
                       C93843 * C581 + C14995 * C277 + C93842 * C580) *
                          C93673 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C275) *
                         C93818) *
                        C2695) *
                       C93621 * C1982)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C275 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93673) *
                C93842 +
            ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
            C15656 * C14991) *
               C2695 -
           (((C19073 + C19074) * C93673 + (C18432 + C18433) * C275) * C14991 +
            ((C19075 + C19076) * C93673 + (C18436 + C18437) * C275) * C93843 +
            ((C15093 * C3565 + C93711 * C3923 + C15092 * C1536 +
              C93818 * C1842) *
                 C93673 +
             (C15093 * C3409 + C93711 * C3491 + C15092 * C1388 +
              C93818 * C1470) *
                 C275) *
                C93842) *
               C2696) *
              C93621 * C1981 +
          ((((C18437 + C18436) * C275 + (C19076 + C19075) * C93673) * C93842 +
            ((C18433 + C18432) * C275 + (C19074 + C19073) * C93673) * C93843 +
            ((C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
              C93711 * C3494) *
                 C275 +
             (C15092 * C1533 + C93818 * C1839 + C15093 * C3568 +
              C93711 * C3926) *
                 C93673) *
                C14991) *
               C2696 -
           (((C15652 + C15653) * C93673 + (C15129 + C15130) * C275) * C14991 +
            ((C15651 + C15650) * C93673 + (C15124 + C15123) * C275) * C93843 +
            ((C15649 + C15648) * C93673 + (C15120 + C15119) * C275) * C93842) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
             C5740 * C93711) *
                C93842 +
            (C15731 + C15732) * C93843 + C15737 * C14991) *
               C2695 -
           ((C19183 + C19177) * C14991 + (C19178 + C19179) * C93843 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93818) *
                C93842) *
               C2696) *
              C93621 * C1981 +
          (((C19179 + C19178) * C93842 + (C19177 + C19183) * C93843 +
            (C3338 * C93818 +
             (C713 * C3412 + C4001 + C4001 + C93673 * C3996) * C93711) *
                C14991) *
               C2696 -
           ((C15735 + C15736) * C14991 + (C15734 + C15733) * C93843 +
            (C15732 + C15731) * C93842) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                     C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                     C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                        C93673 * C93818 +
                    (C14994 * C807 + C15004 + C15004 + C93842 * C823 +
                     C14996 * C806 + C15005 + C15005 + C93843 * C822 +
                     C14998 * C805 + C15006 + C15006 + C14991 * C821) *
                        C93673 * C93711) *
                       C93635 * C93621 * C97 -
                   ((C14998 * C804 + C15007 + C15007 + C14991 * C820 +
                     C14996 * C805 + C15008 + C15008 + C93843 * C821 +
                     C14994 * C806 + C15009 + C15009 + C93842 * C822) *
                        C93673 * C93711 +
                    (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                     C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                     C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                        C93673 * C93818) *
                       C93635 * C93621 * C98 +
                   ((C14994 * C110 + C15013 + C15013 + C93842 * C122 +
                     C14996 * C111 + C15014 + C15014 + C93843 * C123 +
                     C14998 * C112 + C15015 + C15015 + C14991 * C124) *
                        C93673 * C93818 +
                    (C14994 * C805 + C15016 + C15016 + C93842 * C821 +
                     C14996 * C804 + C15017 + C15017 + C93843 * C820 +
                     C14998 * C1983 + C15018 + C15018 + C14991 * C1985) *
                        C93673 * C93711) *
                       C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                     C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                     C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                        C93673 * C93818 +
                    (C15842 + C15843 + C15844) * C93673 * C93711) *
                       C93635 * C800 -
                   ((C15845 + C15846 + C15847) * C93673 * C93711 +
                    (C15844 + C15843 + C15842) * C93673 * C93818) *
                       C93635 * C801 +
                   ((C15847 + C15846 + C15845) * C93673 * C93818 +
                    (C14994 * C4917 + C15827 + C15827 + C93842 * C4925 +
                     C14996 * C4916 + C15828 + C15828 + C93843 * C4924 +
                     C14998 * C6615 + C15829 + C15829 + C14991 * C6617) *
                        C93673 * C93711) *
                       C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C14995 +
           (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
               C93842 +
           (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
           C15131 * C14999 + C15132 * C14991) *
              C93673 * C93635 * C93621 * C97 -
          ((C15127 + C15128) * C14991 + (C15129 + C15130) * C14999 +
           (C15126 + C15125) * C93843 + (C15124 + C15123) * C14997 +
           (C15122 + C15121) * C93842 + (C15120 + C15119) * C14995) *
              C93673 * C93635 * C93621 * C98 +
          (C15131 * C14995 + C15132 * C93842 + (C15130 + C15129) * C14997 +
           (C15128 + C15127) * C93843 +
           (C15092 * C112 + C93818 * C193 + C15093 * C1983 + C93711 * C2056) *
               C14999 +
           (C15092 * C118 + C93818 * C199 + C15093 * C1984 + C93711 * C2057) *
               C14991) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C14995 +
           (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
               C93842 +
           (C15119 + C15120) * C14997 + (C15121 + C15122) * C93843 +
           C15131 * C14999 + C15132 * C14991) *
              C93673 * C93635 * C800 -
          ((C15093 * C818 + C93711 * C900 + C15092 * C813 + C93818 * C895) *
               C14991 +
           (C15093 * C810 + C93711 * C892 + C15092 * C805 + C93818 * C887) *
               C14999 +
           (C15093 * C817 + C93711 * C899 + C15092 * C814 + C93818 * C896) *
               C93843 +
           (C15093 * C809 + C93711 * C891 + C15092 * C806 + C93818 * C888) *
               C14997 +
           (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
               C93842 +
           (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
               C14995) *
              C93673 * C93635 * C801 +
          ((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
               C14995 +
           (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
               C93842 +
           (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
               C14997 +
           (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
               C93843 +
           (C15092 * C810 + C93818 * C892 + C15093 * C6615 + C93711 * C6738) *
               C14999 +
           (C15092 * C818 + C93818 * C900 + C15093 * C6616 + C93711 * C6739) *
               C14991) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C14995 +
            (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
            C306 * C93843 + C307 * C14999 + C308 * C14991) *
               C93818 +
           (C5149 * C14995 + C5150 * C93842 + C2162 * C14997 + C2161 * C93843 +
            C2160 * C14999 + C2159 * C14991) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C2157 * C14991 + C2158 * C14999 + C2159 * C93843 + C2160 * C14997 +
            C2161 * C93842 + C2162 * C14995) *
               C93711 +
           (C310 * C14991 + C309 * C14999 + C308 * C93843 + C307 * C14997 +
            C306 * C93842 + C305 * C14995) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C307 * C14995 + C308 * C93842 + C309 * C14997 + C310 * C93843 +
            C312 * C14999 + C311 * C14991) *
               C93818 +
           (C2160 * C14995 + C2159 * C93842 + C2158 * C14997 + C2157 * C93843 +
            (C275 * C1983 + C93673 * C2142) * C14999 +
            (C275 * C1984 + C93673 * C2143) * C14991) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C14995 +
            (C275 * C114 + C93673 * C282) * C93842 + C305 * C14997 +
            C306 * C93843 + C307 * C14999 + C308 * C14991) *
               C93818 +
           (C15996 + C15997 + C15998 + C15999 + C16000 + C16001) * C93711) *
              C93635 * C800 -
          ((C16002 + C16003 + C16004 + C16005 + C16006 + C16007) * C93711 +
           (C16001 + C16000 + C15999 + C15998 + C15997 + C15996) * C93818) *
              C93635 * C801 +
          ((C16007 + C16006 + C16005 + C16004 + C16003 + C16002) * C93818 +
           (C5156 * C14995 + C5155 * C93842 + C5154 * C14997 + C5153 * C93843 +
            (C275 * C6615 + C93673 * C6856) * C14999 +
            (C275 * C6616 + C93673 * C6857) * C14991) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                     C93843 * C115 + C14999 * C110 + C14991 * C116) *
                        C15092 +
                    (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                     C93843 * C363 + C14999 * C191 + C14991 * C364) *
                        C93818 +
                    (C14995 * C807 + C93842 * C815 + C14997 * C806 +
                     C93843 * C814 + C14999 * C805 + C14991 * C813) *
                        C15093 +
                    (C14995 * C889 + C93842 * C1021 + C14997 * C888 +
                     C93843 * C1020 + C14999 * C887 + C14991 * C1019) *
                        C93711) *
                       C93673 * C93635 * C93621 * C97 -
                   ((C14999 * C886 + C14991 * C1018 + C14997 * C887 +
                     C93843 * C1019 + C14995 * C888 + C93842 * C1020) *
                        C93711 +
                    (C14999 * C804 + C14991 * C812 + C14997 * C805 +
                     C93843 * C813 + C14995 * C806 + C93842 * C814) *
                        C15093 +
                    (C14999 * C192 + C14991 * C365 + C14997 * C191 +
                     C93843 * C364 + C14995 * C190 + C93842 * C363) *
                        C93818 +
                    (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                     C93843 * C116 + C14995 * C109 + C93842 * C115) *
                        C15092) *
                       C93673 * C93635 * C93621 * C98 +
                   ((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                     C93843 * C117 + C14999 * C112 + C14991 * C118) *
                        C15092 +
                    (C14995 * C191 + C93842 * C364 + C14997 * C192 +
                     C93843 * C365 + C14999 * C193 + C14991 * C366) *
                        C93818 +
                    (C14995 * C805 + C93842 * C813 + C14997 * C804 +
                     C93843 * C812 + C14999 * C1983 + C14991 * C1984) *
                        C15093 +
                    (C14995 * C887 + C93842 * C1019 + C14997 * C886 +
                     C93843 * C1018 + C14999 * C2056 + C14991 * C2228) *
                        C93711) *
                       C93673 * C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                     C93843 * C115 + C14999 * C110 + C14991 * C116) *
                        C15092 +
                    (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                     C93843 * C363 + C14999 * C191 + C14991 * C364) *
                        C93818 +
                    (C16106 + C16107 + C16108) * C15093 +
                    (C16109 + C16110 + C16111) * C93711) *
                       C93673 * C93635 * C800 -
                   ((C16112 + C16113 + C16114) * C93711 +
                    (C16115 + C16116 + C16117) * C15093 +
                    (C16111 + C16110 + C16109) * C93818 +
                    (C16108 + C16107 + C16106) * C15092) *
                       C93673 * C93635 * C801 +
                   ((C16117 + C16116 + C16115) * C15092 +
                    (C16114 + C16113 + C16112) * C93818 +
                    (C14995 * C4917 + C93842 * C4921 + C14997 * C4916 +
                     C93843 * C4920 + C14999 * C6615 + C14991 * C6616) *
                        C15093 +
                    (C14995 * C5039 + C93842 * C5242 + C14997 * C5038 +
                     C93843 * C5241 + C14999 * C6738 + C14991 * C6964) *
                        C93711) *
                       C93673 * C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                     C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                        C93842 +
                    (C15391 + C15392) * C93843 + C15397 * C14991) *
                       C93673 * C93635 * C93621 * C97 -
                   ((C15395 + C15396) * C14991 + (C15394 + C15393) * C93843 +
                    (C15392 + C15391) * C93842) *
                       C93673 * C93635 * C93621 * C98 +
                   (C15397 * C93842 + (C15396 + C15395) * C93843 +
                    (C15354 * C112 + C15377 + C15377 + C93818 * C423 +
                     C15355 * C1983 + C15378 + C15378 + C93711 * C2295) *
                        C14991) *
                       C93673 * C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                     C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                        C93842 +
                    (C15391 + C15392) * C93843 + C15397 * C14991) *
                       C93673 * C93635 * C800 -
                   ((C15355 * C810 + C16192 + C16192 + C93711 * C1082 +
                     C15354 * C805 + C16193 + C16193 + C93818 * C1077) *
                        C14991 +
                    (C15355 * C809 + C16194 + C16194 + C93711 * C1081 +
                     C15354 * C806 + C16195 + C16195 + C93818 * C1078) *
                        C93843 +
                    (C15355 * C808 + C16196 + C16196 + C93711 * C1080 +
                     C15354 * C807 + C16197 + C16197 + C93818 * C1079) *
                        C93842) *
                       C93673 * C93635 * C801 +
                   ((C15354 * C808 + C16198 + C16198 + C93818 * C1080 +
                     C15355 * C4917 + C16199 + C16199 + C93711 * C5358) *
                        C93842 +
                    (C15354 * C809 + C16200 + C16200 + C93818 * C1081 +
                     C15355 * C4916 + C16201 + C16201 + C93711 * C5357) *
                        C93843 +
                    (C15354 * C810 + C16202 + C16202 + C93818 * C1082 +
                     C15355 * C6615 + C16203 + C16203 + C93711 * C7087) *
                        C14991) *
                       C93673 * C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C15092 +
            (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
            C5460 * C93711) *
               C93842 +
           (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
              C93635 * C93621 * C97 -
          ((C15480 + C15481 + C15482 + C15483) * C14991 +
           (C15479 + C15478 + C15477 + C15476) * C93843 +
           (C15475 + C15474 + C15473 + C15472) * C93842) *
              C93635 * C93621 * C98 +
          (C15486 * C93842 + (C15483 + C15482 + C15481 + C15480) * C93843 +
           (C312 * C15092 + C523 * C93818 +
            (C275 * C1983 + C93673 * C2142) * C15093 +
            (C275 * C2056 + C93673 * C2378) * C93711) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C15092 +
            (C275 * C189 + C93673 * C501) * C93818 + C5149 * C15093 +
            C5460 * C93711) *
               C93842 +
           (C15472 + C15473 + C15474 + C15475) * C93843 + C15486 * C14991) *
              C93635 * C800 -
          ((C4584 * C93711 + C4301 * C15093 + C2390 * C93818 + C2160 * C15092) *
               C14991 +
           (C4583 * C93711 + C4298 * C15093 + C2391 * C93818 + C2162 * C15092) *
               C93843 +
           (C5461 * C93711 + C5151 * C15093 + C5460 * C93818 + C5149 * C15092) *
               C93842) *
              C93635 * C801 +
          ((C5151 * C15092 + C5461 * C93818 + C5156 * C15093 + C5463 * C93711) *
               C93842 +
           (C4298 * C15092 + C4583 * C93818 + C5154 * C15093 + C5462 * C93711) *
               C93843 +
           (C4301 * C15092 + C4584 * C93818 +
            (C275 * C6615 + C93673 * C6856) * C15093 +
            (C275 * C6738 + C93673 * C7204) * C93711) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C275 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93673) *
                        C93818 +
                    ((C14995 * C807 + C93842 * C815 + C14997 * C806 +
                      C93843 * C814 + C14999 * C805 + C14991 * C813) *
                         C275 +
                     (C14995 * C955 + C93842 * C1203 + C14997 * C954 +
                      C93843 * C1202 + C14999 * C953 + C14991 * C1201) *
                         C93673) *
                        C93711) *
                       C93635 * C93621 * C97 -
                   (((C14999 * C952 + C14991 * C1200 + C14997 * C953 +
                      C93843 * C1201 + C14995 * C954 + C93842 * C1202) *
                         C93673 +
                     (C14999 * C804 + C14991 * C812 + C14997 * C805 +
                      C93843 * C813 + C14995 * C806 + C93842 * C814) *
                         C275) *
                        C93711 +
                    ((C14999 * C279 + C14991 * C582 + C14997 * C278 +
                      C93843 * C581 + C14995 * C277 + C93842 * C580) *
                         C93673 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C275) *
                        C93818) *
                       C93635 * C93621 * C98 +
                   (((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                      C93843 * C117 + C14999 * C112 + C14991 * C118) *
                         C275 +
                     (C14995 * C278 + C93842 * C581 + C14997 * C279 +
                      C93843 * C582 + C14999 * C280 + C14991 * C583) *
                         C93673) *
                        C93818 +
                    ((C14995 * C805 + C93842 * C813 + C14997 * C804 +
                      C93843 * C812 + C14999 * C1983 + C14991 * C1984) *
                         C275 +
                     (C14995 * C953 + C93842 * C1201 + C14997 * C952 +
                      C93843 * C1200 + C14999 * C2142 + C14991 * C2460) *
                         C93673) *
                        C93711) *
                       C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C275 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93673) *
                        C93818 +
                    ((C16106 + C16107 + C16108) * C275 +
                     (C16364 + C16365 + C16366) * C93673) *
                        C93711) *
                       C93635 * C800 -
                   (((C16367 + C16368 + C16369) * C93673 +
                     (C16115 + C16116 + C16117) * C275) *
                        C93711 +
                    ((C16366 + C16365 + C16364) * C93673 +
                     (C16108 + C16107 + C16106) * C275) *
                        C93818) *
                       C93635 * C801 +
                   (((C16117 + C16116 + C16115) * C275 +
                     (C16369 + C16368 + C16367) * C93673) *
                        C93818 +
                    ((C14995 * C4917 + C93842 * C4921 + C14997 * C4916 +
                      C93843 * C4920 + C14999 * C6615 + C14991 * C6616) *
                         C275 +
                     (C14995 * C5121 + C93842 * C5538 + C14997 * C5120 +
                      C93843 * C5537 + C14999 * C6856 + C14991 * C7309) *
                         C93673) *
                        C93711) *
                       C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C275 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93673) *
               C93842 +
           ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
           C15656 * C14991) *
              C93635 * C93621 * C97 -
          (((C15652 + C15653) * C93673 + (C15129 + C15130) * C275) * C14991 +
           ((C15651 + C15650) * C93673 + (C15124 + C15123) * C275) * C93843 +
           ((C15649 + C15648) * C93673 + (C15120 + C15119) * C275) * C93842) *
              C93635 * C93621 * C98 +
          (C15656 * C93842 +
           ((C15130 + C15129) * C275 + (C15653 + C15652) * C93673) * C93843 +
           ((C15092 * C112 + C93818 * C193 + C15093 * C1983 + C93711 * C2056) *
                C275 +
            (C15092 * C280 + C93818 * C639 + C15093 * C2142 + C93711 * C2527) *
                C93673) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C275 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93673) *
               C93842 +
           ((C15119 + C15120) * C275 + (C15648 + C15649) * C93673) * C93843 +
           C15656 * C14991) *
              C93635 * C800 -
          (((C15093 * C958 + C93711 * C1264 + C15092 * C953 + C93818 * C1259) *
                C93673 +
            (C15093 * C810 + C93711 * C892 + C15092 * C805 + C93818 * C887) *
                C275) *
               C14991 +
           ((C15093 * C957 + C93711 * C1263 + C15092 * C954 + C93818 * C1260) *
                C93673 +
            (C15093 * C809 + C93711 * C891 + C15092 * C806 + C93818 * C888) *
                C275) *
               C93843 +
           ((C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93673 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C275) *
               C93842) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C275 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C93673) *
               C93842 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C275 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C93673) *
               C93843 +
           ((C15092 * C810 + C93818 * C892 + C15093 * C6615 + C93711 * C6738) *
                C275 +
            (C15092 * C958 + C93818 * C1264 + C15093 * C6856 + C93711 * C7420) *
                C93673) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
                     C5740 * C93711) *
                        C93842 +
                    (C15731 + C15732) * C93843 + C15737 * C14991) *
                       C93635 * C93621 * C97 -
                   ((C15735 + C15736) * C14991 + (C15734 + C15733) * C93843 +
                    (C15732 + C15731) * C93842) *
                       C93635 * C93621 * C98 +
                   (C15737 * C93842 + (C15736 + C15735) * C93843 +
                    (C746 * C93818 +
                     (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
                        C14991) *
                       C93635 * C93621 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93818 +
                     C5740 * C93711) *
                        C93842 +
                    (C15731 + C15732) * C93843 + C15737 * C14991) *
                       C93635 * C800 -
                   ((C4840 * C93711 + C2625 * C93818) * C14991 +
                    (C4839 * C93711 + C2626 * C93818) * C93843 +
                    (C5741 * C93711 + C5740 * C93818) * C93842) *
                       C93635 * C801 +
                   ((C5741 * C93818 + C5743 * C93711) * C93842 +
                    (C4839 * C93818 + C5742 * C93711) * C93843 +
                    (C4840 * C93818 +
                     (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
                        C14991) *
                       C93635 * C802) *
                  C93609) /
                     (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
              C4086 + C4086 + C93587 * C121) *
                 C93819 +
             (C11143 + C11144) * C93737) *
                C93818 +
            ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
               C93635 * C1979 -
           (((C8640 + C8641) * C93737 + (C4960 + C4959) * C93819) * C93711 +
            ((C8642 + C8643) * C93737 + (C4958 + C4957) * C93819) * C93818) *
               C93635 * C1980) *
              C1981 +
          ((((C6637 + C6638) * C93819 + (C28208 + C28209) * C93737) * C93818 +
            ((C6639 + C6640) * C93819 +
             (C4080 * C5817 + C7639 + C7639 + C4075 * C5829 + C4082 * C7631 +
              C7640 + C7640 + C93587 * C7633) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C28209 + C28208) * C93737 + (C6638 + C6637) * C93819) * C93711 +
            ((C13033 + C13032) * C93737 +
             (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
              C4096 + C4096 + C4075 * C121) *
                 C93819) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C4081 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C4075 +
             (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
                C93819 +
            ((C27316 + C27317) * C4081 + (C27318 + C27319) * C4075 +
             (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
                C93737) *
               C93635 * C1979 -
           (((C28348 + C28349) * C93587 + (C28350 + C28351) * C4083 +
             (C15093 * C5824 + C93711 * C5928 + C15092 * C3413 +
              C93818 * C3495) *
                 C4075 +
             (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
              C93818 * C3491) *
                 C4081) *
                C93737 +
            ((C17443 + C17444) * C93587 + (C17445 + C17446) * C4083 +
             (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C4075 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C4081) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C4081 + (C17444 + C17443) * C4075 +
             (C17442 + C17441) * C4083 + (C17440 + C17439) * C93587) *
                C93819 +
            ((C28351 + C28350) * C4081 + (C28349 + C28348) * C4075 +
             (C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
              C93711 * C7738) *
                 C4083 +
             (C15092 * C3415 + C93818 * C3497 + C15093 * C7632 +
              C93711 * C7739) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C18430 + C18431) * C93587 + (C18432 + C18433) * C4083 +
             (C18434 + C18435) * C4075 + (C18436 + C18437) * C4081) *
                C93737 +
            ((C15126 + C15125) * C93587 + (C15124 + C15123) * C4083 +
             (C15122 + C15121) * C4075 + (C15120 + C15119) * C4081) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C4081 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C4075 +
             (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
                C93818 +
            ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
             C28482 * C4083 + C28483 * C93587) *
                C93711) *
               C93635 * C1979 -
           (((C26444 + C26445) * C93587 + (C26446 + C26447) * C4083 +
             (C26448 + C26449) * C4075 + (C26450 + C26451) * C4081) *
                C93711 +
            (C28484 * C93587 + C28485 * C4083 + (C26443 + C26442) * C4075 +
             (C26441 + C26440) * C4081) *
                C93818) *
               C93635 * C1980) *
              C1981 +
          (((C28482 * C4081 + C28483 * C4075 + (C22696 + C22695) * C4083 +
             (C22694 + C22693) * C93587) *
                C93818 +
            ((C26447 + C26446) * C4081 + (C26445 + C26444) * C4075 +
             (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                 C4083 +
             (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
                 C93587) *
                C93711) *
               C93635 * C1980 -
           (((C22693 + C22694) * C93587 + (C22695 + C22696) * C4083 +
             C28484 * C4075 + C28485 * C4081) *
                C93711 +
            ((C20383 + C20382) * C93587 + (C20381 + C20380) * C4083 +
             (C20379 + C20378) * C4075 + (C20377 + C20376) * C4081) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C15092 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93818 +
             (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
                C93819 +
            ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
             (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
                C93737) *
               C93635 * C1979 -
           (((C8984 + C8985) * C93711 + (C8986 + C8987) * C15093 +
             (C8988 + C8989) * C93818 + (C8990 + C8991) * C15092) *
                C93737 +
            ((C5277 + C5276) * C93711 + (C5275 + C5274) * C15093 +
             (C5273 + C5272) * C93818 + (C5271 + C5270) * C15092) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C6982 + C6983) * C15092 + (C6984 + C6985) * C93818 +
             (C6986 + C6987) * C15093 + (C6988 + C6989) * C93711) *
                C93819 +
            ((C28624 + C28625) * C15092 + (C28626 + C28627) * C93818 +
             (C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                 C15093 +
             (C4081 * C5921 + C4075 * C6093 + C4083 * C7738 + C93587 * C7968) *
                 C93711) *
                C93737) *
               C93635 * C1980 -
           (((C28627 + C28626) * C93711 + (C28625 + C28624) * C15093 +
             (C13380 + C13379) * C93818 + (C13378 + C13377) * C15092) *
                C93737 +
            ((C6985 + C6984) * C93711 + (C6983 + C6982) * C15093 +
             (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                 C93818 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C15092) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C4075 +
             (C15391 + C15392) * C93587) *
                C93819 +
            ((C27650 + C27651) * C4075 + (C18759 + C18758) * C93587) * C93737) *
               C93635 * C1979 -
           (((C28766 + C28767) * C93587 +
             (C15355 * C5818 + C19717 + C19717 + C93711 * C6174 +
              C15354 * C3409 + C19716 + C19716 + C93818 * C3709) *
                 C4075) *
                C93737 +
            ((C17785 + C17786) * C93587 +
             (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
              C16197 + C16197 + C93818 * C1079) *
                 C4075) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C17786 + C17785) * C4075 + (C17784 + C17783) * C93587) * C93819 +
            ((C28767 + C28766) * C4075 +
             (C15354 * C3411 + C19720 + C19720 + C93818 * C3711 +
              C15355 * C7631 + C19721 + C19721 + C93711 * C8067) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C18756 + C18757) * C93587 + (C18758 + C18759) * C4075) * C93737 +
            ((C15394 + C15393) * C93587 + (C15392 + C15391) * C4075) * C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C15092 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93818 +
             (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
                C4075 +
            ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
             C28482 * C15093 + C28898 * C93711) *
                C93587) *
               C93635 * C1979 -
           (((C26764 + C26765) * C93711 + (C26446 + C26447) * C15093 +
             C28899 * C93818 + C28485 * C15092) *
                C93587 +
            ((C26766 + C26767) * C93711 + (C26450 + C26451) * C15093 +
             (C26763 + C26762) * C93818 + (C26441 + C26440) * C15092) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          (((C28482 * C15092 + C28898 * C93818 + (C26447 + C26446) * C15093 +
             (C26765 + C26764) * C93711) *
                C4075 +
            ((C22696 + C22695) * C15092 + (C23009 + C23008) * C93818 +
             (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                 C15093 +
             (C20349 * C892 + C93819 * C1148 + C20350 * C7738 +
              C93737 * C8184) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C23008 + C23009) * C93711 + (C22695 + C22696) * C15093 +
             (C20628 + C20627) * C93818 + (C20381 + C20380) * C15092) *
                C93587 +
            (C28899 * C93711 + C28485 * C15093 + (C20626 + C20625) * C93818 +
             (C20377 + C20376) * C15092) *
                C4075) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C20349 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93819 +
             (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
                C93818 +
            ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
             (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
                C93711) *
               C93635 * C1979 -
           (((C9312 + C9313) * C93737 + (C8986 + C8987) * C20350 +
             (C5558 + C5557) * C93819 + (C5275 + C5274) * C20349) *
                C93711 +
            ((C9314 + C9315) * C93737 + (C8990 + C8991) * C20350 +
             (C5556 + C5555) * C93819 + (C5271 + C5270) * C20349) *
                C93818) *
               C93635 * C1980) *
              C1981 +
          ((((C6982 + C6983) * C20349 + (C7319 + C7320) * C93819 +
             (C28624 + C28625) * C20350 + (C29034 + C29035) * C93737) *
                C93818 +
            ((C6986 + C6987) * C20349 + (C7321 + C7322) * C93819 +
             (C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                 C20350 +
             (C4081 * C6007 + C4075 * C6345 + C4083 * C7856 + C93587 * C8295) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C29035 + C29034) * C93737 + (C28625 + C28624) * C20350 +
             (C7320 + C7319) * C93819 + (C6983 + C6982) * C20349) *
                C93711 +
            ((C13705 + C13704) * C93737 + (C13378 + C13377) * C20350 +
             (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93819 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C20349) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C20349 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93819 +
             (C27316 + C27317) * C20350 + (C27962 + C27963) * C93737) *
                C4075 +
            ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
             (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
                C93587) *
               C93635 * C1979 -
           (((C29170 + C29171) * C93737 + (C28350 + C28351) * C20350 +
             (C18108 + C18109) * C93819 + (C17445 + C17446) * C20349) *
                C93587 +
            ((C15093 * C6008 + C93711 * C6426 + C15092 * C3565 +
              C93818 * C3923) *
                 C93737 +
             (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
              C93818 * C3491) *
                 C20350 +
             (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C93819 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C20349) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C20349 + (C18109 + C18108) * C93819 +
             (C28351 + C28350) * C20350 + (C29171 + C29170) * C93737) *
                C4075 +
            ((C17442 + C17441) * C20349 + (C18107 + C18106) * C93819 +
             (C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
              C93711 * C7738) *
                 C20350 +
             (C15092 * C3567 + C93818 * C3925 + C15093 * C7856 +
              C93711 * C8394) *
                 C93737) *
                C93587) *
               C93635 * C1980 -
           (((C19073 + C19074) * C93737 + (C18432 + C18433) * C20350 +
             (C15651 + C15650) * C93819 + (C15124 + C15123) * C20349) *
                C93587 +
            ((C19075 + C19076) * C93737 + (C18436 + C18437) * C20350 +
             (C15649 + C15648) * C93819 + (C15120 + C15119) * C20349) *
                C4075) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C93818 +
             (C27090 + C27091) * C93711) *
                C4075 +
            ((C20907 + C20908) * C93818 + C29302 * C93711) * C93587) *
               C93635 * C1979 -
           (((C27092 + C27093) * C93711 + C29303 * C93818) * C93587 +
            ((C27094 + C27095) * C93711 + (C27091 + C27090) * C93818) * C4075) *
               C93635 * C1980) *
              C1981 +
          (((C29302 * C93818 + (C27093 + C27092) * C93711) * C4075 +
            ((C23336 + C23335) * C93818 +
             (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
              C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C23335 + C23336) * C93711 + (C20910 + C20909) * C93818) * C93587 +
            (C29303 * C93711 + (C20908 + C20907) * C93818) * C4075) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
              C4086 + C4086 + C93587 * C121) *
                 C93819 +
             (C11143 + C11144) * C93737) *
                C93818 +
            ((C4957 + C4958) * C93819 + C30640 * C93737) * C93711) *
               C2695 -
           (((C14045 + C14044) * C93737 + C30641 * C93819) * C93711 +
            ((C11146 + C11145) * C93737 + (C11144 + C11143) * C93819) *
                C93818) *
               C2696) *
              C1979 +
          (((C30640 * C93819 + (C14044 + C14045) * C93737) * C93818 +
            ((C8641 + C8640) * C93819 +
             (C4080 * C5821 + C5846 + C5846 + C4075 * C5833 + C4082 * C5822 +
              C5847 + C5847 + C93587 * C5834) *
                 C93737) *
                C93711) *
               C2696 -
           (((C8640 + C8641) * C93737 + (C4960 + C4959) * C93819) * C93711 +
            (C30641 * C93737 + (C4958 + C4957) * C93819) * C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C4081 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C4075 +
             (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
                C93819 +
            ((C27316 + C27317) * C4081 + (C27318 + C27319) * C4075 +
             C29564 * C4083 + C29565 * C93587) *
                C93737) *
               C2695 -
           (((C27320 + C27321) * C93587 + (C27322 + C27323) * C4083 +
             (C27324 + C27325) * C4075 + (C27326 + C27327) * C4081) *
                C93737 +
            (C29566 * C93587 + C29567 * C4083 + (C27319 + C27318) * C4075 +
             (C27317 + C27316) * C4081) *
                C93819) *
               C2696) *
              C1979 +
          ((((C30780 + C30781) * C4081 + (C30782 + C30783) * C4075 +
             (C28351 + C28350) * C4083 + (C28349 + C28348) * C93587) *
                C93819 +
            ((C15092 * C5819 + C93818 * C5923 + C15093 * C5821 +
              C93711 * C5924) *
                 C4081 +
             (C15092 * C5825 + C93818 * C5929 + C15093 * C5827 +
              C93711 * C5930) *
                 C4075 +
             (C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
              C93711 * C5926) *
                 C4083 +
             (C15092 * C5826 + C93818 * C5931 + C15093 * C5828 +
              C93711 * C5932) *
                 C93587) *
                C93737) *
               C2696 -
           (((C28348 + C28349) * C93587 + (C28350 + C28351) * C4083 +
             (C30783 + C30782) * C4075 + (C30781 + C30780) * C4081) *
                C93737 +
            ((C17443 + C17444) * C93587 + (C17445 + C17446) * C4083 +
             (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C4075 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C4081) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C4081 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C4075 +
             (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
                C93818 +
            ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
             C28482 * C4083 + C28483 * C93587) *
                C93711) *
               C2695 -
           (((C29706 + C29707) * C93587 + (C29708 + C29709) * C4083 +
             (C30922 + C30923) * C4075 + (C30924 + C30925) * C4081) *
                C93711 +
            ((C23677 + C23678) * C93587 + (C23679 + C23680) * C4083 +
             (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C4075 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C4081) *
                C93818) *
               C2696) *
              C1979 +
          ((((C30925 + C30924) * C4081 + (C30923 + C30922) * C4075 +
             (C29709 + C29708) * C4083 + (C29707 + C29706) * C93587) *
                C93818 +
            ((C20349 * C5818 + C93819 * C6008 + C20350 * C5821 +
              C93737 * C6011) *
                 C4081 +
             (C20349 * C5824 + C93819 * C6014 + C20350 * C5827 +
              C93737 * C6017) *
                 C4075 +
             (C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
              C93737 * C6012) *
                 C4083 +
             (C20349 * C5823 + C93819 * C6013 + C20350 * C5828 +
              C93737 * C6018) *
                 C93587) *
                C93711) *
               C2696 -
           (((C26444 + C26445) * C93587 + (C26446 + C26447) * C4083 +
             (C26448 + C26449) * C4075 + (C26450 + C26451) * C4081) *
                C93711 +
            (C28484 * C93587 + C28485 * C4083 + (C26443 + C26442) * C4075 +
             (C26441 + C26440) * C4081) *
                C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C15092 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93818 +
             (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
                C93819 +
            ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
             C31056 * C15093 + C31057 * C93711) *
                C93737) *
               C2695 -
           (((C14381 + C14380) * C93711 + (C14379 + C14378) * C15093 +
             (C11462 + C11461) * C93818 + (C11460 + C11459) * C15092) *
                C93737 +
            (C31058 * C93711 + C31059 * C15093 + (C11458 + C11457) * C93818 +
             (C11456 + C11455) * C15092) *
                C93819) *
               C2696) *
              C1979 +
          (((C31056 * C15092 + C31057 * C93818 + (C8987 + C8986) * C15093 +
             (C8985 + C8984) * C93711) *
                C93819 +
            ((C14378 + C14379) * C15092 + (C14380 + C14381) * C93818 +
             (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                 C15093 +
             (C4081 * C5924 + C4075 * C6097 + C4083 * C5926 + C93587 * C6098) *
                 C93711) *
                C93737) *
               C2696 -
           (((C8984 + C8985) * C93711 + (C8986 + C8987) * C15093 +
             C31058 * C93818 + C31059 * C15092) *
                C93737 +
            ((C5277 + C5276) * C93711 + (C5275 + C5274) * C15093 +
             (C5273 + C5272) * C93818 + (C5271 + C5270) * C15092) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C4075 +
             (C15391 + C15392) * C93587) *
                C93819 +
            ((C27650 + C27651) * C4075 + C29970 * C93587) * C93737) *
               C2695 -
           (((C27652 + C27653) * C93587 + (C27654 + C27655) * C4075) * C93737 +
            (C29971 * C93587 + (C27651 + C27650) * C4075) * C93819) *
               C2696) *
              C1979 +
          ((((C31202 + C31203) * C4075 + (C28767 + C28766) * C93587) * C93819 +
            ((C15354 * C5819 + C31194 + C31194 + C93818 * C6175 +
              C15355 * C5821 + C31195 + C31195 + C93711 * C6176) *
                 C4075 +
             (C15354 * C5820 + C31196 + C31196 + C93818 * C6177 +
              C15355 * C5822 + C31197 + C31197 + C93711 * C6178) *
                 C93587) *
                C93737) *
               C2696 -
           (((C28766 + C28767) * C93587 + (C31203 + C31202) * C4075) * C93737 +
            ((C17785 + C17786) * C93587 +
             (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
              C16197 + C16197 + C93818 * C1079) *
                 C4075) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C15092 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93818 +
             (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
                C4075 +
            ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
             C28482 * C15093 + C28898 * C93711) *
                C93587) *
               C2695 -
           (((C30106 + C30107) * C93711 + (C29708 + C29709) * C15093 +
             (C24006 + C24007) * C93818 + (C23679 + C23680) * C15092) *
                C93587 +
            ((C31338 + C31339) * C93711 + (C30924 + C30925) * C15093 +
             (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C93818 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C15092) *
                C4075) *
               C2696) *
              C1979 +
          ((((C30925 + C30924) * C15092 + (C31339 + C31338) * C93818 +
             (C20349 * C5818 + C93819 * C6008 + C20350 * C5821 +
              C93737 * C6011) *
                 C15093 +
             (C20349 * C5922 + C93819 * C6266 + C20350 * C5924 +
              C93737 * C6268) *
                 C93711) *
                C4075 +
            ((C29709 + C29708) * C15092 + (C30107 + C30106) * C93818 +
             (C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
              C93737 * C6012) *
                 C15093 +
             (C20349 * C5921 + C93819 * C6265 + C20350 * C5926 +
              C93737 * C6270) *
                 C93711) *
                C93587) *
               C2696 -
           (((C26764 + C26765) * C93711 + (C26446 + C26447) * C15093 +
             C28899 * C93818 + C28485 * C15092) *
                C93587 +
            ((C26766 + C26767) * C93711 + (C26450 + C26451) * C15093 +
             (C26763 + C26762) * C93818 + (C26441 + C26440) * C15092) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C20349 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93819 +
             (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
                C93818 +
            ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
             C31056 * C20350 + C31470 * C93737) *
                C93711) *
               C2695 -
           (((C14703 + C14702) * C93737 + (C14379 + C14378) * C20350 +
             C31471 * C93819 + C31059 * C20349) *
                C93711 +
            ((C11752 + C11751) * C93737 + (C11460 + C11459) * C20350 +
             (C11750 + C11749) * C93819 + (C11456 + C11455) * C20349) *
                C93818) *
               C2696) *
              C1979 +
          (((C31056 * C20349 + C31470 * C93819 + (C14378 + C14379) * C20350 +
             (C14702 + C14703) * C93737) *
                C93818 +
            ((C8987 + C8986) * C20349 + (C9313 + C9312) * C93819 +
             (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                 C20350 +
             (C4081 * C6011 + C4075 * C6349 + C4083 * C6012 + C93587 * C6350) *
                 C93737) *
                C93711) *
               C2696 -
           (((C9312 + C9313) * C93737 + (C8986 + C8987) * C20350 +
             (C5558 + C5557) * C93819 + (C5275 + C5274) * C20349) *
                C93711 +
            (C31471 * C93737 + C31059 * C20350 + (C5556 + C5555) * C93819 +
             (C5271 + C5270) * C20349) *
                C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C20349 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93819 +
             (C27316 + C27317) * C20350 + (C27962 + C27963) * C93737) *
                C4075 +
            ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
             C29564 * C20350 + C30368 * C93737) *
                C93587) *
               C2695 -
           (((C27964 + C27965) * C93737 + (C27322 + C27323) * C20350 +
             C30369 * C93819 + C29567 * C20349) *
                C93587 +
            ((C27966 + C27967) * C93737 + (C27326 + C27327) * C20350 +
             (C27963 + C27962) * C93819 + (C27317 + C27316) * C20349) *
                C4075) *
               C2696) *
              C1979 +
          ((((C30780 + C30781) * C20349 + (C31606 + C31607) * C93819 +
             (C15092 * C5819 + C93818 * C5923 + C15093 * C5821 +
              C93711 * C5924) *
                 C20350 +
             (C15092 * C6009 + C93818 * C6427 + C15093 * C6011 +
              C93711 * C6428) *
                 C93737) *
                C4075 +
            ((C28351 + C28350) * C20349 + (C29171 + C29170) * C93819 +
             (C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
              C93711 * C5926) *
                 C20350 +
             (C15092 * C6010 + C93818 * C6429 + C15093 * C6012 +
              C93711 * C6430) *
                 C93737) *
                C93587) *
               C2696 -
           (((C29170 + C29171) * C93737 + (C28350 + C28351) * C20350 +
             (C18108 + C18109) * C93819 + (C17445 + C17446) * C20349) *
                C93587 +
            ((C31607 + C31606) * C93737 + (C30781 + C30780) * C20350 +
             (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C93819 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C20349) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C93818 +
             (C27090 + C27091) * C93711) *
                C4075 +
            ((C20907 + C20908) * C93818 + C29302 * C93711) * C93587) *
               C2695 -
           (((C30508 + C30509) * C93711 + (C24339 + C24340) * C93818) * C93587 +
            ((C31750 + C31751) * C93711 +
             (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
              C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                 C93818) *
                C4075) *
               C2696) *
              C1979 +
          ((((C31751 + C31750) * C93818 +
             (C20870 * C5818 + C31742 + C31742 + C93819 * C6506 +
              C20871 * C5821 + C31743 + C31743 + C93737 * C6508) *
                 C93711) *
                C4075 +
            ((C30509 + C30508) * C93818 +
             (C20870 * C5817 + C31744 + C31744 + C93819 * C6505 +
              C20871 * C5822 + C31745 + C31745 + C93737 * C6510) *
                 C93711) *
                C93587) *
               C2696 -
           (((C27092 + C27093) * C93711 + C29303 * C93818) * C93587 +
            ((C27094 + C27095) * C93711 + (C27091 + C27090) * C93818) * C4075) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93819 +
            (C11143 + C11144) * C93737) *
               C93818 +
           ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
              C93635 * C800 -
          (((C8640 + C8641) * C93737 + (C4960 + C4959) * C93819) * C93711 +
           ((C8642 + C8643) * C93737 + (C4958 + C4957) * C93819) * C93818) *
              C93635 * C801 +
          ((C4963 * C93819 + (C8641 + C8640) * C93737) * C93818 +
           ((C4962 + C4961) * C93819 +
            (C4080 * C8615 + C8630 + C8630 + C4075 * C8619 + C4082 * C8616 +
             C8631 + C8631 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93819 +
            (C11143 + C11144) * C93737) *
               C93818 +
           ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C4082 * C3411 + C7638 + C7638 + C93587 * C3419 + C4080 * C3410 +
             C7637 + C7637 + C4075 * C3418) *
                C93737 +
            (C6638 + C6637) * C93819) *
               C93711 +
           ((C13033 + C13032) * C93737 +
            (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
             C4096 + C4096 + C4075 * C121) *
                C93819) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 +
             C4098 + C4098 + C93587 * C123) *
                C93819 +
            (C4080 * C1386 + C9607 + C9607 + C4075 * C1402 + C4082 * C1385 +
             C9608 + C9608 + C93587 * C1401) *
                C93737) *
               C93818 +
           ((C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 +
             C4100 + C4100 + C93587 * C820) *
                C93819 +
            (C4080 * C3411 + C25336 + C25336 + C4075 * C3419 + C4082 * C3412 +
             C25337 + C25337 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93819 +
            (C11143 + C11144) * C93737) *
               C93818 +
           ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
              C1382 -
          (((C14045 + C14044) * C93737 + (C8642 + C8643) * C93819) * C93711 +
           ((C11146 + C11145) * C93737 + (C11144 + C11143) * C93819) * C93818) *
              C1383 +
          ((C11149 * C93819 + (C11148 + C11147) * C93737) * C93818 +
           ((C14044 + C14045) * C93819 +
            (C4080 * C14027 + C14038 + C14038 + C4075 * C14031 +
             C4082 * C14028 + C14039 + C14039 + C93587 * C14032) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C4081 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C4075 +
            (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
               C93819 +
           ((C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C4081 +
            (C15092 * C1396 + C93818 * C1478 + C15093 * C3413 +
             C93711 * C3495) *
                C4075 +
            (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C15093 * C5823 + C93711 * C5927 + C15092 * C3414 +
             C93818 * C3496) *
                C93587 +
            (C15093 * C5817 + C93711 * C5921 + C15092 * C3410 +
             C93818 * C3492) *
                C4083 +
            (C15093 * C5824 + C93711 * C5928 + C15092 * C3413 +
             C93818 * C3495) *
                C4075 +
            (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
             C93818 * C3491) *
                C4081) *
               C93737 +
           ((C17443 + C17444) * C93587 + (C17445 + C17446) * C4083 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C4075 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C4081) *
               C93819) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C4081 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C4075 +
            (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C4083 +
            (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
                C93587) *
               C93819 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C4081 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C4075 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C4083 +
            (C15092 * C5823 + C93818 * C5927 + C15093 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C4081 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C4075 +
            (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
               C93819 +
           ((C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C4081 +
            (C15092 * C1396 + C93818 * C1478 + C15093 * C3413 +
             C93711 * C3495) *
                C4075 +
            (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18430 + C18431) * C93587 + (C18432 + C18433) * C4083 +
            (C18434 + C18435) * C4075 + (C18436 + C18437) * C4081) *
               C93737 +
           ((C15126 + C15125) * C93587 + (C15124 + C15123) * C4083 +
            (C15122 + C15121) * C4075 + (C15120 + C15119) * C4081) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C15131 * C4081 + C15132 * C4075 + (C15130 + C15129) * C4083 +
            (C15128 + C15127) * C93587) *
               C93819 +
           ((C18433 + C18432) * C4081 + (C18431 + C18430) * C4075 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C4083 +
            (C15092 * C1393 + C93818 * C1475 + C15093 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C4081 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C4075 +
            (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
               C93819 +
           ((C27316 + C27317) * C4081 + (C27318 + C27319) * C4075 +
            (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
               C93737) *
              C1382 -
          (((C27320 + C27321) * C93587 + (C27322 + C27323) * C4083 +
            (C27324 + C27325) * C4075 + (C27326 + C27327) * C4081) *
               C93737 +
           ((C18434 + C18435) * C93587 + (C18436 + C18437) * C4083 +
            (C27319 + C27318) * C4075 + (C27317 + C27316) * C4081) *
               C93819) *
              C1383 +
          (((C27327 + C27326) * C4081 + (C27325 + C27324) * C4075 +
            (C27323 + C27322) * C4083 + (C27321 + C27320) * C93587) *
               C93819 +
           ((C15092 * C11103 + C93818 * C11224 + C15093 * C14027 +
             C93711 * C14143) *
                C4081 +
            (C15092 * C11107 + C93818 * C11228 + C15093 * C14029 +
             C93711 * C14145) *
                C4075 +
            (C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
             C93711 * C14144) *
                C4083 +
            (C15092 * C11106 + C93818 * C11227 + C15093 * C14030 +
             C93711 * C14146) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C4081 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C4075 +
            (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
               C93818 +
           ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
            (C22700 + C22699) * C4083 + (C22698 + C22697) * C93587) *
               C93711) *
              C93635 * C800 -
          (((C26444 + C26445) * C93587 + (C26446 + C26447) * C4083 +
            (C26448 + C26449) * C4075 + (C26450 + C26451) * C4081) *
               C93711 +
           ((C22697 + C22698) * C93587 + (C22699 + C22700) * C4083 +
            (C26443 + C26442) * C4075 + (C26441 + C26440) * C4081) *
               C93818) *
              C93635 * C801 +
          (((C26451 + C26450) * C4081 + (C26449 + C26448) * C4075 +
            (C26447 + C26446) * C4083 + (C26445 + C26444) * C93587) *
               C93818 +
           ((C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C4081 +
            (C20349 * C4921 + C93819 * C5125 + C20350 * C8617 +
             C93737 * C8845) *
                C4075 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C4083 +
            (C20349 * C4920 + C93819 * C5124 + C20350 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C4081 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C4075 +
            (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
               C93818 +
           ((C20349 * C807 + C93819 * C955 + C20350 * C3409 + C93737 * C3565) *
                C4081 +
            (C20349 * C815 + C93819 * C963 + C20350 * C3413 + C93737 * C3569) *
                C4075 +
            (C22700 + C22699) * C4083 + (C22698 + C22697) * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C22693 + C22694) * C93587 + (C22695 + C22696) * C4083 +
            (C22697 + C22698) * C4075 + (C22699 + C22700) * C4081) *
               C93711 +
           ((C20383 + C20382) * C93587 + (C20381 + C20380) * C4083 +
            (C20379 + C20378) * C4075 + (C20377 + C20376) * C4081) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C20388 * C4081 + C20389 * C4075 + (C20387 + C20386) * C4083 +
            (C20385 + C20384) * C93587) *
               C93818 +
           ((C22696 + C22695) * C4081 + (C22694 + C22693) * C4075 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C4083 +
            (C20349 * C812 + C93819 * C960 + C20350 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C4081 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C4075 +
            (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
               C93818 +
           ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
            (C22700 + C22699) * C4083 + (C22698 + C22697) * C93587) *
               C93711) *
              C1382 -
          (((C20350 * C5826 + C93737 * C6016 + C20349 * C3414 +
             C93819 * C3570) *
                C93587 +
            (C20350 * C5820 + C93737 * C6010 + C20349 * C3410 +
             C93819 * C3566) *
                C4083 +
            (C20350 * C5825 + C93737 * C6015 + C20349 * C3413 +
             C93819 * C3569) *
                C4075 +
            (C20350 * C5819 + C93737 * C6009 + C20349 * C3409 +
             C93819 * C3565) *
                C4081) *
               C93711 +
           ((C23677 + C23678) * C93587 + (C23679 + C23680) * C4083 +
            (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
             C93819 * C1544) *
                C4075 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C4081) *
               C93818) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C4081 +
            (C20349 * C1397 + C93819 * C1545 + C20350 * C11107 +
             C93737 * C11349) *
                C4075 +
            (C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
             C93737 * C11344) *
                C4083 +
            (C20349 * C1398 + C93819 * C1546 + C20350 * C11106 +
             C93737 * C11348) *
                C93587) *
               C93818 +
           ((C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
             C93737 * C14265) *
                C4081 +
            (C20349 * C5825 + C93819 * C6015 + C20350 * C14029 +
             C93737 * C14267) *
                C4075 +
            (C20349 * C5820 + C93819 * C6010 + C20350 * C14028 +
             C93737 * C14266) *
                C4083 +
            (C20349 * C5826 + C93819 * C6016 + C20350 * C14030 +
             C93737 * C14268) *
                C93587) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C15092 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93818 +
            (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
               C93819 +
           ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
            (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
               C93737) *
              C93635 * C800 -
          (((C8984 + C8985) * C93711 + (C8986 + C8987) * C15093 +
            (C8988 + C8989) * C93818 + (C8990 + C8991) * C15092) *
               C93737 +
           ((C5277 + C5276) * C93711 + (C5275 + C5274) * C15093 +
            (C5273 + C5272) * C93818 + (C5271 + C5270) * C15092) *
               C93819) *
              C93635 * C801 +
          ((C5282 * C15092 + C5283 * C93818 + (C5281 + C5280) * C15093 +
            (C5279 + C5278) * C93711) *
               C93819 +
           ((C8987 + C8986) * C15092 + (C8985 + C8984) * C93818 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C15093 +
            (C4081 * C8741 + C4075 * C8965 + C4083 * C8742 + C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C15092 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93818 +
            (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
               C93819 +
           ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
            (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C4083 * C3493 + C93587 * C3641 + C4081 * C3492 + C4075 * C3640) *
                C93711 +
            (C4083 * C3411 + C93587 * C3415 + C4081 * C3410 + C4075 * C3414) *
                C15093 +
            (C13380 + C13379) * C93818 + (C13378 + C13377) * C15092) *
               C93737 +
           ((C6985 + C6984) * C93711 + (C6983 + C6982) * C15093 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C93818 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C15092) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C15092 +
            (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
                C93818 +
            (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C15093 +
            (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
                C93711) *
               C93819 +
           ((C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C15092 +
            (C4081 * C1468 + C4075 * C1600 + C4083 * C1467 + C93587 * C1599) *
                C93818 +
            (C4081 * C3411 + C4075 * C3415 + C4083 * C3412 + C93587 * C3416) *
                C15093 +
            (C4081 * C3493 + C4075 * C3641 + C4083 * C3494 + C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C15092 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93818 +
            (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
               C93819 +
           ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
            (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
               C93737) *
              C1382 -
          (((C14381 + C14380) * C93711 + (C14379 + C14378) * C15093 +
            (C11462 + C11461) * C93818 + (C11460 + C11459) * C15092) *
               C93737 +
           ((C8988 + C8989) * C93711 + (C8990 + C8991) * C15093 +
            (C11458 + C11457) * C93818 + (C11456 + C11455) * C15092) *
               C93819) *
              C1383 +
          ((C11467 * C15092 + C11468 * C93818 + (C14378 + C14379) * C15093 +
            (C14380 + C14381) * C93711) *
               C93819 +
           ((C11466 + C11465) * C15092 + (C11464 + C11463) * C93818 +
            (C4081 * C14027 + C4075 * C14029 + C4083 * C14028 +
             C93587 * C14030) *
                C15093 +
            (C4081 * C14143 + C4075 * C14367 + C4083 * C14144 +
             C93587 * C14368) *
                C93711) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C4075 +
            (C15391 + C15392) * C93587) *
               C93819 +
           ((C15354 * C1388 + C16905 + C16905 + C93818 * C1660 +
             C15355 * C3409 + C16904 + C16904 + C93711 * C3709) *
                C4075 +
            (C18759 + C18758) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C15355 * C5817 + C19719 + C19719 + C93711 * C6173 +
             C15354 * C3410 + C19718 + C19718 + C93818 * C3710) *
                C93587 +
            (C15355 * C5818 + C19717 + C19717 + C93711 * C6174 +
             C15354 * C3409 + C19716 + C19716 + C93818 * C3709) *
                C4075) *
               C93737 +
           ((C17785 + C17786) * C93587 +
            (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
             C16197 + C16197 + C93818 * C1079) *
                C4075) *
               C93819) *
              C93635 * C801 +
          (((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
             C16199 + C16199 + C93711 * C5358) *
                C4075 +
            (C15354 * C809 + C16200 + C16200 + C93818 * C1081 + C15355 * C4916 +
             C16201 + C16201 + C93711 * C5357) *
                C93587) *
               C93819 +
           ((C15354 * C5818 + C26648 + C26648 + C93818 * C6174 +
             C15355 * C8615 + C26649 + C26649 + C93711 * C9089) *
                C4075 +
            (C15354 * C5817 + C26650 + C26650 + C93818 * C6173 +
             C15355 * C8616 + C26651 + C26651 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C4075 +
            (C15391 + C15392) * C93587) *
               C93819 +
           ((C15354 * C1388 + C16905 + C16905 + C93818 * C1660 +
             C15355 * C3409 + C16904 + C16904 + C93711 * C3709) *
                C4075 +
            (C18759 + C18758) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18756 + C18757) * C93587 + (C18758 + C18759) * C4075) * C93737 +
           ((C15394 + C15393) * C93587 + (C15392 + C15391) * C4075) * C93819) *
              C93635 * C93621 * C98 +
          ((C15397 * C4075 + (C15396 + C15395) * C93587) * C93819 +
           ((C18757 + C18756) * C4075 +
            (C15354 * C1385 + C18746 + C18746 + C93818 * C1657 +
             C15355 * C3412 + C18747 + C18747 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C4075 +
            (C15391 + C15392) * C93587) *
               C93819 +
           ((C27650 + C27651) * C4075 + (C18759 + C18758) * C93587) * C93737) *
              C1382 -
          (((C27652 + C27653) * C93587 + (C27654 + C27655) * C4075) * C93737 +
           ((C18758 + C18759) * C93587 + (C27651 + C27650) * C4075) * C93819) *
              C1383 +
          (((C27655 + C27654) * C4075 + (C27653 + C27652) * C93587) * C93819 +
           ((C15354 * C11103 + C27634 + C27634 + C93818 * C11546 +
             C15355 * C14027 + C27635 + C27635 + C93711 * C14479) *
                C4075 +
            (C15354 * C11102 + C27636 + C27636 + C93818 * C11545 +
             C15355 * C14028 + C27637 + C27637 + C93711 * C14480) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C15092 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93818 +
            (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
               C4075 +
           ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
            (C22700 + C22699) * C15093 + (C23011 + C23010) * C93711) *
               C93587) *
              C93635 * C800 -
          (((C26764 + C26765) * C93711 + (C26446 + C26447) * C15093 +
            (C23010 + C23011) * C93818 + (C22699 + C22700) * C15092) *
               C93587 +
           ((C26766 + C26767) * C93711 + (C26450 + C26451) * C15093 +
            (C26763 + C26762) * C93818 + (C26441 + C26440) * C15092) *
               C4075) *
              C93635 * C801 +
          (((C26451 + C26450) * C15092 + (C26767 + C26766) * C93818 +
            (C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C15093 +
            (C20349 * C5039 + C93819 * C5448 + C20350 * C8741 +
             C93737 * C9195) *
                C93711) *
               C4075 +
           ((C26447 + C26446) * C15092 + (C26765 + C26764) * C93818 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C15093 +
            (C20349 * C5038 + C93819 * C5447 + C20350 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C15092 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93818 +
            (C20349 * C807 + C93819 * C955 + C20350 * C3409 + C93737 * C3565) *
                C15093 +
            (C20349 * C889 + C93819 * C1145 + C20350 * C3491 + C93737 * C3783) *
                C93711) *
               C4075 +
           ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
            (C22700 + C22699) * C15093 + (C23011 + C23010) * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C23008 + C23009) * C93711 + (C22695 + C22696) * C15093 +
            (C20628 + C20627) * C93818 + (C20381 + C20380) * C15092) *
               C93587 +
           ((C23010 + C23011) * C93711 + (C22699 + C22700) * C15093 +
            (C20626 + C20625) * C93818 + (C20377 + C20376) * C15092) *
               C4075) *
              C93635 * C93621 * C98 +
          ((C20388 * C15092 + C20631 * C93818 + (C22696 + C22695) * C15093 +
            (C23009 + C23008) * C93711) *
               C4075 +
           ((C20387 + C20386) * C15092 + (C20630 + C20629) * C93818 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C15093 +
            (C20349 * C886 + C93819 * C1142 + C20350 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C15092 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93818 +
            (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
               C4075 +
           ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
            (C22700 + C22699) * C15093 + (C23011 + C23010) * C93711) *
               C93587) *
              C1382 -
          (((C20350 * C5925 + C93737 * C6269 + C20349 * C3492 +
             C93819 * C3784) *
                C93711 +
            (C20350 * C5820 + C93737 * C6010 + C20349 * C3410 +
             C93819 * C3566) *
                C15093 +
            (C24006 + C24007) * C93818 + (C23679 + C23680) * C15092) *
               C93587 +
           ((C20350 * C5923 + C93737 * C6267 + C20349 * C3491 +
             C93819 * C3783) *
                C93711 +
            (C20350 * C5819 + C93737 * C6009 + C20349 * C3409 +
             C93819 * C3565) *
                C15093 +
            (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
             C93819 * C1726) *
                C93818 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C15092) *
               C4075) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C15092 +
            (C20349 * C1471 + C93819 * C1727 + C20350 * C11224 +
             C93737 * C11655) *
                C93818 +
            (C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
             C93737 * C14265) *
                C15093 +
            (C20349 * C5923 + C93819 * C6267 + C20350 * C14143 +
             C93737 * C14595) *
                C93711) *
               C4075 +
           ((C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
             C93737 * C11344) *
                C15092 +
            (C20349 * C1472 + C93819 * C1728 + C20350 * C11223 +
             C93737 * C11654) *
                C93818 +
            (C20349 * C5820 + C93819 * C6010 + C20350 * C14028 +
             C93737 * C14266) *
                C15093 +
            (C20349 * C5925 + C93819 * C6269 + C20350 * C14144 +
             C93737 * C14596) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C20349 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93819 +
            (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
               C93818 +
           ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
            (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
               C93711) *
              C93635 * C800 -
          (((C9312 + C9313) * C93737 + (C8986 + C8987) * C20350 +
            (C5558 + C5557) * C93819 + (C5275 + C5274) * C20349) *
               C93711 +
           ((C9314 + C9315) * C93737 + (C8990 + C8991) * C20350 +
            (C5556 + C5555) * C93819 + (C5271 + C5270) * C20349) *
               C93818) *
              C93635 * C801 +
          ((C5282 * C20349 + C5561 * C93819 + (C8987 + C8986) * C20350 +
            (C9313 + C9312) * C93737) *
               C93818 +
           ((C5281 + C5280) * C20349 + (C5560 + C5559) * C93819 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C20350 +
            (C4081 * C8843 + C4075 * C9301 + C4083 * C8844 + C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C20349 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93819 +
            (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
               C93818 +
           ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
            (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C4083 * C3567 + C93587 * C3855 + C4081 * C3566 + C4075 * C3854) *
                C93737 +
            (C4083 * C3411 + C93587 * C3415 + C4081 * C3410 + C4075 * C3414) *
                C20350 +
            (C7320 + C7319) * C93819 + (C6983 + C6982) * C20349) *
               C93711 +
           ((C13705 + C13704) * C93737 + (C13378 + C13377) * C20350 +
            (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93819 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C20349) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C20349 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93819 +
            (C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C20350 +
            (C4081 * C1534 + C4075 * C1782 + C4083 * C1533 + C93587 * C1781) *
                C93737) *
               C93818 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C20349 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93819 +
            (C4081 * C3411 + C4075 * C3415 + C4083 * C3412 + C93587 * C3416) *
                C20350 +
            (C4081 * C3567 + C4075 * C3855 + C4083 * C3568 + C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C20349 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93819 +
            (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
               C93818 +
           ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
            (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
               C93711) *
              C1382 -
          (((C14703 + C14702) * C93737 + (C14379 + C14378) * C20350 +
            (C9314 + C9315) * C93819 + (C8990 + C8991) * C20349) *
               C93711 +
           ((C11752 + C11751) * C93737 + (C11460 + C11459) * C20350 +
            (C11750 + C11749) * C93819 + (C11456 + C11455) * C20349) *
               C93818) *
              C1383 +
          ((C11467 * C20349 + C11755 * C93819 + (C11466 + C11465) * C20350 +
            (C11754 + C11753) * C93737) *
               C93818 +
           ((C14378 + C14379) * C20349 + (C14702 + C14703) * C93819 +
            (C4081 * C14027 + C4075 * C14029 + C4083 * C14028 +
             C93587 * C14030) *
                C20350 +
            (C4081 * C14265 + C4075 * C14695 + C4083 * C14266 +
             C93587 * C14696) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C20349 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93819 +
            (C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C20350 +
            (C15092 * C1536 + C93818 * C1842 + C15093 * C3565 +
             C93711 * C3923) *
                C93737) *
               C4075 +
           ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
            (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
               C93587) *
              C93635 * C800 -
          (((C15093 * C6007 + C93711 * C6425 + C15092 * C3566 +
             C93818 * C3924) *
                C93737 +
            (C15093 * C5817 + C93711 * C5921 + C15092 * C3410 +
             C93818 * C3492) *
                C20350 +
            (C18108 + C18109) * C93819 + (C17445 + C17446) * C20349) *
               C93587 +
           ((C15093 * C6008 + C93711 * C6426 + C15092 * C3565 +
             C93818 * C3923) *
                C93737 +
            (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
             C93818 * C3491) *
                C20350 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93819 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C20349) *
               C4075) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C20349 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C93819 +
            (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C20350 +
            (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 +
             C93711 * C9413) *
                C93737) *
               C4075 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C20349 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C93819 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C20350 +
            (C15092 * C6007 + C93818 * C6425 + C15093 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C20349 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93819 +
            (C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C20350 +
            (C15092 * C1536 + C93818 * C1842 + C15093 * C3565 +
             C93711 * C3923) *
                C93737) *
               C4075 +
           ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
            (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C19073 + C19074) * C93737 + (C18432 + C18433) * C20350 +
            (C15651 + C15650) * C93819 + (C15124 + C15123) * C20349) *
               C93587 +
           ((C19075 + C19076) * C93737 + (C18436 + C18437) * C20350 +
            (C15649 + C15648) * C93819 + (C15120 + C15119) * C20349) *
               C4075) *
              C93635 * C93621 * C98 +
          ((C15131 * C20349 + C15654 * C93819 + (C18433 + C18432) * C20350 +
            (C19074 + C19073) * C93737) *
               C4075 +
           ((C15130 + C15129) * C20349 + (C15653 + C15652) * C93819 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C20350 +
            (C15092 * C1533 + C93818 * C1839 + C15093 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C20349 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93819 +
            (C27316 + C27317) * C20350 + (C27962 + C27963) * C93737) *
               C4075 +
           ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
            (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
               C93587) *
              C1382 -
          (((C27964 + C27965) * C93737 + (C27322 + C27323) * C20350 +
            (C19075 + C19076) * C93819 + (C18436 + C18437) * C20349) *
               C93587 +
           ((C27966 + C27967) * C93737 + (C27326 + C27327) * C20350 +
            (C27963 + C27962) * C93819 + (C27317 + C27316) * C20349) *
               C4075) *
              C1383 +
          (((C27327 + C27326) * C20349 + (C27967 + C27966) * C93819 +
            (C15092 * C11103 + C93818 * C11224 + C15093 * C14027 +
             C93711 * C14143) *
                C20350 +
            (C15092 * C11345 + C93818 * C11830 + C15093 * C14265 +
             C93711 * C14801) *
                C93737) *
               C4075 +
           ((C27323 + C27322) * C20349 + (C27965 + C27964) * C93819 +
            (C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
             C93711 * C14144) *
                C20350 +
            (C15092 * C11344 + C93818 * C11829 + C15093 * C14266 +
             C93711 * C14802) *
                C93737) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C93818 +
            (C27090 + C27091) * C93711) *
               C4075 +
           ((C20907 + C20908) * C93818 + (C23338 + C23337) * C93711) * C93587) *
              C93635 * C800 -
          (((C27092 + C27093) * C93711 + (C23337 + C23338) * C93818) * C93587 +
           ((C27094 + C27095) * C93711 + (C27091 + C27090) * C93818) * C4075) *
              C93635 * C801 +
          (((C27095 + C27094) * C93818 +
            (C20870 * C4917 + C27074 + C27074 + C93819 * C5716 +
             C20871 * C8615 + C27075 + C27075 + C93737 * C9513) *
                C93711) *
               C4075 +
           ((C27093 + C27092) * C93818 +
            (C20870 * C4916 + C27076 + C27076 + C93819 * C5715 +
             C20871 * C8616 + C27077 + C27077 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C93818 +
            (C20870 * C807 + C21587 + C21587 + C93819 * C1319 + C20871 * C3409 +
             C21586 + C21586 + C93737 * C3993) *
                C93711) *
               C4075 +
           ((C20907 + C20908) * C93818 + (C23338 + C23337) * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C23335 + C23336) * C93711 + (C20910 + C20909) * C93818) * C93587 +
           ((C23337 + C23338) * C93711 + (C20908 + C20907) * C93818) * C4075) *
              C93635 * C93621 * C98 +
          ((C20913 * C93818 + (C23336 + C23335) * C93711) * C4075 +
           ((C20912 + C20911) * C93818 +
            (C20870 * C804 + C23325 + C23325 + C93819 * C1316 + C20871 * C3412 +
             C23326 + C23326 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C93818 +
            (C27090 + C27091) * C93711) *
               C4075 +
           ((C20907 + C20908) * C93818 + (C23338 + C23337) * C93711) * C93587) *
              C1382 -
          (((C20871 * C5820 + C25235 + C25235 + C93737 * C6509 +
             C20870 * C3410 + C25234 + C25234 + C93819 * C3994) *
                C93711 +
            (C24339 + C24340) * C93818) *
               C93587 +
           ((C20871 * C5819 + C25233 + C25233 + C93737 * C6507 +
             C20870 * C3409 + C25232 + C25232 + C93819 * C3993) *
                C93711 +
            (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
             C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                C93818) *
               C4075) *
              C1383 +
          (((C20870 * C1389 + C22371 + C22371 + C93819 * C1901 +
             C20871 * C11103 + C22372 + C22372 + C93737 * C11920) *
                C93818 +
            (C20870 * C5819 + C28066 + C28066 + C93819 * C6507 +
             C20871 * C14027 + C28067 + C28067 + C93737 * C14907) *
                C93711) *
               C4075 +
           ((C20870 * C1390 + C22373 + C22373 + C93819 * C1902 +
             C20871 * C11102 + C22374 + C22374 + C93737 * C11919) *
                C93818 +
            (C20870 * C5820 + C28068 + C28068 + C93819 * C6509 +
             C20871 * C14028 + C28069 + C28069 + C93737 * C14908) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
              C4086 + C4086 + C93587 * C121) *
                 C93819 +
             (C11143 + C11144) * C93737) *
                C93818 +
            ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
               C2695 -
           (((C14045 + C14044) * C93737 + (C8642 + C8643) * C93819) * C93711 +
            ((C11146 + C11145) * C93737 + (C11144 + C11143) * C93819) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C13032 + C13033) * C93819 + (C13034 + C13035) * C93737) * C93818 +
            ((C28208 + C28209) * C93819 +
             (C4080 * C5820 + C12037 + C12037 + C4075 * C5832 + C4082 * C12033 +
              C12038 + C12038 + C93587 * C12035) *
                 C93737) *
                C93711) *
               C2696 -
           (((C28209 + C28208) * C93737 + (C6638 + C6637) * C93819) * C93711 +
            ((C13033 + C13032) * C93737 +
             (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
              C4096 + C4096 + C4075 * C121) *
                 C93819) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C4081 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C4075 +
             (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
                C93819 +
            ((C27316 + C27317) * C4081 + (C27318 + C27319) * C4075 +
             C29564 * C4083 + C29565 * C93587) *
                C93737) *
               C2695 -
           (((C27320 + C27321) * C93587 + (C27322 + C27323) * C4083 +
             (C27324 + C27325) * C4075 + (C27326 + C27327) * C4081) *
                C93737 +
            (C29566 * C93587 + C29567 * C4083 + (C27319 + C27318) * C4075 +
             (C27317 + C27316) * C4081) *
                C93819) *
               C2696) *
              C93621 * C1981 +
          (((C29564 * C4081 + C29565 * C4075 + (C18433 + C18432) * C4083 +
             (C18431 + C18430) * C93587) *
                C93819 +
            ((C27323 + C27322) * C4081 + (C27321 + C27320) * C4075 +
             (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
              C93711 * C12136) *
                 C4083 +
             (C15092 * C1399 + C93818 * C1481 + C15093 * C12034 +
              C93711 * C12137) *
                 C93587) *
                C93737) *
               C2696 -
           (((C18430 + C18431) * C93587 + (C18432 + C18433) * C4083 +
             C29566 * C4075 + C29567 * C4081) *
                C93737 +
            ((C15126 + C15125) * C93587 + (C15124 + C15123) * C4083 +
             (C15122 + C15121) * C4075 + (C15120 + C15119) * C4081) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C4081 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C4075 +
             (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
                C93818 +
            ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
             C28482 * C4083 + C28483 * C93587) *
                C93711) *
               C2695 -
           (((C29706 + C29707) * C93587 + (C29708 + C29709) * C4083 +
             (C20350 * C5825 + C93737 * C6015 + C20349 * C3413 +
              C93819 * C3569) *
                 C4075 +
             (C20350 * C5819 + C93737 * C6009 + C20349 * C3409 +
              C93819 * C3565) *
                 C4081) *
                C93711 +
            ((C23677 + C23678) * C93587 + (C23679 + C23680) * C4083 +
             (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C4075 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C4081) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C4081 + (C23678 + C23677) * C4075 +
             (C23676 + C23675) * C4083 + (C23674 + C23673) * C93587) *
                C93818 +
            ((C29709 + C29708) * C4081 + (C29707 + C29706) * C4075 +
             (C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
              C93737 * C12248) *
                 C4083 +
             (C20349 * C3415 + C93819 * C3571 + C20350 * C12034 +
              C93737 * C12249) *
                 C93587) *
                C93711) *
               C2696 -
           (((C22693 + C22694) * C93587 + (C22695 + C22696) * C4083 +
             C28484 * C4075 + C28485 * C4081) *
                C93711 +
            ((C20383 + C20382) * C93587 + (C20381 + C20380) * C4083 +
             (C20379 + C20378) * C4075 + (C20377 + C20376) * C4081) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C15092 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93818 +
             (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
                C93819 +
            ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
             (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
                C93737) *
               C2695 -
           (((C14381 + C14380) * C93711 + (C14379 + C14378) * C15093 +
             (C11462 + C11461) * C93818 + (C11460 + C11459) * C15092) *
                C93737 +
            ((C8988 + C8989) * C93711 + (C8990 + C8991) * C15093 +
             (C11458 + C11457) * C93818 + (C11456 + C11455) * C15092) *
                C93819) *
               C2696) *
              C93621 * C1981 +
          ((((C13377 + C13378) * C15092 + (C13379 + C13380) * C93818 +
             (C28624 + C28625) * C15093 + (C28626 + C28627) * C93711) *
                C93819 +
            ((C13381 + C13382) * C15092 + (C13383 + C13384) * C93818 +
             (C4081 * C5820 + C4075 * C5826 + C4083 * C12033 +
              C93587 * C12034) *
                 C15093 +
             (C4081 * C5925 + C4075 * C6096 + C4083 * C12136 +
              C93587 * C12366) *
                 C93711) *
                C93737) *
               C2696 -
           (((C28627 + C28626) * C93711 + (C28625 + C28624) * C15093 +
             (C13380 + C13379) * C93818 + (C13378 + C13377) * C15092) *
                C93737 +
            ((C6985 + C6984) * C93711 + (C6983 + C6982) * C15093 +
             (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                 C93818 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C15092) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C4075 +
             (C15391 + C15392) * C93587) *
                C93819 +
            ((C27650 + C27651) * C4075 + C29970 * C93587) * C93737) *
               C2695 -
           (((C27652 + C27653) * C93587 + (C27654 + C27655) * C4075) * C93737 +
            (C29971 * C93587 + (C27651 + C27650) * C4075) * C93819) *
               C2696) *
              C93621 * C1981 +
          (((C29970 * C4075 + (C18757 + C18756) * C93587) * C93819 +
            ((C27653 + C27652) * C4075 +
             (C15354 * C1391 + C16910 + C16910 + C93818 * C1663 +
              C15355 * C12033 + C16911 + C16911 + C93711 * C12465) *
                 C93587) *
                C93737) *
               C2696 -
           (((C18756 + C18757) * C93587 + C29971 * C4075) * C93737 +
            ((C15394 + C15393) * C93587 + (C15392 + C15391) * C4075) * C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C15092 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93818 +
             (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
                C4075 +
            ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
             C28482 * C15093 + C28898 * C93711) *
                C93587) *
               C2695 -
           (((C30106 + C30107) * C93711 + (C29708 + C29709) * C15093 +
             (C24006 + C24007) * C93818 + (C23679 + C23680) * C15092) *
                C93587 +
            ((C20350 * C5923 + C93737 * C6267 + C20349 * C3491 +
              C93819 * C3783) *
                 C93711 +
             (C20350 * C5819 + C93737 * C6009 + C20349 * C3409 +
              C93819 * C3565) *
                 C15093 +
             (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C93818 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C15092) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C15092 + (C24007 + C24006) * C93818 +
             (C29709 + C29708) * C15093 + (C30107 + C30106) * C93711) *
                C4075 +
            ((C23676 + C23675) * C15092 + (C24005 + C24004) * C93818 +
             (C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
              C93737 * C12248) *
                 C15093 +
             (C20349 * C3493 + C93819 * C3785 + C20350 * C12136 +
              C93737 * C12575) *
                 C93711) *
                C93587) *
               C2696 -
           (((C23008 + C23009) * C93711 + (C22695 + C22696) * C15093 +
             (C20628 + C20627) * C93818 + (C20381 + C20380) * C15092) *
                C93587 +
            (C28899 * C93711 + C28485 * C15093 + (C20626 + C20625) * C93818 +
             (C20377 + C20376) * C15092) *
                C4075) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C20349 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93819 +
             (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
                C93818 +
            ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
             (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
                C93711) *
               C2695 -
           (((C14703 + C14702) * C93737 + (C14379 + C14378) * C20350 +
             (C9314 + C9315) * C93819 + (C8990 + C8991) * C20349) *
                C93711 +
            ((C11752 + C11751) * C93737 + (C11460 + C11459) * C20350 +
             (C11750 + C11749) * C93819 + (C11456 + C11455) * C20349) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C13377 + C13378) * C20349 + (C13704 + C13705) * C93819 +
             (C13381 + C13382) * C20350 + (C13706 + C13707) * C93737) *
                C93818 +
            ((C28624 + C28625) * C20349 + (C29034 + C29035) * C93819 +
             (C4081 * C5820 + C4075 * C5826 + C4083 * C12033 +
              C93587 * C12034) *
                 C20350 +
             (C4081 * C6010 + C4075 * C6348 + C4083 * C12248 +
              C93587 * C12683) *
                 C93737) *
                C93711) *
               C2696 -
           (((C29035 + C29034) * C93737 + (C28625 + C28624) * C20350 +
             (C7320 + C7319) * C93819 + (C6983 + C6982) * C20349) *
                C93711 +
            ((C13705 + C13704) * C93737 + (C13378 + C13377) * C20350 +
             (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93819 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C20349) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C20349 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C93819 +
             (C27316 + C27317) * C20350 + (C27962 + C27963) * C93737) *
                C4075 +
            ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
             C29564 * C20350 + C30368 * C93737) *
                C93587) *
               C2695 -
           (((C27964 + C27965) * C93737 + (C27322 + C27323) * C20350 +
             C30369 * C93819 + C29567 * C20349) *
                C93587 +
            ((C27966 + C27967) * C93737 + (C27326 + C27327) * C20350 +
             (C27963 + C27962) * C93819 + (C27317 + C27316) * C20349) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C29564 * C20349 + C30368 * C93819 + (C27323 + C27322) * C20350 +
             (C27965 + C27964) * C93737) *
                C4075 +
            ((C18433 + C18432) * C20349 + (C19074 + C19073) * C93819 +
             (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
              C93711 * C12136) *
                 C20350 +
             (C15092 * C1539 + C93818 * C1845 + C15093 * C12248 +
              C93711 * C12782) *
                 C93737) *
                C93587) *
               C2696 -
           (((C19073 + C19074) * C93737 + (C18432 + C18433) * C20350 +
             (C15651 + C15650) * C93819 + (C15124 + C15123) * C20349) *
                C93587 +
            (C30369 * C93737 + C29567 * C20350 + (C15649 + C15648) * C93819 +
             (C15120 + C15119) * C20349) *
                C4075) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C93818 +
             (C27090 + C27091) * C93711) *
                C4075 +
            ((C20907 + C20908) * C93818 + C29302 * C93711) * C93587) *
               C2695 -
           (((C30508 + C30509) * C93711 + (C24339 + C24340) * C93818) * C93587 +
            ((C20871 * C5819 + C25233 + C25233 + C93737 * C6507 +
              C20870 * C3409 + C25232 + C25232 + C93819 * C3993) *
                 C93711 +
             (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
              C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                 C93818) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          ((((C24340 + C24339) * C93818 + (C30509 + C30508) * C93711) * C4075 +
            ((C24338 + C24337) * C93818 +
             (C20870 * C3411 + C25236 + C25236 + C93819 * C3995 +
              C20871 * C12033 + C25237 + C25237 + C93737 * C12893) *
                 C93711) *
                C93587) *
               C2696 -
           (((C23335 + C23336) * C93711 + (C20910 + C20909) * C93818) * C93587 +
            (C29303 * C93711 + (C20908 + C20907) * C93818) * C4075) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93819 +
            (C11143 + C11144) * C93737) *
               C93818 +
           ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C4082 * C3411 + C7638 + C7638 + C93587 * C3419 + C4080 * C3410 +
             C7637 + C7637 + C4075 * C3418) *
                C93737 +
            (C6638 + C6637) * C93819) *
               C93711 +
           ((C13033 + C13032) * C93737 +
            (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
             C4096 + C4096 + C4075 * C121) *
                C93819) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 +
             C4098 + C4098 + C93587 * C123) *
                C93819 +
            (C4080 * C1386 + C9607 + C9607 + C4075 * C1402 + C4082 * C1385 +
             C9608 + C9608 + C93587 * C1401) *
                C93737) *
               C93818 +
           ((C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 +
             C4100 + C4100 + C93587 * C820) *
                C93819 +
            (C4080 * C3411 + C25336 + C25336 + C4075 * C3419 + C4082 * C3412 +
             C25337 + C25337 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93819 +
            (C11143 + C11144) * C93737) *
               C93818 +
           ((C4957 + C4958) * C93819 + (C8643 + C8642) * C93737) * C93711) *
              C93635 * C800 -
          (((C8640 + C8641) * C93737 + (C4960 + C4959) * C93819) * C93711 +
           ((C8642 + C8643) * C93737 + (C4958 + C4957) * C93819) * C93818) *
              C93635 * C801 +
          ((C4963 * C93819 + (C8641 + C8640) * C93737) * C93818 +
           ((C4962 + C4961) * C93819 +
            (C4080 * C8615 + C8630 + C8630 + C4075 * C8619 + C4082 * C8616 +
             C8631 + C8631 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C4081 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C4075 +
            (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
               C93819 +
           ((C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C4081 +
            (C15092 * C1396 + C93818 * C1478 + C15093 * C3413 +
             C93711 * C3495) *
                C4075 +
            (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18430 + C18431) * C93587 + (C18432 + C18433) * C4083 +
            (C18434 + C18435) * C4075 + (C18436 + C18437) * C4081) *
               C93737 +
           ((C15126 + C15125) * C93587 + (C15124 + C15123) * C4083 +
            (C15122 + C15121) * C4075 + (C15120 + C15119) * C4081) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C15131 * C4081 + C15132 * C4075 + (C15130 + C15129) * C4083 +
            (C15128 + C15127) * C93587) *
               C93819 +
           ((C18433 + C18432) * C4081 + (C18431 + C18430) * C4075 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C4083 +
            (C15092 * C1393 + C93818 * C1475 + C15093 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C4081 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C4075 +
            (C15119 + C15120) * C4083 + (C15121 + C15122) * C93587) *
               C93819 +
           ((C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C4081 +
            (C15092 * C1396 + C93818 * C1478 + C15093 * C3413 +
             C93711 * C3495) *
                C4075 +
            (C18437 + C18436) * C4083 + (C18435 + C18434) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C15093 * C5823 + C93711 * C5927 + C15092 * C3414 +
             C93818 * C3496) *
                C93587 +
            (C15093 * C5817 + C93711 * C5921 + C15092 * C3410 +
             C93818 * C3492) *
                C4083 +
            (C15093 * C5824 + C93711 * C5928 + C15092 * C3413 +
             C93818 * C3495) *
                C4075 +
            (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
             C93818 * C3491) *
                C4081) *
               C93737 +
           ((C17443 + C17444) * C93587 + (C17445 + C17446) * C4083 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C4075 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C4081) *
               C93819) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C4081 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C4075 +
            (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C4083 +
            (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
                C93587) *
               C93819 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C4081 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C4075 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C4083 +
            (C15092 * C5823 + C93818 * C5927 + C15093 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C4081 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C4075 +
            (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
               C93818 +
           ((C20349 * C807 + C93819 * C955 + C20350 * C3409 + C93737 * C3565) *
                C4081 +
            (C20349 * C815 + C93819 * C963 + C20350 * C3413 + C93737 * C3569) *
                C4075 +
            (C22700 + C22699) * C4083 + (C22698 + C22697) * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C22693 + C22694) * C93587 + (C22695 + C22696) * C4083 +
            (C22697 + C22698) * C4075 + (C22699 + C22700) * C4081) *
               C93711 +
           ((C20383 + C20382) * C93587 + (C20381 + C20380) * C4083 +
            (C20379 + C20378) * C4075 + (C20377 + C20376) * C4081) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C20388 * C4081 + C20389 * C4075 + (C20387 + C20386) * C4083 +
            (C20385 + C20384) * C93587) *
               C93818 +
           ((C22696 + C22695) * C4081 + (C22694 + C22693) * C4075 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C4083 +
            (C20349 * C812 + C93819 * C960 + C20350 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C4081 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C4075 +
            (C20376 + C20377) * C4083 + (C20378 + C20379) * C93587) *
               C93818 +
           ((C26440 + C26441) * C4081 + (C26442 + C26443) * C4075 +
            (C22700 + C22699) * C4083 + (C22698 + C22697) * C93587) *
               C93711) *
              C93635 * C800 -
          (((C26444 + C26445) * C93587 + (C26446 + C26447) * C4083 +
            (C26448 + C26449) * C4075 + (C26450 + C26451) * C4081) *
               C93711 +
           ((C22697 + C22698) * C93587 + (C22699 + C22700) * C4083 +
            (C26443 + C26442) * C4075 + (C26441 + C26440) * C4081) *
               C93818) *
              C93635 * C801 +
          (((C26451 + C26450) * C4081 + (C26449 + C26448) * C4075 +
            (C26447 + C26446) * C4083 + (C26445 + C26444) * C93587) *
               C93818 +
           ((C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C4081 +
            (C20349 * C4921 + C93819 * C5125 + C20350 * C8617 +
             C93737 * C8845) *
                C4075 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C4083 +
            (C20349 * C4920 + C93819 * C5124 + C20350 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C15092 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93818 +
            (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
               C93819 +
           ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
            (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C4083 * C3493 + C93587 * C3641 + C4081 * C3492 + C4075 * C3640) *
                C93711 +
            (C4083 * C3411 + C93587 * C3415 + C4081 * C3410 + C4075 * C3414) *
                C15093 +
            (C13380 + C13379) * C93818 + (C13378 + C13377) * C15092) *
               C93737 +
           ((C6985 + C6984) * C93711 + (C6983 + C6982) * C15093 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C93818 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C15092) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C15092 +
            (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
                C93818 +
            (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C15093 +
            (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
                C93711) *
               C93819 +
           ((C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C15092 +
            (C4081 * C1468 + C4075 * C1600 + C4083 * C1467 + C93587 * C1599) *
                C93818 +
            (C4081 * C3411 + C4075 * C3415 + C4083 * C3412 + C93587 * C3416) *
                C15093 +
            (C4081 * C3493 + C4075 * C3641 + C4083 * C3494 + C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C15092 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93818 +
            (C5270 + C5271) * C15093 + (C5272 + C5273) * C93711) *
               C93819 +
           ((C11455 + C11456) * C15092 + (C11457 + C11458) * C93818 +
            (C8991 + C8990) * C15093 + (C8989 + C8988) * C93711) *
               C93737) *
              C93635 * C800 -
          (((C8984 + C8985) * C93711 + (C8986 + C8987) * C15093 +
            (C8988 + C8989) * C93818 + (C8990 + C8991) * C15092) *
               C93737 +
           ((C5277 + C5276) * C93711 + (C5275 + C5274) * C15093 +
            (C5273 + C5272) * C93818 + (C5271 + C5270) * C15092) *
               C93819) *
              C93635 * C801 +
          ((C5282 * C15092 + C5283 * C93818 + (C5281 + C5280) * C15093 +
            (C5279 + C5278) * C93711) *
               C93819 +
           ((C8987 + C8986) * C15092 + (C8985 + C8984) * C93818 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C15093 +
            (C4081 * C8741 + C4075 * C8965 + C4083 * C8742 + C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C4075 +
            (C15391 + C15392) * C93587) *
               C93819 +
           ((C15354 * C1388 + C16905 + C16905 + C93818 * C1660 +
             C15355 * C3409 + C16904 + C16904 + C93711 * C3709) *
                C4075 +
            (C18759 + C18758) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18756 + C18757) * C93587 + (C18758 + C18759) * C4075) * C93737 +
           ((C15394 + C15393) * C93587 + (C15392 + C15391) * C4075) * C93819) *
              C93635 * C93621 * C98 +
          ((C15397 * C4075 + (C15396 + C15395) * C93587) * C93819 +
           ((C18757 + C18756) * C4075 +
            (C15354 * C1385 + C18746 + C18746 + C93818 * C1657 +
             C15355 * C3412 + C18747 + C18747 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C4075 +
            (C15391 + C15392) * C93587) *
               C93819 +
           ((C15354 * C1388 + C16905 + C16905 + C93818 * C1660 +
             C15355 * C3409 + C16904 + C16904 + C93711 * C3709) *
                C4075 +
            (C18759 + C18758) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C15355 * C5817 + C19719 + C19719 + C93711 * C6173 +
             C15354 * C3410 + C19718 + C19718 + C93818 * C3710) *
                C93587 +
            (C15355 * C5818 + C19717 + C19717 + C93711 * C6174 +
             C15354 * C3409 + C19716 + C19716 + C93818 * C3709) *
                C4075) *
               C93737 +
           ((C17785 + C17786) * C93587 +
            (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
             C16197 + C16197 + C93818 * C1079) *
                C4075) *
               C93819) *
              C93635 * C801 +
          (((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
             C16199 + C16199 + C93711 * C5358) *
                C4075 +
            (C15354 * C809 + C16200 + C16200 + C93818 * C1081 + C15355 * C4916 +
             C16201 + C16201 + C93711 * C5357) *
                C93587) *
               C93819 +
           ((C15354 * C5818 + C26648 + C26648 + C93818 * C6174 +
             C15355 * C8615 + C26649 + C26649 + C93711 * C9089) *
                C4075 +
            (C15354 * C5817 + C26650 + C26650 + C93818 * C6173 +
             C15355 * C8616 + C26651 + C26651 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C15092 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93818 +
            (C20349 * C807 + C93819 * C955 + C20350 * C3409 + C93737 * C3565) *
                C15093 +
            (C20349 * C889 + C93819 * C1145 + C20350 * C3491 + C93737 * C3783) *
                C93711) *
               C4075 +
           ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
            (C22700 + C22699) * C15093 + (C23011 + C23010) * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C23008 + C23009) * C93711 + (C22695 + C22696) * C15093 +
            (C20628 + C20627) * C93818 + (C20381 + C20380) * C15092) *
               C93587 +
           ((C23010 + C23011) * C93711 + (C22699 + C22700) * C15093 +
            (C20626 + C20625) * C93818 + (C20377 + C20376) * C15092) *
               C4075) *
              C93635 * C93621 * C98 +
          ((C20388 * C15092 + C20631 * C93818 + (C22696 + C22695) * C15093 +
            (C23009 + C23008) * C93711) *
               C4075 +
           ((C20387 + C20386) * C15092 + (C20630 + C20629) * C93818 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C15093 +
            (C20349 * C886 + C93819 * C1142 + C20350 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C15092 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93818 +
            (C26440 + C26441) * C15093 + (C26762 + C26763) * C93711) *
               C4075 +
           ((C20376 + C20377) * C15092 + (C20625 + C20626) * C93818 +
            (C22700 + C22699) * C15093 + (C23011 + C23010) * C93711) *
               C93587) *
              C93635 * C800 -
          (((C26764 + C26765) * C93711 + (C26446 + C26447) * C15093 +
            (C23010 + C23011) * C93818 + (C22699 + C22700) * C15092) *
               C93587 +
           ((C26766 + C26767) * C93711 + (C26450 + C26451) * C15093 +
            (C26763 + C26762) * C93818 + (C26441 + C26440) * C15092) *
               C4075) *
              C93635 * C801 +
          (((C26451 + C26450) * C15092 + (C26767 + C26766) * C93818 +
            (C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C15093 +
            (C20349 * C5039 + C93819 * C5448 + C20350 * C8741 +
             C93737 * C9195) *
                C93711) *
               C4075 +
           ((C26447 + C26446) * C15092 + (C26765 + C26764) * C93818 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C15093 +
            (C20349 * C5038 + C93819 * C5447 + C20350 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C20349 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93819 +
            (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
               C93818 +
           ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
            (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C4083 * C3567 + C93587 * C3855 + C4081 * C3566 + C4075 * C3854) *
                C93737 +
            (C4083 * C3411 + C93587 * C3415 + C4081 * C3410 + C4075 * C3414) *
                C20350 +
            (C7320 + C7319) * C93819 + (C6983 + C6982) * C20349) *
               C93711 +
           ((C13705 + C13704) * C93737 + (C13378 + C13377) * C20350 +
            (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93819 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C20349) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C20349 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93819 +
            (C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C20350 +
            (C4081 * C1534 + C4075 * C1782 + C4083 * C1533 + C93587 * C1781) *
                C93737) *
               C93818 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C20349 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93819 +
            (C4081 * C3411 + C4075 * C3415 + C4083 * C3412 + C93587 * C3416) *
                C20350 +
            (C4081 * C3567 + C4075 * C3855 + C4083 * C3568 + C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C20349 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93819 +
            (C11455 + C11456) * C20350 + (C11749 + C11750) * C93737) *
               C93818 +
           ((C5270 + C5271) * C20349 + (C5555 + C5556) * C93819 +
            (C8991 + C8990) * C20350 + (C9315 + C9314) * C93737) *
               C93711) *
              C93635 * C800 -
          (((C9312 + C9313) * C93737 + (C8986 + C8987) * C20350 +
            (C5558 + C5557) * C93819 + (C5275 + C5274) * C20349) *
               C93711 +
           ((C9314 + C9315) * C93737 + (C8990 + C8991) * C20350 +
            (C5556 + C5555) * C93819 + (C5271 + C5270) * C20349) *
               C93818) *
              C93635 * C801 +
          ((C5282 * C20349 + C5561 * C93819 + (C8987 + C8986) * C20350 +
            (C9313 + C9312) * C93737) *
               C93818 +
           ((C5281 + C5280) * C20349 + (C5560 + C5559) * C93819 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C20350 +
            (C4081 * C8843 + C4075 * C9301 + C4083 * C8844 + C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C20349 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93819 +
            (C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C20350 +
            (C15092 * C1536 + C93818 * C1842 + C15093 * C3565 +
             C93711 * C3923) *
                C93737) *
               C4075 +
           ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
            (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C19073 + C19074) * C93737 + (C18432 + C18433) * C20350 +
            (C15651 + C15650) * C93819 + (C15124 + C15123) * C20349) *
               C93587 +
           ((C19075 + C19076) * C93737 + (C18436 + C18437) * C20350 +
            (C15649 + C15648) * C93819 + (C15120 + C15119) * C20349) *
               C4075) *
              C93635 * C93621 * C98 +
          ((C15131 * C20349 + C15654 * C93819 + (C18433 + C18432) * C20350 +
            (C19074 + C19073) * C93737) *
               C4075 +
           ((C15130 + C15129) * C20349 + (C15653 + C15652) * C93819 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C20350 +
            (C15092 * C1533 + C93818 * C1839 + C15093 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C20349 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93819 +
            (C15092 * C1388 + C93818 * C1470 + C15093 * C3409 +
             C93711 * C3491) *
                C20350 +
            (C15092 * C1536 + C93818 * C1842 + C15093 * C3565 +
             C93711 * C3923) *
                C93737) *
               C4075 +
           ((C15119 + C15120) * C20349 + (C15648 + C15649) * C93819 +
            (C18437 + C18436) * C20350 + (C19076 + C19075) * C93737) *
               C93587) *
              C93635 * C800 -
          (((C15093 * C6007 + C93711 * C6425 + C15092 * C3566 +
             C93818 * C3924) *
                C93737 +
            (C15093 * C5817 + C93711 * C5921 + C15092 * C3410 +
             C93818 * C3492) *
                C20350 +
            (C18108 + C18109) * C93819 + (C17445 + C17446) * C20349) *
               C93587 +
           ((C15093 * C6008 + C93711 * C6426 + C15092 * C3565 +
             C93818 * C3923) *
                C93737 +
            (C15093 * C5818 + C93711 * C5922 + C15092 * C3409 +
             C93818 * C3491) *
                C20350 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93819 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C20349) *
               C4075) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C20349 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C93819 +
            (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C20350 +
            (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 +
             C93711 * C9413) *
                C93737) *
               C4075 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C20349 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C93819 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C20350 +
            (C15092 * C6007 + C93818 * C6425 + C15093 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C93818 +
            (C20870 * C807 + C21587 + C21587 + C93819 * C1319 + C20871 * C3409 +
             C21586 + C21586 + C93737 * C3993) *
                C93711) *
               C4075 +
           ((C20907 + C20908) * C93818 + (C23338 + C23337) * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C23335 + C23336) * C93711 + (C20910 + C20909) * C93818) * C93587 +
           ((C23337 + C23338) * C93711 + (C20908 + C20907) * C93818) * C4075) *
              C93635 * C93621 * C98 +
          ((C20913 * C93818 + (C23336 + C23335) * C93711) * C4075 +
           ((C20912 + C20911) * C93818 +
            (C20870 * C804 + C23325 + C23325 + C93819 * C1316 + C20871 * C3412 +
             C23326 + C23326 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C93818 +
            (C27090 + C27091) * C93711) *
               C4075 +
           ((C20907 + C20908) * C93818 + (C23338 + C23337) * C93711) * C93587) *
              C93635 * C800 -
          (((C27092 + C27093) * C93711 + (C23337 + C23338) * C93818) * C93587 +
           ((C27094 + C27095) * C93711 + (C27091 + C27090) * C93818) * C4075) *
              C93635 * C801 +
          (((C27095 + C27094) * C93818 +
            (C20870 * C4917 + C27074 + C27074 + C93819 * C5716 +
             C20871 * C8615 + C27075 + C27075 + C93737 * C9513) *
                C93711) *
               C4075 +
           ((C27093 + C27092) * C93818 +
            (C20870 * C4916 + C27076 + C27076 + C93819 * C5715 +
             C20871 * C8616 + C27077 + C27077 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 +
                       C4082 * C109 + C4086 + C4086 + C93587 * C121) *
                          C93673 * C4077 +
                      (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
                         C93635 * C1979 -
                     ((C4961 + C4962) * C93673 * C4079 +
                      (C4960 + C4959) * C93673 * C4078 +
                      (C4958 + C4957) * C93673 * C4077) *
                         C93635 * C1980) *
                        C1981 +
                    (((C6637 + C6638) * C93673 * C4077 +
                      (C6639 + C6640) * C93673 * C4078 +
                      (C4080 * C4916 + C6627 + C6627 + C4075 * C4924 +
                       C4082 * C6615 + C6628 + C6628 + C93587 * C6617) *
                          C93673 * C4079) *
                         C93635 * C1980 -
                     ((C6640 + C6639) * C93673 * C4079 +
                      (C6638 + C6637) * C93673 * C4078 +
                      (C4082 * C110 + C4095 + C4095 + C93587 * C122 +
                       C4080 * C109 + C4096 + C4096 + C4075 * C121) *
                          C93673 * C4077) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 +
                      C128 + C128 + C90 * C121 + C104 * C110 + C129 + C129 +
                      C91 * C122 + C106 * C111 + C130 + C130 + C92 * C123) *
                         C93673 * C93662 * C93635 * C1979 -
                     (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 +
                      C830 + C830 + C91 * C821 + C102 * C806 + C831 + C831 +
                      C90 * C822 + C100 * C807 + C832 + C832 + C89 * C823) *
                         C93673 * C93662 * C93635 * C1980) *
                        C1981 +
                    ((C100 * C806 + C1987 + C1987 + C89 * C822 + C102 * C805 +
                      C1988 + C1988 + C90 * C821 + C104 * C804 + C1989 + C1989 +
                      C91 * C820 + C106 * C1983 + C1990 + C1990 + C92 * C1985) *
                         C93673 * C93662 * C93635 * C1980 -
                     (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 +
                      C132 + C132 + C91 * C123 + C102 * C110 + C133 + C133 +
                      C90 * C122 + C100 * C109 + C134 + C134 + C89 * C121) *
                         C93673 * C93662 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 +
                       C4082 * C109 + C4086 + C4086 + C93587 * C121) *
                          C9601 +
                      (C11143 + C11144) * C9602 + C11149 * C9603) *
                         C93662 * C93635 * C1979 -
                     ((C4082 * C5820 + C5845 + C5845 + C93587 * C5832 +
                       C4080 * C5819 + C5844 + C5844 + C4075 * C5831) *
                          C9603 +
                      (C8642 + C8643) * C9602 + (C4958 + C4957) * C9601) *
                         C93662 * C93635 * C1980) *
                        C1981 +
                    (((C6637 + C6638) * C9601 +
                      (C4080 * C3410 + C7637 + C7637 + C4075 * C3418 +
                       C4082 * C3411 + C7638 + C7638 + C93587 * C3419) *
                          C9602 +
                      (C4080 * C5820 + C12037 + C12037 + C4075 * C5832 +
                       C4082 * C12033 + C12038 + C12038 + C93587 * C12035) *
                          C9603) *
                         C93662 * C93635 * C1980 -
                     ((C4082 * C1391 + C9605 + C9605 + C93587 * C1407 +
                       C4080 * C1390 + C9606 + C9606 + C4075 * C1406) *
                          C9603 +
                      (C4082 * C1386 + C7636 + C7636 + C93587 * C1402 +
                       C4080 * C1387 + C7635 + C7635 + C4075 * C1403) *
                          C9602 +
                      (C4082 * C110 + C4095 + C4095 + C93587 * C122 +
                       C4080 * C109 + C4096 + C4096 + C4075 * C121) *
                          C9601) *
                         C93662 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C93635 * C1979 -
           ((C6753 + C6754 + C6755) * C93587 + (C6756 + C6757 + C6758) * C4083 +
            (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C4075 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C4081) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C6758 + C6757 + C6756) * C4081 + (C6755 + C6754 + C6753) * C4075 +
            (C4176 * C805 + C4077 * C887 + C4177 * C810 + C4078 * C892 +
             C4178 * C6615 + C4079 * C6738) *
                C4083 +
            (C4176 * C813 + C4077 * C895 + C4177 * C818 + C4078 * C900 +
             C4178 * C6616 + C4079 * C6739) *
                C93587) *
               C93673 * C93635 * C1980 -
           ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
            (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C93635 * C1979 -
           (C2071 * C92 + C2072 * C107 + C2073 * C91 + C2074 * C105 +
            C2075 * C90 + C2076 * C103 + (C188 * C815 + C93662 * C897) * C89 +
            (C188 * C807 + C93662 * C889) * C101) *
               C93673 * C93635 * C1980) *
              C1981 +
          ((C2076 * C101 + C2075 * C89 + C2074 * C103 + C2073 * C90 +
            C2072 * C105 + C2071 * C91 +
            (C188 * C1983 + C93662 * C2056) * C107 +
            (C188 * C1984 + C93662 * C2057) * C92) *
               C93673 * C93635 * C1980 -
           (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
            C220 * C103 + C219 * C89 + C218 * C101) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C4081 +
             (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
             C219 * C93587) *
                C9601 +
            (C11260 + C11261 + C11236 + C11237) * C9602 + C11270 * C9603) *
               C93635 * C1979 -
           ((C12147 * C93587 + C12148 * C4083 +
             (C188 * C5825 + C93662 * C5929) * C4075 +
             (C188 * C5819 + C93662 * C5923) * C4081) *
                C9603 +
            (C12149 * C93587 + C12150 * C4083 +
             (C188 * C3413 + C93662 * C3495) * C4075 +
             (C188 * C3409 + C93662 * C3491) * C4081) *
                C9602 +
            (C2075 * C93587 + C2076 * C4083 +
             (C188 * C815 + C93662 * C897) * C4075 +
             (C188 * C807 + C93662 * C889) * C4081) *
                C9601) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C4081 + C2075 * C4075 + C2074 * C4083 + C2073 * C93587) *
                C9601 +
            (C12150 * C4081 + C12149 * C4075 +
             (C188 * C3411 + C93662 * C3493) * C4083 +
             (C188 * C3415 + C93662 * C3497) * C93587) *
                C9602 +
            (C12148 * C4081 + C12147 * C4075 +
             (C188 * C12033 + C93662 * C12136) * C4083 +
             (C188 * C12034 + C93662 * C12137) * C93587) *
                C9603) *
               C93635 * C1980 -
           ((C9695 * C93587 + C9696 * C4083 + C9694 * C4075 + C9693 * C4081) *
                C9603 +
            (C2787 * C93587 + C2788 * C4083 + C2789 * C4075 + C2790 * C4081) *
                C9602 +
            (C221 * C93587 + C220 * C4083 + C219 * C4075 + C218 * C4081) *
                C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C93635 * C1979 -
           ((C5161 + C5162 + C5163 + C5164) * C4079 +
            (C5140 + C5139 + C5160 + C5159) * C4078 +
            (C5134 + C5133 + C5158 + C5157) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C6859 + C6860 + C6861 + C6862) * C4077 +
            (C6863 + C6864 + C6865 + C6866) * C4078 +
            (C5154 * C4081 + C5153 * C4075 +
             (C275 * C6615 + C93673 * C6856) * C4083 +
             (C275 * C6616 + C93673 * C6857) * C93587) *
                C4079) *
               C93635 * C1980 -
           ((C6866 + C6865 + C6864 + C6863) * C4079 +
            (C6862 + C6861 + C6860 + C6859) * C4078 +
            (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C93635 * C1979 -
           (C2157 * C92 + C2158 * C107 + C2159 * C91 + C2160 * C105 +
            C2161 * C90 + C2162 * C103 + (C275 * C815 + C93673 * C963) * C89 +
            (C275 * C807 + C93673 * C955) * C101) *
               C93662 * C93635 * C1980) *
              C1981 +
          ((C2162 * C101 + C2161 * C89 + C2160 * C103 + C2159 * C90 +
            C2158 * C105 + C2157 * C91 +
            (C275 * C1983 + C93673 * C2142) * C107 +
            (C275 * C1984 + C93673 * C2143) * C92) *
               C93662 * C93635 * C1980 -
           (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
            C307 * C103 + C306 * C89 + C305 * C101) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C4081 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C4075 +
            (C9798 + C9799 + C9800) * C4083 +
            (C9801 + C9802 + C9803) * C93587) *
               C93662 * C93635 * C1979 -
           ((C12263 + C12264 + C12265) * C93587 +
            (C12266 + C12267 + C12268) * C4083 +
            (C9772 * C5825 + C9603 * C6015 + C9771 * C3413 + C9602 * C3569 +
             C9770 * C815 + C9601 * C963) *
                C4075 +
            (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
             C9770 * C807 + C9601 * C955) *
                C4081) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C12268 + C12267 + C12266) * C4081 +
            (C12265 + C12264 + C12263) * C4075 +
            (C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
             C9772 * C12033 + C9603 * C12248) *
                C4083 +
            (C9770 * C813 + C9601 * C961 + C9771 * C3415 + C9602 * C3571 +
             C9772 * C12034 + C9603 * C12249) *
                C93587) *
               C93662 * C93635 * C1980 -
           ((C9804 + C9805 + C9806) * C93587 + (C9807 + C9808 + C9809) * C4083 +
            (C9803 + C9802 + C9801) * C4075 + (C9800 + C9799 + C9798) * C4081) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C93635 * C1979 -
           ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
            (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
            (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C6982 + C6983) * C4176 + (C6984 + C6985) * C4077 +
            (C6986 + C6987) * C4177 + (C6988 + C6989) * C4078 +
            (C4081 * C4916 + C4075 * C4920 + C4083 * C6615 + C93587 * C6616) *
                C4178 +
            (C4081 * C5038 + C4075 * C5241 + C4083 * C6738 + C93587 * C6964) *
                C4079) *
               C93673 * C93635 * C1980 -
           ((C6989 + C6988) * C4079 + (C6987 + C6986) * C4178 +
            (C6985 + C6984) * C4078 + (C6983 + C6982) * C4177 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C4077 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C4176) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C93635 * C1979 -
           ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
             C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
                C93662 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C188) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C101 * C806 + C89 * C814 + C103 * C805 + C90 * C813 + C105 * C804 +
             C91 * C812 + C107 * C1983 + C92 * C1984) *
                C188 +
            (C101 * C888 + C89 * C1020 + C103 * C887 + C90 * C1019 +
             C105 * C886 + C91 * C1018 + C107 * C2056 + C92 * C2228) *
                C93662) *
               C93673 * C93635 * C1980 -
           ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
             C90 * C364 + C101 * C190 + C89 * C363) *
                C93662 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C188) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C188 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93662) *
                C9601 +
            ((C11455 + C11456) * C188 + (C11457 + C11458) * C93662) * C9602 +
            C11471 * C9603) *
               C93635 * C1979 -
           (((C4083 * C5925 + C93587 * C6096 + C4081 * C5923 + C4075 * C6095) *
                 C93662 +
             (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
                 C188) *
                C9603 +
            ((C8988 + C8989) * C93662 + (C8990 + C8991) * C188) * C9602 +
            ((C5273 + C5272) * C93662 + (C5271 + C5270) * C188) * C9601) *
               C93635 * C1980) *
              C1981 +
          ((((C6982 + C6983) * C188 + (C6984 + C6985) * C93662) * C9601 +
            ((C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                 C188 +
             (C4081 * C3492 + C4075 * C3640 + C4083 * C3493 + C93587 * C3641) *
                 C93662) *
                C9602 +
            ((C4081 * C5820 + C4075 * C5826 + C4083 * C12033 +
              C93587 * C12034) *
                 C188 +
             (C4081 * C5925 + C4075 * C6096 + C4083 * C12136 +
              C93587 * C12366) *
                 C93662) *
                C9603) *
               C93635 * C1980 -
           (((C4083 * C1473 + C93587 * C1605 + C4081 * C1472 + C4075 * C1604) *
                 C93662 +
             (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
                 C188) *
                C9603 +
            ((C4083 * C1468 + C93587 * C1600 + C4081 * C1469 + C4075 * C1601) *
                 C93662 +
             (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
                 C188) *
                C9602 +
            ((C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                 C93662 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C188) *
                C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C4075 +
            (C4489 + C4490 + C4491) * C93587) *
               C93673 * C93635 * C1979 -
           ((C7104 + C7105 + C7106) * C93587 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C4075) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C7106 + C7105 + C7104) * C4075 +
            (C4449 * C805 + C7095 + C7095 + C4077 * C1077 + C4450 * C810 +
             C7096 + C7096 + C4078 * C1082 + C4451 * C6615 + C7097 + C7097 +
             C4079 * C7087) *
                C93587) *
               C93673 * C93635 * C1980 -
           ((C4492 + C4493 + C4494) * C93587 +
            (C4491 + C4490 + C4489) * C4075) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
            C449 * C91 + C450 * C92) *
               C93673 * C93635 * C1979 -
           (C2310 * C92 + C2311 * C91 + C2312 * C90 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
               C93673 * C93635 * C1980) *
              C1981 +
          ((C2312 * C89 + C2311 * C90 + C2310 * C91 +
            (C418 * C1983 + C2303 + C2303 + C93662 * C2295) * C92) *
               C93673 * C93635 * C1980 -
           (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
             C448 * C93587) *
                C9601 +
            (C11576 + C11552) * C9602 + C11580 * C9603) *
               C93635 * C1979 -
           ((C12476 * C93587 +
             (C418 * C5819 + C10716 + C10716 + C93662 * C6175) * C4075) *
                C9603 +
            (C12477 * C93587 +
             (C418 * C3409 + C3714 + C3714 + C93662 * C3709) * C4075) *
                C9602 +
            (C2312 * C93587 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C4075) *
                C9601) *
               C93635 * C1980) *
              C1981 +
          (((C2312 * C4075 + C2311 * C93587) * C9601 +
            (C12477 * C4075 +
             (C418 * C3411 + C3716 + C3716 + C93662 * C3711) * C93587) *
                C9602 +
            (C12476 * C4075 +
             (C418 * C12033 + C12471 + C12471 + C93662 * C12465) * C93587) *
                C9603) *
               C93635 * C1980 -
           ((C9967 * C93587 + C9966 * C4075) * C9603 +
            (C3025 * C93587 + C3026 * C4075) * C9602 +
            (C449 * C93587 + C448 * C4075) * C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C93635 * C1979 -
           ((C7206 + C7207 + C7208 + C7209 + C7210 + C7211) * C93587 +
            (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 + C5151 * C4177 +
             C5460 * C4077 + C5149 * C4176) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          (((C7211 + C7210 + C7209 + C7208 + C7207 + C7206) * C4075 +
            (C2160 * C4176 + C2390 * C4077 + C4301 * C4177 + C4584 * C4078 +
             (C275 * C6615 + C93673 * C6856) * C4178 +
             (C275 * C6738 + C93673 * C7204) * C4079) *
                C93587) *
               C93635 * C1980 -
           ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
            (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C93635 * C1979 -
           ((C2392 + C2382) * C92 + (C2393 + C2385) * C91 +
            (C2394 + C2388) * C90 +
            ((C275 * C889 + C93673 * C1145) * C93662 +
             (C275 * C807 + C93673 * C955) * C188) *
                C89) *
               C93635 * C1980) *
              C1981 +
          (((C2388 + C2394) * C89 + (C2385 + C2393) * C90 +
            (C2382 + C2392) * C91 +
            ((C275 * C1983 + C93673 * C2142) * C188 +
             (C275 * C2056 + C93673 * C2378) * C93662) *
                C92) *
               C93635 * C1980 -
           ((C527 + C519) * C92 + (C526 + C514) * C91 + (C525 + C511) * C90 +
            (C524 + C508) * C89) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C188 +
             (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
              C9772 * C1471 + C9603 * C1727) *
                 C93662) *
                C4075 +
            ((C9798 + C9799 + C9800) * C188 +
             (C10054 + C10055 + C10056) * C93662) *
                C93587) *
               C93635 * C1979 -
           (((C12583 + C12584 + C12585) * C93662 +
             (C12266 + C12267 + C12268) * C188) *
                C93587 +
            ((C9772 * C5923 + C9603 * C6267 + C9771 * C3491 + C9602 * C3783 +
              C9770 * C889 + C9601 * C1145) *
                 C93662 +
             (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
              C9770 * C807 + C9601 * C955) *
                 C188) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          ((((C12268 + C12267 + C12266) * C188 +
             (C12585 + C12584 + C12583) * C93662) *
                C4075 +
            ((C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
              C9772 * C12033 + C9603 * C12248) *
                 C188 +
             (C9770 * C887 + C9601 * C1143 + C9771 * C3493 + C9602 * C3785 +
              C9772 * C12136 + C9603 * C12575) *
                 C93662) *
                C93587) *
               C93635 * C1980 -
           (((C10057 + C10058 + C10059) * C93662 +
             (C9807 + C9808 + C9809) * C188) *
                C93587 +
            ((C10056 + C10055 + C10054) * C93662 +
             (C9800 + C9799 + C9798) * C188) *
                C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C93635 * C1979 -
           (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
            ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
            ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
               C93635 * C1980) *
              C1981 +
          ((((C6982 + C6983) * C275 + (C7319 + C7320) * C93673) * C4077 +
            ((C6986 + C6987) * C275 + (C7321 + C7322) * C93673) * C4078 +
            ((C4081 * C4916 + C4075 * C4920 + C4083 * C6615 + C93587 * C6616) *
                 C275 +
             (C4081 * C5120 + C4075 * C5537 + C4083 * C6856 + C93587 * C7309) *
                 C93673) *
                C4079) *
               C93635 * C1980 -
           (((C7322 + C7321) * C93673 + (C6987 + C6986) * C275) * C4079 +
            ((C7320 + C7319) * C93673 + (C6983 + C6982) * C275) * C4078 +
            ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93673 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C275) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C93635 * C1979 -
           ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
             C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
                C93673 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C275) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C101 * C806 + C89 * C814 + C103 * C805 + C90 * C813 + C105 * C804 +
             C91 * C812 + C107 * C1983 + C92 * C1984) *
                C275 +
            (C101 * C954 + C89 * C1202 + C103 * C953 + C90 * C1201 +
             C105 * C952 + C91 * C1200 + C107 * C2142 + C92 * C2460) *
                C93673) *
               C93662 * C93635 * C1980 -
           ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
             C90 * C581 + C101 * C277 + C89 * C580) *
                C93673 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C275) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C9770 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C9601 +
            (C11455 + C11456) * C9771 + (C11749 + C11750) * C9602 +
            C11467 * C9772 + C11755 * C9603) *
               C93662 * C93635 * C1979 -
           ((C4083 * C6010 + C93587 * C6348 + C4081 * C6009 + C4075 * C6347) *
                C9603 +
            (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
                C9772 +
            (C9314 + C9315) * C9602 + (C8990 + C8991) * C9771 +
            (C5556 + C5555) * C9601 + (C5271 + C5270) * C9770) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C6982 + C6983) * C9770 + (C7319 + C7320) * C9601 +
            (C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                C9771 +
            (C4081 * C3566 + C4075 * C3854 + C4083 * C3567 + C93587 * C3855) *
                C9602 +
            (C4081 * C5820 + C4075 * C5826 + C4083 * C12033 + C93587 * C12034) *
                C9772 +
            (C4081 * C6010 + C4075 * C6348 + C4083 * C12248 + C93587 * C12683) *
                C9603) *
               C93662 * C93635 * C1980 -
           ((C4083 * C1539 + C93587 * C1787 + C4081 * C1538 + C4075 * C1786) *
                C9603 +
            (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
                C9772 +
            (C4083 * C1534 + C93587 * C1782 + C4081 * C1535 + C4075 * C1783) *
                C9602 +
            (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
                C9771 +
            (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C9601 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C9770) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C275 +
             (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
              C4178 * C956 + C4079 * C1262) *
                 C93673) *
                C4075 +
            ((C4204 + C4205 + C4206) * C275 +
             (C4747 + C4748 + C4749) * C93673) *
                C93587) *
               C93635 * C1979 -
           (((C7428 + C7429 + C7430) * C93673 +
             (C6756 + C6757 + C6758) * C275) *
                C93587 +
            ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
              C4176 * C955 + C4077 * C1261) *
                 C93673 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C275) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          ((((C6758 + C6757 + C6756) * C275 +
             (C7430 + C7429 + C7428) * C93673) *
                C4075 +
            ((C4176 * C805 + C4077 * C887 + C4177 * C810 + C4078 * C892 +
              C4178 * C6615 + C4079 * C6738) *
                 C275 +
             (C4176 * C953 + C4077 * C1259 + C4177 * C958 + C4078 * C1264 +
              C4178 * C6856 + C4079 * C7420) *
                 C93673) *
                C93587) *
               C93635 * C1980 -
           (((C4750 + C4751 + C4752) * C93673 +
             (C4213 + C4214 + C4215) * C275) *
                C93587 +
            ((C4749 + C4748 + C4747) * C93673 +
             (C4206 + C4205 + C4204) * C275) *
                C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C275 +
             (C188 * C276 + C93662 * C635) * C93673) *
                C89 +
            (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
               C93635 * C1979 -
           ((C2541 + C2531) * C92 + (C2542 + C2534) * C91 +
            (C2543 + C2537) * C90 +
            ((C188 * C955 + C93662 * C1261) * C93673 +
             (C188 * C807 + C93662 * C889) * C275) *
                C89) *
               C93635 * C1980) *
              C1981 +
          (((C2537 + C2543) * C89 + (C2534 + C2542) * C90 +
            (C2531 + C2541) * C91 +
            ((C188 * C1983 + C93662 * C2056) * C275 +
             (C188 * C2142 + C93662 * C2527) * C93673) *
                C92) *
               C93635 * C1980 -
           ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
            (C658 + C642) * C89) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C9770 +
             (C188 * C276 + C93662 * C635) * C9601 + C11252 * C9771 +
             C11842 * C9602 + C11254 * C9772 + C11843 * C9603) *
                C4075 +
            (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
               C93635 * C1979 -
           ((C12794 + C12786 + C12795 + C12789 + C12790 + C12791) * C93587 +
            ((C188 * C6009 + C93662 * C6427) * C9603 +
             (C188 * C5819 + C93662 * C5923) * C9772 +
             (C188 * C3565 + C93662 * C3923) * C9602 +
             (C188 * C3409 + C93662 * C3491) * C9771 +
             (C188 * C955 + C93662 * C1261) * C9601 +
             (C188 * C807 + C93662 * C889) * C9770) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          (((C12791 + C12790 + C12789 + C12795 + C12786 + C12794) * C4075 +
            (C2074 * C9770 + C2539 * C9601 +
             (C188 * C3411 + C93662 * C3493) * C9771 +
             (C188 * C3567 + C93662 * C3925) * C9602 +
             (C188 * C12033 + C93662 * C12136) * C9772 +
             (C188 * C12248 + C93662 * C12782) * C9603) *
                C93587) *
               C93635 * C1980 -
           ((C10225 + C10217 + C10218 + C10219 + C10220 + C10221) * C93587 +
            (C10224 + C10212 + C10211 + C10210 + C10209 + C10208) * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C93635 * C1979 -
           ((C7530 + C7531 + C7532) * C93587 +
            (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
               C93635 * C1980) *
              C1981 +
          (((C7532 + C7531 + C7530) * C4075 +
            (C2625 * C4077 + C4840 * C4078 +
             (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C4079) *
                C93587) *
               C93635 * C1980 -
           ((C4842 + C4833 + C4834) * C93587 +
            (C4841 + C4828 + C4827) * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C93635 * C1979 -
           (C2627 * C92 + C2628 * C91 + C2629 * C90 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
               C93635 * C1980) *
              C1981 +
          ((C2629 * C89 + C2628 * C90 + C2627 * C91 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93662 * C92) *
               C93635 * C1980 -
           (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
               C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C93662 * C4075 +
            (C10339 + C10340 + C10341) * C93662 * C93587) *
               C93635 * C1979 -
           ((C12910 + C12911 + C12912) * C93662 * C93587 +
            (C10301 * C5819 + C11020 + C11020 + C9603 * C6507 + C10300 * C3409 +
             C11021 + C11021 + C9602 * C3993 + C10299 * C807 + C11022 + C11022 +
             C9601 * C1319) *
                C93662 * C4075) *
               C93635 * C1980) *
              C1981 +
          (((C12912 + C12911 + C12910) * C93662 * C4075 +
            (C10299 * C805 + C12901 + C12901 + C9601 * C1317 + C10300 * C3411 +
             C12902 + C12902 + C9602 * C3995 + C10301 * C12033 + C12903 +
             C12903 + C9603 * C12893) *
                C93662 * C93587) *
               C93635 * C1980 -
           ((C10342 + C10343 + C10344) * C93662 * C93587 +
            (C10341 + C10340 + C10339) * C93662 * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93673 * C4077 +
            (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
               C2695 -
           ((C8640 + C8641) * C93673 * C4079 +
            (C8642 + C8643) * C93673 * C4078 +
            (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
             C5841 + C5841 + C4075 * C1404) *
                C93673 * C4077) *
               C2696) *
              C1979 +
          (((C8643 + C8642) * C93673 * C4077 +
            (C8641 + C8640) * C93673 * C4078 +
            (C4080 * C8615 + C8630 + C8630 + C4075 * C8619 + C4082 * C8616 +
             C8631 + C8631 + C93587 * C8620) *
                C93673 * C4079) *
               C2696 -
           ((C4961 + C4962) * C93673 * C4079 +
            (C4960 + C4959) * C93673 * C4078 +
            (C4958 + C4957) * C93673 * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
            C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
            C130 + C130 + C92 * C123) *
               C93673 * C93662 * C2695 -
           (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
            C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
            C100 * C1388 + C1413 + C1413 + C89 * C1404) *
               C93673 * C93662 * C2696) *
              C1979 +
          ((C100 * C3409 + C3422 + C3422 + C89 * C3417 + C102 * C3410 + C3423 +
            C3423 + C90 * C3418 + C104 * C3411 + C3424 + C3424 + C91 * C3419 +
            C106 * C3412 + C3425 + C3425 + C92 * C3420) *
               C93673 * C93662 * C2696 -
           (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 + C830 +
            C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 + C100 * C807 +
            C832 + C832 + C89 * C823) *
               C93673 * C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C9601 +
            (C11143 + C11144) * C9602 + C11149 * C9603) *
               C93662 * C2695 -
           ((C11147 + C11148) * C9603 + (C11146 + C11145) * C9602 +
            (C11144 + C11143) * C9601) *
               C93662 * C2696) *
              C1979 +
          (((C8643 + C8642) * C9601 + (C14044 + C14045) * C9602 +
            (C4080 * C14027 + C14038 + C14038 + C4075 * C14031 +
             C4082 * C14028 + C14039 + C14039 + C93587 * C14032) *
                C9603) *
               C93662 * C2696 -
           ((C14045 + C14044) * C9603 + (C8642 + C8643) * C9602 +
            (C4958 + C4957) * C9601) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C2695 -
           ((C7753 + C7754 + C7755) * C93587 + (C7756 + C7757 + C7758) * C4083 +
            (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
             C4176 * C1396 + C4077 * C1478) *
                C4075 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C4081) *
               C93673 * C2696) *
              C1979 +
          (((C4176 * C3409 + C4077 * C3491 + C4177 * C5818 + C4078 * C5922 +
             C4178 * C8615 + C4079 * C8741) *
                C4081 +
            (C4176 * C3413 + C4077 * C3495 + C4177 * C5824 + C4078 * C5928 +
             C4178 * C8617 + C4079 * C8743) *
                C4075 +
            (C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
             C4178 * C8616 + C4079 * C8742) *
                C4083 +
            (C4176 * C3414 + C4077 * C3496 + C4177 * C5823 + C4078 * C5927 +
             C4178 * C8618 + C4079 * C8744) *
                C93587) *
               C93673 * C2696 -
           ((C6753 + C6754 + C6755) * C93587 + (C6756 + C6757 + C6758) * C4083 +
            (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C4075 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C4081) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C2695 -
           (C2785 * C92 + C2786 * C107 + C2787 * C91 + C2788 * C105 +
            C2789 * C90 + C2790 * C103 + (C188 * C1396 + C93662 * C1478) * C89 +
            (C188 * C1388 + C93662 * C1470) * C101) *
               C93673 * C2696) *
              C1979 +
          (((C188 * C3409 + C93662 * C3491) * C101 +
            (C188 * C3413 + C93662 * C3495) * C89 +
            (C188 * C3410 + C93662 * C3492) * C103 +
            (C188 * C3414 + C93662 * C3496) * C90 +
            (C188 * C3411 + C93662 * C3493) * C105 +
            (C188 * C3415 + C93662 * C3497) * C91 +
            (C188 * C3412 + C93662 * C3494) * C107 +
            (C188 * C3416 + C93662 * C3498) * C92) *
               C93673 * C2696 -
           (C2071 * C92 + C2072 * C107 + C2073 * C91 + C2074 * C105 +
            C2075 * C90 + C2076 * C103 + (C188 * C815 + C93662 * C897) * C89 +
            (C188 * C807 + C93662 * C889) * C101) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C4081 +
             (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
             C219 * C93587) *
                C9601 +
            (C11260 + C11261 + C11236 + C11237) * C9602 + C11270 * C9603) *
               C2695 -
           ((C11264 + C11265 + C11266 + C11267) * C9603 +
            (C11243 + C11242 + C11263 + C11262) * C9602 +
            (C11237 + C11236 + C11261 + C11260) * C9601) *
               C2696) *
              C1979 +
          (((C14164 + C14165 + C14152 + C14153) * C9601 +
            (C14166 + C14167 + C14158 + C14159) * C9602 +
            ((C188 * C14027 + C93662 * C14143) * C4081 +
             (C188 * C14029 + C93662 * C14145) * C4075 +
             (C188 * C14028 + C93662 * C14144) * C4083 +
             (C188 * C14030 + C93662 * C14146) * C93587) *
                C9603) *
               C2696 -
           ((C14159 + C14158 + C14167 + C14166) * C9603 +
            (C14153 + C14152 + C14165 + C14164) * C9602 +
            (C2075 * C93587 + C2076 * C4083 +
             (C188 * C815 + C93662 * C897) * C4075 +
             (C188 * C807 + C93662 * C889) * C4081) *
                C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C2695 -
           ((C8848 + C8849 + C8864 + C8865) * C4079 +
            (C8854 + C8855 + C8866 + C8867) * C4078 +
            (C2875 * C93587 + C2876 * C4083 +
             (C275 * C1396 + C93673 * C1544) * C4075 +
             (C275 * C1388 + C93673 * C1536) * C4081) *
                C4077) *
               C2696) *
              C1979 +
          (((C8867 + C8866 + C8855 + C8854) * C4077 +
            (C8865 + C8864 + C8849 + C8848) * C4078 +
            ((C275 * C8615 + C93673 * C8843) * C4081 +
             (C275 * C8617 + C93673 * C8845) * C4075 +
             (C275 * C8616 + C93673 * C8844) * C4083 +
             (C275 * C8618 + C93673 * C8846) * C93587) *
                C4079) *
               C2696 -
           ((C5161 + C5162 + C5163 + C5164) * C4079 +
            (C5140 + C5139 + C5160 + C5159) * C4078 +
            (C5134 + C5133 + C5158 + C5157) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C2695 -
           (C2871 * C92 + C2872 * C107 + C2873 * C91 + C2874 * C105 +
            C2875 * C90 + C2876 * C103 + (C275 * C1396 + C93673 * C1544) * C89 +
            (C275 * C1388 + C93673 * C1536) * C101) *
               C93662 * C2696) *
              C1979 +
          (((C275 * C3409 + C93673 * C3565) * C101 +
            (C275 * C3413 + C93673 * C3569) * C89 +
            (C275 * C3410 + C93673 * C3566) * C103 +
            (C275 * C3414 + C93673 * C3570) * C90 +
            (C275 * C3411 + C93673 * C3567) * C105 +
            (C275 * C3415 + C93673 * C3571) * C91 +
            (C275 * C3412 + C93673 * C3568) * C107 +
            (C275 * C3416 + C93673 * C3572) * C92) *
               C93662 * C2696 -
           (C2157 * C92 + C2158 * C107 + C2159 * C91 + C2160 * C105 +
            C2161 * C90 + C2162 * C103 + (C275 * C815 + C93673 * C963) * C89 +
            (C275 * C807 + C93673 * C955) * C101) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C4081 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C4075 +
            (C9798 + C9799 + C9800) * C4083 +
            (C9801 + C9802 + C9803) * C93587) *
               C93662 * C2695 -
           ((C13256 + C13257 + C13258) * C93587 +
            (C13259 + C13260 + C13261) * C4083 +
            (C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
             C9770 * C1396 + C9601 * C1544) *
                C4075 +
            (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
             C9770 * C1388 + C9601 * C1536) *
                C4081) *
               C93662 * C2696) *
              C1979 +
          (((C9770 * C3409 + C9601 * C3565 + C9771 * C5819 + C9602 * C6009 +
             C9772 * C14027 + C9603 * C14265) *
                C4081 +
            (C9770 * C3413 + C9601 * C3569 + C9771 * C5825 + C9602 * C6015 +
             C9772 * C14029 + C9603 * C14267) *
                C4075 +
            (C9770 * C3410 + C9601 * C3566 + C9771 * C5820 + C9602 * C6010 +
             C9772 * C14028 + C9603 * C14266) *
                C4083 +
            (C9770 * C3414 + C9601 * C3570 + C9771 * C5826 + C9602 * C6016 +
             C9772 * C14030 + C9603 * C14268) *
                C93587) *
               C93662 * C2696 -
           ((C12263 + C12264 + C12265) * C93587 +
            (C12266 + C12267 + C12268) * C4083 +
            (C9772 * C5825 + C9603 * C6015 + C9771 * C3413 + C9602 * C3569 +
             C9770 * C815 + C9601 * C963) *
                C4075 +
            (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
             C9770 * C807 + C9601 * C955) *
                C4081) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C2695 -
           ((C8984 + C8985) * C4079 + (C8986 + C8987) * C4178 +
            (C8988 + C8989) * C4078 + (C8990 + C8991) * C4177 +
            (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
                C4077 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C4176) *
               C93673 * C2696) *
              C1979 +
          (((C8991 + C8990) * C4176 + (C8989 + C8988) * C4077 +
            (C8987 + C8986) * C4177 + (C8985 + C8984) * C4078 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C4178 +
            (C4081 * C8741 + C4075 * C8965 + C4083 * C8742 + C93587 * C8966) *
                C4079) *
               C93673 * C2696 -
           ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
            (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
            (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C2695 -
           ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
             C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
                C93662 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C188) *
               C93673 * C2696) *
              C1979 +
          (((C101 * C3409 + C89 * C3413 + C103 * C3410 + C90 * C3414 +
             C105 * C3411 + C91 * C3415 + C107 * C3412 + C92 * C3416) *
                C188 +
            (C101 * C3491 + C89 * C3639 + C103 * C3492 + C90 * C3640 +
             C105 * C3493 + C91 * C3641 + C107 * C3494 + C92 * C3642) *
                C93662) *
               C93673 * C2696 -
           ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
             C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
                C93662 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C188) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C188 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93662) *
                C9601 +
            ((C11455 + C11456) * C188 + (C11457 + C11458) * C93662) * C9602 +
            C11471 * C9603) *
               C2695 -
           (((C11463 + C11464) * C93662 + (C11465 + C11466) * C188) * C9603 +
            ((C11462 + C11461) * C93662 + (C11460 + C11459) * C188) * C9602 +
            ((C11458 + C11457) * C93662 + (C11456 + C11455) * C188) * C9601) *
               C2696) *
              C1979 +
          ((((C8991 + C8990) * C188 + (C8989 + C8988) * C93662) * C9601 +
            ((C14378 + C14379) * C188 + (C14380 + C14381) * C93662) * C9602 +
            ((C4081 * C14027 + C4075 * C14029 + C4083 * C14028 +
              C93587 * C14030) *
                 C188 +
             (C4081 * C14143 + C4075 * C14367 + C4083 * C14144 +
              C93587 * C14368) *
                 C93662) *
                C9603) *
               C2696 -
           (((C14381 + C14380) * C93662 + (C14379 + C14378) * C188) * C9603 +
            ((C8988 + C8989) * C93662 + (C8990 + C8991) * C188) * C9602 +
            ((C5273 + C5272) * C93662 + (C5271 + C5270) * C188) * C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C4075 +
            (C4489 + C4490 + C4491) * C93587) *
               C93673 * C2695 -
           ((C8084 + C8085 + C8086) * C93587 +
            (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 + C4450 * C3409 +
             C6184 + C6184 + C4078 * C3709 + C4449 * C1388 + C6185 + C6185 +
             C4077 * C1660) *
                C4075) *
               C93673 * C2696) *
              C1979 +
          (((C4449 * C3409 + C9092 + C9092 + C4077 * C3709 + C4450 * C5818 +
             C9093 + C9093 + C4078 * C6174 + C4451 * C8615 + C9094 + C9094 +
             C4079 * C9089) *
                C4075 +
            (C4449 * C3410 + C9095 + C9095 + C4077 * C3710 + C4450 * C5817 +
             C9096 + C9096 + C4078 * C6173 + C4451 * C8616 + C9097 + C9097 +
             C4079 * C9090) *
                C93587) *
               C93673 * C2696 -
           ((C7104 + C7105 + C7106) * C93587 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C4075) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
            C449 * C91 + C450 * C92) *
               C93673 * C2695 -
           (C3024 * C92 + C3025 * C91 + C3026 * C90 +
            (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
               C93673 * C2696) *
              C1979 +
          (((C418 * C3409 + C3714 + C3714 + C93662 * C3709) * C89 +
            (C418 * C3410 + C3715 + C3715 + C93662 * C3710) * C90 +
            (C418 * C3411 + C3716 + C3716 + C93662 * C3711) * C91 +
            (C418 * C3412 + C3717 + C3717 + C93662 * C3712) * C92) *
               C93673 * C2696 -
           (C2310 * C92 + C2311 * C91 + C2312 * C90 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
             C448 * C93587) *
                C9601 +
            (C11576 + C11552) * C9602 + C11580 * C9603) *
               C2695 -
           ((C11578 + C11579) * C9603 + (C11555 + C11577) * C9602 +
            (C11552 + C11576) * C9601) *
               C2696) *
              C1979 +
          (((C14496 + C14484) * C9601 + (C14497 + C14487) * C9602 +
            ((C418 * C14027 + C14488 + C14488 + C93662 * C14479) * C4075 +
             (C418 * C14028 + C14489 + C14489 + C93662 * C14480) * C93587) *
                C9603) *
               C2696 -
           ((C14487 + C14497) * C9603 + (C14484 + C14496) * C9602 +
            (C2312 * C93587 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C4075) *
                C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C2695 -
           ((C8196 + C8188 + C8197 + C8191 + C8192 + C8193) * C93587 +
            (C9202 * C4079 + C8861 * C4178 + C9203 * C4078 + C8863 * C4177 +
             (C275 * C1470 + C93673 * C1726) * C4077 +
             (C275 * C1388 + C93673 * C1536) * C4176) *
                C4075) *
               C2696) *
              C1979 +
          (((C8863 * C4176 + C9203 * C4077 + C8861 * C4177 + C9202 * C4078 +
             (C275 * C8615 + C93673 * C8843) * C4178 +
             (C275 * C8741 + C93673 * C9195) * C4079) *
                C4075 +
            (C7870 * C4176 + C8195 * C4077 + C7868 * C4177 + C8194 * C4078 +
             (C275 * C8616 + C93673 * C8844) * C4178 +
             (C275 * C8742 + C93673 * C9196) * C4079) *
                C93587) *
               C2696 -
           ((C7206 + C7207 + C7208 + C7209 + C7210 + C7211) * C93587 +
            (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 + C5151 * C4177 +
             C5460 * C4077 + C5149 * C4176) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C2695 -
           ((C3106 + C3096) * C92 + (C3107 + C3099) * C91 +
            (C3108 + C3102) * C90 +
            ((C275 * C1470 + C93673 * C1726) * C93662 +
             (C275 * C1388 + C93673 * C1536) * C188) *
                C89) *
               C2696) *
              C1979 +
          ((((C275 * C3409 + C93673 * C3565) * C188 +
             (C275 * C3491 + C93673 * C3783) * C93662) *
                C89 +
            ((C275 * C3410 + C93673 * C3566) * C188 +
             (C275 * C3492 + C93673 * C3784) * C93662) *
                C90 +
            ((C275 * C3411 + C93673 * C3567) * C188 +
             (C275 * C3493 + C93673 * C3785) * C93662) *
                C91 +
            ((C275 * C3412 + C93673 * C3568) * C188 +
             (C275 * C3494 + C93673 * C3786) * C93662) *
                C92) *
               C2696 -
           ((C2392 + C2382) * C92 + (C2393 + C2385) * C91 +
            (C2394 + C2388) * C90 +
            ((C275 * C889 + C93673 * C1145) * C93662 +
             (C275 * C807 + C93673 * C955) * C188) *
                C89) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C188 +
             (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
              C9772 * C1471 + C9603 * C1727) *
                 C93662) *
                C4075 +
            ((C9798 + C9799 + C9800) * C188 +
             (C10054 + C10055 + C10056) * C93662) *
                C93587) *
               C2695 -
           (((C13594 + C13595 + C13596) * C93662 +
             (C13259 + C13260 + C13261) * C188) *
                C93587 +
            ((C9772 * C11224 + C9603 * C11655 + C9771 * C1471 + C9602 * C1727 +
              C9770 * C1470 + C9601 * C1726) *
                 C93662 +
             (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
              C9770 * C1388 + C9601 * C1536) *
                 C188) *
                C4075) *
               C2696) *
              C1979 +
          ((((C9770 * C3409 + C9601 * C3565 + C9771 * C5819 + C9602 * C6009 +
              C9772 * C14027 + C9603 * C14265) *
                 C188 +
             (C9770 * C3491 + C9601 * C3783 + C9771 * C5923 + C9602 * C6267 +
              C9772 * C14143 + C9603 * C14595) *
                 C93662) *
                C4075 +
            ((C9770 * C3410 + C9601 * C3566 + C9771 * C5820 + C9602 * C6010 +
              C9772 * C14028 + C9603 * C14266) *
                 C188 +
             (C9770 * C3492 + C9601 * C3784 + C9771 * C5925 + C9602 * C6269 +
              C9772 * C14144 + C9603 * C14596) *
                 C93662) *
                C93587) *
               C2696 -
           (((C12583 + C12584 + C12585) * C93662 +
             (C12266 + C12267 + C12268) * C188) *
                C93587 +
            ((C9772 * C5923 + C9603 * C6267 + C9771 * C3491 + C9602 * C3783 +
              C9770 * C889 + C9601 * C1145) *
                 C93662 +
             (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
              C9770 * C807 + C9601 * C955) *
                 C188) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C2695 -
           (((C9312 + C9313) * C93673 + (C8986 + C8987) * C275) * C4079 +
            ((C9314 + C9315) * C93673 + (C8990 + C8991) * C275) * C4078 +
            ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                 C93673 +
             (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                 C275) *
                C4077) *
               C2696) *
              C1979 +
          ((((C8991 + C8990) * C275 + (C9315 + C9314) * C93673) * C4077 +
            ((C8987 + C8986) * C275 + (C9313 + C9312) * C93673) * C4078 +
            ((C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                 C275 +
             (C4081 * C8843 + C4075 * C9301 + C4083 * C8844 + C93587 * C9302) *
                 C93673) *
                C4079) *
               C2696 -
           (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
            ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
            ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C2695 -
           ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
             C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
                C93673 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C275) *
               C93662 * C2696) *
              C1979 +
          (((C101 * C3409 + C89 * C3413 + C103 * C3410 + C90 * C3414 +
             C105 * C3411 + C91 * C3415 + C107 * C3412 + C92 * C3416) *
                C275 +
            (C101 * C3565 + C89 * C3853 + C103 * C3566 + C90 * C3854 +
             C105 * C3567 + C91 * C3855 + C107 * C3568 + C92 * C3856) *
                C93673) *
               C93662 * C2696 -
           ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
             C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
                C93673 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C275) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C9770 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C9601 +
            (C11455 + C11456) * C9771 + (C11749 + C11750) * C9602 +
            C11467 * C9772 + C11755 * C9603) *
               C93662 * C2695 -
           ((C11753 + C11754) * C9603 + (C11465 + C11466) * C9772 +
            (C11752 + C11751) * C9602 + (C11460 + C11459) * C9771 +
            (C11750 + C11749) * C9601 + (C11456 + C11455) * C9770) *
               C93662 * C2696) *
              C1979 +
          (((C8991 + C8990) * C9770 + (C9315 + C9314) * C9601 +
            (C14378 + C14379) * C9771 + (C14702 + C14703) * C9602 +
            (C4081 * C14027 + C4075 * C14029 + C4083 * C14028 +
             C93587 * C14030) *
                C9772 +
            (C4081 * C14265 + C4075 * C14695 + C4083 * C14266 +
             C93587 * C14696) *
                C9603) *
               C93662 * C2696 -
           ((C14703 + C14702) * C9603 + (C14379 + C14378) * C9772 +
            (C9314 + C9315) * C9602 + (C8990 + C8991) * C9771 +
            (C5556 + C5555) * C9601 + (C5271 + C5270) * C9770) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C275 +
             (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
              C4178 * C956 + C4079 * C1262) *
                 C93673) *
                C4075 +
            ((C4204 + C4205 + C4206) * C275 +
             (C4747 + C4748 + C4749) * C93673) *
                C93587) *
               C2695 -
           (((C8402 + C8403 + C8404) * C93673 +
             (C7756 + C7757 + C7758) * C275) *
                C93587 +
            ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 + C4078 * C3923 +
              C4176 * C1536 + C4077 * C1842) *
                 C93673 +
             (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
              C4176 * C1388 + C4077 * C1470) *
                 C275) *
                C4075) *
               C2696) *
              C1979 +
          ((((C4176 * C3409 + C4077 * C3491 + C4177 * C5818 + C4078 * C5922 +
              C4178 * C8615 + C4079 * C8741) *
                 C275 +
             (C4176 * C3565 + C4077 * C3923 + C4177 * C6008 + C4078 * C6426 +
              C4178 * C8843 + C4079 * C9413) *
                 C93673) *
                C4075 +
            ((C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
              C4178 * C8616 + C4079 * C8742) *
                 C275 +
             (C4176 * C3566 + C4077 * C3924 + C4177 * C6007 + C4078 * C6425 +
              C4178 * C8844 + C4079 * C9414) *
                 C93673) *
                C93587) *
               C2696 -
           (((C7428 + C7429 + C7430) * C93673 +
             (C6756 + C6757 + C6758) * C275) *
                C93587 +
            ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
              C4176 * C955 + C4077 * C1261) *
                 C93673 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C275) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C275 +
             (C188 * C276 + C93662 * C635) * C93673) *
                C89 +
            (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
               C2695 -
           ((C3255 + C3245) * C92 + (C3256 + C3248) * C91 +
            (C3257 + C3251) * C90 +
            ((C188 * C1536 + C93662 * C1842) * C93673 +
             (C188 * C1388 + C93662 * C1470) * C275) *
                C89) *
               C2696) *
              C1979 +
          ((((C188 * C3409 + C93662 * C3491) * C275 +
             (C188 * C3565 + C93662 * C3923) * C93673) *
                C89 +
            ((C188 * C3410 + C93662 * C3492) * C275 +
             (C188 * C3566 + C93662 * C3924) * C93673) *
                C90 +
            ((C188 * C3411 + C93662 * C3493) * C275 +
             (C188 * C3567 + C93662 * C3925) * C93673) *
                C91 +
            ((C188 * C3412 + C93662 * C3494) * C275 +
             (C188 * C3568 + C93662 * C3926) * C93673) *
                C92) *
               C2696 -
           ((C2541 + C2531) * C92 + (C2542 + C2534) * C91 +
            (C2543 + C2537) * C90 +
            ((C188 * C955 + C93662 * C1261) * C93673 +
             (C188 * C807 + C93662 * C889) * C275) *
                C89) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C9770 +
             (C188 * C276 + C93662 * C635) * C9601 + C11252 * C9771 +
             C11842 * C9602 + C11254 * C9772 + C11843 * C9603) *
                C4075 +
            (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
               C2695 -
           ((C13807 + C13808 + C13809 + C13810 + C13811 + C13812) * C93587 +
            (C11845 * C9603 + C11259 * C9772 + C11843 * C9602 + C11254 * C9771 +
             C11842 * C9601 + C11252 * C9770) *
                C4075) *
               C2696) *
              C1979 +
          (((C14160 * C9770 + C14808 * C9601 + C14162 * C9771 + C14809 * C9602 +
             (C188 * C14027 + C93662 * C14143) * C9772 +
             (C188 * C14265 + C93662 * C14801) * C9603) *
                C4075 +
            (C12150 * C9770 + C12793 * C9601 + C12148 * C9771 + C12792 * C9602 +
             (C188 * C14028 + C93662 * C14144) * C9772 +
             (C188 * C14266 + C93662 * C14802) * C9603) *
                C93587) *
               C2696 -
           ((C12794 + C12786 + C12795 + C12789 + C12790 + C12791) * C93587 +
            (C14809 * C9603 + C14162 * C9772 + C14808 * C9602 + C14160 * C9771 +
             (C188 * C955 + C93662 * C1261) * C9601 +
             (C188 * C807 + C93662 * C889) * C9770) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C2695 -
           ((C8516 + C8517 + C8508) * C93587 +
            (C9526 * C4079 + C9527 * C4078 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
                C4075) *
               C2696) *
              C1979 +
          (((C9527 * C4077 + C9526 * C4078 +
             (C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C4079) *
                C4075 +
            (C8515 * C4077 + C8514 * C4078 +
             (C713 * C8616 + C9521 + C9521 + C93673 * C9514) * C4079) *
                C93587) *
               C2696 -
           ((C7530 + C7531 + C7532) * C93587 +
            (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C2695 -
           (C3341 * C92 + C3342 * C91 + C3343 * C90 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
               C2696) *
              C1979 +
          (((C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C93662 * C89 +
            (C713 * C3410 + C3999 + C3999 + C93673 * C3994) * C93662 * C90 +
            (C713 * C3411 + C4000 + C4000 + C93673 * C3995) * C93662 * C91 +
            (C713 * C3412 + C4001 + C4001 + C93673 * C3996) * C93662 * C92) *
               C2696 -
           (C2627 * C92 + C2628 * C91 + C2629 * C90 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C93662 * C4075 +
            (C10339 + C10340 + C10341) * C93662 * C93587) *
               C2695 -
           ((C13927 + C13928 + C13929) * C93662 * C93587 +
            (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
             C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
             C11929 + C11929 + C9601 * C1900) *
                C93662 * C4075) *
               C2696) *
              C1979 +
          (((C10299 * C3409 + C14910 + C14910 + C9601 * C3993 + C10300 * C5819 +
             C14911 + C14911 + C9602 * C6507 + C10301 * C14027 + C14912 +
             C14912 + C9603 * C14907) *
                C93662 * C4075 +
            (C10299 * C3410 + C14913 + C14913 + C9601 * C3994 + C10300 * C5820 +
             C14914 + C14914 + C9602 * C6509 + C10301 * C14028 + C14915 +
             C14915 + C9603 * C14908) *
                C93662 * C93587) *
               C2696 -
           ((C12910 + C12911 + C12912) * C93662 * C93587 +
            (C10301 * C5819 + C11020 + C11020 + C9603 * C6507 + C10300 * C3409 +
             C11021 + C11021 + C9602 * C3993 + C10299 * C807 + C11022 + C11022 +
             C9601 * C1319) *
                C93662 * C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 +
               C128 + C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 +
               C106 * C111 + C130 + C130 + C92 * C123) *
                  C93673 * C93662 * C93635 * C93621 * C97 -
              (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 +
               C132 + C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 +
               C100 * C109 + C134 + C134 + C89 * C121) *
                  C93673 * C93662 * C93635 * C93621 * C98 +
              (C100 * C110 + C135 + C135 + C89 * C122 + C102 * C111 + C136 +
               C136 + C90 * C123 + C104 * C112 + C137 + C137 + C91 * C124 +
               C106 * C113 + C138 + C138 + C92 * C125) *
                  C93673 * C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 +
               C128 + C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 +
               C106 * C111 + C130 + C130 + C92 * C123) *
                  C93673 * C93662 * C93635 * C800 -
              (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 +
               C830 + C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 +
               C100 * C807 + C832 + C832 + C89 * C823) *
                  C93673 * C93662 * C93635 * C801 +
              (C100 * C808 + C833 + C833 + C89 * C824 + C102 * C809 + C834 +
               C834 + C90 * C825 + C104 * C810 + C835 + C835 + C91 * C826 +
               C106 * C811 + C836 + C836 + C92 * C827) *
                  C93673 * C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C1382 -
          (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
           C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
           C100 * C1388 + C1413 + C1413 + C89 * C1404) *
              C93673 * C93662 * C1383 +
          (C100 * C1389 + C1414 + C1414 + C89 * C1405 + C102 * C1390 + C1415 +
           C1415 + C90 * C1406 + C104 * C1391 + C1416 + C1416 + C91 * C1407 +
           C106 * C1392 + C1417 + C1417 + C92 * C1408) *
              C93673 * C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4080 * C807 + C4087 + C4087 + C4075 * C823 + C4082 * C806 + C4088 +
            C4088 + C93587 * C822) *
               C93673 * C4078 +
           (C4080 * C808 + C4089 + C4089 + C4075 * C824 + C4082 * C809 + C4090 +
            C4090 + C93587 * C825) *
               C93673 * C4079) *
              C93635 * C93621 * C97 -
          ((C4082 * C810 + C4091 + C4091 + C93587 * C826 + C4080 * C809 +
            C4092 + C4092 + C4075 * C825) *
               C93673 * C4079 +
           (C4082 * C805 + C4093 + C4093 + C93587 * C821 + C4080 * C806 +
            C4094 + C4094 + C4075 * C822) *
               C93673 * C4078 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C93673 * C4077) *
              C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C93673 * C4077 +
           (C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 + C4100 +
            C4100 + C93587 * C820) *
               C93673 * C4078 +
           (C4080 * C810 + C4101 + C4101 + C4075 * C826 + C4082 * C811 + C4102 +
            C4102 + C93587 * C827) *
               C93673 * C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C93635 * C800 -
          ((C4961 + C4962) * C93673 * C4079 + (C4960 + C4959) * C93673 * C4078 +
           (C4958 + C4957) * C93673 * C4077) *
              C93635 * C801 +
          (C4964 * C4077 + (C4962 + C4961) * C93673 * C4078 +
           (C4080 * C4918 + C4943 + C4943 + C4075 * C4926 + C4082 * C4919 +
            C4944 + C4944 + C93587 * C4927) *
               C93673 * C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C1382 -
          ((C4082 * C5817 + C5836 + C5836 + C93587 * C5829 + C4080 * C5818 +
            C5837 + C5837 + C4075 * C5830) *
               C93673 * C4079 +
           (C4082 * C3410 + C5838 + C5838 + C93587 * C3418 + C4080 * C3409 +
            C5839 + C5839 + C4075 * C3417) *
               C93673 * C4078 +
           (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
            C5841 + C5841 + C4075 * C1404) *
               C93673 * C4077) *
              C1383 +
          ((C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C93673 * C4077 +
           (C4080 * C5819 + C5844 + C5844 + C4075 * C5831 + C4082 * C5820 +
            C5845 + C5845 + C93587 * C5832) *
               C93673 * C4078 +
           (C4080 * C5821 + C5846 + C5846 + C4075 * C5833 + C4082 * C5822 +
            C5847 + C5847 + C93587 * C5834) *
               C93673 * C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C9601 +
           (C4080 * C1388 + C5841 + C5841 + C4075 * C1404 + C4082 * C1387 +
            C5840 + C5840 + C93587 * C1403) *
               C9602 +
           (C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C9603) *
              C93662 * C93635 * C93621 * C97 -
          ((C4082 * C1391 + C9605 + C9605 + C93587 * C1407 + C4080 * C1390 +
            C9606 + C9606 + C4075 * C1406) *
               C9603 +
           (C4082 * C1386 + C7636 + C7636 + C93587 * C1402 + C4080 * C1387 +
            C7635 + C7635 + C4075 * C1403) *
               C9602 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C9601) *
              C93662 * C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C9601 +
           (C4080 * C1386 + C9607 + C9607 + C4075 * C1402 + C4082 * C1385 +
            C9608 + C9608 + C93587 * C1401) *
               C9602 +
           (C4080 * C1391 + C9609 + C9609 + C4075 * C1407 + C4082 * C1392 +
            C9610 + C9610 + C93587 * C1408) *
               C9603) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C9601 +
           (C4080 * C1388 + C5841 + C5841 + C4075 * C1404 + C4082 * C1387 +
            C5840 + C5840 + C93587 * C1403) *
               C9602 +
           (C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C9603) *
              C93662 * C93635 * C800 -
          ((C4082 * C5820 + C5845 + C5845 + C93587 * C5832 + C4080 * C5819 +
            C5844 + C5844 + C4075 * C5831) *
               C9603 +
           (C8642 + C8643) * C9602 + (C4958 + C4957) * C9601) *
              C93662 * C93635 * C801 +
          (C4963 * C9601 + (C8641 + C8640) * C9602 +
           (C4080 * C5821 + C5846 + C5846 + C4075 * C5833 + C4082 * C5822 +
            C5847 + C5847 + C93587 * C5834) *
               C9603) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C9601 +
           (C11143 + C11144) * C9602 + C11149 * C9603) *
              C93662 * C1382 -
          ((C11147 + C11148) * C9603 + (C11146 + C11145) * C9602 +
           (C11144 + C11143) * C9601) *
              C93662 * C1383 +
          (C11149 * C9601 + (C11148 + C11147) * C9602 +
           (C4080 * C11104 + C11129 + C11129 + C4075 * C11112 + C4082 * C11105 +
            C11130 + C11130 + C93587 * C11113) *
               C9603) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C188 * C108 + C93662 * C189) * C101 +
               (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
               C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
                  C93673 * C93635 * C93621 * C97 -
              (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 +
               C221 * C90 + C220 * C103 + C219 * C89 + C218 * C101) *
                  C93673 * C93635 * C93621 * C98 +
              (C220 * C101 + C221 * C89 + C222 * C103 + C223 * C90 +
               C225 * C105 + C224 * C91 + (C188 * C113 + C93662 * C194) * C107 +
               (C188 * C119 + C93662 * C200) * C92) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C188 * C108 + C93662 * C189) * C101 +
               (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
               C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
                  C93673 * C93635 * C800 -
              ((C188 * C812 + C93662 * C894) * C92 +
               (C188 * C804 + C93662 * C886) * C107 +
               (C188 * C813 + C93662 * C895) * C91 +
               (C188 * C805 + C93662 * C887) * C105 +
               (C188 * C814 + C93662 * C896) * C90 +
               (C188 * C806 + C93662 * C888) * C103 +
               (C188 * C815 + C93662 * C897) * C89 +
               (C188 * C807 + C93662 * C889) * C101) *
                  C93673 * C93635 * C801 +
              ((C188 * C808 + C93662 * C890) * C101 +
               (C188 * C816 + C93662 * C898) * C89 +
               (C188 * C809 + C93662 * C891) * C103 +
               (C188 * C817 + C93662 * C899) * C90 +
               (C188 * C810 + C93662 * C892) * C105 +
               (C188 * C818 + C93662 * C900) * C91 +
               (C188 * C811 + C93662 * C893) * C107 +
               (C188 * C819 + C93662 * C901) * C92) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C1382 -
          ((C188 * C1393 + C93662 * C1475) * C92 +
           (C188 * C1385 + C93662 * C1467) * C107 +
           (C188 * C1394 + C93662 * C1476) * C91 +
           (C188 * C1386 + C93662 * C1468) * C105 +
           (C188 * C1395 + C93662 * C1477) * C90 +
           (C188 * C1387 + C93662 * C1469) * C103 +
           (C188 * C1396 + C93662 * C1478) * C89 +
           (C188 * C1388 + C93662 * C1470) * C101) *
              C93673 * C1383 +
          ((C188 * C1389 + C93662 * C1471) * C101 +
           (C188 * C1397 + C93662 * C1479) * C89 +
           (C188 * C1390 + C93662 * C1472) * C103 +
           (C188 * C1398 + C93662 * C1480) * C90 +
           (C188 * C1391 + C93662 * C1473) * C105 +
           (C188 * C1399 + C93662 * C1481) * C91 +
           (C188 * C1392 + C93662 * C1474) * C107 +
           (C188 * C1400 + C93662 * C1482) * C92) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
           (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
              C93673 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C4081 + (C4212 + C4211 + C4210) * C4075 +
           (C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
            C4178 * C811 + C4079 * C893) *
               C4083 +
           (C4176 * C117 + C4077 * C198 + C4177 * C812 + C4078 * C894 +
            C4178 * C819 + C4079 * C901) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C800 -
          ((C4178 * C4920 + C4079 * C5042 + C4177 * C817 + C4078 * C899 +
            C4176 * C814 + C4077 * C896) *
               C93587 +
           (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
            C4176 * C806 + C4077 * C888) *
               C4083 +
           (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
            C4176 * C815 + C4077 * C897) *
               C4075 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C4081) *
              C93673 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C4081 +
           (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
            C4178 * C4922 + C4079 * C5044) *
               C4075 +
           (C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
            C4178 * C4919 + C4079 * C5041) *
               C4083 +
           (C4176 * C817 + C4077 * C899 + C4177 * C4920 + C4078 * C5042 +
            C4178 * C4923 + C4079 * C5045) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C1382 -
          ((C4178 * C5823 + C4079 * C5927 + C4177 * C3414 + C4078 * C3496 +
            C4176 * C1395 + C4077 * C1477) *
               C93587 +
           (C4178 * C5817 + C4079 * C5921 + C4177 * C3410 + C4078 * C3492 +
            C4176 * C1387 + C4077 * C1469) *
               C4083 +
           (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
            C4176 * C1396 + C4077 * C1478) *
               C4075 +
           (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
            C4176 * C1388 + C4077 * C1470) *
               C4081) *
              C93673 * C1383 +
          ((C4176 * C1389 + C4077 * C1471 + C4177 * C5819 + C4078 * C5923 +
            C4178 * C5821 + C4079 * C5924) *
               C4081 +
           (C4176 * C1397 + C4077 * C1479 + C4177 * C5825 + C4078 * C5929 +
            C4178 * C5827 + C4079 * C5930) *
               C4075 +
           (C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
            C4178 * C5822 + C4079 * C5926) *
               C4083 +
           (C4176 * C1398 + C4077 * C1480 + C4177 * C5826 + C4078 * C5931 +
            C4178 * C5828 + C4079 * C5932) *
               C93587) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C4081 +
            (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
            C219 * C93587) *
               C9601 +
           ((C188 * C1388 + C93662 * C1470) * C4081 +
            (C188 * C1396 + C93662 * C1478) * C4075 + C2790 * C4083 +
            C2789 * C93587) *
               C9602 +
           ((C188 * C1389 + C93662 * C1471) * C4081 +
            (C188 * C1397 + C93662 * C1479) * C4075 + C9693 * C4083 +
            C9694 * C93587) *
               C9603) *
              C93635 * C93621 * C97 -
          ((C9695 * C93587 + C9696 * C4083 + C9694 * C4075 + C9693 * C4081) *
               C9603 +
           (C2787 * C93587 + C2788 * C4083 + C2789 * C4075 + C2790 * C4081) *
               C9602 +
           (C221 * C93587 + C220 * C4083 + C219 * C4075 + C218 * C4081) *
               C9601) *
              C93635 * C93621 * C98 +
          ((C220 * C4081 + C221 * C4075 + C222 * C4083 + C223 * C93587) *
               C9601 +
           (C2788 * C4081 + C2787 * C4075 + C2786 * C4083 + C2785 * C93587) *
               C9602 +
           (C9696 * C4081 + C9695 * C4075 +
            (C188 * C1392 + C93662 * C1474) * C4083 +
            (C188 * C1400 + C93662 * C1482) * C93587) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C4081 +
            (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
            C219 * C93587) *
               C9601 +
           ((C188 * C1388 + C93662 * C1470) * C4081 +
            (C188 * C1396 + C93662 * C1478) * C4075 + C2790 * C4083 +
            C2789 * C93587) *
               C9602 +
           ((C188 * C1389 + C93662 * C1471) * C4081 +
            (C188 * C1397 + C93662 * C1479) * C4075 + C9693 * C4083 +
            C9694 * C93587) *
               C9603) *
              C93635 * C800 -
          (((C188 * C5826 + C93662 * C5931) * C93587 +
            (C188 * C5820 + C93662 * C5925) * C4083 +
            (C188 * C5825 + C93662 * C5929) * C4075 +
            (C188 * C5819 + C93662 * C5923) * C4081) *
               C9603 +
           ((C188 * C3414 + C93662 * C3496) * C93587 +
            (C188 * C3410 + C93662 * C3492) * C4083 +
            (C188 * C3413 + C93662 * C3495) * C4075 +
            (C188 * C3409 + C93662 * C3491) * C4081) *
               C9602 +
           (C2075 * C93587 + C2076 * C4083 +
            (C188 * C815 + C93662 * C897) * C4075 +
            (C188 * C807 + C93662 * C889) * C4081) *
               C9601) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C4081 +
            (C188 * C816 + C93662 * C898) * C4075 +
            (C188 * C809 + C93662 * C891) * C4083 +
            (C188 * C817 + C93662 * C899) * C93587) *
               C9601 +
           ((C188 * C5818 + C93662 * C5922) * C4081 +
            (C188 * C5824 + C93662 * C5928) * C4075 +
            (C188 * C5817 + C93662 * C5921) * C4083 +
            (C188 * C5823 + C93662 * C5927) * C93587) *
               C9602 +
           ((C188 * C5821 + C93662 * C5924) * C4081 +
            (C188 * C5827 + C93662 * C5930) * C4075 +
            (C188 * C5822 + C93662 * C5926) * C4083 +
            (C188 * C5828 + C93662 * C5932) * C93587) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C4081 +
            (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
            C219 * C93587) *
               C9601 +
           (C11260 + C11261 + C11236 + C11237) * C9602 + C11270 * C9603) *
              C1382 -
          ((C11264 + C11265 + C11266 + C11267) * C9603 +
           (C11243 + C11242 + C11263 + C11262) * C9602 +
           (C11237 + C11236 + C11261 + C11260) * C9601) *
              C1383 +
          (C11270 * C9601 + (C11267 + C11266 + C11265 + C11264) * C9602 +
           ((C188 * C11104 + C93662 * C11225) * C4081 +
            (C188 * C11108 + C93662 * C11229) * C4075 +
            (C188 * C11105 + C93662 * C11226) * C4083 +
            (C188 * C11109 + C93662 * C11230) * C93587) *
               C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C275 * C108 + C93673 * C276) * C101 +
               (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
               C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
                  C93662 * C93635 * C93621 * C97 -
              (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 +
               C308 * C90 + C307 * C103 + C306 * C89 + C305 * C101) *
                  C93662 * C93635 * C93621 * C98 +
              (C307 * C101 + C308 * C89 + C309 * C103 + C310 * C90 +
               C312 * C105 + C311 * C91 + (C275 * C113 + C93673 * C281) * C107 +
               (C275 * C119 + C93673 * C287) * C92) *
                  C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C275 * C108 + C93673 * C276) * C101 +
               (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
               C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
                  C93662 * C93635 * C800 -
              ((C275 * C812 + C93673 * C960) * C92 +
               (C275 * C804 + C93673 * C952) * C107 +
               (C275 * C813 + C93673 * C961) * C91 +
               (C275 * C805 + C93673 * C953) * C105 +
               (C275 * C814 + C93673 * C962) * C90 +
               (C275 * C806 + C93673 * C954) * C103 +
               (C275 * C815 + C93673 * C963) * C89 +
               (C275 * C807 + C93673 * C955) * C101) *
                  C93662 * C93635 * C801 +
              ((C275 * C808 + C93673 * C956) * C101 +
               (C275 * C816 + C93673 * C964) * C89 +
               (C275 * C809 + C93673 * C957) * C103 +
               (C275 * C817 + C93673 * C965) * C90 +
               (C275 * C810 + C93673 * C958) * C105 +
               (C275 * C818 + C93673 * C966) * C91 +
               (C275 * C811 + C93673 * C959) * C107 +
               (C275 * C819 + C93673 * C967) * C92) *
                  C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C1382 -
          ((C275 * C1393 + C93673 * C1541) * C92 +
           (C275 * C1385 + C93673 * C1533) * C107 +
           (C275 * C1394 + C93673 * C1542) * C91 +
           (C275 * C1386 + C93673 * C1534) * C105 +
           (C275 * C1395 + C93673 * C1543) * C90 +
           (C275 * C1387 + C93673 * C1535) * C103 +
           (C275 * C1396 + C93673 * C1544) * C89 +
           (C275 * C1388 + C93673 * C1536) * C101) *
              C93662 * C1383 +
          ((C275 * C1389 + C93673 * C1537) * C101 +
           (C275 * C1397 + C93673 * C1545) * C89 +
           (C275 * C1390 + C93673 * C1538) * C103 +
           (C275 * C1398 + C93673 * C1546) * C90 +
           (C275 * C1391 + C93673 * C1539) * C105 +
           (C275 * C1399 + C93673 * C1547) * C91 +
           (C275 * C1392 + C93673 * C1540) * C107 +
           (C275 * C1400 + C93673 * C1548) * C92) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           ((C275 * C807 + C93673 * C955) * C4081 +
            (C275 * C815 + C93673 * C963) * C4075 + C2162 * C4083 +
            C2161 * C93587) *
               C4078 +
           ((C275 * C808 + C93673 * C956) * C4081 +
            (C275 * C816 + C93673 * C964) * C4075 + C4298 * C4083 +
            C4299 * C93587) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C4083 + C4299 * C4075 + C4298 * C4081) *
               C4079 +
           (C2159 * C93587 + C2160 * C4083 + C2161 * C4075 + C2162 * C4081) *
               C4078 +
           (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
               C4077) *
              C93635 * C93621 * C98 +
          ((C307 * C4081 + C308 * C4075 + C309 * C4083 + C310 * C93587) *
               C4077 +
           (C2160 * C4081 + C2159 * C4075 + C2158 * C4083 + C2157 * C93587) *
               C4078 +
           (C4301 * C4081 + C4300 * C4075 +
            (C275 * C811 + C93673 * C959) * C4083 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C93635 * C800 -
          ((C5161 + C5162 + C5163 + C5164) * C4079 +
           (C5140 + C5139 + C5160 + C5159) * C4078 +
           (C5134 + C5133 + C5158 + C5157) * C4077) *
              C93635 * C801 +
          (C5167 * C4077 + (C5164 + C5163 + C5162 + C5161) * C4078 +
           ((C275 * C4918 + C93673 * C5122) * C4081 +
            (C275 * C4922 + C93673 * C5126) * C4075 +
            (C275 * C4919 + C93673 * C5123) * C4083 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C1382 -
          (((C275 * C5823 + C93673 * C6013) * C93587 +
            (C275 * C5817 + C93673 * C6007) * C4083 +
            (C275 * C5824 + C93673 * C6014) * C4075 +
            (C275 * C5818 + C93673 * C6008) * C4081) *
               C4079 +
           ((C275 * C3414 + C93673 * C3570) * C93587 +
            (C275 * C3410 + C93673 * C3566) * C4083 +
            (C275 * C3413 + C93673 * C3569) * C4075 +
            (C275 * C3409 + C93673 * C3565) * C4081) *
               C4078 +
           (C2875 * C93587 + C2876 * C4083 +
            (C275 * C1396 + C93673 * C1544) * C4075 +
            (C275 * C1388 + C93673 * C1536) * C4081) *
               C4077) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C4081 +
            (C275 * C1397 + C93673 * C1545) * C4075 +
            (C275 * C1390 + C93673 * C1538) * C4083 +
            (C275 * C1398 + C93673 * C1546) * C93587) *
               C4077 +
           ((C275 * C5819 + C93673 * C6009) * C4081 +
            (C275 * C5825 + C93673 * C6015) * C4075 +
            (C275 * C5820 + C93673 * C6010) * C4083 +
            (C275 * C5826 + C93673 * C6016) * C93587) *
               C4078 +
           ((C275 * C5821 + C93673 * C6011) * C4081 +
            (C275 * C5827 + C93673 * C6017) * C4075 +
            (C275 * C5822 + C93673 * C6012) * C4083 +
            (C275 * C5828 + C93673 * C6018) * C93587) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C4081 +
           (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
            C9772 * C1397 + C9603 * C1545) *
               C4075 +
           (C9798 + C9799 + C9800) * C4083 + (C9801 + C9802 + C9803) * C93587) *
              C93662 * C93635 * C93621 * C97 -
          ((C9804 + C9805 + C9806) * C93587 + (C9807 + C9808 + C9809) * C4083 +
           (C9803 + C9802 + C9801) * C4075 + (C9800 + C9799 + C9798) * C4081) *
              C93662 * C93635 * C93621 * C98 +
          ((C9809 + C9808 + C9807) * C4081 + (C9806 + C9805 + C9804) * C4075 +
           (C9770 * C111 + C9601 * C279 + C9771 * C1385 + C9602 * C1533 +
            C9772 * C1392 + C9603 * C1540) *
               C4083 +
           (C9770 * C117 + C9601 * C285 + C9771 * C1393 + C9602 * C1541 +
            C9772 * C1400 + C9603 * C1548) *
               C93587) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C4081 +
           (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
            C9772 * C1397 + C9603 * C1545) *
               C4075 +
           (C9798 + C9799 + C9800) * C4083 + (C9801 + C9802 + C9803) * C93587) *
              C93662 * C93635 * C800 -
          ((C9772 * C5826 + C9603 * C6016 + C9771 * C3414 + C9602 * C3570 +
            C9770 * C814 + C9601 * C962) *
               C93587 +
           (C9772 * C5820 + C9603 * C6010 + C9771 * C3410 + C9602 * C3566 +
            C9770 * C806 + C9601 * C954) *
               C4083 +
           (C9772 * C5825 + C9603 * C6015 + C9771 * C3413 + C9602 * C3569 +
            C9770 * C815 + C9601 * C963) *
               C4075 +
           (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
            C9770 * C807 + C9601 * C955) *
               C4081) *
              C93662 * C93635 * C801 +
          ((C9770 * C808 + C9601 * C956 + C9771 * C5818 + C9602 * C6008 +
            C9772 * C5821 + C9603 * C6011) *
               C4081 +
           (C9770 * C816 + C9601 * C964 + C9771 * C5824 + C9602 * C6014 +
            C9772 * C5827 + C9603 * C6017) *
               C4075 +
           (C9770 * C809 + C9601 * C957 + C9771 * C5817 + C9602 * C6007 +
            C9772 * C5822 + C9603 * C6012) *
               C4083 +
           (C9770 * C817 + C9601 * C965 + C9771 * C5823 + C9602 * C6013 +
            C9772 * C5828 + C9603 * C6018) *
               C93587) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C4081 +
           (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
            C9772 * C1397 + C9603 * C1545) *
               C4075 +
           (C9798 + C9799 + C9800) * C4083 + (C9801 + C9802 + C9803) * C93587) *
              C93662 * C1382 -
          ((C9772 * C11106 + C9603 * C11348 + C9771 * C1398 + C9602 * C1546 +
            C9770 * C1395 + C9601 * C1543) *
               C93587 +
           (C9772 * C11102 + C9603 * C11344 + C9771 * C1390 + C9602 * C1538 +
            C9770 * C1387 + C9601 * C1535) *
               C4083 +
           (C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
            C9770 * C1396 + C9601 * C1544) *
               C4075 +
           (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
            C9770 * C1388 + C9601 * C1536) *
               C4081) *
              C93662 * C1383 +
          ((C9770 * C1389 + C9601 * C1537 + C9771 * C11103 + C9602 * C11345 +
            C9772 * C11104 + C9603 * C11346) *
               C4081 +
           (C9770 * C1397 + C9601 * C1545 + C9771 * C11107 + C9602 * C11349 +
            C9772 * C11108 + C9603 * C11350) *
               C4075 +
           (C9770 * C1390 + C9601 * C1538 + C9771 * C11102 + C9602 * C11344 +
            C9772 * C11105 + C9603 * C11347) *
               C4083 +
           (C9770 * C1398 + C9601 * C1546 + C9771 * C11106 + C9602 * C11348 +
            C9772 * C11109 + C9603 * C11351) *
               C93587) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116 + C107 * C111 + C92 * C117) *
                   C188 +
               (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 +
                C105 * C191 + C91 * C364 + C107 * C192 + C92 * C365) *
                   C93662) *
                  C93673 * C93635 * C93621 * C97 -
              ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 +
                C103 * C191 + C90 * C364 + C101 * C190 + C89 * C363) *
                   C93662 +
               (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 +
                C103 * C110 + C90 * C116 + C101 * C109 + C89 * C115) *
                   C188) *
                  C93673 * C93635 * C93621 * C98 +
              ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 +
                C105 * C112 + C91 * C118 + C107 * C113 + C92 * C119) *
                   C188 +
               (C101 * C191 + C89 * C364 + C103 * C192 + C90 * C365 +
                C105 * C193 + C91 * C366 + C107 * C194 + C92 * C367) *
                   C93662) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116 + C107 * C111 + C92 * C117) *
                   C188 +
               (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 +
                C105 * C191 + C91 * C364 + C107 * C192 + C92 * C365) *
                   C93662) *
                  C93673 * C93635 * C800 -
              ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
                C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
                   C93662 +
               (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 +
                C103 * C806 + C90 * C814 + C101 * C807 + C89 * C815) *
                   C188) *
                  C93673 * C93635 * C801 +
              ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 +
                C105 * C810 + C91 * C818 + C107 * C811 + C92 * C819) *
                   C188 +
               (C101 * C890 + C89 * C1022 + C103 * C891 + C90 * C1023 +
                C105 * C892 + C91 * C1024 + C107 * C893 + C92 * C1025) *
                   C93662) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C1382 -
          ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
            C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
               C93662 +
           (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
            C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
               C188) *
              C93673 * C1383 +
          ((C101 * C1389 + C89 * C1397 + C103 * C1390 + C90 * C1398 +
            C105 * C1391 + C91 * C1399 + C107 * C1392 + C92 * C1400) *
               C188 +
           (C101 * C1471 + C89 * C1603 + C103 * C1472 + C90 * C1604 +
            C105 * C1473 + C91 * C1605 + C107 * C1474 + C92 * C1606) *
               C93662) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
               C4177 +
           (C4081 * C889 + C4075 * C1021 + C4083 * C888 + C93587 * C1020) *
               C4078 +
           (C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
               C4178 +
           (C4081 * C890 + C4075 * C1022 + C4083 * C891 + C93587 * C1023) *
               C4079) *
              C93673 * C93635 * C93621 * C97 -
          ((C4083 * C892 + C93587 * C1024 + C4081 * C891 + C4075 * C1023) *
               C4079 +
           (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
               C4178 +
           (C4083 * C887 + C93587 * C1019 + C4081 * C888 + C4075 * C1020) *
               C4078 +
           (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
               C4177 +
           (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
               C4077 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C4176) *
              C93673 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C4176 +
           (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
               C4077 +
           (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
               C4177 +
           (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
               C4078 +
           (C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
               C4178 +
           (C4081 * C892 + C4075 * C1024 + C4083 * C893 + C93587 * C1025) *
               C4079) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C93635 * C800 -
          ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
           (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
           (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
              C93673 * C93635 * C801 +
          (C5282 * C4176 + C5283 * C4077 + (C5281 + C5280) * C4177 +
           (C5279 + C5278) * C4078 +
           (C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
               C4178 +
           (C4081 * C5040 + C4075 * C5243 + C4083 * C5041 + C93587 * C5244) *
               C4079) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C1382 -
          ((C4083 * C5921 + C93587 * C6093 + C4081 * C5922 + C4075 * C6094) *
               C4079 +
           (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
               C4178 +
           (C4083 * C3492 + C93587 * C3640 + C4081 * C3491 + C4075 * C3639) *
               C4078 +
           (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
               C4177 +
           (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
               C4077 +
           (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
               C4176) *
              C93673 * C1383 +
          ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C4176 +
           (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
               C4077 +
           (C4081 * C5819 + C4075 * C5825 + C4083 * C5820 + C93587 * C5826) *
               C4177 +
           (C4081 * C5923 + C4075 * C6095 + C4083 * C5925 + C93587 * C6096) *
               C4078 +
           (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
               C4178 +
           (C4081 * C5924 + C4075 * C6097 + C4083 * C5926 + C93587 * C6098) *
               C4079) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C188 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93662) *
               C9601 +
           ((C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
                C188 +
            (C4081 * C1470 + C4075 * C1602 + C4083 * C1469 + C93587 * C1601) *
                C93662) *
               C9602 +
           ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C188 +
            (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
                C93662) *
               C9603) *
              C93635 * C93621 * C97 -
          (((C4083 * C1473 + C93587 * C1605 + C4081 * C1472 + C4075 * C1604) *
                C93662 +
            (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
                C188) *
               C9603 +
           ((C4083 * C1468 + C93587 * C1600 + C4081 * C1469 + C4075 * C1601) *
                C93662 +
            (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
                C188) *
               C9602 +
           ((C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C93662 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C188) *
               C9601) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C188 +
            (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
                C93662) *
               C9601 +
           ((C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C188 +
            (C4081 * C1468 + C4075 * C1600 + C4083 * C1467 + C93587 * C1599) *
                C93662) *
               C9602 +
           ((C4081 * C1391 + C4075 * C1399 + C4083 * C1392 + C93587 * C1400) *
                C188 +
            (C4081 * C1473 + C4075 * C1605 + C4083 * C1474 + C93587 * C1606) *
                C93662) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C188 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93662) *
               C9601 +
           ((C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
                C188 +
            (C4081 * C1470 + C4075 * C1602 + C4083 * C1469 + C93587 * C1601) *
                C93662) *
               C9602 +
           ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C188 +
            (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
                C93662) *
               C9603) *
              C93635 * C800 -
          (((C4083 * C5925 + C93587 * C6096 + C4081 * C5923 + C4075 * C6095) *
                C93662 +
            (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
                C188) *
               C9603 +
           ((C8988 + C8989) * C93662 + (C8990 + C8991) * C188) * C9602 +
           ((C5273 + C5272) * C93662 + (C5271 + C5270) * C188) * C9601) *
              C93635 * C801 +
          ((C5282 * C188 + C5283 * C93662) * C9601 +
           ((C8987 + C8986) * C188 + (C8985 + C8984) * C93662) * C9602 +
           ((C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                C188 +
            (C4081 * C5924 + C4075 * C6097 + C4083 * C5926 + C93587 * C6098) *
                C93662) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C188 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93662) *
               C9601 +
           ((C11455 + C11456) * C188 + (C11457 + C11458) * C93662) * C9602 +
           C11471 * C9603) *
              C1382 -
          (((C11463 + C11464) * C93662 + (C11465 + C11466) * C188) * C9603 +
           ((C11462 + C11461) * C93662 + (C11460 + C11459) * C188) * C9602 +
           ((C11458 + C11457) * C93662 + (C11456 + C11455) * C188) * C9601) *
              C1383 +
          (C11471 * C9601 +
           ((C11466 + C11465) * C188 + (C11464 + C11463) * C93662) * C9602 +
           ((C4081 * C11104 + C4075 * C11108 + C4083 * C11105 +
             C93587 * C11109) *
                C188 +
            (C4081 * C11225 + C4075 * C11428 + C4083 * C11226 +
             C93587 * C11429) *
                C93662) *
               C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
               C449 * C91 + C450 * C92) *
                  C93673 * C93635 * C93621 * C97 -
              (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
                  C93635 * C93621 * C98 +
              (C449 * C89 + C450 * C90 + C451 * C91 +
               (C418 * C113 + C439 + C439 + C93662 * C424) * C92) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
               C449 * C91 + C450 * C92) *
                  C93673 * C93635 * C800 -
              ((C418 * C804 + C1085 + C1085 + C93662 * C1076) * C92 +
               (C418 * C805 + C1086 + C1086 + C93662 * C1077) * C91 +
               (C418 * C806 + C1087 + C1087 + C93662 * C1078) * C90 +
               (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
                  C93673 * C93635 * C801 +
              ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C89 +
               (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C90 +
               (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C91 +
               (C418 * C811 + C1092 + C1092 + C93662 * C1083) * C92) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C1382 -
          ((C418 * C1385 + C1666 + C1666 + C93662 * C1657) * C92 +
           (C418 * C1386 + C1667 + C1667 + C93662 * C1658) * C91 +
           (C418 * C1387 + C1668 + C1668 + C93662 * C1659) * C90 +
           (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
              C93673 * C1383 +
          ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C89 +
           (C418 * C1390 + C1671 + C1671 + C93662 * C1662) * C90 +
           (C418 * C1391 + C1672 + C1672 + C93662 * C1663) * C91 +
           (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C92) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4492 + C4493 + C4494) * C93587 + (C4491 + C4490 + C4489) * C4075) *
              C93673 * C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C4075 +
           (C4449 * C111 + C4474 + C4474 + C4077 * C422 + C4450 * C804 + C4475 +
            C4475 + C4078 * C1076 + C4451 * C811 + C4476 + C4476 +
            C4079 * C1083) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C800 -
          ((C4451 * C4916 + C5362 + C5362 + C4079 * C5357 + C4450 * C809 +
            C5363 + C5363 + C4078 * C1081 + C4449 * C806 + C5364 + C5364 +
            C4077 * C1078) *
               C93587 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C4075) *
              C93673 * C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C4075 +
           (C4449 * C809 + C5371 + C5371 + C4077 * C1081 + C4450 * C4916 +
            C5372 + C5372 + C4078 * C5357 + C4451 * C4919 + C5373 + C5373 +
            C4079 * C5360) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C1382 -
          ((C4451 * C5817 + C6180 + C6180 + C4079 * C6173 + C4450 * C3410 +
            C6181 + C6181 + C4078 * C3710 + C4449 * C1387 + C6182 + C6182 +
            C4077 * C1659) *
               C93587 +
           (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4449 * C1388 + C6185 + C6185 +
            C4077 * C1660) *
               C4075) *
              C93673 * C1383 +
          ((C4449 * C1389 + C6186 + C6186 + C4077 * C1661 + C4450 * C5819 +
            C6187 + C6187 + C4078 * C6175 + C4451 * C5821 + C6188 + C6188 +
            C4079 * C6176) *
               C4075 +
           (C4449 * C1390 + C6189 + C6189 + C4077 * C1662 + C4450 * C5820 +
            C6190 + C6190 + C4078 * C6177 + C4451 * C5822 + C6191 + C6191 +
            C4079 * C6178) *
               C93587) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
            C448 * C93587) *
               C9601 +
           ((C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C4075 +
            C3026 * C93587) *
               C9602 +
           ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C4075 +
            C9966 * C93587) *
               C9603) *
              C93635 * C93621 * C97 -
          ((C9967 * C93587 + C9966 * C4075) * C9603 +
           (C3025 * C93587 + C3026 * C4075) * C9602 +
           (C449 * C93587 + C448 * C4075) * C9601) *
              C93635 * C93621 * C98 +
          ((C449 * C4075 + C450 * C93587) * C9601 +
           (C3025 * C4075 + C3024 * C93587) * C9602 +
           (C9967 * C4075 +
            (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C93587) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
            C448 * C93587) *
               C9601 +
           ((C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C4075 +
            C3026 * C93587) *
               C9602 +
           ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C4075 +
            C9966 * C93587) *
               C9603) *
              C93635 * C800 -
          (((C418 * C5820 + C10715 + C10715 + C93662 * C6177) * C93587 +
            (C418 * C5819 + C10716 + C10716 + C93662 * C6175) * C4075) *
               C9603 +
           ((C418 * C3410 + C3715 + C3715 + C93662 * C3710) * C93587 +
            (C418 * C3409 + C3714 + C3714 + C93662 * C3709) * C4075) *
               C9602 +
           (C2312 * C93587 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C4075) *
               C9601) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C4075 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93587) *
               C9601 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C4075 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93587) *
               C9602 +
           ((C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C4075 +
            (C418 * C5822 + C10720 + C10720 + C93662 * C6178) * C93587) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
            C448 * C93587) *
               C9601 +
           (C11576 + C11552) * C9602 + C11580 * C9603) *
              C1382 -
          ((C11578 + C11579) * C9603 + (C11555 + C11577) * C9602 +
           (C11552 + C11576) * C9601) *
              C1383 +
          (C11580 * C9601 + (C11579 + C11578) * C9602 +
           ((C418 * C11104 + C11562 + C11562 + C93662 * C11547) * C4075 +
            (C418 * C11105 + C11563 + C11563 + C93662 * C11548) * C93587) *
               C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C275 * C108 + C93673 * C276) * C188 +
                          (C275 * C189 + C93673 * C501) * C93662) *
                             C89 +
                         (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                            C93635 * C93621 * C97 -
                        ((C527 + C519) * C92 + (C526 + C514) * C91 +
                         (C525 + C511) * C90 + (C524 + C508) * C89) *
                            C93635 * C93621 * C98 +
                        (C528 * C89 + C529 * C90 + (C519 + C527) * C91 +
                         ((C275 * C113 + C93673 * C281) * C188 +
                          (C275 * C194 + C93673 * C506) * C93662) *
                             C92) *
                            C93635 * C93621 * C99) +
                   0.5 * std::pow(Pi, 2.5) *
                       ((((C275 * C108 + C93673 * C276) * C188 +
                          (C275 * C189 + C93673 * C501) * C93662) *
                             C89 +
                         (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                            C93635 * C800 -
                        (((C275 * C886 + C93673 * C1142) * C93662 +
                          (C275 * C804 + C93673 * C952) * C188) *
                             C92 +
                         ((C275 * C887 + C93673 * C1143) * C93662 +
                          (C275 * C805 + C93673 * C953) * C188) *
                             C91 +
                         ((C275 * C888 + C93673 * C1144) * C93662 +
                          (C275 * C806 + C93673 * C954) * C188) *
                             C90 +
                         ((C275 * C889 + C93673 * C1145) * C93662 +
                          (C275 * C807 + C93673 * C955) * C188) *
                             C89) *
                            C93635 * C801 +
                        (((C275 * C808 + C93673 * C956) * C188 +
                          (C275 * C890 + C93673 * C1146) * C93662) *
                             C89 +
                         ((C275 * C809 + C93673 * C957) * C188 +
                          (C275 * C891 + C93673 * C1147) * C93662) *
                             C90 +
                         ((C275 * C810 + C93673 * C958) * C188 +
                          (C275 * C892 + C93673 * C1148) * C93662) *
                             C91 +
                         ((C275 * C811 + C93673 * C959) * C188 +
                          (C275 * C893 + C93673 * C1149) * C93662) *
                             C92) *
                            C93635 * C802) *
                       C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C1382 -
                    (((C275 * C1467 + C93673 * C1723) * C93662 +
                      (C275 * C1385 + C93673 * C1533) * C188) *
                         C92 +
                     ((C275 * C1468 + C93673 * C1724) * C93662 +
                      (C275 * C1386 + C93673 * C1534) * C188) *
                         C91 +
                     ((C275 * C1469 + C93673 * C1725) * C93662 +
                      (C275 * C1387 + C93673 * C1535) * C188) *
                         C90 +
                     ((C275 * C1470 + C93673 * C1726) * C93662 +
                      (C275 * C1388 + C93673 * C1536) * C188) *
                         C89) *
                        C1383 +
                    (((C275 * C1389 + C93673 * C1537) * C188 +
                      (C275 * C1471 + C93673 * C1727) * C93662) *
                         C89 +
                     ((C275 * C1390 + C93673 * C1538) * C188 +
                      (C275 * C1472 + C93673 * C1728) * C93662) *
                         C90 +
                     ((C275 * C1391 + C93673 * C1539) * C188 +
                      (C275 * C1473 + C93673 * C1729) * C93662) *
                         C91 +
                     ((C275 * C1392 + C93673 * C1540) * C188 +
                      (C275 * C1474 + C93673 * C1730) * C93662) *
                         C92) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 +
                      (C275 * C807 + C93673 * C955) * C4177 +
                      (C275 * C889 + C93673 * C1145) * C4078 +
                      (C275 * C808 + C93673 * C956) * C4178 +
                      (C275 * C890 + C93673 * C1146) * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C93621 * C97 -
                    ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
                     (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
                        C93635 * C93621 * C98 +
                    ((C4582 + C4581 + C4580 + C4579 + C4578 + C4586) * C4075 +
                     (C309 * C4176 + C522 * C4077 + C2158 * C4177 +
                      C2389 * C4078 + (C275 * C811 + C93673 * C959) * C4178 +
                      (C275 * C893 + C93673 * C1149) * C4079) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C800 -
                    ((C5462 * C4079 + C5154 * C4178 + C4583 * C4078 +
                      C4298 * C4177 + C2391 * C4077 + C2162 * C4176) *
                         C93587 +
                     (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 +
                      C5151 * C4177 + C5460 * C4077 + C5149 * C4176) *
                         C4075) *
                        C93635 * C801 +
                    ((C5151 * C4176 + C5461 * C4077 + C5156 * C4177 +
                      C5463 * C4078 + (C275 * C4918 + C93673 * C5122) * C4178 +
                      (C275 * C5040 + C93673 * C5449) * C4079) *
                         C4075 +
                     (C4298 * C4176 + C4583 * C4077 + C5154 * C4177 +
                      C5462 * C4078 + (C275 * C4919 + C93673 * C5123) * C4178 +
                      (C275 * C5041 + C93673 * C5450) * C4079) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C1382 -
                    (((C275 * C5921 + C93673 * C6265) * C4079 +
                      (C275 * C5817 + C93673 * C6007) * C4178 +
                      (C275 * C3492 + C93673 * C3784) * C4078 +
                      (C275 * C3410 + C93673 * C3566) * C4177 + C3105 * C4077 +
                      C2876 * C4176) *
                         C93587 +
                     ((C275 * C5922 + C93673 * C6266) * C4079 +
                      (C275 * C5818 + C93673 * C6008) * C4178 +
                      (C275 * C3491 + C93673 * C3783) * C4078 +
                      (C275 * C3409 + C93673 * C3565) * C4177 +
                      (C275 * C1470 + C93673 * C1726) * C4077 +
                      (C275 * C1388 + C93673 * C1536) * C4176) *
                         C4075) *
                        C1383 +
                    (((C275 * C1389 + C93673 * C1537) * C4176 +
                      (C275 * C1471 + C93673 * C1727) * C4077 +
                      (C275 * C5819 + C93673 * C6009) * C4177 +
                      (C275 * C5923 + C93673 * C6267) * C4078 +
                      (C275 * C5821 + C93673 * C6011) * C4178 +
                      (C275 * C5924 + C93673 * C6268) * C4079) *
                         C4075 +
                     ((C275 * C1390 + C93673 * C1538) * C4176 +
                      (C275 * C1472 + C93673 * C1728) * C4077 +
                      (C275 * C5820 + C93673 * C6010) * C4177 +
                      (C275 * C5925 + C93673 * C6269) * C4078 +
                      (C275 * C5822 + C93673 * C6012) * C4178 +
                      (C275 * C5926 + C93673 * C6270) * C4079) *
                         C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 +
                       C9602 * C1536 + C9772 * C1389 + C9603 * C1537) *
                          C188 +
                      (C9770 * C189 + C9601 * C501 + C9771 * C1470 +
                       C9602 * C1726 + C9772 * C1471 + C9603 * C1727) *
                          C93662) *
                         C4075 +
                     ((C9798 + C9799 + C9800) * C188 +
                      (C10054 + C10055 + C10056) * C93662) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C10057 + C10058 + C10059) * C93662 +
                      (C9807 + C9808 + C9809) * C188) *
                         C93587 +
                     ((C10056 + C10055 + C10054) * C93662 +
                      (C9800 + C9799 + C9798) * C188) *
                         C4075) *
                        C93635 * C93621 * C98 +
                    (((C9809 + C9808 + C9807) * C188 +
                      (C10059 + C10058 + C10057) * C93662) *
                         C4075 +
                     ((C9770 * C111 + C9601 * C279 + C9771 * C1385 +
                       C9602 * C1533 + C9772 * C1392 + C9603 * C1540) *
                          C188 +
                      (C9770 * C192 + C9601 * C504 + C9771 * C1467 +
                       C9602 * C1723 + C9772 * C1474 + C9603 * C1730) *
                          C93662) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 +
                       C9602 * C1536 + C9772 * C1389 + C9603 * C1537) *
                          C188 +
                      (C9770 * C189 + C9601 * C501 + C9771 * C1470 +
                       C9602 * C1726 + C9772 * C1471 + C9603 * C1727) *
                          C93662) *
                         C4075 +
                     ((C9798 + C9799 + C9800) * C188 +
                      (C10054 + C10055 + C10056) * C93662) *
                         C93587) *
                        C93635 * C800 -
                    (((C9772 * C5925 + C9603 * C6269 + C9771 * C3492 +
                       C9602 * C3784 + C9770 * C888 + C9601 * C1144) *
                          C93662 +
                      (C9772 * C5820 + C9603 * C6010 + C9771 * C3410 +
                       C9602 * C3566 + C9770 * C806 + C9601 * C954) *
                          C188) *
                         C93587 +
                     ((C9772 * C5923 + C9603 * C6267 + C9771 * C3491 +
                       C9602 * C3783 + C9770 * C889 + C9601 * C1145) *
                          C93662 +
                      (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 +
                       C9602 * C3565 + C9770 * C807 + C9601 * C955) *
                          C188) *
                         C4075) *
                        C93635 * C801 +
                    (((C9770 * C808 + C9601 * C956 + C9771 * C5818 +
                       C9602 * C6008 + C9772 * C5821 + C9603 * C6011) *
                          C188 +
                      (C9770 * C890 + C9601 * C1146 + C9771 * C5922 +
                       C9602 * C6266 + C9772 * C5924 + C9603 * C6268) *
                          C93662) *
                         C4075 +
                     ((C9770 * C809 + C9601 * C957 + C9771 * C5817 +
                       C9602 * C6007 + C9772 * C5822 + C9603 * C6012) *
                          C188 +
                      (C9770 * C891 + C9601 * C1147 + C9771 * C5921 +
                       C9602 * C6265 + C9772 * C5926 + C9603 * C6270) *
                          C93662) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 +
                       C9602 * C1536 + C9772 * C1389 + C9603 * C1537) *
                          C188 +
                      (C9770 * C189 + C9601 * C501 + C9771 * C1470 +
                       C9602 * C1726 + C9772 * C1471 + C9603 * C1727) *
                          C93662) *
                         C4075 +
                     ((C9798 + C9799 + C9800) * C188 +
                      (C10054 + C10055 + C10056) * C93662) *
                         C93587) *
                        C1382 -
                    (((C9772 * C11223 + C9603 * C11654 + C9771 * C1472 +
                       C9602 * C1728 + C9770 * C1469 + C9601 * C1725) *
                          C93662 +
                      (C9772 * C11102 + C9603 * C11344 + C9771 * C1390 +
                       C9602 * C1538 + C9770 * C1387 + C9601 * C1535) *
                          C188) *
                         C93587 +
                     ((C9772 * C11224 + C9603 * C11655 + C9771 * C1471 +
                       C9602 * C1727 + C9770 * C1470 + C9601 * C1726) *
                          C93662 +
                      (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 +
                       C9602 * C1537 + C9770 * C1388 + C9601 * C1536) *
                          C188) *
                         C4075) *
                        C1383 +
                    (((C9770 * C1389 + C9601 * C1537 + C9771 * C11103 +
                       C9602 * C11345 + C9772 * C11104 + C9603 * C11346) *
                          C188 +
                      (C9770 * C1471 + C9601 * C1727 + C9771 * C11224 +
                       C9602 * C11655 + C9772 * C11225 + C9603 * C11656) *
                          C93662) *
                         C4075 +
                     ((C9770 * C1390 + C9601 * C1538 + C9771 * C11102 +
                       C9602 * C11344 + C9772 * C11105 + C9603 * C11347) *
                          C188 +
                      (C9770 * C1472 + C9601 * C1728 + C9771 * C11223 +
                       C9602 * C11654 + C9772 * C11226 + C9603 * C11657) *
                          C93662) *
                         C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116 + C107 * C111 + C92 * C117) *
                   C275 +
               (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                C105 * C278 + C91 * C581 + C107 * C279 + C92 * C582) *
                   C93673) *
                  C93662 * C93635 * C93621 * C97 -
              ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 +
                C103 * C278 + C90 * C581 + C101 * C277 + C89 * C580) *
                   C93673 +
               (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 +
                C103 * C110 + C90 * C116 + C101 * C109 + C89 * C115) *
                   C275) *
                  C93662 * C93635 * C93621 * C98 +
              ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 +
                C105 * C112 + C91 * C118 + C107 * C113 + C92 * C119) *
                   C275 +
               (C101 * C278 + C89 * C581 + C103 * C279 + C90 * C582 +
                C105 * C280 + C91 * C583 + C107 * C281 + C92 * C584) *
                   C93673) *
                  C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116 + C107 * C111 + C92 * C117) *
                   C275 +
               (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                C105 * C278 + C91 * C581 + C107 * C279 + C92 * C582) *
                   C93673) *
                  C93662 * C93635 * C800 -
              ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
                C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
                   C93673 +
               (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 +
                C103 * C806 + C90 * C814 + C101 * C807 + C89 * C815) *
                   C275) *
                  C93662 * C93635 * C801 +
              ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 +
                C105 * C810 + C91 * C818 + C107 * C811 + C92 * C819) *
                   C275 +
               (C101 * C956 + C89 * C1204 + C103 * C957 + C90 * C1205 +
                C105 * C958 + C91 * C1206 + C107 * C959 + C92 * C1207) *
                   C93673) *
                  C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C1382 -
          ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
            C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
               C93673 +
           (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
            C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
               C275) *
              C93662 * C1383 +
          ((C101 * C1389 + C89 * C1397 + C103 * C1390 + C90 * C1398 +
            C105 * C1391 + C91 * C1399 + C107 * C1392 + C92 * C1400) *
               C275 +
           (C101 * C1537 + C89 * C1785 + C103 * C1538 + C90 * C1786 +
            C105 * C1539 + C91 * C1787 + C107 * C1540 + C92 * C1788) *
               C93673) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
                C275 +
            (C4081 * C955 + C4075 * C1203 + C4083 * C954 + C93587 * C1202) *
                C93673) *
               C4078 +
           ((C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
                C275 +
            (C4081 * C956 + C4075 * C1204 + C4083 * C957 + C93587 * C1205) *
                C93673) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C4083 * C958 + C93587 * C1206 + C4081 * C957 + C4075 * C1205) *
                C93673 +
            (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
                C275) *
               C4079 +
           ((C4083 * C953 + C93587 * C1201 + C4081 * C954 + C4075 * C1202) *
                C93673 +
            (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
                C275) *
               C4078 +
           ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93673 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C275) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C275 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93673) *
               C4077 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C275 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93673) *
               C4078 +
           ((C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
                C275 +
            (C4081 * C958 + C4075 * C1206 + C4083 * C959 + C93587 * C1207) *
                C93673) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C93635 * C800 -
          (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
           ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
           ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
              C93635 * C801 +
          (C5563 * C4077 +
           ((C5281 + C5280) * C275 + (C5560 + C5559) * C93673) * C4078 +
           ((C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
                C275 +
            (C4081 * C5122 + C4075 * C5539 + C4083 * C5123 + C93587 * C5540) *
                C93673) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C1382 -
          (((C4083 * C6007 + C93587 * C6345 + C4081 * C6008 + C4075 * C6346) *
                C93673 +
            (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                C275) *
               C4079 +
           ((C4083 * C3566 + C93587 * C3854 + C4081 * C3565 + C4075 * C3853) *
                C93673 +
            (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                C275) *
               C4078 +
           ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                C93673 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C275) *
               C4077) *
              C1383 +
          (((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C275 +
            (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
                C93673) *
               C4077 +
           ((C4081 * C5819 + C4075 * C5825 + C4083 * C5820 + C93587 * C5826) *
                C275 +
            (C4081 * C6009 + C4075 * C6347 + C4083 * C6010 + C93587 * C6348) *
                C93673) *
               C4078 +
           ((C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                C275 +
            (C4081 * C6011 + C4075 * C6349 + C4083 * C6012 + C93587 * C6350) *
                C93673) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C9770 +
           (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
               C9601 +
           (C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
               C9771 +
           (C4081 * C1536 + C4075 * C1784 + C4083 * C1535 + C93587 * C1783) *
               C9602 +
           (C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C9772 +
           (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
               C9603) *
              C93662 * C93635 * C93621 * C97 -
          ((C4083 * C1539 + C93587 * C1787 + C4081 * C1538 + C4075 * C1786) *
               C9603 +
           (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
               C9772 +
           (C4083 * C1534 + C93587 * C1782 + C4081 * C1535 + C4075 * C1783) *
               C9602 +
           (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
               C9771 +
           (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
               C9601 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C9770) *
              C93662 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C9770 +
           (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
               C9601 +
           (C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
               C9771 +
           (C4081 * C1534 + C4075 * C1782 + C4083 * C1533 + C93587 * C1781) *
               C9602 +
           (C4081 * C1391 + C4075 * C1399 + C4083 * C1392 + C93587 * C1400) *
               C9772 +
           (C4081 * C1539 + C4075 * C1787 + C4083 * C1540 + C93587 * C1788) *
               C9603) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C9770 +
           (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
               C9601 +
           (C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
               C9771 +
           (C4081 * C1536 + C4075 * C1784 + C4083 * C1535 + C93587 * C1783) *
               C9602 +
           (C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C9772 +
           (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
               C9603) *
              C93662 * C93635 * C800 -
          ((C4083 * C6010 + C93587 * C6348 + C4081 * C6009 + C4075 * C6347) *
               C9603 +
           (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
               C9772 +
           (C9314 + C9315) * C9602 + (C8990 + C8991) * C9771 +
           (C5556 + C5555) * C9601 + (C5271 + C5270) * C9770) *
              C93662 * C93635 * C801 +
          (C5282 * C9770 + C5561 * C9601 + (C8987 + C8986) * C9771 +
           (C9313 + C9312) * C9602 +
           (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
               C9772 +
           (C4081 * C6011 + C4075 * C6349 + C4083 * C6012 + C93587 * C6350) *
               C9603) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C9770 +
           (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
               C9601 +
           (C11455 + C11456) * C9771 + (C11749 + C11750) * C9602 +
           C11467 * C9772 + C11755 * C9603) *
              C93662 * C1382 -
          ((C11753 + C11754) * C9603 + (C11465 + C11466) * C9772 +
           (C11752 + C11751) * C9602 + (C11460 + C11459) * C9771 +
           (C11750 + C11749) * C9601 + (C11456 + C11455) * C9770) *
              C93662 * C1383 +
          (C11467 * C9770 + C11755 * C9601 + (C11466 + C11465) * C9771 +
           (C11754 + C11753) * C9602 +
           (C4081 * C11104 + C4075 * C11108 + C4083 * C11105 +
            C93587 * C11109) *
               C9772 +
           (C4081 * C11346 + C4075 * C11734 + C4083 * C11347 +
            C93587 * C11735) *
               C9603) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C275 +
                (C188 * C276 + C93662 * C635) * C93673) *
                   C89 +
               (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
                  C93635 * C93621 * C97 -
              ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
               (C658 + C642) * C89) *
                  C93635 * C93621 * C98 +
              (C662 * C89 + C663 * C90 + (C653 + C661) * C91 +
               ((C188 * C113 + C93662 * C194) * C275 +
                (C188 * C281 + C93662 * C640) * C93673) *
                   C92) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C275 +
                (C188 * C276 + C93662 * C635) * C93673) *
                   C89 +
               (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
                  C93635 * C800 -
              (((C188 * C952 + C93662 * C1258) * C93673 +
                (C188 * C804 + C93662 * C886) * C275) *
                   C92 +
               ((C188 * C953 + C93662 * C1259) * C93673 +
                (C188 * C805 + C93662 * C887) * C275) *
                   C91 +
               ((C188 * C954 + C93662 * C1260) * C93673 +
                (C188 * C806 + C93662 * C888) * C275) *
                   C90 +
               ((C188 * C955 + C93662 * C1261) * C93673 +
                (C188 * C807 + C93662 * C889) * C275) *
                   C89) *
                  C93635 * C801 +
              (((C188 * C808 + C93662 * C890) * C275 +
                (C188 * C956 + C93662 * C1262) * C93673) *
                   C89 +
               ((C188 * C809 + C93662 * C891) * C275 +
                (C188 * C957 + C93662 * C1263) * C93673) *
                   C90 +
               ((C188 * C810 + C93662 * C892) * C275 +
                (C188 * C958 + C93662 * C1264) * C93673) *
                   C91 +
               ((C188 * C811 + C93662 * C893) * C275 +
                (C188 * C959 + C93662 * C1265) * C93673) *
                   C92) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C1382 -
          (((C188 * C1533 + C93662 * C1839) * C93673 +
            (C188 * C1385 + C93662 * C1467) * C275) *
               C92 +
           ((C188 * C1534 + C93662 * C1840) * C93673 +
            (C188 * C1386 + C93662 * C1468) * C275) *
               C91 +
           ((C188 * C1535 + C93662 * C1841) * C93673 +
            (C188 * C1387 + C93662 * C1469) * C275) *
               C90 +
           ((C188 * C1536 + C93662 * C1842) * C93673 +
            (C188 * C1388 + C93662 * C1470) * C275) *
               C89) *
              C1383 +
          (((C188 * C1389 + C93662 * C1471) * C275 +
            (C188 * C1537 + C93662 * C1843) * C93673) *
               C89 +
           ((C188 * C1390 + C93662 * C1472) * C275 +
            (C188 * C1538 + C93662 * C1844) * C93673) *
               C90 +
           ((C188 * C1391 + C93662 * C1473) * C275 +
            (C188 * C1539 + C93662 * C1845) * C93673) *
               C91 +
           ((C188 * C1392 + C93662 * C1474) * C275 +
            (C188 * C1540 + C93662 * C1846) * C93673) *
               C92) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C4750 + C4751 + C4752) * C93673 + (C4213 + C4214 + C4215) * C275) *
               C93587 +
           ((C4749 + C4748 + C4747) * C93673 + (C4206 + C4205 + C4204) * C275) *
               C4075) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C275 + (C4752 + C4751 + C4750) * C93673) *
               C4075 +
           ((C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
             C4178 * C811 + C4079 * C893) *
                C275 +
            (C4176 * C279 + C4077 * C638 + C4177 * C952 + C4078 * C1258 +
             C4178 * C959 + C4079 * C1265) *
                C93673) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C800 -
          (((C4178 * C5120 + C4079 * C5637 + C4177 * C957 + C4078 * C1263 +
             C4176 * C954 + C4077 * C1260) *
                C93673 +
            (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
             C4176 * C806 + C4077 * C888) *
                C275) *
               C93587 +
           ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C93673 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C275) *
               C4075) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C275 +
            (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
             C4178 * C5122 + C4079 * C5639) *
                C93673) *
               C4075 +
           ((C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
             C4178 * C4919 + C4079 * C5041) *
                C275 +
            (C4176 * C957 + C4077 * C1263 + C4177 * C5120 + C4078 * C5637 +
             C4178 * C5123 + C4079 * C5640) *
                C93673) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C1382 -
          (((C4178 * C6007 + C4079 * C6425 + C4177 * C3566 + C4078 * C3924 +
             C4176 * C1535 + C4077 * C1841) *
                C93673 +
            (C4178 * C5817 + C4079 * C5921 + C4177 * C3410 + C4078 * C3492 +
             C4176 * C1387 + C4077 * C1469) *
                C275) *
               C93587 +
           ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 + C4078 * C3923 +
             C4176 * C1536 + C4077 * C1842) *
                C93673 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C275) *
               C4075) *
              C1383 +
          (((C4176 * C1389 + C4077 * C1471 + C4177 * C5819 + C4078 * C5923 +
             C4178 * C5821 + C4079 * C5924) *
                C275 +
            (C4176 * C1537 + C4077 * C1843 + C4177 * C6009 + C4078 * C6427 +
             C4178 * C6011 + C4079 * C6428) *
                C93673) *
               C4075 +
           ((C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
             C4178 * C5822 + C4079 * C5926) *
                C275 +
            (C4176 * C1538 + C4077 * C1844 + C4177 * C6010 + C4078 * C6429 +
             C4178 * C6012 + C4079 * C6430) *
                C93673) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C9770 +
            (C188 * C276 + C93662 * C635) * C9601 +
            (C188 * C1388 + C93662 * C1470) * C9771 +
            (C188 * C1536 + C93662 * C1842) * C9602 +
            (C188 * C1389 + C93662 * C1471) * C9772 +
            (C188 * C1537 + C93662 * C1843) * C9603) *
               C4075 +
           (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
              C93635 * C93621 * C97 -
          ((C10225 + C10217 + C10218 + C10219 + C10220 + C10221) * C93587 +
           (C10224 + C10212 + C10211 + C10210 + C10209 + C10208) * C4075) *
              C93635 * C93621 * C98 +
          ((C10221 + C10220 + C10219 + C10218 + C10217 + C10225) * C4075 +
           (C222 * C9770 + C656 * C9601 + C2786 * C9771 + C3252 * C9602 +
            (C188 * C1392 + C93662 * C1474) * C9772 +
            (C188 * C1540 + C93662 * C1846) * C9603) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C9770 +
            (C188 * C276 + C93662 * C635) * C9601 +
            (C188 * C1388 + C93662 * C1470) * C9771 +
            (C188 * C1536 + C93662 * C1842) * C9602 +
            (C188 * C1389 + C93662 * C1471) * C9772 +
            (C188 * C1537 + C93662 * C1843) * C9603) *
               C4075 +
           (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
              C93635 * C800 -
          (((C188 * C6010 + C93662 * C6429) * C9603 +
            (C188 * C5820 + C93662 * C5925) * C9772 +
            (C188 * C3566 + C93662 * C3924) * C9602 +
            (C188 * C3410 + C93662 * C3492) * C9771 + C2540 * C9601 +
            C2076 * C9770) *
               C93587 +
           ((C188 * C6009 + C93662 * C6427) * C9603 +
            (C188 * C5819 + C93662 * C5923) * C9772 +
            (C188 * C3565 + C93662 * C3923) * C9602 +
            (C188 * C3409 + C93662 * C3491) * C9771 +
            (C188 * C955 + C93662 * C1261) * C9601 +
            (C188 * C807 + C93662 * C889) * C9770) *
               C4075) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C9770 +
            (C188 * C956 + C93662 * C1262) * C9601 +
            (C188 * C5818 + C93662 * C5922) * C9771 +
            (C188 * C6008 + C93662 * C6426) * C9602 +
            (C188 * C5821 + C93662 * C5924) * C9772 +
            (C188 * C6011 + C93662 * C6428) * C9603) *
               C4075 +
           ((C188 * C809 + C93662 * C891) * C9770 +
            (C188 * C957 + C93662 * C1263) * C9601 +
            (C188 * C5817 + C93662 * C5921) * C9771 +
            (C188 * C6007 + C93662 * C6425) * C9602 +
            (C188 * C5822 + C93662 * C5926) * C9772 +
            (C188 * C6012 + C93662 * C6430) * C9603) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C9770 +
            (C188 * C276 + C93662 * C635) * C9601 + C11252 * C9771 +
            C11842 * C9602 + C11254 * C9772 + C11843 * C9603) *
               C4075 +
           (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
              C1382 -
          ((C11844 * C9603 + C11257 * C9772 + C10222 * C9602 + C9693 * C9771 +
            C3254 * C9601 + C2790 * C9770) *
               C93587 +
           (C11845 * C9603 + C11259 * C9772 + C11843 * C9602 + C11254 * C9771 +
            C11842 * C9601 + C11252 * C9770) *
               C4075) *
              C1383 +
          ((C11254 * C9770 + C11843 * C9601 + C11259 * C9771 + C11845 * C9602 +
            (C188 * C11104 + C93662 * C11225) * C9772 +
            (C188 * C11346 + C93662 * C11831) * C9603) *
               C4075 +
           (C9693 * C9770 + C10222 * C9601 + C11257 * C9771 + C11844 * C9602 +
            (C188 * C11105 + C93662 * C11226) * C9772 +
            (C188 * C11347 + C93662 * C11832) * C9603) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
               C747 * C90 + C748 * C91 + C749 * C92) *
                  C93635 * C93621 * C97 -
              (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
                  C93621 * C98 +
              (C748 * C89 + C749 * C90 + C750 * C91 +
               (C713 * C113 + C734 + C734 + C93673 * C719) * C93662 * C92) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
               C747 * C90 + C748 * C91 + C749 * C92) *
                  C93635 * C800 -
              ((C713 * C804 + C1325 + C1325 + C93673 * C1316) * C93662 * C92 +
               (C713 * C805 + C1326 + C1326 + C93673 * C1317) * C93662 * C91 +
               (C713 * C806 + C1327 + C1327 + C93673 * C1318) * C93662 * C90 +
               (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
                  C93635 * C801 +
              ((C713 * C808 + C1329 + C1329 + C93673 * C1320) * C93662 * C89 +
               (C713 * C809 + C1330 + C1330 + C93673 * C1321) * C93662 * C90 +
               (C713 * C810 + C1331 + C1331 + C93673 * C1322) * C93662 * C91 +
               (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93662 * C92) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C1382 -
          ((C713 * C1385 + C1906 + C1906 + C93673 * C1897) * C93662 * C92 +
           (C713 * C1386 + C1907 + C1907 + C93673 * C1898) * C93662 * C91 +
           (C713 * C1387 + C1908 + C1908 + C93673 * C1899) * C93662 * C90 +
           (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
              C1383 +
          ((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C93662 * C89 +
           (C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C93662 * C90 +
           (C713 * C1391 + C1912 + C1912 + C93673 * C1903) * C93662 * C91 +
           (C713 * C1392 + C1913 + C1913 + C93673 * C1904) * C93662 * C92) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C4078 +
            (C713 * C808 + C1329 + C1329 + C93673 * C1320) * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C93621 * C97 -
          ((C4842 + C4833 + C4834) * C93587 + (C4841 + C4828 + C4827) * C4075) *
              C93635 * C93621 * C98 +
          ((C4834 + C4833 + C4842) * C4075 +
           (C745 * C4077 + C2624 * C4078 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C4079) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C800 -
          ((C5742 * C4079 + C4839 * C4078 + C2626 * C4077) * C93587 +
           (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
              C93635 * C801 +
          ((C5741 * C4077 + C5743 * C4078 +
            (C713 * C4918 + C5730 + C5730 + C93673 * C5717) * C4079) *
               C4075 +
           (C4839 * C4077 + C5742 * C4078 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C4079) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C1382 -
          (((C713 * C5817 + C6512 + C6512 + C93673 * C6505) * C4079 +
            (C713 * C3410 + C3999 + C3999 + C93673 * C3994) * C4078 +
            C3340 * C4077) *
               C93587 +
           ((C713 * C5818 + C6513 + C6513 + C93673 * C6506) * C4079 +
            (C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C4078 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
               C4075) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C4077 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C4078 +
            (C713 * C5821 + C6515 + C6515 + C93673 * C6508) * C4079) *
               C4075 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C4077 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C4078 +
            (C713 * C5822 + C6517 + C6517 + C93673 * C6510) * C4079) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C93662 * C4075 +
           (C10339 + C10340 + C10341) * C93662 * C93587) *
              C93635 * C93621 * C97 -
          ((C10342 + C10343 + C10344) * C93662 * C93587 +
           (C10341 + C10340 + C10339) * C93662 * C4075) *
              C93635 * C93621 * C98 +
          ((C10344 + C10343 + C10342) * C93662 * C4075 +
           (C10299 * C111 + C10324 + C10324 + C9601 * C717 + C10300 * C1385 +
            C10325 + C10325 + C9602 * C1897 + C10301 * C1392 + C10326 + C10326 +
            C9603 * C1904) *
               C93662 * C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C93662 * C4075 +
           (C10339 + C10340 + C10341) * C93662 * C93587) *
              C93635 * C800 -
          ((C10301 * C5820 + C11017 + C11017 + C9603 * C6509 + C10300 * C3410 +
            C11018 + C11018 + C9602 * C3994 + C10299 * C806 + C11019 + C11019 +
            C9601 * C1318) *
               C93662 * C93587 +
           (C10301 * C5819 + C11020 + C11020 + C9603 * C6507 + C10300 * C3409 +
            C11021 + C11021 + C9602 * C3993 + C10299 * C807 + C11022 + C11022 +
            C9601 * C1319) *
               C93662 * C4075) *
              C93635 * C801 +
          ((C10299 * C808 + C11023 + C11023 + C9601 * C1320 + C10300 * C5818 +
            C11024 + C11024 + C9602 * C6506 + C10301 * C5821 + C11025 + C11025 +
            C9603 * C6508) *
               C93662 * C4075 +
           (C10299 * C809 + C11026 + C11026 + C9601 * C1321 + C10300 * C5817 +
            C11027 + C11027 + C9602 * C6505 + C10301 * C5822 + C11028 + C11028 +
            C9603 * C6510) *
               C93662 * C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C93662 * C4075 +
           (C10339 + C10340 + C10341) * C93662 * C93587) *
              C1382 -
          ((C10301 * C11102 + C11924 + C11924 + C9603 * C11919 +
            C10300 * C1390 + C11925 + C11925 + C9602 * C1902 + C10299 * C1387 +
            C11926 + C11926 + C9601 * C1899) *
               C93662 * C93587 +
           (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
            C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
            C11929 + C11929 + C9601 * C1900) *
               C93662 * C4075) *
              C1383 +
          ((C10299 * C1389 + C11930 + C11930 + C9601 * C1901 + C10300 * C11103 +
            C11931 + C11931 + C9602 * C11920 + C10301 * C11104 + C11932 +
            C11932 + C9603 * C11921) *
               C93662 * C4075 +
           (C10299 * C1390 + C11933 + C11933 + C9601 * C1902 + C10300 * C11102 +
            C11934 + C11934 + C9602 * C11919 + C10301 * C11105 + C11935 +
            C11935 + C9603 * C11922) *
               C93662 * C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93673 * C4077 +
            (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
               C2695 -
           ((C4082 * C5817 + C5836 + C5836 + C93587 * C5829 + C4080 * C5818 +
             C5837 + C5837 + C4075 * C5830) *
                C93673 * C4079 +
            (C4082 * C3410 + C5838 + C5838 + C93587 * C3418 + C4080 * C3409 +
             C5839 + C5839 + C4075 * C3417) *
                C93673 * C4078 +
            (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
             C5841 + C5841 + C4075 * C1404) *
                C93673 * C4077) *
               C2696) *
              C93621 * C1981 +
          (((C4080 * C1387 + C7635 + C7635 + C4075 * C1403 + C4082 * C1386 +
             C7636 + C7636 + C93587 * C1402) *
                C93673 * C4077 +
            (C4080 * C3410 + C7637 + C7637 + C4075 * C3418 + C4082 * C3411 +
             C7638 + C7638 + C93587 * C3419) *
                C93673 * C4078 +
            (C4080 * C5817 + C7639 + C7639 + C4075 * C5829 + C4082 * C7631 +
             C7640 + C7640 + C93587 * C7633) *
                C93673 * C4079) *
               C2696 -
           ((C6640 + C6639) * C93673 * C4079 +
            (C6638 + C6637) * C93673 * C4078 +
            (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
             C4096 + C4096 + C4075 * C121) *
                C93673 * C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
            C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
            C130 + C130 + C92 * C123) *
               C93673 * C93662 * C2695 -
           (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
            C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
            C100 * C1388 + C1413 + C1413 + C89 * C1404) *
               C93673 * C93662 * C2696) *
              C93621 * C1981 +
          ((C100 * C1387 + C2701 + C2701 + C89 * C1403 + C102 * C1386 + C2702 +
            C2702 + C90 * C1402 + C104 * C1385 + C2703 + C2703 + C91 * C1401 +
            C106 * C2697 + C2704 + C2704 + C92 * C2699) *
               C93673 * C93662 * C2696 -
           (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 + C132 +
            C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 + C100 * C109 +
            C134 + C134 + C89 * C121) *
               C93673 * C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C9601 +
            (C11143 + C11144) * C9602 + C11149 * C9603) *
               C93662 * C2695 -
           ((C11147 + C11148) * C9603 + (C11146 + C11145) * C9602 +
            (C11144 + C11143) * C9601) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C13032 + C13033) * C9601 + (C13034 + C13035) * C9602 +
            (C4080 * C11102 + C13022 + C13022 + C4075 * C11110 +
             C4082 * C13010 + C13023 + C13023 + C93587 * C13012) *
                C9603) *
               C93662 * C2696 -
           ((C13035 + C13034) * C9603 + (C13033 + C13032) * C9602 +
            (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
             C4096 + C4096 + C4075 * C121) *
                C9601) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C2695 -
           ((C7753 + C7754 + C7755) * C93587 + (C7756 + C7757 + C7758) * C4083 +
            (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
             C4176 * C1396 + C4077 * C1478) *
                C4075 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C4081) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C7758 + C7757 + C7756) * C4081 + (C7755 + C7754 + C7753) * C4075 +
            (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C4083 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93587) *
               C93673 * C2696 -
           ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
            (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C2695 -
           (C2785 * C92 + C2786 * C107 + C2787 * C91 + C2788 * C105 +
            C2789 * C90 + C2790 * C103 + (C188 * C1396 + C93662 * C1478) * C89 +
            (C188 * C1388 + C93662 * C1470) * C101) *
               C93673 * C2696) *
              C93621 * C1981 +
          ((C2790 * C101 + C2789 * C89 + C2788 * C103 + C2787 * C90 +
            C2786 * C105 + C2785 * C91 +
            (C188 * C2697 + C93662 * C2770) * C107 +
            (C188 * C2698 + C93662 * C2771) * C92) *
               C93673 * C2696 -
           (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
            C220 * C103 + C219 * C89 + C218 * C101) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C4081 +
             (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
             C219 * C93587) *
                C9601 +
            (C11260 + C11261 + C11236 + C11237) * C9602 + C11270 * C9603) *
               C2695 -
           ((C11264 + C11265 + C11266 + C11267) * C9603 +
            (C11243 + C11242 + C11263 + C11262) * C9602 +
            (C11237 + C11236 + C11261 + C11260) * C9601) *
               C2696) *
              C93621 * C1981 +
          (((C13136 + C13137 + C13138 + C13139) * C9601 +
            (C13140 + C13141 + C13142 + C13143) * C9602 +
            (C11257 * C4081 + C11256 * C4075 +
             (C188 * C13010 + C93662 * C13133) * C4083 +
             (C188 * C13011 + C93662 * C13134) * C93587) *
                C9603) *
               C2696 -
           ((C13143 + C13142 + C13141 + C13140) * C9603 +
            (C13139 + C13138 + C13137 + C13136) * C9602 +
            (C221 * C93587 + C220 * C4083 + C219 * C4075 + C218 * C4081) *
                C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C2695 -
           ((C7867 * C93587 + C7868 * C4083 +
             (C275 * C5824 + C93673 * C6014) * C4075 +
             (C275 * C5818 + C93673 * C6008) * C4081) *
                C4079 +
            (C7869 * C93587 + C7870 * C4083 +
             (C275 * C3413 + C93673 * C3569) * C4075 +
             (C275 * C3409 + C93673 * C3565) * C4081) *
                C4078 +
            (C2875 * C93587 + C2876 * C4083 +
             (C275 * C1396 + C93673 * C1544) * C4075 +
             (C275 * C1388 + C93673 * C1536) * C4081) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C4081 + C2875 * C4075 + C2874 * C4083 + C2873 * C93587) *
                C4077 +
            (C7870 * C4081 + C7869 * C4075 +
             (C275 * C3411 + C93673 * C3567) * C4083 +
             (C275 * C3415 + C93673 * C3571) * C93587) *
                C4078 +
            (C7868 * C4081 + C7867 * C4075 +
             (C275 * C7631 + C93673 * C7856) * C4083 +
             (C275 * C7632 + C93673 * C7857) * C93587) *
                C4079) *
               C2696 -
           ((C6866 + C6865 + C6864 + C6863) * C4079 +
            (C6862 + C6861 + C6860 + C6859) * C4078 +
            (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C2695 -
           (C2871 * C92 + C2872 * C107 + C2873 * C91 + C2874 * C105 +
            C2875 * C90 + C2876 * C103 + (C275 * C1396 + C93673 * C1544) * C89 +
            (C275 * C1388 + C93673 * C1536) * C101) *
               C93662 * C2696) *
              C93621 * C1981 +
          ((C2876 * C101 + C2875 * C89 + C2874 * C103 + C2873 * C90 +
            C2872 * C105 + C2871 * C91 +
            (C275 * C2697 + C93673 * C2856) * C107 +
            (C275 * C2698 + C93673 * C2857) * C92) *
               C93662 * C2696 -
           (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
            C307 * C103 + C306 * C89 + C305 * C101) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C4081 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C4075 +
            (C9798 + C9799 + C9800) * C4083 +
            (C9801 + C9802 + C9803) * C93587) *
               C93662 * C2695 -
           ((C13256 + C13257 + C13258) * C93587 +
            (C13259 + C13260 + C13261) * C4083 +
            (C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
             C9770 * C1396 + C9601 * C1544) *
                C4075 +
            (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
             C9770 * C1388 + C9601 * C1536) *
                C4081) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C13261 + C13260 + C13259) * C4081 +
            (C13258 + C13257 + C13256) * C4075 +
            (C9770 * C1386 + C9601 * C1534 + C9771 * C1391 + C9602 * C1539 +
             C9772 * C13010 + C9603 * C13241) *
                C4083 +
            (C9770 * C1394 + C9601 * C1542 + C9771 * C1399 + C9602 * C1547 +
             C9772 * C13011 + C9603 * C13242) *
                C93587) *
               C93662 * C2696 -
           ((C9804 + C9805 + C9806) * C93587 + (C9807 + C9808 + C9809) * C4083 +
            (C9803 + C9802 + C9801) * C4075 + (C9800 + C9799 + C9798) * C4081) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C2695 -
           ((C4083 * C5921 + C93587 * C6093 + C4081 * C5922 + C4075 * C6094) *
                C4079 +
            (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                C4178 +
            (C4083 * C3492 + C93587 * C3640 + C4081 * C3491 + C4075 * C3639) *
                C4078 +
            (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                C4177 +
            (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
                C4077 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C4176) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C4081 * C1387 + C4075 * C1395 + C4083 * C1386 + C93587 * C1394) *
                C4176 +
            (C4081 * C1469 + C4075 * C1601 + C4083 * C1468 + C93587 * C1600) *
                C4077 +
            (C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                C4177 +
            (C4081 * C3492 + C4075 * C3640 + C4083 * C3493 + C93587 * C3641) *
                C4078 +
            (C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                C4178 +
            (C4081 * C5921 + C4075 * C6093 + C4083 * C7738 + C93587 * C7968) *
                C4079) *
               C93673 * C2696 -
           ((C6989 + C6988) * C4079 + (C6987 + C6986) * C4178 +
            (C6985 + C6984) * C4078 + (C6983 + C6982) * C4177 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C4077 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C4176) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C2695 -
           ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
             C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
                C93662 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C188) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C101 * C1387 + C89 * C1395 + C103 * C1386 + C90 * C1394 +
             C105 * C1385 + C91 * C1393 + C107 * C2697 + C92 * C2698) *
                C188 +
            (C101 * C1469 + C89 * C1601 + C103 * C1468 + C90 * C1600 +
             C105 * C1467 + C91 * C1599 + C107 * C2770 + C92 * C2942) *
                C93662) *
               C93673 * C2696 -
           ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
             C90 * C364 + C101 * C190 + C89 * C363) *
                C93662 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C188) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C188 +
             (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                 C93662) *
                C9601 +
            ((C11455 + C11456) * C188 + (C11457 + C11458) * C93662) * C9602 +
            C11471 * C9603) *
               C2695 -
           (((C11463 + C11464) * C93662 + (C11465 + C11466) * C188) * C9603 +
            ((C11462 + C11461) * C93662 + (C11460 + C11459) * C188) * C9602 +
            ((C11458 + C11457) * C93662 + (C11456 + C11455) * C188) * C9601) *
               C2696) *
              C93621 * C1981 +
          ((((C13377 + C13378) * C188 + (C13379 + C13380) * C93662) * C9601 +
            ((C13381 + C13382) * C188 + (C13383 + C13384) * C93662) * C9602 +
            ((C4081 * C11102 + C4075 * C11106 + C4083 * C13010 +
              C93587 * C13011) *
                 C188 +
             (C4081 * C11223 + C4075 * C11426 + C4083 * C13133 +
              C93587 * C13359) *
                 C93662) *
                C9603) *
               C2696 -
           (((C13384 + C13383) * C93662 + (C13382 + C13381) * C188) * C9603 +
            ((C13380 + C13379) * C93662 + (C13378 + C13377) * C188) * C9602 +
            ((C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                 C93662 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C188) *
                C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C4075 +
            (C4489 + C4490 + C4491) * C93587) *
               C93673 * C2695 -
           ((C8084 + C8085 + C8086) * C93587 +
            (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 + C4450 * C3409 +
             C6184 + C6184 + C4078 * C3709 + C4449 * C1388 + C6185 + C6185 +
             C4077 * C1660) *
                C4075) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C8086 + C8085 + C8084) * C4075 +
            (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 + C4450 * C3411 +
             C8076 + C8076 + C4078 * C3711 + C4451 * C7631 + C8077 + C8077 +
             C4079 * C8067) *
                C93587) *
               C93673 * C2696 -
           ((C4492 + C4493 + C4494) * C93587 +
            (C4491 + C4490 + C4489) * C4075) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
            C449 * C91 + C450 * C92) *
               C93673 * C2695 -
           (C3024 * C92 + C3025 * C91 + C3026 * C90 +
            (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
               C93673 * C2696) *
              C93621 * C1981 +
          ((C3026 * C89 + C3025 * C90 + C3024 * C91 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C92) *
               C93673 * C2696 -
           (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
             C448 * C93587) *
                C9601 +
            (C11576 + C11552) * C9602 + C11580 * C9603) *
               C2695 -
           ((C11578 + C11579) * C9603 + (C11555 + C11577) * C9602 +
            (C11552 + C11576) * C9601) *
               C2696) *
              C93621 * C1981 +
          (((C13484 + C13485) * C9601 + (C13486 + C13487) * C9602 +
            (C11574 * C4075 +
             (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C93587) *
                C9603) *
               C2696 -
           ((C13487 + C13486) * C9603 + (C13485 + C13484) * C9602 +
            (C449 * C93587 + C448 * C4075) * C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C2695 -
           ((C8196 + C8188 + C8197 + C8191 + C8192 + C8193) * C93587 +
            ((C275 * C5922 + C93673 * C6266) * C4079 +
             (C275 * C5818 + C93673 * C6008) * C4178 +
             (C275 * C3491 + C93673 * C3783) * C4078 +
             (C275 * C3409 + C93673 * C3565) * C4177 +
             (C275 * C1470 + C93673 * C1726) * C4077 +
             (C275 * C1388 + C93673 * C1536) * C4176) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C8193 + C8192 + C8191 + C8197 + C8188 + C8196) * C4075 +
            (C2874 * C4176 + C3104 * C4077 +
             (C275 * C3411 + C93673 * C3567) * C4177 +
             (C275 * C3493 + C93673 * C3785) * C4078 +
             (C275 * C7631 + C93673 * C7856) * C4178 +
             (C275 * C7738 + C93673 * C8184) * C4079) *
                C93587) *
               C2696 -
           ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
            (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C2695 -
           ((C3106 + C3096) * C92 + (C3107 + C3099) * C91 +
            (C3108 + C3102) * C90 +
            ((C275 * C1470 + C93673 * C1726) * C93662 +
             (C275 * C1388 + C93673 * C1536) * C188) *
                C89) *
               C2696) *
              C93621 * C1981 +
          (((C3102 + C3108) * C89 + (C3099 + C3107) * C90 +
            (C3096 + C3106) * C91 +
            ((C275 * C2697 + C93673 * C2856) * C188 +
             (C275 * C2770 + C93673 * C3092) * C93662) *
                C92) *
               C2696 -
           ((C527 + C519) * C92 + (C526 + C514) * C91 + (C525 + C511) * C90 +
            (C524 + C508) * C89) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C188 +
             (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
              C9772 * C1471 + C9603 * C1727) *
                 C93662) *
                C4075 +
            ((C9798 + C9799 + C9800) * C188 +
             (C10054 + C10055 + C10056) * C93662) *
                C93587) *
               C2695 -
           (((C13594 + C13595 + C13596) * C93662 +
             (C13259 + C13260 + C13261) * C188) *
                C93587 +
            ((C9772 * C11224 + C9603 * C11655 + C9771 * C1471 + C9602 * C1727 +
              C9770 * C1470 + C9601 * C1726) *
                 C93662 +
             (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
              C9770 * C1388 + C9601 * C1536) *
                 C188) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          ((((C13261 + C13260 + C13259) * C188 +
             (C13596 + C13595 + C13594) * C93662) *
                C4075 +
            ((C9770 * C1386 + C9601 * C1534 + C9771 * C1391 + C9602 * C1539 +
              C9772 * C13010 + C9603 * C13241) *
                 C188 +
             (C9770 * C1468 + C9601 * C1724 + C9771 * C1473 + C9602 * C1729 +
              C9772 * C13133 + C9603 * C13586) *
                 C93662) *
                C93587) *
               C2696 -
           (((C10057 + C10058 + C10059) * C93662 +
             (C9807 + C9808 + C9809) * C188) *
                C93587 +
            ((C10056 + C10055 + C10054) * C93662 +
             (C9800 + C9799 + C9798) * C188) *
                C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C2695 -
           (((C4083 * C6007 + C93587 * C6345 + C4081 * C6008 + C4075 * C6346) *
                 C93673 +
             (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                 C275) *
                C4079 +
            ((C4083 * C3566 + C93587 * C3854 + C4081 * C3565 + C4075 * C3853) *
                 C93673 +
             (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                 C275) *
                C4078 +
            ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                 C93673 +
             (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                 C275) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          ((((C4081 * C1387 + C4075 * C1395 + C4083 * C1386 + C93587 * C1394) *
                 C275 +
             (C4081 * C1535 + C4075 * C1783 + C4083 * C1534 + C93587 * C1782) *
                 C93673) *
                C4077 +
            ((C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                 C275 +
             (C4081 * C3566 + C4075 * C3854 + C4083 * C3567 + C93587 * C3855) *
                 C93673) *
                C4078 +
            ((C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                 C275 +
             (C4081 * C6007 + C4075 * C6345 + C4083 * C7856 + C93587 * C8295) *
                 C93673) *
                C4079) *
               C2696 -
           (((C7322 + C7321) * C93673 + (C6987 + C6986) * C275) * C4079 +
            ((C7320 + C7319) * C93673 + (C6983 + C6982) * C275) * C4078 +
            ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93673 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C275) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C2695 -
           ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
             C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
                C93673 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C275) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C101 * C1387 + C89 * C1395 + C103 * C1386 + C90 * C1394 +
             C105 * C1385 + C91 * C1393 + C107 * C2697 + C92 * C2698) *
                C275 +
            (C101 * C1535 + C89 * C1783 + C103 * C1534 + C90 * C1782 +
             C105 * C1533 + C91 * C1781 + C107 * C2856 + C92 * C3174) *
                C93673) *
               C93662 * C2696 -
           ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
             C90 * C581 + C101 * C277 + C89 * C580) *
                C93673 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C275) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C9770 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C9601 +
            (C11455 + C11456) * C9771 + (C11749 + C11750) * C9602 +
            C11467 * C9772 + C11755 * C9603) *
               C93662 * C2695 -
           ((C11753 + C11754) * C9603 + (C11465 + C11466) * C9772 +
            (C11752 + C11751) * C9602 + (C11460 + C11459) * C9771 +
            (C11750 + C11749) * C9601 + (C11456 + C11455) * C9770) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C13377 + C13378) * C9770 + (C13704 + C13705) * C9601 +
            (C13381 + C13382) * C9771 + (C13706 + C13707) * C9602 +
            (C4081 * C11102 + C4075 * C11106 + C4083 * C13010 +
             C93587 * C13011) *
                C9772 +
            (C4081 * C11344 + C4075 * C11732 + C4083 * C13241 +
             C93587 * C13694) *
                C9603) *
               C93662 * C2696 -
           ((C13707 + C13706) * C9603 + (C13382 + C13381) * C9772 +
            (C13705 + C13704) * C9602 + (C13378 + C13377) * C9771 +
            (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C9601 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C9770) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C275 +
             (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
              C4178 * C956 + C4079 * C1262) *
                 C93673) *
                C4075 +
            ((C4204 + C4205 + C4206) * C275 +
             (C4747 + C4748 + C4749) * C93673) *
                C93587) *
               C2695 -
           (((C8402 + C8403 + C8404) * C93673 +
             (C7756 + C7757 + C7758) * C275) *
                C93587 +
            ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 + C4078 * C3923 +
              C4176 * C1536 + C4077 * C1842) *
                 C93673 +
             (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
              C4176 * C1388 + C4077 * C1470) *
                 C275) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          ((((C7758 + C7757 + C7756) * C275 +
             (C8404 + C8403 + C8402) * C93673) *
                C4075 +
            ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
              C4178 * C7631 + C4079 * C7738) *
                 C275 +
             (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 + C4078 * C3925 +
              C4178 * C7856 + C4079 * C8394) *
                 C93673) *
                C93587) *
               C2696 -
           (((C4750 + C4751 + C4752) * C93673 +
             (C4213 + C4214 + C4215) * C275) *
                C93587 +
            ((C4749 + C4748 + C4747) * C93673 +
             (C4206 + C4205 + C4204) * C275) *
                C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C275 +
             (C188 * C276 + C93662 * C635) * C93673) *
                C89 +
            (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
               C2695 -
           ((C3255 + C3245) * C92 + (C3256 + C3248) * C91 +
            (C3257 + C3251) * C90 +
            ((C188 * C1536 + C93662 * C1842) * C93673 +
             (C188 * C1388 + C93662 * C1470) * C275) *
                C89) *
               C2696) *
              C93621 * C1981 +
          (((C3251 + C3257) * C89 + (C3248 + C3256) * C90 +
            (C3245 + C3255) * C91 +
            ((C188 * C2697 + C93662 * C2770) * C275 +
             (C188 * C2856 + C93662 * C3241) * C93673) *
                C92) *
               C2696 -
           ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
            (C658 + C642) * C89) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C9770 +
             (C188 * C276 + C93662 * C635) * C9601 + C11252 * C9771 +
             C11842 * C9602 + C11254 * C9772 + C11843 * C9603) *
                C4075 +
            (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
               C2695 -
           ((C13807 + C13808 + C13809 + C13810 + C13811 + C13812) * C93587 +
            (C11845 * C9603 + C11259 * C9772 + C11843 * C9602 + C11254 * C9771 +
             C11842 * C9601 + C11252 * C9770) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C13812 + C13811 + C13810 + C13809 + C13808 + C13807) * C4075 +
            (C2788 * C9770 + C3253 * C9601 + C9696 * C9771 + C10223 * C9602 +
             (C188 * C13010 + C93662 * C13133) * C9772 +
             (C188 * C13241 + C93662 * C13805) * C9603) *
                C93587) *
               C2696 -
           ((C10225 + C10217 + C10218 + C10219 + C10220 + C10221) * C93587 +
            (C10224 + C10212 + C10211 + C10210 + C10209 + C10208) * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C2695 -
           ((C8516 + C8517 + C8508) * C93587 +
            ((C713 * C5818 + C6513 + C6513 + C93673 * C6506) * C4079 +
             (C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C4078 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C8508 + C8517 + C8516) * C4075 +
            (C3339 * C4077 +
             (C713 * C3411 + C4000 + C4000 + C93673 * C3995) * C4078 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C4079) *
                C93587) *
               C2696 -
           ((C4842 + C4833 + C4834) * C93587 +
            (C4841 + C4828 + C4827) * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C2695 -
           (C3341 * C92 + C3342 * C91 + C3343 * C90 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
               C2696) *
              C93621 * C1981 +
          ((C3343 * C89 + C3342 * C90 + C3341 * C91 +
            (C713 * C2697 + C3331 + C3331 + C93673 * C3323) * C93662 * C92) *
               C2696 -
           (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C93662 * C4075 +
            (C10339 + C10340 + C10341) * C93662 * C93587) *
               C2695 -
           ((C13927 + C13928 + C13929) * C93662 * C93587 +
            (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
             C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
             C11929 + C11929 + C9601 * C1900) *
                C93662 * C4075) *
               C2696) *
              C93621 * C1981 +
          (((C13929 + C13928 + C13927) * C93662 * C4075 +
            (C10299 * C1386 + C13918 + C13918 + C9601 * C1898 + C10300 * C1391 +
             C13919 + C13919 + C9602 * C1903 + C10301 * C13010 + C13920 +
             C13920 + C9603 * C13910) *
                C93662 * C93587) *
               C2696 -
           ((C10342 + C10343 + C10344) * C93662 * C93587 +
            (C10341 + C10340 + C10339) * C93662 * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C800 -
          (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 + C830 +
           C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 + C100 * C807 +
           C832 + C832 + C89 * C823) *
              C93673 * C93662 * C93635 * C801 +
          (C100 * C808 + C833 + C833 + C89 * C824 + C102 * C809 + C834 + C834 +
           C90 * C825 + C104 * C810 + C835 + C835 + C91 * C826 + C106 * C811 +
           C836 + C836 + C92 * C827) *
              C93673 * C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C93621 * C97 -
          (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 + C132 +
           C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 + C100 * C109 +
           C134 + C134 + C89 * C121) *
              C93673 * C93662 * C93635 * C93621 * C98 +
          (C100 * C110 + C135 + C135 + C89 * C122 + C102 * C111 + C136 + C136 +
           C90 * C123 + C104 * C112 + C137 + C137 + C91 * C124 + C106 * C113 +
           C138 + C138 + C92 * C125) *
              C93673 * C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4080 * C807 + C4087 + C4087 + C4075 * C823 + C4082 * C806 + C4088 +
            C4088 + C93587 * C822) *
               C93673 * C4078 +
           (C4080 * C808 + C4089 + C4089 + C4075 * C824 + C4082 * C809 + C4090 +
            C4090 + C93587 * C825) *
               C93673 * C4079) *
              C93635 * C93621 * C97 -
          ((C4082 * C810 + C4091 + C4091 + C93587 * C826 + C4080 * C809 +
            C4092 + C4092 + C4075 * C825) *
               C93673 * C4079 +
           (C4082 * C805 + C4093 + C4093 + C93587 * C821 + C4080 * C806 +
            C4094 + C4094 + C4075 * C822) *
               C93673 * C4078 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C93673 * C4077) *
              C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C93673 * C4077 +
           (C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 + C4100 +
            C4100 + C93587 * C820) *
               C93673 * C4078 +
           (C4080 * C810 + C4101 + C4101 + C4075 * C826 + C4082 * C811 + C4102 +
            C4102 + C93587 * C827) *
               C93673 * C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C93635 * C800 -
          ((C4961 + C4962) * C93673 * C4079 + (C4960 + C4959) * C93673 * C4078 +
           (C4958 + C4957) * C93673 * C4077) *
              C93635 * C801 +
          (C4964 * C4077 + (C4962 + C4961) * C93673 * C4078 +
           (C4080 * C4918 + C4943 + C4943 + C4075 * C4926 + C4082 * C4919 +
            C4944 + C4944 + C93587 * C4927) *
               C93673 * C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C9601 +
           (C4080 * C1388 + C5841 + C5841 + C4075 * C1404 + C4082 * C1387 +
            C5840 + C5840 + C93587 * C1403) *
               C9602 +
           (C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C9603) *
              C93662 * C93635 * C93621 * C97 -
          ((C4082 * C1391 + C9605 + C9605 + C93587 * C1407 + C4080 * C1390 +
            C9606 + C9606 + C4075 * C1406) *
               C9603 +
           (C4082 * C1386 + C7636 + C7636 + C93587 * C1402 + C4080 * C1387 +
            C7635 + C7635 + C4075 * C1403) *
               C9602 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C9601) *
              C93662 * C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C9601 +
           (C4080 * C1386 + C9607 + C9607 + C4075 * C1402 + C4082 * C1385 +
            C9608 + C9608 + C93587 * C1401) *
               C9602 +
           (C4080 * C1391 + C9609 + C9609 + C4075 * C1407 + C4082 * C1392 +
            C9610 + C9610 + C93587 * C1408) *
               C9603) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C9601 +
           (C4080 * C1388 + C5841 + C5841 + C4075 * C1404 + C4082 * C1387 +
            C5840 + C5840 + C93587 * C1403) *
               C9602 +
           (C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C9603) *
              C93662 * C93635 * C800 -
          ((C4082 * C5820 + C5845 + C5845 + C93587 * C5832 + C4080 * C5819 +
            C5844 + C5844 + C4075 * C5831) *
               C9603 +
           (C8642 + C8643) * C9602 + (C4958 + C4957) * C9601) *
              C93662 * C93635 * C801 +
          (C4963 * C9601 + (C8641 + C8640) * C9602 +
           (C4080 * C5821 + C5846 + C5846 + C4075 * C5833 + C4082 * C5822 +
            C5847 + C5847 + C93587 * C5834) *
               C9603) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C800 -
          ((C188 * C812 + C93662 * C894) * C92 +
           (C188 * C804 + C93662 * C886) * C107 +
           (C188 * C813 + C93662 * C895) * C91 +
           (C188 * C805 + C93662 * C887) * C105 +
           (C188 * C814 + C93662 * C896) * C90 +
           (C188 * C806 + C93662 * C888) * C103 +
           (C188 * C815 + C93662 * C897) * C89 +
           (C188 * C807 + C93662 * C889) * C101) *
              C93673 * C93635 * C801 +
          ((C188 * C808 + C93662 * C890) * C101 +
           (C188 * C816 + C93662 * C898) * C89 +
           (C188 * C809 + C93662 * C891) * C103 +
           (C188 * C817 + C93662 * C899) * C90 +
           (C188 * C810 + C93662 * C892) * C105 +
           (C188 * C818 + C93662 * C900) * C91 +
           (C188 * C811 + C93662 * C893) * C107 +
           (C188 * C819 + C93662 * C901) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
           C220 * C103 + C219 * C89 + C218 * C101) *
              C93673 * C93635 * C93621 * C98 +
          (C220 * C101 + C221 * C89 + C222 * C103 + C223 * C90 + C225 * C105 +
           C224 * C91 + (C188 * C113 + C93662 * C194) * C107 +
           (C188 * C119 + C93662 * C200) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
           (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
              C93673 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C4081 + (C4212 + C4211 + C4210) * C4075 +
           (C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
            C4178 * C811 + C4079 * C893) *
               C4083 +
           (C4176 * C117 + C4077 * C198 + C4177 * C812 + C4078 * C894 +
            C4178 * C819 + C4079 * C901) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C800 -
          ((C4178 * C4920 + C4079 * C5042 + C4177 * C817 + C4078 * C899 +
            C4176 * C814 + C4077 * C896) *
               C93587 +
           (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
            C4176 * C806 + C4077 * C888) *
               C4083 +
           (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
            C4176 * C815 + C4077 * C897) *
               C4075 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C4081) *
              C93673 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C4081 +
           (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
            C4178 * C4922 + C4079 * C5044) *
               C4075 +
           (C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
            C4178 * C4919 + C4079 * C5041) *
               C4083 +
           (C4176 * C817 + C4077 * C899 + C4177 * C4920 + C4078 * C5042 +
            C4178 * C4923 + C4079 * C5045) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C4081 +
            (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
            C219 * C93587) *
               C9601 +
           ((C188 * C1388 + C93662 * C1470) * C4081 +
            (C188 * C1396 + C93662 * C1478) * C4075 + C2790 * C4083 +
            C2789 * C93587) *
               C9602 +
           ((C188 * C1389 + C93662 * C1471) * C4081 +
            (C188 * C1397 + C93662 * C1479) * C4075 + C9693 * C4083 +
            C9694 * C93587) *
               C9603) *
              C93635 * C93621 * C97 -
          ((C9695 * C93587 + C9696 * C4083 + C9694 * C4075 + C9693 * C4081) *
               C9603 +
           (C2787 * C93587 + C2788 * C4083 + C2789 * C4075 + C2790 * C4081) *
               C9602 +
           (C221 * C93587 + C220 * C4083 + C219 * C4075 + C218 * C4081) *
               C9601) *
              C93635 * C93621 * C98 +
          ((C220 * C4081 + C221 * C4075 + C222 * C4083 + C223 * C93587) *
               C9601 +
           (C2788 * C4081 + C2787 * C4075 + C2786 * C4083 + C2785 * C93587) *
               C9602 +
           (C9696 * C4081 + C9695 * C4075 +
            (C188 * C1392 + C93662 * C1474) * C4083 +
            (C188 * C1400 + C93662 * C1482) * C93587) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C4081 +
            (C188 * C114 + C93662 * C195) * C4075 + C218 * C4083 +
            C219 * C93587) *
               C9601 +
           ((C188 * C1388 + C93662 * C1470) * C4081 +
            (C188 * C1396 + C93662 * C1478) * C4075 + C2790 * C4083 +
            C2789 * C93587) *
               C9602 +
           ((C188 * C1389 + C93662 * C1471) * C4081 +
            (C188 * C1397 + C93662 * C1479) * C4075 + C9693 * C4083 +
            C9694 * C93587) *
               C9603) *
              C93635 * C800 -
          (((C188 * C5826 + C93662 * C5931) * C93587 +
            (C188 * C5820 + C93662 * C5925) * C4083 +
            (C188 * C5825 + C93662 * C5929) * C4075 +
            (C188 * C5819 + C93662 * C5923) * C4081) *
               C9603 +
           ((C188 * C3414 + C93662 * C3496) * C93587 +
            (C188 * C3410 + C93662 * C3492) * C4083 +
            (C188 * C3413 + C93662 * C3495) * C4075 +
            (C188 * C3409 + C93662 * C3491) * C4081) *
               C9602 +
           (C2075 * C93587 + C2076 * C4083 +
            (C188 * C815 + C93662 * C897) * C4075 +
            (C188 * C807 + C93662 * C889) * C4081) *
               C9601) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C4081 +
            (C188 * C816 + C93662 * C898) * C4075 +
            (C188 * C809 + C93662 * C891) * C4083 +
            (C188 * C817 + C93662 * C899) * C93587) *
               C9601 +
           ((C188 * C5818 + C93662 * C5922) * C4081 +
            (C188 * C5824 + C93662 * C5928) * C4075 +
            (C188 * C5817 + C93662 * C5921) * C4083 +
            (C188 * C5823 + C93662 * C5927) * C93587) *
               C9602 +
           ((C188 * C5821 + C93662 * C5924) * C4081 +
            (C188 * C5827 + C93662 * C5930) * C4075 +
            (C188 * C5822 + C93662 * C5926) * C4083 +
            (C188 * C5828 + C93662 * C5932) * C93587) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C800 -
          ((C275 * C812 + C93673 * C960) * C92 +
           (C275 * C804 + C93673 * C952) * C107 +
           (C275 * C813 + C93673 * C961) * C91 +
           (C275 * C805 + C93673 * C953) * C105 +
           (C275 * C814 + C93673 * C962) * C90 +
           (C275 * C806 + C93673 * C954) * C103 +
           (C275 * C815 + C93673 * C963) * C89 +
           (C275 * C807 + C93673 * C955) * C101) *
              C93662 * C93635 * C801 +
          ((C275 * C808 + C93673 * C956) * C101 +
           (C275 * C816 + C93673 * C964) * C89 +
           (C275 * C809 + C93673 * C957) * C103 +
           (C275 * C817 + C93673 * C965) * C90 +
           (C275 * C810 + C93673 * C958) * C105 +
           (C275 * C818 + C93673 * C966) * C91 +
           (C275 * C811 + C93673 * C959) * C107 +
           (C275 * C819 + C93673 * C967) * C92) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C93621 * C97 -
          (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
           C307 * C103 + C306 * C89 + C305 * C101) *
              C93662 * C93635 * C93621 * C98 +
          (C307 * C101 + C308 * C89 + C309 * C103 + C310 * C90 + C312 * C105 +
           C311 * C91 + (C275 * C113 + C93673 * C281) * C107 +
           (C275 * C119 + C93673 * C287) * C92) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           ((C275 * C807 + C93673 * C955) * C4081 +
            (C275 * C815 + C93673 * C963) * C4075 + C2162 * C4083 +
            C2161 * C93587) *
               C4078 +
           ((C275 * C808 + C93673 * C956) * C4081 +
            (C275 * C816 + C93673 * C964) * C4075 + C4298 * C4083 +
            C4299 * C93587) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C4083 + C4299 * C4075 + C4298 * C4081) *
               C4079 +
           (C2159 * C93587 + C2160 * C4083 + C2161 * C4075 + C2162 * C4081) *
               C4078 +
           (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
               C4077) *
              C93635 * C93621 * C98 +
          ((C307 * C4081 + C308 * C4075 + C309 * C4083 + C310 * C93587) *
               C4077 +
           (C2160 * C4081 + C2159 * C4075 + C2158 * C4083 + C2157 * C93587) *
               C4078 +
           (C4301 * C4081 + C4300 * C4075 +
            (C275 * C811 + C93673 * C959) * C4083 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C93635 * C800 -
          ((C5161 + C5162 + C5163 + C5164) * C4079 +
           (C5140 + C5139 + C5160 + C5159) * C4078 +
           (C5134 + C5133 + C5158 + C5157) * C4077) *
              C93635 * C801 +
          (C5167 * C4077 + (C5164 + C5163 + C5162 + C5161) * C4078 +
           ((C275 * C4918 + C93673 * C5122) * C4081 +
            (C275 * C4922 + C93673 * C5126) * C4075 +
            (C275 * C4919 + C93673 * C5123) * C4083 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C4081 +
           (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
            C9772 * C1397 + C9603 * C1545) *
               C4075 +
           (C9798 + C9799 + C9800) * C4083 + (C9801 + C9802 + C9803) * C93587) *
              C93662 * C93635 * C93621 * C97 -
          ((C9804 + C9805 + C9806) * C93587 + (C9807 + C9808 + C9809) * C4083 +
           (C9803 + C9802 + C9801) * C4075 + (C9800 + C9799 + C9798) * C4081) *
              C93662 * C93635 * C93621 * C98 +
          ((C9809 + C9808 + C9807) * C4081 + (C9806 + C9805 + C9804) * C4075 +
           (C9770 * C111 + C9601 * C279 + C9771 * C1385 + C9602 * C1533 +
            C9772 * C1392 + C9603 * C1540) *
               C4083 +
           (C9770 * C117 + C9601 * C285 + C9771 * C1393 + C9602 * C1541 +
            C9772 * C1400 + C9603 * C1548) *
               C93587) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C4081 +
           (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
            C9772 * C1397 + C9603 * C1545) *
               C4075 +
           (C9798 + C9799 + C9800) * C4083 + (C9801 + C9802 + C9803) * C93587) *
              C93662 * C93635 * C800 -
          ((C9772 * C5826 + C9603 * C6016 + C9771 * C3414 + C9602 * C3570 +
            C9770 * C814 + C9601 * C962) *
               C93587 +
           (C9772 * C5820 + C9603 * C6010 + C9771 * C3410 + C9602 * C3566 +
            C9770 * C806 + C9601 * C954) *
               C4083 +
           (C9772 * C5825 + C9603 * C6015 + C9771 * C3413 + C9602 * C3569 +
            C9770 * C815 + C9601 * C963) *
               C4075 +
           (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 + C9602 * C3565 +
            C9770 * C807 + C9601 * C955) *
               C4081) *
              C93662 * C93635 * C801 +
          ((C9770 * C808 + C9601 * C956 + C9771 * C5818 + C9602 * C6008 +
            C9772 * C5821 + C9603 * C6011) *
               C4081 +
           (C9770 * C816 + C9601 * C964 + C9771 * C5824 + C9602 * C6014 +
            C9772 * C5827 + C9603 * C6017) *
               C4075 +
           (C9770 * C809 + C9601 * C957 + C9771 * C5817 + C9602 * C6007 +
            C9772 * C5822 + C9603 * C6012) *
               C4083 +
           (C9770 * C817 + C9601 * C965 + C9771 * C5823 + C9602 * C6013 +
            C9772 * C5828 + C9603 * C6018) *
               C93587) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C800 -
          ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
            C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
               C93662 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C188) *
              C93673 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C188 +
           (C101 * C890 + C89 * C1022 + C103 * C891 + C90 * C1023 +
            C105 * C892 + C91 * C1024 + C107 * C893 + C92 * C1025) *
               C93662) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C93621 * C97 -
          ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
            C90 * C364 + C101 * C190 + C89 * C363) *
               C93662 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C188) *
              C93673 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C188 +
           (C101 * C191 + C89 * C364 + C103 * C192 + C90 * C365 + C105 * C193 +
            C91 * C366 + C107 * C194 + C92 * C367) *
               C93662) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
               C4177 +
           (C4081 * C889 + C4075 * C1021 + C4083 * C888 + C93587 * C1020) *
               C4078 +
           (C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
               C4178 +
           (C4081 * C890 + C4075 * C1022 + C4083 * C891 + C93587 * C1023) *
               C4079) *
              C93673 * C93635 * C93621 * C97 -
          ((C4083 * C892 + C93587 * C1024 + C4081 * C891 + C4075 * C1023) *
               C4079 +
           (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
               C4178 +
           (C4083 * C887 + C93587 * C1019 + C4081 * C888 + C4075 * C1020) *
               C4078 +
           (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
               C4177 +
           (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
               C4077 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C4176) *
              C93673 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C4176 +
           (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
               C4077 +
           (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
               C4177 +
           (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
               C4078 +
           (C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
               C4178 +
           (C4081 * C892 + C4075 * C1024 + C4083 * C893 + C93587 * C1025) *
               C4079) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C93635 * C800 -
          ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
           (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
           (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
              C93673 * C93635 * C801 +
          (C5282 * C4176 + C5283 * C4077 + (C5281 + C5280) * C4177 +
           (C5279 + C5278) * C4078 +
           (C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
               C4178 +
           (C4081 * C5040 + C4075 * C5243 + C4083 * C5041 + C93587 * C5244) *
               C4079) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C188 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93662) *
               C9601 +
           ((C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
                C188 +
            (C4081 * C1470 + C4075 * C1602 + C4083 * C1469 + C93587 * C1601) *
                C93662) *
               C9602 +
           ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C188 +
            (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
                C93662) *
               C9603) *
              C93635 * C93621 * C97 -
          (((C4083 * C1473 + C93587 * C1605 + C4081 * C1472 + C4075 * C1604) *
                C93662 +
            (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
                C188) *
               C9603 +
           ((C4083 * C1468 + C93587 * C1600 + C4081 * C1469 + C4075 * C1601) *
                C93662 +
            (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
                C188) *
               C9602 +
           ((C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C93662 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C188) *
               C9601) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C188 +
            (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
                C93662) *
               C9601 +
           ((C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
                C188 +
            (C4081 * C1468 + C4075 * C1600 + C4083 * C1467 + C93587 * C1599) *
                C93662) *
               C9602 +
           ((C4081 * C1391 + C4075 * C1399 + C4083 * C1392 + C93587 * C1400) *
                C188 +
            (C4081 * C1473 + C4075 * C1605 + C4083 * C1474 + C93587 * C1606) *
                C93662) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C188 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C93662) *
               C9601 +
           ((C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
                C188 +
            (C4081 * C1470 + C4075 * C1602 + C4083 * C1469 + C93587 * C1601) *
                C93662) *
               C9602 +
           ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C188 +
            (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
                C93662) *
               C9603) *
              C93635 * C800 -
          (((C4083 * C5925 + C93587 * C6096 + C4081 * C5923 + C4075 * C6095) *
                C93662 +
            (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
                C188) *
               C9603 +
           ((C8988 + C8989) * C93662 + (C8990 + C8991) * C188) * C9602 +
           ((C5273 + C5272) * C93662 + (C5271 + C5270) * C188) * C9601) *
              C93635 * C801 +
          ((C5282 * C188 + C5283 * C93662) * C9601 +
           ((C8987 + C8986) * C188 + (C8985 + C8984) * C93662) * C9602 +
           ((C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                C188 +
            (C4081 * C5924 + C4075 * C6097 + C4083 * C5926 + C93587 * C6098) *
                C93662) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C800 -
          ((C418 * C804 + C1085 + C1085 + C93662 * C1076) * C92 +
           (C418 * C805 + C1086 + C1086 + C93662 * C1077) * C91 +
           (C418 * C806 + C1087 + C1087 + C93662 * C1078) * C90 +
           (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
              C93673 * C93635 * C801 +
          ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C89 +
           (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C90 +
           (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C91 +
           (C418 * C811 + C1092 + C1092 + C93662 * C1083) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
              C93635 * C93621 * C98 +
          (C449 * C89 + C450 * C90 + C451 * C91 +
           (C418 * C113 + C439 + C439 + C93662 * C424) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4492 + C4493 + C4494) * C93587 + (C4491 + C4490 + C4489) * C4075) *
              C93673 * C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C4075 +
           (C4449 * C111 + C4474 + C4474 + C4077 * C422 + C4450 * C804 + C4475 +
            C4475 + C4078 * C1076 + C4451 * C811 + C4476 + C4476 +
            C4079 * C1083) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C800 -
          ((C4451 * C4916 + C5362 + C5362 + C4079 * C5357 + C4450 * C809 +
            C5363 + C5363 + C4078 * C1081 + C4449 * C806 + C5364 + C5364 +
            C4077 * C1078) *
               C93587 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C4075) *
              C93673 * C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C4075 +
           (C4449 * C809 + C5371 + C5371 + C4077 * C1081 + C4450 * C4916 +
            C5372 + C5372 + C4078 * C5357 + C4451 * C4919 + C5373 + C5373 +
            C4079 * C5360) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
            C448 * C93587) *
               C9601 +
           ((C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C4075 +
            C3026 * C93587) *
               C9602 +
           ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C4075 +
            C9966 * C93587) *
               C9603) *
              C93635 * C93621 * C97 -
          ((C9967 * C93587 + C9966 * C4075) * C9603 +
           (C3025 * C93587 + C3026 * C4075) * C9602 +
           (C449 * C93587 + C448 * C4075) * C9601) *
              C93635 * C93621 * C98 +
          ((C449 * C4075 + C450 * C93587) * C9601 +
           (C3025 * C4075 + C3024 * C93587) * C9602 +
           (C9967 * C4075 +
            (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C93587) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C4075 +
            C448 * C93587) *
               C9601 +
           ((C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C4075 +
            C3026 * C93587) *
               C9602 +
           ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C4075 +
            C9966 * C93587) *
               C9603) *
              C93635 * C800 -
          (((C418 * C5820 + C10715 + C10715 + C93662 * C6177) * C93587 +
            (C418 * C5819 + C10716 + C10716 + C93662 * C6175) * C4075) *
               C9603 +
           ((C418 * C3410 + C3715 + C3715 + C93662 * C3710) * C93587 +
            (C418 * C3409 + C3714 + C3714 + C93662 * C3709) * C4075) *
               C9602 +
           (C2312 * C93587 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C4075) *
               C9601) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C4075 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93587) *
               C9601 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C4075 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93587) *
               C9602 +
           ((C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C4075 +
            (C418 * C5822 + C10720 + C10720 + C93662 * C6178) * C93587) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C800 -
                    (((C275 * C886 + C93673 * C1142) * C93662 +
                      (C275 * C804 + C93673 * C952) * C188) *
                         C92 +
                     ((C275 * C887 + C93673 * C1143) * C93662 +
                      (C275 * C805 + C93673 * C953) * C188) *
                         C91 +
                     ((C275 * C888 + C93673 * C1144) * C93662 +
                      (C275 * C806 + C93673 * C954) * C188) *
                         C90 +
                     ((C275 * C889 + C93673 * C1145) * C93662 +
                      (C275 * C807 + C93673 * C955) * C188) *
                         C89) *
                        C93635 * C801 +
                    (((C275 * C808 + C93673 * C956) * C188 +
                      (C275 * C890 + C93673 * C1146) * C93662) *
                         C89 +
                     ((C275 * C809 + C93673 * C957) * C188 +
                      (C275 * C891 + C93673 * C1147) * C93662) *
                         C90 +
                     ((C275 * C810 + C93673 * C958) * C188 +
                      (C275 * C892 + C93673 * C1148) * C93662) *
                         C91 +
                     ((C275 * C811 + C93673 * C959) * C188 +
                      (C275 * C893 + C93673 * C1149) * C93662) *
                         C92) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C93621 * C97 -
                    ((C527 + C519) * C92 + (C526 + C514) * C91 +
                     (C525 + C511) * C90 + (C524 + C508) * C89) *
                        C93635 * C93621 * C98 +
                    (C528 * C89 + C529 * C90 + (C519 + C527) * C91 +
                     ((C275 * C113 + C93673 * C281) * C188 +
                      (C275 * C194 + C93673 * C506) * C93662) *
                         C92) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 +
                      (C275 * C807 + C93673 * C955) * C4177 +
                      (C275 * C889 + C93673 * C1145) * C4078 +
                      (C275 * C808 + C93673 * C956) * C4178 +
                      (C275 * C890 + C93673 * C1146) * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C93621 * C97 -
                    ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
                     (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
                        C93635 * C93621 * C98 +
                    ((C4582 + C4581 + C4580 + C4579 + C4578 + C4586) * C4075 +
                     (C309 * C4176 + C522 * C4077 + C2158 * C4177 +
                      C2389 * C4078 + (C275 * C811 + C93673 * C959) * C4178 +
                      (C275 * C893 + C93673 * C1149) * C4079) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C800 -
                    ((C5462 * C4079 + C5154 * C4178 + C4583 * C4078 +
                      C4298 * C4177 + C2391 * C4077 + C2162 * C4176) *
                         C93587 +
                     (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 +
                      C5151 * C4177 + C5460 * C4077 + C5149 * C4176) *
                         C4075) *
                        C93635 * C801 +
                    ((C5151 * C4176 + C5461 * C4077 + C5156 * C4177 +
                      C5463 * C4078 + (C275 * C4918 + C93673 * C5122) * C4178 +
                      (C275 * C5040 + C93673 * C5449) * C4079) *
                         C4075 +
                     (C4298 * C4176 + C4583 * C4077 + C5154 * C4177 +
                      C5462 * C4078 + (C275 * C4919 + C93673 * C5123) * C4178 +
                      (C275 * C5041 + C93673 * C5450) * C4079) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 +
                       C9602 * C1536 + C9772 * C1389 + C9603 * C1537) *
                          C188 +
                      (C9770 * C189 + C9601 * C501 + C9771 * C1470 +
                       C9602 * C1726 + C9772 * C1471 + C9603 * C1727) *
                          C93662) *
                         C4075 +
                     ((C9798 + C9799 + C9800) * C188 +
                      (C10054 + C10055 + C10056) * C93662) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C10057 + C10058 + C10059) * C93662 +
                      (C9807 + C9808 + C9809) * C188) *
                         C93587 +
                     ((C10056 + C10055 + C10054) * C93662 +
                      (C9800 + C9799 + C9798) * C188) *
                         C4075) *
                        C93635 * C93621 * C98 +
                    (((C9809 + C9808 + C9807) * C188 +
                      (C10059 + C10058 + C10057) * C93662) *
                         C4075 +
                     ((C9770 * C111 + C9601 * C279 + C9771 * C1385 +
                       C9602 * C1533 + C9772 * C1392 + C9603 * C1540) *
                          C188 +
                      (C9770 * C192 + C9601 * C504 + C9771 * C1467 +
                       C9602 * C1723 + C9772 * C1474 + C9603 * C1730) *
                          C93662) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 +
                       C9602 * C1536 + C9772 * C1389 + C9603 * C1537) *
                          C188 +
                      (C9770 * C189 + C9601 * C501 + C9771 * C1470 +
                       C9602 * C1726 + C9772 * C1471 + C9603 * C1727) *
                          C93662) *
                         C4075 +
                     ((C9798 + C9799 + C9800) * C188 +
                      (C10054 + C10055 + C10056) * C93662) *
                         C93587) *
                        C93635 * C800 -
                    (((C9772 * C5925 + C9603 * C6269 + C9771 * C3492 +
                       C9602 * C3784 + C9770 * C888 + C9601 * C1144) *
                          C93662 +
                      (C9772 * C5820 + C9603 * C6010 + C9771 * C3410 +
                       C9602 * C3566 + C9770 * C806 + C9601 * C954) *
                          C188) *
                         C93587 +
                     ((C9772 * C5923 + C9603 * C6267 + C9771 * C3491 +
                       C9602 * C3783 + C9770 * C889 + C9601 * C1145) *
                          C93662 +
                      (C9772 * C5819 + C9603 * C6009 + C9771 * C3409 +
                       C9602 * C3565 + C9770 * C807 + C9601 * C955) *
                          C188) *
                         C4075) *
                        C93635 * C801 +
                    (((C9770 * C808 + C9601 * C956 + C9771 * C5818 +
                       C9602 * C6008 + C9772 * C5821 + C9603 * C6011) *
                          C188 +
                      (C9770 * C890 + C9601 * C1146 + C9771 * C5922 +
                       C9602 * C6266 + C9772 * C5924 + C9603 * C6268) *
                          C93662) *
                         C4075 +
                     ((C9770 * C809 + C9601 * C957 + C9771 * C5817 +
                       C9602 * C6007 + C9772 * C5822 + C9603 * C6012) *
                          C188 +
                      (C9770 * C891 + C9601 * C1147 + C9771 * C5921 +
                       C9602 * C6265 + C9772 * C5926 + C9603 * C6270) *
                          C93662) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C800 -
          ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
            C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
               C93673 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C275) *
              C93662 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C275 +
           (C101 * C956 + C89 * C1204 + C103 * C957 + C90 * C1205 +
            C105 * C958 + C91 * C1206 + C107 * C959 + C92 * C1207) *
               C93673) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C93621 * C97 -
          ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
            C90 * C581 + C101 * C277 + C89 * C580) *
               C93673 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C275) *
              C93662 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C275 +
           (C101 * C278 + C89 * C581 + C103 * C279 + C90 * C582 + C105 * C280 +
            C91 * C583 + C107 * C281 + C92 * C584) *
               C93673) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
                C275 +
            (C4081 * C955 + C4075 * C1203 + C4083 * C954 + C93587 * C1202) *
                C93673) *
               C4078 +
           ((C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
                C275 +
            (C4081 * C956 + C4075 * C1204 + C4083 * C957 + C93587 * C1205) *
                C93673) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C4083 * C958 + C93587 * C1206 + C4081 * C957 + C4075 * C1205) *
                C93673 +
            (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
                C275) *
               C4079 +
           ((C4083 * C953 + C93587 * C1201 + C4081 * C954 + C4075 * C1202) *
                C93673 +
            (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
                C275) *
               C4078 +
           ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93673 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C275) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C275 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93673) *
               C4077 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C275 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93673) *
               C4078 +
           ((C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
                C275 +
            (C4081 * C958 + C4075 * C1206 + C4083 * C959 + C93587 * C1207) *
                C93673) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C93635 * C800 -
          (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
           ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
           ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
              C93635 * C801 +
          (C5563 * C4077 +
           ((C5281 + C5280) * C275 + (C5560 + C5559) * C93673) * C4078 +
           ((C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
                C275 +
            (C4081 * C5122 + C4075 * C5539 + C4083 * C5123 + C93587 * C5540) *
                C93673) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C9770 +
           (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
               C9601 +
           (C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
               C9771 +
           (C4081 * C1536 + C4075 * C1784 + C4083 * C1535 + C93587 * C1783) *
               C9602 +
           (C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C9772 +
           (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
               C9603) *
              C93662 * C93635 * C93621 * C97 -
          ((C4083 * C1539 + C93587 * C1787 + C4081 * C1538 + C4075 * C1786) *
               C9603 +
           (C4083 * C1391 + C93587 * C1399 + C4081 * C1390 + C4075 * C1398) *
               C9772 +
           (C4083 * C1534 + C93587 * C1782 + C4081 * C1535 + C4075 * C1783) *
               C9602 +
           (C4083 * C1386 + C93587 * C1394 + C4081 * C1387 + C4075 * C1395) *
               C9771 +
           (C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
               C9601 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C9770) *
              C93662 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C9770 +
           (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
               C9601 +
           (C4081 * C1386 + C4075 * C1394 + C4083 * C1385 + C93587 * C1393) *
               C9771 +
           (C4081 * C1534 + C4075 * C1782 + C4083 * C1533 + C93587 * C1781) *
               C9602 +
           (C4081 * C1391 + C4075 * C1399 + C4083 * C1392 + C93587 * C1400) *
               C9772 +
           (C4081 * C1539 + C4075 * C1787 + C4083 * C1540 + C93587 * C1788) *
               C9603) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C9770 +
           (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
               C9601 +
           (C4081 * C1388 + C4075 * C1396 + C4083 * C1387 + C93587 * C1395) *
               C9771 +
           (C4081 * C1536 + C4075 * C1784 + C4083 * C1535 + C93587 * C1783) *
               C9602 +
           (C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C9772 +
           (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
               C9603) *
              C93662 * C93635 * C800 -
          ((C4083 * C6010 + C93587 * C6348 + C4081 * C6009 + C4075 * C6347) *
               C9603 +
           (C4083 * C5820 + C93587 * C5826 + C4081 * C5819 + C4075 * C5825) *
               C9772 +
           (C9314 + C9315) * C9602 + (C8990 + C8991) * C9771 +
           (C5556 + C5555) * C9601 + (C5271 + C5270) * C9770) *
              C93662 * C93635 * C801 +
          (C5282 * C9770 + C5561 * C9601 + (C8987 + C8986) * C9771 +
           (C9313 + C9312) * C9602 +
           (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
               C9772 +
           (C4081 * C6011 + C4075 * C6349 + C4083 * C6012 + C93587 * C6350) *
               C9603) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C800 -
          (((C188 * C952 + C93662 * C1258) * C93673 +
            (C188 * C804 + C93662 * C886) * C275) *
               C92 +
           ((C188 * C953 + C93662 * C1259) * C93673 +
            (C188 * C805 + C93662 * C887) * C275) *
               C91 +
           ((C188 * C954 + C93662 * C1260) * C93673 +
            (C188 * C806 + C93662 * C888) * C275) *
               C90 +
           ((C188 * C955 + C93662 * C1261) * C93673 +
            (C188 * C807 + C93662 * C889) * C275) *
               C89) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C275 +
            (C188 * C956 + C93662 * C1262) * C93673) *
               C89 +
           ((C188 * C809 + C93662 * C891) * C275 +
            (C188 * C957 + C93662 * C1263) * C93673) *
               C90 +
           ((C188 * C810 + C93662 * C892) * C275 +
            (C188 * C958 + C93662 * C1264) * C93673) *
               C91 +
           ((C188 * C811 + C93662 * C893) * C275 +
            (C188 * C959 + C93662 * C1265) * C93673) *
               C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C93621 * C97 -
          ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
           (C658 + C642) * C89) *
              C93635 * C93621 * C98 +
          (C662 * C89 + C663 * C90 + (C653 + C661) * C91 +
           ((C188 * C113 + C93662 * C194) * C275 +
            (C188 * C281 + C93662 * C640) * C93673) *
               C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C4750 + C4751 + C4752) * C93673 + (C4213 + C4214 + C4215) * C275) *
               C93587 +
           ((C4749 + C4748 + C4747) * C93673 + (C4206 + C4205 + C4204) * C275) *
               C4075) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C275 + (C4752 + C4751 + C4750) * C93673) *
               C4075 +
           ((C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
             C4178 * C811 + C4079 * C893) *
                C275 +
            (C4176 * C279 + C4077 * C638 + C4177 * C952 + C4078 * C1258 +
             C4178 * C959 + C4079 * C1265) *
                C93673) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C800 -
          (((C4178 * C5120 + C4079 * C5637 + C4177 * C957 + C4078 * C1263 +
             C4176 * C954 + C4077 * C1260) *
                C93673 +
            (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
             C4176 * C806 + C4077 * C888) *
                C275) *
               C93587 +
           ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C93673 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C275) *
               C4075) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C275 +
            (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
             C4178 * C5122 + C4079 * C5639) *
                C93673) *
               C4075 +
           ((C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
             C4178 * C4919 + C4079 * C5041) *
                C275 +
            (C4176 * C957 + C4077 * C1263 + C4177 * C5120 + C4078 * C5637 +
             C4178 * C5123 + C4079 * C5640) *
                C93673) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C9770 +
            (C188 * C276 + C93662 * C635) * C9601 +
            (C188 * C1388 + C93662 * C1470) * C9771 +
            (C188 * C1536 + C93662 * C1842) * C9602 +
            (C188 * C1389 + C93662 * C1471) * C9772 +
            (C188 * C1537 + C93662 * C1843) * C9603) *
               C4075 +
           (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
              C93635 * C93621 * C97 -
          ((C10225 + C10217 + C10218 + C10219 + C10220 + C10221) * C93587 +
           (C10224 + C10212 + C10211 + C10210 + C10209 + C10208) * C4075) *
              C93635 * C93621 * C98 +
          ((C10221 + C10220 + C10219 + C10218 + C10217 + C10225) * C4075 +
           (C222 * C9770 + C656 * C9601 + C2786 * C9771 + C3252 * C9602 +
            (C188 * C1392 + C93662 * C1474) * C9772 +
            (C188 * C1540 + C93662 * C1846) * C9603) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C9770 +
            (C188 * C276 + C93662 * C635) * C9601 +
            (C188 * C1388 + C93662 * C1470) * C9771 +
            (C188 * C1536 + C93662 * C1842) * C9602 +
            (C188 * C1389 + C93662 * C1471) * C9772 +
            (C188 * C1537 + C93662 * C1843) * C9603) *
               C4075 +
           (C10208 + C10209 + C10210 + C10211 + C10212 + C10224) * C93587) *
              C93635 * C800 -
          (((C188 * C6010 + C93662 * C6429) * C9603 +
            (C188 * C5820 + C93662 * C5925) * C9772 +
            (C188 * C3566 + C93662 * C3924) * C9602 +
            (C188 * C3410 + C93662 * C3492) * C9771 + C2540 * C9601 +
            C2076 * C9770) *
               C93587 +
           ((C188 * C6009 + C93662 * C6427) * C9603 +
            (C188 * C5819 + C93662 * C5923) * C9772 +
            (C188 * C3565 + C93662 * C3923) * C9602 +
            (C188 * C3409 + C93662 * C3491) * C9771 +
            (C188 * C955 + C93662 * C1261) * C9601 +
            (C188 * C807 + C93662 * C889) * C9770) *
               C4075) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C9770 +
            (C188 * C956 + C93662 * C1262) * C9601 +
            (C188 * C5818 + C93662 * C5922) * C9771 +
            (C188 * C6008 + C93662 * C6426) * C9602 +
            (C188 * C5821 + C93662 * C5924) * C9772 +
            (C188 * C6011 + C93662 * C6428) * C9603) *
               C4075 +
           ((C188 * C809 + C93662 * C891) * C9770 +
            (C188 * C957 + C93662 * C1263) * C9601 +
            (C188 * C5817 + C93662 * C5921) * C9771 +
            (C188 * C6007 + C93662 * C6425) * C9602 +
            (C188 * C5822 + C93662 * C5926) * C9772 +
            (C188 * C6012 + C93662 * C6430) * C9603) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C800 -
          ((C713 * C804 + C1325 + C1325 + C93673 * C1316) * C93662 * C92 +
           (C713 * C805 + C1326 + C1326 + C93673 * C1317) * C93662 * C91 +
           (C713 * C806 + C1327 + C1327 + C93673 * C1318) * C93662 * C90 +
           (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
              C93635 * C801 +
          ((C713 * C808 + C1329 + C1329 + C93673 * C1320) * C93662 * C89 +
           (C713 * C809 + C1330 + C1330 + C93673 * C1321) * C93662 * C90 +
           (C713 * C810 + C1331 + C1331 + C93673 * C1322) * C93662 * C91 +
           (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93662 * C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C93621 * C97 -
          (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
              C93621 * C98 +
          (C748 * C89 + C749 * C90 + C750 * C91 +
           (C713 * C113 + C734 + C734 + C93673 * C719) * C93662 * C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C4078 +
            (C713 * C808 + C1329 + C1329 + C93673 * C1320) * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C93621 * C97 -
          ((C4842 + C4833 + C4834) * C93587 + (C4841 + C4828 + C4827) * C4075) *
              C93635 * C93621 * C98 +
          ((C4834 + C4833 + C4842) * C4075 +
           (C745 * C4077 + C2624 * C4078 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C4079) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C800 -
          ((C5742 * C4079 + C4839 * C4078 + C2626 * C4077) * C93587 +
           (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
              C93635 * C801 +
          ((C5741 * C4077 + C5743 * C4078 +
            (C713 * C4918 + C5730 + C5730 + C93673 * C5717) * C4079) *
               C4075 +
           (C4839 * C4077 + C5742 * C4078 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C4079) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C93662 * C4075 +
           (C10339 + C10340 + C10341) * C93662 * C93587) *
              C93635 * C93621 * C97 -
          ((C10342 + C10343 + C10344) * C93662 * C93587 +
           (C10341 + C10340 + C10339) * C93662 * C4075) *
              C93635 * C93621 * C98 +
          ((C10344 + C10343 + C10342) * C93662 * C4075 +
           (C10299 * C111 + C10324 + C10324 + C9601 * C717 + C10300 * C1385 +
            C10325 + C10325 + C9602 * C1897 + C10301 * C1392 + C10326 + C10326 +
            C9603 * C1904) *
               C93662 * C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C93662 * C4075 +
           (C10339 + C10340 + C10341) * C93662 * C93587) *
              C93635 * C800 -
          ((C10301 * C5820 + C11017 + C11017 + C9603 * C6509 + C10300 * C3410 +
            C11018 + C11018 + C9602 * C3994 + C10299 * C806 + C11019 + C11019 +
            C9601 * C1318) *
               C93662 * C93587 +
           (C10301 * C5819 + C11020 + C11020 + C9603 * C6507 + C10300 * C3409 +
            C11021 + C11021 + C9602 * C3993 + C10299 * C807 + C11022 + C11022 +
            C9601 * C1319) *
               C93662 * C4075) *
              C93635 * C801 +
          ((C10299 * C808 + C11023 + C11023 + C9601 * C1320 + C10300 * C5818 +
            C11024 + C11024 + C9602 * C6506 + C10301 * C5821 + C11025 + C11025 +
            C9603 * C6508) *
               C93662 * C4075 +
           (C10299 * C809 + C11026 + C11026 + C9601 * C1321 + C10300 * C5817 +
            C11027 + C11027 + C9602 * C6505 + C10301 * C5822 + C11028 + C11028 +
            C9603 * C6510) *
               C93662 * C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                       C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                       C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                          C93819 +
                      (C21695 + C21696 + C21697) * C93737) *
                         C93662 * C93635 * C1979 -
                     ((C19297 + C19298 + C19299) * C93737 +
                      (C15844 + C15843 + C15842) * C93819) *
                         C93662 * C93635 * C1980) *
                        C1981 +
                    (((C17322 + C17323 + C17324) * C93819 +
                      (C14994 * C3410 + C18313 + C18313 + C93842 * C3418 +
                       C14996 * C3411 + C18314 + C18314 + C93843 * C3419 +
                       C14998 * C3412 + C18315 + C18315 + C14991 * C3420) *
                          C93737) *
                         C93662 * C93635 * C1980 -
                     ((C14998 * C1385 + C18312 + C18312 + C14991 * C1401 +
                       C14996 * C1386 + C18311 + C18311 + C93843 * C1402 +
                       C14994 * C1387 + C18310 + C18310 + C93842 * C1403) *
                          C93737 +
                      (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                       C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                       C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                          C93819) *
                         C93662 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C14995 +
             (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
             C219 * C93843 + C220 * C14999 + C221 * C14991) *
                C93819 +
            (C21775 + C21776 + C21777 + C21778 + C21779 + C21780) * C93737) *
               C93635 * C1979 -
           ((C22577 * C14991 + C22578 * C14999 + C12149 * C93843 +
             C12150 * C14997 + C14161 * C93842 + C14160 * C14995) *
                C93737 +
            (C2073 * C14991 + C2074 * C14999 + C2075 * C93843 + C2076 * C14997 +
             (C188 * C815 + C93662 * C897) * C93842 +
             (C188 * C807 + C93662 * C889) * C14995) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C14995 + C2075 * C93842 + C2074 * C14997 + C2073 * C93843 +
             C2072 * C14999 + C2071 * C14991) *
                C93819 +
            (C12150 * C14995 + C12149 * C93842 + C22578 * C14997 +
             C22577 * C93843 + (C188 * C3412 + C93662 * C3494) * C14999 +
             (C188 * C3416 + C93662 * C3498) * C14991) *
                C93737) *
               C93635 * C1980 -
           ((C2785 * C14991 + C2786 * C14999 + C2787 * C93843 + C2788 * C14997 +
             C2789 * C93842 + C2790 * C14995) *
                C93737 +
            (C223 * C14991 + C222 * C14999 + C221 * C93843 + C220 * C14997 +
             C219 * C93842 + C218 * C14995) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C14995 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93842 +
            (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
            C20388 * C14999 + C20389 * C14991) *
               C93662 * C93635 * C1979 -
           ((C22693 + C22694) * C14991 + (C22695 + C22696) * C14999 +
            (C22697 + C22698) * C93843 + (C22699 + C22700) * C14997 +
            (C20350 * C3413 + C93737 * C3569 + C20349 * C815 + C93819 * C963) *
                C93842 +
            (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                C14995) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C22700 + C22699) * C14995 + (C22698 + C22697) * C93842 +
            (C22696 + C22695) * C14997 + (C22694 + C22693) * C93843 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C14999 +
            (C20349 * C812 + C93819 * C960 + C20350 * C3416 + C93737 * C3572) *
                C14991) *
               C93662 * C93635 * C1980 -
           ((C20384 + C20385) * C14991 + (C20386 + C20387) * C14999 +
            (C20383 + C20382) * C93843 + (C20381 + C20380) * C14997 +
            (C20379 + C20378) * C93842 + (C20377 + C20376) * C14995) *
               C93662 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                        C93843 * C115 + C14999 * C110 + C14991 * C116) *
                           C188 +
                       (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                        C93843 * C363 + C14999 * C191 + C14991 * C364) *
                           C93662) *
                          C93819 +
                      ((C21959 + C21960 + C21961) * C188 +
                       (C21962 + C21963 + C21964) * C93662) *
                          C93737) *
                         C93635 * C1979 -
                     (((C19612 + C19613 + C19614) * C93662 +
                       (C19615 + C19616 + C19617) * C188) *
                          C93737 +
                      ((C16111 + C16110 + C16109) * C93662 +
                       (C16108 + C16107 + C16106) * C188) *
                          C93819) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C17661 + C17662 + C17663) * C188 +
                       (C17664 + C17665 + C17666) * C93662) *
                          C93819 +
                      ((C14995 * C3410 + C93842 * C3414 + C14997 * C3411 +
                        C93843 * C3415 + C14999 * C3412 + C14991 * C3416) *
                           C188 +
                       (C14995 * C3492 + C93842 * C3640 + C14997 * C3493 +
                        C93843 * C3641 + C14999 * C3494 + C14991 * C3642) *
                           C93662) *
                          C93737) *
                         C93635 * C1980 -
                     (((C14999 * C1467 + C14991 * C1599 + C14997 * C1468 +
                        C93843 * C1600 + C14995 * C1469 + C93842 * C1601) *
                           C93662 +
                       (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                        C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                           C188) *
                          C93737 +
                      ((C14999 * C192 + C14991 * C365 + C14997 * C191 +
                        C93843 * C364 + C14995 * C190 + C93842 * C363) *
                           C93662 +
                       (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                        C93843 * C116 + C14995 * C109 + C93842 * C115) *
                           C188) *
                          C93819) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
             C448 * C93843 + C449 * C14991) *
                C93819 +
            (C22045 + C22046 + C22047) * C93737) *
               C93635 * C1979 -
           ((C22901 * C14991 + C12477 * C93843 + C14494 * C93842) * C93737 +
            (C2311 * C14991 + C2312 * C93843 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93842) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          (((C2312 * C93842 + C2311 * C93843 + C2310 * C14991) * C93819 +
            (C12477 * C93842 + C22901 * C93843 +
             (C418 * C3412 + C3717 + C3717 + C93662 * C3712) * C14991) *
                C93737) *
               C93635 * C1980 -
           ((C3024 * C14991 + C3025 * C93843 + C3026 * C93842) * C93737 +
            (C450 * C14991 + C449 * C93843 + C448 * C93842) * C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C188 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93662) *
                C93842 +
            ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
            C20633 * C14991) *
               C93635 * C1979 -
           (((C23008 + C23009) * C93662 + (C22695 + C22696) * C188) * C14991 +
            ((C23010 + C23011) * C93662 + (C22699 + C22700) * C188) * C93843 +
            ((C20350 * C3491 + C93737 * C3783 + C20349 * C889 +
              C93819 * C1145) *
                 C93662 +
             (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                 C188) *
                C93842) *
               C93635 * C1980) *
              C1981 +
          ((((C22700 + C22699) * C188 + (C23011 + C23010) * C93662) * C93842 +
            ((C22696 + C22695) * C188 + (C23009 + C23008) * C93662) * C93843 +
            ((C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                 C188 +
             (C20349 * C886 + C93819 * C1142 + C20350 * C3494 +
              C93737 * C3786) *
                 C93662) *
                C14991) *
               C93635 * C1980 -
           (((C20629 + C20630) * C93662 + (C20386 + C20387) * C188) * C14991 +
            ((C20628 + C20627) * C93662 + (C20381 + C20380) * C188) * C93843 +
            ((C20626 + C20625) * C93662 + (C20377 + C20376) * C188) * C93842) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C20349 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93819 +
                      (C21959 + C21960 + C21961) * C20350 +
                      (C22211 + C22212 + C22213) * C93737) *
                         C93662 * C93635 * C1979 -
                     ((C19924 + C19925 + C19926) * C93737 +
                      (C19615 + C19616 + C19617) * C20350 +
                      (C16366 + C16365 + C16364) * C93819 +
                      (C16108 + C16107 + C16106) * C20349) *
                         C93662 * C93635 * C1980) *
                        C1981 +
                    (((C17661 + C17662 + C17663) * C20349 +
                      (C17997 + C17998 + C17999) * C93819 +
                      (C14995 * C3410 + C93842 * C3414 + C14997 * C3411 +
                       C93843 * C3415 + C14999 * C3412 + C14991 * C3416) *
                          C20350 +
                      (C14995 * C3566 + C93842 * C3854 + C14997 * C3567 +
                       C93843 * C3855 + C14999 * C3568 + C14991 * C3856) *
                          C93737) *
                         C93662 * C93635 * C1980 -
                     ((C14999 * C1533 + C14991 * C1781 + C14997 * C1534 +
                       C93843 * C1782 + C14995 * C1535 + C93842 * C1783) *
                          C93737 +
                      (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                       C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                          C20350 +
                      (C14999 * C279 + C14991 * C582 + C14997 * C278 +
                       C93843 * C581 + C14995 * C277 + C93842 * C580) *
                          C93819 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C20349) *
                         C93662 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C20349 +
             (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
             C11842 * C93737) *
                C93842 +
            (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
               C93635 * C1979 -
           ((C23218 + C23210 + C23211 + C23212) * C14991 +
            (C23213 + C23214 + C23215 + C23216) * C93843 +
            (C14808 * C93737 + C14160 * C20350 +
             (C188 * C955 + C93662 * C1261) * C93819 +
             (C188 * C807 + C93662 * C889) * C20349) *
                C93842) *
               C93635 * C1980) *
              C1981 +
          (((C23216 + C23215 + C23214 + C23213) * C93842 +
            (C23212 + C23211 + C23210 + C23218) * C93843 +
            (C2072 * C20349 + C2538 * C93819 +
             (C188 * C3412 + C93662 * C3494) * C20350 +
             (C188 * C3568 + C93662 * C3926) * C93737) *
                C14991) *
               C93635 * C1980 -
           ((C20790 + C20791 + C20792 + C20793) * C14991 +
            (C20789 + C20788 + C20787 + C20786) * C93843 +
            (C20785 + C20784 + C20783 + C20782) * C93842) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93662 * C93842 +
                      (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                         C93635 * C1979 -
                     ((C23335 + C23336) * C93662 * C14991 +
                      (C23337 + C23338) * C93662 * C93843 +
                      (C20871 * C3409 + C21586 + C21586 + C93737 * C3993 +
                       C20870 * C807 + C21587 + C21587 + C93819 * C1319) *
                          C93662 * C93842) *
                         C93635 * C1980) *
                        C1981 +
                    (((C23338 + C23337) * C93662 * C93842 +
                      (C23336 + C23335) * C93662 * C93843 +
                      (C20870 * C804 + C23325 + C23325 + C93819 * C1316 +
                       C20871 * C3412 + C23326 + C23326 + C93737 * C3996) *
                          C93662 * C14991) *
                         C93635 * C1980 -
                     ((C20911 + C20912) * C93662 * C14991 +
                      (C20910 + C20909) * C93662 * C93843 +
                      (C20908 + C20907) * C93662 * C93842) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                       C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                       C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                          C93819 +
                      (C21695 + C21696 + C21697) * C93737) *
                         C93662 * C2695 -
                     ((C21698 + C21699 + C21700) * C93737 +
                      (C21697 + C21696 + C21695) * C93819) *
                         C93662 * C2696) *
                        C1979 +
                    (((C19299 + C19298 + C19297) * C93819 +
                      (C14994 * C5819 + C16601 + C16601 + C93842 * C5831 +
                       C14996 * C5820 + C16602 + C16602 + C93843 * C5832 +
                       C14998 * C12033 + C16603 + C16603 + C14991 * C12035) *
                          C93737) *
                         C93662 * C2696 -
                     ((C19297 + C19298 + C19299) * C93737 +
                      (C15844 + C15843 + C15842) * C93819) *
                         C93662 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C14995 +
             (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
             C219 * C93843 + C220 * C14999 + C221 * C14991) *
                C93819 +
            (C21775 + C21776 + C21777 + C21778 + C21779 + C21780) * C93737) *
               C2695 -
           ((C21781 + C21782 + C21783 + C21784 + C21785 + C21786) * C93737 +
            (C21780 + C21779 + C21778 + C21777 + C21776 + C21775) * C93819) *
               C2696) *
              C1979 +
          (((C24537 + C24538 + C24539 + C24540 + C24541 + C24542) * C93819 +
            (C14162 * C14995 + C14163 * C93842 + C12148 * C14997 +
             C12147 * C93843 + (C188 * C12033 + C93662 * C12136) * C14999 +
             (C188 * C12034 + C93662 * C12137) * C14991) *
                C93737) *
               C2696 -
           ((C24542 + C24541 + C24540 + C24539 + C24538 + C24537) * C93737 +
            (C2073 * C14991 + C2074 * C14999 + C2075 * C93843 + C2076 * C14997 +
             (C188 * C815 + C93662 * C897) * C93842 +
             (C188 * C807 + C93662 * C889) * C14995) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C14995 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93842 +
            (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
            C20388 * C14999 + C20389 * C14991) *
               C93662 * C2695 -
           ((C23673 + C23674) * C14991 + (C23675 + C23676) * C14999 +
            (C23677 + C23678) * C93843 + (C23679 + C23680) * C14997 +
            (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
             C93819 * C1544) *
                C93842 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C14995) *
               C93662 * C2696) *
              C1979 +
          (((C20349 * C3409 + C93819 * C3565 + C20350 * C5819 +
             C93737 * C6009) *
                C14995 +
            (C20349 * C3413 + C93819 * C3569 + C20350 * C5825 +
             C93737 * C6015) *
                C93842 +
            (C20349 * C3410 + C93819 * C3566 + C20350 * C5820 +
             C93737 * C6010) *
                C14997 +
            (C20349 * C3414 + C93819 * C3570 + C20350 * C5826 +
             C93737 * C6016) *
                C93843 +
            (C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
             C93737 * C12248) *
                C14999 +
            (C20349 * C3415 + C93819 * C3571 + C20350 * C12034 +
             C93737 * C12249) *
                C14991) *
               C93662 * C2696 -
           ((C22693 + C22694) * C14991 + (C22695 + C22696) * C14999 +
            (C22697 + C22698) * C93843 + (C22699 + C22700) * C14997 +
            (C20350 * C3413 + C93737 * C3569 + C20349 * C815 + C93819 * C963) *
                C93842 +
            (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                C14995) *
               C93662 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                        C93843 * C115 + C14999 * C110 + C14991 * C116) *
                           C188 +
                       (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                        C93843 * C363 + C14999 * C191 + C14991 * C364) *
                           C93662) *
                          C93819 +
                      ((C21959 + C21960 + C21961) * C188 +
                       (C21962 + C21963 + C21964) * C93662) *
                          C93737) *
                         C2695 -
                     (((C21965 + C21966 + C21967) * C93662 +
                       (C21968 + C21969 + C21970) * C188) *
                          C93737 +
                      ((C21964 + C21963 + C21962) * C93662 +
                       (C21961 + C21960 + C21959) * C188) *
                          C93819) *
                         C2696) *
                        C1979 +
                    ((((C19617 + C19616 + C19615) * C188 +
                       (C19614 + C19613 + C19612) * C93662) *
                          C93819 +
                      ((C14995 * C5819 + C93842 * C5825 + C14997 * C5820 +
                        C93843 * C5826 + C14999 * C12033 + C14991 * C12034) *
                           C188 +
                       (C14995 * C5923 + C93842 * C6095 + C14997 * C5925 +
                        C93843 * C6096 + C14999 * C12136 + C14991 * C12366) *
                           C93662) *
                          C93737) *
                         C2696 -
                     (((C19612 + C19613 + C19614) * C93662 +
                       (C19615 + C19616 + C19617) * C188) *
                          C93737 +
                      ((C16111 + C16110 + C16109) * C93662 +
                       (C16108 + C16107 + C16106) * C188) *
                          C93819) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
             C448 * C93843 + C449 * C14991) *
                C93819 +
            (C22045 + C22046 + C22047) * C93737) *
               C2695 -
           ((C22048 + C22049 + C22050) * C93737 +
            (C22047 + C22046 + C22045) * C93819) *
               C2696) *
              C1979 +
          (((C24837 + C24838 + C24839) * C93819 +
            (C14495 * C93842 + C12476 * C93843 +
             (C418 * C12033 + C12471 + C12471 + C93662 * C12465) * C14991) *
                C93737) *
               C2696 -
           ((C24839 + C24838 + C24837) * C93737 +
            (C2311 * C14991 + C2312 * C93843 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93842) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C188 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93662) *
                C93842 +
            ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
            C20633 * C14991) *
               C2695 -
           (((C24004 + C24005) * C93662 + (C23675 + C23676) * C188) * C14991 +
            ((C24006 + C24007) * C93662 + (C23679 + C23680) * C188) * C93843 +
            ((C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C93662 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C188) *
                C93842) *
               C2696) *
              C1979 +
          ((((C20349 * C3409 + C93819 * C3565 + C20350 * C5819 +
              C93737 * C6009) *
                 C188 +
             (C20349 * C3491 + C93819 * C3783 + C20350 * C5923 +
              C93737 * C6267) *
                 C93662) *
                C93842 +
            ((C20349 * C3410 + C93819 * C3566 + C20350 * C5820 +
              C93737 * C6010) *
                 C188 +
             (C20349 * C3492 + C93819 * C3784 + C20350 * C5925 +
              C93737 * C6269) *
                 C93662) *
                C93843 +
            ((C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
              C93737 * C12248) *
                 C188 +
             (C20349 * C3493 + C93819 * C3785 + C20350 * C12136 +
              C93737 * C12575) *
                 C93662) *
                C14991) *
               C2696 -
           (((C23008 + C23009) * C93662 + (C22695 + C22696) * C188) * C14991 +
            ((C23010 + C23011) * C93662 + (C22699 + C22700) * C188) * C93843 +
            ((C20350 * C3491 + C93737 * C3783 + C20349 * C889 +
              C93819 * C1145) *
                 C93662 +
             (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                 C188) *
                C93842) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C20349 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93819 +
                      (C21959 + C21960 + C21961) * C20350 +
                      (C22211 + C22212 + C22213) * C93737) *
                         C93662 * C2695 -
                     ((C22214 + C22215 + C22216) * C93737 +
                      (C21968 + C21969 + C21970) * C20350 +
                      (C22213 + C22212 + C22211) * C93819 +
                      (C21961 + C21960 + C21959) * C20349) *
                         C93662 * C2696) *
                        C1979 +
                    (((C19617 + C19616 + C19615) * C20349 +
                      (C19926 + C19925 + C19924) * C93819 +
                      (C14995 * C5819 + C93842 * C5825 + C14997 * C5820 +
                       C93843 * C5826 + C14999 * C12033 + C14991 * C12034) *
                          C20350 +
                      (C14995 * C6009 + C93842 * C6347 + C14997 * C6010 +
                       C93843 * C6348 + C14999 * C12248 + C14991 * C12683) *
                          C93737) *
                         C93662 * C2696 -
                     ((C19924 + C19925 + C19926) * C93737 +
                      (C19615 + C19616 + C19617) * C20350 +
                      (C16366 + C16365 + C16364) * C93819 +
                      (C16108 + C16107 + C16106) * C20349) *
                         C93662 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C20349 +
             (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
             C11842 * C93737) *
                C93842 +
            (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
               C2695 -
           ((C24213 + C24214 + C24215 + C24216) * C14991 +
            (C24217 + C24218 + C24219 + C24220) * C93843 +
            (C11843 * C93737 + C11254 * C20350 + C11842 * C93819 +
             C11252 * C20349) *
                C93842) *
               C2696) *
              C1979 +
          (((C14160 * C20349 + C14808 * C93819 + C14162 * C20350 +
             C14809 * C93737) *
                C93842 +
            (C12150 * C20349 + C12793 * C93819 + C12148 * C20350 +
             C12792 * C93737) *
                C93843 +
            (C22578 * C20349 + C23217 * C93819 +
             (C188 * C12033 + C93662 * C12136) * C20350 +
             (C188 * C12248 + C93662 * C12782) * C93737) *
                C14991) *
               C2696 -
           ((C23218 + C23210 + C23211 + C23212) * C14991 +
            (C23213 + C23214 + C23215 + C23216) * C93843 +
            (C14808 * C93737 + C14160 * C20350 +
             (C188 * C955 + C93662 * C1261) * C93819 +
             (C188 * C807 + C93662 * C889) * C20349) *
                C93842) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93662 * C93842 +
                      (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                         C2695 -
                     ((C24337 + C24338) * C93662 * C14991 +
                      (C24339 + C24340) * C93662 * C93843 +
                      (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                       C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                          C93662 * C93842) *
                         C2696) *
                        C1979 +
                    (((C20870 * C3409 + C25232 + C25232 + C93819 * C3993 +
                       C20871 * C5819 + C25233 + C25233 + C93737 * C6507) *
                          C93662 * C93842 +
                      (C20870 * C3410 + C25234 + C25234 + C93819 * C3994 +
                       C20871 * C5820 + C25235 + C25235 + C93737 * C6509) *
                          C93662 * C93843 +
                      (C20870 * C3411 + C25236 + C25236 + C93819 * C3995 +
                       C20871 * C12033 + C25237 + C25237 + C93737 * C12893) *
                          C93662 * C14991) *
                         C2696 -
                     ((C23335 + C23336) * C93662 * C14991 +
                      (C23337 + C23338) * C93662 * C93843 +
                      (C20871 * C3409 + C21586 + C21586 + C93737 * C3993 +
                       C20870 * C807 + C21587 + C21587 + C93819 * C1319) *
                          C93662 * C93842) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93819 +
                     (C14994 * C1388 + C16597 + C16597 + C93842 * C1404 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14998 * C1386 + C16595 + C16595 + C14991 * C1402) *
                         C93737) *
                        C93662 * C93635 * C800 -
                    ((C19297 + C19298 + C19299) * C93737 +
                     (C15844 + C15843 + C15842) * C93819) *
                        C93662 * C93635 * C801 +
                    ((C15847 + C15846 + C15845) * C93819 +
                     (C14994 * C5818 + C19288 + C19288 + C93842 * C5830 +
                      C14996 * C5817 + C19289 + C19289 + C93843 * C5829 +
                      C14998 * C7631 + C19290 + C19290 + C14991 * C7633) *
                         C93737) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93819 +
                     (C14994 * C1388 + C16597 + C16597 + C93842 * C1404 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14998 * C1386 + C16595 + C16595 + C14991 * C1402) *
                         C93737) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C14998 * C1385 + C18312 + C18312 + C14991 * C1401 +
                      C14996 * C1386 + C18311 + C18311 + C93843 * C1402 +
                      C14994 * C1387 + C18310 + C18310 + C93842 * C1403) *
                         C93737 +
                     (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                      C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                      C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                         C93819) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C14994 * C110 + C15013 + C15013 + C93842 * C122 +
                      C14996 * C111 + C15014 + C15014 + C93843 * C123 +
                      C14998 * C112 + C15015 + C15015 + C14991 * C124) *
                         C93819 +
                     (C14994 * C1386 + C20199 + C20199 + C93842 * C1402 +
                      C14996 * C1385 + C20200 + C20200 + C93843 * C1401 +
                      C14998 * C2697 + C20201 + C20201 + C14991 * C2699) *
                         C93737) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93819 +
                     (C21695 + C21696 + C21697) * C93737) *
                        C93662 * C1382 -
                    ((C21698 + C21699 + C21700) * C93737 +
                     (C21697 + C21696 + C21695) * C93819) *
                        C93662 * C1383 +
                    ((C21700 + C21699 + C21698) * C93819 +
                     (C14994 * C11103 + C21680 + C21680 + C93842 * C11111 +
                      C14996 * C11102 + C21681 + C21681 + C93843 * C11110 +
                      C14998 * C13010 + C21682 + C21682 + C14991 * C13012) *
                         C93737) *
                        C93662 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C14995 +
            (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
            C219 * C93843 + C220 * C14999 + C221 * C14991) *
               C93819 +
           (C11252 * C14995 + C11253 * C93842 + C2790 * C14997 +
            C2789 * C93843 + C2788 * C14999 + C2787 * C14991) *
               C93737) *
              C93635 * C800 -
          (((C188 * C3415 + C93662 * C3497) * C14991 +
            (C188 * C3411 + C93662 * C3493) * C14999 + C12149 * C93843 +
            C12150 * C14997 + C14161 * C93842 + C14160 * C14995) *
               C93737 +
           (C2073 * C14991 + C2074 * C14999 + C2075 * C93843 + C2076 * C14997 +
            (C188 * C815 + C93662 * C897) * C93842 +
            (C188 * C807 + C93662 * C889) * C14995) *
               C93819) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C14995 +
            (C188 * C816 + C93662 * C898) * C93842 +
            (C188 * C809 + C93662 * C891) * C14997 +
            (C188 * C817 + C93662 * C899) * C93843 +
            (C188 * C810 + C93662 * C892) * C14999 +
            (C188 * C818 + C93662 * C900) * C14991) *
               C93819 +
           ((C188 * C5818 + C93662 * C5922) * C14995 +
            (C188 * C5824 + C93662 * C5928) * C93842 +
            (C188 * C5817 + C93662 * C5921) * C14997 +
            (C188 * C5823 + C93662 * C5927) * C93843 +
            (C188 * C7631 + C93662 * C7738) * C14999 +
            (C188 * C7632 + C93662 * C7739) * C14991) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C14995 +
            (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
            C219 * C93843 + C220 * C14999 + C221 * C14991) *
               C93819 +
           (C11252 * C14995 + C11253 * C93842 + C2790 * C14997 +
            C2789 * C93843 + C2788 * C14999 + C2787 * C14991) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C2785 * C14991 + C2786 * C14999 + C2787 * C93843 + C2788 * C14997 +
            C2789 * C93842 + C2790 * C14995) *
               C93737 +
           (C223 * C14991 + C222 * C14999 + C221 * C93843 + C220 * C14997 +
            C219 * C93842 + C218 * C14995) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C220 * C14995 + C221 * C93842 + C222 * C14997 + C223 * C93843 +
            C225 * C14999 + C224 * C14991) *
               C93819 +
           (C2788 * C14995 + C2787 * C93842 + C2786 * C14997 + C2785 * C93843 +
            (C188 * C2697 + C93662 * C2770) * C14999 +
            (C188 * C2698 + C93662 * C2771) * C14991) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C14995 +
            (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
            C219 * C93843 + C220 * C14999 + C221 * C14991) *
               C93819 +
           (C21775 + C21776 + C21777 + C21778 + C21779 + C21780) * C93737) *
              C1382 -
          ((C21781 + C21782 + C21783 + C21784 + C21785 + C21786) * C93737 +
           (C21780 + C21779 + C21778 + C21777 + C21776 + C21775) * C93819) *
              C1383 +
          ((C21786 + C21785 + C21784 + C21783 + C21782 + C21781) * C93819 +
           (C11259 * C14995 + C11258 * C93842 + C11257 * C14997 +
            C11256 * C93843 + (C188 * C13010 + C93662 * C13133) * C14999 +
            (C188 * C13011 + C93662 * C13134) * C14991) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C14995 +
           (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
               C93842 +
           (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
           C20388 * C14999 + C20389 * C14991) *
              C93662 * C93635 * C800 -
          ((C20350 * C3415 + C93737 * C3571 + C20349 * C813 + C93819 * C961) *
               C14991 +
           (C20350 * C3411 + C93737 * C3567 + C20349 * C805 + C93819 * C953) *
               C14999 +
           (C20350 * C3414 + C93737 * C3570 + C20349 * C814 + C93819 * C962) *
               C93843 +
           (C20350 * C3410 + C93737 * C3566 + C20349 * C806 + C93819 * C954) *
               C14997 +
           (C20350 * C3413 + C93737 * C3569 + C20349 * C815 + C93819 * C963) *
               C93842 +
           (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
               C14995) *
              C93662 * C93635 * C801 +
          ((C20349 * C808 + C93819 * C956 + C20350 * C5818 + C93737 * C6008) *
               C14995 +
           (C20349 * C816 + C93819 * C964 + C20350 * C5824 + C93737 * C6014) *
               C93842 +
           (C20349 * C809 + C93819 * C957 + C20350 * C5817 + C93737 * C6007) *
               C14997 +
           (C20349 * C817 + C93819 * C965 + C20350 * C5823 + C93737 * C6013) *
               C93843 +
           (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
               C14999 +
           (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
               C14991) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C14995 +
           (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
               C93842 +
           (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
           C20388 * C14999 + C20389 * C14991) *
              C93662 * C93635 * C93621 * C97 -
          ((C20384 + C20385) * C14991 + (C20386 + C20387) * C14999 +
           (C20383 + C20382) * C93843 + (C20381 + C20380) * C14997 +
           (C20379 + C20378) * C93842 + (C20377 + C20376) * C14995) *
              C93662 * C93635 * C93621 * C98 +
          (C20388 * C14995 + C20389 * C93842 + (C20387 + C20386) * C14997 +
           (C20385 + C20384) * C93843 +
           (C20349 * C112 + C93819 * C280 + C20350 * C2697 + C93737 * C2856) *
               C14999 +
           (C20349 * C118 + C93819 * C286 + C20350 * C2698 + C93737 * C2857) *
               C14991) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C14995 +
           (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
               C93842 +
           (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
           C20388 * C14999 + C20389 * C14991) *
              C93662 * C1382 -
          ((C20350 * C1399 + C93737 * C1547 + C20349 * C1394 + C93819 * C1542) *
               C14991 +
           (C20350 * C1391 + C93737 * C1539 + C20349 * C1386 + C93819 * C1534) *
               C14999 +
           (C20350 * C1398 + C93737 * C1546 + C20349 * C1395 + C93819 * C1543) *
               C93843 +
           (C20350 * C1390 + C93737 * C1538 + C20349 * C1387 + C93819 * C1535) *
               C14997 +
           (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 + C93819 * C1544) *
               C93842 +
           (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 + C93819 * C1536) *
               C14995) *
              C93662 * C1383 +
          ((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
            C93737 * C11345) *
               C14995 +
           (C20349 * C1397 + C93819 * C1545 + C20350 * C11107 +
            C93737 * C11349) *
               C93842 +
           (C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
            C93737 * C11344) *
               C14997 +
           (C20349 * C1398 + C93819 * C1546 + C20350 * C11106 +
            C93737 * C11348) *
               C93843 +
           (C20349 * C1391 + C93819 * C1539 + C20350 * C13010 +
            C93737 * C13241) *
               C14999 +
           (C20349 * C1399 + C93819 * C1547 + C20350 * C13011 +
            C93737 * C13242) *
               C14991) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C188 +
                      (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                       C93843 * C363 + C14999 * C191 + C14991 * C364) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                       C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                          C188 +
                      (C14995 * C1470 + C93842 * C1602 + C14997 * C1469 +
                       C93843 * C1601 + C14999 * C1468 + C14991 * C1600) *
                          C93662) *
                         C93737) *
                        C93635 * C800 -
                    (((C19612 + C19613 + C19614) * C93662 +
                      (C19615 + C19616 + C19617) * C188) *
                         C93737 +
                     ((C16111 + C16110 + C16109) * C93662 +
                      (C16108 + C16107 + C16106) * C188) *
                         C93819) *
                        C93635 * C801 +
                    (((C16117 + C16116 + C16115) * C188 +
                      (C16114 + C16113 + C16112) * C93662) *
                         C93819 +
                     ((C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                       C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                          C188 +
                      (C14995 * C5922 + C93842 * C6094 + C14997 * C5921 +
                       C93843 * C6093 + C14999 * C7738 + C14991 * C7968) *
                          C93662) *
                         C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C188 +
                      (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                       C93843 * C363 + C14999 * C191 + C14991 * C364) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                       C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                          C188 +
                      (C14995 * C1470 + C93842 * C1602 + C14997 * C1469 +
                       C93843 * C1601 + C14999 * C1468 + C14991 * C1600) *
                          C93662) *
                         C93737) *
                        C93635 * C93621 * C97 -
                    (((C14999 * C1467 + C14991 * C1599 + C14997 * C1468 +
                       C93843 * C1600 + C14995 * C1469 + C93842 * C1601) *
                          C93662 +
                      (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                       C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                          C188) *
                         C93737 +
                     ((C14999 * C192 + C14991 * C365 + C14997 * C191 +
                       C93843 * C364 + C14995 * C190 + C93842 * C363) *
                          C93662 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C188) *
                         C93819) *
                        C93635 * C93621 * C98 +
                    (((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                       C93843 * C117 + C14999 * C112 + C14991 * C118) *
                          C188 +
                      (C14995 * C191 + C93842 * C364 + C14997 * C192 +
                       C93843 * C365 + C14999 * C193 + C14991 * C366) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1386 + C93842 * C1394 + C14997 * C1385 +
                       C93843 * C1393 + C14999 * C2697 + C14991 * C2698) *
                          C188 +
                      (C14995 * C1468 + C93842 * C1600 + C14997 * C1467 +
                       C93843 * C1599 + C14999 * C2770 + C14991 * C2942) *
                          C93662) *
                         C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C188 +
                      (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                       C93843 * C363 + C14999 * C191 + C14991 * C364) *
                          C93662) *
                         C93819 +
                     ((C21959 + C21960 + C21961) * C188 +
                      (C21962 + C21963 + C21964) * C93662) *
                         C93737) *
                        C1382 -
                    (((C21965 + C21966 + C21967) * C93662 +
                      (C21968 + C21969 + C21970) * C188) *
                         C93737 +
                     ((C21964 + C21963 + C21962) * C93662 +
                      (C21961 + C21960 + C21959) * C188) *
                         C93819) *
                        C1383 +
                    (((C21970 + C21969 + C21968) * C188 +
                      (C21967 + C21966 + C21965) * C93662) *
                         C93819 +
                     ((C14995 * C11103 + C93842 * C11107 + C14997 * C11102 +
                       C93843 * C11106 + C14999 * C13010 + C14991 * C13011) *
                          C188 +
                      (C14995 * C11224 + C93842 * C11427 + C14997 * C11223 +
                       C93843 * C11426 + C14999 * C13133 + C14991 * C13359) *
                          C93662) *
                         C93737) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
            C448 * C93843 + C449 * C14991) *
               C93819 +
           (C11572 * C93842 + C3026 * C93843 + C3025 * C14991) * C93737) *
              C93635 * C800 -
          (((C418 * C3411 + C3716 + C3716 + C93662 * C3711) * C14991 +
            C12477 * C93843 + C14494 * C93842) *
               C93737 +
           (C2311 * C14991 + C2312 * C93843 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93842) *
               C93819) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93842 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93843 +
            (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C14991) *
               C93819 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93842 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93843 +
            (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C14991) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
            C448 * C93843 + C449 * C14991) *
               C93819 +
           (C11572 * C93842 + C3026 * C93843 + C3025 * C14991) * C93737) *
              C93635 * C93621 * C97 -
          ((C3024 * C14991 + C3025 * C93843 + C3026 * C93842) * C93737 +
           (C450 * C14991 + C449 * C93843 + C448 * C93842) * C93819) *
              C93635 * C93621 * C98 +
          ((C449 * C93842 + C450 * C93843 + C451 * C14991) * C93819 +
           (C3025 * C93842 + C3024 * C93843 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C14991) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
            C448 * C93843 + C449 * C14991) *
               C93819 +
           (C22045 + C22046 + C22047) * C93737) *
              C1382 -
          ((C22048 + C22049 + C22050) * C93737 +
           (C22047 + C22046 + C22045) * C93819) *
              C1383 +
          ((C22050 + C22049 + C22048) * C93819 +
           (C11575 * C93842 + C11574 * C93843 +
            (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C14991) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C188 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93662) *
               C93842 +
           ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
           C20633 * C14991) *
              C93635 * C800 -
          (((C20350 * C3493 + C93737 * C3785 + C20349 * C887 + C93819 * C1143) *
                C93662 +
            (C20350 * C3411 + C93737 * C3567 + C20349 * C805 + C93819 * C953) *
                C188) *
               C14991 +
           ((C20350 * C3492 + C93737 * C3784 + C20349 * C888 + C93819 * C1144) *
                C93662 +
            (C20350 * C3410 + C93737 * C3566 + C20349 * C806 + C93819 * C954) *
                C188) *
               C93843 +
           ((C20350 * C3491 + C93737 * C3783 + C20349 * C889 + C93819 * C1145) *
                C93662 +
            (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                C188) *
               C93842) *
              C93635 * C801 +
          (((C20349 * C808 + C93819 * C956 + C20350 * C5818 + C93737 * C6008) *
                C188 +
            (C20349 * C890 + C93819 * C1146 + C20350 * C5922 + C93737 * C6266) *
                C93662) *
               C93842 +
           ((C20349 * C809 + C93819 * C957 + C20350 * C5817 + C93737 * C6007) *
                C188 +
            (C20349 * C891 + C93819 * C1147 + C20350 * C5921 + C93737 * C6265) *
                C93662) *
               C93843 +
           ((C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                C188 +
            (C20349 * C892 + C93819 * C1148 + C20350 * C7738 + C93737 * C8184) *
                C93662) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C188 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93662) *
               C93842 +
           ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
           C20633 * C14991) *
              C93635 * C93621 * C97 -
          (((C20629 + C20630) * C93662 + (C20386 + C20387) * C188) * C14991 +
           ((C20628 + C20627) * C93662 + (C20381 + C20380) * C188) * C93843 +
           ((C20626 + C20625) * C93662 + (C20377 + C20376) * C188) * C93842) *
              C93635 * C93621 * C98 +
          (C20633 * C93842 +
           ((C20387 + C20386) * C188 + (C20630 + C20629) * C93662) * C93843 +
           ((C20349 * C112 + C93819 * C280 + C20350 * C2697 + C93737 * C2856) *
                C188 +
            (C20349 * C193 + C93819 * C505 + C20350 * C2770 + C93737 * C3092) *
                C93662) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C188 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93662) *
               C93842 +
           ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
           C20633 * C14991) *
              C1382 -
          (((C20350 * C1473 + C93737 * C1729 + C20349 * C1468 +
             C93819 * C1724) *
                C93662 +
            (C20350 * C1391 + C93737 * C1539 + C20349 * C1386 +
             C93819 * C1534) *
                C188) *
               C14991 +
           ((C20350 * C1472 + C93737 * C1728 + C20349 * C1469 +
             C93819 * C1725) *
                C93662 +
            (C20350 * C1390 + C93737 * C1538 + C20349 * C1387 +
             C93819 * C1535) *
                C188) *
               C93843 +
           ((C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
             C93819 * C1726) *
                C93662 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C188) *
               C93842) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C188 +
            (C20349 * C1471 + C93819 * C1727 + C20350 * C11224 +
             C93737 * C11655) *
                C93662) *
               C93842 +
           ((C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
             C93737 * C11344) *
                C188 +
            (C20349 * C1472 + C93819 * C1728 + C20350 * C11223 +
             C93737 * C11654) *
                C93662) *
               C93843 +
           ((C20349 * C1391 + C93819 * C1539 + C20350 * C13010 +
             C93737 * C13241) *
                C188 +
            (C20349 * C1473 + C93819 * C1729 + C20350 * C13133 +
             C93737 * C13586) *
                C93662) *
               C14991) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C20349 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93819 +
                     (C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                      C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                         C20350 +
                     (C14995 * C1536 + C93842 * C1784 + C14997 * C1535 +
                      C93843 * C1783 + C14999 * C1534 + C14991 * C1782) *
                         C93737) *
                        C93662 * C93635 * C800 -
                    ((C19924 + C19925 + C19926) * C93737 +
                     (C19615 + C19616 + C19617) * C20350 +
                     (C16366 + C16365 + C16364) * C93819 +
                     (C16108 + C16107 + C16106) * C20349) *
                        C93662 * C93635 * C801 +
                    ((C16117 + C16116 + C16115) * C20349 +
                     (C16369 + C16368 + C16367) * C93819 +
                     (C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                      C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                         C20350 +
                     (C14995 * C6008 + C93842 * C6346 + C14997 * C6007 +
                      C93843 * C6345 + C14999 * C7856 + C14991 * C8295) *
                         C93737) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C20349 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93819 +
                     (C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                      C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                         C20350 +
                     (C14995 * C1536 + C93842 * C1784 + C14997 * C1535 +
                      C93843 * C1783 + C14999 * C1534 + C14991 * C1782) *
                         C93737) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C14999 * C1533 + C14991 * C1781 + C14997 * C1534 +
                      C93843 * C1782 + C14995 * C1535 + C93842 * C1783) *
                         C93737 +
                     (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                      C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                         C20350 +
                     (C14999 * C279 + C14991 * C582 + C14997 * C278 +
                      C93843 * C581 + C14995 * C277 + C93842 * C580) *
                         C93819 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C20349) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                      C93843 * C117 + C14999 * C112 + C14991 * C118) *
                         C20349 +
                     (C14995 * C278 + C93842 * C581 + C14997 * C279 +
                      C93843 * C582 + C14999 * C280 + C14991 * C583) *
                         C93819 +
                     (C14995 * C1386 + C93842 * C1394 + C14997 * C1385 +
                      C93843 * C1393 + C14999 * C2697 + C14991 * C2698) *
                         C20350 +
                     (C14995 * C1534 + C93842 * C1782 + C14997 * C1533 +
                      C93843 * C1781 + C14999 * C2856 + C14991 * C3174) *
                         C93737) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C20349 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93819 +
                     (C21959 + C21960 + C21961) * C20350 +
                     (C22211 + C22212 + C22213) * C93737) *
                        C93662 * C1382 -
                    ((C22214 + C22215 + C22216) * C93737 +
                     (C21968 + C21969 + C21970) * C20350 +
                     (C22213 + C22212 + C22211) * C93819 +
                     (C21961 + C21960 + C21959) * C20349) *
                        C93662 * C1383 +
                    ((C21970 + C21969 + C21968) * C20349 +
                     (C22216 + C22215 + C22214) * C93819 +
                     (C14995 * C11103 + C93842 * C11107 + C14997 * C11102 +
                      C93843 * C11106 + C14999 * C13010 + C14991 * C13011) *
                         C20350 +
                     (C14995 * C11345 + C93842 * C11733 + C14997 * C11344 +
                      C93843 * C11732 + C14999 * C13241 + C14991 * C13694) *
                         C93737) *
                        C93662 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C20349 +
            (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
            C11842 * C93737) *
               C93842 +
           (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
              C93635 * C800 -
          (((C188 * C3567 + C93662 * C3925) * C93737 +
            (C188 * C3411 + C93662 * C3493) * C20350 + C2539 * C93819 +
            C2074 * C20349) *
               C14991 +
           (C12793 * C93737 + C12150 * C20350 + C2540 * C93819 +
            C2076 * C20349) *
               C93843 +
           (C14808 * C93737 + C14160 * C20350 +
            (C188 * C955 + C93662 * C1261) * C93819 +
            (C188 * C807 + C93662 * C889) * C20349) *
               C93842) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C20349 +
            (C188 * C956 + C93662 * C1262) * C93819 +
            (C188 * C5818 + C93662 * C5922) * C20350 +
            (C188 * C6008 + C93662 * C6426) * C93737) *
               C93842 +
           ((C188 * C809 + C93662 * C891) * C20349 +
            (C188 * C957 + C93662 * C1263) * C93819 +
            (C188 * C5817 + C93662 * C5921) * C20350 +
            (C188 * C6007 + C93662 * C6425) * C93737) *
               C93843 +
           ((C188 * C810 + C93662 * C892) * C20349 +
            (C188 * C958 + C93662 * C1264) * C93819 +
            (C188 * C7631 + C93662 * C7738) * C20350 +
            (C188 * C7856 + C93662 * C8394) * C93737) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C20349 +
            (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
            C11842 * C93737) *
               C93842 +
           (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
              C93635 * C93621 * C97 -
          ((C20790 + C20791 + C20792 + C20793) * C14991 +
           (C20789 + C20788 + C20787 + C20786) * C93843 +
           (C20785 + C20784 + C20783 + C20782) * C93842) *
              C93635 * C93621 * C98 +
          (C20796 * C93842 + (C20793 + C20792 + C20791 + C20790) * C93843 +
           (C225 * C20349 + C657 * C93819 +
            (C188 * C2697 + C93662 * C2770) * C20350 +
            (C188 * C2856 + C93662 * C3241) * C93737) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C20349 +
            (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
            C11842 * C93737) *
               C93842 +
           (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
              C1382 -
          ((C10223 * C93737 + C9696 * C20350 + C3253 * C93819 +
            C2788 * C20349) *
               C14991 +
           (C10222 * C93737 + C9693 * C20350 + C3254 * C93819 +
            C2790 * C20349) *
               C93843 +
           (C11843 * C93737 + C11254 * C20350 + C11842 * C93819 +
            C11252 * C20349) *
               C93842) *
              C1383 +
          ((C11254 * C20349 + C11843 * C93819 + C11259 * C20350 +
            C11845 * C93737) *
               C93842 +
           (C9693 * C20349 + C10222 * C93819 + C11257 * C20350 +
            C11844 * C93737) *
               C93843 +
           (C9696 * C20349 + C10223 * C93819 +
            (C188 * C13010 + C93662 * C13133) * C20350 +
            (C188 * C13241 + C93662 * C13805) * C93737) *
               C14991) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93662 * C93842 +
                     (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                        C93635 * C800 -
                    ((C20871 * C3411 + C21582 + C21582 + C93737 * C3995 +
                      C20870 * C805 + C21583 + C21583 + C93819 * C1317) *
                         C93662 * C14991 +
                     (C20871 * C3410 + C21584 + C21584 + C93737 * C3994 +
                      C20870 * C806 + C21585 + C21585 + C93819 * C1318) *
                         C93662 * C93843 +
                     (C20871 * C3409 + C21586 + C21586 + C93737 * C3993 +
                      C20870 * C807 + C21587 + C21587 + C93819 * C1319) *
                         C93662 * C93842) *
                        C93635 * C801 +
                    ((C20870 * C808 + C21588 + C21588 + C93819 * C1320 +
                      C20871 * C5818 + C21589 + C21589 + C93737 * C6506) *
                         C93662 * C93842 +
                     (C20870 * C809 + C21590 + C21590 + C93819 * C1321 +
                      C20871 * C5817 + C21591 + C21591 + C93737 * C6505) *
                         C93662 * C93843 +
                     (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
                      C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                         C93662 * C14991) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93662 * C93842 +
                     (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                        C93635 * C93621 * C97 -
                    ((C20911 + C20912) * C93662 * C14991 +
                     (C20910 + C20909) * C93662 * C93843 +
                     (C20908 + C20907) * C93662 * C93842) *
                        C93635 * C93621 * C98 +
                    (C20914 * C93842 + (C20912 + C20911) * C93662 * C93843 +
                     (C20870 * C112 + C20893 + C20893 + C93819 * C718 +
                      C20871 * C2697 + C20894 + C20894 + C93737 * C3323) *
                         C93662 * C14991) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93662 * C93842 +
                     (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                        C1382 -
                    ((C20871 * C1391 + C22365 + C22365 + C93737 * C1903 +
                      C20870 * C1386 + C22366 + C22366 + C93819 * C1898) *
                         C93662 * C14991 +
                     (C20871 * C1390 + C22367 + C22367 + C93737 * C1902 +
                      C20870 * C1387 + C22368 + C22368 + C93819 * C1899) *
                         C93662 * C93843 +
                     (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                      C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                         C93662 * C93842) *
                        C1383 +
                    ((C20870 * C1389 + C22371 + C22371 + C93819 * C1901 +
                      C20871 * C11103 + C22372 + C22372 + C93737 * C11920) *
                         C93662 * C93842 +
                     (C20870 * C1390 + C22373 + C22373 + C93819 * C1902 +
                      C20871 * C11102 + C22374 + C22374 + C93737 * C11919) *
                         C93662 * C93843 +
                     (C20870 * C1391 + C22375 + C22375 + C93819 * C1903 +
                      C20871 * C13010 + C22376 + C22376 + C93737 * C13910) *
                         C93662 * C14991) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                       C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                       C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                          C93819 +
                      (C21695 + C21696 + C21697) * C93737) *
                         C93662 * C2695 -
                     ((C21698 + C21699 + C21700) * C93737 +
                      (C21697 + C21696 + C21695) * C93819) *
                         C93662 * C2696) *
                        C93621 * C1981 +
                    (((C23452 + C23453 + C23454) * C93819 +
                      (C14994 * C1390 + C23443 + C23443 + C93842 * C1406 +
                       C14996 * C1391 + C23444 + C23444 + C93843 * C1407 +
                       C14998 * C1392 + C23445 + C23445 + C14991 * C1408) *
                          C93737) *
                         C93662 * C2696 -
                     ((C23454 + C23453 + C23452) * C93737 +
                      (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                       C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                       C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                          C93819) *
                         C93662 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C14995 +
             (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
             C219 * C93843 + C220 * C14999 + C221 * C14991) *
                C93819 +
            (C21775 + C21776 + C21777 + C21778 + C21779 + C21780) * C93737) *
               C2695 -
           ((C21781 + C21782 + C21783 + C21784 + C21785 + C21786) * C93737 +
            (C21780 + C21779 + C21778 + C21777 + C21776 + C21775) * C93819) *
               C2696) *
              C93621 * C1981 +
          (((C23553 + C23554 + C23555 + C23556 + C23557 + C23558) * C93819 +
            (C9693 * C14995 + C9694 * C93842 + C9696 * C14997 + C9695 * C93843 +
             (C188 * C1392 + C93662 * C1474) * C14999 +
             (C188 * C1400 + C93662 * C1482) * C14991) *
                C93737) *
               C2696 -
           ((C23558 + C23557 + C23556 + C23555 + C23554 + C23553) * C93737 +
            (C223 * C14991 + C222 * C14999 + C221 * C93843 + C220 * C14997 +
             C219 * C93842 + C218 * C14995) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C14995 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93842 +
            (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
            C20388 * C14999 + C20389 * C14991) *
               C93662 * C2695 -
           ((C23673 + C23674) * C14991 + (C23675 + C23676) * C14999 +
            (C23677 + C23678) * C93843 + (C23679 + C23680) * C14997 +
            (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
             C93819 * C1544) *
                C93842 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C14995) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C23680 + C23679) * C14995 + (C23678 + C23677) * C93842 +
            (C23676 + C23675) * C14997 + (C23674 + C23673) * C93843 +
            (C20349 * C1385 + C93819 * C1533 + C20350 * C1392 +
             C93737 * C1540) *
                C14999 +
            (C20349 * C1393 + C93819 * C1541 + C20350 * C1400 +
             C93737 * C1548) *
                C14991) *
               C93662 * C2696 -
           ((C20384 + C20385) * C14991 + (C20386 + C20387) * C14999 +
            (C20383 + C20382) * C93843 + (C20381 + C20380) * C14997 +
            (C20379 + C20378) * C93842 + (C20377 + C20376) * C14995) *
               C93662 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                        C93843 * C115 + C14999 * C110 + C14991 * C116) *
                           C188 +
                       (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                        C93843 * C363 + C14999 * C191 + C14991 * C364) *
                           C93662) *
                          C93819 +
                      ((C21959 + C21960 + C21961) * C188 +
                       (C21962 + C21963 + C21964) * C93662) *
                          C93737) *
                         C2695 -
                     (((C21965 + C21966 + C21967) * C93662 +
                       (C21968 + C21969 + C21970) * C188) *
                          C93737 +
                      ((C21964 + C21963 + C21962) * C93662 +
                       (C21961 + C21960 + C21959) * C188) *
                          C93819) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C23791 + C23792 + C23793) * C188 +
                       (C23794 + C23795 + C23796) * C93662) *
                          C93819 +
                      ((C14995 * C1390 + C93842 * C1398 + C14997 * C1391 +
                        C93843 * C1399 + C14999 * C1392 + C14991 * C1400) *
                           C188 +
                       (C14995 * C1472 + C93842 * C1604 + C14997 * C1473 +
                        C93843 * C1605 + C14999 * C1474 + C14991 * C1606) *
                           C93662) *
                          C93737) *
                         C2696 -
                     (((C23796 + C23795 + C23794) * C93662 +
                       (C23793 + C23792 + C23791) * C188) *
                          C93737 +
                      ((C14999 * C192 + C14991 * C365 + C14997 * C191 +
                        C93843 * C364 + C14995 * C190 + C93842 * C363) *
                           C93662 +
                       (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                        C93843 * C116 + C14995 * C109 + C93842 * C115) *
                           C188) *
                          C93819) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
             C448 * C93843 + C449 * C14991) *
                C93819 +
            (C22045 + C22046 + C22047) * C93737) *
               C2695 -
           ((C22048 + C22049 + C22050) * C93737 +
            (C22047 + C22046 + C22045) * C93819) *
               C2696) *
              C93621 * C1981 +
          (((C23895 + C23896 + C23897) * C93819 +
            (C9966 * C93842 + C9967 * C93843 +
             (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C14991) *
                C93737) *
               C2696 -
           ((C23897 + C23896 + C23895) * C93737 +
            (C450 * C14991 + C449 * C93843 + C448 * C93842) * C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C188 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C93662) *
                C93842 +
            ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
            C20633 * C14991) *
               C2695 -
           (((C24004 + C24005) * C93662 + (C23675 + C23676) * C188) * C14991 +
            ((C24006 + C24007) * C93662 + (C23679 + C23680) * C188) * C93843 +
            ((C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C93662 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C188) *
                C93842) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C188 + (C24007 + C24006) * C93662) * C93842 +
            ((C23676 + C23675) * C188 + (C24005 + C24004) * C93662) * C93843 +
            ((C20349 * C1385 + C93819 * C1533 + C20350 * C1392 +
              C93737 * C1540) *
                 C188 +
             (C20349 * C1467 + C93819 * C1723 + C20350 * C1474 +
              C93737 * C1730) *
                 C93662) *
                C14991) *
               C2696 -
           (((C20629 + C20630) * C93662 + (C20386 + C20387) * C188) * C14991 +
            ((C20628 + C20627) * C93662 + (C20381 + C20380) * C188) * C93843 +
            ((C20626 + C20625) * C93662 + (C20377 + C20376) * C188) * C93842) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C20349 +
                      (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                       C93843 * C580 + C14999 * C278 + C14991 * C581) *
                          C93819 +
                      (C21959 + C21960 + C21961) * C20350 +
                      (C22211 + C22212 + C22213) * C93737) *
                         C93662 * C2695 -
                     ((C22214 + C22215 + C22216) * C93737 +
                      (C21968 + C21969 + C21970) * C20350 +
                      (C22213 + C22212 + C22211) * C93819 +
                      (C21961 + C21960 + C21959) * C20349) *
                         C93662 * C2696) *
                        C93621 * C1981 +
                    (((C23791 + C23792 + C23793) * C20349 +
                      (C24112 + C24113 + C24114) * C93819 +
                      (C14995 * C1390 + C93842 * C1398 + C14997 * C1391 +
                       C93843 * C1399 + C14999 * C1392 + C14991 * C1400) *
                          C20350 +
                      (C14995 * C1538 + C93842 * C1786 + C14997 * C1539 +
                       C93843 * C1787 + C14999 * C1540 + C14991 * C1788) *
                          C93737) *
                         C93662 * C2696 -
                     ((C24114 + C24113 + C24112) * C93737 +
                      (C23793 + C23792 + C23791) * C20350 +
                      (C14999 * C279 + C14991 * C582 + C14997 * C278 +
                       C93843 * C581 + C14995 * C277 + C93842 * C580) *
                          C93819 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C20349) *
                         C93662 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C20349 +
             (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
             C11842 * C93737) *
                C93842 +
            (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
               C2695 -
           ((C24213 + C24214 + C24215 + C24216) * C14991 +
            (C24217 + C24218 + C24219 + C24220) * C93843 +
            (C11843 * C93737 + C11254 * C20350 + C11842 * C93819 +
             C11252 * C20349) *
                C93842) *
               C2696) *
              C93621 * C1981 +
          (((C24220 + C24219 + C24218 + C24217) * C93842 +
            (C24216 + C24215 + C24214 + C24213) * C93843 +
            (C2786 * C20349 + C3252 * C93819 +
             (C188 * C1392 + C93662 * C1474) * C20350 +
             (C188 * C1540 + C93662 * C1846) * C93737) *
                C14991) *
               C2696 -
           ((C20790 + C20791 + C20792 + C20793) * C14991 +
            (C20789 + C20788 + C20787 + C20786) * C93843 +
            (C20785 + C20784 + C20783 + C20782) * C93842) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93662 * C93842 +
                      (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                         C2695 -
                     ((C24337 + C24338) * C93662 * C14991 +
                      (C24339 + C24340) * C93662 * C93843 +
                      (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                       C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                          C93662 * C93842) *
                         C2696) *
                        C93621 * C1981 +
                    (((C24340 + C24339) * C93662 * C93842 +
                      (C24338 + C24337) * C93662 * C93843 +
                      (C20870 * C1385 + C24327 + C24327 + C93819 * C1897 +
                       C20871 * C1392 + C24328 + C24328 + C93737 * C1904) *
                          C93662 * C14991) *
                         C2696 -
                     ((C20911 + C20912) * C93662 * C14991 +
                      (C20910 + C20909) * C93662 * C93843 +
                      (C20908 + C20907) * C93662 * C93842) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93819 +
                     (C14994 * C1388 + C16597 + C16597 + C93842 * C1404 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14998 * C1386 + C16595 + C16595 + C14991 * C1402) *
                         C93737) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C14998 * C1385 + C18312 + C18312 + C14991 * C1401 +
                      C14996 * C1386 + C18311 + C18311 + C93843 * C1402 +
                      C14994 * C1387 + C18310 + C18310 + C93842 * C1403) *
                         C93737 +
                     (C14998 * C111 + C15010 + C15010 + C14991 * C123 +
                      C14996 * C110 + C15011 + C15011 + C93843 * C122 +
                      C14994 * C109 + C15012 + C15012 + C93842 * C121) *
                         C93819) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C14994 * C110 + C15013 + C15013 + C93842 * C122 +
                      C14996 * C111 + C15014 + C15014 + C93843 * C123 +
                      C14998 * C112 + C15015 + C15015 + C14991 * C124) *
                         C93819 +
                     (C14994 * C1386 + C20199 + C20199 + C93842 * C1402 +
                      C14996 * C1385 + C20200 + C20200 + C93843 * C1401 +
                      C14998 * C2697 + C20201 + C20201 + C14991 * C2699) *
                         C93737) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14994 * C108 + C15001 + C15001 + C93842 * C120 +
                      C14996 * C109 + C15002 + C15002 + C93843 * C121 +
                      C14998 * C110 + C15003 + C15003 + C14991 * C122) *
                         C93819 +
                     (C14994 * C1388 + C16597 + C16597 + C93842 * C1404 +
                      C14996 * C1387 + C16596 + C16596 + C93843 * C1403 +
                      C14998 * C1386 + C16595 + C16595 + C14991 * C1402) *
                         C93737) *
                        C93662 * C93635 * C800 -
                    ((C19297 + C19298 + C19299) * C93737 +
                     (C15844 + C15843 + C15842) * C93819) *
                        C93662 * C93635 * C801 +
                    ((C15847 + C15846 + C15845) * C93819 +
                     (C14994 * C5818 + C19288 + C19288 + C93842 * C5830 +
                      C14996 * C5817 + C19289 + C19289 + C93843 * C5829 +
                      C14998 * C7631 + C19290 + C19290 + C14991 * C7633) *
                         C93737) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C14995 +
            (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
            C219 * C93843 + C220 * C14999 + C221 * C14991) *
               C93819 +
           (C11252 * C14995 + C11253 * C93842 + C2790 * C14997 +
            C2789 * C93843 + C2788 * C14999 + C2787 * C14991) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C2785 * C14991 + C2786 * C14999 + C2787 * C93843 + C2788 * C14997 +
            C2789 * C93842 + C2790 * C14995) *
               C93737 +
           (C223 * C14991 + C222 * C14999 + C221 * C93843 + C220 * C14997 +
            C219 * C93842 + C218 * C14995) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C220 * C14995 + C221 * C93842 + C222 * C14997 + C223 * C93843 +
            C225 * C14999 + C224 * C14991) *
               C93819 +
           (C2788 * C14995 + C2787 * C93842 + C2786 * C14997 + C2785 * C93843 +
            (C188 * C2697 + C93662 * C2770) * C14999 +
            (C188 * C2698 + C93662 * C2771) * C14991) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C14995 +
            (C188 * C114 + C93662 * C195) * C93842 + C218 * C14997 +
            C219 * C93843 + C220 * C14999 + C221 * C14991) *
               C93819 +
           (C11252 * C14995 + C11253 * C93842 + C2790 * C14997 +
            C2789 * C93843 + C2788 * C14999 + C2787 * C14991) *
               C93737) *
              C93635 * C800 -
          (((C188 * C3415 + C93662 * C3497) * C14991 +
            (C188 * C3411 + C93662 * C3493) * C14999 + C12149 * C93843 +
            C12150 * C14997 + C14161 * C93842 + C14160 * C14995) *
               C93737 +
           (C2073 * C14991 + C2074 * C14999 + C2075 * C93843 + C2076 * C14997 +
            (C188 * C815 + C93662 * C897) * C93842 +
            (C188 * C807 + C93662 * C889) * C14995) *
               C93819) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C14995 +
            (C188 * C816 + C93662 * C898) * C93842 +
            (C188 * C809 + C93662 * C891) * C14997 +
            (C188 * C817 + C93662 * C899) * C93843 +
            (C188 * C810 + C93662 * C892) * C14999 +
            (C188 * C818 + C93662 * C900) * C14991) *
               C93819 +
           ((C188 * C5818 + C93662 * C5922) * C14995 +
            (C188 * C5824 + C93662 * C5928) * C93842 +
            (C188 * C5817 + C93662 * C5921) * C14997 +
            (C188 * C5823 + C93662 * C5927) * C93843 +
            (C188 * C7631 + C93662 * C7738) * C14999 +
            (C188 * C7632 + C93662 * C7739) * C14991) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C14995 +
           (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
               C93842 +
           (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
           C20388 * C14999 + C20389 * C14991) *
              C93662 * C93635 * C93621 * C97 -
          ((C20384 + C20385) * C14991 + (C20386 + C20387) * C14999 +
           (C20383 + C20382) * C93843 + (C20381 + C20380) * C14997 +
           (C20379 + C20378) * C93842 + (C20377 + C20376) * C14995) *
              C93662 * C93635 * C93621 * C98 +
          (C20388 * C14995 + C20389 * C93842 + (C20387 + C20386) * C14997 +
           (C20385 + C20384) * C93843 +
           (C20349 * C112 + C93819 * C280 + C20350 * C2697 + C93737 * C2856) *
               C14999 +
           (C20349 * C118 + C93819 * C286 + C20350 * C2698 + C93737 * C2857) *
               C14991) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C14995 +
           (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
               C93842 +
           (C20376 + C20377) * C14997 + (C20378 + C20379) * C93843 +
           C20388 * C14999 + C20389 * C14991) *
              C93662 * C93635 * C800 -
          ((C20350 * C3415 + C93737 * C3571 + C20349 * C813 + C93819 * C961) *
               C14991 +
           (C20350 * C3411 + C93737 * C3567 + C20349 * C805 + C93819 * C953) *
               C14999 +
           (C20350 * C3414 + C93737 * C3570 + C20349 * C814 + C93819 * C962) *
               C93843 +
           (C20350 * C3410 + C93737 * C3566 + C20349 * C806 + C93819 * C954) *
               C14997 +
           (C20350 * C3413 + C93737 * C3569 + C20349 * C815 + C93819 * C963) *
               C93842 +
           (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
               C14995) *
              C93662 * C93635 * C801 +
          ((C20349 * C808 + C93819 * C956 + C20350 * C5818 + C93737 * C6008) *
               C14995 +
           (C20349 * C816 + C93819 * C964 + C20350 * C5824 + C93737 * C6014) *
               C93842 +
           (C20349 * C809 + C93819 * C957 + C20350 * C5817 + C93737 * C6007) *
               C14997 +
           (C20349 * C817 + C93819 * C965 + C20350 * C5823 + C93737 * C6013) *
               C93843 +
           (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
               C14999 +
           (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
               C14991) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C188 +
                      (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                       C93843 * C363 + C14999 * C191 + C14991 * C364) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                       C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                          C188 +
                      (C14995 * C1470 + C93842 * C1602 + C14997 * C1469 +
                       C93843 * C1601 + C14999 * C1468 + C14991 * C1600) *
                          C93662) *
                         C93737) *
                        C93635 * C93621 * C97 -
                    (((C14999 * C1467 + C14991 * C1599 + C14997 * C1468 +
                       C93843 * C1600 + C14995 * C1469 + C93842 * C1601) *
                          C93662 +
                      (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                       C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                          C188) *
                         C93737 +
                     ((C14999 * C192 + C14991 * C365 + C14997 * C191 +
                       C93843 * C364 + C14995 * C190 + C93842 * C363) *
                          C93662 +
                      (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                       C93843 * C116 + C14995 * C109 + C93842 * C115) *
                          C188) *
                         C93819) *
                        C93635 * C93621 * C98 +
                    (((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                       C93843 * C117 + C14999 * C112 + C14991 * C118) *
                          C188 +
                      (C14995 * C191 + C93842 * C364 + C14997 * C192 +
                       C93843 * C365 + C14999 * C193 + C14991 * C366) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1386 + C93842 * C1394 + C14997 * C1385 +
                       C93843 * C1393 + C14999 * C2697 + C14991 * C2698) *
                          C188 +
                      (C14995 * C1468 + C93842 * C1600 + C14997 * C1467 +
                       C93843 * C1599 + C14999 * C2770 + C14991 * C2942) *
                          C93662) *
                         C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                       C93843 * C115 + C14999 * C110 + C14991 * C116) *
                          C188 +
                      (C14995 * C189 + C93842 * C362 + C14997 * C190 +
                       C93843 * C363 + C14999 * C191 + C14991 * C364) *
                          C93662) *
                         C93819 +
                     ((C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                       C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                          C188 +
                      (C14995 * C1470 + C93842 * C1602 + C14997 * C1469 +
                       C93843 * C1601 + C14999 * C1468 + C14991 * C1600) *
                          C93662) *
                         C93737) *
                        C93635 * C800 -
                    (((C19612 + C19613 + C19614) * C93662 +
                      (C19615 + C19616 + C19617) * C188) *
                         C93737 +
                     ((C16111 + C16110 + C16109) * C93662 +
                      (C16108 + C16107 + C16106) * C188) *
                         C93819) *
                        C93635 * C801 +
                    (((C16117 + C16116 + C16115) * C188 +
                      (C16114 + C16113 + C16112) * C93662) *
                         C93819 +
                     ((C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                       C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                          C188 +
                      (C14995 * C5922 + C93842 * C6094 + C14997 * C5921 +
                       C93843 * C6093 + C14999 * C7738 + C14991 * C7968) *
                          C93662) *
                         C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
            C448 * C93843 + C449 * C14991) *
               C93819 +
           (C11572 * C93842 + C3026 * C93843 + C3025 * C14991) * C93737) *
              C93635 * C93621 * C97 -
          ((C3024 * C14991 + C3025 * C93843 + C3026 * C93842) * C93737 +
           (C450 * C14991 + C449 * C93843 + C448 * C93842) * C93819) *
              C93635 * C93621 * C98 +
          ((C449 * C93842 + C450 * C93843 + C451 * C14991) * C93819 +
           (C3025 * C93842 + C3024 * C93843 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C14991) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93842 +
            C448 * C93843 + C449 * C14991) *
               C93819 +
           (C11572 * C93842 + C3026 * C93843 + C3025 * C14991) * C93737) *
              C93635 * C800 -
          (((C418 * C3411 + C3716 + C3716 + C93662 * C3711) * C14991 +
            C12477 * C93843 + C14494 * C93842) *
               C93737 +
           (C2311 * C14991 + C2312 * C93843 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93842) *
               C93819) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93842 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93843 +
            (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C14991) *
               C93819 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93842 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93843 +
            (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C14991) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C188 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93662) *
               C93842 +
           ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
           C20633 * C14991) *
              C93635 * C93621 * C97 -
          (((C20629 + C20630) * C93662 + (C20386 + C20387) * C188) * C14991 +
           ((C20628 + C20627) * C93662 + (C20381 + C20380) * C188) * C93843 +
           ((C20626 + C20625) * C93662 + (C20377 + C20376) * C188) * C93842) *
              C93635 * C93621 * C98 +
          (C20633 * C93842 +
           ((C20387 + C20386) * C188 + (C20630 + C20629) * C93662) * C93843 +
           ((C20349 * C112 + C93819 * C280 + C20350 * C2697 + C93737 * C2856) *
                C188 +
            (C20349 * C193 + C93819 * C505 + C20350 * C2770 + C93737 * C3092) *
                C93662) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C188 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93662) *
               C93842 +
           ((C20376 + C20377) * C188 + (C20625 + C20626) * C93662) * C93843 +
           C20633 * C14991) *
              C93635 * C800 -
          (((C20350 * C3493 + C93737 * C3785 + C20349 * C887 + C93819 * C1143) *
                C93662 +
            (C20350 * C3411 + C93737 * C3567 + C20349 * C805 + C93819 * C953) *
                C188) *
               C14991 +
           ((C20350 * C3492 + C93737 * C3784 + C20349 * C888 + C93819 * C1144) *
                C93662 +
            (C20350 * C3410 + C93737 * C3566 + C20349 * C806 + C93819 * C954) *
                C188) *
               C93843 +
           ((C20350 * C3491 + C93737 * C3783 + C20349 * C889 + C93819 * C1145) *
                C93662 +
            (C20350 * C3409 + C93737 * C3565 + C20349 * C807 + C93819 * C955) *
                C188) *
               C93842) *
              C93635 * C801 +
          (((C20349 * C808 + C93819 * C956 + C20350 * C5818 + C93737 * C6008) *
                C188 +
            (C20349 * C890 + C93819 * C1146 + C20350 * C5922 + C93737 * C6266) *
                C93662) *
               C93842 +
           ((C20349 * C809 + C93819 * C957 + C20350 * C5817 + C93737 * C6007) *
                C188 +
            (C20349 * C891 + C93819 * C1147 + C20350 * C5921 + C93737 * C6265) *
                C93662) *
               C93843 +
           ((C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                C188 +
            (C20349 * C892 + C93819 * C1148 + C20350 * C7738 + C93737 * C8184) *
                C93662) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C20349 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93819 +
                     (C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                      C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                         C20350 +
                     (C14995 * C1536 + C93842 * C1784 + C14997 * C1535 +
                      C93843 * C1783 + C14999 * C1534 + C14991 * C1782) *
                         C93737) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C14999 * C1533 + C14991 * C1781 + C14997 * C1534 +
                      C93843 * C1782 + C14995 * C1535 + C93842 * C1783) *
                         C93737 +
                     (C14999 * C1385 + C14991 * C1393 + C14997 * C1386 +
                      C93843 * C1394 + C14995 * C1387 + C93842 * C1395) *
                         C20350 +
                     (C14999 * C279 + C14991 * C582 + C14997 * C278 +
                      C93843 * C581 + C14995 * C277 + C93842 * C580) *
                         C93819 +
                     (C14999 * C111 + C14991 * C117 + C14997 * C110 +
                      C93843 * C116 + C14995 * C109 + C93842 * C115) *
                         C20349) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C14995 * C110 + C93842 * C116 + C14997 * C111 +
                      C93843 * C117 + C14999 * C112 + C14991 * C118) *
                         C20349 +
                     (C14995 * C278 + C93842 * C581 + C14997 * C279 +
                      C93843 * C582 + C14999 * C280 + C14991 * C583) *
                         C93819 +
                     (C14995 * C1386 + C93842 * C1394 + C14997 * C1385 +
                      C93843 * C1393 + C14999 * C2697 + C14991 * C2698) *
                         C20350 +
                     (C14995 * C1534 + C93842 * C1782 + C14997 * C1533 +
                      C93843 * C1781 + C14999 * C2856 + C14991 * C3174) *
                         C93737) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14995 * C108 + C93842 * C114 + C14997 * C109 +
                      C93843 * C115 + C14999 * C110 + C14991 * C116) *
                         C20349 +
                     (C14995 * C276 + C93842 * C579 + C14997 * C277 +
                      C93843 * C580 + C14999 * C278 + C14991 * C581) *
                         C93819 +
                     (C14995 * C1388 + C93842 * C1396 + C14997 * C1387 +
                      C93843 * C1395 + C14999 * C1386 + C14991 * C1394) *
                         C20350 +
                     (C14995 * C1536 + C93842 * C1784 + C14997 * C1535 +
                      C93843 * C1783 + C14999 * C1534 + C14991 * C1782) *
                         C93737) *
                        C93662 * C93635 * C800 -
                    ((C19924 + C19925 + C19926) * C93737 +
                     (C19615 + C19616 + C19617) * C20350 +
                     (C16366 + C16365 + C16364) * C93819 +
                     (C16108 + C16107 + C16106) * C20349) *
                        C93662 * C93635 * C801 +
                    ((C16117 + C16116 + C16115) * C20349 +
                     (C16369 + C16368 + C16367) * C93819 +
                     (C14995 * C5818 + C93842 * C5824 + C14997 * C5817 +
                      C93843 * C5823 + C14999 * C7631 + C14991 * C7632) *
                         C20350 +
                     (C14995 * C6008 + C93842 * C6346 + C14997 * C6007 +
                      C93843 * C6345 + C14999 * C7856 + C14991 * C8295) *
                         C93737) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C20349 +
            (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
            C11842 * C93737) *
               C93842 +
           (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
              C93635 * C93621 * C97 -
          ((C20790 + C20791 + C20792 + C20793) * C14991 +
           (C20789 + C20788 + C20787 + C20786) * C93843 +
           (C20785 + C20784 + C20783 + C20782) * C93842) *
              C93635 * C93621 * C98 +
          (C20796 * C93842 + (C20793 + C20792 + C20791 + C20790) * C93843 +
           (C225 * C20349 + C657 * C93819 +
            (C188 * C2697 + C93662 * C2770) * C20350 +
            (C188 * C2856 + C93662 * C3241) * C93737) *
               C14991) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C20349 +
            (C188 * C276 + C93662 * C635) * C93819 + C11252 * C20350 +
            C11842 * C93737) *
               C93842 +
           (C20782 + C20783 + C20784 + C20785) * C93843 + C20796 * C14991) *
              C93635 * C800 -
          (((C188 * C3567 + C93662 * C3925) * C93737 +
            (C188 * C3411 + C93662 * C3493) * C20350 + C2539 * C93819 +
            C2074 * C20349) *
               C14991 +
           (C12793 * C93737 + C12150 * C20350 + C2540 * C93819 +
            C2076 * C20349) *
               C93843 +
           (C14808 * C93737 + C14160 * C20350 +
            (C188 * C955 + C93662 * C1261) * C93819 +
            (C188 * C807 + C93662 * C889) * C20349) *
               C93842) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C20349 +
            (C188 * C956 + C93662 * C1262) * C93819 +
            (C188 * C5818 + C93662 * C5922) * C20350 +
            (C188 * C6008 + C93662 * C6426) * C93737) *
               C93842 +
           ((C188 * C809 + C93662 * C891) * C20349 +
            (C188 * C957 + C93662 * C1263) * C93819 +
            (C188 * C5817 + C93662 * C5921) * C20350 +
            (C188 * C6007 + C93662 * C6425) * C93737) *
               C93843 +
           ((C188 * C810 + C93662 * C892) * C20349 +
            (C188 * C958 + C93662 * C1264) * C93819 +
            (C188 * C7631 + C93662 * C7738) * C20350 +
            (C188 * C7856 + C93662 * C8394) * C93737) *
               C14991) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93662 * C93842 +
                     (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                        C93635 * C93621 * C97 -
                    ((C20911 + C20912) * C93662 * C14991 +
                     (C20910 + C20909) * C93662 * C93843 +
                     (C20908 + C20907) * C93662 * C93842) *
                        C93635 * C93621 * C98 +
                    (C20914 * C93842 + (C20912 + C20911) * C93662 * C93843 +
                     (C20870 * C112 + C20893 + C20893 + C93819 * C718 +
                      C20871 * C2697 + C20894 + C20894 + C93737 * C3323) *
                         C93662 * C14991) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93662 * C93842 +
                     (C20907 + C20908) * C93662 * C93843 + C20914 * C14991) *
                        C93635 * C800 -
                    ((C20871 * C3411 + C21582 + C21582 + C93737 * C3995 +
                      C20870 * C805 + C21583 + C21583 + C93819 * C1317) *
                         C93662 * C14991 +
                     (C20871 * C3410 + C21584 + C21584 + C93737 * C3994 +
                      C20870 * C806 + C21585 + C21585 + C93819 * C1318) *
                         C93662 * C93843 +
                     (C20871 * C3409 + C21586 + C21586 + C93737 * C3993 +
                      C20870 * C807 + C21587 + C21587 + C93819 * C1319) *
                         C93662 * C93842) *
                        C93635 * C801 +
                    ((C20870 * C808 + C21588 + C21588 + C93819 * C1320 +
                      C20871 * C5818 + C21589 + C21589 + C93737 * C6506) *
                         C93662 * C93842 +
                     (C20870 * C809 + C21590 + C21590 + C93819 * C1321 +
                      C20871 * C5817 + C21591 + C21591 + C93737 * C6505) *
                         C93662 * C93843 +
                     (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
                      C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                         C93662 * C14991) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 +
                      C128 + C128 + C90 * C121 + C104 * C110 + C129 + C129 +
                      C91 * C122 + C106 * C111 + C130 + C130 + C92 * C123) *
                         C93673 * C93662 * C93635 * C1979 -
                     (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 +
                      C830 + C830 + C91 * C821 + C102 * C806 + C831 + C831 +
                      C90 * C822 + C100 * C807 + C832 + C832 + C89 * C823) *
                         C93673 * C93662 * C93635 * C1980) *
                        C1981 +
                    ((C100 * C806 + C1987 + C1987 + C89 * C822 + C102 * C805 +
                      C1988 + C1988 + C90 * C821 + C104 * C804 + C1989 + C1989 +
                      C91 * C820 + C106 * C1983 + C1990 + C1990 + C92 * C1985) *
                         C93673 * C93662 * C93635 * C1980 -
                     (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 +
                      C132 + C132 + C91 * C123 + C102 * C110 + C133 + C133 +
                      C90 * C122 + C100 * C109 + C134 + C134 + C89 * C121) *
                         C93673 * C93662 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 +
                       C4082 * C109 + C4086 + C4086 + C93587 * C121) *
                          C93673 * C4077 +
                      (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
                         C93635 * C1979 -
                     ((C4961 + C4962) * C93673 * C4079 +
                      (C4960 + C4959) * C93673 * C4078 +
                      (C4958 + C4957) * C93673 * C4077) *
                         C93635 * C1980) *
                        C1981 +
                    (((C6637 + C6638) * C93673 * C4077 +
                      (C6639 + C6640) * C93673 * C4078 +
                      (C4080 * C4916 + C6627 + C6627 + C4075 * C4924 +
                       C4082 * C6615 + C6628 + C6628 + C93587 * C6617) *
                          C93673 * C4079) *
                         C93635 * C1980 -
                     ((C6640 + C6639) * C93673 * C4079 +
                      (C6638 + C6637) * C93673 * C4078 +
                      (C4082 * C110 + C4095 + C4095 + C93587 * C122 +
                       C4080 * C109 + C4096 + C4096 + C4075 * C121) *
                          C93673 * C4077) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C93635 * C1979 -
           (C2071 * C92 + C2072 * C107 + C2073 * C91 + C2074 * C105 +
            C2075 * C90 + C2076 * C103 + (C188 * C815 + C93662 * C897) * C89 +
            (C188 * C807 + C93662 * C889) * C101) *
               C93673 * C93635 * C1980) *
              C1981 +
          ((C2076 * C101 + C2075 * C89 + C2074 * C103 + C2073 * C90 +
            C2072 * C105 + C2071 * C91 +
            (C188 * C1983 + C93662 * C2056) * C107 +
            (C188 * C1984 + C93662 * C2057) * C92) *
               C93673 * C93635 * C1980 -
           (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
            C220 * C103 + C219 * C89 + C218 * C101) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C93635 * C1979 -
           ((C6753 + C6754 + C6755) * C93587 + (C6756 + C6757 + C6758) * C4083 +
            (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C4075 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C4081) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C6758 + C6757 + C6756) * C4081 + (C6755 + C6754 + C6753) * C4075 +
            (C4176 * C805 + C4077 * C887 + C4177 * C810 + C4078 * C892 +
             C4178 * C6615 + C4079 * C6738) *
                C4083 +
            (C4176 * C813 + C4077 * C895 + C4177 * C818 + C4078 * C900 +
             C4178 * C6616 + C4079 * C6739) *
                C93587) *
               C93673 * C93635 * C1980 -
           ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
            (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C93635 * C1979 -
           (C2157 * C92 + C2158 * C107 + C2159 * C91 + C2160 * C105 +
            C2161 * C90 + C2162 * C103 + (C275 * C815 + C93673 * C963) * C89 +
            (C275 * C807 + C93673 * C955) * C101) *
               C93662 * C93635 * C1980) *
              C1981 +
          ((C2162 * C101 + C2161 * C89 + C2160 * C103 + C2159 * C90 +
            C2158 * C105 + C2157 * C91 +
            (C275 * C1983 + C93673 * C2142) * C107 +
            (C275 * C1984 + C93673 * C2143) * C92) *
               C93662 * C93635 * C1980 -
           (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
            C307 * C103 + C306 * C89 + C305 * C101) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C93635 * C1979 -
           ((C5161 + C5162 + C5163 + C5164) * C4079 +
            (C5140 + C5139 + C5160 + C5159) * C4078 +
            (C5134 + C5133 + C5158 + C5157) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C6859 + C6860 + C6861 + C6862) * C4077 +
            (C6863 + C6864 + C6865 + C6866) * C4078 +
            (C5154 * C4081 + C5153 * C4075 +
             (C275 * C6615 + C93673 * C6856) * C4083 +
             (C275 * C6616 + C93673 * C6857) * C93587) *
                C4079) *
               C93635 * C1980 -
           ((C6866 + C6865 + C6864 + C6863) * C4079 +
            (C6862 + C6861 + C6860 + C6859) * C4078 +
            (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C93635 * C1979 -
           ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
             C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
                C93662 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C188) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C101 * C806 + C89 * C814 + C103 * C805 + C90 * C813 + C105 * C804 +
             C91 * C812 + C107 * C1983 + C92 * C1984) *
                C188 +
            (C101 * C888 + C89 * C1020 + C103 * C887 + C90 * C1019 +
             C105 * C886 + C91 * C1018 + C107 * C2056 + C92 * C2228) *
                C93662) *
               C93673 * C93635 * C1980 -
           ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
             C90 * C364 + C101 * C190 + C89 * C363) *
                C93662 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C188) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C93635 * C1979 -
           ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
            (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
            (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C6982 + C6983) * C4176 + (C6984 + C6985) * C4077 +
            (C6986 + C6987) * C4177 + (C6988 + C6989) * C4078 +
            (C4081 * C4916 + C4075 * C4920 + C4083 * C6615 + C93587 * C6616) *
                C4178 +
            (C4081 * C5038 + C4075 * C5241 + C4083 * C6738 + C93587 * C6964) *
                C4079) *
               C93673 * C93635 * C1980 -
           ((C6989 + C6988) * C4079 + (C6987 + C6986) * C4178 +
            (C6985 + C6984) * C4078 + (C6983 + C6982) * C4177 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C4077 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C4176) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[20] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 +
                      C448 * C90 + C449 * C91 + C450 * C92) *
                         C93673 * C93635 * C1979 -
                     (C2310 * C92 + C2311 * C91 + C2312 * C90 +
                      (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    ((C2312 * C89 + C2311 * C90 + C2310 * C91 +
                      (C418 * C1983 + C2303 + C2303 + C93662 * C2295) * C92) *
                         C93673 * C93635 * C1980 -
                     (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 +
                       C4450 * C807 + C4454 + C4454 + C4078 * C1079 +
                       C4451 * C808 + C4455 + C4455 + C4079 * C1080) *
                          C4075 +
                      (C4489 + C4490 + C4491) * C93587) *
                         C93673 * C93635 * C1979 -
                     ((C7104 + C7105 + C7106) * C93587 +
                      (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 +
                       C4450 * C808 + C5366 + C5366 + C4078 * C1080 +
                       C4449 * C807 + C5367 + C5367 + C4077 * C1079) *
                          C4075) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    (((C7106 + C7105 + C7104) * C4075 +
                      (C4449 * C805 + C7095 + C7095 + C4077 * C1077 +
                       C4450 * C810 + C7096 + C7096 + C4078 * C1082 +
                       C4451 * C6615 + C7097 + C7097 + C4079 * C7087) *
                          C93587) *
                         C93673 * C93635 * C1980 -
                     ((C4492 + C4493 + C4494) * C93587 +
                      (C4491 + C4490 + C4489) * C4075) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C93635 * C1979 -
           ((C2392 + C2382) * C92 + (C2393 + C2385) * C91 +
            (C2394 + C2388) * C90 +
            ((C275 * C889 + C93673 * C1145) * C93662 +
             (C275 * C807 + C93673 * C955) * C188) *
                C89) *
               C93635 * C1980) *
              C1981 +
          (((C2388 + C2394) * C89 + (C2385 + C2393) * C90 +
            (C2382 + C2392) * C91 +
            ((C275 * C1983 + C93673 * C2142) * C188 +
             (C275 * C2056 + C93673 * C2378) * C93662) *
                C92) *
               C93635 * C1980 -
           ((C527 + C519) * C92 + (C526 + C514) * C91 + (C525 + C511) * C90 +
            (C524 + C508) * C89) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C93635 * C1979 -
           ((C7206 + C7207 + C7208 + C7209 + C7210 + C7211) * C93587 +
            (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 + C5151 * C4177 +
             C5460 * C4077 + C5149 * C4176) *
                C4075) *
               C93635 * C1980) *
              C1981 +
          (((C7211 + C7210 + C7209 + C7208 + C7207 + C7206) * C4075 +
            (C2160 * C4176 + C2390 * C4077 + C4301 * C4177 + C4584 * C4078 +
             (C275 * C6615 + C93673 * C6856) * C4178 +
             (C275 * C6738 + C93673 * C7204) * C4079) *
                C93587) *
               C93635 * C1980 -
           ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
            (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C93635 * C1979 -
           ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
             C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
                C93673 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C275) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C101 * C806 + C89 * C814 + C103 * C805 + C90 * C813 + C105 * C804 +
             C91 * C812 + C107 * C1983 + C92 * C1984) *
                C275 +
            (C101 * C954 + C89 * C1202 + C103 * C953 + C90 * C1201 +
             C105 * C952 + C91 * C1200 + C107 * C2142 + C92 * C2460) *
                C93673) *
               C93662 * C93635 * C1980 -
           ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
             C90 * C581 + C101 * C277 + C89 * C580) *
                C93673 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C275) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C93635 * C1979 -
           (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
            ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
            ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
               C93635 * C1980) *
              C1981 +
          ((((C6982 + C6983) * C275 + (C7319 + C7320) * C93673) * C4077 +
            ((C6986 + C6987) * C275 + (C7321 + C7322) * C93673) * C4078 +
            ((C4081 * C4916 + C4075 * C4920 + C4083 * C6615 + C93587 * C6616) *
                 C275 +
             (C4081 * C5120 + C4075 * C5537 + C4083 * C6856 + C93587 * C7309) *
                 C93673) *
                C4079) *
               C93635 * C1980 -
           (((C7322 + C7321) * C93673 + (C6987 + C6986) * C275) * C4079 +
            ((C7320 + C7319) * C93673 + (C6983 + C6982) * C275) * C4078 +
            ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93673 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C275) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[20] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C188 * C108 + C93662 * C189) * C275 +
                       (C188 * C276 + C93662 * C635) * C93673) *
                          C89 +
                      (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
                         C93635 * C1979 -
                     ((C2541 + C2531) * C92 + (C2542 + C2534) * C91 +
                      (C2543 + C2537) * C90 +
                      ((C188 * C955 + C93662 * C1261) * C93673 +
                       (C188 * C807 + C93662 * C889) * C275) *
                          C89) *
                         C93635 * C1980) *
                        C1981 +
                    (((C2537 + C2543) * C89 + (C2534 + C2542) * C90 +
                      (C2531 + C2541) * C91 +
                      ((C188 * C1983 + C93662 * C2056) * C275 +
                       (C188 * C2142 + C93662 * C2527) * C93673) *
                          C92) *
                         C93635 * C1980 -
                     ((C661 + C653) * C92 + (C660 + C648) * C91 +
                      (C659 + C645) * C90 + (C658 + C642) * C89) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4176 * C108 + C4077 * C189 + C4177 * C807 +
                        C4078 * C889 + C4178 * C808 + C4079 * C890) *
                           C275 +
                       (C4176 * C276 + C4077 * C635 + C4177 * C955 +
                        C4078 * C1261 + C4178 * C956 + C4079 * C1262) *
                           C93673) *
                          C4075 +
                      ((C4204 + C4205 + C4206) * C275 +
                       (C4747 + C4748 + C4749) * C93673) *
                          C93587) *
                         C93635 * C1979 -
                     (((C7428 + C7429 + C7430) * C93673 +
                       (C6756 + C6757 + C6758) * C275) *
                          C93587 +
                      ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 +
                        C4078 * C1262 + C4176 * C955 + C4077 * C1261) *
                           C93673 +
                       (C4178 * C4917 + C4079 * C5039 + C4177 * C808 +
                        C4078 * C890 + C4176 * C807 + C4077 * C889) *
                           C275) *
                          C4075) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C6758 + C6757 + C6756) * C275 +
                       (C7430 + C7429 + C7428) * C93673) *
                          C4075 +
                      ((C4176 * C805 + C4077 * C887 + C4177 * C810 +
                        C4078 * C892 + C4178 * C6615 + C4079 * C6738) *
                           C275 +
                       (C4176 * C953 + C4077 * C1259 + C4177 * C958 +
                        C4078 * C1264 + C4178 * C6856 + C4079 * C7420) *
                           C93673) *
                          C93587) *
                         C93635 * C1980 -
                     (((C4750 + C4751 + C4752) * C93673 +
                       (C4213 + C4214 + C4215) * C275) *
                          C93587 +
                      ((C4749 + C4748 + C4747) * C93673 +
                       (C4206 + C4205 + C4204) * C275) *
                          C4075) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C93635 * C1979 -
           (C2627 * C92 + C2628 * C91 + C2629 * C90 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
               C93635 * C1980) *
              C1981 +
          ((C2629 * C89 + C2628 * C90 + C2627 * C91 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93662 * C92) *
               C93635 * C1980 -
           (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
               C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C93635 * C1979 -
           ((C7530 + C7531 + C7532) * C93587 +
            (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
               C93635 * C1980) *
              C1981 +
          (((C7532 + C7531 + C7530) * C4075 +
            (C2625 * C4077 + C4840 * C4078 +
             (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C4079) *
                C93587) *
               C93635 * C1980 -
           ((C4842 + C4833 + C4834) * C93587 +
            (C4841 + C4828 + C4827) * C4075) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
            C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
            C130 + C130 + C92 * C123) *
               C93673 * C93662 * C2695 -
           (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
            C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
            C100 * C1388 + C1413 + C1413 + C89 * C1404) *
               C93673 * C93662 * C2696) *
              C1979 +
          ((C100 * C3409 + C3422 + C3422 + C89 * C3417 + C102 * C3410 + C3423 +
            C3423 + C90 * C3418 + C104 * C3411 + C3424 + C3424 + C91 * C3419 +
            C106 * C3412 + C3425 + C3425 + C92 * C3420) *
               C93673 * C93662 * C2696 -
           (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 + C830 +
            C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 + C100 * C807 +
            C832 + C832 + C89 * C823) *
               C93673 * C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93673 * C4077 +
            (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
               C2695 -
           ((C8640 + C8641) * C93673 * C4079 +
            (C8642 + C8643) * C93673 * C4078 +
            (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
             C5841 + C5841 + C4075 * C1404) *
                C93673 * C4077) *
               C2696) *
              C1979 +
          (((C8643 + C8642) * C93673 * C4077 +
            (C8641 + C8640) * C93673 * C4078 +
            (C4080 * C8615 + C8630 + C8630 + C4075 * C8619 + C4082 * C8616 +
             C8631 + C8631 + C93587 * C8620) *
                C93673 * C4079) *
               C2696 -
           ((C4961 + C4962) * C93673 * C4079 +
            (C4960 + C4959) * C93673 * C4078 +
            (C4958 + C4957) * C93673 * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C2695 -
           (C2785 * C92 + C2786 * C107 + C2787 * C91 + C2788 * C105 +
            C2789 * C90 + C2790 * C103 + (C188 * C1396 + C93662 * C1478) * C89 +
            (C188 * C1388 + C93662 * C1470) * C101) *
               C93673 * C2696) *
              C1979 +
          (((C188 * C3409 + C93662 * C3491) * C101 +
            (C188 * C3413 + C93662 * C3495) * C89 +
            (C188 * C3410 + C93662 * C3492) * C103 +
            (C188 * C3414 + C93662 * C3496) * C90 +
            (C188 * C3411 + C93662 * C3493) * C105 +
            (C188 * C3415 + C93662 * C3497) * C91 +
            (C188 * C3412 + C93662 * C3494) * C107 +
            (C188 * C3416 + C93662 * C3498) * C92) *
               C93673 * C2696 -
           (C2071 * C92 + C2072 * C107 + C2073 * C91 + C2074 * C105 +
            C2075 * C90 + C2076 * C103 + (C188 * C815 + C93662 * C897) * C89 +
            (C188 * C807 + C93662 * C889) * C101) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C2695 -
           ((C7753 + C7754 + C7755) * C93587 + (C7756 + C7757 + C7758) * C4083 +
            (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
             C4176 * C1396 + C4077 * C1478) *
                C4075 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C4081) *
               C93673 * C2696) *
              C1979 +
          (((C4176 * C3409 + C4077 * C3491 + C4177 * C5818 + C4078 * C5922 +
             C4178 * C8615 + C4079 * C8741) *
                C4081 +
            (C4176 * C3413 + C4077 * C3495 + C4177 * C5824 + C4078 * C5928 +
             C4178 * C8617 + C4079 * C8743) *
                C4075 +
            (C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
             C4178 * C8616 + C4079 * C8742) *
                C4083 +
            (C4176 * C3414 + C4077 * C3496 + C4177 * C5823 + C4078 * C5927 +
             C4178 * C8618 + C4079 * C8744) *
                C93587) *
               C93673 * C2696 -
           ((C6753 + C6754 + C6755) * C93587 + (C6756 + C6757 + C6758) * C4083 +
            (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C4075 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C4081) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C2695 -
           (C2871 * C92 + C2872 * C107 + C2873 * C91 + C2874 * C105 +
            C2875 * C90 + C2876 * C103 + (C275 * C1396 + C93673 * C1544) * C89 +
            (C275 * C1388 + C93673 * C1536) * C101) *
               C93662 * C2696) *
              C1979 +
          (((C275 * C3409 + C93673 * C3565) * C101 +
            (C275 * C3413 + C93673 * C3569) * C89 +
            (C275 * C3410 + C93673 * C3566) * C103 +
            (C275 * C3414 + C93673 * C3570) * C90 +
            (C275 * C3411 + C93673 * C3567) * C105 +
            (C275 * C3415 + C93673 * C3571) * C91 +
            (C275 * C3412 + C93673 * C3568) * C107 +
            (C275 * C3416 + C93673 * C3572) * C92) *
               C93662 * C2696 -
           (C2157 * C92 + C2158 * C107 + C2159 * C91 + C2160 * C105 +
            C2161 * C90 + C2162 * C103 + (C275 * C815 + C93673 * C963) * C89 +
            (C275 * C807 + C93673 * C955) * C101) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C2695 -
           ((C8848 + C8849 + C8864 + C8865) * C4079 +
            (C8854 + C8855 + C8866 + C8867) * C4078 +
            (C2875 * C93587 + C2876 * C4083 +
             (C275 * C1396 + C93673 * C1544) * C4075 +
             (C275 * C1388 + C93673 * C1536) * C4081) *
                C4077) *
               C2696) *
              C1979 +
          (((C8867 + C8866 + C8855 + C8854) * C4077 +
            (C8865 + C8864 + C8849 + C8848) * C4078 +
            ((C275 * C8615 + C93673 * C8843) * C4081 +
             (C275 * C8617 + C93673 * C8845) * C4075 +
             (C275 * C8616 + C93673 * C8844) * C4083 +
             (C275 * C8618 + C93673 * C8846) * C93587) *
                C4079) *
               C2696 -
           ((C5161 + C5162 + C5163 + C5164) * C4079 +
            (C5140 + C5139 + C5160 + C5159) * C4078 +
            (C5134 + C5133 + C5158 + C5157) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C2695 -
           ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
             C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
                C93662 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C188) *
               C93673 * C2696) *
              C1979 +
          (((C101 * C3409 + C89 * C3413 + C103 * C3410 + C90 * C3414 +
             C105 * C3411 + C91 * C3415 + C107 * C3412 + C92 * C3416) *
                C188 +
            (C101 * C3491 + C89 * C3639 + C103 * C3492 + C90 * C3640 +
             C105 * C3493 + C91 * C3641 + C107 * C3494 + C92 * C3642) *
                C93662) *
               C93673 * C2696 -
           ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
             C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
                C93662 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C188) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C2695 -
           ((C8984 + C8985) * C4079 + (C8986 + C8987) * C4178 +
            (C8988 + C8989) * C4078 + (C8990 + C8991) * C4177 +
            (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
                C4077 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C4176) *
               C93673 * C2696) *
              C1979 +
          (((C8991 + C8990) * C4176 + (C8989 + C8988) * C4077 +
            (C8987 + C8986) * C4177 + (C8985 + C8984) * C4078 +
            (C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                C4178 +
            (C4081 * C8741 + C4075 * C8965 + C4083 * C8742 + C93587 * C8966) *
                C4079) *
               C93673 * C2696 -
           ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
            (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
            (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[21] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 +
                      C448 * C90 + C449 * C91 + C450 * C92) *
                         C93673 * C2695 -
                     (C3024 * C92 + C3025 * C91 + C3026 * C90 +
                      (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
                         C93673 * C2696) *
                        C1979 +
                    (((C418 * C3409 + C3714 + C3714 + C93662 * C3709) * C89 +
                      (C418 * C3410 + C3715 + C3715 + C93662 * C3710) * C90 +
                      (C418 * C3411 + C3716 + C3716 + C93662 * C3711) * C91 +
                      (C418 * C3412 + C3717 + C3717 + C93662 * C3712) * C92) *
                         C93673 * C2696 -
                     (C2310 * C92 + C2311 * C91 + C2312 * C90 +
                      (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 +
                       C4450 * C807 + C4454 + C4454 + C4078 * C1079 +
                       C4451 * C808 + C4455 + C4455 + C4079 * C1080) *
                          C4075 +
                      (C4489 + C4490 + C4491) * C93587) *
                         C93673 * C2695 -
                     ((C8084 + C8085 + C8086) * C93587 +
                      (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 +
                       C4450 * C3409 + C6184 + C6184 + C4078 * C3709 +
                       C4449 * C1388 + C6185 + C6185 + C4077 * C1660) *
                          C4075) *
                         C93673 * C2696) *
                        C1979 +
                    (((C4449 * C3409 + C9092 + C9092 + C4077 * C3709 +
                       C4450 * C5818 + C9093 + C9093 + C4078 * C6174 +
                       C4451 * C8615 + C9094 + C9094 + C4079 * C9089) *
                          C4075 +
                      (C4449 * C3410 + C9095 + C9095 + C4077 * C3710 +
                       C4450 * C5817 + C9096 + C9096 + C4078 * C6173 +
                       C4451 * C8616 + C9097 + C9097 + C4079 * C9090) *
                          C93587) *
                         C93673 * C2696 -
                     ((C7104 + C7105 + C7106) * C93587 +
                      (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 +
                       C4450 * C808 + C5366 + C5366 + C4078 * C1080 +
                       C4449 * C807 + C5367 + C5367 + C4077 * C1079) *
                          C4075) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C2695 -
           ((C3106 + C3096) * C92 + (C3107 + C3099) * C91 +
            (C3108 + C3102) * C90 +
            ((C275 * C1470 + C93673 * C1726) * C93662 +
             (C275 * C1388 + C93673 * C1536) * C188) *
                C89) *
               C2696) *
              C1979 +
          ((((C275 * C3409 + C93673 * C3565) * C188 +
             (C275 * C3491 + C93673 * C3783) * C93662) *
                C89 +
            ((C275 * C3410 + C93673 * C3566) * C188 +
             (C275 * C3492 + C93673 * C3784) * C93662) *
                C90 +
            ((C275 * C3411 + C93673 * C3567) * C188 +
             (C275 * C3493 + C93673 * C3785) * C93662) *
                C91 +
            ((C275 * C3412 + C93673 * C3568) * C188 +
             (C275 * C3494 + C93673 * C3786) * C93662) *
                C92) *
               C2696 -
           ((C2392 + C2382) * C92 + (C2393 + C2385) * C91 +
            (C2394 + C2388) * C90 +
            ((C275 * C889 + C93673 * C1145) * C93662 +
             (C275 * C807 + C93673 * C955) * C188) *
                C89) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C2695 -
           ((C8196 + C8188 + C8197 + C8191 + C8192 + C8193) * C93587 +
            (C9202 * C4079 + C8861 * C4178 + C9203 * C4078 + C8863 * C4177 +
             (C275 * C1470 + C93673 * C1726) * C4077 +
             (C275 * C1388 + C93673 * C1536) * C4176) *
                C4075) *
               C2696) *
              C1979 +
          (((C8863 * C4176 + C9203 * C4077 + C8861 * C4177 + C9202 * C4078 +
             (C275 * C8615 + C93673 * C8843) * C4178 +
             (C275 * C8741 + C93673 * C9195) * C4079) *
                C4075 +
            (C7870 * C4176 + C8195 * C4077 + C7868 * C4177 + C8194 * C4078 +
             (C275 * C8616 + C93673 * C8844) * C4178 +
             (C275 * C8742 + C93673 * C9196) * C4079) *
                C93587) *
               C2696 -
           ((C7206 + C7207 + C7208 + C7209 + C7210 + C7211) * C93587 +
            (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 + C5151 * C4177 +
             C5460 * C4077 + C5149 * C4176) *
                C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C2695 -
           ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
             C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
                C93673 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C275) *
               C93662 * C2696) *
              C1979 +
          (((C101 * C3409 + C89 * C3413 + C103 * C3410 + C90 * C3414 +
             C105 * C3411 + C91 * C3415 + C107 * C3412 + C92 * C3416) *
                C275 +
            (C101 * C3565 + C89 * C3853 + C103 * C3566 + C90 * C3854 +
             C105 * C3567 + C91 * C3855 + C107 * C3568 + C92 * C3856) *
                C93673) *
               C93662 * C2696 -
           ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
             C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
                C93673 +
            (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
             C90 * C814 + C101 * C807 + C89 * C815) *
                C275) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C2695 -
           (((C9312 + C9313) * C93673 + (C8986 + C8987) * C275) * C4079 +
            ((C9314 + C9315) * C93673 + (C8990 + C8991) * C275) * C4078 +
            ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                 C93673 +
             (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                 C275) *
                C4077) *
               C2696) *
              C1979 +
          ((((C8991 + C8990) * C275 + (C9315 + C9314) * C93673) * C4077 +
            ((C8987 + C8986) * C275 + (C9313 + C9312) * C93673) * C4078 +
            ((C4081 * C8615 + C4075 * C8617 + C4083 * C8616 + C93587 * C8618) *
                 C275 +
             (C4081 * C8843 + C4075 * C9301 + C4083 * C8844 + C93587 * C9302) *
                 C93673) *
                C4079) *
               C2696 -
           (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
            ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
            ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[21] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C188 * C108 + C93662 * C189) * C275 +
                       (C188 * C276 + C93662 * C635) * C93673) *
                          C89 +
                      (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
                         C2695 -
                     ((C3255 + C3245) * C92 + (C3256 + C3248) * C91 +
                      (C3257 + C3251) * C90 +
                      ((C188 * C1536 + C93662 * C1842) * C93673 +
                       (C188 * C1388 + C93662 * C1470) * C275) *
                          C89) *
                         C2696) *
                        C1979 +
                    ((((C188 * C3409 + C93662 * C3491) * C275 +
                       (C188 * C3565 + C93662 * C3923) * C93673) *
                          C89 +
                      ((C188 * C3410 + C93662 * C3492) * C275 +
                       (C188 * C3566 + C93662 * C3924) * C93673) *
                          C90 +
                      ((C188 * C3411 + C93662 * C3493) * C275 +
                       (C188 * C3567 + C93662 * C3925) * C93673) *
                          C91 +
                      ((C188 * C3412 + C93662 * C3494) * C275 +
                       (C188 * C3568 + C93662 * C3926) * C93673) *
                          C92) *
                         C2696 -
                     ((C2541 + C2531) * C92 + (C2542 + C2534) * C91 +
                      (C2543 + C2537) * C90 +
                      ((C188 * C955 + C93662 * C1261) * C93673 +
                       (C188 * C807 + C93662 * C889) * C275) *
                          C89) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4176 * C108 + C4077 * C189 + C4177 * C807 +
                        C4078 * C889 + C4178 * C808 + C4079 * C890) *
                           C275 +
                       (C4176 * C276 + C4077 * C635 + C4177 * C955 +
                        C4078 * C1261 + C4178 * C956 + C4079 * C1262) *
                           C93673) *
                          C4075 +
                      ((C4204 + C4205 + C4206) * C275 +
                       (C4747 + C4748 + C4749) * C93673) *
                          C93587) *
                         C2695 -
                     (((C8402 + C8403 + C8404) * C93673 +
                       (C7756 + C7757 + C7758) * C275) *
                          C93587 +
                      ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 +
                        C4078 * C3923 + C4176 * C1536 + C4077 * C1842) *
                           C93673 +
                       (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 +
                        C4078 * C3491 + C4176 * C1388 + C4077 * C1470) *
                           C275) *
                          C4075) *
                         C2696) *
                        C1979 +
                    ((((C4176 * C3409 + C4077 * C3491 + C4177 * C5818 +
                        C4078 * C5922 + C4178 * C8615 + C4079 * C8741) *
                           C275 +
                       (C4176 * C3565 + C4077 * C3923 + C4177 * C6008 +
                        C4078 * C6426 + C4178 * C8843 + C4079 * C9413) *
                           C93673) *
                          C4075 +
                      ((C4176 * C3410 + C4077 * C3492 + C4177 * C5817 +
                        C4078 * C5921 + C4178 * C8616 + C4079 * C8742) *
                           C275 +
                       (C4176 * C3566 + C4077 * C3924 + C4177 * C6007 +
                        C4078 * C6425 + C4178 * C8844 + C4079 * C9414) *
                           C93673) *
                          C93587) *
                         C2696 -
                     (((C7428 + C7429 + C7430) * C93673 +
                       (C6756 + C6757 + C6758) * C275) *
                          C93587 +
                      ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 +
                        C4078 * C1262 + C4176 * C955 + C4077 * C1261) *
                           C93673 +
                       (C4178 * C4917 + C4079 * C5039 + C4177 * C808 +
                        C4078 * C890 + C4176 * C807 + C4077 * C889) *
                           C275) *
                          C4075) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C2695 -
           (C3341 * C92 + C3342 * C91 + C3343 * C90 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
               C2696) *
              C1979 +
          (((C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C93662 * C89 +
            (C713 * C3410 + C3999 + C3999 + C93673 * C3994) * C93662 * C90 +
            (C713 * C3411 + C4000 + C4000 + C93673 * C3995) * C93662 * C91 +
            (C713 * C3412 + C4001 + C4001 + C93673 * C3996) * C93662 * C92) *
               C2696 -
           (C2627 * C92 + C2628 * C91 + C2629 * C90 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C2695 -
           ((C8516 + C8517 + C8508) * C93587 +
            (C9526 * C4079 + C9527 * C4078 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
                C4075) *
               C2696) *
              C1979 +
          (((C9527 * C4077 + C9526 * C4078 +
             (C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C4079) *
                C4075 +
            (C8515 * C4077 + C8514 * C4078 +
             (C713 * C8616 + C9521 + C9521 + C93673 * C9514) * C4079) *
                C93587) *
               C2696 -
           ((C7530 + C7531 + C7532) * C93587 +
            (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C800 -
          (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 + C830 +
           C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 + C100 * C807 +
           C832 + C832 + C89 * C823) *
              C93673 * C93662 * C93635 * C801 +
          (C100 * C808 + C833 + C833 + C89 * C824 + C102 * C809 + C834 + C834 +
           C90 * C825 + C104 * C810 + C835 + C835 + C91 * C826 + C106 * C811 +
           C836 + C836 + C92 * C827) *
              C93673 * C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C93621 * C97 -
          (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 + C132 +
           C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 + C100 * C109 +
           C134 + C134 + C89 * C121) *
              C93673 * C93662 * C93635 * C93621 * C98 +
          (C100 * C110 + C135 + C135 + C89 * C122 + C102 * C111 + C136 + C136 +
           C90 * C123 + C104 * C112 + C137 + C137 + C91 * C124 + C106 * C113 +
           C138 + C138 + C92 * C125) *
              C93673 * C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C1382 -
          (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
           C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
           C100 * C1388 + C1413 + C1413 + C89 * C1404) *
              C93673 * C93662 * C1383 +
          (C100 * C1389 + C1414 + C1414 + C89 * C1405 + C102 * C1390 + C1415 +
           C1415 + C90 * C1406 + C104 * C1391 + C1416 + C1416 + C91 * C1407 +
           C106 * C1392 + C1417 + C1417 + C92 * C1408) *
              C93673 * C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4080 * C807 + C4087 + C4087 + C4075 * C823 + C4082 * C806 + C4088 +
            C4088 + C93587 * C822) *
               C93673 * C4078 +
           (C4080 * C808 + C4089 + C4089 + C4075 * C824 + C4082 * C809 + C4090 +
            C4090 + C93587 * C825) *
               C93673 * C4079) *
              C93635 * C93621 * C97 -
          ((C4082 * C810 + C4091 + C4091 + C93587 * C826 + C4080 * C809 +
            C4092 + C4092 + C4075 * C825) *
               C93673 * C4079 +
           (C4082 * C805 + C4093 + C4093 + C93587 * C821 + C4080 * C806 +
            C4094 + C4094 + C4075 * C822) *
               C93673 * C4078 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C93673 * C4077) *
              C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C93673 * C4077 +
           (C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 + C4100 +
            C4100 + C93587 * C820) *
               C93673 * C4078 +
           (C4080 * C810 + C4101 + C4101 + C4075 * C826 + C4082 * C811 + C4102 +
            C4102 + C93587 * C827) *
               C93673 * C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C93635 * C800 -
          ((C4961 + C4962) * C93673 * C4079 + (C4960 + C4959) * C93673 * C4078 +
           (C4958 + C4957) * C93673 * C4077) *
              C93635 * C801 +
          (C4964 * C4077 + (C4962 + C4961) * C93673 * C4078 +
           (C4080 * C4918 + C4943 + C4943 + C4075 * C4926 + C4082 * C4919 +
            C4944 + C4944 + C93587 * C4927) *
               C93673 * C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C1382 -
          ((C4082 * C5817 + C5836 + C5836 + C93587 * C5829 + C4080 * C5818 +
            C5837 + C5837 + C4075 * C5830) *
               C93673 * C4079 +
           (C4082 * C3410 + C5838 + C5838 + C93587 * C3418 + C4080 * C3409 +
            C5839 + C5839 + C4075 * C3417) *
               C93673 * C4078 +
           (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
            C5841 + C5841 + C4075 * C1404) *
               C93673 * C4077) *
              C1383 +
          ((C4080 * C1389 + C5842 + C5842 + C4075 * C1405 + C4082 * C1390 +
            C5843 + C5843 + C93587 * C1406) *
               C93673 * C4077 +
           (C4080 * C5819 + C5844 + C5844 + C4075 * C5831 + C4082 * C5820 +
            C5845 + C5845 + C93587 * C5832) *
               C93673 * C4078 +
           (C4080 * C5821 + C5846 + C5846 + C4075 * C5833 + C4082 * C5822 +
            C5847 + C5847 + C93587 * C5834) *
               C93673 * C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C800 -
          ((C188 * C812 + C93662 * C894) * C92 +
           (C188 * C804 + C93662 * C886) * C107 +
           (C188 * C813 + C93662 * C895) * C91 +
           (C188 * C805 + C93662 * C887) * C105 +
           (C188 * C814 + C93662 * C896) * C90 +
           (C188 * C806 + C93662 * C888) * C103 +
           (C188 * C815 + C93662 * C897) * C89 +
           (C188 * C807 + C93662 * C889) * C101) *
              C93673 * C93635 * C801 +
          ((C188 * C808 + C93662 * C890) * C101 +
           (C188 * C816 + C93662 * C898) * C89 +
           (C188 * C809 + C93662 * C891) * C103 +
           (C188 * C817 + C93662 * C899) * C90 +
           (C188 * C810 + C93662 * C892) * C105 +
           (C188 * C818 + C93662 * C900) * C91 +
           (C188 * C811 + C93662 * C893) * C107 +
           (C188 * C819 + C93662 * C901) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
           C220 * C103 + C219 * C89 + C218 * C101) *
              C93673 * C93635 * C93621 * C98 +
          (C220 * C101 + C221 * C89 + C222 * C103 + C223 * C90 + C225 * C105 +
           C224 * C91 + (C188 * C113 + C93662 * C194) * C107 +
           (C188 * C119 + C93662 * C200) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C1382 -
          ((C188 * C1393 + C93662 * C1475) * C92 +
           (C188 * C1385 + C93662 * C1467) * C107 +
           (C188 * C1394 + C93662 * C1476) * C91 +
           (C188 * C1386 + C93662 * C1468) * C105 +
           (C188 * C1395 + C93662 * C1477) * C90 +
           (C188 * C1387 + C93662 * C1469) * C103 +
           (C188 * C1396 + C93662 * C1478) * C89 +
           (C188 * C1388 + C93662 * C1470) * C101) *
              C93673 * C1383 +
          ((C188 * C1389 + C93662 * C1471) * C101 +
           (C188 * C1397 + C93662 * C1479) * C89 +
           (C188 * C1390 + C93662 * C1472) * C103 +
           (C188 * C1398 + C93662 * C1480) * C90 +
           (C188 * C1391 + C93662 * C1473) * C105 +
           (C188 * C1399 + C93662 * C1481) * C91 +
           (C188 * C1392 + C93662 * C1474) * C107 +
           (C188 * C1400 + C93662 * C1482) * C92) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
           (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
              C93673 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C4081 + (C4212 + C4211 + C4210) * C4075 +
           (C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
            C4178 * C811 + C4079 * C893) *
               C4083 +
           (C4176 * C117 + C4077 * C198 + C4177 * C812 + C4078 * C894 +
            C4178 * C819 + C4079 * C901) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C800 -
          ((C4178 * C4920 + C4079 * C5042 + C4177 * C817 + C4078 * C899 +
            C4176 * C814 + C4077 * C896) *
               C93587 +
           (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
            C4176 * C806 + C4077 * C888) *
               C4083 +
           (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
            C4176 * C815 + C4077 * C897) *
               C4075 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C4081) *
              C93673 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C4081 +
           (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
            C4178 * C4922 + C4079 * C5044) *
               C4075 +
           (C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
            C4178 * C4919 + C4079 * C5041) *
               C4083 +
           (C4176 * C817 + C4077 * C899 + C4177 * C4920 + C4078 * C5042 +
            C4178 * C4923 + C4079 * C5045) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C1382 -
          ((C4178 * C5823 + C4079 * C5927 + C4177 * C3414 + C4078 * C3496 +
            C4176 * C1395 + C4077 * C1477) *
               C93587 +
           (C4178 * C5817 + C4079 * C5921 + C4177 * C3410 + C4078 * C3492 +
            C4176 * C1387 + C4077 * C1469) *
               C4083 +
           (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
            C4176 * C1396 + C4077 * C1478) *
               C4075 +
           (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
            C4176 * C1388 + C4077 * C1470) *
               C4081) *
              C93673 * C1383 +
          ((C4176 * C1389 + C4077 * C1471 + C4177 * C5819 + C4078 * C5923 +
            C4178 * C5821 + C4079 * C5924) *
               C4081 +
           (C4176 * C1397 + C4077 * C1479 + C4177 * C5825 + C4078 * C5929 +
            C4178 * C5827 + C4079 * C5930) *
               C4075 +
           (C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
            C4178 * C5822 + C4079 * C5926) *
               C4083 +
           (C4176 * C1398 + C4077 * C1480 + C4177 * C5826 + C4078 * C5931 +
            C4178 * C5828 + C4079 * C5932) *
               C93587) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C800 -
          ((C275 * C812 + C93673 * C960) * C92 +
           (C275 * C804 + C93673 * C952) * C107 +
           (C275 * C813 + C93673 * C961) * C91 +
           (C275 * C805 + C93673 * C953) * C105 +
           (C275 * C814 + C93673 * C962) * C90 +
           (C275 * C806 + C93673 * C954) * C103 +
           (C275 * C815 + C93673 * C963) * C89 +
           (C275 * C807 + C93673 * C955) * C101) *
              C93662 * C93635 * C801 +
          ((C275 * C808 + C93673 * C956) * C101 +
           (C275 * C816 + C93673 * C964) * C89 +
           (C275 * C809 + C93673 * C957) * C103 +
           (C275 * C817 + C93673 * C965) * C90 +
           (C275 * C810 + C93673 * C958) * C105 +
           (C275 * C818 + C93673 * C966) * C91 +
           (C275 * C811 + C93673 * C959) * C107 +
           (C275 * C819 + C93673 * C967) * C92) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C93621 * C97 -
          (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
           C307 * C103 + C306 * C89 + C305 * C101) *
              C93662 * C93635 * C93621 * C98 +
          (C307 * C101 + C308 * C89 + C309 * C103 + C310 * C90 + C312 * C105 +
           C311 * C91 + (C275 * C113 + C93673 * C281) * C107 +
           (C275 * C119 + C93673 * C287) * C92) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C1382 -
          ((C275 * C1393 + C93673 * C1541) * C92 +
           (C275 * C1385 + C93673 * C1533) * C107 +
           (C275 * C1394 + C93673 * C1542) * C91 +
           (C275 * C1386 + C93673 * C1534) * C105 +
           (C275 * C1395 + C93673 * C1543) * C90 +
           (C275 * C1387 + C93673 * C1535) * C103 +
           (C275 * C1396 + C93673 * C1544) * C89 +
           (C275 * C1388 + C93673 * C1536) * C101) *
              C93662 * C1383 +
          ((C275 * C1389 + C93673 * C1537) * C101 +
           (C275 * C1397 + C93673 * C1545) * C89 +
           (C275 * C1390 + C93673 * C1538) * C103 +
           (C275 * C1398 + C93673 * C1546) * C90 +
           (C275 * C1391 + C93673 * C1539) * C105 +
           (C275 * C1399 + C93673 * C1547) * C91 +
           (C275 * C1392 + C93673 * C1540) * C107 +
           (C275 * C1400 + C93673 * C1548) * C92) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           ((C275 * C807 + C93673 * C955) * C4081 +
            (C275 * C815 + C93673 * C963) * C4075 + C2162 * C4083 +
            C2161 * C93587) *
               C4078 +
           ((C275 * C808 + C93673 * C956) * C4081 +
            (C275 * C816 + C93673 * C964) * C4075 + C4298 * C4083 +
            C4299 * C93587) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C4083 + C4299 * C4075 + C4298 * C4081) *
               C4079 +
           (C2159 * C93587 + C2160 * C4083 + C2161 * C4075 + C2162 * C4081) *
               C4078 +
           (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
               C4077) *
              C93635 * C93621 * C98 +
          ((C307 * C4081 + C308 * C4075 + C309 * C4083 + C310 * C93587) *
               C4077 +
           (C2160 * C4081 + C2159 * C4075 + C2158 * C4083 + C2157 * C93587) *
               C4078 +
           (C4301 * C4081 + C4300 * C4075 +
            (C275 * C811 + C93673 * C959) * C4083 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C93635 * C800 -
          ((C5161 + C5162 + C5163 + C5164) * C4079 +
           (C5140 + C5139 + C5160 + C5159) * C4078 +
           (C5134 + C5133 + C5158 + C5157) * C4077) *
              C93635 * C801 +
          (C5167 * C4077 + (C5164 + C5163 + C5162 + C5161) * C4078 +
           ((C275 * C4918 + C93673 * C5122) * C4081 +
            (C275 * C4922 + C93673 * C5126) * C4075 +
            (C275 * C4919 + C93673 * C5123) * C4083 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C1382 -
          (((C275 * C5823 + C93673 * C6013) * C93587 +
            (C275 * C5817 + C93673 * C6007) * C4083 +
            (C275 * C5824 + C93673 * C6014) * C4075 +
            (C275 * C5818 + C93673 * C6008) * C4081) *
               C4079 +
           ((C275 * C3414 + C93673 * C3570) * C93587 +
            (C275 * C3410 + C93673 * C3566) * C4083 +
            (C275 * C3413 + C93673 * C3569) * C4075 +
            (C275 * C3409 + C93673 * C3565) * C4081) *
               C4078 +
           (C2875 * C93587 + C2876 * C4083 +
            (C275 * C1396 + C93673 * C1544) * C4075 +
            (C275 * C1388 + C93673 * C1536) * C4081) *
               C4077) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C4081 +
            (C275 * C1397 + C93673 * C1545) * C4075 +
            (C275 * C1390 + C93673 * C1538) * C4083 +
            (C275 * C1398 + C93673 * C1546) * C93587) *
               C4077 +
           ((C275 * C5819 + C93673 * C6009) * C4081 +
            (C275 * C5825 + C93673 * C6015) * C4075 +
            (C275 * C5820 + C93673 * C6010) * C4083 +
            (C275 * C5826 + C93673 * C6016) * C93587) *
               C4078 +
           ((C275 * C5821 + C93673 * C6011) * C4081 +
            (C275 * C5827 + C93673 * C6017) * C4075 +
            (C275 * C5822 + C93673 * C6012) * C4083 +
            (C275 * C5828 + C93673 * C6018) * C93587) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C800 -
          ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
            C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
               C93662 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C188) *
              C93673 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C188 +
           (C101 * C890 + C89 * C1022 + C103 * C891 + C90 * C1023 +
            C105 * C892 + C91 * C1024 + C107 * C893 + C92 * C1025) *
               C93662) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C93621 * C97 -
          ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
            C90 * C364 + C101 * C190 + C89 * C363) *
               C93662 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C188) *
              C93673 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C188 +
           (C101 * C191 + C89 * C364 + C103 * C192 + C90 * C365 + C105 * C193 +
            C91 * C366 + C107 * C194 + C92 * C367) *
               C93662) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C1382 -
          ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
            C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
               C93662 +
           (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
            C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
               C188) *
              C93673 * C1383 +
          ((C101 * C1389 + C89 * C1397 + C103 * C1390 + C90 * C1398 +
            C105 * C1391 + C91 * C1399 + C107 * C1392 + C92 * C1400) *
               C188 +
           (C101 * C1471 + C89 * C1603 + C103 * C1472 + C90 * C1604 +
            C105 * C1473 + C91 * C1605 + C107 * C1474 + C92 * C1606) *
               C93662) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
               C4177 +
           (C4081 * C889 + C4075 * C1021 + C4083 * C888 + C93587 * C1020) *
               C4078 +
           (C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
               C4178 +
           (C4081 * C890 + C4075 * C1022 + C4083 * C891 + C93587 * C1023) *
               C4079) *
              C93673 * C93635 * C93621 * C97 -
          ((C4083 * C892 + C93587 * C1024 + C4081 * C891 + C4075 * C1023) *
               C4079 +
           (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
               C4178 +
           (C4083 * C887 + C93587 * C1019 + C4081 * C888 + C4075 * C1020) *
               C4078 +
           (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
               C4177 +
           (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
               C4077 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C4176) *
              C93673 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C4176 +
           (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
               C4077 +
           (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
               C4177 +
           (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
               C4078 +
           (C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
               C4178 +
           (C4081 * C892 + C4075 * C1024 + C4083 * C893 + C93587 * C1025) *
               C4079) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C93635 * C800 -
          ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
           (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
           (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
              C93673 * C93635 * C801 +
          (C5282 * C4176 + C5283 * C4077 + (C5281 + C5280) * C4177 +
           (C5279 + C5278) * C4078 +
           (C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
               C4178 +
           (C4081 * C5040 + C4075 * C5243 + C4083 * C5041 + C93587 * C5244) *
               C4079) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C1382 -
          ((C4083 * C5921 + C93587 * C6093 + C4081 * C5922 + C4075 * C6094) *
               C4079 +
           (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
               C4178 +
           (C4083 * C3492 + C93587 * C3640 + C4081 * C3491 + C4075 * C3639) *
               C4078 +
           (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
               C4177 +
           (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
               C4077 +
           (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
               C4176) *
              C93673 * C1383 +
          ((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
               C4176 +
           (C4081 * C1471 + C4075 * C1603 + C4083 * C1472 + C93587 * C1604) *
               C4077 +
           (C4081 * C5819 + C4075 * C5825 + C4083 * C5820 + C93587 * C5826) *
               C4177 +
           (C4081 * C5923 + C4075 * C6095 + C4083 * C5925 + C93587 * C6096) *
               C4078 +
           (C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
               C4178 +
           (C4081 * C5924 + C4075 * C6097 + C4083 * C5926 + C93587 * C6098) *
               C4079) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C800 -
          ((C418 * C804 + C1085 + C1085 + C93662 * C1076) * C92 +
           (C418 * C805 + C1086 + C1086 + C93662 * C1077) * C91 +
           (C418 * C806 + C1087 + C1087 + C93662 * C1078) * C90 +
           (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
              C93673 * C93635 * C801 +
          ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C89 +
           (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C90 +
           (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C91 +
           (C418 * C811 + C1092 + C1092 + C93662 * C1083) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
              C93635 * C93621 * C98 +
          (C449 * C89 + C450 * C90 + C451 * C91 +
           (C418 * C113 + C439 + C439 + C93662 * C424) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C1382 -
          ((C418 * C1385 + C1666 + C1666 + C93662 * C1657) * C92 +
           (C418 * C1386 + C1667 + C1667 + C93662 * C1658) * C91 +
           (C418 * C1387 + C1668 + C1668 + C93662 * C1659) * C90 +
           (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
              C93673 * C1383 +
          ((C418 * C1389 + C1670 + C1670 + C93662 * C1661) * C89 +
           (C418 * C1390 + C1671 + C1671 + C93662 * C1662) * C90 +
           (C418 * C1391 + C1672 + C1672 + C93662 * C1663) * C91 +
           (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C92) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4492 + C4493 + C4494) * C93587 + (C4491 + C4490 + C4489) * C4075) *
              C93673 * C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C4075 +
           (C4449 * C111 + C4474 + C4474 + C4077 * C422 + C4450 * C804 + C4475 +
            C4475 + C4078 * C1076 + C4451 * C811 + C4476 + C4476 +
            C4079 * C1083) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C800 -
          ((C4451 * C4916 + C5362 + C5362 + C4079 * C5357 + C4450 * C809 +
            C5363 + C5363 + C4078 * C1081 + C4449 * C806 + C5364 + C5364 +
            C4077 * C1078) *
               C93587 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C4075) *
              C93673 * C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C4075 +
           (C4449 * C809 + C5371 + C5371 + C4077 * C1081 + C4450 * C4916 +
            C5372 + C5372 + C4078 * C5357 + C4451 * C4919 + C5373 + C5373 +
            C4079 * C5360) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C1382 -
          ((C4451 * C5817 + C6180 + C6180 + C4079 * C6173 + C4450 * C3410 +
            C6181 + C6181 + C4078 * C3710 + C4449 * C1387 + C6182 + C6182 +
            C4077 * C1659) *
               C93587 +
           (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4449 * C1388 + C6185 + C6185 +
            C4077 * C1660) *
               C4075) *
              C93673 * C1383 +
          ((C4449 * C1389 + C6186 + C6186 + C4077 * C1661 + C4450 * C5819 +
            C6187 + C6187 + C4078 * C6175 + C4451 * C5821 + C6188 + C6188 +
            C4079 * C6176) *
               C4075 +
           (C4449 * C1390 + C6189 + C6189 + C4077 * C1662 + C4450 * C5820 +
            C6190 + C6190 + C4078 * C6177 + C4451 * C5822 + C6191 + C6191 +
            C4079 * C6178) *
               C93587) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C800 -
                    (((C275 * C886 + C93673 * C1142) * C93662 +
                      (C275 * C804 + C93673 * C952) * C188) *
                         C92 +
                     ((C275 * C887 + C93673 * C1143) * C93662 +
                      (C275 * C805 + C93673 * C953) * C188) *
                         C91 +
                     ((C275 * C888 + C93673 * C1144) * C93662 +
                      (C275 * C806 + C93673 * C954) * C188) *
                         C90 +
                     ((C275 * C889 + C93673 * C1145) * C93662 +
                      (C275 * C807 + C93673 * C955) * C188) *
                         C89) *
                        C93635 * C801 +
                    (((C275 * C808 + C93673 * C956) * C188 +
                      (C275 * C890 + C93673 * C1146) * C93662) *
                         C89 +
                     ((C275 * C809 + C93673 * C957) * C188 +
                      (C275 * C891 + C93673 * C1147) * C93662) *
                         C90 +
                     ((C275 * C810 + C93673 * C958) * C188 +
                      (C275 * C892 + C93673 * C1148) * C93662) *
                         C91 +
                     ((C275 * C811 + C93673 * C959) * C188 +
                      (C275 * C893 + C93673 * C1149) * C93662) *
                         C92) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C93621 * C97 -
                    ((C527 + C519) * C92 + (C526 + C514) * C91 +
                     (C525 + C511) * C90 + (C524 + C508) * C89) *
                        C93635 * C93621 * C98 +
                    (C528 * C89 + C529 * C90 + (C519 + C527) * C91 +
                     ((C275 * C113 + C93673 * C281) * C188 +
                      (C275 * C194 + C93673 * C506) * C93662) *
                         C92) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C1382 -
                    (((C275 * C1467 + C93673 * C1723) * C93662 +
                      (C275 * C1385 + C93673 * C1533) * C188) *
                         C92 +
                     ((C275 * C1468 + C93673 * C1724) * C93662 +
                      (C275 * C1386 + C93673 * C1534) * C188) *
                         C91 +
                     ((C275 * C1469 + C93673 * C1725) * C93662 +
                      (C275 * C1387 + C93673 * C1535) * C188) *
                         C90 +
                     ((C275 * C1470 + C93673 * C1726) * C93662 +
                      (C275 * C1388 + C93673 * C1536) * C188) *
                         C89) *
                        C1383 +
                    (((C275 * C1389 + C93673 * C1537) * C188 +
                      (C275 * C1471 + C93673 * C1727) * C93662) *
                         C89 +
                     ((C275 * C1390 + C93673 * C1538) * C188 +
                      (C275 * C1472 + C93673 * C1728) * C93662) *
                         C90 +
                     ((C275 * C1391 + C93673 * C1539) * C188 +
                      (C275 * C1473 + C93673 * C1729) * C93662) *
                         C91 +
                     ((C275 * C1392 + C93673 * C1540) * C188 +
                      (C275 * C1474 + C93673 * C1730) * C93662) *
                         C92) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 +
                      (C275 * C807 + C93673 * C955) * C4177 +
                      (C275 * C889 + C93673 * C1145) * C4078 +
                      (C275 * C808 + C93673 * C956) * C4178 +
                      (C275 * C890 + C93673 * C1146) * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C93621 * C97 -
                    ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
                     (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
                        C93635 * C93621 * C98 +
                    ((C4582 + C4581 + C4580 + C4579 + C4578 + C4586) * C4075 +
                     (C309 * C4176 + C522 * C4077 + C2158 * C4177 +
                      C2389 * C4078 + (C275 * C811 + C93673 * C959) * C4178 +
                      (C275 * C893 + C93673 * C1149) * C4079) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C800 -
                    ((C5462 * C4079 + C5154 * C4178 + C4583 * C4078 +
                      C4298 * C4177 + C2391 * C4077 + C2162 * C4176) *
                         C93587 +
                     (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 +
                      C5151 * C4177 + C5460 * C4077 + C5149 * C4176) *
                         C4075) *
                        C93635 * C801 +
                    ((C5151 * C4176 + C5461 * C4077 + C5156 * C4177 +
                      C5463 * C4078 + (C275 * C4918 + C93673 * C5122) * C4178 +
                      (C275 * C5040 + C93673 * C5449) * C4079) *
                         C4075 +
                     (C4298 * C4176 + C4583 * C4077 + C5154 * C4177 +
                      C5462 * C4078 + (C275 * C4919 + C93673 * C5123) * C4178 +
                      (C275 * C5041 + C93673 * C5450) * C4079) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C1382 -
                    (((C275 * C5921 + C93673 * C6265) * C4079 +
                      (C275 * C5817 + C93673 * C6007) * C4178 +
                      (C275 * C3492 + C93673 * C3784) * C4078 +
                      (C275 * C3410 + C93673 * C3566) * C4177 + C3105 * C4077 +
                      C2876 * C4176) *
                         C93587 +
                     ((C275 * C5922 + C93673 * C6266) * C4079 +
                      (C275 * C5818 + C93673 * C6008) * C4178 +
                      (C275 * C3491 + C93673 * C3783) * C4078 +
                      (C275 * C3409 + C93673 * C3565) * C4177 +
                      (C275 * C1470 + C93673 * C1726) * C4077 +
                      (C275 * C1388 + C93673 * C1536) * C4176) *
                         C4075) *
                        C1383 +
                    (((C275 * C1389 + C93673 * C1537) * C4176 +
                      (C275 * C1471 + C93673 * C1727) * C4077 +
                      (C275 * C5819 + C93673 * C6009) * C4177 +
                      (C275 * C5923 + C93673 * C6267) * C4078 +
                      (C275 * C5821 + C93673 * C6011) * C4178 +
                      (C275 * C5924 + C93673 * C6268) * C4079) *
                         C4075 +
                     ((C275 * C1390 + C93673 * C1538) * C4176 +
                      (C275 * C1472 + C93673 * C1728) * C4077 +
                      (C275 * C5820 + C93673 * C6010) * C4177 +
                      (C275 * C5925 + C93673 * C6269) * C4078 +
                      (C275 * C5822 + C93673 * C6012) * C4178 +
                      (C275 * C5926 + C93673 * C6270) * C4079) *
                         C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C800 -
          ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
            C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
               C93673 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C275) *
              C93662 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C275 +
           (C101 * C956 + C89 * C1204 + C103 * C957 + C90 * C1205 +
            C105 * C958 + C91 * C1206 + C107 * C959 + C92 * C1207) *
               C93673) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C93621 * C97 -
          ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
            C90 * C581 + C101 * C277 + C89 * C580) *
               C93673 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C275) *
              C93662 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C275 +
           (C101 * C278 + C89 * C581 + C103 * C279 + C90 * C582 + C105 * C280 +
            C91 * C583 + C107 * C281 + C92 * C584) *
               C93673) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C1382 -
          ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
            C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
               C93673 +
           (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
            C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
               C275) *
              C93662 * C1383 +
          ((C101 * C1389 + C89 * C1397 + C103 * C1390 + C90 * C1398 +
            C105 * C1391 + C91 * C1399 + C107 * C1392 + C92 * C1400) *
               C275 +
           (C101 * C1537 + C89 * C1785 + C103 * C1538 + C90 * C1786 +
            C105 * C1539 + C91 * C1787 + C107 * C1540 + C92 * C1788) *
               C93673) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
                C275 +
            (C4081 * C955 + C4075 * C1203 + C4083 * C954 + C93587 * C1202) *
                C93673) *
               C4078 +
           ((C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
                C275 +
            (C4081 * C956 + C4075 * C1204 + C4083 * C957 + C93587 * C1205) *
                C93673) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C4083 * C958 + C93587 * C1206 + C4081 * C957 + C4075 * C1205) *
                C93673 +
            (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
                C275) *
               C4079 +
           ((C4083 * C953 + C93587 * C1201 + C4081 * C954 + C4075 * C1202) *
                C93673 +
            (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
                C275) *
               C4078 +
           ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93673 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C275) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C275 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93673) *
               C4077 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C275 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93673) *
               C4078 +
           ((C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
                C275 +
            (C4081 * C958 + C4075 * C1206 + C4083 * C959 + C93587 * C1207) *
                C93673) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C93635 * C800 -
          (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
           ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
           ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
              C93635 * C801 +
          (C5563 * C4077 +
           ((C5281 + C5280) * C275 + (C5560 + C5559) * C93673) * C4078 +
           ((C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
                C275 +
            (C4081 * C5122 + C4075 * C5539 + C4083 * C5123 + C93587 * C5540) *
                C93673) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C1382 -
          (((C4083 * C6007 + C93587 * C6345 + C4081 * C6008 + C4075 * C6346) *
                C93673 +
            (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                C275) *
               C4079 +
           ((C4083 * C3566 + C93587 * C3854 + C4081 * C3565 + C4075 * C3853) *
                C93673 +
            (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                C275) *
               C4078 +
           ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                C93673 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C275) *
               C4077) *
              C1383 +
          (((C4081 * C1389 + C4075 * C1397 + C4083 * C1390 + C93587 * C1398) *
                C275 +
            (C4081 * C1537 + C4075 * C1785 + C4083 * C1538 + C93587 * C1786) *
                C93673) *
               C4077 +
           ((C4081 * C5819 + C4075 * C5825 + C4083 * C5820 + C93587 * C5826) *
                C275 +
            (C4081 * C6009 + C4075 * C6347 + C4083 * C6010 + C93587 * C6348) *
                C93673) *
               C4078 +
           ((C4081 * C5821 + C4075 * C5827 + C4083 * C5822 + C93587 * C5828) *
                C275 +
            (C4081 * C6011 + C4075 * C6349 + C4083 * C6012 + C93587 * C6350) *
                C93673) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C800 -
          (((C188 * C952 + C93662 * C1258) * C93673 +
            (C188 * C804 + C93662 * C886) * C275) *
               C92 +
           ((C188 * C953 + C93662 * C1259) * C93673 +
            (C188 * C805 + C93662 * C887) * C275) *
               C91 +
           ((C188 * C954 + C93662 * C1260) * C93673 +
            (C188 * C806 + C93662 * C888) * C275) *
               C90 +
           ((C188 * C955 + C93662 * C1261) * C93673 +
            (C188 * C807 + C93662 * C889) * C275) *
               C89) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C275 +
            (C188 * C956 + C93662 * C1262) * C93673) *
               C89 +
           ((C188 * C809 + C93662 * C891) * C275 +
            (C188 * C957 + C93662 * C1263) * C93673) *
               C90 +
           ((C188 * C810 + C93662 * C892) * C275 +
            (C188 * C958 + C93662 * C1264) * C93673) *
               C91 +
           ((C188 * C811 + C93662 * C893) * C275 +
            (C188 * C959 + C93662 * C1265) * C93673) *
               C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C93621 * C97 -
          ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
           (C658 + C642) * C89) *
              C93635 * C93621 * C98 +
          (C662 * C89 + C663 * C90 + (C653 + C661) * C91 +
           ((C188 * C113 + C93662 * C194) * C275 +
            (C188 * C281 + C93662 * C640) * C93673) *
               C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C1382 -
          (((C188 * C1533 + C93662 * C1839) * C93673 +
            (C188 * C1385 + C93662 * C1467) * C275) *
               C92 +
           ((C188 * C1534 + C93662 * C1840) * C93673 +
            (C188 * C1386 + C93662 * C1468) * C275) *
               C91 +
           ((C188 * C1535 + C93662 * C1841) * C93673 +
            (C188 * C1387 + C93662 * C1469) * C275) *
               C90 +
           ((C188 * C1536 + C93662 * C1842) * C93673 +
            (C188 * C1388 + C93662 * C1470) * C275) *
               C89) *
              C1383 +
          (((C188 * C1389 + C93662 * C1471) * C275 +
            (C188 * C1537 + C93662 * C1843) * C93673) *
               C89 +
           ((C188 * C1390 + C93662 * C1472) * C275 +
            (C188 * C1538 + C93662 * C1844) * C93673) *
               C90 +
           ((C188 * C1391 + C93662 * C1473) * C275 +
            (C188 * C1539 + C93662 * C1845) * C93673) *
               C91 +
           ((C188 * C1392 + C93662 * C1474) * C275 +
            (C188 * C1540 + C93662 * C1846) * C93673) *
               C92) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C4750 + C4751 + C4752) * C93673 + (C4213 + C4214 + C4215) * C275) *
               C93587 +
           ((C4749 + C4748 + C4747) * C93673 + (C4206 + C4205 + C4204) * C275) *
               C4075) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C275 + (C4752 + C4751 + C4750) * C93673) *
               C4075 +
           ((C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
             C4178 * C811 + C4079 * C893) *
                C275 +
            (C4176 * C279 + C4077 * C638 + C4177 * C952 + C4078 * C1258 +
             C4178 * C959 + C4079 * C1265) *
                C93673) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C800 -
          (((C4178 * C5120 + C4079 * C5637 + C4177 * C957 + C4078 * C1263 +
             C4176 * C954 + C4077 * C1260) *
                C93673 +
            (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
             C4176 * C806 + C4077 * C888) *
                C275) *
               C93587 +
           ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C93673 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C275) *
               C4075) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C275 +
            (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
             C4178 * C5122 + C4079 * C5639) *
                C93673) *
               C4075 +
           ((C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
             C4178 * C4919 + C4079 * C5041) *
                C275 +
            (C4176 * C957 + C4077 * C1263 + C4177 * C5120 + C4078 * C5637 +
             C4178 * C5123 + C4079 * C5640) *
                C93673) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C1382 -
          (((C4178 * C6007 + C4079 * C6425 + C4177 * C3566 + C4078 * C3924 +
             C4176 * C1535 + C4077 * C1841) *
                C93673 +
            (C4178 * C5817 + C4079 * C5921 + C4177 * C3410 + C4078 * C3492 +
             C4176 * C1387 + C4077 * C1469) *
                C275) *
               C93587 +
           ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 + C4078 * C3923 +
             C4176 * C1536 + C4077 * C1842) *
                C93673 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C275) *
               C4075) *
              C1383 +
          (((C4176 * C1389 + C4077 * C1471 + C4177 * C5819 + C4078 * C5923 +
             C4178 * C5821 + C4079 * C5924) *
                C275 +
            (C4176 * C1537 + C4077 * C1843 + C4177 * C6009 + C4078 * C6427 +
             C4178 * C6011 + C4079 * C6428) *
                C93673) *
               C4075 +
           ((C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
             C4178 * C5822 + C4079 * C5926) *
                C275 +
            (C4176 * C1538 + C4077 * C1844 + C4177 * C6010 + C4078 * C6429 +
             C4178 * C6012 + C4079 * C6430) *
                C93673) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C800 -
          ((C713 * C804 + C1325 + C1325 + C93673 * C1316) * C93662 * C92 +
           (C713 * C805 + C1326 + C1326 + C93673 * C1317) * C93662 * C91 +
           (C713 * C806 + C1327 + C1327 + C93673 * C1318) * C93662 * C90 +
           (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
              C93635 * C801 +
          ((C713 * C808 + C1329 + C1329 + C93673 * C1320) * C93662 * C89 +
           (C713 * C809 + C1330 + C1330 + C93673 * C1321) * C93662 * C90 +
           (C713 * C810 + C1331 + C1331 + C93673 * C1322) * C93662 * C91 +
           (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93662 * C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C93621 * C97 -
          (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
              C93621 * C98 +
          (C748 * C89 + C749 * C90 + C750 * C91 +
           (C713 * C113 + C734 + C734 + C93673 * C719) * C93662 * C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C1382 -
          ((C713 * C1385 + C1906 + C1906 + C93673 * C1897) * C93662 * C92 +
           (C713 * C1386 + C1907 + C1907 + C93673 * C1898) * C93662 * C91 +
           (C713 * C1387 + C1908 + C1908 + C93673 * C1899) * C93662 * C90 +
           (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
              C1383 +
          ((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C93662 * C89 +
           (C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C93662 * C90 +
           (C713 * C1391 + C1912 + C1912 + C93673 * C1903) * C93662 * C91 +
           (C713 * C1392 + C1913 + C1913 + C93673 * C1904) * C93662 * C92) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C4078 +
            (C713 * C808 + C1329 + C1329 + C93673 * C1320) * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C93621 * C97 -
          ((C4842 + C4833 + C4834) * C93587 + (C4841 + C4828 + C4827) * C4075) *
              C93635 * C93621 * C98 +
          ((C4834 + C4833 + C4842) * C4075 +
           (C745 * C4077 + C2624 * C4078 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C4079) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C800 -
          ((C5742 * C4079 + C4839 * C4078 + C2626 * C4077) * C93587 +
           (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
              C93635 * C801 +
          ((C5741 * C4077 + C5743 * C4078 +
            (C713 * C4918 + C5730 + C5730 + C93673 * C5717) * C4079) *
               C4075 +
           (C4839 * C4077 + C5742 * C4078 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C4079) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C1382 -
          (((C713 * C5817 + C6512 + C6512 + C93673 * C6505) * C4079 +
            (C713 * C3410 + C3999 + C3999 + C93673 * C3994) * C4078 +
            C3340 * C4077) *
               C93587 +
           ((C713 * C5818 + C6513 + C6513 + C93673 * C6506) * C4079 +
            (C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C4078 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
               C4075) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C4077 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C4078 +
            (C713 * C5821 + C6515 + C6515 + C93673 * C6508) * C4079) *
               C4075 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C4077 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C4078 +
            (C713 * C5822 + C6517 + C6517 + C93673 * C6510) * C4079) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
            C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
            C130 + C130 + C92 * C123) *
               C93673 * C93662 * C2695 -
           (C106 * C1385 + C1410 + C1410 + C92 * C1401 + C104 * C1386 + C1411 +
            C1411 + C91 * C1402 + C102 * C1387 + C1412 + C1412 + C90 * C1403 +
            C100 * C1388 + C1413 + C1413 + C89 * C1404) *
               C93673 * C93662 * C2696) *
              C93621 * C1981 +
          ((C100 * C1387 + C2701 + C2701 + C89 * C1403 + C102 * C1386 + C2702 +
            C2702 + C90 * C1402 + C104 * C1385 + C2703 + C2703 + C91 * C1401 +
            C106 * C2697 + C2704 + C2704 + C92 * C2699) *
               C93673 * C93662 * C2696 -
           (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 + C132 +
            C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 + C100 * C109 +
            C134 + C134 + C89 * C121) *
               C93673 * C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 +
             C4086 + C4086 + C93587 * C121) *
                C93673 * C4077 +
            (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
               C2695 -
           ((C4082 * C5817 + C5836 + C5836 + C93587 * C5829 + C4080 * C5818 +
             C5837 + C5837 + C4075 * C5830) *
                C93673 * C4079 +
            (C4082 * C3410 + C5838 + C5838 + C93587 * C3418 + C4080 * C3409 +
             C5839 + C5839 + C4075 * C3417) *
                C93673 * C4078 +
            (C4082 * C1387 + C5840 + C5840 + C93587 * C1403 + C4080 * C1388 +
             C5841 + C5841 + C4075 * C1404) *
                C93673 * C4077) *
               C2696) *
              C93621 * C1981 +
          (((C4080 * C1387 + C7635 + C7635 + C4075 * C1403 + C4082 * C1386 +
             C7636 + C7636 + C93587 * C1402) *
                C93673 * C4077 +
            (C4080 * C3410 + C7637 + C7637 + C4075 * C3418 + C4082 * C3411 +
             C7638 + C7638 + C93587 * C3419) *
                C93673 * C4078 +
            (C4080 * C5817 + C7639 + C7639 + C4075 * C5829 + C4082 * C7631 +
             C7640 + C7640 + C93587 * C7633) *
                C93673 * C4079) *
               C2696 -
           ((C6640 + C6639) * C93673 * C4079 +
            (C6638 + C6637) * C93673 * C4078 +
            (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
             C4096 + C4096 + C4075 * C121) *
                C93673 * C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C101 +
            (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
            C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
               C93673 * C2695 -
           (C2785 * C92 + C2786 * C107 + C2787 * C91 + C2788 * C105 +
            C2789 * C90 + C2790 * C103 + (C188 * C1396 + C93662 * C1478) * C89 +
            (C188 * C1388 + C93662 * C1470) * C101) *
               C93673 * C2696) *
              C93621 * C1981 +
          ((C2790 * C101 + C2789 * C89 + C2788 * C103 + C2787 * C90 +
            C2786 * C105 + C2785 * C91 +
            (C188 * C2697 + C93662 * C2770) * C107 +
            (C188 * C2698 + C93662 * C2771) * C92) *
               C93673 * C2696 -
           (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
            C220 * C103 + C219 * C89 + C218 * C101) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C4081 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C4075 +
            (C4204 + C4205 + C4206) * C4083 +
            (C4207 + C4208 + C4209) * C93587) *
               C93673 * C2695 -
           ((C7753 + C7754 + C7755) * C93587 + (C7756 + C7757 + C7758) * C4083 +
            (C4178 * C5824 + C4079 * C5928 + C4177 * C3413 + C4078 * C3495 +
             C4176 * C1396 + C4077 * C1478) *
                C4075 +
            (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 + C4078 * C3491 +
             C4176 * C1388 + C4077 * C1470) *
                C4081) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C7758 + C7757 + C7756) * C4081 + (C7755 + C7754 + C7753) * C4075 +
            (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C4083 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93587) *
               C93673 * C2696 -
           ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
            (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C101 +
            (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
            C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
               C93662 * C2695 -
           (C2871 * C92 + C2872 * C107 + C2873 * C91 + C2874 * C105 +
            C2875 * C90 + C2876 * C103 + (C275 * C1396 + C93673 * C1544) * C89 +
            (C275 * C1388 + C93673 * C1536) * C101) *
               C93662 * C2696) *
              C93621 * C1981 +
          ((C2876 * C101 + C2875 * C89 + C2874 * C103 + C2873 * C90 +
            C2872 * C105 + C2871 * C91 +
            (C275 * C2697 + C93673 * C2856) * C107 +
            (C275 * C2698 + C93673 * C2857) * C92) *
               C93662 * C2696 -
           (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
            C307 * C103 + C306 * C89 + C305 * C101) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4081 +
             (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
             C306 * C93587) *
                C4077 +
            (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
               C2695 -
           ((C7867 * C93587 + C7868 * C4083 +
             (C275 * C5824 + C93673 * C6014) * C4075 +
             (C275 * C5818 + C93673 * C6008) * C4081) *
                C4079 +
            (C7869 * C93587 + C7870 * C4083 +
             (C275 * C3413 + C93673 * C3569) * C4075 +
             (C275 * C3409 + C93673 * C3565) * C4081) *
                C4078 +
            (C2875 * C93587 + C2876 * C4083 +
             (C275 * C1396 + C93673 * C1544) * C4075 +
             (C275 * C1388 + C93673 * C1536) * C4081) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C4081 + C2875 * C4075 + C2874 * C4083 + C2873 * C93587) *
                C4077 +
            (C7870 * C4081 + C7869 * C4075 +
             (C275 * C3411 + C93673 * C3567) * C4083 +
             (C275 * C3415 + C93673 * C3571) * C93587) *
                C4078 +
            (C7868 * C4081 + C7867 * C4075 +
             (C275 * C7631 + C93673 * C7856) * C4083 +
             (C275 * C7632 + C93673 * C7857) * C93587) *
                C4079) *
               C2696 -
           ((C6866 + C6865 + C6864 + C6863) * C4079 +
            (C6862 + C6861 + C6860 + C6859) * C4078 +
            (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C188 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364 + C107 * C192 + C92 * C365) *
                C93662) *
               C93673 * C2695 -
           ((C107 * C1467 + C92 * C1599 + C105 * C1468 + C91 * C1600 +
             C103 * C1469 + C90 * C1601 + C101 * C1470 + C89 * C1602) *
                C93662 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C188) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C101 * C1387 + C89 * C1395 + C103 * C1386 + C90 * C1394 +
             C105 * C1385 + C91 * C1393 + C107 * C2697 + C92 * C2698) *
                C188 +
            (C101 * C1469 + C89 * C1601 + C103 * C1468 + C90 * C1600 +
             C105 * C1467 + C91 * C1599 + C107 * C2770 + C92 * C2942) *
                C93662) *
               C93673 * C2696 -
           ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
             C90 * C364 + C101 * C190 + C89 * C363) *
                C93662 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C188) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C4176 +
            (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
                C4077 +
            (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
            C5283 * C4079) *
               C93673 * C2695 -
           ((C4083 * C5921 + C93587 * C6093 + C4081 * C5922 + C4075 * C6094) *
                C4079 +
            (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                C4178 +
            (C4083 * C3492 + C93587 * C3640 + C4081 * C3491 + C4075 * C3639) *
                C4078 +
            (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                C4177 +
            (C4083 * C1469 + C93587 * C1601 + C4081 * C1470 + C4075 * C1602) *
                C4077 +
            (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                C4176) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C4081 * C1387 + C4075 * C1395 + C4083 * C1386 + C93587 * C1394) *
                C4176 +
            (C4081 * C1469 + C4075 * C1601 + C4083 * C1468 + C93587 * C1600) *
                C4077 +
            (C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                C4177 +
            (C4081 * C3492 + C4075 * C3640 + C4083 * C3493 + C93587 * C3641) *
                C4078 +
            (C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                C4178 +
            (C4081 * C5921 + C4075 * C6093 + C4083 * C7738 + C93587 * C7968) *
                C4079) *
               C93673 * C2696 -
           ((C6989 + C6988) * C4079 + (C6987 + C6986) * C4178 +
            (C6985 + C6984) * C4078 + (C6983 + C6982) * C4177 +
            (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
                C4077 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C4176) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[23] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C418 * C108 + C426 + C426 + C93662 * C419) * C89 +
                      C448 * C90 + C449 * C91 + C450 * C92) *
                         C93673 * C2695 -
                     (C3024 * C92 + C3025 * C91 + C3026 * C90 +
                      (C418 * C1388 + C1669 + C1669 + C93662 * C1660) * C89) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    ((C3026 * C89 + C3025 * C90 + C3024 * C91 +
                      (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C92) *
                         C93673 * C2696 -
                     (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 +
                       C4450 * C807 + C4454 + C4454 + C4078 * C1079 +
                       C4451 * C808 + C4455 + C4455 + C4079 * C1080) *
                          C4075 +
                      (C4489 + C4490 + C4491) * C93587) *
                         C93673 * C2695 -
                     ((C8084 + C8085 + C8086) * C93587 +
                      (C4451 * C5818 + C6183 + C6183 + C4079 * C6174 +
                       C4450 * C3409 + C6184 + C6184 + C4078 * C3709 +
                       C4449 * C1388 + C6185 + C6185 + C4077 * C1660) *
                          C4075) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    (((C8086 + C8085 + C8084) * C4075 +
                      (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 +
                       C4450 * C3411 + C8076 + C8076 + C4078 * C3711 +
                       C4451 * C7631 + C8077 + C8077 + C4079 * C8067) *
                          C93587) *
                         C93673 * C2696 -
                     ((C4492 + C4493 + C4494) * C93587 +
                      (C4491 + C4490 + C4489) * C4075) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C188 +
             (C275 * C189 + C93673 * C501) * C93662) *
                C89 +
            (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
               C2695 -
           ((C3106 + C3096) * C92 + (C3107 + C3099) * C91 +
            (C3108 + C3102) * C90 +
            ((C275 * C1470 + C93673 * C1726) * C93662 +
             (C275 * C1388 + C93673 * C1536) * C188) *
                C89) *
               C2696) *
              C93621 * C1981 +
          (((C3102 + C3108) * C89 + (C3099 + C3107) * C90 +
            (C3096 + C3106) * C91 +
            ((C275 * C2697 + C93673 * C2856) * C188 +
             (C275 * C2770 + C93673 * C3092) * C93662) *
                C92) *
               C2696 -
           ((C527 + C519) * C92 + (C526 + C514) * C91 + (C525 + C511) * C90 +
            (C524 + C508) * C89) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C4176 +
             (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
             C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                C4075 +
            (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
               C2695 -
           ((C8196 + C8188 + C8197 + C8191 + C8192 + C8193) * C93587 +
            ((C275 * C5922 + C93673 * C6266) * C4079 +
             (C275 * C5818 + C93673 * C6008) * C4178 +
             (C275 * C3491 + C93673 * C3783) * C4078 +
             (C275 * C3409 + C93673 * C3565) * C4177 +
             (C275 * C1470 + C93673 * C1726) * C4077 +
             (C275 * C1388 + C93673 * C1536) * C4176) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C8193 + C8192 + C8191 + C8197 + C8188 + C8196) * C4075 +
            (C2874 * C4176 + C3104 * C4077 +
             (C275 * C3411 + C93673 * C3567) * C4177 +
             (C275 * C3493 + C93673 * C3785) * C4078 +
             (C275 * C7631 + C93673 * C7856) * C4178 +
             (C275 * C7738 + C93673 * C8184) * C4079) *
                C93587) *
               C2696 -
           ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
            (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116 + C107 * C111 + C92 * C117) *
                C275 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581 + C107 * C279 + C92 * C582) *
                C93673) *
               C93662 * C2695 -
           ((C107 * C1533 + C92 * C1781 + C105 * C1534 + C91 * C1782 +
             C103 * C1535 + C90 * C1783 + C101 * C1536 + C89 * C1784) *
                C93673 +
            (C107 * C1385 + C92 * C1393 + C105 * C1386 + C91 * C1394 +
             C103 * C1387 + C90 * C1395 + C101 * C1388 + C89 * C1396) *
                C275) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C101 * C1387 + C89 * C1395 + C103 * C1386 + C90 * C1394 +
             C105 * C1385 + C91 * C1393 + C107 * C2697 + C92 * C2698) *
                C275 +
            (C101 * C1535 + C89 * C1783 + C103 * C1534 + C90 * C1782 +
             C105 * C1533 + C91 * C1781 + C107 * C2856 + C92 * C3174) *
                C93673) *
               C93662 * C2696 -
           ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
             C90 * C581 + C101 * C277 + C89 * C580) *
                C93673 +
            (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
             C90 * C116 + C101 * C109 + C89 * C115) *
                C275) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                 C275 +
             (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                 C93673) *
                C4077 +
            ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
            C5563 * C4079) *
               C2695 -
           (((C4083 * C6007 + C93587 * C6345 + C4081 * C6008 + C4075 * C6346) *
                 C93673 +
             (C4083 * C5817 + C93587 * C5823 + C4081 * C5818 + C4075 * C5824) *
                 C275) *
                C4079 +
            ((C4083 * C3566 + C93587 * C3854 + C4081 * C3565 + C4075 * C3853) *
                 C93673 +
             (C4083 * C3410 + C93587 * C3414 + C4081 * C3409 + C4075 * C3413) *
                 C275) *
                C4078 +
            ((C4083 * C1535 + C93587 * C1783 + C4081 * C1536 + C4075 * C1784) *
                 C93673 +
             (C4083 * C1387 + C93587 * C1395 + C4081 * C1388 + C4075 * C1396) *
                 C275) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          ((((C4081 * C1387 + C4075 * C1395 + C4083 * C1386 + C93587 * C1394) *
                 C275 +
             (C4081 * C1535 + C4075 * C1783 + C4083 * C1534 + C93587 * C1782) *
                 C93673) *
                C4077 +
            ((C4081 * C3410 + C4075 * C3414 + C4083 * C3411 + C93587 * C3415) *
                 C275 +
             (C4081 * C3566 + C4075 * C3854 + C4083 * C3567 + C93587 * C3855) *
                 C93673) *
                C4078 +
            ((C4081 * C5817 + C4075 * C5823 + C4083 * C7631 + C93587 * C7632) *
                 C275 +
             (C4081 * C6007 + C4075 * C6345 + C4083 * C7856 + C93587 * C8295) *
                 C93673) *
                C4079) *
               C2696 -
           (((C7322 + C7321) * C93673 + (C6987 + C6986) * C275) * C4079 +
            ((C7320 + C7319) * C93673 + (C6983 + C6982) * C275) * C4078 +
            ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                 C93673 +
             (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                 C275) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[23] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C188 * C108 + C93662 * C189) * C275 +
                       (C188 * C276 + C93662 * C635) * C93673) *
                          C89 +
                      (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
                         C2695 -
                     ((C3255 + C3245) * C92 + (C3256 + C3248) * C91 +
                      (C3257 + C3251) * C90 +
                      ((C188 * C1536 + C93662 * C1842) * C93673 +
                       (C188 * C1388 + C93662 * C1470) * C275) *
                          C89) *
                         C2696) *
                        C93621 * C1981 +
                    (((C3251 + C3257) * C89 + (C3248 + C3256) * C90 +
                      (C3245 + C3255) * C91 +
                      ((C188 * C2697 + C93662 * C2770) * C275 +
                       (C188 * C2856 + C93662 * C3241) * C93673) *
                          C92) *
                         C2696 -
                     ((C661 + C653) * C92 + (C660 + C648) * C91 +
                      (C659 + C645) * C90 + (C658 + C642) * C89) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4176 * C108 + C4077 * C189 + C4177 * C807 +
                        C4078 * C889 + C4178 * C808 + C4079 * C890) *
                           C275 +
                       (C4176 * C276 + C4077 * C635 + C4177 * C955 +
                        C4078 * C1261 + C4178 * C956 + C4079 * C1262) *
                           C93673) *
                          C4075 +
                      ((C4204 + C4205 + C4206) * C275 +
                       (C4747 + C4748 + C4749) * C93673) *
                          C93587) *
                         C2695 -
                     (((C8402 + C8403 + C8404) * C93673 +
                       (C7756 + C7757 + C7758) * C275) *
                          C93587 +
                      ((C4178 * C6008 + C4079 * C6426 + C4177 * C3565 +
                        C4078 * C3923 + C4176 * C1536 + C4077 * C1842) *
                           C93673 +
                       (C4178 * C5818 + C4079 * C5922 + C4177 * C3409 +
                        C4078 * C3491 + C4176 * C1388 + C4077 * C1470) *
                           C275) *
                          C4075) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C7758 + C7757 + C7756) * C275 +
                       (C8404 + C8403 + C8402) * C93673) *
                          C4075 +
                      ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 +
                        C4078 * C3493 + C4178 * C7631 + C4079 * C7738) *
                           C275 +
                       (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 +
                        C4078 * C3925 + C4178 * C7856 + C4079 * C8394) *
                           C93673) *
                          C93587) *
                         C2696 -
                     (((C4750 + C4751 + C4752) * C93673 +
                       (C4213 + C4214 + C4215) * C275) *
                          C93587 +
                      ((C4749 + C4748 + C4747) * C93673 +
                       (C4206 + C4205 + C4204) * C275) *
                          C4075) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
            C747 * C90 + C748 * C91 + C749 * C92) *
               C2695 -
           (C3341 * C92 + C3342 * C91 + C3343 * C90 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93662 * C89) *
               C2696) *
              C93621 * C1981 +
          ((C3343 * C89 + C3342 * C90 + C3341 * C91 +
            (C713 * C2697 + C3331 + C3331 + C93673 * C3323) * C93662 * C92) *
               C2696 -
           (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
             C5740 * C4078 + C5741 * C4079) *
                C4075 +
            (C4827 + C4828 + C4841) * C93587) *
               C2695 -
           ((C8516 + C8517 + C8508) * C93587 +
            ((C713 * C5818 + C6513 + C6513 + C93673 * C6506) * C4079 +
             (C713 * C3409 + C3998 + C3998 + C93673 * C3993) * C4078 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C4077) *
                C4075) *
               C2696) *
              C93621 * C1981 +
          (((C8508 + C8517 + C8516) * C4075 +
            (C3339 * C4077 +
             (C713 * C3411 + C4000 + C4000 + C93673 * C3995) * C4078 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C4079) *
                C93587) *
               C2696 -
           ((C4842 + C4833 + C4834) * C93587 +
            (C4841 + C4828 + C4827) * C4075) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C93621 * C97 -
          (C106 * C112 + C131 + C131 + C92 * C124 + C104 * C111 + C132 + C132 +
           C91 * C123 + C102 * C110 + C133 + C133 + C90 * C122 + C100 * C109 +
           C134 + C134 + C89 * C121) *
              C93673 * C93662 * C93635 * C93621 * C98 +
          (C100 * C110 + C135 + C135 + C89 * C122 + C102 * C111 + C136 + C136 +
           C90 * C123 + C104 * C112 + C137 + C137 + C91 * C124 + C106 * C113 +
           C138 + C138 + C92 * C125) *
              C93673 * C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C108 + C127 + C127 + C89 * C120 + C102 * C109 + C128 + C128 +
           C90 * C121 + C104 * C110 + C129 + C129 + C91 * C122 + C106 * C111 +
           C130 + C130 + C92 * C123) *
              C93673 * C93662 * C93635 * C800 -
          (C106 * C804 + C829 + C829 + C92 * C820 + C104 * C805 + C830 + C830 +
           C91 * C821 + C102 * C806 + C831 + C831 + C90 * C822 + C100 * C807 +
           C832 + C832 + C89 * C823) *
              C93673 * C93662 * C93635 * C801 +
          (C100 * C808 + C833 + C833 + C89 * C824 + C102 * C809 + C834 + C834 +
           C90 * C825 + C104 * C810 + C835 + C835 + C91 * C826 + C106 * C811 +
           C836 + C836 + C92 * C827) *
              C93673 * C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4080 * C807 + C4087 + C4087 + C4075 * C823 + C4082 * C806 + C4088 +
            C4088 + C93587 * C822) *
               C93673 * C4078 +
           (C4080 * C808 + C4089 + C4089 + C4075 * C824 + C4082 * C809 + C4090 +
            C4090 + C93587 * C825) *
               C93673 * C4079) *
              C93635 * C93621 * C97 -
          ((C4082 * C810 + C4091 + C4091 + C93587 * C826 + C4080 * C809 +
            C4092 + C4092 + C4075 * C825) *
               C93673 * C4079 +
           (C4082 * C805 + C4093 + C4093 + C93587 * C821 + C4080 * C806 +
            C4094 + C4094 + C4075 * C822) *
               C93673 * C4078 +
           (C4082 * C110 + C4095 + C4095 + C93587 * C122 + C4080 * C109 +
            C4096 + C4096 + C4075 * C121) *
               C93673 * C4077) *
              C93635 * C93621 * C98 +
          ((C4080 * C110 + C4097 + C4097 + C4075 * C122 + C4082 * C111 + C4098 +
            C4098 + C93587 * C123) *
               C93673 * C4077 +
           (C4080 * C805 + C4099 + C4099 + C4075 * C821 + C4082 * C804 + C4100 +
            C4100 + C93587 * C820) *
               C93673 * C4078 +
           (C4080 * C810 + C4101 + C4101 + C4075 * C826 + C4082 * C811 + C4102 +
            C4102 + C93587 * C827) *
               C93673 * C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4080 * C108 + C4085 + C4085 + C4075 * C120 + C4082 * C109 + C4086 +
            C4086 + C93587 * C121) *
               C93673 * C4077 +
           (C4957 + C4958) * C93673 * C4078 + C4964 * C4079) *
              C93635 * C800 -
          ((C4961 + C4962) * C93673 * C4079 + (C4960 + C4959) * C93673 * C4078 +
           (C4958 + C4957) * C93673 * C4077) *
              C93635 * C801 +
          (C4964 * C4077 + (C4962 + C4961) * C93673 * C4078 +
           (C4080 * C4918 + C4943 + C4943 + C4075 * C4926 + C4082 * C4919 +
            C4944 + C4944 + C93587 * C4927) *
               C93673 * C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C224 * C92 + C225 * C107 + C223 * C91 + C222 * C105 + C221 * C90 +
           C220 * C103 + C219 * C89 + C218 * C101) *
              C93673 * C93635 * C93621 * C98 +
          (C220 * C101 + C221 * C89 + C222 * C103 + C223 * C90 + C225 * C105 +
           C224 * C91 + (C188 * C113 + C93662 * C194) * C107 +
           (C188 * C119 + C93662 * C200) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C101 +
           (C188 * C114 + C93662 * C195) * C89 + C218 * C103 + C219 * C90 +
           C220 * C105 + C221 * C91 + C222 * C107 + C223 * C92) *
              C93673 * C93635 * C800 -
          ((C188 * C812 + C93662 * C894) * C92 +
           (C188 * C804 + C93662 * C886) * C107 +
           (C188 * C813 + C93662 * C895) * C91 +
           (C188 * C805 + C93662 * C887) * C105 +
           (C188 * C814 + C93662 * C896) * C90 +
           (C188 * C806 + C93662 * C888) * C103 +
           (C188 * C815 + C93662 * C897) * C89 +
           (C188 * C807 + C93662 * C889) * C101) *
              C93673 * C93635 * C801 +
          ((C188 * C808 + C93662 * C890) * C101 +
           (C188 * C816 + C93662 * C898) * C89 +
           (C188 * C809 + C93662 * C891) * C103 +
           (C188 * C817 + C93662 * C899) * C90 +
           (C188 * C810 + C93662 * C892) * C105 +
           (C188 * C818 + C93662 * C900) * C91 +
           (C188 * C811 + C93662 * C893) * C107 +
           (C188 * C819 + C93662 * C901) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4210 + C4211 + C4212) * C93587 + (C4213 + C4214 + C4215) * C4083 +
           (C4209 + C4208 + C4207) * C4075 + (C4206 + C4205 + C4204) * C4081) *
              C93673 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C4081 + (C4212 + C4211 + C4210) * C4075 +
           (C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
            C4178 * C811 + C4079 * C893) *
               C4083 +
           (C4176 * C117 + C4077 * C198 + C4177 * C812 + C4078 * C894 +
            C4178 * C819 + C4079 * C901) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C4081 +
           (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
            C4178 * C816 + C4079 * C898) *
               C4075 +
           (C4204 + C4205 + C4206) * C4083 + (C4207 + C4208 + C4209) * C93587) *
              C93673 * C93635 * C800 -
          ((C4178 * C4920 + C4079 * C5042 + C4177 * C817 + C4078 * C899 +
            C4176 * C814 + C4077 * C896) *
               C93587 +
           (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
            C4176 * C806 + C4077 * C888) *
               C4083 +
           (C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
            C4176 * C815 + C4077 * C897) *
               C4075 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C4081) *
              C93673 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C4081 +
           (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
            C4178 * C4922 + C4079 * C5044) *
               C4075 +
           (C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
            C4178 * C4919 + C4079 * C5041) *
               C4083 +
           (C4176 * C817 + C4077 * C899 + C4177 * C4920 + C4078 * C5042 +
            C4178 * C4923 + C4079 * C5045) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C93621 * C97 -
          (C311 * C92 + C312 * C107 + C310 * C91 + C309 * C105 + C308 * C90 +
           C307 * C103 + C306 * C89 + C305 * C101) *
              C93662 * C93635 * C93621 * C98 +
          (C307 * C101 + C308 * C89 + C309 * C103 + C310 * C90 + C312 * C105 +
           C311 * C91 + (C275 * C113 + C93673 * C281) * C107 +
           (C275 * C119 + C93673 * C287) * C92) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C101 +
           (C275 * C114 + C93673 * C282) * C89 + C305 * C103 + C306 * C90 +
           C307 * C105 + C308 * C91 + C309 * C107 + C310 * C92) *
              C93662 * C93635 * C800 -
          ((C275 * C812 + C93673 * C960) * C92 +
           (C275 * C804 + C93673 * C952) * C107 +
           (C275 * C813 + C93673 * C961) * C91 +
           (C275 * C805 + C93673 * C953) * C105 +
           (C275 * C814 + C93673 * C962) * C90 +
           (C275 * C806 + C93673 * C954) * C103 +
           (C275 * C815 + C93673 * C963) * C89 +
           (C275 * C807 + C93673 * C955) * C101) *
              C93662 * C93635 * C801 +
          ((C275 * C808 + C93673 * C956) * C101 +
           (C275 * C816 + C93673 * C964) * C89 +
           (C275 * C809 + C93673 * C957) * C103 +
           (C275 * C817 + C93673 * C965) * C90 +
           (C275 * C810 + C93673 * C958) * C105 +
           (C275 * C818 + C93673 * C966) * C91 +
           (C275 * C811 + C93673 * C959) * C107 +
           (C275 * C819 + C93673 * C967) * C92) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           ((C275 * C807 + C93673 * C955) * C4081 +
            (C275 * C815 + C93673 * C963) * C4075 + C2162 * C4083 +
            C2161 * C93587) *
               C4078 +
           ((C275 * C808 + C93673 * C956) * C4081 +
            (C275 * C816 + C93673 * C964) * C4075 + C4298 * C4083 +
            C4299 * C93587) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C4083 + C4299 * C4075 + C4298 * C4081) *
               C4079 +
           (C2159 * C93587 + C2160 * C4083 + C2161 * C4075 + C2162 * C4081) *
               C4078 +
           (C308 * C93587 + C307 * C4083 + C306 * C4075 + C305 * C4081) *
               C4077) *
              C93635 * C93621 * C98 +
          ((C307 * C4081 + C308 * C4075 + C309 * C4083 + C310 * C93587) *
               C4077 +
           (C2160 * C4081 + C2159 * C4075 + C2158 * C4083 + C2157 * C93587) *
               C4078 +
           (C4301 * C4081 + C4300 * C4075 +
            (C275 * C811 + C93673 * C959) * C4083 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C4081 +
            (C275 * C114 + C93673 * C282) * C4075 + C305 * C4083 +
            C306 * C93587) *
               C4077 +
           (C5157 + C5158 + C5133 + C5134) * C4078 + C5167 * C4079) *
              C93635 * C800 -
          ((C5161 + C5162 + C5163 + C5164) * C4079 +
           (C5140 + C5139 + C5160 + C5159) * C4078 +
           (C5134 + C5133 + C5158 + C5157) * C4077) *
              C93635 * C801 +
          (C5167 * C4077 + (C5164 + C5163 + C5162 + C5161) * C4078 +
           ((C275 * C4918 + C93673 * C5122) * C4081 +
            (C275 * C4922 + C93673 * C5126) * C4075 +
            (C275 * C4919 + C93673 * C5123) * C4083 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C93621 * C97 -
          ((C107 * C193 + C92 * C366 + C105 * C192 + C91 * C365 + C103 * C191 +
            C90 * C364 + C101 * C190 + C89 * C363) *
               C93662 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C188) *
              C93673 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C188 +
           (C101 * C191 + C89 * C364 + C103 * C192 + C90 * C365 + C105 * C193 +
            C91 * C366 + C107 * C194 + C92 * C367) *
               C93662) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C188 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364 + C107 * C192 + C92 * C365) *
               C93662) *
              C93673 * C93635 * C800 -
          ((C107 * C886 + C92 * C1018 + C105 * C887 + C91 * C1019 +
            C103 * C888 + C90 * C1020 + C101 * C889 + C89 * C1021) *
               C93662 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C188) *
              C93673 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C188 +
           (C101 * C890 + C89 * C1022 + C103 * C891 + C90 * C1023 +
            C105 * C892 + C91 * C1024 + C107 * C893 + C92 * C1025) *
               C93662) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
               C4177 +
           (C4081 * C889 + C4075 * C1021 + C4083 * C888 + C93587 * C1020) *
               C4078 +
           (C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
               C4178 +
           (C4081 * C890 + C4075 * C1022 + C4083 * C891 + C93587 * C1023) *
               C4079) *
              C93673 * C93635 * C93621 * C97 -
          ((C4083 * C892 + C93587 * C1024 + C4081 * C891 + C4075 * C1023) *
               C4079 +
           (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
               C4178 +
           (C4083 * C887 + C93587 * C1019 + C4081 * C888 + C4075 * C1020) *
               C4078 +
           (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
               C4177 +
           (C4083 * C191 + C93587 * C364 + C4081 * C190 + C4075 * C363) *
               C4077 +
           (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
               C4176) *
              C93673 * C93635 * C93621 * C98 +
          ((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
               C4176 +
           (C4081 * C191 + C4075 * C364 + C4083 * C192 + C93587 * C365) *
               C4077 +
           (C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
               C4177 +
           (C4081 * C887 + C4075 * C1019 + C4083 * C886 + C93587 * C1018) *
               C4078 +
           (C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
               C4178 +
           (C4081 * C892 + C4075 * C1024 + C4083 * C893 + C93587 * C1025) *
               C4079) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
               C4176 +
           (C4081 * C189 + C4075 * C362 + C4083 * C190 + C93587 * C363) *
               C4077 +
           (C5270 + C5271) * C4177 + (C5272 + C5273) * C4078 + C5282 * C4178 +
           C5283 * C4079) *
              C93673 * C93635 * C800 -
          ((C5278 + C5279) * C4079 + (C5280 + C5281) * C4178 +
           (C5277 + C5276) * C4078 + (C5275 + C5274) * C4177 +
           (C5273 + C5272) * C4077 + (C5271 + C5270) * C4176) *
              C93673 * C93635 * C801 +
          (C5282 * C4176 + C5283 * C4077 + (C5281 + C5280) * C4177 +
           (C5279 + C5278) * C4078 +
           (C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
               C4178 +
           (C4081 * C5040 + C4075 * C5243 + C4083 * C5041 + C93587 * C5244) *
               C4079) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C93621 * C97 -
          (C451 * C92 + C450 * C91 + C449 * C90 + C448 * C89) * C93673 *
              C93635 * C93621 * C98 +
          (C449 * C89 + C450 * C90 + C451 * C91 +
           (C418 * C113 + C439 + C439 + C93662 * C424) * C92) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C89 + C448 * C90 +
           C449 * C91 + C450 * C92) *
              C93673 * C93635 * C800 -
          ((C418 * C804 + C1085 + C1085 + C93662 * C1076) * C92 +
           (C418 * C805 + C1086 + C1086 + C93662 * C1077) * C91 +
           (C418 * C806 + C1087 + C1087 + C93662 * C1078) * C90 +
           (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C89) *
              C93673 * C93635 * C801 +
          ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C89 +
           (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C90 +
           (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C91 +
           (C418 * C811 + C1092 + C1092 + C93662 * C1083) * C92) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C93621 * C97 -
          ((C4492 + C4493 + C4494) * C93587 + (C4491 + C4490 + C4489) * C4075) *
              C93673 * C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C4075 +
           (C4449 * C111 + C4474 + C4474 + C4077 * C422 + C4450 * C804 + C4475 +
            C4475 + C4078 * C1076 + C4451 * C811 + C4476 + C4476 +
            C4079 * C1083) *
               C93587) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C4075 +
           (C4489 + C4490 + C4491) * C93587) *
              C93673 * C93635 * C800 -
          ((C4451 * C4916 + C5362 + C5362 + C4079 * C5357 + C4450 * C809 +
            C5363 + C5363 + C4078 * C1081 + C4449 * C806 + C5364 + C5364 +
            C4077 * C1078) *
               C93587 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C4075) *
              C93673 * C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C4075 +
           (C4449 * C809 + C5371 + C5371 + C4077 * C1081 + C4450 * C4916 +
            C5372 + C5372 + C4078 * C5357 + C4451 * C4919 + C5373 + C5373 +
            C4079 * C5360) *
               C93587) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[24] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C93621 * C97 -
                    ((C527 + C519) * C92 + (C526 + C514) * C91 +
                     (C525 + C511) * C90 + (C524 + C508) * C89) *
                        C93635 * C93621 * C98 +
                    (C528 * C89 + C529 * C90 + (C519 + C527) * C91 +
                     ((C275 * C113 + C93673 * C281) * C188 +
                      (C275 * C194 + C93673 * C506) * C93662) *
                         C92) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C188 +
                      (C275 * C189 + C93673 * C501) * C93662) *
                         C89 +
                     (C508 + C524) * C90 + C528 * C91 + C529 * C92) *
                        C93635 * C800 -
                    (((C275 * C886 + C93673 * C1142) * C93662 +
                      (C275 * C804 + C93673 * C952) * C188) *
                         C92 +
                     ((C275 * C887 + C93673 * C1143) * C93662 +
                      (C275 * C805 + C93673 * C953) * C188) *
                         C91 +
                     ((C275 * C888 + C93673 * C1144) * C93662 +
                      (C275 * C806 + C93673 * C954) * C188) *
                         C90 +
                     ((C275 * C889 + C93673 * C1145) * C93662 +
                      (C275 * C807 + C93673 * C955) * C188) *
                         C89) *
                        C93635 * C801 +
                    (((C275 * C808 + C93673 * C956) * C188 +
                      (C275 * C890 + C93673 * C1146) * C93662) *
                         C89 +
                     ((C275 * C809 + C93673 * C957) * C188 +
                      (C275 * C891 + C93673 * C1147) * C93662) *
                         C90 +
                     ((C275 * C810 + C93673 * C958) * C188 +
                      (C275 * C892 + C93673 * C1148) * C93662) *
                         C91 +
                     ((C275 * C811 + C93673 * C959) * C188 +
                      (C275 * C893 + C93673 * C1149) * C93662) *
                         C92) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 +
                      (C275 * C807 + C93673 * C955) * C4177 +
                      (C275 * C889 + C93673 * C1145) * C4078 +
                      (C275 * C808 + C93673 * C956) * C4178 +
                      (C275 * C890 + C93673 * C1146) * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C93621 * C97 -
                    ((C4586 + C4578 + C4579 + C4580 + C4581 + C4582) * C93587 +
                     (C4585 + C4573 + C4572 + C4571 + C4570 + C4569) * C4075) *
                        C93635 * C93621 * C98 +
                    ((C4582 + C4581 + C4580 + C4579 + C4578 + C4586) * C4075 +
                     (C309 * C4176 + C522 * C4077 + C2158 * C4177 +
                      C2389 * C4078 + (C275 * C811 + C93673 * C959) * C4178 +
                      (C275 * C893 + C93673 * C1149) * C4079) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C275 * C108 + C93673 * C276) * C4176 +
                      (C275 * C189 + C93673 * C501) * C4077 + C5149 * C4177 +
                      C5460 * C4078 + C5151 * C4178 + C5461 * C4079) *
                         C4075 +
                     (C4569 + C4570 + C4571 + C4572 + C4573 + C4585) * C93587) *
                        C93635 * C800 -
                    ((C5462 * C4079 + C5154 * C4178 + C4583 * C4078 +
                      C4298 * C4177 + C2391 * C4077 + C2162 * C4176) *
                         C93587 +
                     (C5463 * C4079 + C5156 * C4178 + C5461 * C4078 +
                      C5151 * C4177 + C5460 * C4077 + C5149 * C4176) *
                         C4075) *
                        C93635 * C801 +
                    ((C5151 * C4176 + C5461 * C4077 + C5156 * C4177 +
                      C5463 * C4078 + (C275 * C4918 + C93673 * C5122) * C4178 +
                      (C275 * C5040 + C93673 * C5449) * C4079) *
                         C4075 +
                     (C4298 * C4176 + C4583 * C4077 + C5154 * C4177 +
                      C5462 * C4078 + (C275 * C4919 + C93673 * C5123) * C4178 +
                      (C275 * C5041 + C93673 * C5450) * C4079) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C93621 * C97 -
          ((C107 * C280 + C92 * C583 + C105 * C279 + C91 * C582 + C103 * C278 +
            C90 * C581 + C101 * C277 + C89 * C580) *
               C93673 +
           (C107 * C112 + C92 * C118 + C105 * C111 + C91 * C117 + C103 * C110 +
            C90 * C116 + C101 * C109 + C89 * C115) *
               C275) *
              C93662 * C93635 * C93621 * C98 +
          ((C101 * C110 + C89 * C116 + C103 * C111 + C90 * C117 + C105 * C112 +
            C91 * C118 + C107 * C113 + C92 * C119) *
               C275 +
           (C101 * C278 + C89 * C581 + C103 * C279 + C90 * C582 + C105 * C280 +
            C91 * C583 + C107 * C281 + C92 * C584) *
               C93673) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116 + C107 * C111 + C92 * C117) *
               C275 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581 + C107 * C279 + C92 * C582) *
               C93673) *
              C93662 * C93635 * C800 -
          ((C107 * C952 + C92 * C1200 + C105 * C953 + C91 * C1201 +
            C103 * C954 + C90 * C1202 + C101 * C955 + C89 * C1203) *
               C93673 +
           (C107 * C804 + C92 * C812 + C105 * C805 + C91 * C813 + C103 * C806 +
            C90 * C814 + C101 * C807 + C89 * C815) *
               C275) *
              C93662 * C93635 * C801 +
          ((C101 * C808 + C89 * C816 + C103 * C809 + C90 * C817 + C105 * C810 +
            C91 * C818 + C107 * C811 + C92 * C819) *
               C275 +
           (C101 * C956 + C89 * C1204 + C103 * C957 + C90 * C1205 +
            C105 * C958 + C91 * C1206 + C107 * C959 + C92 * C1207) *
               C93673) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C4081 * C807 + C4075 * C815 + C4083 * C806 + C93587 * C814) *
                C275 +
            (C4081 * C955 + C4075 * C1203 + C4083 * C954 + C93587 * C1202) *
                C93673) *
               C4078 +
           ((C4081 * C808 + C4075 * C816 + C4083 * C809 + C93587 * C817) *
                C275 +
            (C4081 * C956 + C4075 * C1204 + C4083 * C957 + C93587 * C1205) *
                C93673) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C4083 * C958 + C93587 * C1206 + C4081 * C957 + C4075 * C1205) *
                C93673 +
            (C4083 * C810 + C93587 * C818 + C4081 * C809 + C4075 * C817) *
                C275) *
               C4079 +
           ((C4083 * C953 + C93587 * C1201 + C4081 * C954 + C4075 * C1202) *
                C93673 +
            (C4083 * C805 + C93587 * C813 + C4081 * C806 + C4075 * C814) *
                C275) *
               C4078 +
           ((C4083 * C278 + C93587 * C581 + C4081 * C277 + C4075 * C580) *
                C93673 +
            (C4083 * C110 + C93587 * C116 + C4081 * C109 + C4075 * C115) *
                C275) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C4081 * C110 + C4075 * C116 + C4083 * C111 + C93587 * C117) *
                C275 +
            (C4081 * C278 + C4075 * C581 + C4083 * C279 + C93587 * C582) *
                C93673) *
               C4077 +
           ((C4081 * C805 + C4075 * C813 + C4083 * C804 + C93587 * C812) *
                C275 +
            (C4081 * C953 + C4075 * C1201 + C4083 * C952 + C93587 * C1200) *
                C93673) *
               C4078 +
           ((C4081 * C810 + C4075 * C818 + C4083 * C811 + C93587 * C819) *
                C275 +
            (C4081 * C958 + C4075 * C1206 + C4083 * C959 + C93587 * C1207) *
                C93673) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4081 * C108 + C4075 * C114 + C4083 * C109 + C93587 * C115) *
                C275 +
            (C4081 * C276 + C4075 * C579 + C4083 * C277 + C93587 * C580) *
                C93673) *
               C4077 +
           ((C5270 + C5271) * C275 + (C5555 + C5556) * C93673) * C4078 +
           C5563 * C4079) *
              C93635 * C800 -
          (((C5559 + C5560) * C93673 + (C5280 + C5281) * C275) * C4079 +
           ((C5558 + C5557) * C93673 + (C5275 + C5274) * C275) * C4078 +
           ((C5556 + C5555) * C93673 + (C5271 + C5270) * C275) * C4077) *
              C93635 * C801 +
          (C5563 * C4077 +
           ((C5281 + C5280) * C275 + (C5560 + C5559) * C93673) * C4078 +
           ((C4081 * C4918 + C4075 * C4922 + C4083 * C4919 + C93587 * C4923) *
                C275 +
            (C4081 * C5122 + C4075 * C5539 + C4083 * C5123 + C93587 * C5540) *
                C93673) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C93621 * C97 -
          ((C661 + C653) * C92 + (C660 + C648) * C91 + (C659 + C645) * C90 +
           (C658 + C642) * C89) *
              C93635 * C93621 * C98 +
          (C662 * C89 + C663 * C90 + (C653 + C661) * C91 +
           ((C188 * C113 + C93662 * C194) * C275 +
            (C188 * C281 + C93662 * C640) * C93673) *
               C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C275 +
            (C188 * C276 + C93662 * C635) * C93673) *
               C89 +
           (C642 + C658) * C90 + C662 * C91 + C663 * C92) *
              C93635 * C800 -
          (((C188 * C952 + C93662 * C1258) * C93673 +
            (C188 * C804 + C93662 * C886) * C275) *
               C92 +
           ((C188 * C953 + C93662 * C1259) * C93673 +
            (C188 * C805 + C93662 * C887) * C275) *
               C91 +
           ((C188 * C954 + C93662 * C1260) * C93673 +
            (C188 * C806 + C93662 * C888) * C275) *
               C90 +
           ((C188 * C955 + C93662 * C1261) * C93673 +
            (C188 * C807 + C93662 * C889) * C275) *
               C89) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C275 +
            (C188 * C956 + C93662 * C1262) * C93673) *
               C89 +
           ((C188 * C809 + C93662 * C891) * C275 +
            (C188 * C957 + C93662 * C1263) * C93673) *
               C90 +
           ((C188 * C810 + C93662 * C892) * C275 +
            (C188 * C958 + C93662 * C1264) * C93673) *
               C91 +
           ((C188 * C811 + C93662 * C893) * C275 +
            (C188 * C959 + C93662 * C1265) * C93673) *
               C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C4750 + C4751 + C4752) * C93673 + (C4213 + C4214 + C4215) * C275) *
               C93587 +
           ((C4749 + C4748 + C4747) * C93673 + (C4206 + C4205 + C4204) * C275) *
               C4075) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C275 + (C4752 + C4751 + C4750) * C93673) *
               C4075 +
           ((C4176 * C111 + C4077 * C192 + C4177 * C804 + C4078 * C886 +
             C4178 * C811 + C4079 * C893) *
                C275 +
            (C4176 * C279 + C4077 * C638 + C4177 * C952 + C4078 * C1258 +
             C4178 * C959 + C4079 * C1265) *
                C93673) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C275 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C93673) *
               C4075 +
           ((C4204 + C4205 + C4206) * C275 + (C4747 + C4748 + C4749) * C93673) *
               C93587) *
              C93635 * C800 -
          (((C4178 * C5120 + C4079 * C5637 + C4177 * C957 + C4078 * C1263 +
             C4176 * C954 + C4077 * C1260) *
                C93673 +
            (C4178 * C4916 + C4079 * C5038 + C4177 * C809 + C4078 * C891 +
             C4176 * C806 + C4077 * C888) *
                C275) *
               C93587 +
           ((C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C93673 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C275) *
               C4075) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C275 +
            (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
             C4178 * C5122 + C4079 * C5639) *
                C93673) *
               C4075 +
           ((C4176 * C809 + C4077 * C891 + C4177 * C4916 + C4078 * C5038 +
             C4178 * C4919 + C4079 * C5041) *
                C275 +
            (C4176 * C957 + C4077 * C1263 + C4177 * C5120 + C4078 * C5637 +
             C4178 * C5123 + C4079 * C5640) *
                C93673) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C93621 * C97 -
          (C750 * C92 + C749 * C91 + C748 * C90 + C747 * C89) * C93635 *
              C93621 * C98 +
          (C748 * C89 + C749 * C90 + C750 * C91 +
           (C713 * C113 + C734 + C734 + C93673 * C719) * C93662 * C92) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C93662 * C89 +
           C747 * C90 + C748 * C91 + C749 * C92) *
              C93635 * C800 -
          ((C713 * C804 + C1325 + C1325 + C93673 * C1316) * C93662 * C92 +
           (C713 * C805 + C1326 + C1326 + C93673 * C1317) * C93662 * C91 +
           (C713 * C806 + C1327 + C1327 + C93673 * C1318) * C93662 * C90 +
           (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C93662 * C89) *
              C93635 * C801 +
          ((C713 * C808 + C1329 + C1329 + C93673 * C1320) * C93662 * C89 +
           (C713 * C809 + C1330 + C1330 + C93673 * C1321) * C93662 * C90 +
           (C713 * C810 + C1331 + C1331 + C93673 * C1322) * C93662 * C91 +
           (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93662 * C92) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            (C713 * C807 + C1328 + C1328 + C93673 * C1319) * C4078 +
            (C713 * C808 + C1329 + C1329 + C93673 * C1320) * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C93621 * C97 -
          ((C4842 + C4833 + C4834) * C93587 + (C4841 + C4828 + C4827) * C4075) *
              C93635 * C93621 * C98 +
          ((C4834 + C4833 + C4842) * C4075 +
           (C745 * C4077 + C2624 * C4078 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C4079) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C4077 +
            C5740 * C4078 + C5741 * C4079) *
               C4075 +
           (C4827 + C4828 + C4841) * C93587) *
              C93635 * C800 -
          ((C5742 * C4079 + C4839 * C4078 + C2626 * C4077) * C93587 +
           (C5743 * C4079 + C5741 * C4078 + C5740 * C4077) * C4075) *
              C93635 * C801 +
          ((C5741 * C4077 + C5743 * C4078 +
            (C713 * C4918 + C5730 + C5730 + C93673 * C5717) * C4079) *
               C4075 +
           (C4839 * C4077 + C5742 * C4078 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C4079) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93673 * C93844 +
                      (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                         C93635 * C1979 -
                     ((C46560 + C46561) * C93673 * C45718 +
                      (C46559 + C46558) * C93673 * C93845 +
                      (C46557 + C46556) * C93673 * C93844) *
                         C93635 * C1980) *
                        C1981 +
                    (((C48049 + C48050) * C93673 * C93844 +
                      (C48051 + C48052) * C93673 * C93845 +
                      (C45719 * C4916 + C48039 + C48039 + C93805 * C4924 +
                       C45721 * C6615 + C48040 + C48040 + C93587 * C6617) *
                          C93673 * C45718) *
                         C93635 * C1980 -
                     ((C48052 + C48051) * C93673 * C45718 +
                      (C48050 + C48049) * C93673 * C93845 +
                      (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                       C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                          C93673 * C93844) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C91732 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93805 +
                      (C45843 + C45844 + C45845) * C91722 +
                      (C45846 + C45847 + C45848) * C93587) *
                         C93673 * C93635 * C1979 -
                     ((C48163 + C48164 + C48165) * C93587 +
                      (C48166 + C48167 + C48168) * C91722 +
                      (C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                       C93845 * C898 + C45815 * C815 + C93844 * C897) *
                          C93805 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C91732) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    (((C48168 + C48167 + C48166) * C91732 +
                      (C48165 + C48164 + C48163) * C93805 +
                      (C45815 * C805 + C93844 * C887 + C45816 * C810 +
                       C93845 * C892 + C45817 * C6615 + C45718 * C6738) *
                          C91722 +
                      (C45815 * C813 + C93844 * C895 + C45816 * C818 +
                       C93845 * C900 + C45817 * C6616 + C45718 * C6739) *
                          C93587) *
                         C93673 * C93635 * C1980 -
                     ((C45849 + C45850 + C45851) * C93587 +
                      (C45852 + C45853 + C45854) * C91722 +
                      (C45848 + C45847 + C45846) * C93805 +
                      (C45845 + C45844 + C45843) * C91732) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C91732 +
             (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
             C306 * C93587) *
                C93844 +
            (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
               C93635 * C1979 -
           ((C46720 + C46721 + C46722 + C46723) * C45718 +
            (C46719 + C46718 + C46717 + C46716) * C93845 +
            (C46715 + C46714 + C46713 + C46712) * C93844) *
               C93635 * C1980) *
              C1981 +
          (((C48267 + C48268 + C48269 + C48270) * C93844 +
            (C48271 + C48272 + C48273 + C48274) * C93845 +
            (C5154 * C91732 + C5153 * C93805 +
             (C275 * C6615 + C93673 * C6856) * C91722 +
             (C275 * C6616 + C93673 * C6857) * C93587) *
                C45718) *
               C93635 * C1980 -
           ((C48274 + C48273 + C48272 + C48271) * C45718 +
            (C48270 + C48269 + C48268 + C48267) * C93845 +
            (C308 * C93587 + C307 * C91722 + C306 * C93805 + C305 * C91732) *
                C93844) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C45815 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93844 +
            (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
            C46837 * C45817 + C46838 * C45718) *
               C93673 * C93635 * C1979 -
           ((C46833 + C46834) * C45718 + (C46835 + C46836) * C45817 +
            (C46832 + C46831) * C93845 + (C46830 + C46829) * C45816 +
            (C46828 + C46827) * C93844 + (C46826 + C46825) * C45815) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C48389 + C48390) * C45815 + (C48391 + C48392) * C93844 +
            (C48393 + C48394) * C45816 + (C48395 + C48396) * C93845 +
            (C91732 * C4916 + C93805 * C4920 + C91722 * C6615 +
             C93587 * C6616) *
                C45817 +
            (C91732 * C5038 + C93805 * C5241 + C91722 * C6738 +
             C93587 * C6964) *
                C45718) *
               C93673 * C93635 * C1980 -
           ((C48396 + C48395) * C45718 + (C48394 + C48393) * C45817 +
            (C48392 + C48391) * C93845 + (C48390 + C48389) * C45816 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93844 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C45815) *
               C93673 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93805 +
                      (C46116 + C46117 + C46118) * C93587) *
                         C93673 * C93635 * C1979 -
                     ((C48510 + C48511 + C48512) * C93587 +
                      (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                       C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                       C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                          C93805) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    (((C48512 + C48511 + C48510) * C93805 +
                      (C46076 * C805 + C48501 + C48501 + C93844 * C1077 +
                       C46077 * C810 + C48502 + C48502 + C93845 * C1082 +
                       C46078 * C6615 + C48503 + C48503 + C45718 * C7087) *
                          C93587) *
                         C93673 * C93635 * C1980 -
                     ((C46119 + C46120 + C46121) * C93587 +
                      (C46118 + C46117 + C46116) * C93805) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C45815 +
             (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
             C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
                C93805 +
            (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
               C93635 * C1979 -
           ((C48611 + C48612 + C48613 + C48614 + C48615 + C48616) * C93587 +
            (C5463 * C45718 + C5156 * C45817 + C5461 * C93845 + C5151 * C45816 +
             C5460 * C93844 + C5149 * C45815) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C48616 + C48615 + C48614 + C48613 + C48612 + C48611) * C93805 +
            (C2160 * C45815 + C2390 * C93844 + C4301 * C45816 + C4584 * C93845 +
             (C275 * C6615 + C93673 * C6856) * C45817 +
             (C275 * C6738 + C93673 * C7204) * C45718) *
                C93587) *
               C93635 * C1980 -
           ((C46202 + C46203 + C46204 + C46205 + C46206 + C46207) * C93587 +
            (C46201 + C46200 + C46199 + C46198 + C46197 + C46196) * C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C275 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93673) *
                C93844 +
            ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
            C47094 * C45718) *
               C93635 * C1979 -
           (((C47090 + C47091) * C93673 + (C46835 + C46836) * C275) * C45718 +
            ((C47089 + C47088) * C93673 + (C46830 + C46829) * C275) * C93845 +
            ((C47087 + C47086) * C93673 + (C46826 + C46825) * C275) * C93844) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C275 + (C48723 + C48724) * C93673) * C93844 +
            ((C48393 + C48394) * C275 + (C48725 + C48726) * C93673) * C93845 +
            ((C91732 * C4916 + C93805 * C4920 + C91722 * C6615 +
              C93587 * C6616) *
                 C275 +
             (C91732 * C5120 + C93805 * C5537 + C91722 * C6856 +
              C93587 * C7309) *
                 C93673) *
                C45718) *
               C93635 * C1980 -
           (((C48726 + C48725) * C93673 + (C48394 + C48393) * C275) * C45718 +
            ((C48724 + C48723) * C93673 + (C48390 + C48389) * C275) * C93845 +
            ((C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C93673 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C275) *
                C93844) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C275 +
                       (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                        C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                           C93673) *
                          C93805 +
                      ((C45843 + C45844 + C45845) * C275 +
                       (C46368 + C46369 + C46370) * C93673) *
                          C93587) *
                         C93635 * C1979 -
                     (((C48831 + C48832 + C48833) * C93673 +
                       (C48166 + C48167 + C48168) * C275) *
                          C93587 +
                      ((C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                        C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                           C93673 +
                       (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                        C93845 * C890 + C45815 * C807 + C93844 * C889) *
                           C275) *
                          C93805) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C48168 + C48167 + C48166) * C275 +
                       (C48833 + C48832 + C48831) * C93673) *
                          C93805 +
                      ((C45815 * C805 + C93844 * C887 + C45816 * C810 +
                        C93845 * C892 + C45817 * C6615 + C45718 * C6738) *
                           C275 +
                       (C45815 * C953 + C93844 * C1259 + C45816 * C958 +
                        C93845 * C1264 + C45817 * C6856 + C45718 * C7420) *
                           C93673) *
                          C93587) *
                         C93635 * C1980 -
                     (((C46371 + C46372 + C46373) * C93673 +
                       (C45852 + C45853 + C45854) * C275) *
                          C93587 +
                      ((C46370 + C46369 + C46368) * C93673 +
                       (C45845 + C45844 + C45843) * C275) *
                          C93805) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
             C5740 * C93845 + C5741 * C45718) *
                C93805 +
            (C46448 + C46449 + C46450) * C93587) *
               C93635 * C1979 -
           ((C48932 + C48933 + C48934) * C93587 +
            (C5743 * C45718 + C5741 * C93845 + C5740 * C93844) * C93805) *
               C93635 * C1980) *
              C1981 +
          (((C48934 + C48933 + C48932) * C93805 +
            (C2625 * C93844 + C4840 * C93845 +
             (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C45718) *
                C93587) *
               C93635 * C1980 -
           ((C46451 + C46452 + C46453) * C93587 +
            (C46450 + C46449 + C46448) * C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93673 * C93844 +
                      (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                         C2695 -
                     ((C49993 + C49994) * C93673 * C45718 +
                      (C49995 + C49996) * C93673 * C93845 +
                      (C45721 * C1387 + C47321 + C47321 + C93587 * C1403 +
                       C45719 * C1388 + C47322 + C47322 + C93805 * C1404) *
                          C93673 * C93844) *
                         C2696) *
                        C1979 +
                    (((C49996 + C49995) * C93673 * C93844 +
                      (C49994 + C49993) * C93673 * C93845 +
                      (C45719 * C8615 + C49983 + C49983 + C93805 * C8619 +
                       C45721 * C8616 + C49984 + C49984 + C93587 * C8620) *
                          C93673 * C45718) *
                         C2696 -
                     ((C46560 + C46561) * C93673 * C45718 +
                      (C46559 + C46558) * C93673 * C93845 +
                      (C46557 + C46556) * C93673 * C93844) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C91732 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93805 +
                      (C45843 + C45844 + C45845) * C91722 +
                      (C45846 + C45847 + C45848) * C93587) *
                         C93673 * C2695 -
                     ((C49149 + C49150 + C49151) * C93587 +
                      (C49152 + C49153 + C49154) * C91722 +
                      (C45817 * C5824 + C45718 * C5928 + C45816 * C3413 +
                       C93845 * C3495 + C45815 * C1396 + C93844 * C1478) *
                          C93805 +
                      (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                       C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                          C91732) *
                         C93673 * C2696) *
                        C1979 +
                    (((C45815 * C3409 + C93844 * C3491 + C45816 * C5818 +
                       C93845 * C5922 + C45817 * C8615 + C45718 * C8741) *
                          C91732 +
                      (C45815 * C3413 + C93844 * C3495 + C45816 * C5824 +
                       C93845 * C5928 + C45817 * C8617 + C45718 * C8743) *
                          C93805 +
                      (C45815 * C3410 + C93844 * C3492 + C45816 * C5817 +
                       C93845 * C5921 + C45817 * C8616 + C45718 * C8742) *
                          C91722 +
                      (C45815 * C3414 + C93844 * C3496 + C45816 * C5823 +
                       C93845 * C5927 + C45817 * C8618 + C45718 * C8744) *
                          C93587) *
                         C93673 * C2696 -
                     ((C48163 + C48164 + C48165) * C93587 +
                      (C48166 + C48167 + C48168) * C91722 +
                      (C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                       C93845 * C898 + C45815 * C815 + C93844 * C897) *
                          C93805 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C91732) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C91732 +
             (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
             C306 * C93587) *
                C93844 +
            (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
               C2695 -
           ((C50193 + C50194 + C50195 + C50196) * C45718 +
            (C50197 + C50198 + C50199 + C50200) * C93845 +
            (C2875 * C93587 + C2876 * C91722 +
             (C275 * C1396 + C93673 * C1544) * C93805 +
             (C275 * C1388 + C93673 * C1536) * C91732) *
                C93844) *
               C2696) *
              C1979 +
          (((C50200 + C50199 + C50198 + C50197) * C93844 +
            (C50196 + C50195 + C50194 + C50193) * C93845 +
            (C39972 * C91732 + C39971 * C93805 +
             (C275 * C8616 + C93673 * C8844) * C91722 +
             (C275 * C8618 + C93673 * C8846) * C93587) *
                C45718) *
               C2696 -
           ((C46720 + C46721 + C46722 + C46723) * C45718 +
            (C46719 + C46718 + C46717 + C46716) * C93845 +
            (C46715 + C46714 + C46713 + C46712) * C93844) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C45815 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93844 +
            (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
            C46837 * C45817 + C46838 * C45718) *
               C93673 * C2695 -
           ((C50315 + C50316) * C45718 + (C50317 + C50318) * C45817 +
            (C50319 + C50320) * C93845 + (C50321 + C50322) * C45816 +
            (C91722 * C1469 + C93587 * C1601 + C91732 * C1470 +
             C93805 * C1602) *
                C93844 +
            (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 +
             C93805 * C1396) *
                C45815) *
               C93673 * C2696) *
              C1979 +
          (((C50322 + C50321) * C45815 + (C50320 + C50319) * C93844 +
            (C50318 + C50317) * C45816 + (C50316 + C50315) * C93845 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C45817 +
            (C91732 * C8741 + C93805 * C8965 + C91722 * C8742 +
             C93587 * C8966) *
                C45718) *
               C93673 * C2696 -
           ((C46833 + C46834) * C45718 + (C46835 + C46836) * C45817 +
            (C46832 + C46831) * C93845 + (C46830 + C46829) * C45816 +
            (C46828 + C46827) * C93844 + (C46826 + C46825) * C45815) *
               C93673 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93805 +
                      (C46116 + C46117 + C46118) * C93587) *
                         C93673 * C2695 -
                     ((C49464 + C49465 + C49466) * C93587 +
                      (C46078 * C5818 + C47628 + C47628 + C45718 * C6174 +
                       C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                       C46076 * C1388 + C47630 + C47630 + C93844 * C1660) *
                          C93805) *
                         C93673 * C2696) *
                        C1979 +
                    (((C46076 * C3409 + C50421 + C50421 + C93844 * C3709 +
                       C46077 * C5818 + C50422 + C50422 + C93845 * C6174 +
                       C46078 * C8615 + C50423 + C50423 + C45718 * C9089) *
                          C93805 +
                      (C46076 * C3410 + C50424 + C50424 + C93844 * C3710 +
                       C46077 * C5817 + C50425 + C50425 + C93845 * C6173 +
                       C46078 * C8616 + C50426 + C50426 + C45718 * C9090) *
                          C93587) *
                         C93673 * C2696 -
                     ((C48510 + C48511 + C48512) * C93587 +
                      (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                       C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                       C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                          C93805) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C45815 +
             (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
             C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
                C93805 +
            (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
               C2695 -
           ((C49565 + C49566 + C49567 + C49568 + C49569 + C49570) * C93587 +
            (C9202 * C45718 + C8861 * C45817 + C9203 * C93845 + C8863 * C45816 +
             (C275 * C1470 + C93673 * C1726) * C93844 +
             (C275 * C1388 + C93673 * C1536) * C45815) *
                C93805) *
               C2696) *
              C1979 +
          (((C8863 * C45815 + C9203 * C93844 + C8861 * C45816 + C9202 * C93845 +
             C39972 * C45817 + C40200 * C45718) *
                C93805 +
            (C7870 * C45815 + C8195 * C93844 + C7868 * C45816 + C8194 * C93845 +
             (C275 * C8616 + C93673 * C8844) * C45817 +
             (C275 * C8742 + C93673 * C9196) * C45718) *
                C93587) *
               C2696 -
           ((C48611 + C48612 + C48613 + C48614 + C48615 + C48616) * C93587 +
            (C5463 * C45718 + C5156 * C45817 + C5461 * C93845 + C5151 * C45816 +
             C5460 * C93844 + C5149 * C45815) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C275 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93673) *
                C93844 +
            ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
            C47094 * C45718) *
               C2695 -
           (((C50631 + C50632) * C93673 + (C50317 + C50318) * C275) * C45718 +
            ((C50633 + C50634) * C93673 + (C50321 + C50322) * C275) * C93845 +
            ((C91722 * C1535 + C93587 * C1783 + C91732 * C1536 +
              C93805 * C1784) *
                 C93673 +
             (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 +
              C93805 * C1396) *
                 C275) *
                C93844) *
               C2696) *
              C1979 +
          ((((C50322 + C50321) * C275 + (C50634 + C50633) * C93673) * C93844 +
            ((C50318 + C50317) * C275 + (C50632 + C50631) * C93673) * C93845 +
            ((C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
              C93587 * C8618) *
                 C275 +
             (C91732 * C8843 + C93805 * C9301 + C91722 * C8844 +
              C93587 * C9302) *
                 C93673) *
                C45718) *
               C2696 -
           (((C47090 + C47091) * C93673 + (C46835 + C46836) * C275) * C45718 +
            ((C47089 + C47088) * C93673 + (C46830 + C46829) * C275) * C93845 +
            ((C47087 + C47086) * C93673 + (C46826 + C46825) * C275) * C93844) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C275 +
                       (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                        C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                           C93673) *
                          C93805 +
                      ((C45843 + C45844 + C45845) * C275 +
                       (C46368 + C46369 + C46370) * C93673) *
                          C93587) *
                         C2695 -
                     (((C49773 + C49774 + C49775) * C93673 +
                       (C49152 + C49153 + C49154) * C275) *
                          C93587 +
                      ((C45817 * C6008 + C45718 * C6426 + C45816 * C3565 +
                        C93845 * C3923 + C45815 * C1536 + C93844 * C1842) *
                           C93673 +
                       (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                        C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                           C275) *
                          C93805) *
                         C2696) *
                        C1979 +
                    ((((C45815 * C3409 + C93844 * C3491 + C45816 * C5818 +
                        C93845 * C5922 + C45817 * C8615 + C45718 * C8741) *
                           C275 +
                       (C45815 * C3565 + C93844 * C3923 + C45816 * C6008 +
                        C93845 * C6426 + C45817 * C8843 + C45718 * C9413) *
                           C93673) *
                          C93805 +
                      ((C45815 * C3410 + C93844 * C3492 + C45816 * C5817 +
                        C93845 * C5921 + C45817 * C8616 + C45718 * C8742) *
                           C275 +
                       (C45815 * C3566 + C93844 * C3924 + C45816 * C6007 +
                        C93845 * C6425 + C45817 * C8844 + C45718 * C9414) *
                           C93673) *
                          C93587) *
                         C2696 -
                     (((C48831 + C48832 + C48833) * C93673 +
                       (C48166 + C48167 + C48168) * C275) *
                          C93587 +
                      ((C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                        C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                           C93673 +
                       (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                        C93845 * C890 + C45815 * C807 + C93844 * C889) *
                           C275) *
                          C93805) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
             C5740 * C93845 + C5741 * C45718) *
                C93805 +
            (C46448 + C46449 + C46450) * C93587) *
               C2695 -
           ((C49874 + C49875 + C49876) * C93587 +
            (C9526 * C45718 + C9527 * C93845 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93844) *
                C93805) *
               C2696) *
              C1979 +
          (((C9527 * C93844 + C9526 * C93845 + C40422 * C45718) * C93805 +
            (C8515 * C93844 + C8514 * C93845 +
             (C713 * C8616 + C9521 + C9521 + C93673 * C9514) * C45718) *
                C93587) *
               C2696 -
           ((C48932 + C48933 + C48934) * C93587 +
            (C5743 * C45718 + C5741 * C93845 + C5740 * C93844) * C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93673 * C93844 +
                     (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                        C93635 * C800 -
                    ((C46560 + C46561) * C93673 * C45718 +
                     (C46559 + C46558) * C93673 * C93845 +
                     (C46557 + C46556) * C93673 * C93844) *
                        C93635 * C801 +
                    (C46563 * C93844 + (C46561 + C46560) * C93673 * C93845 +
                     (C45719 * C4918 + C46542 + C46542 + C93805 * C4926 +
                      C45721 * C4919 + C46543 + C46543 + C93587 * C4927) *
                         C93673 * C45718) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93673 * C93844 +
                     (C45719 * C807 + C45726 + C45726 + C93805 * C823 +
                      C45721 * C806 + C45727 + C45727 + C93587 * C822) *
                         C93673 * C93845 +
                     (C45719 * C808 + C45728 + C45728 + C93805 * C824 +
                      C45721 * C809 + C45729 + C45729 + C93587 * C825) *
                         C93673 * C45718) *
                        C93635 * C93621 * C97 -
                    ((C45721 * C810 + C45730 + C45730 + C93587 * C826 +
                      C45719 * C809 + C45731 + C45731 + C93805 * C825) *
                         C93673 * C45718 +
                     (C45721 * C805 + C45732 + C45732 + C93587 * C821 +
                      C45719 * C806 + C45733 + C45733 + C93805 * C822) *
                         C93673 * C93845 +
                     (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                      C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                         C93673 * C93844) *
                        C93635 * C93621 * C98 +
                    ((C45719 * C110 + C45736 + C45736 + C93805 * C122 +
                      C45721 * C111 + C45737 + C45737 + C93587 * C123) *
                         C93673 * C93844 +
                     (C45719 * C805 + C45738 + C45738 + C93805 * C821 +
                      C45721 * C804 + C45739 + C45739 + C93587 * C820) *
                         C93673 * C93845 +
                     (C45719 * C810 + C45740 + C45740 + C93805 * C826 +
                      C45721 * C811 + C45741 + C45741 + C93587 * C827) *
                         C93673 * C45718) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93673 * C93844 +
                     (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                        C1382 -
                    ((C45721 * C5817 + C47317 + C47317 + C93587 * C5829 +
                      C45719 * C5818 + C47318 + C47318 + C93805 * C5830) *
                         C93673 * C45718 +
                     (C45721 * C3410 + C47319 + C47319 + C93587 * C3418 +
                      C45719 * C3409 + C47320 + C47320 + C93805 * C3417) *
                         C93673 * C93845 +
                     (C45721 * C1387 + C47321 + C47321 + C93587 * C1403 +
                      C45719 * C1388 + C47322 + C47322 + C93805 * C1404) *
                         C93673 * C93844) *
                        C1383 +
                    ((C45719 * C1389 + C47323 + C47323 + C93805 * C1405 +
                      C45721 * C1390 + C47324 + C47324 + C93587 * C1406) *
                         C93673 * C93844 +
                     (C45719 * C5819 + C47325 + C47325 + C93805 * C5831 +
                      C45721 * C5820 + C47326 + C47326 + C93587 * C5832) *
                         C93673 * C93845 +
                     (C45719 * C5821 + C47327 + C47327 + C93805 * C5833 +
                      C45721 * C5822 + C47328 + C47328 + C93587 * C5834) *
                         C93673 * C45718) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C91732 +
                     (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                      C93845 * C897 + C45817 * C816 + C45718 * C898) *
                         C93805 +
                     (C45843 + C45844 + C45845) * C91722 +
                     (C45846 + C45847 + C45848) * C93587) *
                        C93673 * C93635 * C800 -
                    ((C45817 * C4920 + C45718 * C5042 + C45816 * C817 +
                      C93845 * C899 + C45815 * C814 + C93844 * C896) *
                         C93587 +
                     (C45817 * C4916 + C45718 * C5038 + C45816 * C809 +
                      C93845 * C891 + C45815 * C806 + C93844 * C888) *
                         C91722 +
                     (C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                      C93845 * C898 + C45815 * C815 + C93844 * C897) *
                         C93805 +
                     (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                      C93845 * C890 + C45815 * C807 + C93844 * C889) *
                         C91732) *
                        C93673 * C93635 * C801 +
                    ((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                      C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                         C91732 +
                     (C45815 * C816 + C93844 * C898 + C45816 * C4921 +
                      C93845 * C5043 + C45817 * C4922 + C45718 * C5044) *
                         C93805 +
                     (C45815 * C809 + C93844 * C891 + C45816 * C4916 +
                      C93845 * C5038 + C45817 * C4919 + C45718 * C5041) *
                         C91722 +
                     (C45815 * C817 + C93844 * C899 + C45816 * C4920 +
                      C93845 * C5042 + C45817 * C4923 + C45718 * C5045) *
                         C93587) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C91732 +
                     (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                      C93845 * C897 + C45817 * C816 + C45718 * C898) *
                         C93805 +
                     (C45843 + C45844 + C45845) * C91722 +
                     (C45846 + C45847 + C45848) * C93587) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C45849 + C45850 + C45851) * C93587 +
                     (C45852 + C45853 + C45854) * C91722 +
                     (C45848 + C45847 + C45846) * C93805 +
                     (C45845 + C45844 + C45843) * C91732) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C45854 + C45853 + C45852) * C91732 +
                     (C45851 + C45850 + C45849) * C93805 +
                     (C45815 * C111 + C93844 * C192 + C45816 * C804 +
                      C93845 * C886 + C45817 * C811 + C45718 * C893) *
                         C91722 +
                     (C45815 * C117 + C93844 * C198 + C45816 * C812 +
                      C93845 * C894 + C45817 * C819 + C45718 * C901) *
                         C93587) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C91732 +
                     (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                      C93845 * C897 + C45817 * C816 + C45718 * C898) *
                         C93805 +
                     (C45843 + C45844 + C45845) * C91722 +
                     (C45846 + C45847 + C45848) * C93587) *
                        C93673 * C1382 -
                    ((C45817 * C5823 + C45718 * C5927 + C45816 * C3414 +
                      C93845 * C3496 + C45815 * C1395 + C93844 * C1477) *
                         C93587 +
                     (C45817 * C5817 + C45718 * C5921 + C45816 * C3410 +
                      C93845 * C3492 + C45815 * C1387 + C93844 * C1469) *
                         C91722 +
                     (C45817 * C5824 + C45718 * C5928 + C45816 * C3413 +
                      C93845 * C3495 + C45815 * C1396 + C93844 * C1478) *
                         C93805 +
                     (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                      C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                         C91732) *
                        C93673 * C1383 +
                    ((C45815 * C1389 + C93844 * C1471 + C45816 * C5819 +
                      C93845 * C5923 + C45817 * C5821 + C45718 * C5924) *
                         C91732 +
                     (C45815 * C1397 + C93844 * C1479 + C45816 * C5825 +
                      C93845 * C5929 + C45817 * C5827 + C45718 * C5930) *
                         C93805 +
                     (C45815 * C1390 + C93844 * C1472 + C45816 * C5820 +
                      C93845 * C5925 + C45817 * C5822 + C45718 * C5926) *
                         C91722 +
                     (C45815 * C1398 + C93844 * C1480 + C45816 * C5826 +
                      C93845 * C5931 + C45817 * C5828 + C45718 * C5932) *
                         C93587) *
                        C93673 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C91732 +
            (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
            C306 * C93587) *
               C93844 +
           (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
              C93635 * C800 -
          ((C46720 + C46721 + C46722 + C46723) * C45718 +
           (C46719 + C46718 + C46717 + C46716) * C93845 +
           (C46715 + C46714 + C46713 + C46712) * C93844) *
              C93635 * C801 +
          (C46726 * C93844 + (C46723 + C46722 + C46721 + C46720) * C93845 +
           (C37629 * C91732 + C37628 * C93805 +
            (C275 * C4919 + C93673 * C5123) * C91722 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C91732 +
            (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
            C306 * C93587) *
               C93844 +
           (C5149 * C91732 + C5150 * C93805 + C2162 * C91722 + C2161 * C93587) *
               C93845 +
           (C5151 * C91732 + C5152 * C93805 + C4298 * C91722 + C4299 * C93587) *
               C45718) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C91722 + C4299 * C93805 + C4298 * C91732) *
               C45718 +
           (C2159 * C93587 + C2160 * C91722 + C2161 * C93805 + C2162 * C91732) *
               C93845 +
           (C308 * C93587 + C307 * C91722 + C306 * C93805 + C305 * C91732) *
               C93844) *
              C93635 * C93621 * C98 +
          ((C307 * C91732 + C308 * C93805 + C309 * C91722 + C310 * C93587) *
               C93844 +
           (C2160 * C91732 + C2159 * C93805 + C2158 * C91722 + C2157 * C93587) *
               C93845 +
           (C4301 * C91732 + C4300 * C93805 +
            (C275 * C811 + C93673 * C959) * C91722 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C91732 +
            (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
            C306 * C93587) *
               C93844 +
           (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
              C1382 -
          ((C7867 * C93587 + C7868 * C91722 + C8860 * C93805 + C8861 * C91732) *
               C45718 +
           (C7869 * C93587 + C7870 * C91722 + C8862 * C93805 + C8863 * C91732) *
               C93845 +
           (C2875 * C93587 + C2876 * C91722 +
            (C275 * C1396 + C93673 * C1544) * C93805 +
            (C275 * C1388 + C93673 * C1536) * C91732) *
               C93844) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C91732 +
            (C275 * C1397 + C93673 * C1545) * C93805 +
            (C275 * C1390 + C93673 * C1538) * C91722 +
            (C275 * C1398 + C93673 * C1546) * C93587) *
               C93844 +
           ((C275 * C5819 + C93673 * C6009) * C91732 +
            (C275 * C5825 + C93673 * C6015) * C93805 +
            (C275 * C5820 + C93673 * C6010) * C91722 +
            (C275 * C5826 + C93673 * C6016) * C93587) *
               C93845 +
           ((C275 * C5821 + C93673 * C6011) * C91732 +
            (C275 * C5827 + C93673 * C6017) * C93805 +
            (C275 * C5822 + C93673 * C6012) * C91722 +
            (C275 * C5828 + C93673 * C6018) * C93587) *
               C45718) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C45815 +
           (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
               C93844 +
           (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
           C46837 * C45817 + C46838 * C45718) *
              C93673 * C93635 * C800 -
          ((C46833 + C46834) * C45718 + (C46835 + C46836) * C45817 +
           (C46832 + C46831) * C93845 + (C46830 + C46829) * C45816 +
           (C46828 + C46827) * C93844 + (C46826 + C46825) * C45815) *
              C93673 * C93635 * C801 +
          (C46837 * C45815 + C46838 * C93844 + (C46836 + C46835) * C45816 +
           (C46834 + C46833) * C93845 +
           (C91732 * C4918 + C93805 * C4922 + C91722 * C4919 + C93587 * C4923) *
               C45817 +
           (C91732 * C5040 + C93805 * C5243 + C91722 * C5041 + C93587 * C5244) *
               C45718) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C45815 +
           (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
               C93844 +
           (C91732 * C807 + C93805 * C815 + C91722 * C806 + C93587 * C814) *
               C45816 +
           (C91732 * C889 + C93805 * C1021 + C91722 * C888 + C93587 * C1020) *
               C93845 +
           (C91732 * C808 + C93805 * C816 + C91722 * C809 + C93587 * C817) *
               C45817 +
           (C91732 * C890 + C93805 * C1022 + C91722 * C891 + C93587 * C1023) *
               C45718) *
              C93673 * C93635 * C93621 * C97 -
          ((C91722 * C892 + C93587 * C1024 + C91732 * C891 + C93805 * C1023) *
               C45718 +
           (C91722 * C810 + C93587 * C818 + C91732 * C809 + C93805 * C817) *
               C45817 +
           (C91722 * C887 + C93587 * C1019 + C91732 * C888 + C93805 * C1020) *
               C93845 +
           (C91722 * C805 + C93587 * C813 + C91732 * C806 + C93805 * C814) *
               C45816 +
           (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
               C93844 +
           (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
               C45815) *
              C93673 * C93635 * C93621 * C98 +
          ((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
               C45815 +
           (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
               C93844 +
           (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
               C45816 +
           (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
               C93845 +
           (C91732 * C810 + C93805 * C818 + C91722 * C811 + C93587 * C819) *
               C45817 +
           (C91732 * C892 + C93805 * C1024 + C91722 * C893 + C93587 * C1025) *
               C45718) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C45815 +
           (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
               C93844 +
           (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
           C46837 * C45817 + C46838 * C45718) *
              C93673 * C1382 -
          ((C91722 * C5921 + C93587 * C6093 + C91732 * C5922 + C93805 * C6094) *
               C45718 +
           (C91722 * C5817 + C93587 * C5823 + C91732 * C5818 + C93805 * C5824) *
               C45817 +
           (C91722 * C3492 + C93587 * C3640 + C91732 * C3491 + C93805 * C3639) *
               C93845 +
           (C91722 * C3410 + C93587 * C3414 + C91732 * C3409 + C93805 * C3413) *
               C45816 +
           (C91722 * C1469 + C93587 * C1601 + C91732 * C1470 + C93805 * C1602) *
               C93844 +
           (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 + C93805 * C1396) *
               C45815) *
              C93673 * C1383 +
          ((C91732 * C1389 + C93805 * C1397 + C91722 * C1390 + C93587 * C1398) *
               C45815 +
           (C91732 * C1471 + C93805 * C1603 + C91722 * C1472 + C93587 * C1604) *
               C93844 +
           (C91732 * C5819 + C93805 * C5825 + C91722 * C5820 + C93587 * C5826) *
               C45816 +
           (C91732 * C5923 + C93805 * C6095 + C91722 * C5925 + C93587 * C6096) *
               C93845 +
           (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 + C93587 * C5828) *
               C45817 +
           (C91732 * C5924 + C93805 * C6097 + C91722 * C5926 + C93587 * C6098) *
               C45718) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93805 +
                     (C46116 + C46117 + C46118) * C93587) *
                        C93673 * C93635 * C800 -
                    ((C46078 * C4916 + C46913 + C46913 + C45718 * C5357 +
                      C46077 * C809 + C46914 + C46914 + C93845 * C1081 +
                      C46076 * C806 + C46915 + C46915 + C93844 * C1078) *
                         C93587 +
                     (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                      C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                      C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                         C93805) *
                        C93673 * C93635 * C801 +
                    ((C46076 * C808 + C46919 + C46919 + C93844 * C1080 +
                      C46077 * C4917 + C46920 + C46920 + C93845 * C5358 +
                      C46078 * C4918 + C46921 + C46921 + C45718 * C5359) *
                         C93805 +
                     (C46076 * C809 + C46922 + C46922 + C93844 * C1081 +
                      C46077 * C4916 + C46923 + C46923 + C93845 * C5357 +
                      C46078 * C4919 + C46924 + C46924 + C45718 * C5360) *
                         C93587) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93805 +
                     (C46116 + C46117 + C46118) * C93587) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C46119 + C46120 + C46121) * C93587 +
                     (C46118 + C46117 + C46116) * C93805) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C46121 + C46120 + C46119) * C93805 +
                     (C46076 * C111 + C46101 + C46101 + C93844 * C422 +
                      C46077 * C804 + C46102 + C46102 + C93845 * C1076 +
                      C46078 * C811 + C46103 + C46103 + C45718 * C1083) *
                         C93587) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93805 +
                     (C46116 + C46117 + C46118) * C93587) *
                        C93673 * C1382 -
                    ((C46078 * C5817 + C47625 + C47625 + C45718 * C6173 +
                      C46077 * C3410 + C47626 + C47626 + C93845 * C3710 +
                      C46076 * C1387 + C47627 + C47627 + C93844 * C1659) *
                         C93587 +
                     (C46078 * C5818 + C47628 + C47628 + C45718 * C6174 +
                      C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                      C46076 * C1388 + C47630 + C47630 + C93844 * C1660) *
                         C93805) *
                        C93673 * C1383 +
                    ((C46076 * C1389 + C47631 + C47631 + C93844 * C1661 +
                      C46077 * C5819 + C47632 + C47632 + C93845 * C6175 +
                      C46078 * C5821 + C47633 + C47633 + C45718 * C6176) *
                         C93805 +
                     (C46076 * C1390 + C47634 + C47634 + C93844 * C1662 +
                      C46077 * C5820 + C47635 + C47635 + C93845 * C6177 +
                      C46078 * C5822 + C47636 + C47636 + C45718 * C6178) *
                         C93587) *
                        C93673 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C45815 +
            (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
            C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
               C93805 +
           (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
              C93635 * C800 -
          ((C5462 * C45718 + C5154 * C45817 + C4583 * C93845 + C4298 * C45816 +
            C2391 * C93844 + C2162 * C45815) *
               C93587 +
           (C5463 * C45718 + C5156 * C45817 + C5461 * C93845 + C5151 * C45816 +
            C5460 * C93844 + C5149 * C45815) *
               C93805) *
              C93635 * C801 +
          ((C5151 * C45815 + C5461 * C93844 + C5156 * C45816 + C5463 * C93845 +
            C37629 * C45817 + C37819 * C45718) *
               C93805 +
           (C4298 * C45815 + C4583 * C93844 + C5154 * C45816 + C5462 * C93845 +
            (C275 * C4919 + C93673 * C5123) * C45817 +
            (C275 * C5041 + C93673 * C5450) * C45718) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C45815 +
            (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
            C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
               C93805 +
           (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
              C93635 * C93621 * C97 -
          ((C46202 + C46203 + C46204 + C46205 + C46206 + C46207) * C93587 +
           (C46201 + C46200 + C46199 + C46198 + C46197 + C46196) * C93805) *
              C93635 * C93621 * C98 +
          ((C46207 + C46206 + C46205 + C46204 + C46203 + C46202) * C93805 +
           (C309 * C45815 + C522 * C93844 + C2158 * C45816 + C2389 * C93845 +
            (C275 * C811 + C93673 * C959) * C45817 +
            (C275 * C893 + C93673 * C1149) * C45718) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C45815 +
            (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
            C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
               C93805 +
           (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
              C1382 -
          ((C8194 * C45718 + C7868 * C45817 + C8195 * C93845 + C7870 * C45816 +
            C3105 * C93844 + C2876 * C45815) *
               C93587 +
           (C9202 * C45718 + C8861 * C45817 + C9203 * C93845 + C8863 * C45816 +
            (C275 * C1470 + C93673 * C1726) * C93844 +
            (C275 * C1388 + C93673 * C1536) * C45815) *
               C93805) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C45815 +
            (C275 * C1471 + C93673 * C1727) * C93844 +
            (C275 * C5819 + C93673 * C6009) * C45816 +
            (C275 * C5923 + C93673 * C6267) * C93845 +
            (C275 * C5821 + C93673 * C6011) * C45817 +
            (C275 * C5924 + C93673 * C6268) * C45718) *
               C93805 +
           ((C275 * C1390 + C93673 * C1538) * C45815 +
            (C275 * C1472 + C93673 * C1728) * C93844 +
            (C275 * C5820 + C93673 * C6010) * C45816 +
            (C275 * C5925 + C93673 * C6269) * C93845 +
            (C275 * C5822 + C93673 * C6012) * C45817 +
            (C275 * C5926 + C93673 * C6270) * C45718) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C275 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93673) *
               C93844 +
           ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
           C47094 * C45718) *
              C93635 * C800 -
          (((C47090 + C47091) * C93673 + (C46835 + C46836) * C275) * C45718 +
           ((C47089 + C47088) * C93673 + (C46830 + C46829) * C275) * C93845 +
           ((C47087 + C47086) * C93673 + (C46826 + C46825) * C275) * C93844) *
              C93635 * C801 +
          (C47094 * C93844 +
           ((C46836 + C46835) * C275 + (C47091 + C47090) * C93673) * C93845 +
           ((C91732 * C4918 + C93805 * C4922 + C91722 * C4919 +
             C93587 * C4923) *
                C275 +
            (C91732 * C5122 + C93805 * C5539 + C91722 * C5123 +
             C93587 * C5540) *
                C93673) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C275 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93673) *
               C93844 +
           ((C91732 * C807 + C93805 * C815 + C91722 * C806 + C93587 * C814) *
                C275 +
            (C91732 * C955 + C93805 * C1203 + C91722 * C954 + C93587 * C1202) *
                C93673) *
               C93845 +
           ((C91732 * C808 + C93805 * C816 + C91722 * C809 + C93587 * C817) *
                C275 +
            (C91732 * C956 + C93805 * C1204 + C91722 * C957 + C93587 * C1205) *
                C93673) *
               C45718) *
              C93635 * C93621 * C97 -
          (((C91722 * C958 + C93587 * C1206 + C91732 * C957 + C93805 * C1205) *
                C93673 +
            (C91722 * C810 + C93587 * C818 + C91732 * C809 + C93805 * C817) *
                C275) *
               C45718 +
           ((C91722 * C953 + C93587 * C1201 + C91732 * C954 + C93805 * C1202) *
                C93673 +
            (C91722 * C805 + C93587 * C813 + C91732 * C806 + C93805 * C814) *
                C275) *
               C93845 +
           ((C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93673 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C275) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C275 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C93673) *
               C93844 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C275 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C93673) *
               C93845 +
           ((C91732 * C810 + C93805 * C818 + C91722 * C811 + C93587 * C819) *
                C275 +
            (C91732 * C958 + C93805 * C1206 + C91722 * C959 + C93587 * C1207) *
                C93673) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C275 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93673) *
               C93844 +
           ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
           C47094 * C45718) *
              C1382 -
          (((C91722 * C6007 + C93587 * C6345 + C91732 * C6008 +
             C93805 * C6346) *
                C93673 +
            (C91722 * C5817 + C93587 * C5823 + C91732 * C5818 +
             C93805 * C5824) *
                C275) *
               C45718 +
           ((C91722 * C3566 + C93587 * C3854 + C91732 * C3565 +
             C93805 * C3853) *
                C93673 +
            (C91722 * C3410 + C93587 * C3414 + C91732 * C3409 +
             C93805 * C3413) *
                C275) *
               C93845 +
           ((C91722 * C1535 + C93587 * C1783 + C91732 * C1536 +
             C93805 * C1784) *
                C93673 +
            (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 +
             C93805 * C1396) *
                C275) *
               C93844) *
              C1383 +
          (((C91732 * C1389 + C93805 * C1397 + C91722 * C1390 +
             C93587 * C1398) *
                C275 +
            (C91732 * C1537 + C93805 * C1785 + C91722 * C1538 +
             C93587 * C1786) *
                C93673) *
               C93844 +
           ((C91732 * C5819 + C93805 * C5825 + C91722 * C5820 +
             C93587 * C5826) *
                C275 +
            (C91732 * C6009 + C93805 * C6347 + C91722 * C6010 +
             C93587 * C6348) *
                C93673) *
               C93845 +
           ((C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
             C93587 * C5828) *
                C275 +
            (C91732 * C6011 + C93805 * C6349 + C91722 * C6012 +
             C93587 * C6350) *
                C93673) *
               C45718) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C275 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93673) *
                         C93805 +
                     ((C45843 + C45844 + C45845) * C275 +
                      (C46368 + C46369 + C46370) * C93673) *
                         C93587) *
                        C93635 * C800 -
                    (((C45817 * C5120 + C45718 * C5637 + C45816 * C957 +
                       C93845 * C1263 + C45815 * C954 + C93844 * C1260) *
                          C93673 +
                      (C45817 * C4916 + C45718 * C5038 + C45816 * C809 +
                       C93845 * C891 + C45815 * C806 + C93844 * C888) *
                          C275) *
                         C93587 +
                     ((C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                       C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                          C93673 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C275) *
                         C93805) *
                        C93635 * C801 +
                    (((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                       C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                          C275 +
                      (C45815 * C956 + C93844 * C1262 + C45816 * C5121 +
                       C93845 * C5638 + C45817 * C5122 + C45718 * C5639) *
                          C93673) *
                         C93805 +
                     ((C45815 * C809 + C93844 * C891 + C45816 * C4916 +
                       C93845 * C5038 + C45817 * C4919 + C45718 * C5041) *
                          C275 +
                      (C45815 * C957 + C93844 * C1263 + C45816 * C5120 +
                       C93845 * C5637 + C45817 * C5123 + C45718 * C5640) *
                          C93673) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C275 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93673) *
                         C93805 +
                     ((C45843 + C45844 + C45845) * C275 +
                      (C46368 + C46369 + C46370) * C93673) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C46371 + C46372 + C46373) * C93673 +
                      (C45852 + C45853 + C45854) * C275) *
                         C93587 +
                     ((C46370 + C46369 + C46368) * C93673 +
                      (C45845 + C45844 + C45843) * C275) *
                         C93805) *
                        C93635 * C93621 * C98 +
                    (((C45854 + C45853 + C45852) * C275 +
                      (C46373 + C46372 + C46371) * C93673) *
                         C93805 +
                     ((C45815 * C111 + C93844 * C192 + C45816 * C804 +
                       C93845 * C886 + C45817 * C811 + C45718 * C893) *
                          C275 +
                      (C45815 * C279 + C93844 * C638 + C45816 * C952 +
                       C93845 * C1258 + C45817 * C959 + C45718 * C1265) *
                          C93673) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C275 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93673) *
                         C93805 +
                     ((C45843 + C45844 + C45845) * C275 +
                      (C46368 + C46369 + C46370) * C93673) *
                         C93587) *
                        C1382 -
                    (((C45817 * C6007 + C45718 * C6425 + C45816 * C3566 +
                       C93845 * C3924 + C45815 * C1535 + C93844 * C1841) *
                          C93673 +
                      (C45817 * C5817 + C45718 * C5921 + C45816 * C3410 +
                       C93845 * C3492 + C45815 * C1387 + C93844 * C1469) *
                          C275) *
                         C93587 +
                     ((C45817 * C6008 + C45718 * C6426 + C45816 * C3565 +
                       C93845 * C3923 + C45815 * C1536 + C93844 * C1842) *
                          C93673 +
                      (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                       C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                          C275) *
                         C93805) *
                        C1383 +
                    (((C45815 * C1389 + C93844 * C1471 + C45816 * C5819 +
                       C93845 * C5923 + C45817 * C5821 + C45718 * C5924) *
                          C275 +
                      (C45815 * C1537 + C93844 * C1843 + C45816 * C6009 +
                       C93845 * C6427 + C45817 * C6011 + C45718 * C6428) *
                          C93673) *
                         C93805 +
                     ((C45815 * C1390 + C93844 * C1472 + C45816 * C5820 +
                       C93845 * C5925 + C45817 * C5822 + C45718 * C5926) *
                          C275 +
                      (C45815 * C1538 + C93844 * C1844 + C45816 * C6010 +
                       C93845 * C6429 + C45817 * C6012 + C45718 * C6430) *
                          C93673) *
                         C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
            C5740 * C93845 + C5741 * C45718) *
               C93805 +
           (C46448 + C46449 + C46450) * C93587) *
              C93635 * C800 -
          ((C5742 * C45718 + C4839 * C93845 + C2626 * C93844) * C93587 +
           (C5743 * C45718 + C5741 * C93845 + C5740 * C93844) * C93805) *
              C93635 * C801 +
          ((C5741 * C93844 + C5743 * C93845 + C38000 * C45718) * C93805 +
           (C4839 * C93844 + C5742 * C93845 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C45718) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
            C5740 * C93845 + C5741 * C45718) *
               C93805 +
           (C46448 + C46449 + C46450) * C93587) *
              C93635 * C93621 * C97 -
          ((C46451 + C46452 + C46453) * C93587 +
           (C46450 + C46449 + C46448) * C93805) *
              C93635 * C93621 * C98 +
          ((C46453 + C46452 + C46451) * C93805 +
           (C745 * C93844 + C2624 * C93845 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C45718) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
            C5740 * C93845 + C5741 * C45718) *
               C93805 +
           (C46448 + C46449 + C46450) * C93587) *
              C1382 -
          ((C8514 * C45718 + C8515 * C93845 + C3340 * C93844) * C93587 +
           (C9526 * C45718 + C9527 * C93845 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93844) *
               C93805) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C93844 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C93845 +
            (C713 * C5821 + C6515 + C6515 + C93673 * C6508) * C45718) *
               C93805 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C93844 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C93845 +
            (C713 * C5822 + C6517 + C6517 + C93673 * C6510) * C45718) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93673 * C93844 +
                      (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                         C2695 -
                     ((C45721 * C5817 + C47317 + C47317 + C93587 * C5829 +
                       C45719 * C5818 + C47318 + C47318 + C93805 * C5830) *
                          C93673 * C45718 +
                      (C45721 * C3410 + C47319 + C47319 + C93587 * C3418 +
                       C45719 * C3409 + C47320 + C47320 + C93805 * C3417) *
                          C93673 * C93845 +
                      (C45721 * C1387 + C47321 + C47321 + C93587 * C1403 +
                       C45719 * C1388 + C47322 + C47322 + C93805 * C1404) *
                          C93673 * C93844) *
                         C2696) *
                        C93621 * C1981 +
                    (((C45719 * C1387 + C49033 + C49033 + C93805 * C1403 +
                       C45721 * C1386 + C49034 + C49034 + C93587 * C1402) *
                          C93673 * C93844 +
                      (C45719 * C3410 + C49035 + C49035 + C93805 * C3418 +
                       C45721 * C3411 + C49036 + C49036 + C93587 * C3419) *
                          C93673 * C93845 +
                      (C45719 * C5817 + C49037 + C49037 + C93805 * C5829 +
                       C45721 * C7631 + C49038 + C49038 + C93587 * C7633) *
                          C93673 * C45718) *
                         C2696 -
                     ((C48052 + C48051) * C93673 * C45718 +
                      (C48050 + C48049) * C93673 * C93845 +
                      (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                       C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                          C93673 * C93844) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C91732 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93805 +
                      (C45843 + C45844 + C45845) * C91722 +
                      (C45846 + C45847 + C45848) * C93587) *
                         C93673 * C2695 -
                     ((C49149 + C49150 + C49151) * C93587 +
                      (C49152 + C49153 + C49154) * C91722 +
                      (C45817 * C5824 + C45718 * C5928 + C45816 * C3413 +
                       C93845 * C3495 + C45815 * C1396 + C93844 * C1478) *
                          C93805 +
                      (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                       C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                          C91732) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    (((C49154 + C49153 + C49152) * C91732 +
                      (C49151 + C49150 + C49149) * C93805 +
                      (C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                       C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                          C91722 +
                      (C45815 * C1394 + C93844 * C1476 + C45816 * C3415 +
                       C93845 * C3497 + C45817 * C7632 + C45718 * C7739) *
                          C93587) *
                         C93673 * C2696 -
                     ((C45849 + C45850 + C45851) * C93587 +
                      (C45852 + C45853 + C45854) * C91722 +
                      (C45848 + C45847 + C45846) * C93805 +
                      (C45845 + C45844 + C45843) * C91732) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C91732 +
             (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
             C306 * C93587) *
                C93844 +
            (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
               C2695 -
           ((C7867 * C93587 + C7868 * C91722 + C8860 * C93805 +
             C8861 * C91732) *
                C45718 +
            (C7869 * C93587 + C7870 * C91722 + C8862 * C93805 +
             C8863 * C91732) *
                C93845 +
            (C2875 * C93587 + C2876 * C91722 +
             (C275 * C1396 + C93673 * C1544) * C93805 +
             (C275 * C1388 + C93673 * C1536) * C91732) *
                C93844) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C91732 + C2875 * C93805 + C2874 * C91722 +
             C2873 * C93587) *
                C93844 +
            (C7870 * C91732 + C7869 * C93805 + C18541 * C91722 +
             C18540 * C93587) *
                C93845 +
            (C7868 * C91732 + C7867 * C93805 +
             (C275 * C7631 + C93673 * C7856) * C91722 +
             (C275 * C7632 + C93673 * C7857) * C93587) *
                C45718) *
               C2696 -
           ((C48274 + C48273 + C48272 + C48271) * C45718 +
            (C48270 + C48269 + C48268 + C48267) * C93845 +
            (C308 * C93587 + C307 * C91722 + C306 * C93805 + C305 * C91732) *
                C93844) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C45815 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93844 +
            (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
            C46837 * C45817 + C46838 * C45718) *
               C93673 * C2695 -
           ((C91722 * C5921 + C93587 * C6093 + C91732 * C5922 +
             C93805 * C6094) *
                C45718 +
            (C91722 * C5817 + C93587 * C5823 + C91732 * C5818 +
             C93805 * C5824) *
                C45817 +
            (C91722 * C3492 + C93587 * C3640 + C91732 * C3491 +
             C93805 * C3639) *
                C93845 +
            (C91722 * C3410 + C93587 * C3414 + C91732 * C3409 +
             C93805 * C3413) *
                C45816 +
            (C91722 * C1469 + C93587 * C1601 + C91732 * C1470 +
             C93805 * C1602) *
                C93844 +
            (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 +
             C93805 * C1396) *
                C45815) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C91732 * C1387 + C93805 * C1395 + C91722 * C1386 +
             C93587 * C1394) *
                C45815 +
            (C91732 * C1469 + C93805 * C1601 + C91722 * C1468 +
             C93587 * C1600) *
                C93844 +
            (C91732 * C3410 + C93805 * C3414 + C91722 * C3411 +
             C93587 * C3415) *
                C45816 +
            (C91732 * C3492 + C93805 * C3640 + C91722 * C3493 +
             C93587 * C3641) *
                C93845 +
            (C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
             C93587 * C7632) *
                C45817 +
            (C91732 * C5921 + C93805 * C6093 + C91722 * C7738 +
             C93587 * C7968) *
                C45718) *
               C93673 * C2696 -
           ((C48396 + C48395) * C45718 + (C48394 + C48393) * C45817 +
            (C48392 + C48391) * C93845 + (C48390 + C48389) * C45816 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93844 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C45815) *
               C93673 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93805 +
                      (C46116 + C46117 + C46118) * C93587) *
                         C93673 * C2695 -
                     ((C49464 + C49465 + C49466) * C93587 +
                      (C46078 * C5818 + C47628 + C47628 + C45718 * C6174 +
                       C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                       C46076 * C1388 + C47630 + C47630 + C93844 * C1660) *
                          C93805) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    (((C49466 + C49465 + C49464) * C93805 +
                      (C46076 * C1386 + C49455 + C49455 + C93844 * C1658 +
                       C46077 * C3411 + C49456 + C49456 + C93845 * C3711 +
                       C46078 * C7631 + C49457 + C49457 + C45718 * C8067) *
                          C93587) *
                         C93673 * C2696 -
                     ((C46119 + C46120 + C46121) * C93587 +
                      (C46118 + C46117 + C46116) * C93805) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C45815 +
             (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
             C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
                C93805 +
            (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
               C2695 -
           ((C49565 + C49566 + C49567 + C49568 + C49569 + C49570) * C93587 +
            (C9202 * C45718 + C8861 * C45817 + C9203 * C93845 + C8863 * C45816 +
             (C275 * C1470 + C93673 * C1726) * C93844 +
             (C275 * C1388 + C93673 * C1536) * C45815) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          (((C49570 + C49569 + C49568 + C49567 + C49566 + C49565) * C93805 +
            (C2874 * C45815 + C3104 * C93844 + C18541 * C45816 +
             C18867 * C93845 + (C275 * C7631 + C93673 * C7856) * C45817 +
             (C275 * C7738 + C93673 * C8184) * C45718) *
                C93587) *
               C2696 -
           ((C46202 + C46203 + C46204 + C46205 + C46206 + C46207) * C93587 +
            (C46201 + C46200 + C46199 + C46198 + C46197 + C46196) * C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C275 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93673) *
                C93844 +
            ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
            C47094 * C45718) *
               C2695 -
           (((C91722 * C6007 + C93587 * C6345 + C91732 * C6008 +
              C93805 * C6346) *
                 C93673 +
             (C91722 * C5817 + C93587 * C5823 + C91732 * C5818 +
              C93805 * C5824) *
                 C275) *
                C45718 +
            ((C91722 * C3566 + C93587 * C3854 + C91732 * C3565 +
              C93805 * C3853) *
                 C93673 +
             (C91722 * C3410 + C93587 * C3414 + C91732 * C3409 +
              C93805 * C3413) *
                 C275) *
                C93845 +
            ((C91722 * C1535 + C93587 * C1783 + C91732 * C1536 +
              C93805 * C1784) *
                 C93673 +
             (C91722 * C1387 + C93587 * C1395 + C91732 * C1388 +
              C93805 * C1396) *
                 C275) *
                C93844) *
               C2696) *
              C93621 * C1981 +
          ((((C91732 * C1387 + C93805 * C1395 + C91722 * C1386 +
              C93587 * C1394) *
                 C275 +
             (C91732 * C1535 + C93805 * C1783 + C91722 * C1534 +
              C93587 * C1782) *
                 C93673) *
                C93844 +
            ((C91732 * C3410 + C93805 * C3414 + C91722 * C3411 +
              C93587 * C3415) *
                 C275 +
             (C91732 * C3566 + C93805 * C3854 + C91722 * C3567 +
              C93587 * C3855) *
                 C93673) *
                C93845 +
            ((C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
              C93587 * C7632) *
                 C275 +
             (C91732 * C6007 + C93805 * C6345 + C91722 * C7856 +
              C93587 * C8295) *
                 C93673) *
                C45718) *
               C2696 -
           (((C48726 + C48725) * C93673 + (C48394 + C48393) * C275) * C45718 +
            ((C48724 + C48723) * C93673 + (C48390 + C48389) * C275) * C93845 +
            ((C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C93673 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C275) *
                C93844) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C275 +
                       (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                        C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                           C93673) *
                          C93805 +
                      ((C45843 + C45844 + C45845) * C275 +
                       (C46368 + C46369 + C46370) * C93673) *
                          C93587) *
                         C2695 -
                     (((C49773 + C49774 + C49775) * C93673 +
                       (C49152 + C49153 + C49154) * C275) *
                          C93587 +
                      ((C45817 * C6008 + C45718 * C6426 + C45816 * C3565 +
                        C93845 * C3923 + C45815 * C1536 + C93844 * C1842) *
                           C93673 +
                       (C45817 * C5818 + C45718 * C5922 + C45816 * C3409 +
                        C93845 * C3491 + C45815 * C1388 + C93844 * C1470) *
                           C275) *
                          C93805) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C49154 + C49153 + C49152) * C275 +
                       (C49775 + C49774 + C49773) * C93673) *
                          C93805 +
                      ((C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                        C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                           C275 +
                       (C45815 * C1534 + C93844 * C1840 + C45816 * C3567 +
                        C93845 * C3925 + C45817 * C7856 + C45718 * C8394) *
                           C93673) *
                          C93587) *
                         C2696 -
                     (((C46371 + C46372 + C46373) * C93673 +
                       (C45852 + C45853 + C45854) * C275) *
                          C93587 +
                      ((C46370 + C46369 + C46368) * C93673 +
                       (C45845 + C45844 + C45843) * C275) *
                          C93805) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
             C5740 * C93845 + C5741 * C45718) *
                C93805 +
            (C46448 + C46449 + C46450) * C93587) *
               C2695 -
           ((C49874 + C49875 + C49876) * C93587 +
            (C9526 * C45718 + C9527 * C93845 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C93844) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          (((C49876 + C49875 + C49874) * C93805 +
            (C3339 * C93844 + C19182 * C93845 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C45718) *
                C93587) *
               C2696 -
           ((C46451 + C46452 + C46453) * C93587 +
            (C46450 + C46449 + C46448) * C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93673 * C93844 +
                     (C45719 * C807 + C45726 + C45726 + C93805 * C823 +
                      C45721 * C806 + C45727 + C45727 + C93587 * C822) *
                         C93673 * C93845 +
                     (C45719 * C808 + C45728 + C45728 + C93805 * C824 +
                      C45721 * C809 + C45729 + C45729 + C93587 * C825) *
                         C93673 * C45718) *
                        C93635 * C93621 * C97 -
                    ((C45721 * C810 + C45730 + C45730 + C93587 * C826 +
                      C45719 * C809 + C45731 + C45731 + C93805 * C825) *
                         C93673 * C45718 +
                     (C45721 * C805 + C45732 + C45732 + C93587 * C821 +
                      C45719 * C806 + C45733 + C45733 + C93805 * C822) *
                         C93673 * C93845 +
                     (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                      C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                         C93673 * C93844) *
                        C93635 * C93621 * C98 +
                    ((C45719 * C110 + C45736 + C45736 + C93805 * C122 +
                      C45721 * C111 + C45737 + C45737 + C93587 * C123) *
                         C93673 * C93844 +
                     (C45719 * C805 + C45738 + C45738 + C93805 * C821 +
                      C45721 * C804 + C45739 + C45739 + C93587 * C820) *
                         C93673 * C93845 +
                     (C45719 * C810 + C45740 + C45740 + C93805 * C826 +
                      C45721 * C811 + C45741 + C45741 + C93587 * C827) *
                         C93673 * C45718) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93673 * C93844 +
                     (C46556 + C46557) * C93673 * C93845 + C46563 * C45718) *
                        C93635 * C800 -
                    ((C46560 + C46561) * C93673 * C45718 +
                     (C46559 + C46558) * C93673 * C93845 +
                     (C46557 + C46556) * C93673 * C93844) *
                        C93635 * C801 +
                    (C46563 * C93844 + (C46561 + C46560) * C93673 * C93845 +
                     (C45719 * C4918 + C46542 + C46542 + C93805 * C4926 +
                      C45721 * C4919 + C46543 + C46543 + C93587 * C4927) *
                         C93673 * C45718) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C91732 +
                     (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                      C93845 * C897 + C45817 * C816 + C45718 * C898) *
                         C93805 +
                     (C45843 + C45844 + C45845) * C91722 +
                     (C45846 + C45847 + C45848) * C93587) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C45849 + C45850 + C45851) * C93587 +
                     (C45852 + C45853 + C45854) * C91722 +
                     (C45848 + C45847 + C45846) * C93805 +
                     (C45845 + C45844 + C45843) * C91732) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C45854 + C45853 + C45852) * C91732 +
                     (C45851 + C45850 + C45849) * C93805 +
                     (C45815 * C111 + C93844 * C192 + C45816 * C804 +
                      C93845 * C886 + C45817 * C811 + C45718 * C893) *
                         C91722 +
                     (C45815 * C117 + C93844 * C198 + C45816 * C812 +
                      C93845 * C894 + C45817 * C819 + C45718 * C901) *
                         C93587) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C91732 +
                     (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                      C93845 * C897 + C45817 * C816 + C45718 * C898) *
                         C93805 +
                     (C45843 + C45844 + C45845) * C91722 +
                     (C45846 + C45847 + C45848) * C93587) *
                        C93673 * C93635 * C800 -
                    ((C45817 * C4920 + C45718 * C5042 + C45816 * C817 +
                      C93845 * C899 + C45815 * C814 + C93844 * C896) *
                         C93587 +
                     (C45817 * C4916 + C45718 * C5038 + C45816 * C809 +
                      C93845 * C891 + C45815 * C806 + C93844 * C888) *
                         C91722 +
                     (C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                      C93845 * C898 + C45815 * C815 + C93844 * C897) *
                         C93805 +
                     (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                      C93845 * C890 + C45815 * C807 + C93844 * C889) *
                         C91732) *
                        C93673 * C93635 * C801 +
                    ((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                      C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                         C91732 +
                     (C45815 * C816 + C93844 * C898 + C45816 * C4921 +
                      C93845 * C5043 + C45817 * C4922 + C45718 * C5044) *
                         C93805 +
                     (C45815 * C809 + C93844 * C891 + C45816 * C4916 +
                      C93845 * C5038 + C45817 * C4919 + C45718 * C5041) *
                         C91722 +
                     (C45815 * C817 + C93844 * C899 + C45816 * C4920 +
                      C93845 * C5042 + C45817 * C4923 + C45718 * C5045) *
                         C93587) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C91732 +
            (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
            C306 * C93587) *
               C93844 +
           (C5149 * C91732 + C5150 * C93805 + C2162 * C91722 + C2161 * C93587) *
               C93845 +
           (C5151 * C91732 + C5152 * C93805 + C4298 * C91722 + C4299 * C93587) *
               C45718) *
              C93635 * C93621 * C97 -
          ((C4300 * C93587 + C4301 * C91722 + C4299 * C93805 + C4298 * C91732) *
               C45718 +
           (C2159 * C93587 + C2160 * C91722 + C2161 * C93805 + C2162 * C91732) *
               C93845 +
           (C308 * C93587 + C307 * C91722 + C306 * C93805 + C305 * C91732) *
               C93844) *
              C93635 * C93621 * C98 +
          ((C307 * C91732 + C308 * C93805 + C309 * C91722 + C310 * C93587) *
               C93844 +
           (C2160 * C91732 + C2159 * C93805 + C2158 * C91722 + C2157 * C93587) *
               C93845 +
           (C4301 * C91732 + C4300 * C93805 +
            (C275 * C811 + C93673 * C959) * C91722 +
            (C275 * C819 + C93673 * C967) * C93587) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C91732 +
            (C275 * C114 + C93673 * C282) * C93805 + C305 * C91722 +
            C306 * C93587) *
               C93844 +
           (C46712 + C46713 + C46714 + C46715) * C93845 + C46726 * C45718) *
              C93635 * C800 -
          ((C46720 + C46721 + C46722 + C46723) * C45718 +
           (C46719 + C46718 + C46717 + C46716) * C93845 +
           (C46715 + C46714 + C46713 + C46712) * C93844) *
              C93635 * C801 +
          (C46726 * C93844 + (C46723 + C46722 + C46721 + C46720) * C93845 +
           (C37629 * C91732 + C37628 * C93805 +
            (C275 * C4919 + C93673 * C5123) * C91722 +
            (C275 * C4923 + C93673 * C5127) * C93587) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C45815 +
           (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
               C93844 +
           (C91732 * C807 + C93805 * C815 + C91722 * C806 + C93587 * C814) *
               C45816 +
           (C91732 * C889 + C93805 * C1021 + C91722 * C888 + C93587 * C1020) *
               C93845 +
           (C91732 * C808 + C93805 * C816 + C91722 * C809 + C93587 * C817) *
               C45817 +
           (C91732 * C890 + C93805 * C1022 + C91722 * C891 + C93587 * C1023) *
               C45718) *
              C93673 * C93635 * C93621 * C97 -
          ((C91722 * C892 + C93587 * C1024 + C91732 * C891 + C93805 * C1023) *
               C45718 +
           (C91722 * C810 + C93587 * C818 + C91732 * C809 + C93805 * C817) *
               C45817 +
           (C91722 * C887 + C93587 * C1019 + C91732 * C888 + C93805 * C1020) *
               C93845 +
           (C91722 * C805 + C93587 * C813 + C91732 * C806 + C93805 * C814) *
               C45816 +
           (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
               C93844 +
           (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
               C45815) *
              C93673 * C93635 * C93621 * C98 +
          ((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
               C45815 +
           (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
               C93844 +
           (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
               C45816 +
           (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
               C93845 +
           (C91732 * C810 + C93805 * C818 + C91722 * C811 + C93587 * C819) *
               C45817 +
           (C91732 * C892 + C93805 * C1024 + C91722 * C893 + C93587 * C1025) *
               C45718) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C45815 +
           (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
               C93844 +
           (C46825 + C46826) * C45816 + (C46827 + C46828) * C93845 +
           C46837 * C45817 + C46838 * C45718) *
              C93673 * C93635 * C800 -
          ((C46833 + C46834) * C45718 + (C46835 + C46836) * C45817 +
           (C46832 + C46831) * C93845 + (C46830 + C46829) * C45816 +
           (C46828 + C46827) * C93844 + (C46826 + C46825) * C45815) *
              C93673 * C93635 * C801 +
          (C46837 * C45815 + C46838 * C93844 + (C46836 + C46835) * C45816 +
           (C46834 + C46833) * C93845 +
           (C91732 * C4918 + C93805 * C4922 + C91722 * C4919 + C93587 * C4923) *
               C45817 +
           (C91732 * C5040 + C93805 * C5243 + C91722 * C5041 + C93587 * C5244) *
               C45718) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93805 +
                     (C46116 + C46117 + C46118) * C93587) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C46119 + C46120 + C46121) * C93587 +
                     (C46118 + C46117 + C46116) * C93805) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C46121 + C46120 + C46119) * C93805 +
                     (C46076 * C111 + C46101 + C46101 + C93844 * C422 +
                      C46077 * C804 + C46102 + C46102 + C93845 * C1076 +
                      C46078 * C811 + C46103 + C46103 + C45718 * C1083) *
                         C93587) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93805 +
                     (C46116 + C46117 + C46118) * C93587) *
                        C93673 * C93635 * C800 -
                    ((C46078 * C4916 + C46913 + C46913 + C45718 * C5357 +
                      C46077 * C809 + C46914 + C46914 + C93845 * C1081 +
                      C46076 * C806 + C46915 + C46915 + C93844 * C1078) *
                         C93587 +
                     (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                      C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                      C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                         C93805) *
                        C93673 * C93635 * C801 +
                    ((C46076 * C808 + C46919 + C46919 + C93844 * C1080 +
                      C46077 * C4917 + C46920 + C46920 + C93845 * C5358 +
                      C46078 * C4918 + C46921 + C46921 + C45718 * C5359) *
                         C93805 +
                     (C46076 * C809 + C46922 + C46922 + C93844 * C1081 +
                      C46077 * C4916 + C46923 + C46923 + C93845 * C5357 +
                      C46078 * C4919 + C46924 + C46924 + C45718 * C5360) *
                         C93587) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C45815 +
            (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
            C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
               C93805 +
           (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
              C93635 * C93621 * C97 -
          ((C46202 + C46203 + C46204 + C46205 + C46206 + C46207) * C93587 +
           (C46201 + C46200 + C46199 + C46198 + C46197 + C46196) * C93805) *
              C93635 * C93621 * C98 +
          ((C46207 + C46206 + C46205 + C46204 + C46203 + C46202) * C93805 +
           (C309 * C45815 + C522 * C93844 + C2158 * C45816 + C2389 * C93845 +
            (C275 * C811 + C93673 * C959) * C45817 +
            (C275 * C893 + C93673 * C1149) * C45718) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C45815 +
            (C275 * C189 + C93673 * C501) * C93844 + C5149 * C45816 +
            C5460 * C93845 + C5151 * C45817 + C5461 * C45718) *
               C93805 +
           (C46196 + C46197 + C46198 + C46199 + C46200 + C46201) * C93587) *
              C93635 * C800 -
          ((C5462 * C45718 + C5154 * C45817 + C4583 * C93845 + C4298 * C45816 +
            C2391 * C93844 + C2162 * C45815) *
               C93587 +
           (C5463 * C45718 + C5156 * C45817 + C5461 * C93845 + C5151 * C45816 +
            C5460 * C93844 + C5149 * C45815) *
               C93805) *
              C93635 * C801 +
          ((C5151 * C45815 + C5461 * C93844 + C5156 * C45816 + C5463 * C93845 +
            C37629 * C45817 + C37819 * C45718) *
               C93805 +
           (C4298 * C45815 + C4583 * C93844 + C5154 * C45816 + C5462 * C93845 +
            (C275 * C4919 + C93673 * C5123) * C45817 +
            (C275 * C5041 + C93673 * C5450) * C45718) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C275 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93673) *
               C93844 +
           ((C91732 * C807 + C93805 * C815 + C91722 * C806 + C93587 * C814) *
                C275 +
            (C91732 * C955 + C93805 * C1203 + C91722 * C954 + C93587 * C1202) *
                C93673) *
               C93845 +
           ((C91732 * C808 + C93805 * C816 + C91722 * C809 + C93587 * C817) *
                C275 +
            (C91732 * C956 + C93805 * C1204 + C91722 * C957 + C93587 * C1205) *
                C93673) *
               C45718) *
              C93635 * C93621 * C97 -
          (((C91722 * C958 + C93587 * C1206 + C91732 * C957 + C93805 * C1205) *
                C93673 +
            (C91722 * C810 + C93587 * C818 + C91732 * C809 + C93805 * C817) *
                C275) *
               C45718 +
           ((C91722 * C953 + C93587 * C1201 + C91732 * C954 + C93805 * C1202) *
                C93673 +
            (C91722 * C805 + C93587 * C813 + C91732 * C806 + C93805 * C814) *
                C275) *
               C93845 +
           ((C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93673 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C275) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C275 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C93673) *
               C93844 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C275 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C93673) *
               C93845 +
           ((C91732 * C810 + C93805 * C818 + C91722 * C811 + C93587 * C819) *
                C275 +
            (C91732 * C958 + C93805 * C1206 + C91722 * C959 + C93587 * C1207) *
                C93673) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C275 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93673) *
               C93844 +
           ((C46825 + C46826) * C275 + (C47086 + C47087) * C93673) * C93845 +
           C47094 * C45718) *
              C93635 * C800 -
          (((C47090 + C47091) * C93673 + (C46835 + C46836) * C275) * C45718 +
           ((C47089 + C47088) * C93673 + (C46830 + C46829) * C275) * C93845 +
           ((C47087 + C47086) * C93673 + (C46826 + C46825) * C275) * C93844) *
              C93635 * C801 +
          (C47094 * C93844 +
           ((C46836 + C46835) * C275 + (C47091 + C47090) * C93673) * C93845 +
           ((C91732 * C4918 + C93805 * C4922 + C91722 * C4919 +
             C93587 * C4923) *
                C275 +
            (C91732 * C5122 + C93805 * C5539 + C91722 * C5123 +
             C93587 * C5540) *
                C93673) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C275 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93673) *
                         C93805 +
                     ((C45843 + C45844 + C45845) * C275 +
                      (C46368 + C46369 + C46370) * C93673) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C46371 + C46372 + C46373) * C93673 +
                      (C45852 + C45853 + C45854) * C275) *
                         C93587 +
                     ((C46370 + C46369 + C46368) * C93673 +
                      (C45845 + C45844 + C45843) * C275) *
                         C93805) *
                        C93635 * C93621 * C98 +
                    (((C45854 + C45853 + C45852) * C275 +
                      (C46373 + C46372 + C46371) * C93673) *
                         C93805 +
                     ((C45815 * C111 + C93844 * C192 + C45816 * C804 +
                       C93845 * C886 + C45817 * C811 + C45718 * C893) *
                          C275 +
                      (C45815 * C279 + C93844 * C638 + C45816 * C952 +
                       C93845 * C1258 + C45817 * C959 + C45718 * C1265) *
                          C93673) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C275 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93673) *
                         C93805 +
                     ((C45843 + C45844 + C45845) * C275 +
                      (C46368 + C46369 + C46370) * C93673) *
                         C93587) *
                        C93635 * C800 -
                    (((C45817 * C5120 + C45718 * C5637 + C45816 * C957 +
                       C93845 * C1263 + C45815 * C954 + C93844 * C1260) *
                          C93673 +
                      (C45817 * C4916 + C45718 * C5038 + C45816 * C809 +
                       C93845 * C891 + C45815 * C806 + C93844 * C888) *
                          C275) *
                         C93587 +
                     ((C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                       C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                          C93673 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C275) *
                         C93805) *
                        C93635 * C801 +
                    (((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                       C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                          C275 +
                      (C45815 * C956 + C93844 * C1262 + C45816 * C5121 +
                       C93845 * C5638 + C45817 * C5122 + C45718 * C5639) *
                          C93673) *
                         C93805 +
                     ((C45815 * C809 + C93844 * C891 + C45816 * C4916 +
                       C93845 * C5038 + C45817 * C4919 + C45718 * C5041) *
                          C275 +
                      (C45815 * C957 + C93844 * C1263 + C45816 * C5120 +
                       C93845 * C5637 + C45817 * C5123 + C45718 * C5640) *
                          C93673) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
            C5740 * C93845 + C5741 * C45718) *
               C93805 +
           (C46448 + C46449 + C46450) * C93587) *
              C93635 * C93621 * C97 -
          ((C46451 + C46452 + C46453) * C93587 +
           (C46450 + C46449 + C46448) * C93805) *
              C93635 * C93621 * C98 +
          ((C46453 + C46452 + C46451) * C93805 +
           (C745 * C93844 + C2624 * C93845 +
            (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C45718) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C93844 +
            C5740 * C93845 + C5741 * C45718) *
               C93805 +
           (C46448 + C46449 + C46450) * C93587) *
              C93635 * C800 -
          ((C5742 * C45718 + C4839 * C93845 + C2626 * C93844) * C93587 +
           (C5743 * C45718 + C5741 * C93845 + C5740 * C93844) * C93805) *
              C93635 * C801 +
          ((C5741 * C93844 + C5743 * C93845 + C38000 * C45718) * C93805 +
           (C4839 * C93844 + C5742 * C93845 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C45718) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
             C41997 * C93737) *
                C93844 +
            (C57926 + C57927) * C93845 + C57932 * C45718) *
               C93635 * C1979 -
           ((C57930 + C57931) * C45718 + (C57929 + C57928) * C93845 +
            (C57927 + C57926) * C93844) *
               C93635 * C1980) *
              C1981 +
          (((C59445 + C59446) * C93844 + (C59447 + C59453) * C93845 +
            (C38562 * C93819 +
             (C36998 * C8616 + C39206 + C39206 + C93582 * C8620) * C93737) *
                C45718) *
               C93635 * C1980 -
           ((C59453 + C59447) * C45718 + (C59446 + C59445) * C93845 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93819) *
                C93844) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C36999 +
                       (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                        C93845 * C897 + C45817 * C816 + C45718 * C898) *
                           C93582) *
                          C93819 +
                      ((C58752 + C58753 + C58754) * C36999 +
                       (C58755 + C58756 + C58757) * C93582) *
                          C93737) *
                         C93635 * C1979 -
                     (((C45817 * C8617 + C45718 * C8743 + C45816 * C5824 +
                        C93845 * C5928 + C45815 * C3413 + C93844 * C3495) *
                           C93582 +
                       (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                        C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                           C36999) *
                          C93737 +
                      ((C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                        C93845 * C898 + C45815 * C815 + C93844 * C897) *
                           C93582 +
                       (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                        C93845 * C890 + C45815 * C807 + C93844 * C889) *
                           C36999) *
                          C93819) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C48168 + C48167 + C48166) * C36999 +
                       (C48165 + C48164 + C48163) * C93582) *
                          C93819 +
                      ((C45815 * C3410 + C93844 * C3492 + C45816 * C5817 +
                        C93845 * C5921 + C45817 * C8616 + C45718 * C8742) *
                           C36999 +
                       (C45815 * C3414 + C93844 * C3496 + C45816 * C5823 +
                        C93845 * C5927 + C45817 * C8618 + C45718 * C8744) *
                           C93582) *
                          C93737) *
                         C93635 * C1980 -
                     (((C49149 + C49150 + C49151) * C93582 +
                       (C49152 + C49153 + C49154) * C36999) *
                          C93737 +
                      ((C45848 + C45847 + C45846) * C93582 +
                       (C45845 + C45844 + C45843) * C36999) *
                          C93819) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C36999 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93582) *
                C93844 +
            ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
            C58097 * C45718) *
               C93635 * C1979 -
           (((C58093 + C58094) * C93582 + (C58095 + C58096) * C36999) * C45718 +
            ((C26448 + C26449) * C93582 + (C26450 + C26451) * C36999) * C93845 +
            ((C26443 + C26442) * C93582 + (C26441 + C26440) * C36999) *
                C93844) *
               C93635 * C1980) *
              C1981 +
          (((C28482 * C36999 + C28483 * C93582) * C93844 +
            ((C26447 + C26446) * C36999 + (C26445 + C26444) * C93582) * C93845 +
            ((C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
              C93737 * C8844) *
                 C36999 +
             (C20349 * C4920 + C93819 * C5124 + C20350 * C8618 +
              C93737 * C8846) *
                 C93582) *
                C45718) *
               C93635 * C1980 -
           (((C26444 + C26445) * C93582 + (C26446 + C26447) * C36999) * C45718 +
            (C28484 * C93582 + C28485 * C36999) * C93845 +
            ((C20379 + C20378) * C93582 + (C20377 + C20376) * C36999) *
                C93844) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C45815 +
             (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
             C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
                C93819 +
            (C58912 + C58913 + C58914 + C58915 + C58916 + C58917) * C93737) *
               C93635 * C1979 -
           ((C40054 * C45718 + C40055 * C45817 + C40056 * C93845 +
             C40057 * C45816 + C40058 * C93844 + C40059 * C45815) *
                C93737 +
            (C37704 * C45718 + C37703 * C45817 + C37702 * C93845 +
             C37701 * C45816 + C37700 * C93844 + C37699 * C45815) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C45815 + C38783 * C93844 + C38784 * C45816 +
             C38785 * C93845 + C38786 * C45817 + C38787 * C45718) *
                C93819 +
            (C43167 * C45815 + C43168 * C93844 + C59752 * C45816 +
             C59753 * C93845 + (C36999 * C8616 + C93582 * C8618) * C45817 +
             (C36999 * C8742 + C93582 * C8966) * C45718) *
                C93737) *
               C93635 * C1980 -
           ((C59753 * C45718 + C59752 * C45817 + C43168 * C93845 +
             C43167 * C45816 + C44104 * C93844 + C44103 * C45815) *
                C93737 +
            (C38785 * C45718 + C38784 * C45817 + C38783 * C93845 +
             C38782 * C45816 + (C36999 * C190 + C93582 * C363) * C93844 +
             (C36999 * C109 + C93582 * C115) * C45815) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93582 * C93819 +
                      (C59025 + C59026 + C59027) * C93582 * C93737) *
                         C93635 * C1979 -
                     ((C46078 * C8615 + C50423 + C50423 + C45718 * C9089 +
                       C46077 * C5818 + C50422 + C50422 + C93845 * C6174 +
                       C46076 * C3409 + C50421 + C50421 + C93844 * C3709) *
                          C93582 * C93737 +
                      (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                       C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                       C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                          C93582 * C93819) *
                         C93635 * C1980) *
                        C1981 +
                    (((C48512 + C48511 + C48510) * C93582 * C93819 +
                      (C46076 * C3410 + C50424 + C50424 + C93844 * C3710 +
                       C46077 * C5817 + C50425 + C50425 + C93845 * C6173 +
                       C46078 * C8616 + C50426 + C50426 + C45718 * C9090) *
                          C93582 * C93737) *
                         C93635 * C1980 -
                     ((C49464 + C49465 + C49466) * C93582 * C93737 +
                      (C46118 + C46117 + C46116) * C93582 * C93819) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C45815 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93844 +
            (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
            C58081 * C45817 + C58323 * C45718) *
               C93582 * C93635 * C1979 -
           ((C58328 + C58329) * C45718 + (C58095 + C58096) * C45817 +
            (C26766 + C26767) * C93845 + (C26450 + C26451) * C45816 +
            (C26763 + C26762) * C93844 + (C26441 + C26440) * C45815) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C28482 * C45815 + C28898 * C93844 + (C26447 + C26446) * C45816 +
            (C26765 + C26764) * C93845 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C45817 +
            (C20349 * C5038 + C93819 * C5447 + C20350 * C8742 +
             C93737 * C9196) *
                C45718) *
               C93582 * C93635 * C1980 -
           ((C26764 + C26765) * C45718 + (C26446 + C26447) * C45817 +
            C28899 * C93845 + C28485 * C45816 + (C20626 + C20625) * C93844 +
            (C20377 + C20376) * C45815) *
               C93582 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C20349 +
             (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
             C42577 * C93737) *
                C93844 +
            (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
               C93635 * C1979 -
           ((C58412 + C58413 + C58414 + C58415) * C45718 +
            (C58411 + C58410 + C58409 + C58408) * C93845 +
            (C58407 + C58406 + C58405 + C58404) * C93844) *
               C93635 * C1980) *
              C1981 +
          (((C60048 + C60049 + C60050 + C60051) * C93844 +
            (C60052 + C60053 + C60054 + C60058) * C93845 +
            (C38786 * C20349 + C39001 * C93819 +
             (C36999 * C8616 + C93582 * C8618) * C20350 +
             (C36999 * C8844 + C93582 * C9302) * C93737) *
                C45718) *
               C93635 * C1980 -
           ((C60058 + C60054 + C60053 + C60052) * C45718 +
            (C60051 + C60050 + C60049 + C60048) * C93845 +
            (C44421 * C93737 + C44103 * C20350 +
             (C36999 * C277 + C93582 * C580) * C93819 +
             (C36999 * C109 + C93582 * C115) * C20349) *
                C93844) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C20349 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93819 +
                      (C58752 + C58753 + C58754) * C20350 +
                      (C59265 + C59266 + C59267) * C93737) *
                         C93582 * C93635 * C1979 -
                     ((C45817 * C8843 + C45718 * C9413 + C45816 * C6008 +
                       C93845 * C6426 + C45815 * C3565 + C93844 * C3923) *
                          C93737 +
                      (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                       C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                          C20350 +
                      (C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                       C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                          C93819 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C20349) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    (((C48168 + C48167 + C48166) * C20349 +
                      (C48833 + C48832 + C48831) * C93819 +
                      (C45815 * C3410 + C93844 * C3492 + C45816 * C5817 +
                       C93845 * C5921 + C45817 * C8616 + C45718 * C8742) *
                          C20350 +
                      (C45815 * C3566 + C93844 * C3924 + C45816 * C6007 +
                       C93845 * C6425 + C45817 * C8844 + C45718 * C9414) *
                          C93737) *
                         C93582 * C93635 * C1980 -
                     ((C49773 + C49774 + C49775) * C93737 +
                      (C49152 + C49153 + C49154) * C20350 +
                      (C46370 + C46369 + C46368) * C93819 +
                      (C45845 + C45844 + C45843) * C20349) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93844 +
                      (C27090 + C27091) * C93845 + C58567 * C45718) *
                         C93582 * C93635 * C1979 -
                     ((C58578 + C58579) * C45718 + (C27094 + C27095) * C93845 +
                      (C27091 + C27090) * C93844) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    ((C29302 * C93844 + (C27093 + C27092) * C93845 +
                      (C20870 * C4916 + C27076 + C27076 + C93819 * C5715 +
                       C20871 * C8616 + C27077 + C27077 + C93737 * C9514) *
                          C45718) *
                         C93582 * C93635 * C1980 -
                     ((C27092 + C27093) * C45718 + C29303 * C93845 +
                      (C20908 + C20907) * C93844) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
             C41997 * C93737) *
                C93844 +
            (C57926 + C57927) * C93845 + C57932 * C45718) *
               C2695 -
           ((C61241 + C61242) * C45718 + (C61243 + C61244) * C93845 +
            (C41998 * C93737 + C41997 * C93819) * C93844) *
               C2696) *
              C1979 +
          (((C61244 + C61243) * C93844 + (C61242 + C61241) * C93845 +
            (C39821 * C93819 +
             (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C93737) *
                C45718) *
               C2696 -
           ((C57930 + C57931) * C45718 + (C57929 + C57928) * C93845 +
            (C57927 + C57926) * C93844) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C36999 +
                       (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                        C93845 * C897 + C45817 * C816 + C45718 * C898) *
                           C93582) *
                          C93819 +
                      ((C58752 + C58753 + C58754) * C36999 +
                       (C58755 + C58756 + C58757) * C93582) *
                          C93737) *
                         C2695 -
                     (((C58758 + C58759 + C58760) * C93582 +
                       (C58761 + C58762 + C58763) * C36999) *
                          C93737 +
                      ((C58757 + C58756 + C58755) * C93582 +
                       (C58754 + C58753 + C58752) * C36999) *
                          C93819) *
                         C2696) *
                        C1979 +
                    ((((C61355 + C61356 + C61357) * C36999 +
                       (C61358 + C61359 + C61360) * C93582) *
                          C93819 +
                      ((C45815 * C5819 + C93844 * C5923 + C45816 * C5821 +
                        C93845 * C5924 + C45817 * C38050 + C45718 * C38111) *
                           C36999 +
                       (C45815 * C5825 + C93844 * C5929 + C45816 * C5827 +
                        C93845 * C5930 + C45817 * C38051 + C45718 * C38112) *
                           C93582) *
                          C93737) *
                         C2696 -
                     (((C61360 + C61359 + C61358) * C93582 +
                       (C61357 + C61356 + C61355) * C36999) *
                          C93737 +
                      ((C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                        C93845 * C898 + C45815 * C815 + C93844 * C897) *
                           C93582 +
                       (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                        C93845 * C890 + C45815 * C807 + C93844 * C889) *
                           C36999) *
                          C93819) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C36999 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93582) *
                C93844 +
            ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
            C58097 * C45718) *
               C2695 -
           (((C61467 + C61468) * C93582 + (C61469 + C61470) * C36999) * C45718 +
            ((C30922 + C30923) * C93582 + (C30924 + C30925) * C36999) * C93845 +
            ((C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C93582 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C36999) *
                C93844) *
               C2696) *
              C1979 +
          ((((C30925 + C30924) * C36999 + (C30923 + C30922) * C93582) * C93844 +
            ((C61470 + C61469) * C36999 + (C61468 + C61467) * C93582) * C93845 +
            ((C20349 * C8615 + C93819 * C8843 + C20350 * C38050 +
              C93737 * C38163) *
                 C36999 +
             (C20349 * C8617 + C93819 * C8845 + C20350 * C38051 +
              C93737 * C38164) *
                 C93582) *
                C45718) *
               C2696 -
           (((C58093 + C58094) * C93582 + (C58095 + C58096) * C36999) * C45718 +
            ((C26448 + C26449) * C93582 + (C26450 + C26451) * C36999) * C93845 +
            ((C26443 + C26442) * C93582 + (C26441 + C26440) * C36999) *
                C93844) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C45815 +
             (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
             C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
                C93819 +
            (C58912 + C58913 + C58914 + C58915 + C58916 + C58917) * C93737) *
               C2695 -
           ((C58918 + C58919 + C58920 + C58921 + C58922 + C58923) * C93737 +
            (C58917 + C58916 + C58915 + C58914 + C58913 + C58912) * C93819) *
               C2696) *
              C1979 +
          (((C61569 + C61570 + C61571 + C61572 + C61573 + C61574) * C93819 +
            (C41451 * C45815 + C41452 * C93844 + C41454 * C45816 +
             C41453 * C93845 + (C36999 * C38050 + C93582 * C38051) * C45817 +
             (C36999 * C38111 + C93582 * C38215) * C45718) *
                C93737) *
               C2696 -
           ((C61574 + C61573 + C61572 + C61571 + C61570 + C61569) * C93737 +
            (C37704 * C45718 + C37703 * C45817 + C37702 * C93845 +
             C37701 * C45816 + C37700 * C93844 + C37699 * C45815) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93582 * C93819 +
                      (C59025 + C59026 + C59027) * C93582 * C93737) *
                         C2695 -
                     ((C59028 + C59029 + C59030) * C93582 * C93737 +
                      (C59027 + C59026 + C59025) * C93582 * C93819) *
                         C2696) *
                        C1979 +
                    (((C61688 + C61689 + C61690) * C93582 * C93819 +
                      (C46076 * C5819 + C61679 + C61679 + C93844 * C6175 +
                       C46077 * C5821 + C61680 + C61680 + C93845 * C6176 +
                       C46078 * C38050 + C61681 + C61681 + C45718 * C38266) *
                          C93582 * C93737) *
                         C2696 -
                     ((C61690 + C61689 + C61688) * C93582 * C93737 +
                      (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                       C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                       C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                          C93582 * C93819) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C45815 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93844 +
            (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
            C58081 * C45817 + C58323 * C45718) *
               C93582 * C2695 -
           ((C61793 + C61794) * C45718 + (C61469 + C61470) * C45817 +
            (C31338 + C31339) * C93845 + (C30924 + C30925) * C45816 +
            (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
             C93819 * C1726) *
                C93844 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C45815) *
               C93582 * C2696) *
              C1979 +
          (((C30925 + C30924) * C45815 + (C31339 + C31338) * C93844 +
            (C61470 + C61469) * C45816 + (C61794 + C61793) * C93845 +
            (C20349 * C8615 + C93819 * C8843 + C20350 * C38050 +
             C93737 * C38163) *
                C45817 +
            (C20349 * C8741 + C93819 * C9195 + C20350 * C38111 +
             C93737 * C38325) *
                C45718) *
               C93582 * C2696 -
           ((C58328 + C58329) * C45718 + (C58095 + C58096) * C45817 +
            (C26766 + C26767) * C93845 + (C26450 + C26451) * C45816 +
            (C26763 + C26762) * C93844 + (C26441 + C26440) * C45815) *
               C93582 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C20349 +
             (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
             C42577 * C93737) *
                C93844 +
            (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
               C2695 -
           ((C61893 + C61894 + C61895 + C61896) * C45718 +
            (C61897 + C61898 + C61899 + C61900) * C93845 +
            (C42578 * C93737 + C42291 * C20350 + C42577 * C93819 +
             C42289 * C20349) *
                C93844) *
               C2696) *
              C1979 +
          (((C61900 + C61899 + C61898 + C61897) * C93844 +
            (C61896 + C61895 + C61894 + C61893) * C93845 +
            (C40055 * C20349 + C40277 * C93819 +
             (C36999 * C38050 + C93582 * C38051) * C20350 +
             (C36999 * C38163 + C93582 * C38376) * C93737) *
                C45718) *
               C2696 -
           ((C58412 + C58413 + C58414 + C58415) * C45718 +
            (C58411 + C58410 + C58409 + C58408) * C93845 +
            (C58407 + C58406 + C58405 + C58404) * C93844) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C20349 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93819 +
                      (C58752 + C58753 + C58754) * C20350 +
                      (C59265 + C59266 + C59267) * C93737) *
                         C93582 * C2695 -
                     ((C59268 + C59269 + C59270) * C93737 +
                      (C58761 + C58762 + C58763) * C20350 +
                      (C59267 + C59266 + C59265) * C93819 +
                      (C58754 + C58753 + C58752) * C20349) *
                         C93582 * C2696) *
                        C1979 +
                    (((C61355 + C61356 + C61357) * C20349 +
                      (C62005 + C62006 + C62007) * C93819 +
                      (C45815 * C5819 + C93844 * C5923 + C45816 * C5821 +
                       C93845 * C5924 + C45817 * C38050 + C45718 * C38111) *
                          C20350 +
                      (C45815 * C6009 + C93844 * C6427 + C45816 * C6011 +
                       C93845 * C6428 + C45817 * C38163 + C45718 * C38427) *
                          C93737) *
                         C93582 * C2696 -
                     ((C62007 + C62006 + C62005) * C93737 +
                      (C61357 + C61356 + C61355) * C20350 +
                      (C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                       C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                          C93819 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C20349) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eezz[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93844 +
                      (C27090 + C27091) * C93845 + C58567 * C45718) *
                         C93582 * C2695 -
                     ((C62116 + C62117) * C45718 + (C31750 + C31751) * C93845 +
                      (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                       C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                          C93844) *
                         C93582 * C2696) *
                        C1979 +
                    (((C31751 + C31750) * C93844 + (C62117 + C62116) * C93845 +
                      (C20870 * C8615 + C62110 + C62110 + C93819 * C9513 +
                       C20871 * C38050 + C62111 + C62111 + C93737 * C38478) *
                          C45718) *
                         C93582 * C2696 -
                     ((C58578 + C58579) * C45718 + (C27094 + C27095) * C93845 +
                      (C27091 + C27090) * C93844) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
            C41997 * C93737) *
               C93844 +
           (C57926 + C57927) * C93845 + C57932 * C45718) *
              C93635 * C800 -
          ((C57930 + C57931) * C45718 + (C57929 + C57928) * C93845 +
           (C57927 + C57926) * C93844) *
              C93635 * C801 +
          (C57932 * C93844 + (C57931 + C57930) * C93845 +
           (C37507 * C93819 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
            C41997 * C93737) *
               C93844 +
           (C37504 * C93819 + C39823 * C93737) * C93845 +
           (C37505 * C93819 + C39822 * C93737) * C45718) *
              C93635 * C93621 * C97 -
          (((C36998 * C5817 + C39205 + C39205 + C93582 * C5829) * C93737 +
            C38561 * C93819) *
               C45718 +
           (C42861 * C93737 + C38560 * C93819) * C93845 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93819) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93819 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C93844 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93819 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C93845 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93819 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
            C41997 * C93737) *
               C93844 +
           (C57926 + C57927) * C93845 + C57932 * C45718) *
              C1382 -
          ((C41182 * C93737 + C39822 * C93819) * C45718 +
           (C41181 * C93737 + C39823 * C93819) * C93845 +
           (C41998 * C93737 + C41997 * C93819) * C93844) *
              C1383 +
          ((C41998 * C93819 + C42000 * C93737) * C93844 +
           (C41181 * C93819 + C41999 * C93737) * C93845 +
           (C41182 * C93819 +
            (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C93737) *
               C45718) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C36999 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93582) *
                         C93819 +
                     ((C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                       C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                          C36999 +
                      (C45815 * C1396 + C93844 * C1478 + C45816 * C3413 +
                       C93845 * C3495 + C45817 * C5824 + C45718 * C5928) *
                          C93582) *
                         C93737) *
                        C93635 * C800 -
                    (((C45817 * C8617 + C45718 * C8743 + C45816 * C5824 +
                       C93845 * C5928 + C45815 * C3413 + C93844 * C3495) *
                          C93582 +
                      (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                       C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                          C36999) *
                         C93737 +
                     ((C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                       C93845 * C898 + C45815 * C815 + C93844 * C897) *
                          C93582 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C36999) *
                         C93819) *
                        C93635 * C801 +
                    (((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                       C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                          C36999 +
                      (C45815 * C816 + C93844 * C898 + C45816 * C4921 +
                       C93845 * C5043 + C45817 * C4922 + C45718 * C5044) *
                          C93582) *
                         C93819 +
                     ((C45815 * C5818 + C93844 * C5922 + C45816 * C8615 +
                       C93845 * C8741 + C45817 * C39804 + C45718 * C39892) *
                          C36999 +
                      (C45815 * C5824 + C93844 * C5928 + C45816 * C8617 +
                       C93845 * C8743 + C45817 * C39805 + C45718 * C39893) *
                          C93582) *
                         C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C36999 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93582) *
                         C93819 +
                     ((C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                       C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                          C36999 +
                      (C45815 * C1396 + C93844 * C1478 + C45816 * C3413 +
                       C93845 * C3495 + C45817 * C5824 + C45718 * C5928) *
                          C93582) *
                         C93737) *
                        C93635 * C93621 * C97 -
                    (((C49149 + C49150 + C49151) * C93582 +
                      (C49152 + C49153 + C49154) * C36999) *
                         C93737 +
                     ((C45848 + C45847 + C45846) * C93582 +
                      (C45845 + C45844 + C45843) * C36999) *
                         C93819) *
                        C93635 * C93621 * C98 +
                    (((C45854 + C45853 + C45852) * C36999 +
                      (C45851 + C45850 + C45849) * C93582) *
                         C93819 +
                     ((C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                       C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                          C36999 +
                      (C45815 * C1394 + C93844 * C1476 + C45816 * C3415 +
                       C93845 * C3497 + C45817 * C7632 + C45718 * C7739) *
                          C93582) *
                         C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C36999 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93582) *
                         C93819 +
                     ((C58752 + C58753 + C58754) * C36999 +
                      (C58755 + C58756 + C58757) * C93582) *
                         C93737) *
                        C1382 -
                    (((C58758 + C58759 + C58760) * C93582 +
                      (C58761 + C58762 + C58763) * C36999) *
                         C93737 +
                     ((C58757 + C58756 + C58755) * C93582 +
                      (C58754 + C58753 + C58752) * C36999) *
                         C93819) *
                        C1383 +
                    (((C58763 + C58762 + C58761) * C36999 +
                      (C58760 + C58759 + C58758) * C93582) *
                         C93819 +
                     ((C45815 * C11103 + C93844 * C11224 + C45816 * C14027 +
                       C93845 * C14143 + C45817 * C44722 + C45718 * C44827) *
                          C36999 +
                      (C45815 * C11107 + C93844 * C11228 + C45816 * C14029 +
                       C93845 * C14145 + C45817 * C44723 + C45718 * C44828) *
                          C93582) *
                         C93737) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C36999 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93582) *
               C93844 +
           ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
           C58097 * C45718) *
              C93635 * C800 -
          (((C58093 + C58094) * C93582 + (C58095 + C58096) * C36999) * C45718 +
           ((C26448 + C26449) * C93582 + (C26450 + C26451) * C36999) * C93845 +
           ((C26443 + C26442) * C93582 + (C26441 + C26440) * C36999) * C93844) *
              C93635 * C801 +
          (C58097 * C93844 +
           ((C58096 + C58095) * C36999 + (C58094 + C58093) * C93582) * C93845 +
           ((C20349 * C4918 + C93819 * C5122 + C20350 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C20349 * C4922 + C93819 * C5126 + C20350 * C39805 +
             C93737 * C39961) *
                C93582) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C36999 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93582) *
               C93844 +
           ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
           ((C26451 + C26450) * C36999 + (C26449 + C26448) * C93582) * C45718) *
              C93635 * C93621 * C97 -
          (((C26444 + C26445) * C93582 + (C26446 + C26447) * C36999) * C45718 +
           (C28484 * C93582 + C28485 * C36999) * C93845 +
           ((C20379 + C20378) * C93582 + (C20377 + C20376) * C36999) * C93844) *
              C93635 * C93621 * C98 +
          ((C20388 * C36999 + C20389 * C93582) * C93844 +
           ((C22696 + C22695) * C36999 + (C22694 + C22693) * C93582) * C93845 +
           ((C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                C36999 +
            (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
                C93582) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C36999 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93582) *
               C93844 +
           ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
           C58097 * C45718) *
              C1382 -
          (((C20350 * C5827 + C93737 * C6017 + C20349 * C5824 +
             C93819 * C6014) *
                C93582 +
            (C20350 * C5821 + C93737 * C6011 + C20349 * C5818 +
             C93819 * C6008) *
                C36999) *
               C45718 +
           ((C30922 + C30923) * C93582 + (C30924 + C30925) * C36999) * C93845 +
           ((C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
             C93819 * C1544) *
                C93582 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C36999) *
               C93844) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C36999 +
            (C20349 * C1397 + C93819 * C1545 + C20350 * C11107 +
             C93737 * C11349) *
                C93582) *
               C93844 +
           ((C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
             C93737 * C14265) *
                C36999 +
            (C20349 * C5825 + C93819 * C6015 + C20350 * C14029 +
             C93737 * C14267) *
                C93582) *
               C93845 +
           ((C20349 * C5821 + C93819 * C6011 + C20350 * C44722 +
             C93737 * C44951) *
                C36999 +
            (C20349 * C5827 + C93819 * C6017 + C20350 * C44723 +
             C93737 * C44952) *
                C93582) *
               C45718) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C45815 +
            (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
            C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
               C93819 +
           (C42289 * C45815 + C42290 * C93844 + C40059 * C45816 +
            C40058 * C93845 + C40057 * C45817 + C40056 * C45718) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C45718 + C40055 * C45817 + C40056 * C93845 +
            C40057 * C45816 + C40058 * C93844 + C40059 * C45815) *
               C93737 +
           (C37704 * C45718 + C37703 * C45817 + C37702 * C93845 +
            C37701 * C45816 + C37700 * C93844 + C37699 * C45815) *
               C93819) *
              C93635 * C801 +
          ((C37701 * C45815 + C37702 * C93844 + C37703 * C45816 +
            C37704 * C93845 + C37706 * C45817 + C37705 * C45718) *
               C93819 +
           (C40057 * C45815 + C40056 * C93844 + C40055 * C45816 +
            C40054 * C93845 + (C36999 * C39804 + C93582 * C39805) * C45817 +
            (C36999 * C39892 + C93582 * C40040) * C45718) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C45815 +
            (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
            C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
               C93819 +
           (C42289 * C45815 + C42290 * C93844 + C40059 * C45816 +
            C40058 * C93845 + C40057 * C45817 + C40056 * C45718) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C36999 * C5921 + C93582 * C6093) * C45718 +
            (C36999 * C5817 + C93582 * C5823) * C45817 + C43168 * C93845 +
            C43167 * C45816 + C44104 * C93844 + C44103 * C45815) *
               C93737 +
           (C38785 * C45718 + C38784 * C45817 + C38783 * C93845 +
            C38782 * C45816 + (C36999 * C190 + C93582 * C363) * C93844 +
            (C36999 * C109 + C93582 * C115) * C45815) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C45815 +
            (C36999 * C191 + C93582 * C364) * C93844 +
            (C36999 * C805 + C93582 * C813) * C45816 +
            (C36999 * C887 + C93582 * C1019) * C93845 +
            (C36999 * C810 + C93582 * C818) * C45817 +
            (C36999 * C892 + C93582 * C1024) * C45718) *
               C93819 +
           ((C36999 * C1386 + C93582 * C1394) * C45815 +
            (C36999 * C1468 + C93582 * C1600) * C93844 +
            (C36999 * C3411 + C93582 * C3415) * C45816 +
            (C36999 * C3493 + C93582 * C3641) * C93845 +
            (C36999 * C7631 + C93582 * C7632) * C45817 +
            (C36999 * C7738 + C93582 * C7968) * C45718) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C45815 +
            (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
            C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
               C93819 +
           (C58912 + C58913 + C58914 + C58915 + C58916 + C58917) * C93737) *
              C1382 -
          ((C58918 + C58919 + C58920 + C58921 + C58922 + C58923) * C93737 +
           (C58917 + C58916 + C58915 + C58914 + C58913 + C58912) * C93819) *
              C1383 +
          ((C58923 + C58922 + C58921 + C58920 + C58919 + C58918) * C93819 +
           (C42296 * C45815 + C42295 * C93844 + C42294 * C45816 +
            C42293 * C93845 + (C36999 * C44722 + C93582 * C44723) * C45817 +
            (C36999 * C44827 + C93582 * C45069) * C45718) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93582 * C93819 +
                     (C46076 * C1388 + C47630 + C47630 + C93844 * C1660 +
                      C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                      C46078 * C5818 + C47628 + C47628 + C45718 * C6174) *
                         C93582 * C93737) *
                        C93635 * C800 -
                    ((C46078 * C8615 + C50423 + C50423 + C45718 * C9089 +
                      C46077 * C5818 + C50422 + C50422 + C93845 * C6174 +
                      C46076 * C3409 + C50421 + C50421 + C93844 * C3709) *
                         C93582 * C93737 +
                     (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                      C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                      C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                         C93582 * C93819) *
                        C93635 * C801 +
                    ((C46076 * C808 + C46919 + C46919 + C93844 * C1080 +
                      C46077 * C4917 + C46920 + C46920 + C93845 * C5358 +
                      C46078 * C4918 + C46921 + C46921 + C45718 * C5359) *
                         C93582 * C93819 +
                     (C46076 * C5818 + C58246 + C58246 + C93844 * C6174 +
                      C46077 * C8615 + C58247 + C58247 + C93845 * C9089 +
                      C46078 * C39804 + C58248 + C58248 + C45718 * C40125) *
                         C93582 * C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93582 * C93819 +
                     (C46076 * C1388 + C47630 + C47630 + C93844 * C1660 +
                      C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                      C46078 * C5818 + C47628 + C47628 + C45718 * C6174) *
                         C93582 * C93737) *
                        C93635 * C93621 * C97 -
                    ((C49464 + C49465 + C49466) * C93582 * C93737 +
                     (C46118 + C46117 + C46116) * C93582 * C93819) *
                        C93635 * C93621 * C98 +
                    ((C46121 + C46120 + C46119) * C93582 * C93819 +
                     (C46076 * C1386 + C49455 + C49455 + C93844 * C1658 +
                      C46077 * C3411 + C49456 + C49456 + C93845 * C3711 +
                      C46078 * C7631 + C49457 + C49457 + C45718 * C8067) *
                         C93582 * C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93582 * C93819 +
                     (C59025 + C59026 + C59027) * C93582 * C93737) *
                        C1382 -
                    ((C59028 + C59029 + C59030) * C93582 * C93737 +
                     (C59027 + C59026 + C59025) * C93582 * C93819) *
                        C1383 +
                    ((C59030 + C59029 + C59028) * C93582 * C93819 +
                     (C46076 * C11103 + C59010 + C59010 + C93844 * C11546 +
                      C46077 * C14027 + C59011 + C59011 + C93845 * C14479 +
                      C46078 * C44722 + C59012 + C59012 + C45718 * C45176) *
                         C93582 * C93737) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C45815 +
           (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
               C93844 +
           (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
           C58081 * C45817 + C58323 * C45718) *
              C93582 * C93635 * C800 -
          ((C58328 + C58329) * C45718 + (C58095 + C58096) * C45817 +
           (C26766 + C26767) * C93845 + (C26450 + C26451) * C45816 +
           (C26763 + C26762) * C93844 + (C26441 + C26440) * C45815) *
              C93582 * C93635 * C801 +
          (C58081 * C45815 + C58323 * C93844 + (C58096 + C58095) * C45816 +
           (C58329 + C58328) * C93845 +
           (C20349 * C4918 + C93819 * C5122 + C20350 * C39804 +
            C93737 * C39960) *
               C45817 +
           (C20349 * C5040 + C93819 * C5449 + C20350 * C39892 +
            C93737 * C40196) *
               C45718) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C45815 +
           (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
               C93844 +
           (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
           (C26451 + C26450) * C45817 + (C26767 + C26766) * C45718) *
              C93582 * C93635 * C93621 * C97 -
          ((C26764 + C26765) * C45718 + (C26446 + C26447) * C45817 +
           C28899 * C93845 + C28485 * C45816 + (C20626 + C20625) * C93844 +
           (C20377 + C20376) * C45815) *
              C93582 * C93635 * C93621 * C98 +
          (C20388 * C45815 + C20631 * C93844 + (C22696 + C22695) * C45816 +
           (C23009 + C23008) * C93845 +
           (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
               C45817 +
           (C20349 * C892 + C93819 * C1148 + C20350 * C7738 + C93737 * C8184) *
               C45718) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C45815 +
           (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
               C93844 +
           (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
           C58081 * C45817 + C58323 * C45718) *
              C93582 * C1382 -
          ((C20350 * C5924 + C93737 * C6268 + C20349 * C5922 + C93819 * C6266) *
               C45718 +
           (C20350 * C5821 + C93737 * C6011 + C20349 * C5818 + C93819 * C6008) *
               C45817 +
           (C31338 + C31339) * C93845 + (C30924 + C30925) * C45816 +
           (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 + C93819 * C1726) *
               C93844 +
           (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 + C93819 * C1536) *
               C45815) *
              C93582 * C1383 +
          ((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
            C93737 * C11345) *
               C45815 +
           (C20349 * C1471 + C93819 * C1727 + C20350 * C11224 +
            C93737 * C11655) *
               C93844 +
           (C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
            C93737 * C14265) *
               C45816 +
           (C20349 * C5923 + C93819 * C6267 + C20350 * C14143 +
            C93737 * C14595) *
               C93845 +
           (C20349 * C5821 + C93819 * C6011 + C20350 * C44722 +
            C93737 * C44951) *
               C45817 +
           (C20349 * C5924 + C93819 * C6268 + C20350 * C44827 +
            C93737 * C45297) *
               C45718) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C20349 +
            (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
            C42577 * C93737) *
               C93844 +
           (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
              C93635 * C800 -
          ((C58412 + C58413 + C58414 + C58415) * C45718 +
           (C58411 + C58410 + C58409 + C58408) * C93845 +
           (C58407 + C58406 + C58405 + C58404) * C93844) *
              C93635 * C801 +
          (C58418 * C93844 + (C58415 + C58414 + C58413 + C58412) * C93845 +
           (C37706 * C20349 + C37886 * C93819 +
            (C36999 * C39804 + C93582 * C39805) * C20350 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C20349 +
            (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
            C42577 * C93737) *
               C93844 +
           (C37699 * C20349 + C37883 * C93819 + C40059 * C20350 +
            C40279 * C93737) *
               C93845 +
           (C37701 * C20349 + C37884 * C93819 + C40057 * C20350 +
            C40278 * C93737) *
               C45718) *
              C93635 * C93621 * C97 -
          (((C36999 * C6007 + C93582 * C6345) * C93737 +
            (C36999 * C5817 + C93582 * C5823) * C20350 + C39000 * C93819 +
            C38784 * C20349) *
               C45718 +
           (C43475 * C93737 + C43167 * C20350 + C38999 * C93819 +
            C38782 * C20349) *
               C93845 +
           (C44421 * C93737 + C44103 * C20350 +
            (C36999 * C277 + C93582 * C580) * C93819 +
            (C36999 * C109 + C93582 * C115) * C20349) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C20349 +
            (C36999 * C278 + C93582 * C581) * C93819 +
            (C36999 * C1386 + C93582 * C1394) * C20350 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C93844 +
           ((C36999 * C805 + C93582 * C813) * C20349 +
            (C36999 * C953 + C93582 * C1201) * C93819 +
            (C36999 * C3411 + C93582 * C3415) * C20350 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C93845 +
           ((C36999 * C810 + C93582 * C818) * C20349 +
            (C36999 * C958 + C93582 * C1206) * C93819 +
            (C36999 * C7631 + C93582 * C7632) * C20350 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C20349 +
            (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
            C42577 * C93737) *
               C93844 +
           (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
              C1382 -
          ((C41716 * C93737 + C41454 * C20350 + C40278 * C93819 +
            C40057 * C20349) *
               C45718 +
           (C41715 * C93737 + C41451 * C20350 + C40279 * C93819 +
            C40059 * C20349) *
               C93845 +
           (C42578 * C93737 + C42291 * C20350 + C42577 * C93819 +
            C42289 * C20349) *
               C93844) *
              C1383 +
          ((C42291 * C20349 + C42578 * C93819 + C42296 * C20350 +
            C42580 * C93737) *
               C93844 +
           (C41451 * C20349 + C41715 * C93819 + C42294 * C20350 +
            C42579 * C93737) *
               C93845 +
           (C41454 * C20349 + C41716 * C93819 +
            (C36999 * C44722 + C93582 * C44723) * C20350 +
            (C36999 * C44951 + C93582 * C45405) * C93737) *
               C45718) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C20349 +
                     (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                      C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                         C93819 +
                     (C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                      C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                         C20350 +
                     (C45815 * C1536 + C93844 * C1842 + C45816 * C3565 +
                      C93845 * C3923 + C45817 * C6008 + C45718 * C6426) *
                         C93737) *
                        C93582 * C93635 * C800 -
                    ((C45817 * C8843 + C45718 * C9413 + C45816 * C6008 +
                      C93845 * C6426 + C45815 * C3565 + C93844 * C3923) *
                         C93737 +
                     (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                      C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                         C20350 +
                     (C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                      C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                         C93819 +
                     (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                      C93845 * C890 + C45815 * C807 + C93844 * C889) *
                         C20349) *
                        C93582 * C93635 * C801 +
                    ((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                      C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                         C20349 +
                     (C45815 * C956 + C93844 * C1262 + C45816 * C5121 +
                      C93845 * C5638 + C45817 * C5122 + C45718 * C5639) *
                         C93819 +
                     (C45815 * C5818 + C93844 * C5922 + C45816 * C8615 +
                      C93845 * C8741 + C45817 * C39804 + C45718 * C39892) *
                         C20350 +
                     (C45815 * C6008 + C93844 * C6426 + C45816 * C8843 +
                      C93845 * C9413 + C45817 * C39960 + C45718 * C40348) *
                         C93737) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C20349 +
                     (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                      C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                         C93819 +
                     (C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                      C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                         C20350 +
                     (C45815 * C1536 + C93844 * C1842 + C45816 * C3565 +
                      C93845 * C3923 + C45817 * C6008 + C45718 * C6426) *
                         C93737) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C49773 + C49774 + C49775) * C93737 +
                     (C49152 + C49153 + C49154) * C20350 +
                     (C46370 + C46369 + C46368) * C93819 +
                     (C45845 + C45844 + C45843) * C20349) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C45854 + C45853 + C45852) * C20349 +
                     (C46373 + C46372 + C46371) * C93819 +
                     (C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                      C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                         C20350 +
                     (C45815 * C1534 + C93844 * C1840 + C45816 * C3567 +
                      C93845 * C3925 + C45817 * C7856 + C45718 * C8394) *
                         C93737) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C20349 +
                     (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                      C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                         C93819 +
                     (C58752 + C58753 + C58754) * C20350 +
                     (C59265 + C59266 + C59267) * C93737) *
                        C93582 * C1382 -
                    ((C59268 + C59269 + C59270) * C93737 +
                     (C58761 + C58762 + C58763) * C20350 +
                     (C59267 + C59266 + C59265) * C93819 +
                     (C58754 + C58753 + C58752) * C20349) *
                        C93582 * C1383 +
                    ((C58763 + C58762 + C58761) * C20349 +
                     (C59270 + C59269 + C59268) * C93819 +
                     (C45815 * C11103 + C93844 * C11224 + C45816 * C14027 +
                      C93845 * C14143 + C45817 * C44722 + C45718 * C44827) *
                         C20350 +
                     (C45815 * C11345 + C93844 * C11830 + C45816 * C14265 +
                      C93845 * C14801 + C45817 * C44951 + C45718 * C45510) *
                         C93737) *
                        C93582 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezz[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93844 +
                     (C27090 + C27091) * C93845 + C58567 * C45718) *
                        C93582 * C93635 * C800 -
                    ((C58578 + C58579) * C45718 + (C27094 + C27095) * C93845 +
                     (C27091 + C27090) * C93844) *
                        C93582 * C93635 * C801 +
                    (C58567 * C93844 + (C58579 + C58578) * C93845 +
                     (C20870 * C4918 + C58572 + C58572 + C93819 * C5717 +
                      C20871 * C39804 + C58573 + C58573 + C93737 * C40415) *
                         C45718) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93844 +
                     (C27090 + C27091) * C93845 + (C27095 + C27094) * C45718) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C27092 + C27093) * C45718 + C29303 * C93845 +
                     (C20908 + C20907) * C93844) *
                        C93582 * C93635 * C93621 * C98 +
                    (C20913 * C93844 + (C23336 + C23335) * C93845 +
                     (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
                      C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                         C45718) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93844 +
                     (C27090 + C27091) * C93845 + C58567 * C45718) *
                        C93582 * C1382 -
                    ((C20871 * C5821 + C31743 + C31743 + C93737 * C6508 +
                      C20870 * C5818 + C31742 + C31742 + C93819 * C6506) *
                         C45718 +
                     (C31750 + C31751) * C93845 +
                     (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                      C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                         C93844) *
                        C93582 * C1383 +
                    ((C20870 * C1389 + C22371 + C22371 + C93819 * C1901 +
                      C20871 * C11103 + C22372 + C22372 + C93737 * C11920) *
                         C93844 +
                     (C20870 * C5819 + C28066 + C28066 + C93819 * C6507 +
                      C20871 * C14027 + C28067 + C28067 + C93737 * C14907) *
                         C93845 +
                     (C20870 * C5821 + C59345 + C59345 + C93819 * C6508 +
                      C20871 * C44722 + C59346 + C59346 + C93737 * C45621) *
                         C45718) *
                        C93582 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
             C41997 * C93737) *
                C93844 +
            (C57926 + C57927) * C93845 + C57932 * C45718) *
               C2695 -
           ((C41182 * C93737 + C39822 * C93819) * C45718 +
            (C41181 * C93737 + C39823 * C93819) * C93845 +
            (C41998 * C93737 + C41997 * C93819) * C93844) *
               C2696) *
              C93621 * C1981 +
          (((C43783 * C93819 + C43784 * C93737) * C93844 +
            (C42861 * C93819 + C42862 * C93737) * C93845 +
            (C59452 * C93819 +
             (C36998 * C5822 + C42856 + C42856 + C93582 * C5834) * C93737) *
                C45718) *
               C2696 -
           ((C59453 + C59447) * C45718 + (C59446 + C59445) * C93845 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93819) *
                C93844) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                        C93845 * C889 + C45817 * C808 + C45718 * C890) *
                           C36999 +
                       (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                        C93845 * C897 + C45817 * C816 + C45718 * C898) *
                           C93582) *
                          C93819 +
                      ((C58752 + C58753 + C58754) * C36999 +
                       (C58755 + C58756 + C58757) * C93582) *
                          C93737) *
                         C2695 -
                     (((C58758 + C58759 + C58760) * C93582 +
                       (C58761 + C58762 + C58763) * C36999) *
                          C93737 +
                      ((C58757 + C58756 + C58755) * C93582 +
                       (C58754 + C58753 + C58752) * C36999) *
                          C93819) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C49154 + C49153 + C49152) * C36999 +
                       (C49151 + C49150 + C49149) * C93582) *
                          C93819 +
                      ((C45815 * C1390 + C93844 * C1472 + C45816 * C5820 +
                        C93845 * C5925 + C45817 * C5822 + C45718 * C5926) *
                           C36999 +
                       (C45815 * C1398 + C93844 * C1480 + C45816 * C5826 +
                        C93845 * C5931 + C45817 * C5828 + C45718 * C5932) *
                           C93582) *
                          C93737) *
                         C2696 -
                     (((C49149 + C49150 + C49151) * C93582 +
                       (C49152 + C49153 + C49154) * C36999) *
                          C93737 +
                      ((C45848 + C45847 + C45846) * C93582 +
                       (C45845 + C45844 + C45843) * C36999) *
                          C93819) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C36999 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93582) *
                C93844 +
            ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
            C58097 * C45718) *
               C2695 -
           (((C20350 * C5827 + C93737 * C6017 + C20349 * C5824 +
              C93819 * C6014) *
                 C93582 +
             (C20350 * C5821 + C93737 * C6011 + C20349 * C5818 +
              C93819 * C6008) *
                 C36999) *
                C45718 +
            ((C30922 + C30923) * C93582 + (C30924 + C30925) * C36999) * C93845 +
            ((C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C93582 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C36999) *
                C93844) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C36999 + (C23678 + C23677) * C93582) * C93844 +
            ((C29709 + C29708) * C36999 + (C29707 + C29706) * C93582) * C93845 +
            ((C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
              C93737 * C6012) *
                 C36999 +
             (C20349 * C5823 + C93819 * C6013 + C20350 * C5828 +
              C93737 * C6018) *
                 C93582) *
                C45718) *
               C2696 -
           (((C26444 + C26445) * C93582 + (C26446 + C26447) * C36999) * C45718 +
            (C28484 * C93582 + C28485 * C36999) * C93845 +
            ((C20379 + C20378) * C93582 + (C20377 + C20376) * C36999) *
                C93844) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C45815 +
             (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
             C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
                C93819 +
            (C58912 + C58913 + C58914 + C58915 + C58916 + C58917) * C93737) *
               C2695 -
           ((C58918 + C58919 + C58920 + C58921 + C58922 + C58923) * C93737 +
            (C58917 + C58916 + C58915 + C58914 + C58913 + C58912) * C93819) *
               C2696) *
              C93621 * C1981 +
          (((C60647 + C60648 + C60649 + C60650 + C60651 + C60652) * C93819 +
            (C44105 * C45815 + C44106 * C93844 + C43169 * C45816 +
             C43170 * C93845 + (C36999 * C5822 + C93582 * C5828) * C45817 +
             (C36999 * C5926 + C93582 * C6098) * C45718) *
                C93737) *
               C2696 -
           ((C60652 + C60651 + C60650 + C60649 + C60648 + C60647) * C93737 +
            (C38785 * C45718 + C38784 * C45817 + C38783 * C93845 +
             C38782 * C45816 + (C36999 * C190 + C93582 * C363) * C93844 +
             (C36999 * C109 + C93582 * C115) * C45815) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                       C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                       C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                          C93582 * C93819 +
                      (C59025 + C59026 + C59027) * C93582 * C93737) *
                         C2695 -
                     ((C59028 + C59029 + C59030) * C93582 * C93737 +
                      (C59027 + C59026 + C59025) * C93582 * C93819) *
                         C2696) *
                        C93621 * C1981 +
                    (((C49466 + C49465 + C49464) * C93582 * C93819 +
                      (C46076 * C1390 + C47634 + C47634 + C93844 * C1662 +
                       C46077 * C5820 + C47635 + C47635 + C93845 * C6177 +
                       C46078 * C5822 + C47636 + C47636 + C45718 * C6178) *
                          C93582 * C93737) *
                         C2696 -
                     ((C49464 + C49465 + C49466) * C93582 * C93737 +
                      (C46118 + C46117 + C46116) * C93582 * C93819) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C45815 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C93844 +
            (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
            C58081 * C45817 + C58323 * C45718) *
               C93582 * C2695 -
           ((C20350 * C5924 + C93737 * C6268 + C20349 * C5922 +
             C93819 * C6266) *
                C45718 +
            (C20350 * C5821 + C93737 * C6011 + C20349 * C5818 +
             C93819 * C6008) *
                C45817 +
            (C31338 + C31339) * C93845 + (C30924 + C30925) * C45816 +
            (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
             C93819 * C1726) *
                C93844 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C45815) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C23680 + C23679) * C45815 + (C24007 + C24006) * C93844 +
            (C29709 + C29708) * C45816 + (C30107 + C30106) * C93845 +
            (C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
             C93737 * C6012) *
                C45817 +
            (C20349 * C5921 + C93819 * C6265 + C20350 * C5926 +
             C93737 * C6270) *
                C45718) *
               C93582 * C2696 -
           ((C26764 + C26765) * C45718 + (C26446 + C26447) * C45817 +
            C28899 * C93845 + C28485 * C45816 + (C20626 + C20625) * C93844 +
            (C20377 + C20376) * C45815) *
               C93582 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C20349 +
             (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
             C42577 * C93737) *
                C93844 +
            (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
               C2695 -
           ((C41716 * C93737 + C41454 * C20350 + C40278 * C93819 +
             C40057 * C20349) *
                C45718 +
            (C41715 * C93737 + C41451 * C20350 + C40279 * C93819 +
             C40059 * C20349) *
                C93845 +
            (C42578 * C93737 + C42291 * C20350 + C42577 * C93819 +
             C42289 * C20349) *
                C93844) *
               C2696) *
              C93621 * C1981 +
          (((C44103 * C20349 + C44421 * C93819 + C44105 * C20350 +
             C44422 * C93737) *
                C93844 +
            (C43167 * C20349 + C43475 * C93819 + C43169 * C20350 +
             C43476 * C93737) *
                C93845 +
            (C59752 * C20349 + C60057 * C93819 +
             (C36999 * C5822 + C93582 * C5828) * C20350 +
             (C36999 * C6012 + C93582 * C6350) * C93737) *
                C45718) *
               C2696 -
           ((C60058 + C60054 + C60053 + C60052) * C45718 +
            (C60051 + C60050 + C60049 + C60048) * C93845 +
            (C44421 * C93737 + C44103 * C20350 +
             (C36999 * C277 + C93582 * C580) * C93819 +
             (C36999 * C109 + C93582 * C115) * C20349) *
                C93844) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C20349 +
                      (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                       C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                          C93819 +
                      (C58752 + C58753 + C58754) * C20350 +
                      (C59265 + C59266 + C59267) * C93737) *
                         C93582 * C2695 -
                     ((C59268 + C59269 + C59270) * C93737 +
                      (C58761 + C58762 + C58763) * C20350 +
                      (C59267 + C59266 + C59265) * C93819 +
                      (C58754 + C58753 + C58752) * C20349) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C49154 + C49153 + C49152) * C20349 +
                      (C49775 + C49774 + C49773) * C93819 +
                      (C45815 * C1390 + C93844 * C1472 + C45816 * C5820 +
                       C93845 * C5925 + C45817 * C5822 + C45718 * C5926) *
                          C20350 +
                      (C45815 * C1538 + C93844 * C1844 + C45816 * C6010 +
                       C93845 * C6429 + C45817 * C6012 + C45718 * C6430) *
                          C93737) *
                         C93582 * C2696 -
                     ((C49773 + C49774 + C49775) * C93737 +
                      (C49152 + C49153 + C49154) * C20350 +
                      (C46370 + C46369 + C46368) * C93819 +
                      (C45845 + C45844 + C45843) * C20349) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                       C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                          C93844 +
                      (C27090 + C27091) * C93845 + C58567 * C45718) *
                         C93582 * C2695 -
                     ((C20871 * C5821 + C31743 + C31743 + C93737 * C6508 +
                       C20870 * C5818 + C31742 + C31742 + C93819 * C6506) *
                          C45718 +
                      (C31750 + C31751) * C93845 +
                      (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
                       C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                          C93844) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C24340 + C24339) * C93844 + (C30509 + C30508) * C93845 +
                      (C20870 * C5817 + C31744 + C31744 + C93819 * C6505 +
                       C20871 * C5822 + C31745 + C31745 + C93737 * C6510) *
                          C45718) *
                         C93582 * C2696 -
                     ((C27092 + C27093) * C45718 + C29303 * C93845 +
                      (C20908 + C20907) * C93844) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
            C41997 * C93737) *
               C93844 +
           (C37504 * C93819 + C39823 * C93737) * C93845 +
           (C37505 * C93819 + C39822 * C93737) * C45718) *
              C93635 * C93621 * C97 -
          (((C36998 * C5817 + C39205 + C39205 + C93582 * C5829) * C93737 +
            C38561 * C93819) *
               C45718 +
           (C42861 * C93737 + C38560 * C93819) * C93845 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93819) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93819 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C93844 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93819 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C93845 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93819 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93819 +
            C41997 * C93737) *
               C93844 +
           (C57926 + C57927) * C93845 + C57932 * C45718) *
              C93635 * C800 -
          ((C57930 + C57931) * C45718 + (C57929 + C57928) * C93845 +
           (C57927 + C57926) * C93844) *
              C93635 * C801 +
          (C57932 * C93844 + (C57931 + C57930) * C93845 +
           (C37507 * C93819 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C36999 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93582) *
                         C93819 +
                     ((C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                       C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                          C36999 +
                      (C45815 * C1396 + C93844 * C1478 + C45816 * C3413 +
                       C93845 * C3495 + C45817 * C5824 + C45718 * C5928) *
                          C93582) *
                         C93737) *
                        C93635 * C93621 * C97 -
                    (((C49149 + C49150 + C49151) * C93582 +
                      (C49152 + C49153 + C49154) * C36999) *
                         C93737 +
                     ((C45848 + C45847 + C45846) * C93582 +
                      (C45845 + C45844 + C45843) * C36999) *
                         C93819) *
                        C93635 * C93621 * C98 +
                    (((C45854 + C45853 + C45852) * C36999 +
                      (C45851 + C45850 + C45849) * C93582) *
                         C93819 +
                     ((C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                       C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                          C36999 +
                      (C45815 * C1394 + C93844 * C1476 + C45816 * C3415 +
                       C93845 * C3497 + C45817 * C7632 + C45718 * C7739) *
                          C93582) *
                         C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                       C93845 * C889 + C45817 * C808 + C45718 * C890) *
                          C36999 +
                      (C45815 * C114 + C93844 * C195 + C45816 * C815 +
                       C93845 * C897 + C45817 * C816 + C45718 * C898) *
                          C93582) *
                         C93819 +
                     ((C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                       C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                          C36999 +
                      (C45815 * C1396 + C93844 * C1478 + C45816 * C3413 +
                       C93845 * C3495 + C45817 * C5824 + C45718 * C5928) *
                          C93582) *
                         C93737) *
                        C93635 * C800 -
                    (((C45817 * C8617 + C45718 * C8743 + C45816 * C5824 +
                       C93845 * C5928 + C45815 * C3413 + C93844 * C3495) *
                          C93582 +
                      (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                       C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                          C36999) *
                         C93737 +
                     ((C45817 * C4921 + C45718 * C5043 + C45816 * C816 +
                       C93845 * C898 + C45815 * C815 + C93844 * C897) *
                          C93582 +
                      (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                       C93845 * C890 + C45815 * C807 + C93844 * C889) *
                          C36999) *
                         C93819) *
                        C93635 * C801 +
                    (((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                       C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                          C36999 +
                      (C45815 * C816 + C93844 * C898 + C45816 * C4921 +
                       C93845 * C5043 + C45817 * C4922 + C45718 * C5044) *
                          C93582) *
                         C93819 +
                     ((C45815 * C5818 + C93844 * C5922 + C45816 * C8615 +
                       C93845 * C8741 + C45817 * C39804 + C45718 * C39892) *
                          C36999 +
                      (C45815 * C5824 + C93844 * C5928 + C45816 * C8617 +
                       C93845 * C8743 + C45817 * C39805 + C45718 * C39893) *
                          C93582) *
                         C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C36999 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93582) *
               C93844 +
           ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
           ((C26451 + C26450) * C36999 + (C26449 + C26448) * C93582) * C45718) *
              C93635 * C93621 * C97 -
          (((C26444 + C26445) * C93582 + (C26446 + C26447) * C36999) * C45718 +
           (C28484 * C93582 + C28485 * C36999) * C93845 +
           ((C20379 + C20378) * C93582 + (C20377 + C20376) * C36999) * C93844) *
              C93635 * C93621 * C98 +
          ((C20388 * C36999 + C20389 * C93582) * C93844 +
           ((C22696 + C22695) * C36999 + (C22694 + C22693) * C93582) * C93845 +
           ((C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                C36999 +
            (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
                C93582) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C36999 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93582) *
               C93844 +
           ((C26440 + C26441) * C36999 + (C26442 + C26443) * C93582) * C93845 +
           C58097 * C45718) *
              C93635 * C800 -
          (((C58093 + C58094) * C93582 + (C58095 + C58096) * C36999) * C45718 +
           ((C26448 + C26449) * C93582 + (C26450 + C26451) * C36999) * C93845 +
           ((C26443 + C26442) * C93582 + (C26441 + C26440) * C36999) * C93844) *
              C93635 * C801 +
          (C58097 * C93844 +
           ((C58096 + C58095) * C36999 + (C58094 + C58093) * C93582) * C93845 +
           ((C20349 * C4918 + C93819 * C5122 + C20350 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C20349 * C4922 + C93819 * C5126 + C20350 * C39805 +
             C93737 * C39961) *
                C93582) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C45815 +
            (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
            C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
               C93819 +
           (C42289 * C45815 + C42290 * C93844 + C40059 * C45816 +
            C40058 * C93845 + C40057 * C45817 + C40056 * C45718) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C36999 * C5921 + C93582 * C6093) * C45718 +
            (C36999 * C5817 + C93582 * C5823) * C45817 + C43168 * C93845 +
            C43167 * C45816 + C44104 * C93844 + C44103 * C45815) *
               C93737 +
           (C38785 * C45718 + C38784 * C45817 + C38783 * C93845 +
            C38782 * C45816 + (C36999 * C190 + C93582 * C363) * C93844 +
            (C36999 * C109 + C93582 * C115) * C45815) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C45815 +
            (C36999 * C191 + C93582 * C364) * C93844 +
            (C36999 * C805 + C93582 * C813) * C45816 +
            (C36999 * C887 + C93582 * C1019) * C93845 +
            (C36999 * C810 + C93582 * C818) * C45817 +
            (C36999 * C892 + C93582 * C1024) * C45718) *
               C93819 +
           ((C36999 * C1386 + C93582 * C1394) * C45815 +
            (C36999 * C1468 + C93582 * C1600) * C93844 +
            (C36999 * C3411 + C93582 * C3415) * C45816 +
            (C36999 * C3493 + C93582 * C3641) * C93845 +
            (C36999 * C7631 + C93582 * C7632) * C45817 +
            (C36999 * C7738 + C93582 * C7968) * C45718) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C45815 +
            (C36999 * C189 + C93582 * C362) * C93844 + C37699 * C45816 +
            C37700 * C93845 + C37701 * C45817 + C37702 * C45718) *
               C93819 +
           (C42289 * C45815 + C42290 * C93844 + C40059 * C45816 +
            C40058 * C93845 + C40057 * C45817 + C40056 * C45718) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C45718 + C40055 * C45817 + C40056 * C93845 +
            C40057 * C45816 + C40058 * C93844 + C40059 * C45815) *
               C93737 +
           (C37704 * C45718 + C37703 * C45817 + C37702 * C93845 +
            C37701 * C45816 + C37700 * C93844 + C37699 * C45815) *
               C93819) *
              C93635 * C801 +
          ((C37701 * C45815 + C37702 * C93844 + C37703 * C45816 +
            C37704 * C93845 + C37706 * C45817 + C37705 * C45718) *
               C93819 +
           (C40057 * C45815 + C40056 * C93844 + C40055 * C45816 +
            C40054 * C93845 + (C36999 * C39804 + C93582 * C39805) * C45817 +
            (C36999 * C39892 + C93582 * C40040) * C45718) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93582 * C93819 +
                     (C46076 * C1388 + C47630 + C47630 + C93844 * C1660 +
                      C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                      C46078 * C5818 + C47628 + C47628 + C45718 * C6174) *
                         C93582 * C93737) *
                        C93635 * C93621 * C97 -
                    ((C49464 + C49465 + C49466) * C93582 * C93737 +
                     (C46118 + C46117 + C46116) * C93582 * C93819) *
                        C93635 * C93621 * C98 +
                    ((C46121 + C46120 + C46119) * C93582 * C93819 +
                     (C46076 * C1386 + C49455 + C49455 + C93844 * C1658 +
                      C46077 * C3411 + C49456 + C49456 + C93845 * C3711 +
                      C46078 * C7631 + C49457 + C49457 + C45718 * C8067) *
                         C93582 * C93737) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C46076 * C108 + C46080 + C46080 + C93844 * C419 +
                      C46077 * C807 + C46081 + C46081 + C93845 * C1079 +
                      C46078 * C808 + C46082 + C46082 + C45718 * C1080) *
                         C93582 * C93819 +
                     (C46076 * C1388 + C47630 + C47630 + C93844 * C1660 +
                      C46077 * C3409 + C47629 + C47629 + C93845 * C3709 +
                      C46078 * C5818 + C47628 + C47628 + C45718 * C6174) *
                         C93582 * C93737) *
                        C93635 * C800 -
                    ((C46078 * C8615 + C50423 + C50423 + C45718 * C9089 +
                      C46077 * C5818 + C50422 + C50422 + C93845 * C6174 +
                      C46076 * C3409 + C50421 + C50421 + C93844 * C3709) *
                         C93582 * C93737 +
                     (C46078 * C4917 + C46916 + C46916 + C45718 * C5358 +
                      C46077 * C808 + C46917 + C46917 + C93845 * C1080 +
                      C46076 * C807 + C46918 + C46918 + C93844 * C1079) *
                         C93582 * C93819) *
                        C93635 * C801 +
                    ((C46076 * C808 + C46919 + C46919 + C93844 * C1080 +
                      C46077 * C4917 + C46920 + C46920 + C93845 * C5358 +
                      C46078 * C4918 + C46921 + C46921 + C45718 * C5359) *
                         C93582 * C93819 +
                     (C46076 * C5818 + C58246 + C58246 + C93844 * C6174 +
                      C46077 * C8615 + C58247 + C58247 + C93845 * C9089 +
                      C46078 * C39804 + C58248 + C58248 + C45718 * C40125) *
                         C93582 * C93737) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C45815 +
           (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
               C93844 +
           (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
           (C26451 + C26450) * C45817 + (C26767 + C26766) * C45718) *
              C93582 * C93635 * C93621 * C97 -
          ((C26764 + C26765) * C45718 + (C26446 + C26447) * C45817 +
           C28899 * C93845 + C28485 * C45816 + (C20626 + C20625) * C93844 +
           (C20377 + C20376) * C45815) *
              C93582 * C93635 * C93621 * C98 +
          (C20388 * C45815 + C20631 * C93844 + (C22696 + C22695) * C45816 +
           (C23009 + C23008) * C93845 +
           (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
               C45817 +
           (C20349 * C892 + C93819 * C1148 + C20350 * C7738 + C93737 * C8184) *
               C45718) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
               C45815 +
           (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
               C93844 +
           (C26440 + C26441) * C45816 + (C26762 + C26763) * C93845 +
           C58081 * C45817 + C58323 * C45718) *
              C93582 * C93635 * C800 -
          ((C58328 + C58329) * C45718 + (C58095 + C58096) * C45817 +
           (C26766 + C26767) * C93845 + (C26450 + C26451) * C45816 +
           (C26763 + C26762) * C93844 + (C26441 + C26440) * C45815) *
              C93582 * C93635 * C801 +
          (C58081 * C45815 + C58323 * C93844 + (C58096 + C58095) * C45816 +
           (C58329 + C58328) * C93845 +
           (C20349 * C4918 + C93819 * C5122 + C20350 * C39804 +
            C93737 * C39960) *
               C45817 +
           (C20349 * C5040 + C93819 * C5449 + C20350 * C39892 +
            C93737 * C40196) *
               C45718) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C20349 +
            (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
            C42577 * C93737) *
               C93844 +
           (C37699 * C20349 + C37883 * C93819 + C40059 * C20350 +
            C40279 * C93737) *
               C93845 +
           (C37701 * C20349 + C37884 * C93819 + C40057 * C20350 +
            C40278 * C93737) *
               C45718) *
              C93635 * C93621 * C97 -
          (((C36999 * C6007 + C93582 * C6345) * C93737 +
            (C36999 * C5817 + C93582 * C5823) * C20350 + C39000 * C93819 +
            C38784 * C20349) *
               C45718 +
           (C43475 * C93737 + C43167 * C20350 + C38999 * C93819 +
            C38782 * C20349) *
               C93845 +
           (C44421 * C93737 + C44103 * C20350 +
            (C36999 * C277 + C93582 * C580) * C93819 +
            (C36999 * C109 + C93582 * C115) * C20349) *
               C93844) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C20349 +
            (C36999 * C278 + C93582 * C581) * C93819 +
            (C36999 * C1386 + C93582 * C1394) * C20350 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C93844 +
           ((C36999 * C805 + C93582 * C813) * C20349 +
            (C36999 * C953 + C93582 * C1201) * C93819 +
            (C36999 * C3411 + C93582 * C3415) * C20350 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C93845 +
           ((C36999 * C810 + C93582 * C818) * C20349 +
            (C36999 * C958 + C93582 * C1206) * C93819 +
            (C36999 * C7631 + C93582 * C7632) * C20350 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C45718) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C20349 +
            (C36999 * C276 + C93582 * C579) * C93819 + C42289 * C20350 +
            C42577 * C93737) *
               C93844 +
           (C58404 + C58405 + C58406 + C58407) * C93845 + C58418 * C45718) *
              C93635 * C800 -
          ((C58412 + C58413 + C58414 + C58415) * C45718 +
           (C58411 + C58410 + C58409 + C58408) * C93845 +
           (C58407 + C58406 + C58405 + C58404) * C93844) *
              C93635 * C801 +
          (C58418 * C93844 + (C58415 + C58414 + C58413 + C58412) * C93845 +
           (C37706 * C20349 + C37886 * C93819 +
            (C36999 * C39804 + C93582 * C39805) * C20350 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C45718) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C20349 +
                     (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                      C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                         C93819 +
                     (C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                      C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                         C20350 +
                     (C45815 * C1536 + C93844 * C1842 + C45816 * C3565 +
                      C93845 * C3923 + C45817 * C6008 + C45718 * C6426) *
                         C93737) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C49773 + C49774 + C49775) * C93737 +
                     (C49152 + C49153 + C49154) * C20350 +
                     (C46370 + C46369 + C46368) * C93819 +
                     (C45845 + C45844 + C45843) * C20349) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C45854 + C45853 + C45852) * C20349 +
                     (C46373 + C46372 + C46371) * C93819 +
                     (C45815 * C1386 + C93844 * C1468 + C45816 * C3411 +
                      C93845 * C3493 + C45817 * C7631 + C45718 * C7738) *
                         C20350 +
                     (C45815 * C1534 + C93844 * C1840 + C45816 * C3567 +
                      C93845 * C3925 + C45817 * C7856 + C45718 * C8394) *
                         C93737) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45815 * C108 + C93844 * C189 + C45816 * C807 +
                      C93845 * C889 + C45817 * C808 + C45718 * C890) *
                         C20349 +
                     (C45815 * C276 + C93844 * C635 + C45816 * C955 +
                      C93845 * C1261 + C45817 * C956 + C45718 * C1262) *
                         C93819 +
                     (C45815 * C1388 + C93844 * C1470 + C45816 * C3409 +
                      C93845 * C3491 + C45817 * C5818 + C45718 * C5922) *
                         C20350 +
                     (C45815 * C1536 + C93844 * C1842 + C45816 * C3565 +
                      C93845 * C3923 + C45817 * C6008 + C45718 * C6426) *
                         C93737) *
                        C93582 * C93635 * C800 -
                    ((C45817 * C8843 + C45718 * C9413 + C45816 * C6008 +
                      C93845 * C6426 + C45815 * C3565 + C93844 * C3923) *
                         C93737 +
                     (C45817 * C8615 + C45718 * C8741 + C45816 * C5818 +
                      C93845 * C5922 + C45815 * C3409 + C93844 * C3491) *
                         C20350 +
                     (C45817 * C5121 + C45718 * C5638 + C45816 * C956 +
                      C93845 * C1262 + C45815 * C955 + C93844 * C1261) *
                         C93819 +
                     (C45817 * C4917 + C45718 * C5039 + C45816 * C808 +
                      C93845 * C890 + C45815 * C807 + C93844 * C889) *
                         C20349) *
                        C93582 * C93635 * C801 +
                    ((C45815 * C808 + C93844 * C890 + C45816 * C4917 +
                      C93845 * C5039 + C45817 * C4918 + C45718 * C5040) *
                         C20349 +
                     (C45815 * C956 + C93844 * C1262 + C45816 * C5121 +
                      C93845 * C5638 + C45817 * C5122 + C45718 * C5639) *
                         C93819 +
                     (C45815 * C5818 + C93844 * C5922 + C45816 * C8615 +
                      C93845 * C8741 + C45817 * C39804 + C45718 * C39892) *
                         C20350 +
                     (C45815 * C6008 + C93844 * C6426 + C45816 * C8843 +
                      C93845 * C9413 + C45817 * C39960 + C45718 * C40348) *
                         C93737) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezz[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93844 +
                     (C27090 + C27091) * C93845 + (C27095 + C27094) * C45718) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C27092 + C27093) * C45718 + C29303 * C93845 +
                     (C20908 + C20907) * C93844) *
                        C93582 * C93635 * C93621 * C98 +
                    (C20913 * C93844 + (C23336 + C23335) * C93845 +
                     (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
                      C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                         C45718) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C20870 * C108 + C20873 + C20873 + C93819 * C714 +
                      C20871 * C1388 + C20874 + C20874 + C93737 * C1900) *
                         C93844 +
                     (C27090 + C27091) * C93845 + C58567 * C45718) *
                        C93582 * C93635 * C800 -
                    ((C58578 + C58579) * C45718 + (C27094 + C27095) * C93845 +
                     (C27091 + C27090) * C93844) *
                        C93582 * C93635 * C801 +
                    (C58567 * C93844 + (C58579 + C58578) * C93845 +
                     (C20870 * C4918 + C58572 + C58572 + C93819 * C5717 +
                      C20871 * C39804 + C58573 + C58573 + C93737 * C40415) *
                         C45718) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 *
                C36994 +
            C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
               C93635 * C1979 -
           (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
            C37508 * C36994) *
               C93635 * C1980) *
              C1981 +
          ((C38563 * C36994 + C38564 * C36995 + C38565 * C36996 +
            (C36998 * C4919 + C38553 + C38553 + C93582 * C4927) * C93673 *
                C36997) *
               C93635 * C1980 -
           (C38565 * C36997 + C38564 * C36996 + C38563 * C36995 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
                C36994) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C93673 * C31828 +
            (C32678 + C32679 + C32680) * C93673 * C93711) *
               C93635 * C1979 -
           ((C32681 + C32682 + C32683) * C93673 * C93711 +
            (C32680 + C32679 + C32678) * C93673 * C31828) *
               C93635 * C1980) *
              C1981 +
          (((C34157 + C34158 + C34159) * C93673 * C31828 +
            (C31830 * C809 + C34148 + C34148 + C31825 * C825 + C31832 * C810 +
             C34149 + C34149 + C31826 * C826 + C31834 * C811 + C34150 + C34150 +
             C31827 * C827) *
                C93673 * C93711) *
               C93635 * C1980 -
           ((C34159 + C34158 + C34157) * C93673 * C93711 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C93673 * C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
             C41997 * C9602 + C41998 * C9603) *
                C31828 +
            (C41169 + C41170 + C41183) * C93711) *
               C93635 * C1979 -
           ((C41184 + C41175 + C41176) * C93711 +
            (C41183 + C41170 + C41169) * C31828) *
               C93635 * C1980) *
              C1981 +
          (((C42851 + C42863 + C42864) * C31828 +
            (C38561 * C9601 +
             (C36998 * C5817 + C39205 + C39205 + C93582 * C5829) * C9602 +
             (C36998 * C5822 + C42856 + C42856 + C93582 * C5834) * C9603) *
                C93711) *
               C93635 * C1980 -
           ((C42864 + C42863 + C42851) * C93711 +
            ((C36998 * C1390 + C40498 + C40498 + C93582 * C1406) * C9603 +
             (C36998 * C1387 + C39203 + C39203 + C93582 * C1403) * C9602 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C9601) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C93635 * C1979 -
           ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
             C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
                C93582 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C36999) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C37062 * C806 + C36994 * C888 + C37063 * C809 + C36995 * C891 +
             C37064 * C4916 + C36996 * C5038 + C37065 * C4919 +
             C36997 * C5041) *
                C36999 +
            (C37062 * C814 + C36994 * C896 + C37063 * C817 + C36995 * C899 +
             C37064 * C4920 + C36996 * C5042 + C37065 * C4923 +
             C36997 * C5045) *
                C93582) *
               C93673 * C93635 * C1980 -
           ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
             C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
                C93582 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C36999) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C93635 * C1979 -
           ((C34274 + C34275) * C31827 + (C34276 + C34277) * C31835 +
            (C34278 + C34279) * C31826 + (C34280 + C34281) * C31833 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C31825 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C31831) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C34281 + C34280) * C31831 + (C34279 + C34278) * C31825 +
            (C34277 + C34276) * C31833 + (C34275 + C34274) * C31826 +
            (C31928 * C804 + C31828 * C886 + C31929 * C811 + C93711 * C893) *
                C31835 +
            (C31928 * C812 + C31828 * C894 + C31929 * C819 + C93711 * C901) *
                C31827) *
               C93673 * C93635 * C1980 -
           ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
            (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
            (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C36999 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93582) *
                C9601 +
            ((C42101 + C42102) * C36999 + (C42103 + C42104) * C93582) * C9602 +
            C42117 * C9603) *
               C93635 * C1979 -
           (((C31929 * C5827 + C93711 * C5930 + C31928 * C5825 +
              C31828 * C5929) *
                 C93582 +
             (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 +
              C31828 * C5923) *
                 C36999) *
                C9603 +
            ((C31929 * C5824 + C93711 * C5928 + C31928 * C3413 +
              C31828 * C3495) *
                 C93582 +
             (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 +
              C31828 * C3491) *
                 C36999) *
                C9602 +
            ((C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                 C93582 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C36999) *
                C9601) *
               C93635 * C1980) *
              C1981 +
          ((((C34281 + C34280) * C36999 + (C34279 + C34278) * C93582) * C9601 +
            ((C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
              C93711 * C5921) *
                 C36999 +
             (C31928 * C3414 + C31828 * C3496 + C31929 * C5823 +
              C93711 * C5927) *
                 C93582) *
                C9602 +
            ((C31928 * C5820 + C31828 * C5925 + C31929 * C5822 +
              C93711 * C5926) *
                 C36999 +
             (C31928 * C5826 + C31828 * C5931 + C31929 * C5828 +
              C93711 * C5932) *
                 C93582) *
                C9603) *
               C93635 * C1980 -
           (((C31929 * C5826 + C93711 * C5931 + C31928 * C1398 +
              C31828 * C1480) *
                 C93582 +
             (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 +
              C31828 * C1472) *
                 C36999) *
                C9603 +
            ((C35269 + C35270) * C93582 + (C35271 + C35272) * C36999) * C9602 +
            ((C31958 + C31957) * C93582 + (C31956 + C31955) * C36999) * C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C93635 * C1979 -
           ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
            (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
               C93635 * C1980) *
              C1981 +
          (((C38698 + C38699) * C36994 + (C38700 + C38701) * C36995 +
            (C38702 + C38703) * C36996 +
            ((C275 * C4919 + C93673 * C5123) * C36999 +
             (C275 * C4923 + C93673 * C5127) * C93582) *
                C36997) *
               C93635 * C1980 -
           ((C38703 + C38702) * C36997 + (C38701 + C38700) * C36996 +
            (C38699 + C38698) * C36995 +
            (C306 * C93582 + C305 * C36999) * C36994) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C93635 * C1979 -
           ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
            (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
               C93635 * C1980) *
              C1981 +
          (((C34380 + C34381 + C34382 + C34383 + C34384 + C34385) * C31828 +
            (C4298 * C31831 + C4299 * C31825 + C4301 * C31833 + C4300 * C31826 +
             (C275 * C811 + C93673 * C959) * C31835 +
             (C275 * C819 + C93673 * C967) * C31827) *
                C93711) *
               C93635 * C1980 -
           ((C34385 + C34384 + C34383 + C34382 + C34381 + C34380) * C93711 +
            (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
             C306 * C31825 + C305 * C31831) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C36999 +
             (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
              C9772 * C1397 + C9603 * C1545) *
                 C93582) *
                C31828 +
            ((C41357 + C41358 + C41359) * C36999 +
             (C41360 + C41361 + C41362) * C93582) *
                C93711) *
               C93635 * C1979 -
           (((C41363 + C41364 + C41365) * C93582 +
             (C41366 + C41367 + C41368) * C36999) *
                C93711 +
            ((C41362 + C41361 + C41360) * C93582 +
             (C41359 + C41358 + C41357) * C36999) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          ((((C12268 + C12267 + C12266) * C36999 +
             (C12265 + C12264 + C12263) * C93582) *
                C31828 +
            ((C9770 * C809 + C9601 * C957 + C9771 * C5817 + C9602 * C6007 +
              C9772 * C5822 + C9603 * C6012) *
                 C36999 +
             (C9770 * C817 + C9601 * C965 + C9771 * C5823 + C9602 * C6013 +
              C9772 * C5828 + C9603 * C6018) *
                 C93582) *
                C93711) *
               C93635 * C1980 -
           (((C12263 + C12264 + C12265) * C93582 +
             (C12266 + C12267 + C12268) * C36999) *
                C93711 +
            ((C9803 + C9802 + C9801) * C93582 +
             (C9800 + C9799 + C9798) * C36999) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C37062 +
            (C36999 * C189 + C93582 * C362) * C36994 + C37699 * C37063 +
            C37700 * C36995 + C37701 * C37064 + C37702 * C36996 +
            C37703 * C37065 + C37704 * C36997) *
               C93673 * C93635 * C1979 -
           (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
            C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
            C37700 * C36994 + C37699 * C37062) *
               C93673 * C93635 * C1980) *
              C1981 +
          ((C38782 * C37062 + C38783 * C36994 + C38784 * C37063 +
            C38785 * C36995 + C38786 * C37064 + C38787 * C36996 +
            (C36999 * C4919 + C93582 * C4923) * C37065 +
            (C36999 * C5041 + C93582 * C5244) * C36997) *
               C93673 * C93635 * C1980 -
           (C38787 * C36997 + C38786 * C37065 + C38785 * C36996 +
            C38784 * C37064 + C38783 * C36995 + C38782 * C37063 +
            (C36999 * C190 + C93582 * C363) * C36994 +
            (C36999 * C109 + C93582 * C115) * C37062) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C31928 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C31828 +
            (C32942 + C32943 + C32944) * C31929 +
            (C32945 + C32946 + C32947) * C93711) *
               C93673 * C93635 * C1979 -
           ((C32948 + C32949 + C32950) * C93711 +
            (C32951 + C32952 + C32953) * C31929 +
            (C32947 + C32946 + C32945) * C31828 +
            (C32944 + C32943 + C32942) * C31928) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C34496 + C34497 + C34498) * C31928 +
            (C34499 + C34500 + C34501) * C31828 +
            (C31831 * C809 + C31825 * C817 + C31833 * C810 + C31826 * C818 +
             C31835 * C811 + C31827 * C819) *
                C31929 +
            (C31831 * C891 + C31825 * C1023 + C31833 * C892 + C31826 * C1024 +
             C31835 * C893 + C31827 * C1025) *
                C93711) *
               C93673 * C93635 * C1980 -
           ((C34501 + C34500 + C34499) * C93711 +
            (C34498 + C34497 + C34496) * C31929 +
            (C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
             C31831 * C190 + C31825 * C363) *
                C31828 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C31928) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C31928 +
             (C36999 * C189 + C93582 * C362) * C31828 + C37699 * C31929 +
             C37700 * C93711) *
                C9601 +
            (C42297 + C42298 + C42273 + C42274) * C9602 + C42307 * C9603) *
               C93635 * C1979 -
           ((C41453 * C93711 + C41454 * C31929 + C41452 * C31828 +
             C41451 * C31928) *
                C9603 +
            (C40056 * C93711 + C40057 * C31929 + C40058 * C31828 +
             C40059 * C31928) *
                C9602 +
            (C37702 * C93711 + C37701 * C31929 + C37700 * C31828 +
             C37699 * C31928) *
                C9601) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C31928 + C38783 * C31828 + C38784 * C31929 +
             C38785 * C93711) *
                C9601 +
            (C43167 * C31928 + C43168 * C31828 +
             (C36999 * C5817 + C93582 * C5823) * C31929 +
             (C36999 * C5921 + C93582 * C6093) * C93711) *
                C9602 +
            (C43169 * C31928 + C43170 * C31828 +
             (C36999 * C5822 + C93582 * C5828) * C31929 +
             (C36999 * C5926 + C93582 * C6098) * C93711) *
                C9603) *
               C93635 * C1980 -
           ((C43170 * C93711 + C43169 * C31929 +
             (C36999 * C1472 + C93582 * C1604) * C31828 +
             (C36999 * C1390 + C93582 * C1398) * C31928) *
                C9603 +
            (C43168 * C93711 + C43167 * C31929 +
             (C36999 * C1469 + C93582 * C1601) * C31828 +
             (C36999 * C1387 + C93582 * C1395) * C31928) *
                C9602 +
            (C38783 * C93711 + C38782 * C31929 +
             (C36999 * C190 + C93582 * C363) * C31828 +
             (C36999 * C109 + C93582 * C115) * C31928) *
                C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C93635 * C1979 -
           (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
            C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
            C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
               C93582 * C93673 * C93635 * C1980) *
              C1981 +
          ((C37216 * C806 + C38854 + C38854 + C36994 * C1078 + C37217 * C809 +
            C38855 + C38855 + C36995 * C1081 + C37218 * C4916 + C38856 +
            C38856 + C36996 * C5357 + C37219 * C4919 + C38857 + C38857 +
            C36997 * C5360) *
               C93582 * C93673 * C93635 * C1980 -
           (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
            C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
            C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
               C93582 * C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C93635 * C1979 -
           ((C34618 + C34619) * C31827 + (C34620 + C34621) * C31826 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C31825) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C34621 + C34620) * C31825 + (C34619 + C34618) * C31826 +
            (C32190 * C804 + C34608 + C34608 + C31828 * C1076 + C32191 * C811 +
             C34609 + C34609 + C93711 * C1083) *
                C31827) *
               C93673 * C93635 * C1980 -
           ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
            (C32228 + C32227) * C31825) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93582 * C9601 +
            (C42411 + C42412) * C93582 * C9602 + C42418 * C9603) *
               C93635 * C1979 -
           ((C32191 * C5821 + C41529 + C41529 + C93711 * C6176 +
             C32190 * C5819 + C41530 + C41530 + C31828 * C6175) *
                C93582 * C9603 +
            (C32191 * C5818 + C36538 + C36538 + C93711 * C6174 +
             C32190 * C3409 + C36537 + C36537 + C31828 * C3709) *
                C93582 * C9602 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C93582 * C9601) *
               C93635 * C1980) *
              C1981 +
          (((C34621 + C34620) * C93582 * C9601 +
            (C32190 * C3410 + C36539 + C36539 + C31828 * C3710 +
             C32191 * C5817 + C36540 + C36540 + C93711 * C6173) *
                C93582 * C9602 +
            (C32190 * C5820 + C43269 + C43269 + C31828 * C6177 +
             C32191 * C5822 + C43270 + C43270 + C93711 * C6178) *
                C93582 * C9603) *
               C93635 * C1980 -
           ((C32191 * C5820 + C33745 + C33745 + C93711 * C6177 +
             C32190 * C1390 + C33744 + C33744 + C31828 * C1662) *
                C93582 * C9603 +
            (C35587 + C35588) * C93582 * C9602 +
            (C32228 + C32227) * C93582 * C9601) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C93635 * C1979 -
           (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 +
            C5156 * C37064 + C5461 * C36995 + C5151 * C37063 + C5460 * C36994 +
            C5149 * C37062) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C2162 * C37062 + C2391 * C36994 + C4298 * C37063 + C4583 * C36995 +
            C5154 * C37064 + C5462 * C36996 +
            (C275 * C4919 + C93673 * C5123) * C37065 +
            (C275 * C5041 + C93673 * C5450) * C36997) *
               C93582 * C93635 * C1980 -
           (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
            C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C93635 * C1979 -
           ((C34720 + C34721 + C34722 + C34723) * C31827 +
            (C34724 + C34725 + C34726 + C34727) * C31826 +
            (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 +
             C5149 * C31928) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          (((C34727 + C34726 + C34725 + C34724) * C31825 +
            (C34723 + C34722 + C34721 + C34720) * C31826 +
            (C2158 * C31928 + C2389 * C31828 +
             (C275 * C811 + C93673 * C959) * C31929 +
             (C275 * C893 + C93673 * C1149) * C93711) *
                C31827) *
               C93635 * C1980 -
           ((C32316 + C32317 + C32318 + C32319) * C31827 +
            (C32315 + C32314 + C32313 + C32312) * C31826 +
            (C32311 + C32310 + C32309 + C32308) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C31928 +
            (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
             C9772 * C1471 + C9603 * C1727) *
                C31828 +
            (C41357 + C41358 + C41359) * C31929 +
            (C41621 + C41622 + C41623) * C93711) *
               C93582 * C93635 * C1979 -
           ((C41624 + C41625 + C41626) * C93711 +
            (C41366 + C41367 + C41368) * C31929 +
            (C41623 + C41622 + C41621) * C31828 +
            (C41359 + C41358 + C41357) * C31928) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C12268 + C12267 + C12266) * C31928 +
            (C12585 + C12584 + C12583) * C31828 +
            (C9770 * C809 + C9601 * C957 + C9771 * C5817 + C9602 * C6007 +
             C9772 * C5822 + C9603 * C6012) *
                C31929 +
            (C9770 * C891 + C9601 * C1147 + C9771 * C5921 + C9602 * C6265 +
             C9772 * C5926 + C9603 * C6270) *
                C93711) *
               C93582 * C93635 * C1980 -
           ((C12583 + C12584 + C12585) * C93711 +
            (C12266 + C12267 + C12268) * C31929 +
            (C10056 + C10055 + C10054) * C31828 +
            (C9800 + C9799 + C9798) * C31928) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C93635 * C1979 -
           ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
            (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
               C93635 * C1980) *
              C1981 +
          (((C38990 + C39002) * C36994 + (C38993 + C39003) * C36995 +
            (C38996 + C39004) * C36996 +
            ((C36999 * C4919 + C93582 * C4923) * C275 +
             (C36999 * C5123 + C93582 * C5540) * C93673) *
                C36997) *
               C93635 * C1980 -
           ((C39004 + C38996) * C36997 + (C39003 + C38993) * C36996 +
            (C39002 + C38990) * C36995 +
            ((C36999 * C277 + C93582 * C580) * C93673 +
             (C36999 * C109 + C93582 * C115) * C275) *
                C36994) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C93635 * C1979 -
           (((C33203 + C33204 + C33205) * C93673 +
             (C32951 + C32952 + C32953) * C275) *
                C93711 +
            ((C33202 + C33201 + C33200) * C93673 +
             (C32944 + C32943 + C32942) * C275) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          ((((C34496 + C34497 + C34498) * C275 +
             (C34832 + C34833 + C34834) * C93673) *
                C31828 +
            ((C31831 * C809 + C31825 * C817 + C31833 * C810 + C31826 * C818 +
              C31835 * C811 + C31827 * C819) *
                 C275 +
             (C31831 * C957 + C31825 * C1205 + C31833 * C958 + C31826 * C1206 +
              C31835 * C959 + C31827 * C1207) *
                 C93673) *
                C93711) *
               C93635 * C1980 -
           (((C34834 + C34833 + C34832) * C93673 +
             (C34498 + C34497 + C34496) * C275) *
                C93711 +
            ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
              C31831 * C277 + C31825 * C580) *
                 C93673 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C275) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C9770 +
             (C36999 * C276 + C93582 * C579) * C9601 + C42289 * C9771 +
             C42577 * C9602 + C42291 * C9772 + C42578 * C9603) *
                C31828 +
            (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
               C93635 * C1979 -
           ((C41718 + C41710 + C41711 + C41712 + C41713 + C41714) * C93711 +
            (C41717 + C41705 + C41704 + C41703 + C41702 + C41701) * C31828) *
               C93635 * C1980) *
              C1981 +
          (((C43467 + C43468 + C43469 + C43477 + C43472 + C43478) * C31828 +
            (C38784 * C9770 + C39000 * C9601 +
             (C36999 * C5817 + C93582 * C5823) * C9771 +
             (C36999 * C6007 + C93582 * C6345) * C9602 +
             (C36999 * C5822 + C93582 * C5828) * C9772 +
             (C36999 * C6012 + C93582 * C6350) * C9603) *
                C93711) *
               C93635 * C1980 -
           ((C43478 + C43472 + C43477 + C43469 + C43468 + C43467) * C93711 +
            ((C36999 * C1538 + C93582 * C1786) * C9603 +
             (C36999 * C1390 + C93582 * C1398) * C9772 +
             (C36999 * C1535 + C93582 * C1783) * C9602 +
             (C36999 * C1387 + C93582 * C1395) * C9771 +
             (C36999 * C277 + C93582 * C580) * C9601 +
             (C36999 * C109 + C93582 * C115) * C9770) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C93635 * C1979 -
           ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
             C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
                C93673 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C275) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C37062 * C806 + C36994 * C888 + C37063 * C809 + C36995 * C891 +
             C37064 * C4916 + C36996 * C5038 + C37065 * C4919 +
             C36997 * C5041) *
                C275 +
            (C37062 * C954 + C36994 * C1260 + C37063 * C957 + C36995 * C1263 +
             C37064 * C5120 + C36996 * C5637 + C37065 * C5123 +
             C36997 * C5640) *
                C93673) *
               C93582 * C93635 * C1980 -
           ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
             C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
                C93673 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C275) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C93635 * C1979 -
           (((C34941 + C34942) * C93673 + (C34276 + C34277) * C275) * C31827 +
            ((C34943 + C34944) * C93673 + (C34280 + C34281) * C275) * C31826 +
            ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93673 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C275) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          ((((C34281 + C34280) * C275 + (C34944 + C34943) * C93673) * C31825 +
            ((C34277 + C34276) * C275 + (C34942 + C34941) * C93673) * C31826 +
            ((C31928 * C804 + C31828 * C886 + C31929 * C811 + C93711 * C893) *
                 C275 +
             (C31928 * C952 + C31828 * C1258 + C31929 * C959 + C93711 * C1265) *
                 C93673) *
                C31827) *
               C93635 * C1980 -
           (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
            ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
            ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C9770 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C9601 +
            (C42101 + C42102) * C9771 + (C42668 + C42669) * C9602 +
            C42113 * C9772 + C42674 * C9603) *
               C93582 * C93635 * C1979 -
           ((C31929 * C6011 + C93711 * C6428 + C31928 * C6009 +
             C31828 * C6427) *
                C9603 +
            (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 +
             C31828 * C5923) *
                C9772 +
            (C31929 * C6008 + C93711 * C6426 + C31928 * C3565 +
             C31828 * C3923) *
                C9602 +
            (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 +
             C31828 * C3491) *
                C9771 +
            (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C9601 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C9770) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C34281 + C34280) * C9770 + (C34944 + C34943) * C9601 +
            (C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
             C93711 * C5921) *
                C9771 +
            (C31928 * C3566 + C31828 * C3924 + C31929 * C6007 +
             C93711 * C6425) *
                C9602 +
            (C31928 * C5820 + C31828 * C5925 + C31929 * C5822 +
             C93711 * C5926) *
                C9772 +
            (C31928 * C6010 + C31828 * C6429 + C31929 * C6012 +
             C93711 * C6430) *
                C9603) *
               C93582 * C93635 * C1980 -
           ((C31929 * C6010 + C93711 * C6429 + C31928 * C1538 +
             C31828 * C1844) *
                C9603 +
            (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 +
             C31828 * C1472) *
                C9772 +
            (C35901 + C35902) * C9602 + (C35271 + C35272) * C9771 +
            (C32485 + C32484) * C9601 + (C31956 + C31955) * C9770) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C93635 * C1979 -
           (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 +
            C5740 * C36994) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C2626 * C36994 + C4839 * C36995 + C5742 * C36996 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C36997) *
               C93582 * C93635 * C1980 -
           (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C93635 * C1979 -
           ((C35043 + C35044) * C31827 + (C35045 + C35046) * C31826 +
            (C5741 * C93711 + C5740 * C31828) * C31825) *
               C93635 * C1980) *
              C1981 +
          (((C35046 + C35045) * C31825 + (C35044 + C35043) * C31826 +
            (C2624 * C31828 +
             (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93711) *
                C31827) *
               C93635 * C1980 -
           ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
            (C32568 + C32567) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C31828 +
            (C41894 + C41895 + C41896) * C93711) *
               C93582 * C93635 * C1979 -
           ((C41897 + C41898 + C41899) * C93711 +
            (C41896 + C41895 + C41894) * C31828) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C12912 + C12911 + C12910) * C31828 +
            (C10299 * C809 + C11026 + C11026 + C9601 * C1321 + C10300 * C5817 +
             C11027 + C11027 + C9602 * C6505 + C10301 * C5822 + C11028 +
             C11028 + C9603 * C6510) *
                C93711) *
               C93582 * C93635 * C1980 -
           ((C12910 + C12911 + C12912) * C93711 +
            (C10341 + C10340 + C10339) * C31828) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 *
                C36994 +
            C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
               C2695 -
           (C39824 * C36997 + C39825 * C36996 + C39826 * C36995 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C93673 *
                C36994) *
               C2696) *
              C1979 +
          ((C39826 * C36994 + C39825 * C36995 + C39824 * C36996 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93673 *
                C36997) *
               C2696 -
           (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
            C37508 * C36994) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C93673 * C31828 +
            (C32678 + C32679 + C32680) * C93673 * C93711) *
               C2695 -
           ((C36118 + C36119 + C36120) * C93673 * C93711 +
            (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 +
             C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
             C31830 * C1388 + C33433 + C33433 + C31825 * C1404) *
                C93673 * C31828) *
               C2696) *
              C1979 +
          (((C36120 + C36119 + C36118) * C93673 * C31828 +
            (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 +
             C31832 * C5817 + C36110 + C36110 + C31826 * C5829 +
             C31834 * C7631 + C36111 + C36111 + C31827 * C7633) *
                C93673 * C93711) *
               C2696 -
           ((C32681 + C32682 + C32683) * C93673 * C93711 +
            (C32680 + C32679 + C32678) * C93673 * C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
             C41997 * C9602 + C41998 * C9603) *
                C31828 +
            (C41169 + C41170 + C41183) * C93711) *
               C2695 -
           ((C44726 + C44727 + C44728) * C93711 +
            (C42000 * C9603 + C41998 * C9602 + C41997 * C9601) * C31828) *
               C2696) *
              C1979 +
          (((C44728 + C44727 + C44726) * C31828 +
            (C39822 * C9601 + C41182 * C9602 +
             (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C9603) *
                C93711) *
               C2696 -
           ((C41184 + C41175 + C41176) * C93711 +
            (C41183 + C41170 + C41169) * C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C2695 -
           ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
             C37063 * C3413 + C36995 * C3495 + C37062 * C1396 +
             C36994 * C1478) *
                C93582 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C36999) *
               C93673 * C2696) *
              C1979 +
          (((C37062 * C3409 + C36994 * C3491 + C37063 * C5818 + C36995 * C5922 +
             C37064 * C8615 + C36996 * C8741 + C37065 * C39804 +
             C36997 * C39892) *
                C36999 +
            (C37062 * C3413 + C36994 * C3495 + C37063 * C5824 + C36995 * C5928 +
             C37064 * C8617 + C36996 * C8743 + C37065 * C39805 +
             C36997 * C39893) *
                C93582) *
               C93673 * C2696 -
           ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
             C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
                C93582 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C36999) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C2695 -
           ((C35265 + C35266) * C31827 + (C35267 + C35268) * C31835 +
            (C35269 + C35270) * C31826 + (C35271 + C35272) * C31833 +
            (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 +
             C31828 * C1478) *
                C31825 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C31831) *
               C93673 * C2696) *
              C1979 +
          (((C31928 * C3409 + C31828 * C3491 + C31929 * C5818 +
             C93711 * C5922) *
                C31831 +
            (C31928 * C3413 + C31828 * C3495 + C31929 * C5824 +
             C93711 * C5928) *
                C31825 +
            (C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
             C93711 * C5921) *
                C31833 +
            (C31928 * C3414 + C31828 * C3496 + C31929 * C5823 +
             C93711 * C5927) *
                C31826 +
            (C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
             C93711 * C7738) *
                C31835 +
            (C31928 * C3415 + C31828 * C3497 + C31929 * C7632 +
             C93711 * C7739) *
                C31827) *
               C93673 * C2696 -
           ((C34274 + C34275) * C31827 + (C34276 + C34277) * C31835 +
            (C34278 + C34279) * C31826 + (C34280 + C34281) * C31833 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C31825 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C31831) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C36999 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93582) *
                C9601 +
            ((C42101 + C42102) * C36999 + (C42103 + C42104) * C93582) * C9602 +
            C42117 * C9603) *
               C2695 -
           (((C42109 + C42110) * C93582 + (C42111 + C42112) * C36999) * C9603 +
            ((C42108 + C42107) * C93582 + (C42106 + C42105) * C36999) * C9602 +
            ((C42104 + C42103) * C93582 + (C42102 + C42101) * C36999) * C9601) *
               C2696) *
              C1979 +
          ((((C44846 + C44847) * C36999 + (C44848 + C44849) * C93582) * C9601 +
            ((C44850 + C44851) * C36999 + (C44852 + C44853) * C93582) * C9602 +
            ((C31928 * C14027 + C31828 * C14143 + C31929 * C44722 +
              C93711 * C44827) *
                 C36999 +
             (C31928 * C14029 + C31828 * C14145 + C31929 * C44723 +
              C93711 * C44828) *
                 C93582) *
                C9603) *
               C2696 -
           (((C44853 + C44852) * C93582 + (C44851 + C44850) * C36999) * C9603 +
            ((C44849 + C44848) * C93582 + (C44847 + C44846) * C36999) * C9602 +
            ((C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                 C93582 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C36999) *
                C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C2695 -
           ((C39973 + C39974) * C36997 + (C39967 + C39968) * C36996 +
            (C39969 + C39970) * C36995 +
            ((C275 * C1396 + C93673 * C1544) * C93582 +
             (C275 * C1388 + C93673 * C1536) * C36999) *
                C36994) *
               C2696) *
              C1979 +
          (((C39970 + C39969) * C36994 + (C39968 + C39967) * C36995 +
            (C39974 + C39973) * C36996 +
            ((C275 * C39804 + C93673 * C39960) * C36999 +
             (C275 * C39805 + C93673 * C39961) * C93582) *
                C36997) *
               C2696 -
           ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
            (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C2695 -
           ((C36317 + C36318 + C36319 + C36320 + C36321 + C36322) * C93711 +
            (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
             (C275 * C1396 + C93673 * C1544) * C31825 +
             (C275 * C1388 + C93673 * C1536) * C31831) *
                C31828) *
               C2696) *
              C1979 +
          (((C36322 + C36321 + C36320 + C36319 + C36318 + C36317) * C31828 +
            (C8861 * C31831 + C8860 * C31825 + C7868 * C31833 + C7867 * C31826 +
             (C275 * C7631 + C93673 * C7856) * C31835 +
             (C275 * C7632 + C93673 * C7857) * C31827) *
                C93711) *
               C2696 -
           ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
            (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C36999 +
             (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
              C9772 * C1397 + C9603 * C1545) *
                 C93582) *
                C31828 +
            ((C41357 + C41358 + C41359) * C36999 +
             (C41360 + C41361 + C41362) * C93582) *
                C93711) *
               C2695 -
           (((C44966 + C44967 + C44968) * C93582 +
             (C44969 + C44970 + C44971) * C36999) *
                C93711 +
            ((C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
              C9770 * C1396 + C9601 * C1544) *
                 C93582 +
             (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
              C9770 * C1388 + C9601 * C1536) *
                 C36999) *
                C31828) *
               C2696) *
              C1979 +
          ((((C44971 + C44970 + C44969) * C36999 +
             (C44968 + C44967 + C44966) * C93582) *
                C31828 +
            ((C9770 * C5818 + C9601 * C6008 + C9771 * C5821 + C9602 * C6011 +
              C9772 * C44722 + C9603 * C44951) *
                 C36999 +
             (C9770 * C5824 + C9601 * C6014 + C9771 * C5827 + C9602 * C6017 +
              C9772 * C44723 + C9603 * C44952) *
                 C93582) *
                C93711) *
               C2696 -
           (((C41363 + C41364 + C41365) * C93582 +
             (C41366 + C41367 + C41368) * C36999) *
                C93711 +
            ((C41362 + C41361 + C41360) * C93582 +
             (C41359 + C41358 + C41357) * C36999) *
                C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C37062 +
            (C36999 * C189 + C93582 * C362) * C36994 + C37699 * C37063 +
            C37700 * C36995 + C37701 * C37064 + C37702 * C36996 +
            C37703 * C37065 + C37704 * C36997) *
               C93673 * C2695 -
           (C40054 * C36997 + C40055 * C37065 + C40056 * C36996 +
            C40057 * C37064 + C40058 * C36995 + C40059 * C37063 +
            (C36999 * C1470 + C93582 * C1602) * C36994 +
            (C36999 * C1388 + C93582 * C1396) * C37062) *
               C93673 * C2696) *
              C1979 +
          ((C40059 * C37062 + C40058 * C36994 + C40057 * C37063 +
            C40056 * C36995 + C40055 * C37064 + C40054 * C36996 +
            (C36999 * C39804 + C93582 * C39805) * C37065 +
            (C36999 * C39892 + C93582 * C40040) * C36997) *
               C93673 * C2696 -
           (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
            C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
            C37700 * C36994 + C37699 * C37062) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C31928 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C31828 +
            (C32942 + C32943 + C32944) * C31929 +
            (C32945 + C32946 + C32947) * C93711) *
               C93673 * C2695 -
           ((C36433 + C36434 + C36435) * C93711 +
            (C36436 + C36437 + C36438) * C31929 +
            (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 + C31826 * C1601 +
             C31831 * C1470 + C31825 * C1602) *
                C31828 +
            (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 + C31826 * C1395 +
             C31831 * C1388 + C31825 * C1396) *
                C31928) *
               C93673 * C2696) *
              C1979 +
          (((C36438 + C36437 + C36436) * C31928 +
            (C36435 + C36434 + C36433) * C31828 +
            (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
             C31835 * C7631 + C31827 * C7632) *
                C31929 +
            (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 + C31826 * C6093 +
             C31835 * C7738 + C31827 * C7968) *
                C93711) *
               C93673 * C2696 -
           ((C32948 + C32949 + C32950) * C93711 +
            (C32951 + C32952 + C32953) * C31929 +
            (C32947 + C32946 + C32945) * C31828 +
            (C32944 + C32943 + C32942) * C31928) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C31928 +
             (C36999 * C189 + C93582 * C362) * C31828 + C37699 * C31929 +
             C37700 * C93711) *
                C9601 +
            (C42297 + C42298 + C42273 + C42274) * C9602 + C42307 * C9603) *
               C2695 -
           ((C42301 + C42302 + C42303 + C42304) * C9603 +
            (C42280 + C42279 + C42300 + C42299) * C9602 +
            (C42274 + C42273 + C42298 + C42297) * C9601) *
               C2696) *
              C1979 +
          (((C45071 + C45072 + C45073 + C45074) * C9601 +
            (C45075 + C45076 + C45077 + C45078) * C9602 +
            (C42294 * C31928 + C42293 * C31828 +
             (C36999 * C44722 + C93582 * C44723) * C31929 +
             (C36999 * C44827 + C93582 * C45069) * C93711) *
                C9603) *
               C2696 -
           ((C45078 + C45077 + C45076 + C45075) * C9603 +
            (C45074 + C45073 + C45072 + C45071) * C9602 +
            (C37702 * C93711 + C37701 * C31929 + C37700 * C31828 +
             C37699 * C31928) *
                C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C2695 -
           (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
            C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 +
            C38270 + C36995 * C3709 + C37216 * C1388 + C38271 + C38271 +
            C36994 * C1660) *
               C93582 * C93673 * C2696) *
              C1979 +
          ((C37216 * C3409 + C40127 + C40127 + C36994 * C3709 + C37217 * C5818 +
            C40128 + C40128 + C36995 * C6174 + C37218 * C8615 + C40129 +
            C40129 + C36996 * C9089 + C37219 * C39804 + C40130 + C40130 +
            C36997 * C40125) *
               C93582 * C93673 * C2696 -
           (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
            C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
            C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
               C93582 * C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C2695 -
           ((C35585 + C35586) * C31827 + (C35587 + C35588) * C31826 +
            (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 +
             C32190 * C1388 + C33741 + C33741 + C31828 * C1660) *
                C31825) *
               C93673 * C2696) *
              C1979 +
          (((C32190 * C3409 + C36537 + C36537 + C31828 * C3709 +
             C32191 * C5818 + C36538 + C36538 + C93711 * C6174) *
                C31825 +
            (C32190 * C3410 + C36539 + C36539 + C31828 * C3710 +
             C32191 * C5817 + C36540 + C36540 + C93711 * C6173) *
                C31826 +
            (C32190 * C3411 + C36541 + C36541 + C31828 * C3711 +
             C32191 * C7631 + C36542 + C36542 + C93711 * C8067) *
                C31827) *
               C93673 * C2696 -
           ((C34618 + C34619) * C31827 + (C34620 + C34621) * C31826 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C31825) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93582 * C9601 +
            (C42411 + C42412) * C93582 * C9602 + C42418 * C9603) *
               C2695 -
           ((C42415 + C42416) * C93582 * C9603 +
            (C42414 + C42413) * C93582 * C9602 +
            (C42412 + C42411) * C93582 * C9601) *
               C2696) *
              C1979 +
          (((C45196 + C45197) * C93582 * C9601 +
            (C45198 + C45199) * C93582 * C9602 +
            (C32190 * C14027 + C45186 + C45186 + C31828 * C14479 +
             C32191 * C44722 + C45187 + C45187 + C93711 * C45176) *
                C93582 * C9603) *
               C2696 -
           ((C45199 + C45198) * C93582 * C9603 +
            (C45197 + C45196) * C93582 * C9602 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C93582 * C9601) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C2695 -
           (C40200 * C36997 + C39972 * C37065 + C9202 * C36996 +
            C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
            (C275 * C1470 + C93673 * C1726) * C36994 +
            (C275 * C1388 + C93673 * C1536) * C37062) *
               C93582 * C2696) *
              C1979 +
          ((C8863 * C37062 + C9203 * C36994 + C8861 * C37063 + C9202 * C36995 +
            C39972 * C37064 + C40200 * C36996 +
            (C275 * C39804 + C93673 * C39960) * C37065 +
            (C275 * C39892 + C93673 * C40196) * C36997) *
               C93582 * C2696 -
           (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 +
            C5156 * C37064 + C5461 * C36995 + C5151 * C37063 + C5460 * C36994 +
            C5149 * C37062) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C2695 -
           ((C35687 + C35688 + C35689 + C35690) * C31827 +
            (C35691 + C35692 + C35693 + C35694) * C31826 +
            (C9203 * C93711 + C8863 * C31929 +
             (C275 * C1470 + C93673 * C1726) * C31828 +
             (C275 * C1388 + C93673 * C1536) * C31928) *
                C31825) *
               C2696) *
              C1979 +
          (((C8863 * C31928 + C9203 * C31828 + C8861 * C31929 +
             C9202 * C93711) *
                C31825 +
            (C7870 * C31928 + C8195 * C31828 + C7868 * C31929 +
             C8194 * C93711) *
                C31826 +
            (C18541 * C31928 + C18867 * C31828 +
             (C275 * C7631 + C93673 * C7856) * C31929 +
             (C275 * C7738 + C93673 * C8184) * C93711) *
                C31827) *
               C2696 -
           ((C34720 + C34721 + C34722 + C34723) * C31827 +
            (C34724 + C34725 + C34726 + C34727) * C31826 +
            (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 +
             C5149 * C31928) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C31928 +
            (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
             C9772 * C1471 + C9603 * C1727) *
                C31828 +
            (C41357 + C41358 + C41359) * C31929 +
            (C41621 + C41622 + C41623) * C93711) *
               C93582 * C2695 -
           ((C45305 + C45306 + C45307) * C93711 +
            (C44969 + C44970 + C44971) * C31929 +
            (C9772 * C11224 + C9603 * C11655 + C9771 * C1471 + C9602 * C1727 +
             C9770 * C1470 + C9601 * C1726) *
                C31828 +
            (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
             C9770 * C1388 + C9601 * C1536) *
                C31928) *
               C93582 * C2696) *
              C1979 +
          (((C44971 + C44970 + C44969) * C31928 +
            (C45307 + C45306 + C45305) * C31828 +
            (C9770 * C5818 + C9601 * C6008 + C9771 * C5821 + C9602 * C6011 +
             C9772 * C44722 + C9603 * C44951) *
                C31929 +
            (C9770 * C5922 + C9601 * C6266 + C9771 * C5924 + C9602 * C6268 +
             C9772 * C44827 + C9603 * C45297) *
                C93711) *
               C93582 * C2696 -
           ((C41624 + C41625 + C41626) * C93711 +
            (C41366 + C41367 + C41368) * C31929 +
            (C41623 + C41622 + C41621) * C31828 +
            (C41359 + C41358 + C41357) * C31928) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C2695 -
           ((C40280 + C40270) * C36997 + (C40281 + C40273) * C36996 +
            (C40282 + C40276) * C36995 +
            ((C36999 * C1536 + C93582 * C1784) * C93673 +
             (C36999 * C1388 + C93582 * C1396) * C275) *
                C36994) *
               C2696) *
              C1979 +
          (((C40276 + C40282) * C36994 + (C40273 + C40281) * C36995 +
            (C40270 + C40280) * C36996 +
            ((C36999 * C39804 + C93582 * C39805) * C275 +
             (C36999 * C39960 + C93582 * C40266) * C93673) *
                C36997) *
               C2696 -
           ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
            (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C2695 -
           (((C36745 + C36746 + C36747) * C93673 +
             (C36436 + C36437 + C36438) * C275) *
                C93711 +
            ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 +
              C31826 * C1783 + C31831 * C1536 + C31825 * C1784) *
                 C93673 +
             (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
              C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                 C275) *
                C31828) *
               C2696) *
              C1979 +
          ((((C36438 + C36437 + C36436) * C275 +
             (C36747 + C36746 + C36745) * C93673) *
                C31828 +
            ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 +
              C31826 * C5823 + C31835 * C7631 + C31827 * C7632) *
                 C275 +
             (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 +
              C31826 * C6345 + C31835 * C7856 + C31827 * C8295) *
                 C93673) *
                C93711) *
               C2696 -
           (((C33203 + C33204 + C33205) * C93673 +
             (C32951 + C32952 + C32953) * C275) *
                C93711 +
            ((C33202 + C33201 + C33200) * C93673 +
             (C32944 + C32943 + C32942) * C275) *
                C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C9770 +
             (C36999 * C276 + C93582 * C579) * C9601 + C42289 * C9771 +
             C42577 * C9602 + C42291 * C9772 + C42578 * C9603) *
                C31828 +
            (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
               C2695 -
           ((C45407 + C45408 + C45409 + C45410 + C45411 + C45412) * C93711 +
            (C42580 * C9603 + C42296 * C9772 + C42578 * C9602 + C42291 * C9771 +
             C42577 * C9601 + C42289 * C9770) *
                C31828) *
               C2696) *
              C1979 +
          (((C45412 + C45411 + C45410 + C45409 + C45408 + C45407) * C31828 +
            (C40057 * C9770 + C40278 * C9601 + C41454 * C9771 + C41716 * C9602 +
             (C36999 * C44722 + C93582 * C44723) * C9772 +
             (C36999 * C44951 + C93582 * C45405) * C9603) *
                C93711) *
               C2696 -
           ((C41718 + C41710 + C41711 + C41712 + C41713 + C41714) * C93711 +
            (C41717 + C41705 + C41704 + C41703 + C41702 + C41701) * C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C2695 -
           ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
             C37063 * C3565 + C36995 * C3923 + C37062 * C1536 +
             C36994 * C1842) *
                C93673 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C275) *
               C93582 * C2696) *
              C1979 +
          (((C37062 * C3409 + C36994 * C3491 + C37063 * C5818 + C36995 * C5922 +
             C37064 * C8615 + C36996 * C8741 + C37065 * C39804 +
             C36997 * C39892) *
                C275 +
            (C37062 * C3565 + C36994 * C3923 + C37063 * C6008 + C36995 * C6426 +
             C37064 * C8843 + C36996 * C9413 + C37065 * C39960 +
             C36997 * C40348) *
                C93673) *
               C93582 * C2696 -
           ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
             C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
                C93673 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C275) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C2695 -
           (((C35899 + C35900) * C93673 + (C35267 + C35268) * C275) * C31827 +
            ((C35901 + C35902) * C93673 + (C35271 + C35272) * C275) * C31826 +
            ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
              C31828 * C1842) *
                 C93673 +
             (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
              C31828 * C1470) *
                 C275) *
                C31825) *
               C2696) *
              C1979 +
          ((((C31928 * C3409 + C31828 * C3491 + C31929 * C5818 +
              C93711 * C5922) *
                 C275 +
             (C31928 * C3565 + C31828 * C3923 + C31929 * C6008 +
              C93711 * C6426) *
                 C93673) *
                C31825 +
            ((C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
              C93711 * C5921) *
                 C275 +
             (C31928 * C3566 + C31828 * C3924 + C31929 * C6007 +
              C93711 * C6425) *
                 C93673) *
                C31826 +
            ((C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
              C93711 * C7738) *
                 C275 +
             (C31928 * C3567 + C31828 * C3925 + C31929 * C7856 +
              C93711 * C8394) *
                 C93673) *
                C31827) *
               C2696 -
           (((C34941 + C34942) * C93673 + (C34276 + C34277) * C275) * C31827 +
            ((C34943 + C34944) * C93673 + (C34280 + C34281) * C275) * C31826 +
            ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93673 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C275) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C9770 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C9601 +
            (C42101 + C42102) * C9771 + (C42668 + C42669) * C9602 +
            C42113 * C9772 + C42674 * C9603) *
               C93582 * C2695 -
           ((C42672 + C42673) * C9603 + (C42111 + C42112) * C9772 +
            (C42671 + C42670) * C9602 + (C42106 + C42105) * C9771 +
            (C42669 + C42668) * C9601 + (C42102 + C42101) * C9770) *
               C93582 * C2696) *
              C1979 +
          (((C44846 + C44847) * C9770 + (C45520 + C45521) * C9601 +
            (C44850 + C44851) * C9771 + (C45522 + C45523) * C9602 +
            (C31928 * C14027 + C31828 * C14143 + C31929 * C44722 +
             C93711 * C44827) *
                C9772 +
            (C31928 * C14265 + C31828 * C14801 + C31929 * C44951 +
             C93711 * C45510) *
                C9603) *
               C93582 * C2696 -
           ((C45523 + C45522) * C9603 + (C44851 + C44850) * C9772 +
            (C45521 + C45520) * C9602 + (C44847 + C44846) * C9771 +
            (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C9601 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C9770) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C2695 -
           (C40422 * C36997 + C9526 * C36996 + C9527 * C36995 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
               C93582 * C2696) *
              C1979 +
          ((C9527 * C36994 + C9526 * C36995 + C40422 * C36996 +
            (C713 * C39804 + C40419 + C40419 + C93673 * C40415) * C36997) *
               C93582 * C2696 -
           (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 +
            C5740 * C36994) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C2695 -
           ((C36001 + C36002) * C31827 + (C36003 + C36004) * C31826 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
                C31825) *
               C2696) *
              C1979 +
          (((C9527 * C31828 + C9526 * C93711) * C31825 +
            (C8515 * C31828 + C8514 * C93711) * C31826 +
            (C19182 * C31828 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C93711) *
                C31827) *
               C2696 -
           ((C35043 + C35044) * C31827 + (C35045 + C35046) * C31826 +
            (C5741 * C93711 + C5740 * C31828) * C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C31828 +
            (C41894 + C41895 + C41896) * C93711) *
               C93582 * C2695 -
           ((C45638 + C45639 + C45640) * C93711 +
            (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
             C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
             C11929 + C11929 + C9601 * C1900) *
                C31828) *
               C93582 * C2696) *
              C1979 +
          (((C45640 + C45639 + C45638) * C31828 +
            (C10299 * C5818 + C45629 + C45629 + C9601 * C6506 + C10300 * C5821 +
             C45630 + C45630 + C9602 * C6508 + C10301 * C44722 + C45631 +
             C45631 + C9603 * C45621) *
                C93711) *
               C93582 * C2696 -
           ((C41897 + C41898 + C41899) * C93711 +
            (C41896 + C41895 + C41894) * C31828) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                   C93673 * C31828 +
               (C31830 * C807 + C31840 + C31840 + C31825 * C823 +
                C31832 * C806 + C31841 + C31841 + C31826 * C822 +
                C31834 * C805 + C31842 + C31842 + C31827 * C821) *
                   C93673 * C93711) *
                  C93635 * C93621 * C97 -
              ((C31834 * C804 + C31843 + C31843 + C31827 * C820 +
                C31832 * C805 + C31844 + C31844 + C31826 * C821 +
                C31830 * C806 + C31845 + C31845 + C31825 * C822) *
                   C93673 * C93711 +
               (C31834 * C111 + C31846 + C31846 + C31827 * C123 +
                C31832 * C110 + C31847 + C31847 + C31826 * C122 +
                C31830 * C109 + C31848 + C31848 + C31825 * C121) *
                   C93673 * C31828) *
                  C93635 * C93621 * C98 +
              ((C31830 * C110 + C31849 + C31849 + C31825 * C122 +
                C31832 * C111 + C31850 + C31850 + C31826 * C123 +
                C31834 * C112 + C31851 + C31851 + C31827 * C124) *
                   C93673 * C31828 +
               (C31830 * C805 + C31852 + C31852 + C31825 * C821 +
                C31832 * C804 + C31853 + C31853 + C31826 * C820 +
                C31834 * C1983 + C31854 + C31854 + C31827 * C1985) *
                   C93673 * C93711) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                   C93673 * C31828 +
               (C32678 + C32679 + C32680) * C93673 * C93711) *
                  C93635 * C800 -
              ((C32681 + C32682 + C32683) * C93673 * C93711 +
               (C32680 + C32679 + C32678) * C93673 * C31828) *
                  C93635 * C801 +
              ((C32683 + C32682 + C32681) * C93673 * C31828 +
               (C31830 * C4917 + C32663 + C32663 + C31825 * C4925 +
                C31832 * C4916 + C32664 + C32664 + C31826 * C4924 +
                C31834 * C6615 + C32665 + C32665 + C31827 * C6617) *
                   C93673 * C93711) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C32678 + C32679 + C32680) * C93673 * C93711) *
              C1382 -
          ((C31834 * C3411 + C33428 + C33428 + C31827 * C3419 + C31832 * C3410 +
            C33429 + C33429 + C31826 * C3418 + C31830 * C3409 + C33430 +
            C33430 + C31825 * C3417) *
               C93673 * C93711 +
           (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31830 * C1388 + C33433 +
            C33433 + C31825 * C1404) *
               C93673 * C31828) *
              C1383 +
          ((C31830 * C1389 + C33434 + C33434 + C31825 * C1405 + C31832 * C1390 +
            C33435 + C33435 + C31826 * C1406 + C31834 * C1391 + C33436 +
            C33436 + C31827 * C1407) *
               C93673 * C31828 +
           (C31830 * C5819 + C33437 + C33437 + C31825 * C5831 + C31832 * C5820 +
            C33438 + C33438 + C31826 * C5832 + C31834 * C12033 + C33439 +
            C33439 + C31827 * C12035) *
               C93673 * C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           (C36998 * C807 + C37002 + C37002 + C93582 * C823) * C93673 * C36995 +
           (C36998 * C808 + C37003 + C37003 + C93582 * C824) * C93673 * C36996 +
           (C36998 * C4917 + C37004 + C37004 + C93582 * C4925) * C93673 *
               C36997) *
              C93635 * C93621 * C97 -
          ((C36998 * C4916 + C37005 + C37005 + C93582 * C4924) * C93673 *
               C36997 +
           (C36998 * C809 + C37006 + C37006 + C93582 * C825) * C93673 * C36996 +
           (C36998 * C806 + C37007 + C37007 + C93582 * C822) * C93673 * C36995 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
               C36994) *
              C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93673 * C36994 +
           (C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93673 * C36995 +
           (C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93673 * C36996 +
           (C36998 * C6615 + C37012 + C37012 + C93582 * C6617) * C93673 *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C93635 * C800 -
          (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
           C37508 * C36994) *
              C93635 * C801 +
          (C37509 * C36994 + C37510 * C36995 + C37511 * C36996 +
           (C36998 * C37482 + C37495 + C37495 + C93582 * C37484) * C93673 *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C1382 -
          ((C36998 * C8615 + C38054 + C38054 + C93582 * C8619) * C93673 *
               C36997 +
           (C36998 * C5818 + C38055 + C38055 + C93582 * C5830) * C93673 *
               C36996 +
           (C36998 * C3409 + C38056 + C38056 + C93582 * C3417) * C93673 *
               C36995 +
           (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C93673 *
               C36994) *
              C1383 +
          ((C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C93673 *
               C36994 +
           (C36998 * C5819 + C38059 + C38059 + C93582 * C5831) * C93673 *
               C36995 +
           (C36998 * C5821 + C38060 + C38060 + C93582 * C5833) * C93673 *
               C36996 +
           (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C93673 *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C9602 +
            (C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C9603) *
               C31828 +
           (C37504 * C9601 + C39823 * C9602 +
            (C36998 * C5819 + C38059 + C38059 + C93582 * C5831) * C9603) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C36998 * C5820 + C40497 + C40497 + C93582 * C5832) * C9603 +
            (C36998 * C3410 + C39204 + C39204 + C93582 * C3418) * C9602 +
            C38560 * C9601) *
               C93711 +
           ((C36998 * C1390 + C40498 + C40498 + C93582 * C1406) * C9603 +
            (C36998 * C1387 + C39203 + C39203 + C93582 * C1403) * C9602 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C9601) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C9601 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C9602 +
            (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C9603) *
               C31828 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C9601 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C9602 +
            (C36998 * C12033 + C40502 + C40502 + C93582 * C12035) * C9603) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C9602 +
            (C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C9603) *
               C31828 +
           (C41169 + C41170 + C41183) * C93711) *
              C93635 * C800 -
          ((C41184 + C41175 + C41176) * C93711 +
           (C41183 + C41170 + C41169) * C31828) *
              C93635 * C801 +
          ((C41176 + C41175 + C41184) * C31828 +
           (C37506 * C9601 + C39821 * C9602 +
            (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C9603) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
            C41997 * C9602 + C41998 * C9603) *
               C31828 +
           (C41169 + C41170 + C41183) * C93711) *
              C1382 -
          ((C41999 * C9603 + C41181 * C9602 + C39823 * C9601) * C93711 +
           (C42000 * C9603 + C41998 * C9602 + C41997 * C9601) * C31828) *
              C1383 +
          ((C41998 * C9601 + C42000 * C9602 +
            (C36998 * C11104 + C41987 + C41987 + C93582 * C11112) * C9603) *
               C31828 +
           (C41181 * C9601 + C41999 * C9602 +
            (C36998 * C41973 + C41988 + C41988 + C93582 * C41975) * C9603) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                   C31831 +
               (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                   C31825 +
               (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
               C31967 * C31835 + C31968 * C31827) *
                  C93673 * C93635 * C93621 * C97 -
              ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
               (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
               (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
                  C93673 * C93635 * C93621 * C98 +
              (C31967 * C31831 + C31968 * C31825 + (C31966 + C31965) * C31833 +
               (C31964 + C31963) * C31826 +
               (C31928 * C112 + C31828 * C193 + C31929 * C1983 +
                C93711 * C2056) *
                   C31835 +
               (C31928 * C118 + C31828 * C199 + C31929 * C1984 +
                C93711 * C2057) *
                   C31827) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                   C31831 +
               (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                   C31825 +
               (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
               C31967 * C31835 + C31968 * C31827) *
                  C93673 * C93635 * C800 -
              ((C31929 * C818 + C93711 * C900 + C31928 * C813 + C31828 * C895) *
                   C31827 +
               (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
                   C31835 +
               (C31929 * C817 + C93711 * C899 + C31928 * C814 + C31828 * C896) *
                   C31826 +
               (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
                   C31833 +
               (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                   C31825 +
               (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                   C31831) *
                  C93673 * C93635 * C801 +
              ((C31928 * C808 + C31828 * C890 + C31929 * C4917 +
                C93711 * C5039) *
                   C31831 +
               (C31928 * C816 + C31828 * C898 + C31929 * C4921 +
                C93711 * C5043) *
                   C31825 +
               (C31928 * C809 + C31828 * C891 + C31929 * C4916 +
                C93711 * C5038) *
                   C31833 +
               (C31928 * C817 + C31828 * C899 + C31929 * C4920 +
                C93711 * C5042) *
                   C31826 +
               (C31928 * C810 + C31828 * C892 + C31929 * C6615 +
                C93711 * C6738) *
                   C31835 +
               (C31928 * C818 + C31828 * C900 + C31929 * C6616 +
                C93711 * C6739) *
                   C31827) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C1382 -
          ((C31929 * C3415 + C93711 * C3497 + C31928 * C1394 + C31828 * C1476) *
               C31827 +
           (C31929 * C3411 + C93711 * C3493 + C31928 * C1386 + C31828 * C1468) *
               C31835 +
           (C31929 * C3414 + C93711 * C3496 + C31928 * C1395 + C31828 * C1477) *
               C31826 +
           (C31929 * C3410 + C93711 * C3492 + C31928 * C1387 + C31828 * C1469) *
               C31833 +
           (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 + C31828 * C1478) *
               C31825 +
           (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 + C31828 * C1470) *
               C31831) *
              C93673 * C1383 +
          ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C31831 +
           (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 + C93711 * C5929) *
               C31825 +
           (C31928 * C1390 + C31828 * C1472 + C31929 * C5820 + C93711 * C5925) *
               C31833 +
           (C31928 * C1398 + C31828 * C1480 + C31929 * C5826 + C93711 * C5931) *
               C31826 +
           (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
            C93711 * C12136) *
               C31835 +
           (C31928 * C1399 + C31828 * C1481 + C31929 * C12034 +
            C93711 * C12137) *
               C31827) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C93621 * C97 -
          ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
            C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
               C93582 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C36999) *
              C93673 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C36999 +
           (C37062 * C116 + C36994 * C197 + C37063 * C813 + C36995 * C895 +
            C37064 * C818 + C36996 * C900 + C37065 * C6616 + C36997 * C6739) *
               C93582) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C800 -
          ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
            C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
               C93582 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C36999) *
              C93673 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C36999 +
           (C37062 * C816 + C36994 * C898 + C37063 * C4921 + C36995 * C5043 +
            C37064 * C4922 + C36996 * C5044 + C37065 * C37483 +
            C36997 * C37562) *
               C93582) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C1382 -
          ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
            C37063 * C3413 + C36995 * C3495 + C37062 * C1396 + C36994 * C1478) *
               C93582 +
           (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
            C37063 * C3409 + C36995 * C3491 + C37062 * C1388 + C36994 * C1470) *
               C36999) *
              C93673 * C1383 +
          ((C37062 * C1389 + C36994 * C1471 + C37063 * C5819 + C36995 * C5923 +
            C37064 * C5821 + C36996 * C5924 + C37065 * C38050 +
            C36997 * C38111) *
               C36999 +
           (C37062 * C1397 + C36994 * C1479 + C37063 * C5825 + C36995 * C5929 +
            C37064 * C5827 + C36996 * C5930 + C37065 * C38051 +
            C36997 * C38112) *
               C93582) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C36999 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93582) *
               C9601 +
           ((C31928 * C1388 + C31828 * C1470 + C31929 * C3409 +
             C93711 * C3491) *
                C36999 +
            (C31928 * C1396 + C31828 * C1478 + C31929 * C3413 +
             C93711 * C3495) *
                C93582) *
               C9602 +
           ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C36999 +
            (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 +
             C93711 * C5929) *
                C93582) *
               C9603) *
              C93635 * C93621 * C97 -
          (((C31929 * C5826 + C93711 * C5931 + C31928 * C1398 +
             C31828 * C1480) *
                C93582 +
            (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 +
             C31828 * C1472) *
                C36999) *
               C9603 +
           ((C35269 + C35270) * C93582 + (C35271 + C35272) * C36999) * C9602 +
           ((C31958 + C31957) * C93582 + (C31956 + C31955) * C36999) * C9601) *
              C93635 * C93621 * C98 +
          ((C31967 * C36999 + C31968 * C93582) * C9601 +
           ((C35268 + C35267) * C36999 + (C35266 + C35265) * C93582) * C9602 +
           ((C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
             C93711 * C12136) *
                C36999 +
            (C31928 * C1399 + C31828 * C1481 + C31929 * C12034 +
             C93711 * C12137) *
                C93582) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C36999 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93582) *
               C9601 +
           ((C31928 * C1388 + C31828 * C1470 + C31929 * C3409 +
             C93711 * C3491) *
                C36999 +
            (C31928 * C1396 + C31828 * C1478 + C31929 * C3413 +
             C93711 * C3495) *
                C93582) *
               C9602 +
           ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C36999 +
            (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 +
             C93711 * C5929) *
                C93582) *
               C9603) *
              C93635 * C800 -
          (((C31929 * C5827 + C93711 * C5930 + C31928 * C5825 +
             C31828 * C5929) *
                C93582 +
            (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 +
             C31828 * C5923) *
                C36999) *
               C9603 +
           ((C31929 * C5824 + C93711 * C5928 + C31928 * C3413 +
             C31828 * C3495) *
                C93582 +
            (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 +
             C31828 * C3491) *
                C36999) *
               C9602 +
           ((C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C93582 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C36999) *
               C9601) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C36999 +
            (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
                C93582) *
               C9601 +
           ((C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C36999 +
            (C31928 * C5824 + C31828 * C5928 + C31929 * C8617 +
             C93711 * C8743) *
                C93582) *
               C9602 +
           ((C31928 * C5821 + C31828 * C5924 + C31929 * C38050 +
             C93711 * C38111) *
                C36999 +
            (C31928 * C5827 + C31828 * C5930 + C31929 * C38051 +
             C93711 * C38112) *
                C93582) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C36999 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93582) *
               C9601 +
           ((C42101 + C42102) * C36999 + (C42103 + C42104) * C93582) * C9602 +
           C42117 * C9603) *
              C1382 -
          (((C42109 + C42110) * C93582 + (C42111 + C42112) * C36999) * C9603 +
           ((C42108 + C42107) * C93582 + (C42106 + C42105) * C36999) * C9602 +
           ((C42104 + C42103) * C93582 + (C42102 + C42101) * C36999) * C9601) *
              C1383 +
          (C42117 * C9601 +
           ((C42112 + C42111) * C36999 + (C42110 + C42109) * C93582) * C9602 +
           ((C31928 * C11104 + C31828 * C11225 + C31929 * C41973 +
             C93711 * C42074) *
                C36999 +
            (C31928 * C11108 + C31828 * C11229 + C31929 * C41974 +
             C93711 * C42075) *
                C93582) *
               C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C275 * C108 + C93673 * C276) * C31831 +
                (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
                C306 * C31826 + C307 * C31835 + C308 * C31827) *
                   C31828 +
               (C5149 * C31831 + C5150 * C31825 + C2162 * C31833 +
                C2161 * C31826 + C2160 * C31835 + C2159 * C31827) *
                   C93711) *
                  C93635 * C93621 * C97 -
              ((C2157 * C31827 + C2158 * C31835 + C2159 * C31826 +
                C2160 * C31833 + C2161 * C31825 + C2162 * C31831) *
                   C93711 +
               (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
                C306 * C31825 + C305 * C31831) *
                   C31828) *
                  C93635 * C93621 * C98 +
              ((C307 * C31831 + C308 * C31825 + C309 * C31833 + C310 * C31826 +
                C312 * C31835 + C311 * C31827) *
                   C31828 +
               (C2160 * C31831 + C2159 * C31825 + C2158 * C31833 +
                C2157 * C31826 + (C275 * C1983 + C93673 * C2142) * C31835 +
                (C275 * C1984 + C93673 * C2143) * C31827) *
                   C93711) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C275 * C108 + C93673 * C276) * C31831 +
                (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
                C306 * C31826 + C307 * C31835 + C308 * C31827) *
                   C31828 +
               (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
                  C93635 * C800 -
              ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
               (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
                  C93635 * C801 +
              ((C32843 + C32842 + C32841 + C32840 + C32839 + C32838) * C31828 +
               (C5156 * C31831 + C5155 * C31825 + C5154 * C31833 +
                C5153 * C31826 + (C275 * C6615 + C93673 * C6856) * C31835 +
                (C275 * C6616 + C93673 * C6857) * C31827) *
                   C93711) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
              C1382 -
          ((C18540 * C31827 + C18541 * C31835 + C7869 * C31826 +
            C7870 * C31833 + C8862 * C31825 + C8863 * C31831) *
               C93711 +
           (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
            (C275 * C1396 + C93673 * C1544) * C31825 +
            (C275 * C1388 + C93673 * C1536) * C31831) *
               C31828) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C31831 +
            (C275 * C1397 + C93673 * C1545) * C31825 +
            (C275 * C1390 + C93673 * C1538) * C31833 +
            (C275 * C1398 + C93673 * C1546) * C31826 +
            (C275 * C1391 + C93673 * C1539) * C31835 +
            (C275 * C1399 + C93673 * C1547) * C31827) *
               C31828 +
           ((C275 * C5819 + C93673 * C6009) * C31831 +
            (C275 * C5825 + C93673 * C6015) * C31825 +
            (C275 * C5820 + C93673 * C6010) * C31833 +
            (C275 * C5826 + C93673 * C6016) * C31826 +
            (C275 * C12033 + C93673 * C12248) * C31835 +
            (C275 * C12034 + C93673 * C12249) * C31827) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C5149 * C36999 + C5150 * C93582) * C36995 +
           (C5151 * C36999 + C5152 * C93582) * C36996 +
           (C5156 * C36999 + C5155 * C93582) * C36997) *
              C93635 * C93621 * C97 -
          ((C5153 * C93582 + C5154 * C36999) * C36997 +
           (C4299 * C93582 + C4298 * C36999) * C36996 +
           (C2161 * C93582 + C2162 * C36999) * C36995 +
           (C306 * C93582 + C305 * C36999) * C36994) *
              C93635 * C93621 * C98 +
          ((C307 * C36999 + C308 * C93582) * C36994 +
           (C2160 * C36999 + C2159 * C93582) * C36995 +
           (C4301 * C36999 + C4300 * C93582) * C36996 +
           ((C275 * C6615 + C93673 * C6856) * C36999 +
            (C275 * C6616 + C93673 * C6857) * C93582) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C93635 * C800 -
          ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
           (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
              C93635 * C801 +
          (C37626 * C36994 + C37627 * C36995 + (C37631 + C37630) * C36996 +
           ((C275 * C37482 + C93673 * C37613) * C36999 +
            (C275 * C37483 + C93673 * C37614) * C93582) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C1382 -
          (((C275 * C8617 + C93673 * C8845) * C93582 +
            (C275 * C8615 + C93673 * C8843) * C36999) *
               C36997 +
           (C8860 * C93582 + C8861 * C36999) * C36996 +
           (C8862 * C93582 + C8863 * C36999) * C36995 +
           ((C275 * C1396 + C93673 * C1544) * C93582 +
            (C275 * C1388 + C93673 * C1536) * C36999) *
               C36994) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C36999 +
            (C275 * C1397 + C93673 * C1545) * C93582) *
               C36994 +
           ((C275 * C5819 + C93673 * C6009) * C36999 +
            (C275 * C5825 + C93673 * C6015) * C93582) *
               C36995 +
           ((C275 * C5821 + C93673 * C6011) * C36999 +
            (C275 * C5827 + C93673 * C6017) * C93582) *
               C36996 +
           ((C275 * C38050 + C93673 * C38163) * C36999 +
            (C275 * C38051 + C93673 * C38164) * C93582) *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C36999 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C93582) *
               C31828 +
           ((C9770 * C807 + C9601 * C955 + C9771 * C3409 + C9602 * C3565 +
             C9772 * C5819 + C9603 * C6009) *
                C36999 +
            (C9770 * C815 + C9601 * C963 + C9771 * C3413 + C9602 * C3569 +
             C9772 * C5825 + C9603 * C6015) *
                C93582) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C12263 + C12264 + C12265) * C93582 +
            (C12266 + C12267 + C12268) * C36999) *
               C93711 +
           ((C9803 + C9802 + C9801) * C93582 +
            (C9800 + C9799 + C9798) * C36999) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C9809 + C9808 + C9807) * C36999 +
            (C9806 + C9805 + C9804) * C93582) *
               C31828 +
           ((C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
             C9772 * C12033 + C9603 * C12248) *
                C36999 +
            (C9770 * C813 + C9601 * C961 + C9771 * C3415 + C9602 * C3571 +
             C9772 * C12034 + C9603 * C12249) *
                C93582) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C36999 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C93582) *
               C31828 +
           ((C41357 + C41358 + C41359) * C36999 +
            (C41360 + C41361 + C41362) * C93582) *
               C93711) *
              C93635 * C800 -
          (((C41363 + C41364 + C41365) * C93582 +
            (C41366 + C41367 + C41368) * C36999) *
               C93711 +
           ((C41362 + C41361 + C41360) * C93582 +
            (C41359 + C41358 + C41357) * C36999) *
               C31828) *
              C93635 * C801 +
          (((C41368 + C41367 + C41366) * C36999 +
            (C41365 + C41364 + C41363) * C93582) *
               C31828 +
           ((C9770 * C4917 + C9601 * C5121 + C9771 * C8615 + C9602 * C8843 +
             C9772 * C38050 + C9603 * C38163) *
                C36999 +
            (C9770 * C4921 + C9601 * C5125 + C9771 * C8617 + C9602 * C8845 +
             C9772 * C38051 + C9603 * C38164) *
                C93582) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C36999 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C93582) *
               C31828 +
           ((C41357 + C41358 + C41359) * C36999 +
            (C41360 + C41361 + C41362) * C93582) *
               C93711) *
              C1382 -
          (((C9772 * C14029 + C9603 * C14267 + C9771 * C5825 + C9602 * C6015 +
             C9770 * C3413 + C9601 * C3569) *
                C93582 +
            (C9772 * C14027 + C9603 * C14265 + C9771 * C5819 + C9602 * C6009 +
             C9770 * C3409 + C9601 * C3565) *
                C36999) *
               C93711 +
           ((C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
             C9770 * C1396 + C9601 * C1544) *
                C93582 +
            (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
             C9770 * C1388 + C9601 * C1536) *
                C36999) *
               C31828) *
              C1383 +
          (((C9770 * C1389 + C9601 * C1537 + C9771 * C11103 + C9602 * C11345 +
             C9772 * C11104 + C9603 * C11346) *
                C36999 +
            (C9770 * C1397 + C9601 * C1545 + C9771 * C11107 + C9602 * C11349 +
             C9772 * C11108 + C9603 * C11350) *
                C93582) *
               C31828 +
           ((C9770 * C5819 + C9601 * C6009 + C9771 * C14027 + C9602 * C14265 +
             C9772 * C41973 + C9603 * C42191) *
                C36999 +
            (C9770 * C5825 + C9601 * C6015 + C9771 * C14029 + C9602 * C14267 +
             C9772 * C41974 + C9603 * C42192) *
                C93582) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                C31835 * C110 + C31827 * C116) *
                   C31928 +
               (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
                C31835 * C191 + C31827 * C364) *
                   C31828 +
               (C31831 * C807 + C31825 * C815 + C31833 * C806 + C31826 * C814 +
                C31835 * C805 + C31827 * C813) *
                   C31929 +
               (C31831 * C889 + C31825 * C1021 + C31833 * C888 +
                C31826 * C1020 + C31835 * C887 + C31827 * C1019) *
                   C93711) *
                  C93673 * C93635 * C93621 * C97 -
              ((C31835 * C886 + C31827 * C1018 + C31833 * C887 +
                C31826 * C1019 + C31831 * C888 + C31825 * C1020) *
                   C93711 +
               (C31835 * C804 + C31827 * C812 + C31833 * C805 + C31826 * C813 +
                C31831 * C806 + C31825 * C814) *
                   C31929 +
               (C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
                C31831 * C190 + C31825 * C363) *
                   C31828 +
               (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
                C31831 * C109 + C31825 * C115) *
                   C31928) *
                  C93673 * C93635 * C93621 * C98 +
              ((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
                C31835 * C112 + C31827 * C118) *
                   C31928 +
               (C31831 * C191 + C31825 * C364 + C31833 * C192 + C31826 * C365 +
                C31835 * C193 + C31827 * C366) *
                   C31828 +
               (C31831 * C805 + C31825 * C813 + C31833 * C804 + C31826 * C812 +
                C31835 * C1983 + C31827 * C1984) *
                   C31929 +
               (C31831 * C887 + C31825 * C1019 + C31833 * C886 +
                C31826 * C1018 + C31835 * C2056 + C31827 * C2228) *
                   C93711) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                C31835 * C110 + C31827 * C116) *
                   C31928 +
               (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
                C31835 * C191 + C31827 * C364) *
                   C31828 +
               (C32942 + C32943 + C32944) * C31929 +
               (C32945 + C32946 + C32947) * C93711) *
                  C93673 * C93635 * C800 -
              ((C32948 + C32949 + C32950) * C93711 +
               (C32951 + C32952 + C32953) * C31929 +
               (C32947 + C32946 + C32945) * C31828 +
               (C32944 + C32943 + C32942) * C31928) *
                  C93673 * C93635 * C801 +
              ((C32953 + C32952 + C32951) * C31928 +
               (C32950 + C32949 + C32948) * C31828 +
               (C31831 * C4917 + C31825 * C4921 + C31833 * C4916 +
                C31826 * C4920 + C31835 * C6615 + C31827 * C6616) *
                   C31929 +
               (C31831 * C5039 + C31825 * C5242 + C31833 * C5038 +
                C31826 * C5241 + C31835 * C6738 + C31827 * C6964) *
                   C93711) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C31928 +
           (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
            C31835 * C191 + C31827 * C364) *
               C31828 +
           (C32942 + C32943 + C32944) * C31929 +
           (C32945 + C32946 + C32947) * C93711) *
              C93673 * C1382 -
          ((C31835 * C3493 + C31827 * C3641 + C31833 * C3492 + C31826 * C3640 +
            C31831 * C3491 + C31825 * C3639) *
               C93711 +
           (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 + C31826 * C3414 +
            C31831 * C3409 + C31825 * C3413) *
               C31929 +
           (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 + C31826 * C1601 +
            C31831 * C1470 + C31825 * C1602) *
               C31828 +
           (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 + C31826 * C1395 +
            C31831 * C1388 + C31825 * C1396) *
               C31928) *
              C93673 * C1383 +
          ((C31831 * C1389 + C31825 * C1397 + C31833 * C1390 + C31826 * C1398 +
            C31835 * C1391 + C31827 * C1399) *
               C31928 +
           (C31831 * C1471 + C31825 * C1603 + C31833 * C1472 + C31826 * C1604 +
            C31835 * C1473 + C31827 * C1605) *
               C31828 +
           (C31831 * C5819 + C31825 * C5825 + C31833 * C5820 + C31826 * C5826 +
            C31835 * C12033 + C31827 * C12034) *
               C31929 +
           (C31831 * C5923 + C31825 * C6095 + C31833 * C5925 + C31826 * C6096 +
            C31835 * C12136 + C31827 * C12366) *
               C93711) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C37062 +
           (C36999 * C189 + C93582 * C362) * C36994 +
           (C36999 * C807 + C93582 * C815) * C37063 +
           (C36999 * C889 + C93582 * C1021) * C36995 +
           (C36999 * C808 + C93582 * C816) * C37064 +
           (C36999 * C890 + C93582 * C1022) * C36996 +
           (C36999 * C4917 + C93582 * C4921) * C37065 +
           (C36999 * C5039 + C93582 * C5242) * C36997) *
              C93673 * C93635 * C93621 * C97 -
          ((C36999 * C5038 + C93582 * C5241) * C36997 +
           (C36999 * C4916 + C93582 * C4920) * C37065 +
           (C36999 * C891 + C93582 * C1023) * C36996 +
           (C36999 * C809 + C93582 * C817) * C37064 +
           (C36999 * C888 + C93582 * C1020) * C36995 +
           (C36999 * C806 + C93582 * C814) * C37063 +
           (C36999 * C190 + C93582 * C363) * C36994 +
           (C36999 * C109 + C93582 * C115) * C37062) *
              C93673 * C93635 * C93621 * C98 +
          ((C36999 * C110 + C93582 * C116) * C37062 +
           (C36999 * C191 + C93582 * C364) * C36994 +
           (C36999 * C805 + C93582 * C813) * C37063 +
           (C36999 * C887 + C93582 * C1019) * C36995 +
           (C36999 * C810 + C93582 * C818) * C37064 +
           (C36999 * C892 + C93582 * C1024) * C36996 +
           (C36999 * C6615 + C93582 * C6616) * C37065 +
           (C36999 * C6738 + C93582 * C6964) * C36997) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C37062 +
           (C36999 * C189 + C93582 * C362) * C36994 + C37699 * C37063 +
           C37700 * C36995 + C37701 * C37064 + C37702 * C36996 +
           C37703 * C37065 + C37704 * C36997) *
              C93673 * C93635 * C800 -
          (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
           C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
           C37700 * C36994 + C37699 * C37062) *
              C93673 * C93635 * C801 +
          (C37701 * C37062 + C37702 * C36994 + C37703 * C37063 +
           C37704 * C36995 + C37706 * C37064 + C37705 * C36996 +
           (C36999 * C37482 + C93582 * C37483) * C37065 +
           (C36999 * C37561 + C93582 * C37681) * C36997) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C37062 +
           (C36999 * C189 + C93582 * C362) * C36994 + C37699 * C37063 +
           C37700 * C36995 + C37701 * C37064 + C37702 * C36996 +
           C37703 * C37065 + C37704 * C36997) *
              C93673 * C1382 -
          ((C36999 * C8741 + C93582 * C8965) * C36997 +
           (C36999 * C8615 + C93582 * C8617) * C37065 +
           (C36999 * C5922 + C93582 * C6094) * C36996 +
           (C36999 * C5818 + C93582 * C5824) * C37064 +
           (C36999 * C3491 + C93582 * C3639) * C36995 +
           (C36999 * C3409 + C93582 * C3413) * C37063 +
           (C36999 * C1470 + C93582 * C1602) * C36994 +
           (C36999 * C1388 + C93582 * C1396) * C37062) *
              C93673 * C1383 +
          ((C36999 * C1389 + C93582 * C1397) * C37062 +
           (C36999 * C1471 + C93582 * C1603) * C36994 +
           (C36999 * C5819 + C93582 * C5825) * C37063 +
           (C36999 * C5923 + C93582 * C6095) * C36995 +
           (C36999 * C5821 + C93582 * C5827) * C37064 +
           (C36999 * C5924 + C93582 * C6097) * C36996 +
           (C36999 * C38050 + C93582 * C38051) * C37065 +
           (C36999 * C38111 + C93582 * C38215) * C36997) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C36999 * C108 + C93582 * C114) * C31928 +
                                (C36999 * C189 + C93582 * C362) * C31828 +
                                C37699 * C31929 + C37700 * C93711) *
                                   C9601 +
                               ((C36999 * C1388 + C93582 * C1396) * C31928 +
                                (C36999 * C1470 + C93582 * C1602) * C31828 +
                                C40059 * C31929 + C40058 * C93711) *
                                   C9602 +
                               ((C36999 * C1389 + C93582 * C1397) * C31928 +
                                (C36999 * C1471 + C93582 * C1603) * C31828 +
                                (C36999 * C5819 + C93582 * C5825) * C31929 +
                                (C36999 * C5923 + C93582 * C6095) * C93711) *
                                   C9603) *
                                  C93635 * C93621 * C97 -
                              (((C36999 * C5925 + C93582 * C6096) * C93711 +
                                (C36999 * C5820 + C93582 * C5826) * C31929 +
                                (C36999 * C1472 + C93582 * C1604) * C31828 +
                                (C36999 * C1390 + C93582 * C1398) * C31928) *
                                   C9603 +
                               ((C36999 * C3492 + C93582 * C3640) * C93711 +
                                (C36999 * C3410 + C93582 * C3414) * C31929 +
                                (C36999 * C1469 + C93582 * C1601) * C31828 +
                                (C36999 * C1387 + C93582 * C1395) * C31928) *
                                   C9602 +
                               (C38783 * C93711 + C38782 * C31929 +
                                (C36999 * C190 + C93582 * C363) * C31828 +
                                (C36999 * C109 + C93582 * C115) * C31928) *
                                   C9601) *
                                  C93635 * C93621 * C98 +
                              (((C36999 * C110 + C93582 * C116) * C31928 +
                                (C36999 * C191 + C93582 * C364) * C31828 +
                                (C36999 * C805 + C93582 * C813) * C31929 +
                                (C36999 * C887 + C93582 * C1019) * C93711) *
                                   C9601 +
                               ((C36999 * C1386 + C93582 * C1394) * C31928 +
                                (C36999 * C1468 + C93582 * C1600) * C31828 +
                                (C36999 * C3411 + C93582 * C3415) * C31929 +
                                (C36999 * C3493 + C93582 * C3641) * C93711) *
                                   C9602 +
                               ((C36999 * C1391 + C93582 * C1399) * C31928 +
                                (C36999 * C1473 + C93582 * C1605) * C31828 +
                                (C36999 * C12033 + C93582 * C12034) * C31929 +
                                (C36999 * C12136 + C93582 * C12366) * C93711) *
                                   C9603) *
                                  C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C31928 +
            (C36999 * C189 + C93582 * C362) * C31828 + C37699 * C31929 +
            C37700 * C93711) *
               C9601 +
           ((C36999 * C1388 + C93582 * C1396) * C31928 +
            (C36999 * C1470 + C93582 * C1602) * C31828 + C40059 * C31929 +
            C40058 * C93711) *
               C9602 +
           ((C36999 * C1389 + C93582 * C1397) * C31928 +
            (C36999 * C1471 + C93582 * C1603) * C31828 + C41451 * C31929 +
            C41452 * C93711) *
               C9603) *
              C93635 * C800 -
          ((C41453 * C93711 + C41454 * C31929 + C41452 * C31828 +
            C41451 * C31928) *
               C9603 +
           (C40056 * C93711 + C40057 * C31929 + C40058 * C31828 +
            C40059 * C31928) *
               C9602 +
           (C37702 * C93711 + C37701 * C31929 + C37700 * C31828 +
            C37699 * C31928) *
               C9601) *
              C93635 * C801 +
          ((C37701 * C31928 + C37702 * C31828 + C37703 * C31929 +
            C37704 * C93711) *
               C9601 +
           (C40057 * C31928 + C40056 * C31828 + C40055 * C31929 +
            C40054 * C93711) *
               C9602 +
           (C41454 * C31928 + C41453 * C31828 +
            (C36999 * C38050 + C93582 * C38051) * C31929 +
            (C36999 * C38111 + C93582 * C38215) * C93711) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C31928 +
            (C36999 * C189 + C93582 * C362) * C31828 + C37699 * C31929 +
            C37700 * C93711) *
               C9601 +
           (C42297 + C42298 + C42273 + C42274) * C9602 + C42307 * C9603) *
              C1382 -
          ((C42301 + C42302 + C42303 + C42304) * C9603 +
           (C42280 + C42279 + C42300 + C42299) * C9602 +
           (C42274 + C42273 + C42298 + C42297) * C9601) *
              C1383 +
          (C42307 * C9601 + (C42304 + C42303 + C42302 + C42301) * C9602 +
           ((C36999 * C11104 + C93582 * C11108) * C31928 +
            (C36999 * C11225 + C93582 * C11428) * C31828 +
            (C36999 * C41973 + C93582 * C41974) * C31929 +
            (C36999 * C42074 + C93582 * C42267) * C93711) *
               C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C32190 * C108 + C32193 + C32193 + C31828 * C419 +
                C32191 * C807 + C32194 + C32194 + C93711 * C1079) *
                   C31825 +
               (C32227 + C32228) * C31826 + C32233 * C31827) *
                  C93673 * C93635 * C93621 * C97 -
              ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
               (C32228 + C32227) * C31825) *
                  C93673 * C93635 * C93621 * C98 +
              (C32233 * C31825 + (C32232 + C32231) * C31826 +
               (C32190 * C112 + C32213 + C32213 + C31828 * C423 +
                C32191 * C1983 + C32214 + C32214 + C93711 * C2295) *
                   C31827) *
                  C93673 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C32190 * C108 + C32193 + C32193 + C31828 * C419 +
                C32191 * C807 + C32194 + C32194 + C93711 * C1079) *
                   C31825 +
               (C32227 + C32228) * C31826 + C32233 * C31827) *
                  C93673 * C93635 * C800 -
              ((C32191 * C810 + C33028 + C33028 + C93711 * C1082 +
                C32190 * C805 + C33029 + C33029 + C31828 * C1077) *
                   C31827 +
               (C32191 * C809 + C33030 + C33030 + C93711 * C1081 +
                C32190 * C806 + C33031 + C33031 + C31828 * C1078) *
                   C31826 +
               (C32191 * C808 + C33032 + C33032 + C93711 * C1080 +
                C32190 * C807 + C33033 + C33033 + C31828 * C1079) *
                   C31825) *
                  C93673 * C93635 * C801 +
              ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 +
                C32191 * C4917 + C33035 + C33035 + C93711 * C5358) *
                   C31825 +
               (C32190 * C809 + C33036 + C33036 + C31828 * C1081 +
                C32191 * C4916 + C33037 + C33037 + C93711 * C5357) *
                   C31826 +
               (C32190 * C810 + C33038 + C33038 + C31828 * C1082 +
                C32191 * C6615 + C33039 + C33039 + C93711 * C7087) *
                   C31827) *
                  C93673 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C1382 -
          ((C32191 * C3411 + C33736 + C33736 + C93711 * C3711 + C32190 * C1386 +
            C33737 + C33737 + C31828 * C1658) *
               C31827 +
           (C32191 * C3410 + C33738 + C33738 + C93711 * C3710 + C32190 * C1387 +
            C33739 + C33739 + C31828 * C1659) *
               C31826 +
           (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 + C32190 * C1388 +
            C33741 + C33741 + C31828 * C1660) *
               C31825) *
              C93673 * C1383 +
          ((C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C31825 +
           (C32190 * C1390 + C33744 + C33744 + C31828 * C1662 + C32191 * C5820 +
            C33745 + C33745 + C93711 * C6177) *
               C31826 +
           (C32190 * C1391 + C33746 + C33746 + C31828 * C1663 +
            C32191 * C12033 + C33747 + C33747 + C93711 * C12465) *
               C31827) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C93621 * C97 -
          (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
           C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
           C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
              C93582 * C93673 * C93635 * C93621 * C98 +
          (C37216 * C110 + C37229 + C37229 + C36994 * C421 + C37217 * C805 +
           C37230 + C37230 + C36995 * C1077 + C37218 * C810 + C37231 + C37231 +
           C36996 * C1082 + C37219 * C6615 + C37232 + C37232 + C36997 * C7087) *
              C93582 * C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C800 -
          (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
           C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
           C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
              C93582 * C93673 * C93635 * C801 +
          (C37216 * C808 + C37762 + C37762 + C36994 * C1080 + C37217 * C4917 +
           C37763 + C37763 + C36995 * C5358 + C37218 * C4918 + C37764 + C37764 +
           C36996 * C5359 + C37219 * C37482 + C37765 + C37765 +
           C36997 * C37756) *
              C93582 * C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C1382 -
          (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
           C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 + C38270 +
           C36995 * C3709 + C37216 * C1388 + C38271 + C38271 + C36994 * C1660) *
              C93582 * C93673 * C1383 +
          (C37216 * C1389 + C38272 + C38272 + C36994 * C1661 + C37217 * C5819 +
           C38273 + C38273 + C36995 * C6175 + C37218 * C5821 + C38274 + C38274 +
           C36996 * C6176 + C37219 * C38050 + C38275 + C38275 +
           C36997 * C38266) *
              C93582 * C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C93582 * C9601 +
           (C32190 * C1388 + C33741 + C33741 + C31828 * C1660 + C32191 * C3409 +
            C33740 + C33740 + C93711 * C3709) *
               C93582 * C9602 +
           (C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C93582 * C9603) *
              C93635 * C93621 * C97 -
          ((C32191 * C5820 + C33745 + C33745 + C93711 * C6177 + C32190 * C1390 +
            C33744 + C33744 + C31828 * C1662) *
               C93582 * C9603 +
           (C35587 + C35588) * C93582 * C9602 +
           (C32228 + C32227) * C93582 * C9601) *
              C93635 * C93621 * C98 +
          (C32233 * C93582 * C9601 + (C35586 + C35585) * C93582 * C9602 +
           (C32190 * C1391 + C33746 + C33746 + C31828 * C1663 +
            C32191 * C12033 + C33747 + C33747 + C93711 * C12465) *
               C93582 * C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C93582 * C9601 +
           (C32190 * C1388 + C33741 + C33741 + C31828 * C1660 + C32191 * C3409 +
            C33740 + C33740 + C93711 * C3709) *
               C93582 * C9602 +
           (C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C93582 * C9603) *
              C93635 * C800 -
          ((C32191 * C5821 + C41529 + C41529 + C93711 * C6176 + C32190 * C5819 +
            C41530 + C41530 + C31828 * C6175) *
               C93582 * C9603 +
           (C32191 * C5818 + C36538 + C36538 + C93711 * C6174 + C32190 * C3409 +
            C36537 + C36537 + C31828 * C3709) *
               C93582 * C9602 +
           (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
            C33033 + C33033 + C31828 * C1079) *
               C93582 * C9601) *
              C93635 * C801 +
          ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
            C33035 + C33035 + C93711 * C5358) *
               C93582 * C9601 +
           (C32190 * C5818 + C41531 + C41531 + C31828 * C6174 + C32191 * C8615 +
            C41532 + C41532 + C93711 * C9089) *
               C93582 * C9602 +
           (C32190 * C5821 + C41533 + C41533 + C31828 * C6176 +
            C32191 * C38050 + C41534 + C41534 + C93711 * C38266) *
               C93582 * C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C93582 * C9601 +
           (C42411 + C42412) * C93582 * C9602 + C42418 * C9603) *
              C1382 -
          ((C42415 + C42416) * C93582 * C9603 +
           (C42414 + C42413) * C93582 * C9602 +
           (C42412 + C42411) * C93582 * C9601) *
              C1383 +
          (C42418 * C9601 + (C42416 + C42415) * C93582 * C9602 +
           (C32190 * C11104 + C42397 + C42397 + C31828 * C11547 +
            C32191 * C41973 + C42398 + C42398 + C93711 * C42381) *
               C93582 * C9603) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C275 * C108 + C93673 * C276) * C31928 +
                (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
                C5460 * C93711) *
                   C31825 +
               (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
                  C93635 * C93621 * C97 -
              ((C32316 + C32317 + C32318 + C32319) * C31827 +
               (C32315 + C32314 + C32313 + C32312) * C31826 +
               (C32311 + C32310 + C32309 + C32308) * C31825) *
                  C93635 * C93621 * C98 +
              (C32322 * C31825 + (C32319 + C32318 + C32317 + C32316) * C31826 +
               (C312 * C31928 + C523 * C31828 +
                (C275 * C1983 + C93673 * C2142) * C31929 +
                (C275 * C2056 + C93673 * C2378) * C93711) *
                   C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C275 * C108 + C93673 * C276) * C31928 +
                (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
                C5460 * C93711) *
                   C31825 +
               (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
                  C93635 * C800 -
              ((C4584 * C93711 + C4301 * C31929 + C2390 * C31828 +
                C2160 * C31928) *
                   C31827 +
               (C4583 * C93711 + C4298 * C31929 + C2391 * C31828 +
                C2162 * C31928) *
                   C31826 +
               (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 +
                C5149 * C31928) *
                   C31825) *
                  C93635 * C801 +
              ((C5151 * C31928 + C5461 * C31828 + C5156 * C31929 +
                C5463 * C93711) *
                   C31825 +
               (C4298 * C31928 + C4583 * C31828 + C5154 * C31929 +
                C5462 * C93711) *
                   C31826 +
               (C4301 * C31928 + C4584 * C31828 +
                (C275 * C6615 + C93673 * C6856) * C31929 +
                (C275 * C6738 + C93673 * C7204) * C93711) *
                   C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C1382 -
          ((C18867 * C93711 + C18541 * C31929 + C3104 * C31828 +
            C2874 * C31928) *
               C31827 +
           (C8195 * C93711 + C7870 * C31929 + C3105 * C31828 + C2876 * C31928) *
               C31826 +
           (C9203 * C93711 + C8863 * C31929 +
            (C275 * C1470 + C93673 * C1726) * C31828 +
            (C275 * C1388 + C93673 * C1536) * C31928) *
               C31825) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C31928 +
            (C275 * C1471 + C93673 * C1727) * C31828 +
            (C275 * C5819 + C93673 * C6009) * C31929 +
            (C275 * C5923 + C93673 * C6267) * C93711) *
               C31825 +
           ((C275 * C1390 + C93673 * C1538) * C31928 +
            (C275 * C1472 + C93673 * C1728) * C31828 +
            (C275 * C5820 + C93673 * C6010) * C31929 +
            (C275 * C5925 + C93673 * C6269) * C93711) *
               C31826 +
           ((C275 * C1391 + C93673 * C1539) * C31928 +
            (C275 * C1473 + C93673 * C1729) * C31828 +
            (C275 * C12033 + C93673 * C12248) * C31929 +
            (C275 * C12136 + C93673 * C12575) * C93711) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
           C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
              C93582 * C93635 * C93621 * C98 +
          (C307 * C37062 + C521 * C36994 + C2160 * C37063 + C2390 * C36995 +
           C4301 * C37064 + C4584 * C36996 +
           (C275 * C6615 + C93673 * C6856) * C37065 +
           (C275 * C6738 + C93673 * C7204) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C800 -
          (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 + C5156 * C37064 +
           C5461 * C36995 + C5151 * C37063 + C5460 * C36994 + C5149 * C37062) *
              C93582 * C93635 * C801 +
          (C5151 * C37062 + C5461 * C36994 + C5156 * C37063 + C5463 * C36995 +
           C37629 * C37064 + C37819 * C36996 +
           (C275 * C37482 + C93673 * C37613) * C37065 +
           (C275 * C37561 + C93673 * C37815) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C1382 -
          ((C275 * C8741 + C93673 * C9195) * C36997 +
           (C275 * C8615 + C93673 * C8843) * C37065 + C9202 * C36996 +
           C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
           (C275 * C1470 + C93673 * C1726) * C36994 +
           (C275 * C1388 + C93673 * C1536) * C37062) *
              C93582 * C1383 +
          ((C275 * C1389 + C93673 * C1537) * C37062 +
           (C275 * C1471 + C93673 * C1727) * C36994 +
           (C275 * C5819 + C93673 * C6009) * C37063 +
           (C275 * C5923 + C93673 * C6267) * C36995 +
           (C275 * C5821 + C93673 * C6011) * C37064 +
           (C275 * C5924 + C93673 * C6268) * C36996 +
           (C275 * C38050 + C93673 * C38163) * C37065 +
           (C275 * C38111 + C93673 * C38325) * C36997) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C31928 +
           (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
            C9772 * C1471 + C9603 * C1727) *
               C31828 +
           (C9770 * C807 + C9601 * C955 + C9771 * C3409 + C9602 * C3565 +
            C9772 * C5819 + C9603 * C6009) *
               C31929 +
           (C9770 * C889 + C9601 * C1145 + C9771 * C3491 + C9602 * C3783 +
            C9772 * C5923 + C9603 * C6267) *
               C93711) *
              C93582 * C93635 * C93621 * C97 -
          ((C12583 + C12584 + C12585) * C93711 +
           (C12266 + C12267 + C12268) * C31929 +
           (C10056 + C10055 + C10054) * C31828 +
           (C9800 + C9799 + C9798) * C31928) *
              C93582 * C93635 * C93621 * C98 +
          ((C9809 + C9808 + C9807) * C31928 +
           (C10059 + C10058 + C10057) * C31828 +
           (C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
            C9772 * C12033 + C9603 * C12248) *
               C31929 +
           (C9770 * C887 + C9601 * C1143 + C9771 * C3493 + C9602 * C3785 +
            C9772 * C12136 + C9603 * C12575) *
               C93711) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C31928 +
           (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
            C9772 * C1471 + C9603 * C1727) *
               C31828 +
           (C41357 + C41358 + C41359) * C31929 +
           (C41621 + C41622 + C41623) * C93711) *
              C93582 * C93635 * C800 -
          ((C41624 + C41625 + C41626) * C93711 +
           (C41366 + C41367 + C41368) * C31929 +
           (C41623 + C41622 + C41621) * C31828 +
           (C41359 + C41358 + C41357) * C31928) *
              C93582 * C93635 * C801 +
          ((C41368 + C41367 + C41366) * C31928 +
           (C41626 + C41625 + C41624) * C31828 +
           (C9770 * C4917 + C9601 * C5121 + C9771 * C8615 + C9602 * C8843 +
            C9772 * C38050 + C9603 * C38163) *
               C31929 +
           (C9770 * C5039 + C9601 * C5448 + C9771 * C8741 + C9602 * C9195 +
            C9772 * C38111 + C9603 * C38325) *
               C93711) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C31928 +
           (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
            C9772 * C1471 + C9603 * C1727) *
               C31828 +
           (C41357 + C41358 + C41359) * C31929 +
           (C41621 + C41622 + C41623) * C93711) *
              C93582 * C1382 -
          ((C9772 * C14143 + C9603 * C14595 + C9771 * C5923 + C9602 * C6267 +
            C9770 * C3491 + C9601 * C3783) *
               C93711 +
           (C9772 * C14027 + C9603 * C14265 + C9771 * C5819 + C9602 * C6009 +
            C9770 * C3409 + C9601 * C3565) *
               C31929 +
           (C9772 * C11224 + C9603 * C11655 + C9771 * C1471 + C9602 * C1727 +
            C9770 * C1470 + C9601 * C1726) *
               C31828 +
           (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
            C9770 * C1388 + C9601 * C1536) *
               C31928) *
              C93582 * C1383 +
          ((C9770 * C1389 + C9601 * C1537 + C9771 * C11103 + C9602 * C11345 +
            C9772 * C11104 + C9603 * C11346) *
               C31928 +
           (C9770 * C1471 + C9601 * C1727 + C9771 * C11224 + C9602 * C11655 +
            C9772 * C11225 + C9603 * C11656) *
               C31828 +
           (C9770 * C5819 + C9601 * C6009 + C9771 * C14027 + C9602 * C14265 +
            C9772 * C41973 + C9603 * C42191) *
               C31929 +
           (C9770 * C5923 + C9601 * C6267 + C9771 * C14143 + C9602 * C14595 +
            C9772 * C42074 + C9603 * C42492) *
               C93711) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                 C31835 * C110 + C31827 * C116) *
                    C275 +
                (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
                 C31835 * C278 + C31827 * C581) *
                    C93673) *
                   C31828 +
               ((C31831 * C807 + C31825 * C815 + C31833 * C806 + C31826 * C814 +
                 C31835 * C805 + C31827 * C813) *
                    C275 +
                (C31831 * C955 + C31825 * C1203 + C31833 * C954 +
                 C31826 * C1202 + C31835 * C953 + C31827 * C1201) *
                    C93673) *
                   C93711) *
                  C93635 * C93621 * C97 -
              (((C31835 * C952 + C31827 * C1200 + C31833 * C953 +
                 C31826 * C1201 + C31831 * C954 + C31825 * C1202) *
                    C93673 +
                (C31835 * C804 + C31827 * C812 + C31833 * C805 + C31826 * C813 +
                 C31831 * C806 + C31825 * C814) *
                    C275) *
                   C93711 +
               ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
                 C31831 * C277 + C31825 * C580) *
                    C93673 +
                (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
                 C31831 * C109 + C31825 * C115) *
                    C275) *
                   C31828) *
                  C93635 * C93621 * C98 +
              (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
                 C31835 * C112 + C31827 * C118) *
                    C275 +
                (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
                 C31835 * C280 + C31827 * C583) *
                    C93673) *
                   C31828 +
               ((C31831 * C805 + C31825 * C813 + C31833 * C804 + C31826 * C812 +
                 C31835 * C1983 + C31827 * C1984) *
                    C275 +
                (C31831 * C953 + C31825 * C1201 + C31833 * C952 +
                 C31826 * C1200 + C31835 * C2142 + C31827 * C2460) *
                    C93673) *
                   C93711) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                 C31835 * C110 + C31827 * C116) *
                    C275 +
                (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
                 C31835 * C278 + C31827 * C581) *
                    C93673) *
                   C31828 +
               ((C32942 + C32943 + C32944) * C275 +
                (C33200 + C33201 + C33202) * C93673) *
                   C93711) *
                  C93635 * C800 -
              (((C33203 + C33204 + C33205) * C93673 +
                (C32951 + C32952 + C32953) * C275) *
                   C93711 +
               ((C33202 + C33201 + C33200) * C93673 +
                (C32944 + C32943 + C32942) * C275) *
                   C31828) *
                  C93635 * C801 +
              (((C32953 + C32952 + C32951) * C275 +
                (C33205 + C33204 + C33203) * C93673) *
                   C31828 +
               ((C31831 * C4917 + C31825 * C4921 + C31833 * C4916 +
                 C31826 * C4920 + C31835 * C6615 + C31827 * C6616) *
                    C275 +
                (C31831 * C5121 + C31825 * C5538 + C31833 * C5120 +
                 C31826 * C5537 + C31835 * C6856 + C31827 * C7309) *
                    C93673) *
                   C93711) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C32942 + C32943 + C32944) * C275 +
            (C33200 + C33201 + C33202) * C93673) *
               C93711) *
              C1382 -
          (((C31835 * C3567 + C31827 * C3855 + C31833 * C3566 + C31826 * C3854 +
             C31831 * C3565 + C31825 * C3853) *
                C93673 +
            (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 + C31826 * C3414 +
             C31831 * C3409 + C31825 * C3413) *
                C275) *
               C93711 +
           ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 + C31826 * C1783 +
             C31831 * C1536 + C31825 * C1784) *
                C93673 +
            (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 + C31826 * C1395 +
             C31831 * C1388 + C31825 * C1396) *
                C275) *
               C31828) *
              C1383 +
          (((C31831 * C1389 + C31825 * C1397 + C31833 * C1390 + C31826 * C1398 +
             C31835 * C1391 + C31827 * C1399) *
                C275 +
            (C31831 * C1537 + C31825 * C1785 + C31833 * C1538 + C31826 * C1786 +
             C31835 * C1539 + C31827 * C1787) *
                C93673) *
               C31828 +
           ((C31831 * C5819 + C31825 * C5825 + C31833 * C5820 + C31826 * C5826 +
             C31835 * C12033 + C31827 * C12034) *
                C275 +
            (C31831 * C6009 + C31825 * C6347 + C31833 * C6010 + C31826 * C6348 +
             C31835 * C12248 + C31827 * C12683) *
                C93673) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           ((C36999 * C807 + C93582 * C815) * C275 +
            (C36999 * C955 + C93582 * C1203) * C93673) *
               C36995 +
           ((C36999 * C808 + C93582 * C816) * C275 +
            (C36999 * C956 + C93582 * C1204) * C93673) *
               C36996 +
           ((C36999 * C4917 + C93582 * C4921) * C275 +
            (C36999 * C5121 + C93582 * C5538) * C93673) *
               C36997) *
              C93635 * C93621 * C97 -
          (((C36999 * C5120 + C93582 * C5537) * C93673 +
            (C36999 * C4916 + C93582 * C4920) * C275) *
               C36997 +
           ((C36999 * C957 + C93582 * C1205) * C93673 +
            (C36999 * C809 + C93582 * C817) * C275) *
               C36996 +
           ((C36999 * C954 + C93582 * C1202) * C93673 +
            (C36999 * C806 + C93582 * C814) * C275) *
               C36995 +
           ((C36999 * C277 + C93582 * C580) * C93673 +
            (C36999 * C109 + C93582 * C115) * C275) *
               C36994) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C275 +
            (C36999 * C278 + C93582 * C581) * C93673) *
               C36994 +
           ((C36999 * C805 + C93582 * C813) * C275 +
            (C36999 * C953 + C93582 * C1201) * C93673) *
               C36995 +
           ((C36999 * C810 + C93582 * C818) * C275 +
            (C36999 * C958 + C93582 * C1206) * C93673) *
               C36996 +
           ((C36999 * C6615 + C93582 * C6616) * C275 +
            (C36999 * C6856 + C93582 * C7309) * C93673) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C93635 * C800 -
          ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
           (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
              C93635 * C801 +
          (C37891 * C36994 + C37892 * C36995 + (C37882 + C37890) * C36996 +
           ((C36999 * C37482 + C93582 * C37483) * C275 +
            (C36999 * C37613 + C93582 * C37869) * C93673) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C1382 -
          (((C36999 * C8843 + C93582 * C9301) * C93673 +
            (C36999 * C8615 + C93582 * C8617) * C275) *
               C36997 +
           ((C36999 * C6008 + C93582 * C6346) * C93673 +
            (C36999 * C5818 + C93582 * C5824) * C275) *
               C36996 +
           ((C36999 * C3565 + C93582 * C3853) * C93673 +
            (C36999 * C3409 + C93582 * C3413) * C275) *
               C36995 +
           ((C36999 * C1536 + C93582 * C1784) * C93673 +
            (C36999 * C1388 + C93582 * C1396) * C275) *
               C36994) *
              C1383 +
          (((C36999 * C1389 + C93582 * C1397) * C275 +
            (C36999 * C1537 + C93582 * C1785) * C93673) *
               C36994 +
           ((C36999 * C5819 + C93582 * C5825) * C275 +
            (C36999 * C6009 + C93582 * C6347) * C93673) *
               C36995 +
           ((C36999 * C5821 + C93582 * C5827) * C275 +
            (C36999 * C6011 + C93582 * C6349) * C93673) *
               C36996 +
           ((C36999 * C38050 + C93582 * C38051) * C275 +
            (C36999 * C38163 + C93582 * C38376) * C93673) *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C9770 +
            (C36999 * C276 + C93582 * C579) * C9601 +
            (C36999 * C1388 + C93582 * C1396) * C9771 +
            (C36999 * C1536 + C93582 * C1784) * C9602 +
            (C36999 * C1389 + C93582 * C1397) * C9772 +
            (C36999 * C1537 + C93582 * C1785) * C9603) *
               C31828 +
           (C37699 * C9770 + C37883 * C9601 + C40059 * C9771 + C40279 * C9602 +
            (C36999 * C5819 + C93582 * C5825) * C9772 +
            (C36999 * C6009 + C93582 * C6347) * C9603) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C36999 * C6010 + C93582 * C6348) * C9603 +
            (C36999 * C5820 + C93582 * C5826) * C9772 +
            (C36999 * C3566 + C93582 * C3854) * C9602 +
            (C36999 * C3410 + C93582 * C3414) * C9771 + C38999 * C9601 +
            C38782 * C9770) *
               C93711 +
           ((C36999 * C1538 + C93582 * C1786) * C9603 +
            (C36999 * C1390 + C93582 * C1398) * C9772 +
            (C36999 * C1535 + C93582 * C1783) * C9602 +
            (C36999 * C1387 + C93582 * C1395) * C9771 +
            (C36999 * C277 + C93582 * C580) * C9601 +
            (C36999 * C109 + C93582 * C115) * C9770) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C9770 +
            (C36999 * C278 + C93582 * C581) * C9601 +
            (C36999 * C1386 + C93582 * C1394) * C9771 +
            (C36999 * C1534 + C93582 * C1782) * C9602 +
            (C36999 * C1391 + C93582 * C1399) * C9772 +
            (C36999 * C1539 + C93582 * C1787) * C9603) *
               C31828 +
           ((C36999 * C805 + C93582 * C813) * C9770 +
            (C36999 * C953 + C93582 * C1201) * C9601 +
            (C36999 * C3411 + C93582 * C3415) * C9771 +
            (C36999 * C3567 + C93582 * C3855) * C9602 +
            (C36999 * C12033 + C93582 * C12034) * C9772 +
            (C36999 * C12248 + C93582 * C12683) * C9603) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C9770 +
            (C36999 * C276 + C93582 * C579) * C9601 +
            (C36999 * C1388 + C93582 * C1396) * C9771 +
            (C36999 * C1536 + C93582 * C1784) * C9602 +
            (C36999 * C1389 + C93582 * C1397) * C9772 +
            (C36999 * C1537 + C93582 * C1785) * C9603) *
               C31828 +
           (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
              C93635 * C800 -
          ((C41718 + C41710 + C41711 + C41712 + C41713 + C41714) * C93711 +
           (C41717 + C41705 + C41704 + C41703 + C41702 + C41701) * C31828) *
              C93635 * C801 +
          ((C41714 + C41713 + C41712 + C41711 + C41710 + C41718) * C31828 +
           (C37703 * C9770 + C37885 * C9601 + C40055 * C9771 + C40277 * C9602 +
            (C36999 * C38050 + C93582 * C38051) * C9772 +
            (C36999 * C38163 + C93582 * C38376) * C9603) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C9770 +
            (C36999 * C276 + C93582 * C579) * C9601 + C42289 * C9771 +
            C42577 * C9602 + C42291 * C9772 + C42578 * C9603) *
               C31828 +
           (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
              C1382 -
          ((C42579 * C9603 + C42294 * C9772 + C41715 * C9602 + C41451 * C9771 +
            C40279 * C9601 + C40059 * C9770) *
               C93711 +
           (C42580 * C9603 + C42296 * C9772 + C42578 * C9602 + C42291 * C9771 +
            C42577 * C9601 + C42289 * C9770) *
               C31828) *
              C1383 +
          ((C42291 * C9770 + C42578 * C9601 + C42296 * C9771 + C42580 * C9602 +
            (C36999 * C11104 + C93582 * C11108) * C9772 +
            (C36999 * C11346 + C93582 * C11734) * C9603) *
               C31828 +
           (C41451 * C9770 + C41715 * C9601 + C42294 * C9771 + C42579 * C9602 +
            (C36999 * C41973 + C93582 * C41974) * C9772 +
            (C36999 * C42191 + C93582 * C42567) * C9603) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31928 * C108 + C31828 * C189 + C31929 * C807 +
                 C93711 * C889) *
                    C275 +
                (C31928 * C276 + C31828 * C635 + C31929 * C955 +
                 C93711 * C1261) *
                    C93673) *
                   C31825 +
               ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) *
                   C31826 +
               C32492 * C31827) *
                  C93635 * C93621 * C97 -
              (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) *
                   C31827 +
               ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) *
                   C31826 +
               ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) *
                   C31825) *
                  C93635 * C93621 * C98 +
              (C32492 * C31825 +
               ((C31966 + C31965) * C275 + (C32489 + C32488) * C93673) *
                   C31826 +
               ((C31928 * C112 + C31828 * C193 + C31929 * C1983 +
                 C93711 * C2056) *
                    C275 +
                (C31928 * C280 + C31828 * C639 + C31929 * C2142 +
                 C93711 * C2527) *
                    C93673) *
                   C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31928 * C108 + C31828 * C189 + C31929 * C807 +
                 C93711 * C889) *
                    C275 +
                (C31928 * C276 + C31828 * C635 + C31929 * C955 +
                 C93711 * C1261) *
                    C93673) *
                   C31825 +
               ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) *
                   C31826 +
               C32492 * C31827) *
                  C93635 * C800 -
              (((C31929 * C958 + C93711 * C1264 + C31928 * C953 +
                 C31828 * C1259) *
                    C93673 +
                (C31929 * C810 + C93711 * C892 + C31928 * C805 +
                 C31828 * C887) *
                    C275) *
                   C31827 +
               ((C31929 * C957 + C93711 * C1263 + C31928 * C954 +
                 C31828 * C1260) *
                    C93673 +
                (C31929 * C809 + C93711 * C891 + C31928 * C806 +
                 C31828 * C888) *
                    C275) *
                   C31826 +
               ((C31929 * C956 + C93711 * C1262 + C31928 * C955 +
                 C31828 * C1261) *
                    C93673 +
                (C31929 * C808 + C93711 * C890 + C31928 * C807 +
                 C31828 * C889) *
                    C275) *
                   C31825) *
                  C93635 * C801 +
              (((C31928 * C808 + C31828 * C890 + C31929 * C4917 +
                 C93711 * C5039) *
                    C275 +
                (C31928 * C956 + C31828 * C1262 + C31929 * C5121 +
                 C93711 * C5638) *
                    C93673) *
                   C31825 +
               ((C31928 * C809 + C31828 * C891 + C31929 * C4916 +
                 C93711 * C5038) *
                    C275 +
                (C31928 * C957 + C31828 * C1263 + C31929 * C5120 +
                 C93711 * C5637) *
                    C93673) *
                   C31826 +
               ((C31928 * C810 + C31828 * C892 + C31929 * C6615 +
                 C93711 * C6738) *
                    C275 +
                (C31928 * C958 + C31828 * C1264 + C31929 * C6856 +
                 C93711 * C7420) *
                    C93673) *
                   C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C1382 -
          (((C31929 * C3567 + C93711 * C3925 + C31928 * C1534 +
             C31828 * C1840) *
                C93673 +
            (C31929 * C3411 + C93711 * C3493 + C31928 * C1386 +
             C31828 * C1468) *
                C275) *
               C31827 +
           ((C31929 * C3566 + C93711 * C3924 + C31928 * C1535 +
             C31828 * C1841) *
                C93673 +
            (C31929 * C3410 + C93711 * C3492 + C31928 * C1387 +
             C31828 * C1469) *
                C275) *
               C31826 +
           ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
             C31828 * C1842) *
                C93673 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C275) *
               C31825) *
              C1383 +
          (((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C275 +
            (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 +
             C93711 * C6427) *
                C93673) *
               C31825 +
           ((C31928 * C1390 + C31828 * C1472 + C31929 * C5820 +
             C93711 * C5925) *
                C275 +
            (C31928 * C1538 + C31828 * C1844 + C31929 * C6010 +
             C93711 * C6429) *
                C93673) *
               C31826 +
           ((C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
             C93711 * C12136) *
                C275 +
            (C31928 * C1539 + C31828 * C1845 + C31929 * C12248 +
             C93711 * C12782) *
                C93673) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C93621 * C97 -
          ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
            C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
               C93673 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C275) *
              C93582 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C275 +
           (C37062 * C278 + C36994 * C637 + C37063 * C953 + C36995 * C1259 +
            C37064 * C958 + C36996 * C1264 + C37065 * C6856 + C36997 * C7420) *
               C93673) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C800 -
          ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
            C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
               C93673 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C275) *
              C93582 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C275 +
           (C37062 * C956 + C36994 * C1262 + C37063 * C5121 + C36995 * C5638 +
            C37064 * C5122 + C36996 * C5639 + C37065 * C37613 +
            C36997 * C37942) *
               C93673) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C1382 -
          ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
            C37063 * C3565 + C36995 * C3923 + C37062 * C1536 + C36994 * C1842) *
               C93673 +
           (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
            C37063 * C3409 + C36995 * C3491 + C37062 * C1388 + C36994 * C1470) *
               C275) *
              C93582 * C1383 +
          ((C37062 * C1389 + C36994 * C1471 + C37063 * C5819 + C36995 * C5923 +
            C37064 * C5821 + C36996 * C5924 + C37065 * C38050 +
            C36997 * C38111) *
               C275 +
           (C37062 * C1537 + C36994 * C1843 + C37063 * C6009 + C36995 * C6427 +
            C37064 * C6011 + C36996 * C6428 + C37065 * C38163 +
            C36997 * C38427) *
               C93673) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C9770 +
           (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
               C9601 +
           (C31928 * C1388 + C31828 * C1470 + C31929 * C3409 + C93711 * C3491) *
               C9771 +
           (C31928 * C1536 + C31828 * C1842 + C31929 * C3565 + C93711 * C3923) *
               C9602 +
           (C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C9772 +
           (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 + C93711 * C6427) *
               C9603) *
              C93582 * C93635 * C93621 * C97 -
          ((C31929 * C6010 + C93711 * C6429 + C31928 * C1538 + C31828 * C1844) *
               C9603 +
           (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 + C31828 * C1472) *
               C9772 +
           (C35901 + C35902) * C9602 + (C35271 + C35272) * C9771 +
           (C32485 + C32484) * C9601 + (C31956 + C31955) * C9770) *
              C93582 * C93635 * C93621 * C98 +
          (C31967 * C9770 + C32490 * C9601 + (C35268 + C35267) * C9771 +
           (C35900 + C35899) * C9602 +
           (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
            C93711 * C12136) *
               C9772 +
           (C31928 * C1539 + C31828 * C1845 + C31929 * C12248 +
            C93711 * C12782) *
               C9603) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C9770 +
           (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
               C9601 +
           (C31928 * C1388 + C31828 * C1470 + C31929 * C3409 + C93711 * C3491) *
               C9771 +
           (C31928 * C1536 + C31828 * C1842 + C31929 * C3565 + C93711 * C3923) *
               C9602 +
           (C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C9772 +
           (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 + C93711 * C6427) *
               C9603) *
              C93582 * C93635 * C800 -
          ((C31929 * C6011 + C93711 * C6428 + C31928 * C6009 + C31828 * C6427) *
               C9603 +
           (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 + C31828 * C5923) *
               C9772 +
           (C31929 * C6008 + C93711 * C6426 + C31928 * C3565 + C31828 * C3923) *
               C9602 +
           (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 + C31828 * C3491) *
               C9771 +
           (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
               C9601 +
           (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
               C9770) *
              C93582 * C93635 * C801 +
          ((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
               C9770 +
           (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
               C9601 +
           (C31928 * C5818 + C31828 * C5922 + C31929 * C8615 + C93711 * C8741) *
               C9771 +
           (C31928 * C6008 + C31828 * C6426 + C31929 * C8843 + C93711 * C9413) *
               C9602 +
           (C31928 * C5821 + C31828 * C5924 + C31929 * C38050 +
            C93711 * C38111) *
               C9772 +
           (C31928 * C6011 + C31828 * C6428 + C31929 * C38163 +
            C93711 * C38427) *
               C9603) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C9770 +
           (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
               C9601 +
           (C42101 + C42102) * C9771 + (C42668 + C42669) * C9602 +
           C42113 * C9772 + C42674 * C9603) *
              C93582 * C1382 -
          ((C42672 + C42673) * C9603 + (C42111 + C42112) * C9772 +
           (C42671 + C42670) * C9602 + (C42106 + C42105) * C9771 +
           (C42669 + C42668) * C9601 + (C42102 + C42101) * C9770) *
              C93582 * C1383 +
          (C42113 * C9770 + C42674 * C9601 + (C42112 + C42111) * C9771 +
           (C42673 + C42672) * C9602 +
           (C31928 * C11104 + C31828 * C11225 + C31929 * C41973 +
            C93711 * C42074) *
               C9772 +
           (C31928 * C11346 + C31828 * C11831 + C31929 * C42191 +
            C93711 * C42654) *
               C9603) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
                C5740 * C93711) *
                   C31825 +
               (C32567 + C32568) * C31826 + C32573 * C31827) *
                  C93635 * C93621 * C97 -
              ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
               (C32568 + C32567) * C31825) *
                  C93635 * C93621 * C98 +
              (C32573 * C31825 + (C32572 + C32571) * C31826 +
               (C746 * C31828 +
                (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
                   C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
                C5740 * C93711) *
                   C31825 +
               (C32567 + C32568) * C31826 + C32573 * C31827) *
                  C93635 * C800 -
              ((C4840 * C93711 + C2625 * C31828) * C31827 +
               (C4839 * C93711 + C2626 * C31828) * C31826 +
               (C5741 * C93711 + C5740 * C31828) * C31825) *
                  C93635 * C801 +
              ((C5741 * C31828 + C5743 * C93711) * C31825 +
               (C4839 * C31828 + C5742 * C93711) * C31826 +
               (C4840 * C31828 +
                (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
                   C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C1382 -
          ((C19182 * C93711 + C3339 * C31828) * C31827 +
           (C8515 * C93711 + C3340 * C31828) * C31826 +
           (C9527 * C93711 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
               C31825) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C31828 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C93711) *
               C31825 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C31828 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C93711) *
               C31826 +
           ((C713 * C1391 + C1912 + C1912 + C93673 * C1903) * C31828 +
            (C713 * C12033 + C17208 + C17208 + C93673 * C12893) * C93711) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
              C93582 * C93635 * C93621 * C98 +
          (C744 * C36994 + C2625 * C36995 + C4840 * C36996 +
           (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C800 -
          (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 + C5740 * C36994) *
              C93582 * C93635 * C801 +
          (C5741 * C36994 + C5743 * C36995 + C38000 * C36996 +
           (C713 * C37482 + C37997 + C37997 + C93673 * C37993) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C1382 -
          ((C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C36997 +
           C9526 * C36996 + C9527 * C36995 +
           (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
              C93582 * C1383 +
          ((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C36994 +
           (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C36995 +
           (C713 * C5821 + C6515 + C6515 + C93673 * C6508) * C36996 +
           (C713 * C38050 + C38480 + C38480 + C93673 * C38478) * C36997) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C31828 +
           (C10299 * C807 + C11022 + C11022 + C9601 * C1319 + C10300 * C3409 +
            C11021 + C11021 + C9602 * C3993 + C10301 * C5819 + C11020 + C11020 +
            C9603 * C6507) *
               C93711) *
              C93582 * C93635 * C93621 * C97 -
          ((C12910 + C12911 + C12912) * C93711 +
           (C10341 + C10340 + C10339) * C31828) *
              C93582 * C93635 * C93621 * C98 +
          ((C10344 + C10343 + C10342) * C31828 +
           (C10299 * C805 + C12901 + C12901 + C9601 * C1317 + C10300 * C3411 +
            C12902 + C12902 + C9602 * C3995 + C10301 * C12033 + C12903 +
            C12903 + C9603 * C12893) *
               C93711) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C31828 +
           (C41894 + C41895 + C41896) * C93711) *
              C93582 * C93635 * C800 -
          ((C41897 + C41898 + C41899) * C93711 +
           (C41896 + C41895 + C41894) * C31828) *
              C93582 * C93635 * C801 +
          ((C41899 + C41898 + C41897) * C31828 +
           (C10299 * C4917 + C41879 + C41879 + C9601 * C5716 + C10300 * C8615 +
            C41880 + C41880 + C9602 * C9513 + C10301 * C38050 + C41881 +
            C41881 + C9603 * C38478) *
               C93711) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C31828 +
           (C41894 + C41895 + C41896) * C93711) *
              C93582 * C1382 -
          ((C10301 * C14027 + C14912 + C14912 + C9603 * C14907 +
            C10300 * C5819 + C14911 + C14911 + C9602 * C6507 + C10299 * C3409 +
            C14910 + C14910 + C9601 * C3993) *
               C93711 +
           (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
            C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
            C11929 + C11929 + C9601 * C1900) *
               C31828) *
              C93582 * C1383 +
          ((C10299 * C1389 + C11930 + C11930 + C9601 * C1901 + C10300 * C11103 +
            C11931 + C11931 + C9602 * C11920 + C10301 * C11104 + C11932 +
            C11932 + C9603 * C11921) *
               C31828 +
           (C10299 * C5819 + C42750 + C42750 + C9601 * C6507 + C10300 * C14027 +
            C42751 + C42751 + C9602 * C14907 + C10301 * C41973 + C42752 +
            C42752 + C9603 * C42748) *
               C93711) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 *
                C36994 +
            C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
               C2695 -
           ((C36998 * C8615 + C38054 + C38054 + C93582 * C8619) * C93673 *
                C36997 +
            (C36998 * C5818 + C38055 + C38055 + C93582 * C5830) * C93673 *
                C36996 +
            (C36998 * C3409 + C38056 + C38056 + C93582 * C3417) * C93673 *
                C36995 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C93673 *
                C36994) *
               C2696) *
              C93621 * C1981 +
          (((C36998 * C1387 + C39203 + C39203 + C93582 * C1403) * C93673 *
                C36994 +
            (C36998 * C3410 + C39204 + C39204 + C93582 * C3418) * C93673 *
                C36995 +
            (C36998 * C5817 + C39205 + C39205 + C93582 * C5829) * C93673 *
                C36996 +
            (C36998 * C8616 + C39206 + C39206 + C93582 * C8620) * C93673 *
                C36997) *
               C2696 -
           (C38565 * C36997 + C38564 * C36996 + C38563 * C36995 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
                C36994) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C93673 * C31828 +
            (C32678 + C32679 + C32680) * C93673 * C93711) *
               C2695 -
           ((C31834 * C3411 + C33428 + C33428 + C31827 * C3419 +
             C31832 * C3410 + C33429 + C33429 + C31826 * C3418 +
             C31830 * C3409 + C33430 + C33430 + C31825 * C3417) *
                C93673 * C93711 +
            (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 +
             C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
             C31830 * C1388 + C33433 + C33433 + C31825 * C1404) *
                C93673 * C31828) *
               C2696) *
              C93621 * C1981 +
          (((C31830 * C1387 + C35145 + C35145 + C31825 * C1403 +
             C31832 * C1386 + C35146 + C35146 + C31826 * C1402 +
             C31834 * C1385 + C35147 + C35147 + C31827 * C1401) *
                C93673 * C31828 +
            (C31830 * C3410 + C35148 + C35148 + C31825 * C3418 +
             C31832 * C3411 + C35149 + C35149 + C31826 * C3419 +
             C31834 * C3412 + C35150 + C35150 + C31827 * C3420) *
                C93673 * C93711) *
               C2696 -
           ((C34159 + C34158 + C34157) * C93673 * C93711 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C93673 * C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
             C41997 * C9602 + C41998 * C9603) *
                C31828 +
            (C41169 + C41170 + C41183) * C93711) *
               C2695 -
           ((C41999 * C9603 + C41181 * C9602 + C39823 * C9601) * C93711 +
            (C42000 * C9603 + C41998 * C9602 + C41997 * C9601) * C31828) *
               C2696) *
              C93621 * C1981 +
          (((C43783 * C9601 + C43784 * C9602 +
             (C36998 * C11102 + C43777 + C43777 + C93582 * C11110) * C9603) *
                C31828 +
            (C42861 * C9601 + C42862 * C9602 +
             (C36998 * C14028 + C43778 + C43778 + C93582 * C14032) * C9603) *
                C93711) *
               C2696 -
           ((C42864 + C42863 + C42851) * C93711 +
            (C43784 * C9603 + C43783 * C9602 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C9601) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C2695 -
           ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
             C37063 * C3413 + C36995 * C3495 + C37062 * C1396 +
             C36994 * C1478) *
                C93582 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C36999) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C37062 * C1387 + C36994 * C1469 + C37063 * C3410 + C36995 * C3492 +
             C37064 * C5817 + C36996 * C5921 + C37065 * C8616 +
             C36997 * C8742) *
                C36999 +
            (C37062 * C1395 + C36994 * C1477 + C37063 * C3414 + C36995 * C3496 +
             C37064 * C5823 + C36996 * C5927 + C37065 * C8618 +
             C36997 * C8744) *
                C93582) *
               C93673 * C2696 -
           ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
             C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
                C93582 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C36999) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C2695 -
           ((C35265 + C35266) * C31827 + (C35267 + C35268) * C31835 +
            (C35269 + C35270) * C31826 + (C35271 + C35272) * C31833 +
            (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 +
             C31828 * C1478) *
                C31825 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C31831) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C35272 + C35271) * C31831 + (C35270 + C35269) * C31825 +
            (C35268 + C35267) * C31833 + (C35266 + C35265) * C31826 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C31835 +
            (C31928 * C1393 + C31828 * C1475 + C31929 * C3416 +
             C93711 * C3498) *
                C31827) *
               C93673 * C2696 -
           ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
            (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
            (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C36999 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93582) *
                C9601 +
            ((C42101 + C42102) * C36999 + (C42103 + C42104) * C93582) * C9602 +
            C42117 * C9603) *
               C2695 -
           (((C42109 + C42110) * C93582 + (C42111 + C42112) * C36999) * C9603 +
            ((C42108 + C42107) * C93582 + (C42106 + C42105) * C36999) * C9602 +
            ((C42104 + C42103) * C93582 + (C42102 + C42101) * C36999) * C9601) *
               C2696) *
              C93621 * C1981 +
          ((((C35272 + C35271) * C36999 + (C35270 + C35269) * C93582) * C9601 +
            ((C43891 + C43892) * C36999 + (C43893 + C43894) * C93582) * C9602 +
            ((C31928 * C11102 + C31828 * C11223 + C31929 * C14028 +
              C93711 * C14144) *
                 C36999 +
             (C31928 * C11106 + C31828 * C11227 + C31929 * C14030 +
              C93711 * C14146) *
                 C93582) *
                C9603) *
               C2696 -
           (((C43894 + C43893) * C93582 + (C43892 + C43891) * C36999) * C9603 +
            ((C35269 + C35270) * C93582 + (C35271 + C35272) * C36999) * C9602 +
            ((C31958 + C31957) * C93582 + (C31956 + C31955) * C36999) * C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C2695 -
           (((C275 * C8617 + C93673 * C8845) * C93582 +
             (C275 * C8615 + C93673 * C8843) * C36999) *
                C36997 +
            (C8860 * C93582 + C8861 * C36999) * C36996 +
            (C8862 * C93582 + C8863 * C36999) * C36995 +
            ((C275 * C1396 + C93673 * C1544) * C93582 +
             (C275 * C1388 + C93673 * C1536) * C36999) *
                C36994) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C36999 + C2875 * C93582) * C36994 +
            (C7870 * C36999 + C7869 * C93582) * C36995 +
            (C7868 * C36999 + C7867 * C93582) * C36996 +
            ((C275 * C8616 + C93673 * C8844) * C36999 +
             (C275 * C8618 + C93673 * C8846) * C93582) *
                C36997) *
               C2696 -
           ((C38703 + C38702) * C36997 + (C38701 + C38700) * C36996 +
            (C38699 + C38698) * C36995 +
            (C306 * C93582 + C305 * C36999) * C36994) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C2695 -
           ((C18540 * C31827 + C18541 * C31835 + C7869 * C31826 +
             C7870 * C31833 + C8862 * C31825 + C8863 * C31831) *
                C93711 +
            (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
             (C275 * C1396 + C93673 * C1544) * C31825 +
             (C275 * C1388 + C93673 * C1536) * C31831) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C31831 + C2875 * C31825 + C2874 * C31833 + C2873 * C31826 +
             C2872 * C31835 + C2871 * C31827) *
                C31828 +
            (C7870 * C31831 + C7869 * C31825 + C18541 * C31833 +
             C18540 * C31826 + (C275 * C3412 + C93673 * C3568) * C31835 +
             (C275 * C3416 + C93673 * C3572) * C31827) *
                C93711) *
               C2696 -
           ((C34385 + C34384 + C34383 + C34382 + C34381 + C34380) * C93711 +
            (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
             C306 * C31825 + C305 * C31831) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
              C9772 * C1389 + C9603 * C1537) *
                 C36999 +
             (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
              C9772 * C1397 + C9603 * C1545) *
                 C93582) *
                C31828 +
            ((C41357 + C41358 + C41359) * C36999 +
             (C41360 + C41361 + C41362) * C93582) *
                C93711) *
               C2695 -
           (((C9772 * C14029 + C9603 * C14267 + C9771 * C5825 + C9602 * C6015 +
              C9770 * C3413 + C9601 * C3569) *
                 C93582 +
             (C9772 * C14027 + C9603 * C14265 + C9771 * C5819 + C9602 * C6009 +
              C9770 * C3409 + C9601 * C3565) *
                 C36999) *
                C93711 +
            ((C9772 * C11107 + C9603 * C11349 + C9771 * C1397 + C9602 * C1545 +
              C9770 * C1396 + C9601 * C1544) *
                 C93582 +
             (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
              C9770 * C1388 + C9601 * C1536) *
                 C36999) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C13261 + C13260 + C13259) * C36999 +
             (C13258 + C13257 + C13256) * C93582) *
                C31828 +
            ((C9770 * C3410 + C9601 * C3566 + C9771 * C5820 + C9602 * C6010 +
              C9772 * C14028 + C9603 * C14266) *
                 C36999 +
             (C9770 * C3414 + C9601 * C3570 + C9771 * C5826 + C9602 * C6016 +
              C9772 * C14030 + C9603 * C14268) *
                 C93582) *
                C93711) *
               C2696 -
           (((C12263 + C12264 + C12265) * C93582 +
             (C12266 + C12267 + C12268) * C36999) *
                C93711 +
            ((C9803 + C9802 + C9801) * C93582 +
             (C9800 + C9799 + C9798) * C36999) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C37062 +
            (C36999 * C189 + C93582 * C362) * C36994 + C37699 * C37063 +
            C37700 * C36995 + C37701 * C37064 + C37702 * C36996 +
            C37703 * C37065 + C37704 * C36997) *
               C93673 * C2695 -
           ((C36999 * C8741 + C93582 * C8965) * C36997 +
            (C36999 * C8615 + C93582 * C8617) * C37065 +
            (C36999 * C5922 + C93582 * C6094) * C36996 +
            (C36999 * C5818 + C93582 * C5824) * C37064 +
            (C36999 * C3491 + C93582 * C3639) * C36995 +
            (C36999 * C3409 + C93582 * C3413) * C37063 +
            (C36999 * C1470 + C93582 * C1602) * C36994 +
            (C36999 * C1388 + C93582 * C1396) * C37062) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C36999 * C1387 + C93582 * C1395) * C37062 +
            (C36999 * C1469 + C93582 * C1601) * C36994 +
            (C36999 * C3410 + C93582 * C3414) * C37063 +
            (C36999 * C3492 + C93582 * C3640) * C36995 +
            (C36999 * C5817 + C93582 * C5823) * C37064 +
            (C36999 * C5921 + C93582 * C6093) * C36996 +
            (C36999 * C8616 + C93582 * C8618) * C37065 +
            (C36999 * C8742 + C93582 * C8966) * C36997) *
               C93673 * C2696 -
           (C38787 * C36997 + C38786 * C37065 + C38785 * C36996 +
            C38784 * C37064 + C38783 * C36995 + C38782 * C37063 +
            (C36999 * C190 + C93582 * C363) * C36994 +
            (C36999 * C109 + C93582 * C115) * C37062) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C31928 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C31828 +
            (C32942 + C32943 + C32944) * C31929 +
            (C32945 + C32946 + C32947) * C93711) *
               C93673 * C2695 -
           ((C31835 * C3493 + C31827 * C3641 + C31833 * C3492 + C31826 * C3640 +
             C31831 * C3491 + C31825 * C3639) *
                C93711 +
            (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 + C31826 * C3414 +
             C31831 * C3409 + C31825 * C3413) *
                C31929 +
            (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 + C31826 * C1601 +
             C31831 * C1470 + C31825 * C1602) *
                C31828 +
            (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 + C31826 * C1395 +
             C31831 * C1388 + C31825 * C1396) *
                C31928) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C31831 * C1387 + C31825 * C1395 + C31833 * C1386 + C31826 * C1394 +
             C31835 * C1385 + C31827 * C1393) *
                C31928 +
            (C31831 * C1469 + C31825 * C1601 + C31833 * C1468 + C31826 * C1600 +
             C31835 * C1467 + C31827 * C1599) *
                C31828 +
            (C31831 * C3410 + C31825 * C3414 + C31833 * C3411 + C31826 * C3415 +
             C31835 * C3412 + C31827 * C3416) *
                C31929 +
            (C31831 * C3492 + C31825 * C3640 + C31833 * C3493 + C31826 * C3641 +
             C31835 * C3494 + C31827 * C3642) *
                C93711) *
               C93673 * C2696 -
           ((C34501 + C34500 + C34499) * C93711 +
            (C34498 + C34497 + C34496) * C31929 +
            (C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
             C31831 * C190 + C31825 * C363) *
                C31828 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C31928) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C31928 +
             (C36999 * C189 + C93582 * C362) * C31828 + C37699 * C31929 +
             C37700 * C93711) *
                C9601 +
            (C42297 + C42298 + C42273 + C42274) * C9602 + C42307 * C9603) *
               C2695 -
           ((C42301 + C42302 + C42303 + C42304) * C9603 +
            (C42280 + C42279 + C42300 + C42299) * C9602 +
            (C42274 + C42273 + C42298 + C42297) * C9601) *
               C2696) *
              C93621 * C1981 +
          (((C44107 + C44108 + C44095 + C44096) * C9601 +
            (C44109 + C44110 + C44101 + C44102) * C9602 +
            ((C36999 * C11102 + C93582 * C11106) * C31928 +
             (C36999 * C11223 + C93582 * C11426) * C31828 +
             (C36999 * C14028 + C93582 * C14030) * C31929 +
             (C36999 * C14144 + C93582 * C14368) * C93711) *
                C9603) *
               C2696 -
           ((C44102 + C44101 + C44110 + C44109) * C9603 +
            (C44096 + C44095 + C44108 + C44107) * C9602 +
            (C38783 * C93711 + C38782 * C31929 +
             (C36999 * C190 + C93582 * C363) * C31828 +
             (C36999 * C109 + C93582 * C115) * C31928) *
                C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C2695 -
           (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
            C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 +
            C38270 + C36995 * C3709 + C37216 * C1388 + C38271 + C38271 +
            C36994 * C1660) *
               C93582 * C93673 * C2696) *
              C93621 * C1981 +
          ((C37216 * C1387 + C39471 + C39471 + C36994 * C1659 + C37217 * C3410 +
            C39472 + C39472 + C36995 * C3710 + C37218 * C5817 + C39473 +
            C39473 + C36996 * C6173 + C37219 * C8616 + C39474 + C39474 +
            C36997 * C9090) *
               C93582 * C93673 * C2696 -
           (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
            C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
            C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
               C93582 * C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C2695 -
           ((C35585 + C35586) * C31827 + (C35587 + C35588) * C31826 +
            (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 +
             C32190 * C1388 + C33741 + C33741 + C31828 * C1660) *
                C31825) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C35588 + C35587) * C31825 + (C35586 + C35585) * C31826 +
            (C32190 * C1385 + C35575 + C35575 + C31828 * C1657 +
             C32191 * C3412 + C35576 + C35576 + C93711 * C3712) *
                C31827) *
               C93673 * C2696 -
           ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
            (C32228 + C32227) * C31825) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93582 * C9601 +
            (C42411 + C42412) * C93582 * C9602 + C42418 * C9603) *
               C2695 -
           ((C42415 + C42416) * C93582 * C9603 +
            (C42414 + C42413) * C93582 * C9602 +
            (C42412 + C42411) * C93582 * C9601) *
               C2696) *
              C93621 * C1981 +
          (((C35588 + C35587) * C93582 * C9601 +
            (C44219 + C44220) * C93582 * C9602 +
            (C32190 * C11102 + C44213 + C44213 + C31828 * C11545 +
             C32191 * C14028 + C44214 + C44214 + C93711 * C14480) *
                C93582 * C9603) *
               C2696 -
           ((C44220 + C44219) * C93582 * C9603 +
            (C35587 + C35588) * C93582 * C9602 +
            (C32228 + C32227) * C93582 * C9601) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C2695 -
           ((C275 * C8741 + C93673 * C9195) * C36997 +
            (C275 * C8615 + C93673 * C8843) * C37065 + C9202 * C36996 +
            C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
            (C275 * C1470 + C93673 * C1726) * C36994 +
            (C275 * C1388 + C93673 * C1536) * C37062) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C2876 * C37062 + C3105 * C36994 + C7870 * C37063 + C8195 * C36995 +
            C7868 * C37064 + C8194 * C36996 +
            (C275 * C8616 + C93673 * C8844) * C37065 +
            (C275 * C8742 + C93673 * C9196) * C36997) *
               C93582 * C2696 -
           (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
            C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C2695 -
           ((C35687 + C35688 + C35689 + C35690) * C31827 +
            (C35691 + C35692 + C35693 + C35694) * C31826 +
            (C9203 * C93711 + C8863 * C31929 +
             (C275 * C1470 + C93673 * C1726) * C31828 +
             (C275 * C1388 + C93673 * C1536) * C31928) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C35694 + C35693 + C35692 + C35691) * C31825 +
            (C35690 + C35689 + C35688 + C35687) * C31826 +
            (C2872 * C31928 + C3103 * C31828 +
             (C275 * C3412 + C93673 * C3568) * C31929 +
             (C275 * C3494 + C93673 * C3786) * C93711) *
                C31827) *
               C2696 -
           ((C32316 + C32317 + C32318 + C32319) * C31827 +
            (C32315 + C32314 + C32313 + C32312) * C31826 +
            (C32311 + C32310 + C32309 + C32308) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C31928 +
            (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
             C9772 * C1471 + C9603 * C1727) *
                C31828 +
            (C41357 + C41358 + C41359) * C31929 +
            (C41621 + C41622 + C41623) * C93711) *
               C93582 * C2695 -
           ((C9772 * C14143 + C9603 * C14595 + C9771 * C5923 + C9602 * C6267 +
             C9770 * C3491 + C9601 * C3783) *
                C93711 +
            (C9772 * C14027 + C9603 * C14265 + C9771 * C5819 + C9602 * C6009 +
             C9770 * C3409 + C9601 * C3565) *
                C31929 +
            (C9772 * C11224 + C9603 * C11655 + C9771 * C1471 + C9602 * C1727 +
             C9770 * C1470 + C9601 * C1726) *
                C31828 +
            (C9772 * C11103 + C9603 * C11345 + C9771 * C1389 + C9602 * C1537 +
             C9770 * C1388 + C9601 * C1536) *
                C31928) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C13261 + C13260 + C13259) * C31928 +
            (C13596 + C13595 + C13594) * C31828 +
            (C9770 * C3410 + C9601 * C3566 + C9771 * C5820 + C9602 * C6010 +
             C9772 * C14028 + C9603 * C14266) *
                C31929 +
            (C9770 * C3492 + C9601 * C3784 + C9771 * C5925 + C9602 * C6269 +
             C9772 * C14144 + C9603 * C14596) *
                C93711) *
               C93582 * C2696 -
           ((C12583 + C12584 + C12585) * C93711 +
            (C12266 + C12267 + C12268) * C31929 +
            (C10056 + C10055 + C10054) * C31828 +
            (C9800 + C9799 + C9798) * C31928) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C2695 -
           (((C36999 * C8843 + C93582 * C9301) * C93673 +
             (C36999 * C8615 + C93582 * C8617) * C275) *
                C36997 +
            ((C36999 * C6008 + C93582 * C6346) * C93673 +
             (C36999 * C5818 + C93582 * C5824) * C275) *
                C36996 +
            ((C36999 * C3565 + C93582 * C3853) * C93673 +
             (C36999 * C3409 + C93582 * C3413) * C275) *
                C36995 +
            ((C36999 * C1536 + C93582 * C1784) * C93673 +
             (C36999 * C1388 + C93582 * C1396) * C275) *
                C36994) *
               C2696) *
              C93621 * C1981 +
          ((((C36999 * C1387 + C93582 * C1395) * C275 +
             (C36999 * C1535 + C93582 * C1783) * C93673) *
                C36994 +
            ((C36999 * C3410 + C93582 * C3414) * C275 +
             (C36999 * C3566 + C93582 * C3854) * C93673) *
                C36995 +
            ((C36999 * C5817 + C93582 * C5823) * C275 +
             (C36999 * C6007 + C93582 * C6345) * C93673) *
                C36996 +
            ((C36999 * C8616 + C93582 * C8618) * C275 +
             (C36999 * C8844 + C93582 * C9302) * C93673) *
                C36997) *
               C2696 -
           ((C39004 + C38996) * C36997 + (C39003 + C38993) * C36996 +
            (C39002 + C38990) * C36995 +
            ((C36999 * C277 + C93582 * C580) * C93673 +
             (C36999 * C109 + C93582 * C115) * C275) *
                C36994) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C2695 -
           (((C31835 * C3567 + C31827 * C3855 + C31833 * C3566 +
              C31826 * C3854 + C31831 * C3565 + C31825 * C3853) *
                 C93673 +
             (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 +
              C31826 * C3414 + C31831 * C3409 + C31825 * C3413) *
                 C275) *
                C93711 +
            ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 +
              C31826 * C1783 + C31831 * C1536 + C31825 * C1784) *
                 C93673 +
             (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
              C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                 C275) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C31831 * C1387 + C31825 * C1395 + C31833 * C1386 +
              C31826 * C1394 + C31835 * C1385 + C31827 * C1393) *
                 C275 +
             (C31831 * C1535 + C31825 * C1783 + C31833 * C1534 +
              C31826 * C1782 + C31835 * C1533 + C31827 * C1781) *
                 C93673) *
                C31828 +
            ((C31831 * C3410 + C31825 * C3414 + C31833 * C3411 +
              C31826 * C3415 + C31835 * C3412 + C31827 * C3416) *
                 C275 +
             (C31831 * C3566 + C31825 * C3854 + C31833 * C3567 +
              C31826 * C3855 + C31835 * C3568 + C31827 * C3856) *
                 C93673) *
                C93711) *
               C2696 -
           (((C34834 + C34833 + C34832) * C93673 +
             (C34498 + C34497 + C34496) * C275) *
                C93711 +
            ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
              C31831 * C277 + C31825 * C580) *
                 C93673 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C275) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C9770 +
             (C36999 * C276 + C93582 * C579) * C9601 + C42289 * C9771 +
             C42577 * C9602 + C42291 * C9772 + C42578 * C9603) *
                C31828 +
            (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
               C2695 -
           ((C42579 * C9603 + C42294 * C9772 + C41715 * C9602 + C41451 * C9771 +
             C40279 * C9601 + C40059 * C9770) *
                C93711 +
            (C42580 * C9603 + C42296 * C9772 + C42578 * C9602 + C42291 * C9771 +
             C42577 * C9601 + C42289 * C9770) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          (((C44103 * C9770 + C44421 * C9601 + C44105 * C9771 + C44422 * C9602 +
             (C36999 * C11102 + C93582 * C11106) * C9772 +
             (C36999 * C11344 + C93582 * C11732) * C9603) *
                C31828 +
            (C43167 * C9770 + C43475 * C9601 + C43169 * C9771 + C43476 * C9602 +
             (C36999 * C14028 + C93582 * C14030) * C9772 +
             (C36999 * C14266 + C93582 * C14696) * C9603) *
                C93711) *
               C2696 -
           ((C43478 + C43472 + C43477 + C43469 + C43468 + C43467) * C93711 +
            (C44422 * C9603 + C44105 * C9772 + C44421 * C9602 + C44103 * C9771 +
             (C36999 * C277 + C93582 * C580) * C9601 +
             (C36999 * C109 + C93582 * C115) * C9770) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C2695 -
           ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
             C37063 * C3565 + C36995 * C3923 + C37062 * C1536 +
             C36994 * C1842) *
                C93673 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C275) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C37062 * C1387 + C36994 * C1469 + C37063 * C3410 + C36995 * C3492 +
             C37064 * C5817 + C36996 * C5921 + C37065 * C8616 +
             C36997 * C8742) *
                C275 +
            (C37062 * C1535 + C36994 * C1841 + C37063 * C3566 + C36995 * C3924 +
             C37064 * C6007 + C36996 * C6425 + C37065 * C8844 +
             C36997 * C9414) *
                C93673) *
               C93582 * C2696 -
           ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
             C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
                C93673 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C275) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C2695 -
           (((C35899 + C35900) * C93673 + (C35267 + C35268) * C275) * C31827 +
            ((C35901 + C35902) * C93673 + (C35271 + C35272) * C275) * C31826 +
            ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
              C31828 * C1842) *
                 C93673 +
             (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
              C31828 * C1470) *
                 C275) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          ((((C35272 + C35271) * C275 + (C35902 + C35901) * C93673) * C31825 +
            ((C35268 + C35267) * C275 + (C35900 + C35899) * C93673) * C31826 +
            ((C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
              C93711 * C3494) *
                 C275 +
             (C31928 * C1533 + C31828 * C1839 + C31929 * C3568 +
              C93711 * C3926) *
                 C93673) *
                C31827) *
               C2696 -
           (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
            ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
            ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C9770 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C9601 +
            (C42101 + C42102) * C9771 + (C42668 + C42669) * C9602 +
            C42113 * C9772 + C42674 * C9603) *
               C93582 * C2695 -
           ((C42672 + C42673) * C9603 + (C42111 + C42112) * C9772 +
            (C42671 + C42670) * C9602 + (C42106 + C42105) * C9771 +
            (C42669 + C42668) * C9601 + (C42102 + C42101) * C9770) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C35272 + C35271) * C9770 + (C35902 + C35901) * C9601 +
            (C43891 + C43892) * C9771 + (C44525 + C44526) * C9602 +
            (C31928 * C11102 + C31828 * C11223 + C31929 * C14028 +
             C93711 * C14144) *
                C9772 +
            (C31928 * C11344 + C31828 * C11829 + C31929 * C14266 +
             C93711 * C14802) *
                C9603) *
               C93582 * C2696 -
           ((C44526 + C44525) * C9603 + (C43892 + C43891) * C9772 +
            (C35901 + C35902) * C9602 + (C35271 + C35272) * C9771 +
            (C32485 + C32484) * C9601 + (C31956 + C31955) * C9770) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C2695 -
           ((C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C36997 +
            C9526 * C36996 + C9527 * C36995 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C3340 * C36994 + C8515 * C36995 + C8514 * C36996 +
            (C713 * C8616 + C9521 + C9521 + C93673 * C9514) * C36997) *
               C93582 * C2696 -
           (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C2695 -
           ((C36001 + C36002) * C31827 + (C36003 + C36004) * C31826 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C36004 + C36003) * C31825 + (C36002 + C36001) * C31826 +
            (C3338 * C31828 +
             (C713 * C3412 + C4001 + C4001 + C93673 * C3996) * C93711) *
                C31827) *
               C2696 -
           ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
            (C32568 + C32567) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
             C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 +
             C10305 + C9603 * C1901) *
                C31828 +
            (C41894 + C41895 + C41896) * C93711) *
               C93582 * C2695 -
           ((C10301 * C14027 + C14912 + C14912 + C9603 * C14907 +
             C10300 * C5819 + C14911 + C14911 + C9602 * C6507 + C10299 * C3409 +
             C14910 + C14910 + C9601 * C3993) *
                C93711 +
            (C10301 * C11103 + C11927 + C11927 + C9603 * C11920 +
             C10300 * C1389 + C11928 + C11928 + C9602 * C1901 + C10299 * C1388 +
             C11929 + C11929 + C9601 * C1900) *
                C31828) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C13929 + C13928 + C13927) * C31828 +
            (C10299 * C3410 + C14913 + C14913 + C9601 * C3994 + C10300 * C5820 +
             C14914 + C14914 + C9602 * C6509 + C10301 * C14028 + C14915 +
             C14915 + C9603 * C14908) *
                C93711) *
               C93582 * C2696 -
           ((C12910 + C12911 + C12912) * C93711 +
            (C10341 + C10340 + C10339) * C31828) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C32678 + C32679 + C32680) * C93673 * C93711) *
              C93635 * C800 -
          ((C32681 + C32682 + C32683) * C93673 * C93711 +
           (C32680 + C32679 + C32678) * C93673 * C31828) *
              C93635 * C801 +
          ((C32683 + C32682 + C32681) * C93673 * C31828 +
           (C31830 * C4917 + C32663 + C32663 + C31825 * C4925 + C31832 * C4916 +
            C32664 + C32664 + C31826 * C4924 + C31834 * C6615 + C32665 +
            C32665 + C31827 * C6617) *
               C93673 * C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C31830 * C807 + C31840 + C31840 + C31825 * C823 + C31832 * C806 +
            C31841 + C31841 + C31826 * C822 + C31834 * C805 + C31842 + C31842 +
            C31827 * C821) *
               C93673 * C93711) *
              C93635 * C93621 * C97 -
          ((C31834 * C804 + C31843 + C31843 + C31827 * C820 + C31832 * C805 +
            C31844 + C31844 + C31826 * C821 + C31830 * C806 + C31845 + C31845 +
            C31825 * C822) *
               C93673 * C93711 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C93673 * C31828) *
              C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C93673 * C31828 +
           (C31830 * C805 + C31852 + C31852 + C31825 * C821 + C31832 * C804 +
            C31853 + C31853 + C31826 * C820 + C31834 * C1983 + C31854 + C31854 +
            C31827 * C1985) *
               C93673 * C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           (C36998 * C807 + C37002 + C37002 + C93582 * C823) * C93673 * C36995 +
           (C36998 * C808 + C37003 + C37003 + C93582 * C824) * C93673 * C36996 +
           (C36998 * C4917 + C37004 + C37004 + C93582 * C4925) * C93673 *
               C36997) *
              C93635 * C93621 * C97 -
          ((C36998 * C4916 + C37005 + C37005 + C93582 * C4924) * C93673 *
               C36997 +
           (C36998 * C809 + C37006 + C37006 + C93582 * C825) * C93673 * C36996 +
           (C36998 * C806 + C37007 + C37007 + C93582 * C822) * C93673 * C36995 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
               C36994) *
              C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93673 * C36994 +
           (C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93673 * C36995 +
           (C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93673 * C36996 +
           (C36998 * C6615 + C37012 + C37012 + C93582 * C6617) * C93673 *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C93635 * C800 -
          (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
           C37508 * C36994) *
              C93635 * C801 +
          (C37509 * C36994 + C37510 * C36995 + C37511 * C36996 +
           (C36998 * C37482 + C37495 + C37495 + C93582 * C37484) * C93673 *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C9602 +
            (C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C9603) *
               C31828 +
           (C37504 * C9601 + C39823 * C9602 +
            (C36998 * C5819 + C38059 + C38059 + C93582 * C5831) * C9603) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C36998 * C5820 + C40497 + C40497 + C93582 * C5832) * C9603 +
            (C36998 * C3410 + C39204 + C39204 + C93582 * C3418) * C9602 +
            C38560 * C9601) *
               C93711 +
           ((C36998 * C1390 + C40498 + C40498 + C93582 * C1406) * C9603 +
            (C36998 * C1387 + C39203 + C39203 + C93582 * C1403) * C9602 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C9601) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C9601 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C9602 +
            (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C9603) *
               C31828 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C9601 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C9602 +
            (C36998 * C12033 + C40502 + C40502 + C93582 * C12035) * C9603) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C9601 +
            (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C9602 +
            (C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C9603) *
               C31828 +
           (C41169 + C41170 + C41183) * C93711) *
              C93635 * C800 -
          ((C41184 + C41175 + C41176) * C93711 +
           (C41183 + C41170 + C41169) * C31828) *
              C93635 * C801 +
          ((C41176 + C41175 + C41184) * C31828 +
           (C37506 * C9601 + C39821 * C9602 +
            (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C9603) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C800 -
          ((C31929 * C818 + C93711 * C900 + C31928 * C813 + C31828 * C895) *
               C31827 +
           (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
               C31835 +
           (C31929 * C817 + C93711 * C899 + C31928 * C814 + C31828 * C896) *
               C31826 +
           (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
               C31833 +
           (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
               C31825 +
           (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
               C31831) *
              C93673 * C93635 * C801 +
          ((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
               C31831 +
           (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
               C31825 +
           (C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
               C31833 +
           (C31928 * C817 + C31828 * C899 + C31929 * C4920 + C93711 * C5042) *
               C31826 +
           (C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
               C31835 +
           (C31928 * C818 + C31828 * C900 + C31929 * C6616 + C93711 * C6739) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
           (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
           (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
              C93673 * C93635 * C93621 * C98 +
          (C31967 * C31831 + C31968 * C31825 + (C31966 + C31965) * C31833 +
           (C31964 + C31963) * C31826 +
           (C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
               C31835 +
           (C31928 * C118 + C31828 * C199 + C31929 * C1984 + C93711 * C2057) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C93621 * C97 -
          ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
            C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
               C93582 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C36999) *
              C93673 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C36999 +
           (C37062 * C116 + C36994 * C197 + C37063 * C813 + C36995 * C895 +
            C37064 * C818 + C36996 * C900 + C37065 * C6616 + C36997 * C6739) *
               C93582) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C800 -
          ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
            C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
               C93582 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C36999) *
              C93673 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C36999 +
           (C37062 * C816 + C36994 * C898 + C37063 * C4921 + C36995 * C5043 +
            C37064 * C4922 + C36996 * C5044 + C37065 * C37483 +
            C36997 * C37562) *
               C93582) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C36999 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93582) *
               C9601 +
           ((C31928 * C1388 + C31828 * C1470 + C31929 * C3409 +
             C93711 * C3491) *
                C36999 +
            (C31928 * C1396 + C31828 * C1478 + C31929 * C3413 +
             C93711 * C3495) *
                C93582) *
               C9602 +
           ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C36999 +
            (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 +
             C93711 * C5929) *
                C93582) *
               C9603) *
              C93635 * C93621 * C97 -
          (((C31929 * C5826 + C93711 * C5931 + C31928 * C1398 +
             C31828 * C1480) *
                C93582 +
            (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 +
             C31828 * C1472) *
                C36999) *
               C9603 +
           ((C35269 + C35270) * C93582 + (C35271 + C35272) * C36999) * C9602 +
           ((C31958 + C31957) * C93582 + (C31956 + C31955) * C36999) * C9601) *
              C93635 * C93621 * C98 +
          ((C31967 * C36999 + C31968 * C93582) * C9601 +
           ((C35268 + C35267) * C36999 + (C35266 + C35265) * C93582) * C9602 +
           ((C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
             C93711 * C12136) *
                C36999 +
            (C31928 * C1399 + C31828 * C1481 + C31929 * C12034 +
             C93711 * C12137) *
                C93582) *
               C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C36999 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93582) *
               C9601 +
           ((C31928 * C1388 + C31828 * C1470 + C31929 * C3409 +
             C93711 * C3491) *
                C36999 +
            (C31928 * C1396 + C31828 * C1478 + C31929 * C3413 +
             C93711 * C3495) *
                C93582) *
               C9602 +
           ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C36999 +
            (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 +
             C93711 * C5929) *
                C93582) *
               C9603) *
              C93635 * C800 -
          (((C31929 * C5827 + C93711 * C5930 + C31928 * C5825 +
             C31828 * C5929) *
                C93582 +
            (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 +
             C31828 * C5923) *
                C36999) *
               C9603 +
           ((C31929 * C5824 + C93711 * C5928 + C31928 * C3413 +
             C31828 * C3495) *
                C93582 +
            (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 +
             C31828 * C3491) *
                C36999) *
               C9602 +
           ((C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C93582 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C36999) *
               C9601) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C36999 +
            (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
                C93582) *
               C9601 +
           ((C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C36999 +
            (C31928 * C5824 + C31828 * C5928 + C31929 * C8617 +
             C93711 * C8743) *
                C93582) *
               C9602 +
           ((C31928 * C5821 + C31828 * C5924 + C31929 * C38050 +
             C93711 * C38111) *
                C36999 +
            (C31928 * C5827 + C31828 * C5930 + C31929 * C38051 +
             C93711 * C38112) *
                C93582) *
               C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
              C93635 * C800 -
          ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
           (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
              C93635 * C801 +
          ((C32843 + C32842 + C32841 + C32840 + C32839 + C32838) * C31828 +
           (C5156 * C31831 + C5155 * C31825 + C5154 * C31833 + C5153 * C31826 +
            (C275 * C6615 + C93673 * C6856) * C31835 +
            (C275 * C6616 + C93673 * C6857) * C31827) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C5149 * C31831 + C5150 * C31825 + C2162 * C31833 + C2161 * C31826 +
            C2160 * C31835 + C2159 * C31827) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C2157 * C31827 + C2158 * C31835 + C2159 * C31826 + C2160 * C31833 +
            C2161 * C31825 + C2162 * C31831) *
               C93711 +
           (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
            C306 * C31825 + C305 * C31831) *
               C31828) *
              C93635 * C93621 * C98 +
          ((C307 * C31831 + C308 * C31825 + C309 * C31833 + C310 * C31826 +
            C312 * C31835 + C311 * C31827) *
               C31828 +
           (C2160 * C31831 + C2159 * C31825 + C2158 * C31833 + C2157 * C31826 +
            (C275 * C1983 + C93673 * C2142) * C31835 +
            (C275 * C1984 + C93673 * C2143) * C31827) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C5149 * C36999 + C5150 * C93582) * C36995 +
           (C5151 * C36999 + C5152 * C93582) * C36996 +
           (C5156 * C36999 + C5155 * C93582) * C36997) *
              C93635 * C93621 * C97 -
          ((C5153 * C93582 + C5154 * C36999) * C36997 +
           (C4299 * C93582 + C4298 * C36999) * C36996 +
           (C2161 * C93582 + C2162 * C36999) * C36995 +
           (C306 * C93582 + C305 * C36999) * C36994) *
              C93635 * C93621 * C98 +
          ((C307 * C36999 + C308 * C93582) * C36994 +
           (C2160 * C36999 + C2159 * C93582) * C36995 +
           (C4301 * C36999 + C4300 * C93582) * C36996 +
           ((C275 * C6615 + C93673 * C6856) * C36999 +
            (C275 * C6616 + C93673 * C6857) * C93582) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C93635 * C800 -
          ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
           (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
              C93635 * C801 +
          (C37626 * C36994 + C37627 * C36995 + (C37631 + C37630) * C36996 +
           ((C275 * C37482 + C93673 * C37613) * C36999 +
            (C275 * C37483 + C93673 * C37614) * C93582) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C36999 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C93582) *
               C31828 +
           ((C9770 * C807 + C9601 * C955 + C9771 * C3409 + C9602 * C3565 +
             C9772 * C5819 + C9603 * C6009) *
                C36999 +
            (C9770 * C815 + C9601 * C963 + C9771 * C3413 + C9602 * C3569 +
             C9772 * C5825 + C9603 * C6015) *
                C93582) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C12263 + C12264 + C12265) * C93582 +
            (C12266 + C12267 + C12268) * C36999) *
               C93711 +
           ((C9803 + C9802 + C9801) * C93582 +
            (C9800 + C9799 + C9798) * C36999) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C9809 + C9808 + C9807) * C36999 +
            (C9806 + C9805 + C9804) * C93582) *
               C31828 +
           ((C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
             C9772 * C12033 + C9603 * C12248) *
                C36999 +
            (C9770 * C813 + C9601 * C961 + C9771 * C3415 + C9602 * C3571 +
             C9772 * C12034 + C9603 * C12249) *
                C93582) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
             C9772 * C1389 + C9603 * C1537) *
                C36999 +
            (C9770 * C114 + C9601 * C282 + C9771 * C1396 + C9602 * C1544 +
             C9772 * C1397 + C9603 * C1545) *
                C93582) *
               C31828 +
           ((C41357 + C41358 + C41359) * C36999 +
            (C41360 + C41361 + C41362) * C93582) *
               C93711) *
              C93635 * C800 -
          (((C41363 + C41364 + C41365) * C93582 +
            (C41366 + C41367 + C41368) * C36999) *
               C93711 +
           ((C41362 + C41361 + C41360) * C93582 +
            (C41359 + C41358 + C41357) * C36999) *
               C31828) *
              C93635 * C801 +
          (((C41368 + C41367 + C41366) * C36999 +
            (C41365 + C41364 + C41363) * C93582) *
               C31828 +
           ((C9770 * C4917 + C9601 * C5121 + C9771 * C8615 + C9602 * C8843 +
             C9772 * C38050 + C9603 * C38163) *
                C36999 +
            (C9770 * C4921 + C9601 * C5125 + C9771 * C8617 + C9602 * C8845 +
             C9772 * C38051 + C9603 * C38164) *
                C93582) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C32942 + C32943 + C32944) * C31929 +
                     (C32945 + C32946 + C32947) * C93711) *
                        C93673 * C93635 * C800 -
                    ((C32948 + C32949 + C32950) * C93711 +
                     (C32951 + C32952 + C32953) * C31929 +
                     (C32947 + C32946 + C32945) * C31828 +
                     (C32944 + C32943 + C32942) * C31928) *
                        C93673 * C93635 * C801 +
                    ((C32953 + C32952 + C32951) * C31928 +
                     (C32950 + C32949 + C32948) * C31828 +
                     (C31831 * C4917 + C31825 * C4921 + C31833 * C4916 +
                      C31826 * C4920 + C31835 * C6615 + C31827 * C6616) *
                         C31929 +
                     (C31831 * C5039 + C31825 * C5242 + C31833 * C5038 +
                      C31826 * C5241 + C31835 * C6738 + C31827 * C6964) *
                         C93711) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C31831 * C807 + C31825 * C815 + C31833 * C806 +
                      C31826 * C814 + C31835 * C805 + C31827 * C813) *
                         C31929 +
                     (C31831 * C889 + C31825 * C1021 + C31833 * C888 +
                      C31826 * C1020 + C31835 * C887 + C31827 * C1019) *
                         C93711) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C31835 * C886 + C31827 * C1018 + C31833 * C887 +
                      C31826 * C1019 + C31831 * C888 + C31825 * C1020) *
                         C93711 +
                     (C31835 * C804 + C31827 * C812 + C31833 * C805 +
                      C31826 * C813 + C31831 * C806 + C31825 * C814) *
                         C31929 +
                     (C31835 * C192 + C31827 * C365 + C31833 * C191 +
                      C31826 * C364 + C31831 * C190 + C31825 * C363) *
                         C31828 +
                     (C31835 * C111 + C31827 * C117 + C31833 * C110 +
                      C31826 * C116 + C31831 * C109 + C31825 * C115) *
                         C31928) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C31831 * C110 + C31825 * C116 + C31833 * C111 +
                      C31826 * C117 + C31835 * C112 + C31827 * C118) *
                         C31928 +
                     (C31831 * C191 + C31825 * C364 + C31833 * C192 +
                      C31826 * C365 + C31835 * C193 + C31827 * C366) *
                         C31828 +
                     (C31831 * C805 + C31825 * C813 + C31833 * C804 +
                      C31826 * C812 + C31835 * C1983 + C31827 * C1984) *
                         C31929 +
                     (C31831 * C887 + C31825 * C1019 + C31833 * C886 +
                      C31826 * C1018 + C31835 * C2056 + C31827 * C2228) *
                         C93711) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     (C36999 * C807 + C93582 * C815) * C37063 +
                     (C36999 * C889 + C93582 * C1021) * C36995 +
                     (C36999 * C808 + C93582 * C816) * C37064 +
                     (C36999 * C890 + C93582 * C1022) * C36996 +
                     (C36999 * C4917 + C93582 * C4921) * C37065 +
                     (C36999 * C5039 + C93582 * C5242) * C36997) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C36999 * C5038 + C93582 * C5241) * C36997 +
                     (C36999 * C4916 + C93582 * C4920) * C37065 +
                     (C36999 * C891 + C93582 * C1023) * C36996 +
                     (C36999 * C809 + C93582 * C817) * C37064 +
                     (C36999 * C888 + C93582 * C1020) * C36995 +
                     (C36999 * C806 + C93582 * C814) * C37063 +
                     (C36999 * C190 + C93582 * C363) * C36994 +
                     (C36999 * C109 + C93582 * C115) * C37062) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C36999 * C110 + C93582 * C116) * C37062 +
                     (C36999 * C191 + C93582 * C364) * C36994 +
                     (C36999 * C805 + C93582 * C813) * C37063 +
                     (C36999 * C887 + C93582 * C1019) * C36995 +
                     (C36999 * C810 + C93582 * C818) * C37064 +
                     (C36999 * C892 + C93582 * C1024) * C36996 +
                     (C36999 * C6615 + C93582 * C6616) * C37065 +
                     (C36999 * C6738 + C93582 * C6964) * C36997) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                     C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                        C93673 * C93635 * C800 -
                    (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
                     C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
                     C37700 * C36994 + C37699 * C37062) *
                        C93673 * C93635 * C801 +
                    (C37701 * C37062 + C37702 * C36994 + C37703 * C37063 +
                     C37704 * C36995 + C37706 * C37064 + C37705 * C36996 +
                     (C36999 * C37482 + C93582 * C37483) * C37065 +
                     (C36999 * C37561 + C93582 * C37681) * C36997) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C31928 +
                      (C36999 * C189 + C93582 * C362) * C31828 +
                      C37699 * C31929 + C37700 * C93711) *
                         C9601 +
                     ((C36999 * C1388 + C93582 * C1396) * C31928 +
                      (C36999 * C1470 + C93582 * C1602) * C31828 +
                      C40059 * C31929 + C40058 * C93711) *
                         C9602 +
                     ((C36999 * C1389 + C93582 * C1397) * C31928 +
                      (C36999 * C1471 + C93582 * C1603) * C31828 +
                      (C36999 * C5819 + C93582 * C5825) * C31929 +
                      (C36999 * C5923 + C93582 * C6095) * C93711) *
                         C9603) *
                        C93635 * C93621 * C97 -
                    (((C36999 * C5925 + C93582 * C6096) * C93711 +
                      (C36999 * C5820 + C93582 * C5826) * C31929 +
                      (C36999 * C1472 + C93582 * C1604) * C31828 +
                      (C36999 * C1390 + C93582 * C1398) * C31928) *
                         C9603 +
                     ((C36999 * C3492 + C93582 * C3640) * C93711 +
                      (C36999 * C3410 + C93582 * C3414) * C31929 +
                      (C36999 * C1469 + C93582 * C1601) * C31828 +
                      (C36999 * C1387 + C93582 * C1395) * C31928) *
                         C9602 +
                     (C38783 * C93711 + C38782 * C31929 +
                      (C36999 * C190 + C93582 * C363) * C31828 +
                      (C36999 * C109 + C93582 * C115) * C31928) *
                         C9601) *
                        C93635 * C93621 * C98 +
                    (((C36999 * C110 + C93582 * C116) * C31928 +
                      (C36999 * C191 + C93582 * C364) * C31828 +
                      (C36999 * C805 + C93582 * C813) * C31929 +
                      (C36999 * C887 + C93582 * C1019) * C93711) *
                         C9601 +
                     ((C36999 * C1386 + C93582 * C1394) * C31928 +
                      (C36999 * C1468 + C93582 * C1600) * C31828 +
                      (C36999 * C3411 + C93582 * C3415) * C31929 +
                      (C36999 * C3493 + C93582 * C3641) * C93711) *
                         C9602 +
                     ((C36999 * C1391 + C93582 * C1399) * C31928 +
                      (C36999 * C1473 + C93582 * C1605) * C31828 +
                      (C36999 * C12033 + C93582 * C12034) * C31929 +
                      (C36999 * C12136 + C93582 * C12366) * C93711) *
                         C9603) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C31928 +
                      (C36999 * C189 + C93582 * C362) * C31828 +
                      C37699 * C31929 + C37700 * C93711) *
                         C9601 +
                     ((C36999 * C1388 + C93582 * C1396) * C31928 +
                      (C36999 * C1470 + C93582 * C1602) * C31828 +
                      C40059 * C31929 + C40058 * C93711) *
                         C9602 +
                     ((C36999 * C1389 + C93582 * C1397) * C31928 +
                      (C36999 * C1471 + C93582 * C1603) * C31828 +
                      C41451 * C31929 + C41452 * C93711) *
                         C9603) *
                        C93635 * C800 -
                    ((C41453 * C93711 + C41454 * C31929 + C41452 * C31828 +
                      C41451 * C31928) *
                         C9603 +
                     (C40056 * C93711 + C40057 * C31929 + C40058 * C31828 +
                      C40059 * C31928) *
                         C9602 +
                     (C37702 * C93711 + C37701 * C31929 + C37700 * C31828 +
                      C37699 * C31928) *
                         C9601) *
                        C93635 * C801 +
                    ((C37701 * C31928 + C37702 * C31828 + C37703 * C31929 +
                      C37704 * C93711) *
                         C9601 +
                     (C40057 * C31928 + C40056 * C31828 + C40055 * C31929 +
                      C40054 * C93711) *
                         C9602 +
                     (C41454 * C31928 + C41453 * C31828 +
                      (C36999 * C38050 + C93582 * C38051) * C31929 +
                      (C36999 * C38111 + C93582 * C38215) * C93711) *
                         C9603) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C800 -
          ((C32191 * C810 + C33028 + C33028 + C93711 * C1082 + C32190 * C805 +
            C33029 + C33029 + C31828 * C1077) *
               C31827 +
           (C32191 * C809 + C33030 + C33030 + C93711 * C1081 + C32190 * C806 +
            C33031 + C33031 + C31828 * C1078) *
               C31826 +
           (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
            C33033 + C33033 + C31828 * C1079) *
               C31825) *
              C93673 * C93635 * C801 +
          ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
            C33035 + C33035 + C93711 * C5358) *
               C31825 +
           (C32190 * C809 + C33036 + C33036 + C31828 * C1081 + C32191 * C4916 +
            C33037 + C33037 + C93711 * C5357) *
               C31826 +
           (C32190 * C810 + C33038 + C33038 + C31828 * C1082 + C32191 * C6615 +
            C33039 + C33039 + C93711 * C7087) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
           (C32228 + C32227) * C31825) *
              C93673 * C93635 * C93621 * C98 +
          (C32233 * C31825 + (C32232 + C32231) * C31826 +
           (C32190 * C112 + C32213 + C32213 + C31828 * C423 + C32191 * C1983 +
            C32214 + C32214 + C93711 * C2295) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C93621 * C97 -
          (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
           C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
           C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
              C93582 * C93673 * C93635 * C93621 * C98 +
          (C37216 * C110 + C37229 + C37229 + C36994 * C421 + C37217 * C805 +
           C37230 + C37230 + C36995 * C1077 + C37218 * C810 + C37231 + C37231 +
           C36996 * C1082 + C37219 * C6615 + C37232 + C37232 + C36997 * C7087) *
              C93582 * C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C800 -
          (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
           C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
           C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
              C93582 * C93673 * C93635 * C801 +
          (C37216 * C808 + C37762 + C37762 + C36994 * C1080 + C37217 * C4917 +
           C37763 + C37763 + C36995 * C5358 + C37218 * C4918 + C37764 + C37764 +
           C36996 * C5359 + C37219 * C37482 + C37765 + C37765 +
           C36997 * C37756) *
              C93582 * C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C93582 * C9601 +
           (C32190 * C1388 + C33741 + C33741 + C31828 * C1660 + C32191 * C3409 +
            C33740 + C33740 + C93711 * C3709) *
               C93582 * C9602 +
           (C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C93582 * C9603) *
              C93635 * C93621 * C97 -
          ((C32191 * C5820 + C33745 + C33745 + C93711 * C6177 + C32190 * C1390 +
            C33744 + C33744 + C31828 * C1662) *
               C93582 * C9603 +
           (C35587 + C35588) * C93582 * C9602 +
           (C32228 + C32227) * C93582 * C9601) *
              C93635 * C93621 * C98 +
          (C32233 * C93582 * C9601 + (C35586 + C35585) * C93582 * C9602 +
           (C32190 * C1391 + C33746 + C33746 + C31828 * C1663 +
            C32191 * C12033 + C33747 + C33747 + C93711 * C12465) *
               C93582 * C9603) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C93582 * C9601 +
           (C32190 * C1388 + C33741 + C33741 + C31828 * C1660 + C32191 * C3409 +
            C33740 + C33740 + C93711 * C3709) *
               C93582 * C9602 +
           (C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C93582 * C9603) *
              C93635 * C800 -
          ((C32191 * C5821 + C41529 + C41529 + C93711 * C6176 + C32190 * C5819 +
            C41530 + C41530 + C31828 * C6175) *
               C93582 * C9603 +
           (C32191 * C5818 + C36538 + C36538 + C93711 * C6174 + C32190 * C3409 +
            C36537 + C36537 + C31828 * C3709) *
               C93582 * C9602 +
           (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
            C33033 + C33033 + C31828 * C1079) *
               C93582 * C9601) *
              C93635 * C801 +
          ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
            C33035 + C33035 + C93711 * C5358) *
               C93582 * C9601 +
           (C32190 * C5818 + C41531 + C41531 + C31828 * C6174 + C32191 * C8615 +
            C41532 + C41532 + C93711 * C9089) *
               C93582 * C9602 +
           (C32190 * C5821 + C41533 + C41533 + C31828 * C6176 +
            C32191 * C38050 + C41534 + C41534 + C93711 * C38266) *
               C93582 * C9603) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C800 -
          ((C4584 * C93711 + C4301 * C31929 + C2390 * C31828 + C2160 * C31928) *
               C31827 +
           (C4583 * C93711 + C4298 * C31929 + C2391 * C31828 + C2162 * C31928) *
               C31826 +
           (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 + C5149 * C31928) *
               C31825) *
              C93635 * C801 +
          ((C5151 * C31928 + C5461 * C31828 + C5156 * C31929 + C5463 * C93711) *
               C31825 +
           (C4298 * C31928 + C4583 * C31828 + C5154 * C31929 + C5462 * C93711) *
               C31826 +
           (C4301 * C31928 + C4584 * C31828 +
            (C275 * C6615 + C93673 * C6856) * C31929 +
            (C275 * C6738 + C93673 * C7204) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C93621 * C97 -
          ((C32316 + C32317 + C32318 + C32319) * C31827 +
           (C32315 + C32314 + C32313 + C32312) * C31826 +
           (C32311 + C32310 + C32309 + C32308) * C31825) *
              C93635 * C93621 * C98 +
          (C32322 * C31825 + (C32319 + C32318 + C32317 + C32316) * C31826 +
           (C312 * C31928 + C523 * C31828 +
            (C275 * C1983 + C93673 * C2142) * C31929 +
            (C275 * C2056 + C93673 * C2378) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
           C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
              C93582 * C93635 * C93621 * C98 +
          (C307 * C37062 + C521 * C36994 + C2160 * C37063 + C2390 * C36995 +
           C4301 * C37064 + C4584 * C36996 +
           (C275 * C6615 + C93673 * C6856) * C37065 +
           (C275 * C6738 + C93673 * C7204) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C800 -
          (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 + C5156 * C37064 +
           C5461 * C36995 + C5151 * C37063 + C5460 * C36994 + C5149 * C37062) *
              C93582 * C93635 * C801 +
          (C5151 * C37062 + C5461 * C36994 + C5156 * C37063 + C5463 * C36995 +
           C37629 * C37064 + C37819 * C36996 +
           (C275 * C37482 + C93673 * C37613) * C37065 +
           (C275 * C37561 + C93673 * C37815) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C31928 +
           (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
            C9772 * C1471 + C9603 * C1727) *
               C31828 +
           (C9770 * C807 + C9601 * C955 + C9771 * C3409 + C9602 * C3565 +
            C9772 * C5819 + C9603 * C6009) *
               C31929 +
           (C9770 * C889 + C9601 * C1145 + C9771 * C3491 + C9602 * C3783 +
            C9772 * C5923 + C9603 * C6267) *
               C93711) *
              C93582 * C93635 * C93621 * C97 -
          ((C12583 + C12584 + C12585) * C93711 +
           (C12266 + C12267 + C12268) * C31929 +
           (C10056 + C10055 + C10054) * C31828 +
           (C9800 + C9799 + C9798) * C31928) *
              C93582 * C93635 * C93621 * C98 +
          ((C9809 + C9808 + C9807) * C31928 +
           (C10059 + C10058 + C10057) * C31828 +
           (C9770 * C805 + C9601 * C953 + C9771 * C3411 + C9602 * C3567 +
            C9772 * C12033 + C9603 * C12248) *
               C31929 +
           (C9770 * C887 + C9601 * C1143 + C9771 * C3493 + C9602 * C3785 +
            C9772 * C12136 + C9603 * C12575) *
               C93711) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9770 * C108 + C9601 * C276 + C9771 * C1388 + C9602 * C1536 +
            C9772 * C1389 + C9603 * C1537) *
               C31928 +
           (C9770 * C189 + C9601 * C501 + C9771 * C1470 + C9602 * C1726 +
            C9772 * C1471 + C9603 * C1727) *
               C31828 +
           (C41357 + C41358 + C41359) * C31929 +
           (C41621 + C41622 + C41623) * C93711) *
              C93582 * C93635 * C800 -
          ((C41624 + C41625 + C41626) * C93711 +
           (C41366 + C41367 + C41368) * C31929 +
           (C41623 + C41622 + C41621) * C31828 +
           (C41359 + C41358 + C41357) * C31928) *
              C93582 * C93635 * C801 +
          ((C41368 + C41367 + C41366) * C31928 +
           (C41626 + C41625 + C41624) * C31828 +
           (C9770 * C4917 + C9601 * C5121 + C9771 * C8615 + C9602 * C8843 +
            C9772 * C38050 + C9603 * C38163) *
               C31929 +
           (C9770 * C5039 + C9601 * C5448 + C9771 * C8741 + C9602 * C9195 +
            C9772 * C38111 + C9603 * C38325) *
               C93711) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C32942 + C32943 + C32944) * C275 +
            (C33200 + C33201 + C33202) * C93673) *
               C93711) *
              C93635 * C800 -
          (((C33203 + C33204 + C33205) * C93673 +
            (C32951 + C32952 + C32953) * C275) *
               C93711 +
           ((C33202 + C33201 + C33200) * C93673 +
            (C32944 + C32943 + C32942) * C275) *
               C31828) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C275 +
            (C33205 + C33204 + C33203) * C93673) *
               C31828 +
           ((C31831 * C4917 + C31825 * C4921 + C31833 * C4916 + C31826 * C4920 +
             C31835 * C6615 + C31827 * C6616) *
                C275 +
            (C31831 * C5121 + C31825 * C5538 + C31833 * C5120 + C31826 * C5537 +
             C31835 * C6856 + C31827 * C7309) *
                C93673) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C31831 * C807 + C31825 * C815 + C31833 * C806 + C31826 * C814 +
             C31835 * C805 + C31827 * C813) *
                C275 +
            (C31831 * C955 + C31825 * C1203 + C31833 * C954 + C31826 * C1202 +
             C31835 * C953 + C31827 * C1201) *
                C93673) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C31835 * C952 + C31827 * C1200 + C31833 * C953 + C31826 * C1201 +
             C31831 * C954 + C31825 * C1202) *
                C93673 +
            (C31835 * C804 + C31827 * C812 + C31833 * C805 + C31826 * C813 +
             C31831 * C806 + C31825 * C814) *
                C275) *
               C93711 +
           ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C93673 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C275) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C275 +
            (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
             C31835 * C280 + C31827 * C583) *
                C93673) *
               C31828 +
           ((C31831 * C805 + C31825 * C813 + C31833 * C804 + C31826 * C812 +
             C31835 * C1983 + C31827 * C1984) *
                C275 +
            (C31831 * C953 + C31825 * C1201 + C31833 * C952 + C31826 * C1200 +
             C31835 * C2142 + C31827 * C2460) *
                C93673) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           ((C36999 * C807 + C93582 * C815) * C275 +
            (C36999 * C955 + C93582 * C1203) * C93673) *
               C36995 +
           ((C36999 * C808 + C93582 * C816) * C275 +
            (C36999 * C956 + C93582 * C1204) * C93673) *
               C36996 +
           ((C36999 * C4917 + C93582 * C4921) * C275 +
            (C36999 * C5121 + C93582 * C5538) * C93673) *
               C36997) *
              C93635 * C93621 * C97 -
          (((C36999 * C5120 + C93582 * C5537) * C93673 +
            (C36999 * C4916 + C93582 * C4920) * C275) *
               C36997 +
           ((C36999 * C957 + C93582 * C1205) * C93673 +
            (C36999 * C809 + C93582 * C817) * C275) *
               C36996 +
           ((C36999 * C954 + C93582 * C1202) * C93673 +
            (C36999 * C806 + C93582 * C814) * C275) *
               C36995 +
           ((C36999 * C277 + C93582 * C580) * C93673 +
            (C36999 * C109 + C93582 * C115) * C275) *
               C36994) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C275 +
            (C36999 * C278 + C93582 * C581) * C93673) *
               C36994 +
           ((C36999 * C805 + C93582 * C813) * C275 +
            (C36999 * C953 + C93582 * C1201) * C93673) *
               C36995 +
           ((C36999 * C810 + C93582 * C818) * C275 +
            (C36999 * C958 + C93582 * C1206) * C93673) *
               C36996 +
           ((C36999 * C6615 + C93582 * C6616) * C275 +
            (C36999 * C6856 + C93582 * C7309) * C93673) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C93635 * C800 -
          ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
           (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
              C93635 * C801 +
          (C37891 * C36994 + C37892 * C36995 + (C37882 + C37890) * C36996 +
           ((C36999 * C37482 + C93582 * C37483) * C275 +
            (C36999 * C37613 + C93582 * C37869) * C93673) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C9770 +
            (C36999 * C276 + C93582 * C579) * C9601 +
            (C36999 * C1388 + C93582 * C1396) * C9771 +
            (C36999 * C1536 + C93582 * C1784) * C9602 +
            (C36999 * C1389 + C93582 * C1397) * C9772 +
            (C36999 * C1537 + C93582 * C1785) * C9603) *
               C31828 +
           (C37699 * C9770 + C37883 * C9601 + C40059 * C9771 + C40279 * C9602 +
            (C36999 * C5819 + C93582 * C5825) * C9772 +
            (C36999 * C6009 + C93582 * C6347) * C9603) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C36999 * C6010 + C93582 * C6348) * C9603 +
            (C36999 * C5820 + C93582 * C5826) * C9772 +
            (C36999 * C3566 + C93582 * C3854) * C9602 +
            (C36999 * C3410 + C93582 * C3414) * C9771 + C38999 * C9601 +
            C38782 * C9770) *
               C93711 +
           ((C36999 * C1538 + C93582 * C1786) * C9603 +
            (C36999 * C1390 + C93582 * C1398) * C9772 +
            (C36999 * C1535 + C93582 * C1783) * C9602 +
            (C36999 * C1387 + C93582 * C1395) * C9771 +
            (C36999 * C277 + C93582 * C580) * C9601 +
            (C36999 * C109 + C93582 * C115) * C9770) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C9770 +
            (C36999 * C278 + C93582 * C581) * C9601 +
            (C36999 * C1386 + C93582 * C1394) * C9771 +
            (C36999 * C1534 + C93582 * C1782) * C9602 +
            (C36999 * C1391 + C93582 * C1399) * C9772 +
            (C36999 * C1539 + C93582 * C1787) * C9603) *
               C31828 +
           ((C36999 * C805 + C93582 * C813) * C9770 +
            (C36999 * C953 + C93582 * C1201) * C9601 +
            (C36999 * C3411 + C93582 * C3415) * C9771 +
            (C36999 * C3567 + C93582 * C3855) * C9602 +
            (C36999 * C12033 + C93582 * C12034) * C9772 +
            (C36999 * C12248 + C93582 * C12683) * C9603) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C9770 +
            (C36999 * C276 + C93582 * C579) * C9601 +
            (C36999 * C1388 + C93582 * C1396) * C9771 +
            (C36999 * C1536 + C93582 * C1784) * C9602 +
            (C36999 * C1389 + C93582 * C1397) * C9772 +
            (C36999 * C1537 + C93582 * C1785) * C9603) *
               C31828 +
           (C41701 + C41702 + C41703 + C41704 + C41705 + C41717) * C93711) *
              C93635 * C800 -
          ((C41718 + C41710 + C41711 + C41712 + C41713 + C41714) * C93711 +
           (C41717 + C41705 + C41704 + C41703 + C41702 + C41701) * C31828) *
              C93635 * C801 +
          ((C41714 + C41713 + C41712 + C41711 + C41710 + C41718) * C31828 +
           (C37703 * C9770 + C37885 * C9601 + C40055 * C9771 + C40277 * C9602 +
            (C36999 * C38050 + C93582 * C38051) * C9772 +
            (C36999 * C38163 + C93582 * C38376) * C9603) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C800 -
          (((C31929 * C958 + C93711 * C1264 + C31928 * C953 + C31828 * C1259) *
                C93673 +
            (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
                C275) *
               C31827 +
           ((C31929 * C957 + C93711 * C1263 + C31928 * C954 + C31828 * C1260) *
                C93673 +
            (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
                C275) *
               C31826 +
           ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C93673 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C275) *
               C31825) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C275 +
            (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
                C93673) *
               C31825 +
           ((C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C275 +
            (C31928 * C957 + C31828 * C1263 + C31929 * C5120 + C93711 * C5637) *
                C93673) *
               C31826 +
           ((C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
                C275 +
            (C31928 * C958 + C31828 * C1264 + C31929 * C6856 + C93711 * C7420) *
                C93673) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C93621 * C97 -
          (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
           ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
           ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
              C93635 * C93621 * C98 +
          (C32492 * C31825 +
           ((C31966 + C31965) * C275 + (C32489 + C32488) * C93673) * C31826 +
           ((C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
                C275 +
            (C31928 * C280 + C31828 * C639 + C31929 * C2142 + C93711 * C2527) *
                C93673) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C93621 * C97 -
          ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
            C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
               C93673 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C275) *
              C93582 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C275 +
           (C37062 * C278 + C36994 * C637 + C37063 * C953 + C36995 * C1259 +
            C37064 * C958 + C36996 * C1264 + C37065 * C6856 + C36997 * C7420) *
               C93673) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C800 -
          ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
            C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
               C93673 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C275) *
              C93582 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C275 +
           (C37062 * C956 + C36994 * C1262 + C37063 * C5121 + C36995 * C5638 +
            C37064 * C5122 + C36996 * C5639 + C37065 * C37613 +
            C36997 * C37942) *
               C93673) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C9770 +
           (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
               C9601 +
           (C31928 * C1388 + C31828 * C1470 + C31929 * C3409 + C93711 * C3491) *
               C9771 +
           (C31928 * C1536 + C31828 * C1842 + C31929 * C3565 + C93711 * C3923) *
               C9602 +
           (C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C9772 +
           (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 + C93711 * C6427) *
               C9603) *
              C93582 * C93635 * C93621 * C97 -
          ((C31929 * C6010 + C93711 * C6429 + C31928 * C1538 + C31828 * C1844) *
               C9603 +
           (C31929 * C5820 + C93711 * C5925 + C31928 * C1390 + C31828 * C1472) *
               C9772 +
           (C35901 + C35902) * C9602 + (C35271 + C35272) * C9771 +
           (C32485 + C32484) * C9601 + (C31956 + C31955) * C9770) *
              C93582 * C93635 * C93621 * C98 +
          (C31967 * C9770 + C32490 * C9601 + (C35268 + C35267) * C9771 +
           (C35900 + C35899) * C9602 +
           (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
            C93711 * C12136) *
               C9772 +
           (C31928 * C1539 + C31828 * C1845 + C31929 * C12248 +
            C93711 * C12782) *
               C9603) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C9770 +
           (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
               C9601 +
           (C31928 * C1388 + C31828 * C1470 + C31929 * C3409 + C93711 * C3491) *
               C9771 +
           (C31928 * C1536 + C31828 * C1842 + C31929 * C3565 + C93711 * C3923) *
               C9602 +
           (C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C9772 +
           (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 + C93711 * C6427) *
               C9603) *
              C93582 * C93635 * C800 -
          ((C31929 * C6011 + C93711 * C6428 + C31928 * C6009 + C31828 * C6427) *
               C9603 +
           (C31929 * C5821 + C93711 * C5924 + C31928 * C5819 + C31828 * C5923) *
               C9772 +
           (C31929 * C6008 + C93711 * C6426 + C31928 * C3565 + C31828 * C3923) *
               C9602 +
           (C31929 * C5818 + C93711 * C5922 + C31928 * C3409 + C31828 * C3491) *
               C9771 +
           (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
               C9601 +
           (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
               C9770) *
              C93582 * C93635 * C801 +
          ((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
               C9770 +
           (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
               C9601 +
           (C31928 * C5818 + C31828 * C5922 + C31929 * C8615 + C93711 * C8741) *
               C9771 +
           (C31928 * C6008 + C31828 * C6426 + C31929 * C8843 + C93711 * C9413) *
               C9602 +
           (C31928 * C5821 + C31828 * C5924 + C31929 * C38050 +
            C93711 * C38111) *
               C9772 +
           (C31928 * C6011 + C31828 * C6428 + C31929 * C38163 +
            C93711 * C38427) *
               C9603) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C800 -
          ((C4840 * C93711 + C2625 * C31828) * C31827 +
           (C4839 * C93711 + C2626 * C31828) * C31826 +
           (C5741 * C93711 + C5740 * C31828) * C31825) *
              C93635 * C801 +
          ((C5741 * C31828 + C5743 * C93711) * C31825 +
           (C4839 * C31828 + C5742 * C93711) * C31826 +
           (C4840 * C31828 +
            (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C93621 * C97 -
          ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
           (C32568 + C32567) * C31825) *
              C93635 * C93621 * C98 +
          (C32573 * C31825 + (C32572 + C32571) * C31826 +
           (C746 * C31828 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
              C93582 * C93635 * C93621 * C98 +
          (C744 * C36994 + C2625 * C36995 + C4840 * C36996 +
           (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C800 -
          (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 + C5740 * C36994) *
              C93582 * C93635 * C801 +
          (C5741 * C36994 + C5743 * C36995 + C38000 * C36996 +
           (C713 * C37482 + C37997 + C37997 + C93673 * C37993) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C31828 +
           (C10299 * C807 + C11022 + C11022 + C9601 * C1319 + C10300 * C3409 +
            C11021 + C11021 + C9602 * C3993 + C10301 * C5819 + C11020 + C11020 +
            C9603 * C6507) *
               C93711) *
              C93582 * C93635 * C93621 * C97 -
          ((C12910 + C12911 + C12912) * C93711 +
           (C10341 + C10340 + C10339) * C31828) *
              C93582 * C93635 * C93621 * C98 +
          ((C10344 + C10343 + C10342) * C31828 +
           (C10299 * C805 + C12901 + C12901 + C9601 * C1317 + C10300 * C3411 +
            C12902 + C12902 + C9602 * C3995 + C10301 * C12033 + C12903 +
            C12903 + C9603 * C12893) *
               C93711) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10299 * C108 + C10303 + C10303 + C9601 * C714 + C10300 * C1388 +
            C10304 + C10304 + C9602 * C1900 + C10301 * C1389 + C10305 + C10305 +
            C9603 * C1901) *
               C31828 +
           (C41894 + C41895 + C41896) * C93711) *
              C93582 * C93635 * C800 -
          ((C41897 + C41898 + C41899) * C93711 +
           (C41896 + C41895 + C41894) * C31828) *
              C93582 * C93635 * C801 +
          ((C41899 + C41898 + C41897) * C31828 +
           (C10299 * C4917 + C41879 + C41879 + C9601 * C5716 + C10300 * C8615 +
            C41880 + C41880 + C9602 * C9513 + C10301 * C38050 + C41881 +
            C41881 + C9603 * C38478) *
               C93711) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C93819 +
             (C52727 + C52728) * C93737) *
                C31828 +
            ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) *
                C93711) *
               C93635 * C1979 -
           (((C49993 + C49994) * C93737 + (C46559 + C46558) * C93819) * C93711 +
            ((C49995 + C49996) * C93737 + (C46557 + C46556) * C93819) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          ((((C48049 + C48050) * C93819 + (C53709 + C53710) * C93737) * C31828 +
            ((C48051 + C48052) * C93819 +
             (C45719 * C5817 + C49037 + C49037 + C93805 * C5829 +
              C45721 * C7631 + C49038 + C49038 + C93587 * C7633) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C53710 + C53709) * C93737 + (C48050 + C48049) * C93819) * C93711 +
            ((C45721 * C1386 + C49034 + C49034 + C93587 * C1402 +
              C45719 * C1387 + C49033 + C49033 + C93805 * C1403) *
                 C93737 +
             (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
              C45735 + C45735 + C93805 * C121) *
                 C93819) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C91732 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93805 +
             (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
                C93819 +
            ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
             (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
                C93737) *
               C93635 * C1979 -
           (((C53849 + C53850) * C93587 + (C53851 + C53852) * C91722 +
             (C44849 + C44848) * C93805 + (C44847 + C44846) * C91732) *
                C93737 +
            ((C34278 + C34279) * C93587 + (C34280 + C34281) * C91722 +
             (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                 C93805 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C91732) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C34281 + C34280) * C91732 + (C34279 + C34278) * C93805 +
             (C34277 + C34276) * C91722 + (C34275 + C34274) * C93587) *
                C93819 +
            ((C53852 + C53851) * C91732 + (C53850 + C53849) * C93805 +
             (C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
              C93711 * C7738) *
                 C91722 +
             (C31928 * C3415 + C31828 * C3497 + C31929 * C7632 +
              C93711 * C7739) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C35265 + C35266) * C93587 + (C35267 + C35268) * C91722 +
             (C35269 + C35270) * C93805 + (C35271 + C35272) * C91732) *
                C93737 +
            ((C31962 + C31961) * C93587 + (C31960 + C31959) * C91722 +
             (C31958 + C31957) * C93805 + (C31956 + C31955) * C91732) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C91732 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93805 +
             (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
                C31828 +
            ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
             C28482 * C91722 + C28483 * C93587) *
                C93711) *
               C93635 * C1979 -
           (((C26444 + C26445) * C93587 + (C26446 + C26447) * C91722 +
             (C26448 + C26449) * C93805 + (C26450 + C26451) * C91732) *
                C93711 +
            (C28484 * C93587 + C28485 * C91722 + (C26443 + C26442) * C93805 +
             (C26441 + C26440) * C91732) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          (((C28482 * C91732 + C28483 * C93805 + (C22696 + C22695) * C91722 +
             (C22694 + C22693) * C93587) *
                C31828 +
            ((C26447 + C26446) * C91732 + (C26445 + C26444) * C93805 +
             (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                 C91722 +
             (C20349 * C818 + C93819 * C966 + C20350 * C7632 + C93737 * C7857) *
                 C93587) *
                C93711) *
               C93635 * C1980 -
           (((C22693 + C22694) * C93587 + (C22695 + C22696) * C91722 +
             C28484 * C93805 + C28485 * C91732) *
                C93711 +
            ((C20383 + C20382) * C93587 + (C20381 + C20380) * C91722 +
             (C20379 + C20378) * C93805 + (C20377 + C20376) * C91732) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C31928 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C31828 +
             (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
                C93819 +
            ((C53051 + C53052) * C31928 + (C53053 + C53054) * C31828 +
             (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
                C93737) *
               C93635 * C1979 -
           (((C50315 + C50316) * C93711 + (C50317 + C50318) * C31929 +
             (C50319 + C50320) * C31828 + (C50321 + C50322) * C31928) *
                C93737 +
            ((C46832 + C46831) * C93711 + (C46830 + C46829) * C31929 +
             (C46828 + C46827) * C31828 + (C46826 + C46825) * C31928) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C31928 + (C48391 + C48392) * C31828 +
             (C48393 + C48394) * C31929 + (C48395 + C48396) * C93711) *
                C93819 +
            ((C54121 + C54122) * C31928 + (C54123 + C54124) * C31828 +
             (C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
              C93587 * C7632) *
                 C31929 +
             (C91732 * C5921 + C93805 * C6093 + C91722 * C7738 +
              C93587 * C7968) *
                 C93711) *
                C93737) *
               C93635 * C1980 -
           (((C54124 + C54123) * C93711 + (C54122 + C54121) * C31929 +
             (C91722 * C1468 + C93587 * C1600 + C91732 * C1469 +
              C93805 * C1601) *
                 C31828 +
             (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
              C93805 * C1395) *
                 C31928) *
                C93737 +
            ((C48392 + C48391) * C93711 + (C48390 + C48389) * C31929 +
             (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C31828 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C31928) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
              C32194 + C32194 + C93711 * C1079) *
                 C93805 +
             (C32227 + C32228) * C93587) *
                C93819 +
            ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) *
                C93737) *
               C93635 * C1979 -
           (((C54263 + C54264) * C93587 + (C45197 + C45196) * C93805) * C93737 +
            ((C34620 + C34621) * C93587 +
             (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
              C33033 + C33033 + C31828 * C1079) *
                 C93805) *
                C93819) *
               C93635 * C1980) *
              C1981 +
          ((((C34621 + C34620) * C93805 + (C34619 + C34618) * C93587) * C93819 +
            ((C54264 + C54263) * C93805 +
             (C32190 * C3411 + C36541 + C36541 + C31828 * C3711 +
              C32191 * C7631 + C36542 + C36542 + C93711 * C8067) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C35585 + C35586) * C93587 + (C35587 + C35588) * C93805) * C93737 +
            ((C32230 + C32229) * C93587 + (C32228 + C32227) * C93805) *
                C93819) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C31928 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C31828 +
             (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
                C93805 +
            ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
             C28482 * C31929 + C28898 * C93711) *
                C93587) *
               C93635 * C1979 -
           (((C26764 + C26765) * C93711 + (C26446 + C26447) * C31929 +
             C28899 * C31828 + C28485 * C31928) *
                C93587 +
            ((C26766 + C26767) * C93711 + (C26450 + C26451) * C31929 +
             (C26763 + C26762) * C31828 + (C26441 + C26440) * C31928) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C28482 * C31928 + C28898 * C31828 + (C26447 + C26446) * C31929 +
             (C26765 + C26764) * C93711) *
                C93805 +
            ((C22696 + C22695) * C31928 + (C23009 + C23008) * C31828 +
             (C20349 * C810 + C93819 * C958 + C20350 * C7631 + C93737 * C7856) *
                 C31929 +
             (C20349 * C892 + C93819 * C1148 + C20350 * C7738 +
              C93737 * C8184) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C23008 + C23009) * C93711 + (C22695 + C22696) * C31929 +
             (C20628 + C20627) * C31828 + (C20381 + C20380) * C31928) *
                C93587 +
            (C28899 * C93711 + C28485 * C31929 + (C20626 + C20625) * C31828 +
             (C20377 + C20376) * C31928) *
                C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C20349 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93819 +
             (C53051 + C53052) * C20350 + (C53369 + C53370) * C93737) *
                C31828 +
            ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
             (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
                C93711) *
               C93635 * C1979 -
           (((C50631 + C50632) * C93737 + (C50317 + C50318) * C20350 +
             (C47089 + C47088) * C93819 + (C46830 + C46829) * C20349) *
                C93711 +
            ((C50633 + C50634) * C93737 + (C50321 + C50322) * C20350 +
             (C47087 + C47086) * C93819 + (C46826 + C46825) * C20349) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C20349 + (C48723 + C48724) * C93819 +
             (C54121 + C54122) * C20350 + (C54529 + C54530) * C93737) *
                C31828 +
            ((C48393 + C48394) * C20349 + (C48725 + C48726) * C93819 +
             (C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
              C93587 * C7632) *
                 C20350 +
             (C91732 * C6007 + C93805 * C6345 + C91722 * C7856 +
              C93587 * C8295) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C54530 + C54529) * C93737 + (C54122 + C54121) * C20350 +
             (C48724 + C48723) * C93819 + (C48390 + C48389) * C20349) *
                C93711 +
            ((C91722 * C1534 + C93587 * C1782 + C91732 * C1535 +
              C93805 * C1783) *
                 C93737 +
             (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
              C93805 * C1395) *
                 C20350 +
             (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C93819 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C20349) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C20349 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93819 +
             (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
                C93805 +
            ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
             (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
                C93587) *
               C93635 * C1979 -
           (((C54665 + C54666) * C93737 + (C53851 + C53852) * C20350 +
             (C34943 + C34944) * C93819 + (C34280 + C34281) * C20349) *
                C93587 +
            ((C45521 + C45520) * C93737 + (C44847 + C44846) * C20350 +
             (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93819 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C20349) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          ((((C34281 + C34280) * C20349 + (C34944 + C34943) * C93819 +
             (C53852 + C53851) * C20350 + (C54666 + C54665) * C93737) *
                C93805 +
            ((C34277 + C34276) * C20349 + (C34942 + C34941) * C93819 +
             (C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
              C93711 * C7738) *
                 C20350 +
             (C31928 * C3567 + C31828 * C3925 + C31929 * C7856 +
              C93711 * C8394) *
                 C93737) *
                C93587) *
               C93635 * C1980 -
           (((C35899 + C35900) * C93737 + (C35267 + C35268) * C20350 +
             (C32487 + C32486) * C93819 + (C31960 + C31959) * C20349) *
                C93587 +
            ((C35901 + C35902) * C93737 + (C35271 + C35272) * C20350 +
             (C32485 + C32484) * C93819 + (C31956 + C31955) * C20349) *
                C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C31828 +
             (C27090 + C27091) * C93711) *
                C93805 +
            ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
               C93635 * C1979 -
           (((C27092 + C27093) * C93711 + C29303 * C31828) * C93587 +
            ((C27094 + C27095) * C93711 + (C27091 + C27090) * C31828) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C29302 * C31828 + (C27093 + C27092) * C93711) * C93805 +
            ((C23336 + C23335) * C31828 +
             (C20870 * C810 + C21592 + C21592 + C93819 * C1322 +
              C20871 * C7631 + C21593 + C21593 + C93737 * C8502) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C23335 + C23336) * C93711 + (C20910 + C20909) * C31828) * C93587 +
            (C29303 * C93711 + (C20908 + C20907) * C31828) * C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C93819 +
             (C52727 + C52728) * C93737) *
                C31828 +
            ((C46556 + C46557) * C93819 + C56137 * C93737) * C93711) *
               C2695 -
           (((C52729 + C52730) * C93737 + C56138 * C93819) * C93711 +
            ((C52731 + C52732) * C93737 + (C52728 + C52727) * C93819) *
                C31828) *
               C2696) *
              C1979 +
          (((C56137 * C93819 + (C52730 + C52729) * C93737) * C31828 +
            ((C49994 + C49993) * C93819 +
             (C45719 * C5821 + C47327 + C47327 + C93805 * C5833 +
              C45721 * C5822 + C47328 + C47328 + C93587 * C5834) *
                 C93737) *
                C93711) *
               C2696 -
           (((C49993 + C49994) * C93737 + (C46559 + C46558) * C93819) * C93711 +
            (C56138 * C93737 + (C46557 + C46556) * C93819) * C31828) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C91732 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93805 +
             (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
                C93819 +
            ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
             C55071 * C91722 + C55072 * C93587) *
                C93737) *
               C2695 -
           (((C43894 + C43893) * C93587 + (C43892 + C43891) * C91722 +
             (C42108 + C42107) * C93805 + (C42106 + C42105) * C91732) *
                C93737 +
            (C55073 * C93587 + C55074 * C91722 + (C42104 + C42103) * C93805 +
             (C42102 + C42101) * C91732) *
                C93819) *
               C2696) *
              C1979 +
          ((((C44846 + C44847) * C91732 + (C44848 + C44849) * C93805 +
             (C53852 + C53851) * C91722 + (C53850 + C53849) * C93587) *
                C93819 +
            ((C44850 + C44851) * C91732 + (C44852 + C44853) * C93805 +
             (C31928 * C5820 + C31828 * C5925 + C31929 * C5822 +
              C93711 * C5926) *
                 C91722 +
             (C31928 * C5826 + C31828 * C5931 + C31929 * C5828 +
              C93711 * C5932) *
                 C93587) *
                C93737) *
               C2696 -
           (((C53849 + C53850) * C93587 + (C53851 + C53852) * C91722 +
             (C44849 + C44848) * C93805 + (C44847 + C44846) * C91732) *
                C93737 +
            ((C34278 + C34279) * C93587 + (C34280 + C34281) * C91722 +
             (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                 C93805 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C91732) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C91732 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93805 +
             (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
                C31828 +
            ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
             C28482 * C91722 + C28483 * C93587) *
                C93711) *
               C2695 -
           (((C29706 + C29707) * C93587 + (C29708 + C29709) * C91722 +
             (C30922 + C30923) * C93805 + (C30924 + C30925) * C91732) *
                C93711 +
            ((C23677 + C23678) * C93587 + (C23679 + C23680) * C91722 +
             (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C93805 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C91732) *
                C31828) *
               C2696) *
              C1979 +
          ((((C30925 + C30924) * C91732 + (C30923 + C30922) * C93805 +
             (C29709 + C29708) * C91722 + (C29707 + C29706) * C93587) *
                C31828 +
            ((C20349 * C5818 + C93819 * C6008 + C20350 * C5821 +
              C93737 * C6011) *
                 C91732 +
             (C20349 * C5824 + C93819 * C6014 + C20350 * C5827 +
              C93737 * C6017) *
                 C93805 +
             (C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
              C93737 * C6012) *
                 C91722 +
             (C20349 * C5823 + C93819 * C6013 + C20350 * C5828 +
              C93737 * C6018) *
                 C93587) *
                C93711) *
               C2696 -
           (((C26444 + C26445) * C93587 + (C26446 + C26447) * C91722 +
             (C26448 + C26449) * C93805 + (C26450 + C26451) * C91732) *
                C93711 +
            (C28484 * C93587 + C28485 * C91722 + (C26443 + C26442) * C93805 +
             (C26441 + C26440) * C91732) *
                C31828) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C31928 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C31828 +
             (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
                C93819 +
            ((C53051 + C53052) * C31928 + (C53053 + C53054) * C31828 +
             C56529 * C31929 + C56530 * C93711) *
                C93737) *
               C2695 -
           (((C53055 + C53056) * C93711 + (C53057 + C53058) * C31929 +
             (C53059 + C53060) * C31828 + (C53061 + C53062) * C31928) *
                C93737 +
            (C56531 * C93711 + C56532 * C31929 + (C53054 + C53053) * C31828 +
             (C53052 + C53051) * C31928) *
                C93819) *
               C2696) *
              C1979 +
          (((C56529 * C31928 + C56530 * C31828 + (C50318 + C50317) * C31929 +
             (C50316 + C50315) * C93711) *
                C93819 +
            ((C53058 + C53057) * C31928 + (C53056 + C53055) * C31828 +
             (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
              C93587 * C5828) *
                 C31929 +
             (C91732 * C5924 + C93805 * C6097 + C91722 * C5926 +
              C93587 * C6098) *
                 C93711) *
                C93737) *
               C2696 -
           (((C50315 + C50316) * C93711 + (C50317 + C50318) * C31929 +
             C56531 * C31828 + C56532 * C31928) *
                C93737 +
            ((C46832 + C46831) * C93711 + (C46830 + C46829) * C31929 +
             (C46828 + C46827) * C31828 + (C46826 + C46825) * C31928) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
              C32194 + C32194 + C93711 * C1079) *
                 C93805 +
             (C32227 + C32228) * C93587) *
                C93819 +
            ((C42411 + C42412) * C93805 + C55477 * C93587) * C93737) *
               C2695 -
           (((C44220 + C44219) * C93587 + (C42414 + C42413) * C93805) * C93737 +
            (C55478 * C93587 + (C42412 + C42411) * C93805) * C93819) *
               C2696) *
              C1979 +
          ((((C45196 + C45197) * C93805 + (C54264 + C54263) * C93587) * C93819 +
            ((C45198 + C45199) * C93805 +
             (C32190 * C5820 + C43269 + C43269 + C31828 * C6177 +
              C32191 * C5822 + C43270 + C43270 + C93711 * C6178) *
                 C93587) *
                C93737) *
               C2696 -
           (((C54263 + C54264) * C93587 + (C45197 + C45196) * C93805) * C93737 +
            ((C34620 + C34621) * C93587 +
             (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
              C33033 + C33033 + C31828 * C1079) *
                 C93805) *
                C93819) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C31928 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C31828 +
             (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
                C93805 +
            ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
             C28482 * C31929 + C28898 * C93711) *
                C93587) *
               C2695 -
           (((C30106 + C30107) * C93711 + (C29708 + C29709) * C31929 +
             (C24006 + C24007) * C31828 + (C23679 + C23680) * C31928) *
                C93587 +
            ((C31338 + C31339) * C93711 + (C30924 + C30925) * C31929 +
             (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C31828 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C31928) *
                C93805) *
               C2696) *
              C1979 +
          ((((C30925 + C30924) * C31928 + (C31339 + C31338) * C31828 +
             (C20349 * C5818 + C93819 * C6008 + C20350 * C5821 +
              C93737 * C6011) *
                 C31929 +
             (C20349 * C5922 + C93819 * C6266 + C20350 * C5924 +
              C93737 * C6268) *
                 C93711) *
                C93805 +
            ((C29709 + C29708) * C31928 + (C30107 + C30106) * C31828 +
             (C20349 * C5817 + C93819 * C6007 + C20350 * C5822 +
              C93737 * C6012) *
                 C31929 +
             (C20349 * C5921 + C93819 * C6265 + C20350 * C5926 +
              C93737 * C6270) *
                 C93711) *
                C93587) *
               C2696 -
           (((C26764 + C26765) * C93711 + (C26446 + C26447) * C31929 +
             C28899 * C31828 + C28485 * C31928) *
                C93587 +
            ((C26766 + C26767) * C93711 + (C26450 + C26451) * C31929 +
             (C26763 + C26762) * C31828 + (C26441 + C26440) * C31928) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C20349 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93819 +
             (C53051 + C53052) * C20350 + (C53369 + C53370) * C93737) *
                C31828 +
            ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
             C56529 * C20350 + C56923 * C93737) *
                C93711) *
               C2695 -
           (((C53371 + C53372) * C93737 + (C53057 + C53058) * C20350 +
             C56924 * C93819 + C56532 * C20349) *
                C93711 +
            ((C53373 + C53374) * C93737 + (C53061 + C53062) * C20350 +
             (C53370 + C53369) * C93819 + (C53052 + C53051) * C20349) *
                C31828) *
               C2696) *
              C1979 +
          (((C56529 * C20349 + C56923 * C93819 + (C53058 + C53057) * C20350 +
             (C53372 + C53371) * C93737) *
                C31828 +
            ((C50318 + C50317) * C20349 + (C50632 + C50631) * C93819 +
             (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
              C93587 * C5828) *
                 C20350 +
             (C91732 * C6011 + C93805 * C6349 + C91722 * C6012 +
              C93587 * C6350) *
                 C93737) *
                C93711) *
               C2696 -
           (((C50631 + C50632) * C93737 + (C50317 + C50318) * C20350 +
             (C47089 + C47088) * C93819 + (C46830 + C46829) * C20349) *
                C93711 +
            (C56924 * C93737 + C56532 * C20350 + (C47087 + C47086) * C93819 +
             (C46826 + C46825) * C20349) *
                C31828) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C20349 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93819 +
             (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
                C93805 +
            ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
             C55071 * C20350 + C55875 * C93737) *
                C93587) *
               C2695 -
           (((C44526 + C44525) * C93737 + (C43892 + C43891) * C20350 +
             C55876 * C93819 + C55074 * C20349) *
                C93587 +
            ((C42671 + C42670) * C93737 + (C42106 + C42105) * C20350 +
             (C42669 + C42668) * C93819 + (C42102 + C42101) * C20349) *
                C93805) *
               C2696) *
              C1979 +
          ((((C44846 + C44847) * C20349 + (C45520 + C45521) * C93819 +
             (C44850 + C44851) * C20350 + (C45522 + C45523) * C93737) *
                C93805 +
            ((C53852 + C53851) * C20349 + (C54666 + C54665) * C93819 +
             (C31928 * C5820 + C31828 * C5925 + C31929 * C5822 +
              C93711 * C5926) *
                 C20350 +
             (C31928 * C6010 + C31828 * C6429 + C31929 * C6012 +
              C93711 * C6430) *
                 C93737) *
                C93587) *
               C2696 -
           (((C54665 + C54666) * C93737 + (C53851 + C53852) * C20350 +
             (C34943 + C34944) * C93819 + (C34280 + C34281) * C20349) *
                C93587 +
            ((C45521 + C45520) * C93737 + (C44847 + C44846) * C20350 +
             (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93819 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C20349) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C31828 +
             (C27090 + C27091) * C93711) *
                C93805 +
            ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
               C2695 -
           (((C30508 + C30509) * C93711 + (C24339 + C24340) * C31828) * C93587 +
            ((C31750 + C31751) * C93711 +
             (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
              C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                 C31828) *
                C93805) *
               C2696) *
              C1979 +
          ((((C31751 + C31750) * C31828 +
             (C20870 * C5818 + C31742 + C31742 + C93819 * C6506 +
              C20871 * C5821 + C31743 + C31743 + C93737 * C6508) *
                 C93711) *
                C93805 +
            ((C30509 + C30508) * C31828 +
             (C20870 * C5817 + C31744 + C31744 + C93819 * C6505 +
              C20871 * C5822 + C31745 + C31745 + C93737 * C6510) *
                 C93711) *
                C93587) *
               C2696 -
           (((C27092 + C27093) * C93711 + C29303 * C31828) * C93587 +
            ((C27094 + C27095) * C93711 + (C27091 + C27090) * C31828) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C93819 +
            (C45719 * C1388 + C47322 + C47322 + C93805 * C1404 +
             C45721 * C1387 + C47321 + C47321 + C93587 * C1403) *
                C93737) *
               C31828 +
           ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) * C93711) *
              C93635 * C800 -
          (((C49993 + C49994) * C93737 + (C46559 + C46558) * C93819) * C93711 +
           ((C49995 + C49996) * C93737 + (C46557 + C46556) * C93819) * C31828) *
              C93635 * C801 +
          ((C46562 * C93819 + (C49994 + C49993) * C93737) * C31828 +
           ((C46561 + C46560) * C93819 +
            (C45719 * C8615 + C49983 + C49983 + C93805 * C8619 +
             C45721 * C8616 + C49984 + C49984 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C93819 +
            (C45719 * C1388 + C47322 + C47322 + C93805 * C1404 +
             C45721 * C1387 + C47321 + C47321 + C93587 * C1403) *
                C93737) *
               C31828 +
           ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C45721 * C3411 + C49036 + C49036 + C93587 * C3419 +
             C45719 * C3410 + C49035 + C49035 + C93805 * C3418) *
                C93737 +
            (C48050 + C48049) * C93819) *
               C93711 +
           ((C45721 * C1386 + C49034 + C49034 + C93587 * C1402 +
             C45719 * C1387 + C49033 + C49033 + C93805 * C1403) *
                C93737 +
            (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
             C45735 + C45735 + C93805 * C121) *
                C93819) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C45719 * C110 + C45736 + C45736 + C93805 * C122 + C45721 * C111 +
             C45737 + C45737 + C93587 * C123) *
                C93819 +
            (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
             C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                C93737) *
               C31828 +
           ((C45719 * C805 + C45738 + C45738 + C93805 * C821 + C45721 * C804 +
             C45739 + C45739 + C93587 * C820) *
                C93819 +
            (C45719 * C3411 + C50931 + C50931 + C93805 * C3419 +
             C45721 * C3412 + C50932 + C50932 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C93819 +
            (C52727 + C52728) * C93737) *
               C31828 +
           ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) * C93711) *
              C1382 -
          (((C52729 + C52730) * C93737 + (C49995 + C49996) * C93819) * C93711 +
           ((C52731 + C52732) * C93737 + (C52728 + C52727) * C93819) * C31828) *
              C1383 +
          (((C52732 + C52731) * C93819 +
            (C45719 * C11103 + C52711 + C52711 + C93805 * C11111 +
             C45721 * C11102 + C52712 + C52712 + C93587 * C11110) *
                C93737) *
               C31828 +
           ((C52730 + C52729) * C93819 +
            (C45719 * C14027 + C52713 + C52713 + C93805 * C14031 +
             C45721 * C14028 + C52714 + C52714 + C93587 * C14032) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C91732 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93805 +
            (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
               C93819 +
           ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
            (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C31929 * C5823 + C93711 * C5927 + C31928 * C3414 +
             C31828 * C3496) *
                C93587 +
            (C31929 * C5817 + C93711 * C5921 + C31928 * C3410 +
             C31828 * C3492) *
                C91722 +
            (C44849 + C44848) * C93805 + (C44847 + C44846) * C91732) *
               C93737 +
           ((C34278 + C34279) * C93587 + (C34280 + C34281) * C91722 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C93805 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C91732) *
               C93819) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C91732 +
            (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
                C93805 +
            (C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C91722 +
            (C31928 * C817 + C31828 * C899 + C31929 * C4920 + C93711 * C5042) *
                C93587) *
               C93819 +
           ((C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C91732 +
            (C31928 * C5824 + C31828 * C5928 + C31929 * C8617 +
             C93711 * C8743) *
                C93805 +
            (C31928 * C5817 + C31828 * C5921 + C31929 * C8616 +
             C93711 * C8742) *
                C91722 +
            (C31928 * C5823 + C31828 * C5927 + C31929 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C91732 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93805 +
            (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
               C93819 +
           ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
            (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C35265 + C35266) * C93587 + (C35267 + C35268) * C91722 +
            (C35269 + C35270) * C93805 + (C35271 + C35272) * C91732) *
               C93737 +
           ((C31962 + C31961) * C93587 + (C31960 + C31959) * C91722 +
            (C31958 + C31957) * C93805 + (C31956 + C31955) * C91732) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C31967 * C91732 + C31968 * C93805 + (C31966 + C31965) * C91722 +
            (C31964 + C31963) * C93587) *
               C93819 +
           ((C35268 + C35267) * C91732 + (C35266 + C35265) * C93805 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C91722 +
            (C31928 * C1393 + C31828 * C1475 + C31929 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C91732 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93805 +
            (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
               C93819 +
           ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
            (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
               C93737) *
              C1382 -
          (((C43894 + C43893) * C93587 + (C43892 + C43891) * C91722 +
            (C42108 + C42107) * C93805 + (C42106 + C42105) * C91732) *
               C93737 +
           ((C35269 + C35270) * C93587 + (C35271 + C35272) * C91722 +
            (C42104 + C42103) * C93805 + (C42102 + C42101) * C91732) *
               C93819) *
              C1383 +
          ((C42113 * C91732 + C42114 * C93805 + (C43891 + C43892) * C91722 +
            (C43893 + C43894) * C93587) *
               C93819 +
           ((C42112 + C42111) * C91732 + (C42110 + C42109) * C93805 +
            (C31928 * C11102 + C31828 * C11223 + C31929 * C14028 +
             C93711 * C14144) *
                C91722 +
            (C31928 * C11106 + C31828 * C11227 + C31929 * C14030 +
             C93711 * C14146) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C91732 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93805 +
            (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
               C31828 +
           ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
            C28482 * C91722 + C28483 * C93587) *
               C93711) *
              C93635 * C800 -
          (((C26444 + C26445) * C93587 + (C26446 + C26447) * C91722 +
            (C26448 + C26449) * C93805 + (C26450 + C26451) * C91732) *
               C93711 +
           (C28484 * C93587 + C28485 * C91722 + (C26443 + C26442) * C93805 +
            (C26441 + C26440) * C91732) *
               C31828) *
              C93635 * C801 +
          (((C26451 + C26450) * C91732 + (C26449 + C26448) * C93805 +
            (C26447 + C26446) * C91722 + (C26445 + C26444) * C93587) *
               C31828 +
           ((C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C91732 +
            (C20349 * C4921 + C93819 * C5125 + C20350 * C8617 +
             C93737 * C8845) *
                C93805 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C91722 +
            (C20349 * C4920 + C93819 * C5124 + C20350 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C91732 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93805 +
            (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
               C31828 +
           ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
            C28482 * C91722 + C28483 * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C22693 + C22694) * C93587 + (C22695 + C22696) * C91722 +
            C28484 * C93805 + C28485 * C91732) *
               C93711 +
           ((C20383 + C20382) * C93587 + (C20381 + C20380) * C91722 +
            (C20379 + C20378) * C93805 + (C20377 + C20376) * C91732) *
               C31828) *
              C93635 * C93621 * C98 +
          ((C20388 * C91732 + C20389 * C93805 + (C20387 + C20386) * C91722 +
            (C20385 + C20384) * C93587) *
               C31828 +
           ((C22696 + C22695) * C91732 + (C22694 + C22693) * C93805 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C91722 +
            (C20349 * C812 + C93819 * C960 + C20350 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C91732 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93805 +
            (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
               C31828 +
           ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
            C28482 * C91722 + C28483 * C93587) *
               C93711) *
              C1382 -
          (((C29706 + C29707) * C93587 + (C29708 + C29709) * C91722 +
            (C30922 + C30923) * C93805 + (C30924 + C30925) * C91732) *
               C93711 +
           ((C23677 + C23678) * C93587 + (C23679 + C23680) * C91722 +
            (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
             C93819 * C1544) *
                C93805 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C91732) *
               C31828) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C91732 +
            (C20349 * C1397 + C93819 * C1545 + C20350 * C11107 +
             C93737 * C11349) *
                C93805 +
            (C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
             C93737 * C11344) *
                C91722 +
            (C20349 * C1398 + C93819 * C1546 + C20350 * C11106 +
             C93737 * C11348) *
                C93587) *
               C31828 +
           ((C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
             C93737 * C14265) *
                C91732 +
            (C20349 * C5825 + C93819 * C6015 + C20350 * C14029 +
             C93737 * C14267) *
                C93805 +
            (C20349 * C5820 + C93819 * C6010 + C20350 * C14028 +
             C93737 * C14266) *
                C91722 +
            (C20349 * C5826 + C93819 * C6016 + C20350 * C14030 +
             C93737 * C14268) *
                C93587) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C31928 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C31828 +
            (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
               C93819 +
           ((C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C31928 +
            (C91732 * C1470 + C93805 * C1602 + C91722 * C1469 +
             C93587 * C1601) *
                C31828 +
            (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
               C93737) *
              C93635 * C800 -
          (((C50315 + C50316) * C93711 + (C50317 + C50318) * C31929 +
            (C50319 + C50320) * C31828 + (C50321 + C50322) * C31928) *
               C93737 +
           ((C46832 + C46831) * C93711 + (C46830 + C46829) * C31929 +
            (C46828 + C46827) * C31828 + (C46826 + C46825) * C31928) *
               C93819) *
              C93635 * C801 +
          ((C46837 * C31928 + C46838 * C31828 + (C46836 + C46835) * C31929 +
            (C46834 + C46833) * C93711) *
               C93819 +
           ((C50318 + C50317) * C31928 + (C50316 + C50315) * C31828 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C31929 +
            (C91732 * C8741 + C93805 * C8965 + C91722 * C8742 +
             C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C31928 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C31828 +
            (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
               C93819 +
           ((C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C31928 +
            (C91732 * C1470 + C93805 * C1602 + C91722 * C1469 +
             C93587 * C1601) *
                C31828 +
            (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C91722 * C3493 + C93587 * C3641 + C91732 * C3492 +
             C93805 * C3640) *
                C93711 +
            (C91722 * C3411 + C93587 * C3415 + C91732 * C3410 +
             C93805 * C3414) *
                C31929 +
            (C91722 * C1468 + C93587 * C1600 + C91732 * C1469 +
             C93805 * C1601) *
                C31828 +
            (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
             C93805 * C1395) *
                C31928) *
               C93737 +
           ((C48392 + C48391) * C93711 + (C48390 + C48389) * C31929 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C31828 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C31928) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C31928 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C31828 +
            (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C31929 +
            (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
                C93711) *
               C93819 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C31928 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C31828 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C31929 +
            (C91732 * C3493 + C93805 * C3641 + C91722 * C3494 +
             C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C31928 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C31828 +
            (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
               C93819 +
           ((C53051 + C53052) * C31928 + (C53053 + C53054) * C31828 +
            (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
               C93737) *
              C1382 -
          (((C53055 + C53056) * C93711 + (C53057 + C53058) * C31929 +
            (C53059 + C53060) * C31828 + (C53061 + C53062) * C31928) *
               C93737 +
           ((C50319 + C50320) * C93711 + (C50321 + C50322) * C31929 +
            (C53054 + C53053) * C31828 + (C53052 + C53051) * C31928) *
               C93819) *
              C1383 +
          (((C53062 + C53061) * C31928 + (C53060 + C53059) * C31828 +
            (C53058 + C53057) * C31929 + (C53056 + C53055) * C93711) *
               C93819 +
           ((C91732 * C11103 + C93805 * C11107 + C91722 * C11102 +
             C93587 * C11106) *
                C31928 +
            (C91732 * C11224 + C93805 * C11427 + C91722 * C11223 +
             C93587 * C11426) *
                C31828 +
            (C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
             C93587 * C14030) *
                C31929 +
            (C91732 * C14143 + C93805 * C14367 + C91722 * C14144 +
             C93587 * C14368) *
                C93711) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93805 +
            (C32227 + C32228) * C93587) *
               C93819 +
           ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) * C93737) *
              C93635 * C800 -
          (((C32191 * C5817 + C36540 + C36540 + C93711 * C6173 +
             C32190 * C3410 + C36539 + C36539 + C31828 * C3710) *
                C93587 +
            (C45197 + C45196) * C93805) *
               C93737 +
           ((C34620 + C34621) * C93587 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C93805) *
               C93819) *
              C93635 * C801 +
          (((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
             C33035 + C33035 + C93711 * C5358) *
                C93805 +
            (C32190 * C809 + C33036 + C33036 + C31828 * C1081 + C32191 * C4916 +
             C33037 + C33037 + C93711 * C5357) *
                C93587) *
               C93819 +
           ((C32190 * C5818 + C41531 + C41531 + C31828 * C6174 +
             C32191 * C8615 + C41532 + C41532 + C93711 * C9089) *
                C93805 +
            (C32190 * C5817 + C52207 + C52207 + C31828 * C6173 +
             C32191 * C8616 + C52208 + C52208 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93805 +
            (C32227 + C32228) * C93587) *
               C93819 +
           ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) * C93737) *
              C93635 * C93621 * C97 -
          (((C35585 + C35586) * C93587 + (C35587 + C35588) * C93805) * C93737 +
           ((C32230 + C32229) * C93587 + (C32228 + C32227) * C93805) * C93819) *
              C93635 * C93621 * C98 +
          ((C32233 * C93805 + (C32232 + C32231) * C93587) * C93819 +
           ((C35586 + C35585) * C93805 +
            (C32190 * C1385 + C35575 + C35575 + C31828 * C1657 +
             C32191 * C3412 + C35576 + C35576 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93805 +
            (C32227 + C32228) * C93587) *
               C93819 +
           ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) * C93737) *
              C1382 -
          (((C44220 + C44219) * C93587 + (C42414 + C42413) * C93805) * C93737 +
           ((C35587 + C35588) * C93587 + (C42412 + C42411) * C93805) * C93819) *
              C1383 +
          ((C42417 * C93805 + (C44219 + C44220) * C93587) * C93819 +
           ((C42416 + C42415) * C93805 +
            (C32190 * C11102 + C44213 + C44213 + C31828 * C11545 +
             C32191 * C14028 + C44214 + C44214 + C93711 * C14480) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C31928 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C31828 +
            (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
               C93805 +
           ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
            C28482 * C31929 + C28898 * C93711) *
               C93587) *
              C93635 * C800 -
          (((C26764 + C26765) * C93711 + (C26446 + C26447) * C31929 +
            C28899 * C31828 + C28485 * C31928) *
               C93587 +
           ((C26766 + C26767) * C93711 + (C26450 + C26451) * C31929 +
            (C26763 + C26762) * C31828 + (C26441 + C26440) * C31928) *
               C93805) *
              C93635 * C801 +
          (((C26451 + C26450) * C31928 + (C26767 + C26766) * C31828 +
            (C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C31929 +
            (C20349 * C5039 + C93819 * C5448 + C20350 * C8741 +
             C93737 * C9195) *
                C93711) *
               C93805 +
           ((C26447 + C26446) * C31928 + (C26765 + C26764) * C31828 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C31929 +
            (C20349 * C5038 + C93819 * C5447 + C20350 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C31928 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C31828 +
            (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
               C93805 +
           ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
            C28482 * C31929 + C28898 * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C23008 + C23009) * C93711 + (C22695 + C22696) * C31929 +
            (C20628 + C20627) * C31828 + (C20381 + C20380) * C31928) *
               C93587 +
           (C28899 * C93711 + C28485 * C31929 + (C20626 + C20625) * C31828 +
            (C20377 + C20376) * C31928) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C20388 * C31928 + C20631 * C31828 + (C22696 + C22695) * C31929 +
            (C23009 + C23008) * C93711) *
               C93805 +
           ((C20387 + C20386) * C31928 + (C20630 + C20629) * C31828 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C31929 +
            (C20349 * C886 + C93819 * C1142 + C20350 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C31928 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C31828 +
            (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
               C93805 +
           ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
            C28482 * C31929 + C28898 * C93711) *
               C93587) *
              C1382 -
          (((C30106 + C30107) * C93711 + (C29708 + C29709) * C31929 +
            (C24006 + C24007) * C31828 + (C23679 + C23680) * C31928) *
               C93587 +
           ((C31338 + C31339) * C93711 + (C30924 + C30925) * C31929 +
            (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
             C93819 * C1726) *
                C31828 +
            (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
             C93819 * C1536) *
                C31928) *
               C93805) *
              C1383 +
          (((C20349 * C1389 + C93819 * C1537 + C20350 * C11103 +
             C93737 * C11345) *
                C31928 +
            (C20349 * C1471 + C93819 * C1727 + C20350 * C11224 +
             C93737 * C11655) *
                C31828 +
            (C20349 * C5819 + C93819 * C6009 + C20350 * C14027 +
             C93737 * C14265) *
                C31929 +
            (C20349 * C5923 + C93819 * C6267 + C20350 * C14143 +
             C93737 * C14595) *
                C93711) *
               C93805 +
           ((C20349 * C1390 + C93819 * C1538 + C20350 * C11102 +
             C93737 * C11344) *
                C31928 +
            (C20349 * C1472 + C93819 * C1728 + C20350 * C11223 +
             C93737 * C11654) *
                C31828 +
            (C20349 * C5820 + C93819 * C6010 + C20350 * C14028 +
             C93737 * C14266) *
                C31929 +
            (C20349 * C5925 + C93819 * C6269 + C20350 * C14144 +
             C93737 * C14596) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C20349 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93819 +
            (C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C20350 +
            (C91732 * C1536 + C93805 * C1784 + C91722 * C1535 +
             C93587 * C1783) *
                C93737) *
               C31828 +
           ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
            (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
               C93711) *
              C93635 * C800 -
          (((C50631 + C50632) * C93737 + (C50317 + C50318) * C20350 +
            (C47089 + C47088) * C93819 + (C46830 + C46829) * C20349) *
               C93711 +
           ((C50633 + C50634) * C93737 + (C50321 + C50322) * C20350 +
            (C47087 + C47086) * C93819 + (C46826 + C46825) * C20349) *
               C31828) *
              C93635 * C801 +
          ((C46837 * C20349 + C47092 * C93819 + (C50318 + C50317) * C20350 +
            (C50632 + C50631) * C93737) *
               C31828 +
           ((C46836 + C46835) * C20349 + (C47091 + C47090) * C93819 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C20350 +
            (C91732 * C8843 + C93805 * C9301 + C91722 * C8844 +
             C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C20349 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93819 +
            (C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C20350 +
            (C91732 * C1536 + C93805 * C1784 + C91722 * C1535 +
             C93587 * C1783) *
                C93737) *
               C31828 +
           ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
            (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C91722 * C3567 + C93587 * C3855 + C91732 * C3566 +
             C93805 * C3854) *
                C93737 +
            (C91722 * C3411 + C93587 * C3415 + C91732 * C3410 +
             C93805 * C3414) *
                C20350 +
            (C48724 + C48723) * C93819 + (C48390 + C48389) * C20349) *
               C93711 +
           ((C91722 * C1534 + C93587 * C1782 + C91732 * C1535 +
             C93805 * C1783) *
                C93737 +
            (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
             C93805 * C1395) *
                C20350 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93819 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C20349) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C20349 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C93819 +
            (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C20350 +
            (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 +
             C93587 * C1781) *
                C93737) *
               C31828 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C20349 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C93819 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C20350 +
            (C91732 * C3567 + C93805 * C3855 + C91722 * C3568 +
             C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C20349 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93819 +
            (C53051 + C53052) * C20350 + (C53369 + C53370) * C93737) *
               C31828 +
           ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
            (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
               C93711) *
              C1382 -
          (((C53371 + C53372) * C93737 + (C53057 + C53058) * C20350 +
            (C50633 + C50634) * C93819 + (C50321 + C50322) * C20349) *
               C93711 +
           ((C53373 + C53374) * C93737 + (C53061 + C53062) * C20350 +
            (C53370 + C53369) * C93819 + (C53052 + C53051) * C20349) *
               C31828) *
              C1383 +
          (((C53062 + C53061) * C20349 + (C53374 + C53373) * C93819 +
            (C91732 * C11103 + C93805 * C11107 + C91722 * C11102 +
             C93587 * C11106) *
                C20350 +
            (C91732 * C11345 + C93805 * C11733 + C91722 * C11344 +
             C93587 * C11732) *
                C93737) *
               C31828 +
           ((C53058 + C53057) * C20349 + (C53372 + C53371) * C93819 +
            (C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
             C93587 * C14030) *
                C20350 +
            (C91732 * C14265 + C93805 * C14695 + C91722 * C14266 +
             C93587 * C14696) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C20349 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93819 +
            (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
               C93805 +
           ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
            (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
               C93587) *
              C93635 * C800 -
          (((C31929 * C6007 + C93711 * C6425 + C31928 * C3566 +
             C31828 * C3924) *
                C93737 +
            (C31929 * C5817 + C93711 * C5921 + C31928 * C3410 +
             C31828 * C3492) *
                C20350 +
            (C34943 + C34944) * C93819 + (C34280 + C34281) * C20349) *
               C93587 +
           ((C45521 + C45520) * C93737 + (C44847 + C44846) * C20350 +
            (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C93819 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C20349) *
               C93805) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C20349 +
            (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
                C93819 +
            (C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C20350 +
            (C31928 * C6008 + C31828 * C6426 + C31929 * C8843 +
             C93711 * C9413) *
                C93737) *
               C93805 +
           ((C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C20349 +
            (C31928 * C957 + C31828 * C1263 + C31929 * C5120 + C93711 * C5637) *
                C93819 +
            (C31928 * C5817 + C31828 * C5921 + C31929 * C8616 +
             C93711 * C8742) *
                C20350 +
            (C31928 * C6007 + C31828 * C6425 + C31929 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C20349 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93819 +
            (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
               C93805 +
           ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
            (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C35899 + C35900) * C93737 + (C35267 + C35268) * C20350 +
            (C32487 + C32486) * C93819 + (C31960 + C31959) * C20349) *
               C93587 +
           ((C35901 + C35902) * C93737 + (C35271 + C35272) * C20350 +
            (C32485 + C32484) * C93819 + (C31956 + C31955) * C20349) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C31967 * C20349 + C32490 * C93819 + (C35268 + C35267) * C20350 +
            (C35900 + C35899) * C93737) *
               C93805 +
           ((C31966 + C31965) * C20349 + (C32489 + C32488) * C93819 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C20350 +
            (C31928 * C1533 + C31828 * C1839 + C31929 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C20349 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93819 +
            (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
               C93805 +
           ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
            (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
               C93587) *
              C1382 -
          (((C44526 + C44525) * C93737 + (C43892 + C43891) * C20350 +
            (C35901 + C35902) * C93819 + (C35271 + C35272) * C20349) *
               C93587 +
           ((C42671 + C42670) * C93737 + (C42106 + C42105) * C20350 +
            (C42669 + C42668) * C93819 + (C42102 + C42101) * C20349) *
               C93805) *
              C1383 +
          ((C42113 * C20349 + C42674 * C93819 + (C42112 + C42111) * C20350 +
            (C42673 + C42672) * C93737) *
               C93805 +
           ((C43891 + C43892) * C20349 + (C44525 + C44526) * C93819 +
            (C31928 * C11102 + C31828 * C11223 + C31929 * C14028 +
             C93711 * C14144) *
                C20350 +
            (C31928 * C11344 + C31828 * C11829 + C31929 * C14266 +
             C93711 * C14802) *
                C93737) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C31828 +
            (C27090 + C27091) * C93711) *
               C93805 +
           ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
              C93635 * C800 -
          (((C27092 + C27093) * C93711 + C29303 * C31828) * C93587 +
           ((C27094 + C27095) * C93711 + (C27091 + C27090) * C31828) * C93805) *
              C93635 * C801 +
          (((C27095 + C27094) * C31828 +
            (C20870 * C4917 + C27074 + C27074 + C93819 * C5716 +
             C20871 * C8615 + C27075 + C27075 + C93737 * C9513) *
                C93711) *
               C93805 +
           ((C27093 + C27092) * C31828 +
            (C20870 * C4916 + C27076 + C27076 + C93819 * C5715 +
             C20871 * C8616 + C27077 + C27077 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C31828 +
            (C27090 + C27091) * C93711) *
               C93805 +
           ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C23335 + C23336) * C93711 + (C20910 + C20909) * C31828) * C93587 +
           (C29303 * C93711 + (C20908 + C20907) * C31828) * C93805) *
              C93635 * C93621 * C98 +
          ((C20913 * C31828 + (C23336 + C23335) * C93711) * C93805 +
           ((C20912 + C20911) * C31828 +
            (C20870 * C804 + C23325 + C23325 + C93819 * C1316 + C20871 * C3412 +
             C23326 + C23326 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C31828 +
            (C27090 + C27091) * C93711) *
               C93805 +
           ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
              C1382 -
          (((C30508 + C30509) * C93711 + (C24339 + C24340) * C31828) * C93587 +
           ((C31750 + C31751) * C93711 +
            (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
             C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                C31828) *
               C93805) *
              C1383 +
          (((C20870 * C1389 + C22371 + C22371 + C93819 * C1901 +
             C20871 * C11103 + C22372 + C22372 + C93737 * C11920) *
                C31828 +
            (C20870 * C5819 + C28066 + C28066 + C93819 * C6507 +
             C20871 * C14027 + C28067 + C28067 + C93737 * C14907) *
                C93711) *
               C93805 +
           ((C20870 * C1390 + C22373 + C22373 + C93819 * C1902 +
             C20871 * C11102 + C22374 + C22374 + C93737 * C11919) *
                C31828 +
            (C20870 * C5820 + C28068 + C28068 + C93819 * C6509 +
             C20871 * C14028 + C28069 + C28069 + C93737 * C14908) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C93819 +
             (C52727 + C52728) * C93737) *
                C31828 +
            ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) *
                C93711) *
               C2695 -
           (((C52729 + C52730) * C93737 + (C49995 + C49996) * C93819) * C93711 +
            ((C52731 + C52732) * C93737 + (C52728 + C52727) * C93819) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C54939 + C54940) * C93819 +
             (C45719 * C1390 + C54931 + C54931 + C93805 * C1406 +
              C45721 * C1391 + C54932 + C54932 + C93587 * C1407) *
                 C93737) *
                C31828 +
            ((C53709 + C53710) * C93819 +
             (C45719 * C5820 + C54933 + C54933 + C93805 * C5832 +
              C45721 * C12033 + C54934 + C54934 + C93587 * C12035) *
                 C93737) *
                C93711) *
               C2696 -
           (((C53710 + C53709) * C93737 + (C48050 + C48049) * C93819) * C93711 +
            ((C54940 + C54939) * C93737 +
             (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
              C45735 + C45735 + C93805 * C121) *
                 C93819) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C91732 +
             (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                 C93805 +
             (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
                C93819 +
            ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
             C55071 * C91722 + C55072 * C93587) *
                C93737) *
               C2695 -
           (((C43894 + C43893) * C93587 + (C43892 + C43891) * C91722 +
             (C42108 + C42107) * C93805 + (C42106 + C42105) * C91732) *
                C93737 +
            (C55073 * C93587 + C55074 * C91722 + (C42104 + C42103) * C93805 +
             (C42102 + C42101) * C91732) *
                C93819) *
               C2696) *
              C93621 * C1981 +
          (((C55071 * C91732 + C55072 * C93805 + (C35268 + C35267) * C91722 +
             (C35266 + C35265) * C93587) *
                C93819 +
            ((C43891 + C43892) * C91732 + (C43893 + C43894) * C93805 +
             (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
              C93711 * C12136) *
                 C91722 +
             (C31928 * C1399 + C31828 * C1481 + C31929 * C12034 +
              C93711 * C12137) *
                 C93587) *
                C93737) *
               C2696 -
           (((C35265 + C35266) * C93587 + (C35267 + C35268) * C91722 +
             C55073 * C93805 + C55074 * C91732) *
                C93737 +
            ((C31962 + C31961) * C93587 + (C31960 + C31959) * C91722 +
             (C31958 + C31957) * C93805 + (C31956 + C31955) * C91732) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C91732 +
             (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                 C93805 +
             (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
                C31828 +
            ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
             C28482 * C91722 + C28483 * C93587) *
                C93711) *
               C2695 -
           (((C29706 + C29707) * C93587 + (C29708 + C29709) * C91722 +
             (C30922 + C30923) * C93805 + (C30924 + C30925) * C91732) *
                C93711 +
            ((C23677 + C23678) * C93587 + (C23679 + C23680) * C91722 +
             (C20350 * C1397 + C93737 * C1545 + C20349 * C1396 +
              C93819 * C1544) *
                 C93805 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C91732) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C91732 + (C23678 + C23677) * C93805 +
             (C23676 + C23675) * C91722 + (C23674 + C23673) * C93587) *
                C31828 +
            ((C29709 + C29708) * C91732 + (C29707 + C29706) * C93805 +
             (C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
              C93737 * C12248) *
                 C91722 +
             (C20349 * C3415 + C93819 * C3571 + C20350 * C12034 +
              C93737 * C12249) *
                 C93587) *
                C93711) *
               C2696 -
           (((C22693 + C22694) * C93587 + (C22695 + C22696) * C91722 +
             C28484 * C93805 + C28485 * C91732) *
                C93711 +
            ((C20383 + C20382) * C93587 + (C20381 + C20380) * C91722 +
             (C20379 + C20378) * C93805 + (C20377 + C20376) * C91732) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C31928 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C31828 +
             (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
                C93819 +
            ((C53051 + C53052) * C31928 + (C53053 + C53054) * C31828 +
             (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
                C93737) *
               C2695 -
           (((C53055 + C53056) * C93711 + (C53057 + C53058) * C31929 +
             (C53059 + C53060) * C31828 + (C53061 + C53062) * C31928) *
                C93737 +
            ((C50319 + C50320) * C93711 + (C50321 + C50322) * C31929 +
             (C53054 + C53053) * C31828 + (C53052 + C53051) * C31928) *
                C93819) *
               C2696) *
              C93621 * C1981 +
          ((((C55343 + C55344) * C31928 + (C55345 + C55346) * C31828 +
             (C54121 + C54122) * C31929 + (C54123 + C54124) * C93711) *
                C93819 +
            ((C91732 * C1390 + C93805 * C1398 + C91722 * C1391 +
              C93587 * C1399) *
                 C31928 +
             (C91732 * C1472 + C93805 * C1604 + C91722 * C1473 +
              C93587 * C1605) *
                 C31828 +
             (C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
              C93587 * C12034) *
                 C31929 +
             (C91732 * C5925 + C93805 * C6096 + C91722 * C12136 +
              C93587 * C12366) *
                 C93711) *
                C93737) *
               C2696 -
           (((C54124 + C54123) * C93711 + (C54122 + C54121) * C31929 +
             (C55346 + C55345) * C31828 + (C55344 + C55343) * C31928) *
                C93737 +
            ((C48392 + C48391) * C93711 + (C48390 + C48389) * C31929 +
             (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C31828 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C31928) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
              C32194 + C32194 + C93711 * C1079) *
                 C93805 +
             (C32227 + C32228) * C93587) *
                C93819 +
            ((C42411 + C42412) * C93805 + C55477 * C93587) * C93737) *
               C2695 -
           (((C44220 + C44219) * C93587 + (C42414 + C42413) * C93805) * C93737 +
            (C55478 * C93587 + (C42412 + C42411) * C93805) * C93819) *
               C2696) *
              C93621 * C1981 +
          (((C55477 * C93805 + (C35586 + C35585) * C93587) * C93819 +
            ((C44219 + C44220) * C93805 +
             (C32190 * C1391 + C33746 + C33746 + C31828 * C1663 +
              C32191 * C12033 + C33747 + C33747 + C93711 * C12465) *
                 C93587) *
                C93737) *
               C2696 -
           (((C35585 + C35586) * C93587 + C55478 * C93805) * C93737 +
            ((C32230 + C32229) * C93587 + (C32228 + C32227) * C93805) *
                C93819) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                 C31928 +
             (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                 C31828 +
             (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
                C93805 +
            ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
             C28482 * C31929 + C28898 * C93711) *
                C93587) *
               C2695 -
           (((C30106 + C30107) * C93711 + (C29708 + C29709) * C31929 +
             (C24006 + C24007) * C31828 + (C23679 + C23680) * C31928) *
                C93587 +
            ((C31338 + C31339) * C93711 + (C30924 + C30925) * C31929 +
             (C20350 * C1471 + C93737 * C1727 + C20349 * C1470 +
              C93819 * C1726) *
                 C31828 +
             (C20350 * C1389 + C93737 * C1537 + C20349 * C1388 +
              C93819 * C1536) *
                 C31928) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          ((((C23680 + C23679) * C31928 + (C24007 + C24006) * C31828 +
             (C29709 + C29708) * C31929 + (C30107 + C30106) * C93711) *
                C93805 +
            ((C23676 + C23675) * C31928 + (C24005 + C24004) * C31828 +
             (C20349 * C3411 + C93819 * C3567 + C20350 * C12033 +
              C93737 * C12248) *
                 C31929 +
             (C20349 * C3493 + C93819 * C3785 + C20350 * C12136 +
              C93737 * C12575) *
                 C93711) *
                C93587) *
               C2696 -
           (((C23008 + C23009) * C93711 + (C22695 + C22696) * C31929 +
             (C20628 + C20627) * C31828 + (C20381 + C20380) * C31928) *
                C93587 +
            (C28899 * C93711 + C28485 * C31929 + (C20626 + C20625) * C31828 +
             (C20377 + C20376) * C31928) *
                C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C20349 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C93819 +
             (C53051 + C53052) * C20350 + (C53369 + C53370) * C93737) *
                C31828 +
            ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
             (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
                C93711) *
               C2695 -
           (((C53371 + C53372) * C93737 + (C53057 + C53058) * C20350 +
             (C50633 + C50634) * C93819 + (C50321 + C50322) * C20349) *
                C93711 +
            ((C53373 + C53374) * C93737 + (C53061 + C53062) * C20350 +
             (C53370 + C53369) * C93819 + (C53052 + C53051) * C20349) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C55343 + C55344) * C20349 + (C55743 + C55744) * C93819 +
             (C91732 * C1390 + C93805 * C1398 + C91722 * C1391 +
              C93587 * C1399) *
                 C20350 +
             (C91732 * C1538 + C93805 * C1786 + C91722 * C1539 +
              C93587 * C1787) *
                 C93737) *
                C31828 +
            ((C54121 + C54122) * C20349 + (C54529 + C54530) * C93819 +
             (C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
              C93587 * C12034) *
                 C20350 +
             (C91732 * C6010 + C93805 * C6348 + C91722 * C12248 +
              C93587 * C12683) *
                 C93737) *
                C93711) *
               C2696 -
           (((C54530 + C54529) * C93737 + (C54122 + C54121) * C20350 +
             (C48724 + C48723) * C93819 + (C48390 + C48389) * C20349) *
                C93711 +
            ((C55744 + C55743) * C93737 + (C55344 + C55343) * C20350 +
             (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C93819 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C20349) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C20349 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93819 +
             (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
                C93805 +
            ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
             C55071 * C20350 + C55875 * C93737) *
                C93587) *
               C2695 -
           (((C44526 + C44525) * C93737 + (C43892 + C43891) * C20350 +
             C55876 * C93819 + C55074 * C20349) *
                C93587 +
            ((C42671 + C42670) * C93737 + (C42106 + C42105) * C20350 +
             (C42669 + C42668) * C93819 + (C42102 + C42101) * C20349) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          (((C55071 * C20349 + C55875 * C93819 + (C43891 + C43892) * C20350 +
             (C44525 + C44526) * C93737) *
                C93805 +
            ((C35268 + C35267) * C20349 + (C35900 + C35899) * C93819 +
             (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
              C93711 * C12136) *
                 C20350 +
             (C31928 * C1539 + C31828 * C1845 + C31929 * C12248 +
              C93711 * C12782) *
                 C93737) *
                C93587) *
               C2696 -
           (((C35899 + C35900) * C93737 + (C35267 + C35268) * C20350 +
             (C32487 + C32486) * C93819 + (C31960 + C31959) * C20349) *
                C93587 +
            (C55876 * C93737 + C55074 * C20350 + (C32485 + C32484) * C93819 +
             (C31956 + C31955) * C20349) *
                C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
              C20874 + C20874 + C93737 * C1900) *
                 C31828 +
             (C27090 + C27091) * C93711) *
                C93805 +
            ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
               C2695 -
           (((C30508 + C30509) * C93711 + (C24339 + C24340) * C31828) * C93587 +
            ((C31750 + C31751) * C93711 +
             (C20871 * C1389 + C22369 + C22369 + C93737 * C1901 +
              C20870 * C1388 + C22370 + C22370 + C93819 * C1900) *
                 C31828) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          ((((C24340 + C24339) * C31828 + (C30509 + C30508) * C93711) * C93805 +
            ((C24338 + C24337) * C31828 +
             (C20870 * C3411 + C25236 + C25236 + C93819 * C3995 +
              C20871 * C12033 + C25237 + C25237 + C93737 * C12893) *
                 C93711) *
                C93587) *
               C2696 -
           (((C23335 + C23336) * C93711 + (C20910 + C20909) * C31828) * C93587 +
            (C29303 * C93711 + (C20908 + C20907) * C31828) * C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C93819 +
            (C45719 * C1388 + C47322 + C47322 + C93805 * C1404 +
             C45721 * C1387 + C47321 + C47321 + C93587 * C1403) *
                C93737) *
               C31828 +
           ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C45721 * C3411 + C49036 + C49036 + C93587 * C3419 +
             C45719 * C3410 + C49035 + C49035 + C93805 * C3418) *
                C93737 +
            (C48050 + C48049) * C93819) *
               C93711 +
           ((C45721 * C1386 + C49034 + C49034 + C93587 * C1402 +
             C45719 * C1387 + C49033 + C49033 + C93805 * C1403) *
                C93737 +
            (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
             C45735 + C45735 + C93805 * C121) *
                C93819) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C45719 * C110 + C45736 + C45736 + C93805 * C122 + C45721 * C111 +
             C45737 + C45737 + C93587 * C123) *
                C93819 +
            (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
             C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                C93737) *
               C31828 +
           ((C45719 * C805 + C45738 + C45738 + C93805 * C821 + C45721 * C804 +
             C45739 + C45739 + C93587 * C820) *
                C93819 +
            (C45719 * C3411 + C50931 + C50931 + C93805 * C3419 +
             C45721 * C3412 + C50932 + C50932 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C93819 +
            (C45719 * C1388 + C47322 + C47322 + C93805 * C1404 +
             C45721 * C1387 + C47321 + C47321 + C93587 * C1403) *
                C93737) *
               C31828 +
           ((C46556 + C46557) * C93819 + (C49996 + C49995) * C93737) * C93711) *
              C93635 * C800 -
          (((C49993 + C49994) * C93737 + (C46559 + C46558) * C93819) * C93711 +
           ((C49995 + C49996) * C93737 + (C46557 + C46556) * C93819) * C31828) *
              C93635 * C801 +
          ((C46562 * C93819 + (C49994 + C49993) * C93737) * C31828 +
           ((C46561 + C46560) * C93819 +
            (C45719 * C8615 + C49983 + C49983 + C93805 * C8619 +
             C45721 * C8616 + C49984 + C49984 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C91732 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93805 +
            (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
               C93819 +
           ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
            (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C35265 + C35266) * C93587 + (C35267 + C35268) * C91722 +
            (C35269 + C35270) * C93805 + (C35271 + C35272) * C91732) *
               C93737 +
           ((C31962 + C31961) * C93587 + (C31960 + C31959) * C91722 +
            (C31958 + C31957) * C93805 + (C31956 + C31955) * C91732) *
               C93819) *
              C93635 * C93621 * C98 +
          ((C31967 * C91732 + C31968 * C93805 + (C31966 + C31965) * C91722 +
            (C31964 + C31963) * C93587) *
               C93819 +
           ((C35268 + C35267) * C91732 + (C35266 + C35265) * C93805 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C91722 +
            (C31928 * C1393 + C31828 * C1475 + C31929 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C91732 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C93805 +
            (C31955 + C31956) * C91722 + (C31957 + C31958) * C93587) *
               C93819 +
           ((C42101 + C42102) * C91732 + (C42103 + C42104) * C93805 +
            (C35272 + C35271) * C91722 + (C35270 + C35269) * C93587) *
               C93737) *
              C93635 * C800 -
          (((C31929 * C5823 + C93711 * C5927 + C31928 * C3414 +
             C31828 * C3496) *
                C93587 +
            (C31929 * C5817 + C93711 * C5921 + C31928 * C3410 +
             C31828 * C3492) *
                C91722 +
            (C44849 + C44848) * C93805 + (C44847 + C44846) * C91732) *
               C93737 +
           ((C34278 + C34279) * C93587 + (C34280 + C34281) * C91722 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C93805 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C91732) *
               C93819) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C91732 +
            (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
                C93805 +
            (C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C91722 +
            (C31928 * C817 + C31828 * C899 + C31929 * C4920 + C93711 * C5042) *
                C93587) *
               C93819 +
           ((C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C91732 +
            (C31928 * C5824 + C31828 * C5928 + C31929 * C8617 +
             C93711 * C8743) *
                C93805 +
            (C31928 * C5817 + C31828 * C5921 + C31929 * C8616 +
             C93711 * C8742) *
                C91722 +
            (C31928 * C5823 + C31828 * C5927 + C31929 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C91732 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93805 +
            (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
               C31828 +
           ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
            C28482 * C91722 + C28483 * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C22693 + C22694) * C93587 + (C22695 + C22696) * C91722 +
            C28484 * C93805 + C28485 * C91732) *
               C93711 +
           ((C20383 + C20382) * C93587 + (C20381 + C20380) * C91722 +
            (C20379 + C20378) * C93805 + (C20377 + C20376) * C91732) *
               C31828) *
              C93635 * C93621 * C98 +
          ((C20388 * C91732 + C20389 * C93805 + (C20387 + C20386) * C91722 +
            (C20385 + C20384) * C93587) *
               C31828 +
           ((C22696 + C22695) * C91732 + (C22694 + C22693) * C93805 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C91722 +
            (C20349 * C812 + C93819 * C960 + C20350 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C91732 +
            (C20349 * C114 + C93819 * C282 + C20350 * C1396 + C93737 * C1544) *
                C93805 +
            (C20376 + C20377) * C91722 + (C20378 + C20379) * C93587) *
               C31828 +
           ((C26440 + C26441) * C91732 + (C26442 + C26443) * C93805 +
            C28482 * C91722 + C28483 * C93587) *
               C93711) *
              C93635 * C800 -
          (((C26444 + C26445) * C93587 + (C26446 + C26447) * C91722 +
            (C26448 + C26449) * C93805 + (C26450 + C26451) * C91732) *
               C93711 +
           (C28484 * C93587 + C28485 * C91722 + (C26443 + C26442) * C93805 +
            (C26441 + C26440) * C91732) *
               C31828) *
              C93635 * C801 +
          (((C26451 + C26450) * C91732 + (C26449 + C26448) * C93805 +
            (C26447 + C26446) * C91722 + (C26445 + C26444) * C93587) *
               C31828 +
           ((C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C91732 +
            (C20349 * C4921 + C93819 * C5125 + C20350 * C8617 +
             C93737 * C8845) *
                C93805 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C91722 +
            (C20349 * C4920 + C93819 * C5124 + C20350 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C31928 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C31828 +
            (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
               C93819 +
           ((C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C31928 +
            (C91732 * C1470 + C93805 * C1602 + C91722 * C1469 +
             C93587 * C1601) *
                C31828 +
            (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C91722 * C3493 + C93587 * C3641 + C91732 * C3492 +
             C93805 * C3640) *
                C93711 +
            (C91722 * C3411 + C93587 * C3415 + C91732 * C3410 +
             C93805 * C3414) *
                C31929 +
            (C91722 * C1468 + C93587 * C1600 + C91732 * C1469 +
             C93805 * C1601) *
                C31828 +
            (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
             C93805 * C1395) *
                C31928) *
               C93737 +
           ((C48392 + C48391) * C93711 + (C48390 + C48389) * C31929 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C31828 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C31928) *
               C93819) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C31928 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C31828 +
            (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C31929 +
            (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
                C93711) *
               C93819 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C31928 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C31828 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C31929 +
            (C91732 * C3493 + C93805 * C3641 + C91722 * C3494 +
             C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C31928 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C31828 +
            (C46825 + C46826) * C31929 + (C46827 + C46828) * C93711) *
               C93819 +
           ((C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C31928 +
            (C91732 * C1470 + C93805 * C1602 + C91722 * C1469 +
             C93587 * C1601) *
                C31828 +
            (C50322 + C50321) * C31929 + (C50320 + C50319) * C93711) *
               C93737) *
              C93635 * C800 -
          (((C50315 + C50316) * C93711 + (C50317 + C50318) * C31929 +
            (C50319 + C50320) * C31828 + (C50321 + C50322) * C31928) *
               C93737 +
           ((C46832 + C46831) * C93711 + (C46830 + C46829) * C31929 +
            (C46828 + C46827) * C31828 + (C46826 + C46825) * C31928) *
               C93819) *
              C93635 * C801 +
          ((C46837 * C31928 + C46838 * C31828 + (C46836 + C46835) * C31929 +
            (C46834 + C46833) * C93711) *
               C93819 +
           ((C50318 + C50317) * C31928 + (C50316 + C50315) * C31828 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C31929 +
            (C91732 * C8741 + C93805 * C8965 + C91722 * C8742 +
             C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93805 +
            (C32227 + C32228) * C93587) *
               C93819 +
           ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) * C93737) *
              C93635 * C93621 * C97 -
          (((C35585 + C35586) * C93587 + (C35587 + C35588) * C93805) * C93737 +
           ((C32230 + C32229) * C93587 + (C32228 + C32227) * C93805) * C93819) *
              C93635 * C93621 * C98 +
          ((C32233 * C93805 + (C32232 + C32231) * C93587) * C93819 +
           ((C35586 + C35585) * C93805 +
            (C32190 * C1385 + C35575 + C35575 + C31828 * C1657 +
             C32191 * C3412 + C35576 + C35576 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C93805 +
            (C32227 + C32228) * C93587) *
               C93819 +
           ((C42411 + C42412) * C93805 + (C35588 + C35587) * C93587) * C93737) *
              C93635 * C800 -
          (((C32191 * C5817 + C36540 + C36540 + C93711 * C6173 +
             C32190 * C3410 + C36539 + C36539 + C31828 * C3710) *
                C93587 +
            (C45197 + C45196) * C93805) *
               C93737 +
           ((C34620 + C34621) * C93587 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C93805) *
               C93819) *
              C93635 * C801 +
          (((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
             C33035 + C33035 + C93711 * C5358) *
                C93805 +
            (C32190 * C809 + C33036 + C33036 + C31828 * C1081 + C32191 * C4916 +
             C33037 + C33037 + C93711 * C5357) *
                C93587) *
               C93819 +
           ((C32190 * C5818 + C41531 + C41531 + C31828 * C6174 +
             C32191 * C8615 + C41532 + C41532 + C93711 * C9089) *
                C93805 +
            (C32190 * C5817 + C52207 + C52207 + C31828 * C6173 +
             C32191 * C8616 + C52208 + C52208 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C31928 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C31828 +
            (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
               C93805 +
           ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
            C28482 * C31929 + C28898 * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C23008 + C23009) * C93711 + (C22695 + C22696) * C31929 +
            (C20628 + C20627) * C31828 + (C20381 + C20380) * C31928) *
               C93587 +
           (C28899 * C93711 + C28485 * C31929 + (C20626 + C20625) * C31828 +
            (C20377 + C20376) * C31928) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C20388 * C31928 + C20631 * C31828 + (C22696 + C22695) * C31929 +
            (C23009 + C23008) * C93711) *
               C93805 +
           ((C20387 + C20386) * C31928 + (C20630 + C20629) * C31828 +
            (C20349 * C804 + C93819 * C952 + C20350 * C3412 + C93737 * C3568) *
                C31929 +
            (C20349 * C886 + C93819 * C1142 + C20350 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20349 * C108 + C93819 * C276 + C20350 * C1388 + C93737 * C1536) *
                C31928 +
            (C20349 * C189 + C93819 * C501 + C20350 * C1470 + C93737 * C1726) *
                C31828 +
            (C26440 + C26441) * C31929 + (C26762 + C26763) * C93711) *
               C93805 +
           ((C20376 + C20377) * C31928 + (C20625 + C20626) * C31828 +
            C28482 * C31929 + C28898 * C93711) *
               C93587) *
              C93635 * C800 -
          (((C26764 + C26765) * C93711 + (C26446 + C26447) * C31929 +
            C28899 * C31828 + C28485 * C31928) *
               C93587 +
           ((C26766 + C26767) * C93711 + (C26450 + C26451) * C31929 +
            (C26763 + C26762) * C31828 + (C26441 + C26440) * C31928) *
               C93805) *
              C93635 * C801 +
          (((C26451 + C26450) * C31928 + (C26767 + C26766) * C31828 +
            (C20349 * C4917 + C93819 * C5121 + C20350 * C8615 +
             C93737 * C8843) *
                C31929 +
            (C20349 * C5039 + C93819 * C5448 + C20350 * C8741 +
             C93737 * C9195) *
                C93711) *
               C93805 +
           ((C26447 + C26446) * C31928 + (C26765 + C26764) * C31828 +
            (C20349 * C4916 + C93819 * C5120 + C20350 * C8616 +
             C93737 * C8844) *
                C31929 +
            (C20349 * C5038 + C93819 * C5447 + C20350 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C20349 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93819 +
            (C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C20350 +
            (C91732 * C1536 + C93805 * C1784 + C91722 * C1535 +
             C93587 * C1783) *
                C93737) *
               C31828 +
           ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
            (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C91722 * C3567 + C93587 * C3855 + C91732 * C3566 +
             C93805 * C3854) *
                C93737 +
            (C91722 * C3411 + C93587 * C3415 + C91732 * C3410 +
             C93805 * C3414) *
                C20350 +
            (C48724 + C48723) * C93819 + (C48390 + C48389) * C20349) *
               C93711 +
           ((C91722 * C1534 + C93587 * C1782 + C91732 * C1535 +
             C93805 * C1783) *
                C93737 +
            (C91722 * C1386 + C93587 * C1394 + C91732 * C1387 +
             C93805 * C1395) *
                C20350 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93819 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C20349) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C20349 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C93819 +
            (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C20350 +
            (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 +
             C93587 * C1781) *
                C93737) *
               C31828 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C20349 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C93819 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C20350 +
            (C91732 * C3567 + C93805 * C3855 + C91722 * C3568 +
             C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C20349 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93819 +
            (C91732 * C1388 + C93805 * C1396 + C91722 * C1387 +
             C93587 * C1395) *
                C20350 +
            (C91732 * C1536 + C93805 * C1784 + C91722 * C1535 +
             C93587 * C1783) *
                C93737) *
               C31828 +
           ((C46825 + C46826) * C20349 + (C47086 + C47087) * C93819 +
            (C50322 + C50321) * C20350 + (C50634 + C50633) * C93737) *
               C93711) *
              C93635 * C800 -
          (((C50631 + C50632) * C93737 + (C50317 + C50318) * C20350 +
            (C47089 + C47088) * C93819 + (C46830 + C46829) * C20349) *
               C93711 +
           ((C50633 + C50634) * C93737 + (C50321 + C50322) * C20350 +
            (C47087 + C47086) * C93819 + (C46826 + C46825) * C20349) *
               C31828) *
              C93635 * C801 +
          ((C46837 * C20349 + C47092 * C93819 + (C50318 + C50317) * C20350 +
            (C50632 + C50631) * C93737) *
               C31828 +
           ((C46836 + C46835) * C20349 + (C47091 + C47090) * C93819 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C20350 +
            (C91732 * C8843 + C93805 * C9301 + C91722 * C8844 +
             C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C20349 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93819 +
            (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
               C93805 +
           ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
            (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C35899 + C35900) * C93737 + (C35267 + C35268) * C20350 +
            (C32487 + C32486) * C93819 + (C31960 + C31959) * C20349) *
               C93587 +
           ((C35901 + C35902) * C93737 + (C35271 + C35272) * C20350 +
            (C32485 + C32484) * C93819 + (C31956 + C31955) * C20349) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C31967 * C20349 + C32490 * C93819 + (C35268 + C35267) * C20350 +
            (C35900 + C35899) * C93737) *
               C93805 +
           ((C31966 + C31965) * C20349 + (C32489 + C32488) * C93819 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C20350 +
            (C31928 * C1533 + C31828 * C1839 + C31929 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C20349 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93819 +
            (C42101 + C42102) * C20350 + (C42668 + C42669) * C93737) *
               C93805 +
           ((C31955 + C31956) * C20349 + (C32484 + C32485) * C93819 +
            (C35272 + C35271) * C20350 + (C35902 + C35901) * C93737) *
               C93587) *
              C93635 * C800 -
          (((C31929 * C6007 + C93711 * C6425 + C31928 * C3566 +
             C31828 * C3924) *
                C93737 +
            (C31929 * C5817 + C93711 * C5921 + C31928 * C3410 +
             C31828 * C3492) *
                C20350 +
            (C34943 + C34944) * C93819 + (C34280 + C34281) * C20349) *
               C93587 +
           ((C45521 + C45520) * C93737 + (C44847 + C44846) * C20350 +
            (C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C93819 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C20349) *
               C93805) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C20349 +
            (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
                C93819 +
            (C31928 * C5818 + C31828 * C5922 + C31929 * C8615 +
             C93711 * C8741) *
                C20350 +
            (C31928 * C6008 + C31828 * C6426 + C31929 * C8843 +
             C93711 * C9413) *
                C93737) *
               C93805 +
           ((C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C20349 +
            (C31928 * C957 + C31828 * C1263 + C31929 * C5120 + C93711 * C5637) *
                C93819 +
            (C31928 * C5817 + C31828 * C5921 + C31929 * C8616 +
             C93711 * C8742) *
                C20350 +
            (C31928 * C6007 + C31828 * C6425 + C31929 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C31828 +
            (C27090 + C27091) * C93711) *
               C93805 +
           ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C23335 + C23336) * C93711 + (C20910 + C20909) * C31828) * C93587 +
           (C29303 * C93711 + (C20908 + C20907) * C31828) * C93805) *
              C93635 * C93621 * C98 +
          ((C20913 * C31828 + (C23336 + C23335) * C93711) * C93805 +
           ((C20912 + C20911) * C31828 +
            (C20870 * C804 + C23325 + C23325 + C93819 * C1316 + C20871 * C3412 +
             C23326 + C23326 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20870 * C108 + C20873 + C20873 + C93819 * C714 + C20871 * C1388 +
             C20874 + C20874 + C93737 * C1900) *
                C31828 +
            (C27090 + C27091) * C93711) *
               C93805 +
           ((C20907 + C20908) * C31828 + C29302 * C93711) * C93587) *
              C93635 * C800 -
          (((C27092 + C27093) * C93711 + C29303 * C31828) * C93587 +
           ((C27094 + C27095) * C93711 + (C27091 + C27090) * C31828) * C93805) *
              C93635 * C801 +
          (((C27095 + C27094) * C31828 +
            (C20870 * C4917 + C27074 + C27074 + C93819 * C5716 +
             C20871 * C8615 + C27075 + C27075 + C93737 * C9513) *
                C93711) *
               C93805 +
           ((C27093 + C27092) * C31828 +
            (C20870 * C4916 + C27076 + C27076 + C93819 * C5715 +
             C20871 * C8616 + C27077 + C27077 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                       C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                       C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                          C93673 * C31828 +
                      (C32678 + C32679 + C32680) * C93673 * C93711) *
                         C93635 * C1979 -
                     ((C32681 + C32682 + C32683) * C93673 * C93711 +
                      (C32680 + C32679 + C32678) * C93673 * C31828) *
                         C93635 * C1980) *
                        C1981 +
                    (((C34157 + C34158 + C34159) * C93673 * C31828 +
                      (C31830 * C809 + C34148 + C34148 + C31825 * C825 +
                       C31832 * C810 + C34149 + C34149 + C31826 * C826 +
                       C31834 * C811 + C34150 + C34150 + C31827 * C827) *
                          C93673 * C93711) *
                         C93635 * C1980 -
                     ((C34159 + C34158 + C34157) * C93673 * C93711 +
                      (C31834 * C111 + C31846 + C31846 + C31827 * C123 +
                       C31832 * C110 + C31847 + C31847 + C31826 * C122 +
                       C31830 * C109 + C31848 + C31848 + C31825 * C121) *
                          C93673 * C31828) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) *
                          C93673 * C36994 +
                      C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
                         C93635 * C1979 -
                     (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
                      C37508 * C36994) *
                         C93635 * C1980) *
                        C1981 +
                    ((C38563 * C36994 + C38564 * C36995 + C38565 * C36996 +
                      (C36998 * C4919 + C38553 + C38553 + C93582 * C4927) *
                          C93673 * C36997) *
                         C93635 * C1980 -
                     (C38565 * C36997 + C38564 * C36996 + C38563 * C36995 +
                      (C36998 * C109 + C37008 + C37008 + C93582 * C121) *
                          C93673 * C36994) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C93635 * C1979 -
           ((C34274 + C34275) * C31827 + (C34276 + C34277) * C31835 +
            (C34278 + C34279) * C31826 + (C34280 + C34281) * C31833 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C31825 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C31831) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C34281 + C34280) * C31831 + (C34279 + C34278) * C31825 +
            (C34277 + C34276) * C31833 + (C34275 + C34274) * C31826 +
            (C31928 * C804 + C31828 * C886 + C31929 * C811 + C93711 * C893) *
                C31835 +
            (C31928 * C812 + C31828 * C894 + C31929 * C819 + C93711 * C901) *
                C31827) *
               C93673 * C93635 * C1980 -
           ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
            (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
            (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C93635 * C1979 -
           ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
             C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
                C93582 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C36999) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C37062 * C806 + C36994 * C888 + C37063 * C809 + C36995 * C891 +
             C37064 * C4916 + C36996 * C5038 + C37065 * C4919 +
             C36997 * C5041) *
                C36999 +
            (C37062 * C814 + C36994 * C896 + C37063 * C817 + C36995 * C899 +
             C37064 * C4920 + C36996 * C5042 + C37065 * C4923 +
             C36997 * C5045) *
                C93582) *
               C93673 * C93635 * C1980 -
           ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
             C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
                C93582 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C36999) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C93635 * C1979 -
           ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
            (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
               C93635 * C1980) *
              C1981 +
          (((C34380 + C34381 + C34382 + C34383 + C34384 + C34385) * C31828 +
            (C4298 * C31831 + C4299 * C31825 + C4301 * C31833 + C4300 * C31826 +
             (C275 * C811 + C93673 * C959) * C31835 +
             (C275 * C819 + C93673 * C967) * C31827) *
                C93711) *
               C93635 * C1980 -
           ((C34385 + C34384 + C34383 + C34382 + C34381 + C34380) * C93711 +
            (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
             C306 * C31825 + C305 * C31831) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C93635 * C1979 -
           ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
            (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
               C93635 * C1980) *
              C1981 +
          (((C38698 + C38699) * C36994 + (C38700 + C38701) * C36995 +
            (C38702 + C38703) * C36996 +
            ((C275 * C4919 + C93673 * C5123) * C36999 +
             (C275 * C4923 + C93673 * C5127) * C93582) *
                C36997) *
               C93635 * C1980 -
           ((C38703 + C38702) * C36997 + (C38701 + C38700) * C36996 +
            (C38699 + C38698) * C36995 +
            (C306 * C93582 + C305 * C36999) * C36994) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                       C31826 * C115 + C31835 * C110 + C31827 * C116) *
                          C31928 +
                      (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                       C31826 * C363 + C31835 * C191 + C31827 * C364) *
                          C31828 +
                      (C32942 + C32943 + C32944) * C31929 +
                      (C32945 + C32946 + C32947) * C93711) *
                         C93673 * C93635 * C1979 -
                     ((C32948 + C32949 + C32950) * C93711 +
                      (C32951 + C32952 + C32953) * C31929 +
                      (C32947 + C32946 + C32945) * C31828 +
                      (C32944 + C32943 + C32942) * C31928) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    (((C34496 + C34497 + C34498) * C31928 +
                      (C34499 + C34500 + C34501) * C31828 +
                      (C31831 * C809 + C31825 * C817 + C31833 * C810 +
                       C31826 * C818 + C31835 * C811 + C31827 * C819) *
                          C31929 +
                      (C31831 * C891 + C31825 * C1023 + C31833 * C892 +
                       C31826 * C1024 + C31835 * C893 + C31827 * C1025) *
                          C93711) *
                         C93673 * C93635 * C1980 -
                     ((C34501 + C34500 + C34499) * C93711 +
                      (C34498 + C34497 + C34496) * C31929 +
                      (C31835 * C192 + C31827 * C365 + C31833 * C191 +
                       C31826 * C364 + C31831 * C190 + C31825 * C363) *
                          C31828 +
                      (C31835 * C111 + C31827 * C117 + C31833 * C110 +
                       C31826 * C116 + C31831 * C109 + C31825 * C115) *
                          C31928) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C37062 +
                      (C36999 * C189 + C93582 * C362) * C36994 +
                      C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                      C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                         C93673 * C93635 * C1979 -
                     (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
                      C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
                      C37700 * C36994 + C37699 * C37062) *
                         C93673 * C93635 * C1980) *
                        C1981 +
                    ((C38782 * C37062 + C38783 * C36994 + C38784 * C37063 +
                      C38785 * C36995 + C38786 * C37064 + C38787 * C36996 +
                      (C36999 * C4919 + C93582 * C4923) * C37065 +
                      (C36999 * C5041 + C93582 * C5244) * C36997) *
                         C93673 * C93635 * C1980 -
                     (C38787 * C36997 + C38786 * C37065 + C38785 * C36996 +
                      C38784 * C37064 + C38783 * C36995 + C38782 * C37063 +
                      (C36999 * C190 + C93582 * C363) * C36994 +
                      (C36999 * C109 + C93582 * C115) * C37062) *
                         C93673 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C93635 * C1979 -
           ((C34618 + C34619) * C31827 + (C34620 + C34621) * C31826 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C31825) *
               C93673 * C93635 * C1980) *
              C1981 +
          (((C34621 + C34620) * C31825 + (C34619 + C34618) * C31826 +
            (C32190 * C804 + C34608 + C34608 + C31828 * C1076 + C32191 * C811 +
             C34609 + C34609 + C93711 * C1083) *
                C31827) *
               C93673 * C93635 * C1980 -
           ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
            (C32228 + C32227) * C31825) *
               C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C93635 * C1979 -
           (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
            C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
            C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
               C93582 * C93673 * C93635 * C1980) *
              C1981 +
          ((C37216 * C806 + C38854 + C38854 + C36994 * C1078 + C37217 * C809 +
            C38855 + C38855 + C36995 * C1081 + C37218 * C4916 + C38856 +
            C38856 + C36996 * C5357 + C37219 * C4919 + C38857 + C38857 +
            C36997 * C5360) *
               C93582 * C93673 * C93635 * C1980 -
           (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
            C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
            C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
               C93582 * C93673 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C93635 * C1979 -
           ((C34720 + C34721 + C34722 + C34723) * C31827 +
            (C34724 + C34725 + C34726 + C34727) * C31826 +
            (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 +
             C5149 * C31928) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          (((C34727 + C34726 + C34725 + C34724) * C31825 +
            (C34723 + C34722 + C34721 + C34720) * C31826 +
            (C2158 * C31928 + C2389 * C31828 +
             (C275 * C811 + C93673 * C959) * C31929 +
             (C275 * C893 + C93673 * C1149) * C93711) *
                C31827) *
               C93635 * C1980 -
           ((C32316 + C32317 + C32318 + C32319) * C31827 +
            (C32315 + C32314 + C32313 + C32312) * C31826 +
            (C32311 + C32310 + C32309 + C32308) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C93635 * C1979 -
           (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 +
            C5156 * C37064 + C5461 * C36995 + C5151 * C37063 + C5460 * C36994 +
            C5149 * C37062) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C2162 * C37062 + C2391 * C36994 + C4298 * C37063 + C4583 * C36995 +
            C5154 * C37064 + C5462 * C36996 +
            (C275 * C4919 + C93673 * C5123) * C37065 +
            (C275 * C5041 + C93673 * C5450) * C36997) *
               C93582 * C93635 * C1980 -
           (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
            C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C93635 * C1979 -
           (((C33203 + C33204 + C33205) * C93673 +
             (C32951 + C32952 + C32953) * C275) *
                C93711 +
            ((C33202 + C33201 + C33200) * C93673 +
             (C32944 + C32943 + C32942) * C275) *
                C31828) *
               C93635 * C1980) *
              C1981 +
          ((((C34496 + C34497 + C34498) * C275 +
             (C34832 + C34833 + C34834) * C93673) *
                C31828 +
            ((C31831 * C809 + C31825 * C817 + C31833 * C810 + C31826 * C818 +
              C31835 * C811 + C31827 * C819) *
                 C275 +
             (C31831 * C957 + C31825 * C1205 + C31833 * C958 + C31826 * C1206 +
              C31835 * C959 + C31827 * C1207) *
                 C93673) *
                C93711) *
               C93635 * C1980 -
           (((C34834 + C34833 + C34832) * C93673 +
             (C34498 + C34497 + C34496) * C275) *
                C93711 +
            ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
              C31831 * C277 + C31825 * C580) *
                 C93673 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C275) *
                C31828) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C93635 * C1979 -
           ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
            (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
               C93635 * C1980) *
              C1981 +
          (((C38990 + C39002) * C36994 + (C38993 + C39003) * C36995 +
            (C38996 + C39004) * C36996 +
            ((C36999 * C4919 + C93582 * C4923) * C275 +
             (C36999 * C5123 + C93582 * C5540) * C93673) *
                C36997) *
               C93635 * C1980 -
           ((C39004 + C38996) * C36997 + (C39003 + C38993) * C36996 +
            (C39002 + C38990) * C36995 +
            ((C36999 * C277 + C93582 * C580) * C93673 +
             (C36999 * C109 + C93582 * C115) * C275) *
                C36994) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C93635 * C1979 -
           (((C34941 + C34942) * C93673 + (C34276 + C34277) * C275) * C31827 +
            ((C34943 + C34944) * C93673 + (C34280 + C34281) * C275) * C31826 +
            ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93673 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C275) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          ((((C34281 + C34280) * C275 + (C34944 + C34943) * C93673) * C31825 +
            ((C34277 + C34276) * C275 + (C34942 + C34941) * C93673) * C31826 +
            ((C31928 * C804 + C31828 * C886 + C31929 * C811 + C93711 * C893) *
                 C275 +
             (C31928 * C952 + C31828 * C1258 + C31929 * C959 + C93711 * C1265) *
                 C93673) *
                C31827) *
               C93635 * C1980 -
           (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
            ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
            ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C93635 * C1979 -
           ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
             C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
                C93673 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C275) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C37062 * C806 + C36994 * C888 + C37063 * C809 + C36995 * C891 +
             C37064 * C4916 + C36996 * C5038 + C37065 * C4919 +
             C36997 * C5041) *
                C275 +
            (C37062 * C954 + C36994 * C1260 + C37063 * C957 + C36995 * C1263 +
             C37064 * C5120 + C36996 * C5637 + C37065 * C5123 +
             C36997 * C5640) *
                C93673) *
               C93582 * C93635 * C1980 -
           ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
             C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
                C93673 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C275) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C93635 * C1979 -
           ((C35043 + C35044) * C31827 + (C35045 + C35046) * C31826 +
            (C5741 * C93711 + C5740 * C31828) * C31825) *
               C93635 * C1980) *
              C1981 +
          (((C35046 + C35045) * C31825 + (C35044 + C35043) * C31826 +
            (C2624 * C31828 +
             (C713 * C811 + C1332 + C1332 + C93673 * C1323) * C93711) *
                C31827) *
               C93635 * C1980 -
           ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
            (C32568 + C32567) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C93635 * C1979 -
           (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 +
            C5740 * C36994) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C2626 * C36994 + C4839 * C36995 + C5742 * C36996 +
            (C713 * C4919 + C5731 + C5731 + C93673 * C5718) * C36997) *
               C93582 * C93635 * C1980 -
           (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                       C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                       C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                          C93673 * C31828 +
                      (C32678 + C32679 + C32680) * C93673 * C93711) *
                         C2695 -
                     ((C36118 + C36119 + C36120) * C93673 * C93711 +
                      (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 +
                       C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
                       C31830 * C1388 + C33433 + C33433 + C31825 * C1404) *
                          C93673 * C31828) *
                         C2696) *
                        C1979 +
                    (((C36120 + C36119 + C36118) * C93673 * C31828 +
                      (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 +
                       C31832 * C5817 + C36110 + C36110 + C31826 * C5829 +
                       C31834 * C7631 + C36111 + C36111 + C31827 * C7633) *
                          C93673 * C93711) *
                         C2696 -
                     ((C32681 + C32682 + C32683) * C93673 * C93711 +
                      (C32680 + C32679 + C32678) * C93673 * C31828) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) *
                          C93673 * C36994 +
                      C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
                         C2695 -
                     (C39824 * C36997 + C39825 * C36996 + C39826 * C36995 +
                      (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) *
                          C93673 * C36994) *
                         C2696) *
                        C1979 +
                    ((C39826 * C36994 + C39825 * C36995 + C39824 * C36996 +
                      (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) *
                          C93673 * C36997) *
                         C2696 -
                     (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
                      C37508 * C36994) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C2695 -
           ((C35265 + C35266) * C31827 + (C35267 + C35268) * C31835 +
            (C35269 + C35270) * C31826 + (C35271 + C35272) * C31833 +
            (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 +
             C31828 * C1478) *
                C31825 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C31831) *
               C93673 * C2696) *
              C1979 +
          (((C31928 * C3409 + C31828 * C3491 + C31929 * C5818 +
             C93711 * C5922) *
                C31831 +
            (C31928 * C3413 + C31828 * C3495 + C31929 * C5824 +
             C93711 * C5928) *
                C31825 +
            (C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
             C93711 * C5921) *
                C31833 +
            (C31928 * C3414 + C31828 * C3496 + C31929 * C5823 +
             C93711 * C5927) *
                C31826 +
            (C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
             C93711 * C7738) *
                C31835 +
            (C31928 * C3415 + C31828 * C3497 + C31929 * C7632 +
             C93711 * C7739) *
                C31827) *
               C93673 * C2696 -
           ((C34274 + C34275) * C31827 + (C34276 + C34277) * C31835 +
            (C34278 + C34279) * C31826 + (C34280 + C34281) * C31833 +
            (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
                C31825 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C31831) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C2695 -
           ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
             C37063 * C3413 + C36995 * C3495 + C37062 * C1396 +
             C36994 * C1478) *
                C93582 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C36999) *
               C93673 * C2696) *
              C1979 +
          (((C37062 * C3409 + C36994 * C3491 + C37063 * C5818 + C36995 * C5922 +
             C37064 * C8615 + C36996 * C8741 + C37065 * C39804 +
             C36997 * C39892) *
                C36999 +
            (C37062 * C3413 + C36994 * C3495 + C37063 * C5824 + C36995 * C5928 +
             C37064 * C8617 + C36996 * C8743 + C37065 * C39805 +
             C36997 * C39893) *
                C93582) *
               C93673 * C2696 -
           ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
             C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
                C93582 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C36999) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C2695 -
           ((C36317 + C36318 + C36319 + C36320 + C36321 + C36322) * C93711 +
            (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
             (C275 * C1396 + C93673 * C1544) * C31825 +
             (C275 * C1388 + C93673 * C1536) * C31831) *
                C31828) *
               C2696) *
              C1979 +
          (((C36322 + C36321 + C36320 + C36319 + C36318 + C36317) * C31828 +
            (C8861 * C31831 + C8860 * C31825 + C7868 * C31833 + C7867 * C31826 +
             (C275 * C7631 + C93673 * C7856) * C31835 +
             (C275 * C7632 + C93673 * C7857) * C31827) *
                C93711) *
               C2696 -
           ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
            (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C2695 -
           ((C39973 + C39974) * C36997 + (C39967 + C39968) * C36996 +
            (C39969 + C39970) * C36995 +
            ((C275 * C1396 + C93673 * C1544) * C93582 +
             (C275 * C1388 + C93673 * C1536) * C36999) *
                C36994) *
               C2696) *
              C1979 +
          (((C39970 + C39969) * C36994 + (C39968 + C39967) * C36995 +
            (C39974 + C39973) * C36996 +
            ((C275 * C39804 + C93673 * C39960) * C36999 +
             (C275 * C39805 + C93673 * C39961) * C93582) *
                C36997) *
               C2696 -
           ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
            (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                       C31826 * C115 + C31835 * C110 + C31827 * C116) *
                          C31928 +
                      (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                       C31826 * C363 + C31835 * C191 + C31827 * C364) *
                          C31828 +
                      (C32942 + C32943 + C32944) * C31929 +
                      (C32945 + C32946 + C32947) * C93711) *
                         C93673 * C2695 -
                     ((C36433 + C36434 + C36435) * C93711 +
                      (C36436 + C36437 + C36438) * C31929 +
                      (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 +
                       C31826 * C1601 + C31831 * C1470 + C31825 * C1602) *
                          C31828 +
                      (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
                       C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                          C31928) *
                         C93673 * C2696) *
                        C1979 +
                    (((C36438 + C36437 + C36436) * C31928 +
                      (C36435 + C36434 + C36433) * C31828 +
                      (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 +
                       C31826 * C5823 + C31835 * C7631 + C31827 * C7632) *
                          C31929 +
                      (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 +
                       C31826 * C6093 + C31835 * C7738 + C31827 * C7968) *
                          C93711) *
                         C93673 * C2696 -
                     ((C32948 + C32949 + C32950) * C93711 +
                      (C32951 + C32952 + C32953) * C31929 +
                      (C32947 + C32946 + C32945) * C31828 +
                      (C32944 + C32943 + C32942) * C31928) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C37062 +
                      (C36999 * C189 + C93582 * C362) * C36994 +
                      C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                      C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                         C93673 * C2695 -
                     (C40054 * C36997 + C40055 * C37065 + C40056 * C36996 +
                      C40057 * C37064 + C40058 * C36995 + C40059 * C37063 +
                      (C36999 * C1470 + C93582 * C1602) * C36994 +
                      (C36999 * C1388 + C93582 * C1396) * C37062) *
                         C93673 * C2696) *
                        C1979 +
                    ((C40059 * C37062 + C40058 * C36994 + C40057 * C37063 +
                      C40056 * C36995 + C40055 * C37064 + C40054 * C36996 +
                      (C36999 * C39804 + C93582 * C39805) * C37065 +
                      (C36999 * C39892 + C93582 * C40040) * C36997) *
                         C93673 * C2696 -
                     (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
                      C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
                      C37700 * C36994 + C37699 * C37062) *
                         C93673 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C2695 -
           ((C35585 + C35586) * C31827 + (C35587 + C35588) * C31826 +
            (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 +
             C32190 * C1388 + C33741 + C33741 + C31828 * C1660) *
                C31825) *
               C93673 * C2696) *
              C1979 +
          (((C32190 * C3409 + C36537 + C36537 + C31828 * C3709 +
             C32191 * C5818 + C36538 + C36538 + C93711 * C6174) *
                C31825 +
            (C32190 * C3410 + C36539 + C36539 + C31828 * C3710 +
             C32191 * C5817 + C36540 + C36540 + C93711 * C6173) *
                C31826 +
            (C32190 * C3411 + C36541 + C36541 + C31828 * C3711 +
             C32191 * C7631 + C36542 + C36542 + C93711 * C8067) *
                C31827) *
               C93673 * C2696 -
           ((C34618 + C34619) * C31827 + (C34620 + C34621) * C31826 +
            (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
             C33033 + C33033 + C31828 * C1079) *
                C31825) *
               C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C2695 -
           (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
            C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 +
            C38270 + C36995 * C3709 + C37216 * C1388 + C38271 + C38271 +
            C36994 * C1660) *
               C93582 * C93673 * C2696) *
              C1979 +
          ((C37216 * C3409 + C40127 + C40127 + C36994 * C3709 + C37217 * C5818 +
            C40128 + C40128 + C36995 * C6174 + C37218 * C8615 + C40129 +
            C40129 + C36996 * C9089 + C37219 * C39804 + C40130 + C40130 +
            C36997 * C40125) *
               C93582 * C93673 * C2696 -
           (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
            C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
            C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
               C93582 * C93673 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C2695 -
           ((C35687 + C35688 + C35689 + C35690) * C31827 +
            (C35691 + C35692 + C35693 + C35694) * C31826 +
            (C9203 * C93711 + C8863 * C31929 +
             (C275 * C1470 + C93673 * C1726) * C31828 +
             (C275 * C1388 + C93673 * C1536) * C31928) *
                C31825) *
               C2696) *
              C1979 +
          (((C8863 * C31928 + C9203 * C31828 + C8861 * C31929 +
             C9202 * C93711) *
                C31825 +
            (C7870 * C31928 + C8195 * C31828 + C7868 * C31929 +
             C8194 * C93711) *
                C31826 +
            (C18541 * C31928 + C18867 * C31828 +
             (C275 * C7631 + C93673 * C7856) * C31929 +
             (C275 * C7738 + C93673 * C8184) * C93711) *
                C31827) *
               C2696 -
           ((C34720 + C34721 + C34722 + C34723) * C31827 +
            (C34724 + C34725 + C34726 + C34727) * C31826 +
            (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 +
             C5149 * C31928) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C2695 -
           (C40200 * C36997 + C39972 * C37065 + C9202 * C36996 +
            C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
            (C275 * C1470 + C93673 * C1726) * C36994 +
            (C275 * C1388 + C93673 * C1536) * C37062) *
               C93582 * C2696) *
              C1979 +
          ((C8863 * C37062 + C9203 * C36994 + C8861 * C37063 + C9202 * C36995 +
            C39972 * C37064 + C40200 * C36996 +
            (C275 * C39804 + C93673 * C39960) * C37065 +
            (C275 * C39892 + C93673 * C40196) * C36997) *
               C93582 * C2696 -
           (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 +
            C5156 * C37064 + C5461 * C36995 + C5151 * C37063 + C5460 * C36994 +
            C5149 * C37062) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C2695 -
           (((C36745 + C36746 + C36747) * C93673 +
             (C36436 + C36437 + C36438) * C275) *
                C93711 +
            ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 +
              C31826 * C1783 + C31831 * C1536 + C31825 * C1784) *
                 C93673 +
             (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
              C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                 C275) *
                C31828) *
               C2696) *
              C1979 +
          ((((C36438 + C36437 + C36436) * C275 +
             (C36747 + C36746 + C36745) * C93673) *
                C31828 +
            ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 +
              C31826 * C5823 + C31835 * C7631 + C31827 * C7632) *
                 C275 +
             (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 +
              C31826 * C6345 + C31835 * C7856 + C31827 * C8295) *
                 C93673) *
                C93711) *
               C2696 -
           (((C33203 + C33204 + C33205) * C93673 +
             (C32951 + C32952 + C32953) * C275) *
                C93711 +
            ((C33202 + C33201 + C33200) * C93673 +
             (C32944 + C32943 + C32942) * C275) *
                C31828) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C2695 -
           ((C40280 + C40270) * C36997 + (C40281 + C40273) * C36996 +
            (C40282 + C40276) * C36995 +
            ((C36999 * C1536 + C93582 * C1784) * C93673 +
             (C36999 * C1388 + C93582 * C1396) * C275) *
                C36994) *
               C2696) *
              C1979 +
          (((C40276 + C40282) * C36994 + (C40273 + C40281) * C36995 +
            (C40270 + C40280) * C36996 +
            ((C36999 * C39804 + C93582 * C39805) * C275 +
             (C36999 * C39960 + C93582 * C40266) * C93673) *
                C36997) *
               C2696 -
           ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
            (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C2695 -
           (((C35899 + C35900) * C93673 + (C35267 + C35268) * C275) * C31827 +
            ((C35901 + C35902) * C93673 + (C35271 + C35272) * C275) * C31826 +
            ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
              C31828 * C1842) *
                 C93673 +
             (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
              C31828 * C1470) *
                 C275) *
                C31825) *
               C2696) *
              C1979 +
          ((((C31928 * C3409 + C31828 * C3491 + C31929 * C5818 +
              C93711 * C5922) *
                 C275 +
             (C31928 * C3565 + C31828 * C3923 + C31929 * C6008 +
              C93711 * C6426) *
                 C93673) *
                C31825 +
            ((C31928 * C3410 + C31828 * C3492 + C31929 * C5817 +
              C93711 * C5921) *
                 C275 +
             (C31928 * C3566 + C31828 * C3924 + C31929 * C6007 +
              C93711 * C6425) *
                 C93673) *
                C31826 +
            ((C31928 * C3411 + C31828 * C3493 + C31929 * C7631 +
              C93711 * C7738) *
                 C275 +
             (C31928 * C3567 + C31828 * C3925 + C31929 * C7856 +
              C93711 * C8394) *
                 C93673) *
                C31827) *
               C2696 -
           (((C34941 + C34942) * C93673 + (C34276 + C34277) * C275) * C31827 +
            ((C34943 + C34944) * C93673 + (C34280 + C34281) * C275) * C31826 +
            ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                 C93673 +
             (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                 C275) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C2695 -
           ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
             C37063 * C3565 + C36995 * C3923 + C37062 * C1536 +
             C36994 * C1842) *
                C93673 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C275) *
               C93582 * C2696) *
              C1979 +
          (((C37062 * C3409 + C36994 * C3491 + C37063 * C5818 + C36995 * C5922 +
             C37064 * C8615 + C36996 * C8741 + C37065 * C39804 +
             C36997 * C39892) *
                C275 +
            (C37062 * C3565 + C36994 * C3923 + C37063 * C6008 + C36995 * C6426 +
             C37064 * C8843 + C36996 * C9413 + C37065 * C39960 +
             C36997 * C40348) *
                C93673) *
               C93582 * C2696 -
           ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
             C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
                C93673 +
            (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
             C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
                C275) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C2695 -
           ((C36001 + C36002) * C31827 + (C36003 + C36004) * C31826 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
                C31825) *
               C2696) *
              C1979 +
          (((C9527 * C31828 + C9526 * C93711) * C31825 +
            (C8515 * C31828 + C8514 * C93711) * C31826 +
            (C19182 * C31828 +
             (C713 * C7631 + C8509 + C8509 + C93673 * C8502) * C93711) *
                C31827) *
               C2696 -
           ((C35043 + C35044) * C31827 + (C35045 + C35046) * C31826 +
            (C5741 * C93711 + C5740 * C31828) * C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C2695 -
           (C40422 * C36997 + C9526 * C36996 + C9527 * C36995 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
               C93582 * C2696) *
              C1979 +
          ((C9527 * C36994 + C9526 * C36995 + C40422 * C36996 +
            (C713 * C39804 + C40419 + C40419 + C93673 * C40415) * C36997) *
               C93582 * C2696 -
           (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 +
            C5740 * C36994) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C32678 + C32679 + C32680) * C93673 * C93711) *
              C93635 * C800 -
          ((C32681 + C32682 + C32683) * C93673 * C93711 +
           (C32680 + C32679 + C32678) * C93673 * C31828) *
              C93635 * C801 +
          ((C32683 + C32682 + C32681) * C93673 * C31828 +
           (C31830 * C4917 + C32663 + C32663 + C31825 * C4925 + C31832 * C4916 +
            C32664 + C32664 + C31826 * C4924 + C31834 * C6615 + C32665 +
            C32665 + C31827 * C6617) *
               C93673 * C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C31830 * C807 + C31840 + C31840 + C31825 * C823 + C31832 * C806 +
            C31841 + C31841 + C31826 * C822 + C31834 * C805 + C31842 + C31842 +
            C31827 * C821) *
               C93673 * C93711) *
              C93635 * C93621 * C97 -
          ((C31834 * C804 + C31843 + C31843 + C31827 * C820 + C31832 * C805 +
            C31844 + C31844 + C31826 * C821 + C31830 * C806 + C31845 + C31845 +
            C31825 * C822) *
               C93673 * C93711 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C93673 * C31828) *
              C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C93673 * C31828 +
           (C31830 * C805 + C31852 + C31852 + C31825 * C821 + C31832 * C804 +
            C31853 + C31853 + C31826 * C820 + C31834 * C1983 + C31854 + C31854 +
            C31827 * C1985) *
               C93673 * C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C32678 + C32679 + C32680) * C93673 * C93711) *
              C1382 -
          ((C31834 * C3411 + C33428 + C33428 + C31827 * C3419 + C31832 * C3410 +
            C33429 + C33429 + C31826 * C3418 + C31830 * C3409 + C33430 +
            C33430 + C31825 * C3417) *
               C93673 * C93711 +
           (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31830 * C1388 + C33433 +
            C33433 + C31825 * C1404) *
               C93673 * C31828) *
              C1383 +
          ((C31830 * C1389 + C33434 + C33434 + C31825 * C1405 + C31832 * C1390 +
            C33435 + C33435 + C31826 * C1406 + C31834 * C1391 + C33436 +
            C33436 + C31827 * C1407) *
               C93673 * C31828 +
           (C31830 * C5819 + C33437 + C33437 + C31825 * C5831 + C31832 * C5820 +
            C33438 + C33438 + C31826 * C5832 + C31834 * C12033 + C33439 +
            C33439 + C31827 * C12035) *
               C93673 * C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           (C36998 * C807 + C37002 + C37002 + C93582 * C823) * C93673 * C36995 +
           (C36998 * C808 + C37003 + C37003 + C93582 * C824) * C93673 * C36996 +
           (C36998 * C4917 + C37004 + C37004 + C93582 * C4925) * C93673 *
               C36997) *
              C93635 * C93621 * C97 -
          ((C36998 * C4916 + C37005 + C37005 + C93582 * C4924) * C93673 *
               C36997 +
           (C36998 * C809 + C37006 + C37006 + C93582 * C825) * C93673 * C36996 +
           (C36998 * C806 + C37007 + C37007 + C93582 * C822) * C93673 * C36995 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
               C36994) *
              C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93673 * C36994 +
           (C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93673 * C36995 +
           (C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93673 * C36996 +
           (C36998 * C6615 + C37012 + C37012 + C93582 * C6617) * C93673 *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C93635 * C800 -
          (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
           C37508 * C36994) *
              C93635 * C801 +
          (C37509 * C36994 + C37510 * C36995 + C37511 * C36996 +
           (C36998 * C37482 + C37495 + C37495 + C93582 * C37484) * C93673 *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C1382 -
          ((C36998 * C8615 + C38054 + C38054 + C93582 * C8619) * C93673 *
               C36997 +
           (C36998 * C5818 + C38055 + C38055 + C93582 * C5830) * C93673 *
               C36996 +
           (C36998 * C3409 + C38056 + C38056 + C93582 * C3417) * C93673 *
               C36995 +
           (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) * C93673 *
               C36994) *
              C1383 +
          ((C36998 * C1389 + C38058 + C38058 + C93582 * C1405) * C93673 *
               C36994 +
           (C36998 * C5819 + C38059 + C38059 + C93582 * C5831) * C93673 *
               C36995 +
           (C36998 * C5821 + C38060 + C38060 + C93582 * C5833) * C93673 *
               C36996 +
           (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C93673 *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C800 -
          ((C31929 * C818 + C93711 * C900 + C31928 * C813 + C31828 * C895) *
               C31827 +
           (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
               C31835 +
           (C31929 * C817 + C93711 * C899 + C31928 * C814 + C31828 * C896) *
               C31826 +
           (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
               C31833 +
           (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
               C31825 +
           (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
               C31831) *
              C93673 * C93635 * C801 +
          ((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
               C31831 +
           (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
               C31825 +
           (C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
               C31833 +
           (C31928 * C817 + C31828 * C899 + C31929 * C4920 + C93711 * C5042) *
               C31826 +
           (C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
               C31835 +
           (C31928 * C818 + C31828 * C900 + C31929 * C6616 + C93711 * C6739) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
           (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
           (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
              C93673 * C93635 * C93621 * C98 +
          (C31967 * C31831 + C31968 * C31825 + (C31966 + C31965) * C31833 +
           (C31964 + C31963) * C31826 +
           (C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
               C31835 +
           (C31928 * C118 + C31828 * C199 + C31929 * C1984 + C93711 * C2057) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C1382 -
          ((C31929 * C3415 + C93711 * C3497 + C31928 * C1394 + C31828 * C1476) *
               C31827 +
           (C31929 * C3411 + C93711 * C3493 + C31928 * C1386 + C31828 * C1468) *
               C31835 +
           (C31929 * C3414 + C93711 * C3496 + C31928 * C1395 + C31828 * C1477) *
               C31826 +
           (C31929 * C3410 + C93711 * C3492 + C31928 * C1387 + C31828 * C1469) *
               C31833 +
           (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 + C31828 * C1478) *
               C31825 +
           (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 + C31828 * C1470) *
               C31831) *
              C93673 * C1383 +
          ((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 + C93711 * C5923) *
               C31831 +
           (C31928 * C1397 + C31828 * C1479 + C31929 * C5825 + C93711 * C5929) *
               C31825 +
           (C31928 * C1390 + C31828 * C1472 + C31929 * C5820 + C93711 * C5925) *
               C31833 +
           (C31928 * C1398 + C31828 * C1480 + C31929 * C5826 + C93711 * C5931) *
               C31826 +
           (C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
            C93711 * C12136) *
               C31835 +
           (C31928 * C1399 + C31828 * C1481 + C31929 * C12034 +
            C93711 * C12137) *
               C31827) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C93621 * C97 -
          ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
            C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
               C93582 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C36999) *
              C93673 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C36999 +
           (C37062 * C116 + C36994 * C197 + C37063 * C813 + C36995 * C895 +
            C37064 * C818 + C36996 * C900 + C37065 * C6616 + C36997 * C6739) *
               C93582) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C800 -
          ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
            C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
               C93582 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C36999) *
              C93673 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C36999 +
           (C37062 * C816 + C36994 * C898 + C37063 * C4921 + C36995 * C5043 +
            C37064 * C4922 + C36996 * C5044 + C37065 * C37483 +
            C36997 * C37562) *
               C93582) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C1382 -
          ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
            C37063 * C3413 + C36995 * C3495 + C37062 * C1396 + C36994 * C1478) *
               C93582 +
           (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
            C37063 * C3409 + C36995 * C3491 + C37062 * C1388 + C36994 * C1470) *
               C36999) *
              C93673 * C1383 +
          ((C37062 * C1389 + C36994 * C1471 + C37063 * C5819 + C36995 * C5923 +
            C37064 * C5821 + C36996 * C5924 + C37065 * C38050 +
            C36997 * C38111) *
               C36999 +
           (C37062 * C1397 + C36994 * C1479 + C37063 * C5825 + C36995 * C5929 +
            C37064 * C5827 + C36996 * C5930 + C37065 * C38051 +
            C36997 * C38112) *
               C93582) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
              C93635 * C800 -
          ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
           (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
              C93635 * C801 +
          ((C32843 + C32842 + C32841 + C32840 + C32839 + C32838) * C31828 +
           (C5156 * C31831 + C5155 * C31825 + C5154 * C31833 + C5153 * C31826 +
            (C275 * C6615 + C93673 * C6856) * C31835 +
            (C275 * C6616 + C93673 * C6857) * C31827) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C5149 * C31831 + C5150 * C31825 + C2162 * C31833 + C2161 * C31826 +
            C2160 * C31835 + C2159 * C31827) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C2157 * C31827 + C2158 * C31835 + C2159 * C31826 + C2160 * C31833 +
            C2161 * C31825 + C2162 * C31831) *
               C93711 +
           (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
            C306 * C31825 + C305 * C31831) *
               C31828) *
              C93635 * C93621 * C98 +
          ((C307 * C31831 + C308 * C31825 + C309 * C31833 + C310 * C31826 +
            C312 * C31835 + C311 * C31827) *
               C31828 +
           (C2160 * C31831 + C2159 * C31825 + C2158 * C31833 + C2157 * C31826 +
            (C275 * C1983 + C93673 * C2142) * C31835 +
            (C275 * C1984 + C93673 * C2143) * C31827) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
              C1382 -
          ((C18540 * C31827 + C18541 * C31835 + C7869 * C31826 +
            C7870 * C31833 + C8862 * C31825 + C8863 * C31831) *
               C93711 +
           (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
            (C275 * C1396 + C93673 * C1544) * C31825 +
            (C275 * C1388 + C93673 * C1536) * C31831) *
               C31828) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C31831 +
            (C275 * C1397 + C93673 * C1545) * C31825 +
            (C275 * C1390 + C93673 * C1538) * C31833 +
            (C275 * C1398 + C93673 * C1546) * C31826 +
            (C275 * C1391 + C93673 * C1539) * C31835 +
            (C275 * C1399 + C93673 * C1547) * C31827) *
               C31828 +
           ((C275 * C5819 + C93673 * C6009) * C31831 +
            (C275 * C5825 + C93673 * C6015) * C31825 +
            (C275 * C5820 + C93673 * C6010) * C31833 +
            (C275 * C5826 + C93673 * C6016) * C31826 +
            (C275 * C12033 + C93673 * C12248) * C31835 +
            (C275 * C12034 + C93673 * C12249) * C31827) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C5149 * C36999 + C5150 * C93582) * C36995 +
           (C5151 * C36999 + C5152 * C93582) * C36996 +
           (C5156 * C36999 + C5155 * C93582) * C36997) *
              C93635 * C93621 * C97 -
          ((C5153 * C93582 + C5154 * C36999) * C36997 +
           (C4299 * C93582 + C4298 * C36999) * C36996 +
           (C2161 * C93582 + C2162 * C36999) * C36995 +
           (C306 * C93582 + C305 * C36999) * C36994) *
              C93635 * C93621 * C98 +
          ((C307 * C36999 + C308 * C93582) * C36994 +
           (C2160 * C36999 + C2159 * C93582) * C36995 +
           (C4301 * C36999 + C4300 * C93582) * C36996 +
           ((C275 * C6615 + C93673 * C6856) * C36999 +
            (C275 * C6616 + C93673 * C6857) * C93582) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C93635 * C800 -
          ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
           (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
              C93635 * C801 +
          (C37626 * C36994 + C37627 * C36995 + (C37631 + C37630) * C36996 +
           ((C275 * C37482 + C93673 * C37613) * C36999 +
            (C275 * C37483 + C93673 * C37614) * C93582) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C1382 -
          (((C275 * C8617 + C93673 * C8845) * C93582 +
            (C275 * C8615 + C93673 * C8843) * C36999) *
               C36997 +
           (C8860 * C93582 + C8861 * C36999) * C36996 +
           (C8862 * C93582 + C8863 * C36999) * C36995 +
           ((C275 * C1396 + C93673 * C1544) * C93582 +
            (C275 * C1388 + C93673 * C1536) * C36999) *
               C36994) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C36999 +
            (C275 * C1397 + C93673 * C1545) * C93582) *
               C36994 +
           ((C275 * C5819 + C93673 * C6009) * C36999 +
            (C275 * C5825 + C93673 * C6015) * C93582) *
               C36995 +
           ((C275 * C5821 + C93673 * C6011) * C36999 +
            (C275 * C5827 + C93673 * C6017) * C93582) *
               C36996 +
           ((C275 * C38050 + C93673 * C38163) * C36999 +
            (C275 * C38051 + C93673 * C38164) * C93582) *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[47] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C32942 + C32943 + C32944) * C31929 +
                     (C32945 + C32946 + C32947) * C93711) *
                        C93673 * C93635 * C800 -
                    ((C32948 + C32949 + C32950) * C93711 +
                     (C32951 + C32952 + C32953) * C31929 +
                     (C32947 + C32946 + C32945) * C31828 +
                     (C32944 + C32943 + C32942) * C31928) *
                        C93673 * C93635 * C801 +
                    ((C32953 + C32952 + C32951) * C31928 +
                     (C32950 + C32949 + C32948) * C31828 +
                     (C31831 * C4917 + C31825 * C4921 + C31833 * C4916 +
                      C31826 * C4920 + C31835 * C6615 + C31827 * C6616) *
                         C31929 +
                     (C31831 * C5039 + C31825 * C5242 + C31833 * C5038 +
                      C31826 * C5241 + C31835 * C6738 + C31827 * C6964) *
                         C93711) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C31831 * C807 + C31825 * C815 + C31833 * C806 +
                      C31826 * C814 + C31835 * C805 + C31827 * C813) *
                         C31929 +
                     (C31831 * C889 + C31825 * C1021 + C31833 * C888 +
                      C31826 * C1020 + C31835 * C887 + C31827 * C1019) *
                         C93711) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C31835 * C886 + C31827 * C1018 + C31833 * C887 +
                      C31826 * C1019 + C31831 * C888 + C31825 * C1020) *
                         C93711 +
                     (C31835 * C804 + C31827 * C812 + C31833 * C805 +
                      C31826 * C813 + C31831 * C806 + C31825 * C814) *
                         C31929 +
                     (C31835 * C192 + C31827 * C365 + C31833 * C191 +
                      C31826 * C364 + C31831 * C190 + C31825 * C363) *
                         C31828 +
                     (C31835 * C111 + C31827 * C117 + C31833 * C110 +
                      C31826 * C116 + C31831 * C109 + C31825 * C115) *
                         C31928) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C31831 * C110 + C31825 * C116 + C31833 * C111 +
                      C31826 * C117 + C31835 * C112 + C31827 * C118) *
                         C31928 +
                     (C31831 * C191 + C31825 * C364 + C31833 * C192 +
                      C31826 * C365 + C31835 * C193 + C31827 * C366) *
                         C31828 +
                     (C31831 * C805 + C31825 * C813 + C31833 * C804 +
                      C31826 * C812 + C31835 * C1983 + C31827 * C1984) *
                         C31929 +
                     (C31831 * C887 + C31825 * C1019 + C31833 * C886 +
                      C31826 * C1018 + C31835 * C2056 + C31827 * C2228) *
                         C93711) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C32942 + C32943 + C32944) * C31929 +
                     (C32945 + C32946 + C32947) * C93711) *
                        C93673 * C1382 -
                    ((C31835 * C3493 + C31827 * C3641 + C31833 * C3492 +
                      C31826 * C3640 + C31831 * C3491 + C31825 * C3639) *
                         C93711 +
                     (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 +
                      C31826 * C3414 + C31831 * C3409 + C31825 * C3413) *
                         C31929 +
                     (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 +
                      C31826 * C1601 + C31831 * C1470 + C31825 * C1602) *
                         C31828 +
                     (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
                      C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                         C31928) *
                        C93673 * C1383 +
                    ((C31831 * C1389 + C31825 * C1397 + C31833 * C1390 +
                      C31826 * C1398 + C31835 * C1391 + C31827 * C1399) *
                         C31928 +
                     (C31831 * C1471 + C31825 * C1603 + C31833 * C1472 +
                      C31826 * C1604 + C31835 * C1473 + C31827 * C1605) *
                         C31828 +
                     (C31831 * C5819 + C31825 * C5825 + C31833 * C5820 +
                      C31826 * C5826 + C31835 * C12033 + C31827 * C12034) *
                         C31929 +
                     (C31831 * C5923 + C31825 * C6095 + C31833 * C5925 +
                      C31826 * C6096 + C31835 * C12136 + C31827 * C12366) *
                         C93711) *
                        C93673 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     (C36999 * C807 + C93582 * C815) * C37063 +
                     (C36999 * C889 + C93582 * C1021) * C36995 +
                     (C36999 * C808 + C93582 * C816) * C37064 +
                     (C36999 * C890 + C93582 * C1022) * C36996 +
                     (C36999 * C4917 + C93582 * C4921) * C37065 +
                     (C36999 * C5039 + C93582 * C5242) * C36997) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C36999 * C5038 + C93582 * C5241) * C36997 +
                     (C36999 * C4916 + C93582 * C4920) * C37065 +
                     (C36999 * C891 + C93582 * C1023) * C36996 +
                     (C36999 * C809 + C93582 * C817) * C37064 +
                     (C36999 * C888 + C93582 * C1020) * C36995 +
                     (C36999 * C806 + C93582 * C814) * C37063 +
                     (C36999 * C190 + C93582 * C363) * C36994 +
                     (C36999 * C109 + C93582 * C115) * C37062) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C36999 * C110 + C93582 * C116) * C37062 +
                     (C36999 * C191 + C93582 * C364) * C36994 +
                     (C36999 * C805 + C93582 * C813) * C37063 +
                     (C36999 * C887 + C93582 * C1019) * C36995 +
                     (C36999 * C810 + C93582 * C818) * C37064 +
                     (C36999 * C892 + C93582 * C1024) * C36996 +
                     (C36999 * C6615 + C93582 * C6616) * C37065 +
                     (C36999 * C6738 + C93582 * C6964) * C36997) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                     C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                        C93673 * C93635 * C800 -
                    (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
                     C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
                     C37700 * C36994 + C37699 * C37062) *
                        C93673 * C93635 * C801 +
                    (C37701 * C37062 + C37702 * C36994 + C37703 * C37063 +
                     C37704 * C36995 + C37706 * C37064 + C37705 * C36996 +
                     (C36999 * C37482 + C93582 * C37483) * C37065 +
                     (C36999 * C37561 + C93582 * C37681) * C36997) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                     C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                        C93673 * C1382 -
                    ((C36999 * C8741 + C93582 * C8965) * C36997 +
                     (C36999 * C8615 + C93582 * C8617) * C37065 +
                     (C36999 * C5922 + C93582 * C6094) * C36996 +
                     (C36999 * C5818 + C93582 * C5824) * C37064 +
                     (C36999 * C3491 + C93582 * C3639) * C36995 +
                     (C36999 * C3409 + C93582 * C3413) * C37063 +
                     (C36999 * C1470 + C93582 * C1602) * C36994 +
                     (C36999 * C1388 + C93582 * C1396) * C37062) *
                        C93673 * C1383 +
                    ((C36999 * C1389 + C93582 * C1397) * C37062 +
                     (C36999 * C1471 + C93582 * C1603) * C36994 +
                     (C36999 * C5819 + C93582 * C5825) * C37063 +
                     (C36999 * C5923 + C93582 * C6095) * C36995 +
                     (C36999 * C5821 + C93582 * C5827) * C37064 +
                     (C36999 * C5924 + C93582 * C6097) * C36996 +
                     (C36999 * C38050 + C93582 * C38051) * C37065 +
                     (C36999 * C38111 + C93582 * C38215) * C36997) *
                        C93673 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C800 -
          ((C32191 * C810 + C33028 + C33028 + C93711 * C1082 + C32190 * C805 +
            C33029 + C33029 + C31828 * C1077) *
               C31827 +
           (C32191 * C809 + C33030 + C33030 + C93711 * C1081 + C32190 * C806 +
            C33031 + C33031 + C31828 * C1078) *
               C31826 +
           (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
            C33033 + C33033 + C31828 * C1079) *
               C31825) *
              C93673 * C93635 * C801 +
          ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
            C33035 + C33035 + C93711 * C5358) *
               C31825 +
           (C32190 * C809 + C33036 + C33036 + C31828 * C1081 + C32191 * C4916 +
            C33037 + C33037 + C93711 * C5357) *
               C31826 +
           (C32190 * C810 + C33038 + C33038 + C31828 * C1082 + C32191 * C6615 +
            C33039 + C33039 + C93711 * C7087) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
           (C32228 + C32227) * C31825) *
              C93673 * C93635 * C93621 * C98 +
          (C32233 * C31825 + (C32232 + C32231) * C31826 +
           (C32190 * C112 + C32213 + C32213 + C31828 * C423 + C32191 * C1983 +
            C32214 + C32214 + C93711 * C2295) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C1382 -
          ((C32191 * C3411 + C33736 + C33736 + C93711 * C3711 + C32190 * C1386 +
            C33737 + C33737 + C31828 * C1658) *
               C31827 +
           (C32191 * C3410 + C33738 + C33738 + C93711 * C3710 + C32190 * C1387 +
            C33739 + C33739 + C31828 * C1659) *
               C31826 +
           (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 + C32190 * C1388 +
            C33741 + C33741 + C31828 * C1660) *
               C31825) *
              C93673 * C1383 +
          ((C32190 * C1389 + C33742 + C33742 + C31828 * C1661 + C32191 * C5819 +
            C33743 + C33743 + C93711 * C6175) *
               C31825 +
           (C32190 * C1390 + C33744 + C33744 + C31828 * C1662 + C32191 * C5820 +
            C33745 + C33745 + C93711 * C6177) *
               C31826 +
           (C32190 * C1391 + C33746 + C33746 + C31828 * C1663 +
            C32191 * C12033 + C33747 + C33747 + C93711 * C12465) *
               C31827) *
              C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C93621 * C97 -
          (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
           C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
           C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
              C93582 * C93673 * C93635 * C93621 * C98 +
          (C37216 * C110 + C37229 + C37229 + C36994 * C421 + C37217 * C805 +
           C37230 + C37230 + C36995 * C1077 + C37218 * C810 + C37231 + C37231 +
           C36996 * C1082 + C37219 * C6615 + C37232 + C37232 + C36997 * C7087) *
              C93582 * C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C800 -
          (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
           C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
           C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
              C93582 * C93673 * C93635 * C801 +
          (C37216 * C808 + C37762 + C37762 + C36994 * C1080 + C37217 * C4917 +
           C37763 + C37763 + C36995 * C5358 + C37218 * C4918 + C37764 + C37764 +
           C36996 * C5359 + C37219 * C37482 + C37765 + C37765 +
           C36997 * C37756) *
              C93582 * C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C1382 -
          (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
           C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 + C38270 +
           C36995 * C3709 + C37216 * C1388 + C38271 + C38271 + C36994 * C1660) *
              C93582 * C93673 * C1383 +
          (C37216 * C1389 + C38272 + C38272 + C36994 * C1661 + C37217 * C5819 +
           C38273 + C38273 + C36995 * C6175 + C37218 * C5821 + C38274 + C38274 +
           C36996 * C6176 + C37219 * C38050 + C38275 + C38275 +
           C36997 * C38266) *
              C93582 * C93673 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C800 -
          ((C4584 * C93711 + C4301 * C31929 + C2390 * C31828 + C2160 * C31928) *
               C31827 +
           (C4583 * C93711 + C4298 * C31929 + C2391 * C31828 + C2162 * C31928) *
               C31826 +
           (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 + C5149 * C31928) *
               C31825) *
              C93635 * C801 +
          ((C5151 * C31928 + C5461 * C31828 + C5156 * C31929 + C5463 * C93711) *
               C31825 +
           (C4298 * C31928 + C4583 * C31828 + C5154 * C31929 + C5462 * C93711) *
               C31826 +
           (C4301 * C31928 + C4584 * C31828 +
            (C275 * C6615 + C93673 * C6856) * C31929 +
            (C275 * C6738 + C93673 * C7204) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C93621 * C97 -
          ((C32316 + C32317 + C32318 + C32319) * C31827 +
           (C32315 + C32314 + C32313 + C32312) * C31826 +
           (C32311 + C32310 + C32309 + C32308) * C31825) *
              C93635 * C93621 * C98 +
          (C32322 * C31825 + (C32319 + C32318 + C32317 + C32316) * C31826 +
           (C312 * C31928 + C523 * C31828 +
            (C275 * C1983 + C93673 * C2142) * C31929 +
            (C275 * C2056 + C93673 * C2378) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C1382 -
          ((C18867 * C93711 + C18541 * C31929 + C3104 * C31828 +
            C2874 * C31928) *
               C31827 +
           (C8195 * C93711 + C7870 * C31929 + C3105 * C31828 + C2876 * C31928) *
               C31826 +
           (C9203 * C93711 + C8863 * C31929 +
            (C275 * C1470 + C93673 * C1726) * C31828 +
            (C275 * C1388 + C93673 * C1536) * C31928) *
               C31825) *
              C1383 +
          (((C275 * C1389 + C93673 * C1537) * C31928 +
            (C275 * C1471 + C93673 * C1727) * C31828 +
            (C275 * C5819 + C93673 * C6009) * C31929 +
            (C275 * C5923 + C93673 * C6267) * C93711) *
               C31825 +
           ((C275 * C1390 + C93673 * C1538) * C31928 +
            (C275 * C1472 + C93673 * C1728) * C31828 +
            (C275 * C5820 + C93673 * C6010) * C31929 +
            (C275 * C5925 + C93673 * C6269) * C93711) *
               C31826 +
           ((C275 * C1391 + C93673 * C1539) * C31928 +
            (C275 * C1473 + C93673 * C1729) * C31828 +
            (C275 * C12033 + C93673 * C12248) * C31929 +
            (C275 * C12136 + C93673 * C12575) * C93711) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
           C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
              C93582 * C93635 * C93621 * C98 +
          (C307 * C37062 + C521 * C36994 + C2160 * C37063 + C2390 * C36995 +
           C4301 * C37064 + C4584 * C36996 +
           (C275 * C6615 + C93673 * C6856) * C37065 +
           (C275 * C6738 + C93673 * C7204) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C800 -
          (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 + C5156 * C37064 +
           C5461 * C36995 + C5151 * C37063 + C5460 * C36994 + C5149 * C37062) *
              C93582 * C93635 * C801 +
          (C5151 * C37062 + C5461 * C36994 + C5156 * C37063 + C5463 * C36995 +
           C37629 * C37064 + C37819 * C36996 +
           (C275 * C37482 + C93673 * C37613) * C37065 +
           (C275 * C37561 + C93673 * C37815) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C1382 -
          ((C275 * C8741 + C93673 * C9195) * C36997 +
           (C275 * C8615 + C93673 * C8843) * C37065 + C9202 * C36996 +
           C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
           (C275 * C1470 + C93673 * C1726) * C36994 +
           (C275 * C1388 + C93673 * C1536) * C37062) *
              C93582 * C1383 +
          ((C275 * C1389 + C93673 * C1537) * C37062 +
           (C275 * C1471 + C93673 * C1727) * C36994 +
           (C275 * C5819 + C93673 * C6009) * C37063 +
           (C275 * C5923 + C93673 * C6267) * C36995 +
           (C275 * C5821 + C93673 * C6011) * C37064 +
           (C275 * C5924 + C93673 * C6268) * C36996 +
           (C275 * C38050 + C93673 * C38163) * C37065 +
           (C275 * C38111 + C93673 * C38325) * C36997) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C32942 + C32943 + C32944) * C275 +
            (C33200 + C33201 + C33202) * C93673) *
               C93711) *
              C93635 * C800 -
          (((C33203 + C33204 + C33205) * C93673 +
            (C32951 + C32952 + C32953) * C275) *
               C93711 +
           ((C33202 + C33201 + C33200) * C93673 +
            (C32944 + C32943 + C32942) * C275) *
               C31828) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C275 +
            (C33205 + C33204 + C33203) * C93673) *
               C31828 +
           ((C31831 * C4917 + C31825 * C4921 + C31833 * C4916 + C31826 * C4920 +
             C31835 * C6615 + C31827 * C6616) *
                C275 +
            (C31831 * C5121 + C31825 * C5538 + C31833 * C5120 + C31826 * C5537 +
             C31835 * C6856 + C31827 * C7309) *
                C93673) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C31831 * C807 + C31825 * C815 + C31833 * C806 + C31826 * C814 +
             C31835 * C805 + C31827 * C813) *
                C275 +
            (C31831 * C955 + C31825 * C1203 + C31833 * C954 + C31826 * C1202 +
             C31835 * C953 + C31827 * C1201) *
                C93673) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C31835 * C952 + C31827 * C1200 + C31833 * C953 + C31826 * C1201 +
             C31831 * C954 + C31825 * C1202) *
                C93673 +
            (C31835 * C804 + C31827 * C812 + C31833 * C805 + C31826 * C813 +
             C31831 * C806 + C31825 * C814) *
                C275) *
               C93711 +
           ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C93673 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C275) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C275 +
            (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
             C31835 * C280 + C31827 * C583) *
                C93673) *
               C31828 +
           ((C31831 * C805 + C31825 * C813 + C31833 * C804 + C31826 * C812 +
             C31835 * C1983 + C31827 * C1984) *
                C275 +
            (C31831 * C953 + C31825 * C1201 + C31833 * C952 + C31826 * C1200 +
             C31835 * C2142 + C31827 * C2460) *
                C93673) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C32942 + C32943 + C32944) * C275 +
            (C33200 + C33201 + C33202) * C93673) *
               C93711) *
              C1382 -
          (((C31835 * C3567 + C31827 * C3855 + C31833 * C3566 + C31826 * C3854 +
             C31831 * C3565 + C31825 * C3853) *
                C93673 +
            (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 + C31826 * C3414 +
             C31831 * C3409 + C31825 * C3413) *
                C275) *
               C93711 +
           ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 + C31826 * C1783 +
             C31831 * C1536 + C31825 * C1784) *
                C93673 +
            (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 + C31826 * C1395 +
             C31831 * C1388 + C31825 * C1396) *
                C275) *
               C31828) *
              C1383 +
          (((C31831 * C1389 + C31825 * C1397 + C31833 * C1390 + C31826 * C1398 +
             C31835 * C1391 + C31827 * C1399) *
                C275 +
            (C31831 * C1537 + C31825 * C1785 + C31833 * C1538 + C31826 * C1786 +
             C31835 * C1539 + C31827 * C1787) *
                C93673) *
               C31828 +
           ((C31831 * C5819 + C31825 * C5825 + C31833 * C5820 + C31826 * C5826 +
             C31835 * C12033 + C31827 * C12034) *
                C275 +
            (C31831 * C6009 + C31825 * C6347 + C31833 * C6010 + C31826 * C6348 +
             C31835 * C12248 + C31827 * C12683) *
                C93673) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           ((C36999 * C807 + C93582 * C815) * C275 +
            (C36999 * C955 + C93582 * C1203) * C93673) *
               C36995 +
           ((C36999 * C808 + C93582 * C816) * C275 +
            (C36999 * C956 + C93582 * C1204) * C93673) *
               C36996 +
           ((C36999 * C4917 + C93582 * C4921) * C275 +
            (C36999 * C5121 + C93582 * C5538) * C93673) *
               C36997) *
              C93635 * C93621 * C97 -
          (((C36999 * C5120 + C93582 * C5537) * C93673 +
            (C36999 * C4916 + C93582 * C4920) * C275) *
               C36997 +
           ((C36999 * C957 + C93582 * C1205) * C93673 +
            (C36999 * C809 + C93582 * C817) * C275) *
               C36996 +
           ((C36999 * C954 + C93582 * C1202) * C93673 +
            (C36999 * C806 + C93582 * C814) * C275) *
               C36995 +
           ((C36999 * C277 + C93582 * C580) * C93673 +
            (C36999 * C109 + C93582 * C115) * C275) *
               C36994) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C275 +
            (C36999 * C278 + C93582 * C581) * C93673) *
               C36994 +
           ((C36999 * C805 + C93582 * C813) * C275 +
            (C36999 * C953 + C93582 * C1201) * C93673) *
               C36995 +
           ((C36999 * C810 + C93582 * C818) * C275 +
            (C36999 * C958 + C93582 * C1206) * C93673) *
               C36996 +
           ((C36999 * C6615 + C93582 * C6616) * C275 +
            (C36999 * C6856 + C93582 * C7309) * C93673) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C93635 * C800 -
          ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
           (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
              C93635 * C801 +
          (C37891 * C36994 + C37892 * C36995 + (C37882 + C37890) * C36996 +
           ((C36999 * C37482 + C93582 * C37483) * C275 +
            (C36999 * C37613 + C93582 * C37869) * C93673) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C1382 -
          (((C36999 * C8843 + C93582 * C9301) * C93673 +
            (C36999 * C8615 + C93582 * C8617) * C275) *
               C36997 +
           ((C36999 * C6008 + C93582 * C6346) * C93673 +
            (C36999 * C5818 + C93582 * C5824) * C275) *
               C36996 +
           ((C36999 * C3565 + C93582 * C3853) * C93673 +
            (C36999 * C3409 + C93582 * C3413) * C275) *
               C36995 +
           ((C36999 * C1536 + C93582 * C1784) * C93673 +
            (C36999 * C1388 + C93582 * C1396) * C275) *
               C36994) *
              C1383 +
          (((C36999 * C1389 + C93582 * C1397) * C275 +
            (C36999 * C1537 + C93582 * C1785) * C93673) *
               C36994 +
           ((C36999 * C5819 + C93582 * C5825) * C275 +
            (C36999 * C6009 + C93582 * C6347) * C93673) *
               C36995 +
           ((C36999 * C5821 + C93582 * C5827) * C275 +
            (C36999 * C6011 + C93582 * C6349) * C93673) *
               C36996 +
           ((C36999 * C38050 + C93582 * C38051) * C275 +
            (C36999 * C38163 + C93582 * C38376) * C93673) *
               C36997) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C800 -
          (((C31929 * C958 + C93711 * C1264 + C31928 * C953 + C31828 * C1259) *
                C93673 +
            (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
                C275) *
               C31827 +
           ((C31929 * C957 + C93711 * C1263 + C31928 * C954 + C31828 * C1260) *
                C93673 +
            (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
                C275) *
               C31826 +
           ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C93673 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C275) *
               C31825) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C275 +
            (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
                C93673) *
               C31825 +
           ((C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C275 +
            (C31928 * C957 + C31828 * C1263 + C31929 * C5120 + C93711 * C5637) *
                C93673) *
               C31826 +
           ((C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
                C275 +
            (C31928 * C958 + C31828 * C1264 + C31929 * C6856 + C93711 * C7420) *
                C93673) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C93621 * C97 -
          (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
           ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
           ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
              C93635 * C93621 * C98 +
          (C32492 * C31825 +
           ((C31966 + C31965) * C275 + (C32489 + C32488) * C93673) * C31826 +
           ((C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
                C275 +
            (C31928 * C280 + C31828 * C639 + C31929 * C2142 + C93711 * C2527) *
                C93673) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C1382 -
          (((C31929 * C3567 + C93711 * C3925 + C31928 * C1534 +
             C31828 * C1840) *
                C93673 +
            (C31929 * C3411 + C93711 * C3493 + C31928 * C1386 +
             C31828 * C1468) *
                C275) *
               C31827 +
           ((C31929 * C3566 + C93711 * C3924 + C31928 * C1535 +
             C31828 * C1841) *
                C93673 +
            (C31929 * C3410 + C93711 * C3492 + C31928 * C1387 +
             C31828 * C1469) *
                C275) *
               C31826 +
           ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
             C31828 * C1842) *
                C93673 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C275) *
               C31825) *
              C1383 +
          (((C31928 * C1389 + C31828 * C1471 + C31929 * C5819 +
             C93711 * C5923) *
                C275 +
            (C31928 * C1537 + C31828 * C1843 + C31929 * C6009 +
             C93711 * C6427) *
                C93673) *
               C31825 +
           ((C31928 * C1390 + C31828 * C1472 + C31929 * C5820 +
             C93711 * C5925) *
                C275 +
            (C31928 * C1538 + C31828 * C1844 + C31929 * C6010 +
             C93711 * C6429) *
                C93673) *
               C31826 +
           ((C31928 * C1391 + C31828 * C1473 + C31929 * C12033 +
             C93711 * C12136) *
                C275 +
            (C31928 * C1539 + C31828 * C1845 + C31929 * C12248 +
             C93711 * C12782) *
                C93673) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C93621 * C97 -
          ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
            C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
               C93673 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C275) *
              C93582 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C275 +
           (C37062 * C278 + C36994 * C637 + C37063 * C953 + C36995 * C1259 +
            C37064 * C958 + C36996 * C1264 + C37065 * C6856 + C36997 * C7420) *
               C93673) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C800 -
          ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
            C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
               C93673 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C275) *
              C93582 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C275 +
           (C37062 * C956 + C36994 * C1262 + C37063 * C5121 + C36995 * C5638 +
            C37064 * C5122 + C36996 * C5639 + C37065 * C37613 +
            C36997 * C37942) *
               C93673) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C1382 -
          ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
            C37063 * C3565 + C36995 * C3923 + C37062 * C1536 + C36994 * C1842) *
               C93673 +
           (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
            C37063 * C3409 + C36995 * C3491 + C37062 * C1388 + C36994 * C1470) *
               C275) *
              C93582 * C1383 +
          ((C37062 * C1389 + C36994 * C1471 + C37063 * C5819 + C36995 * C5923 +
            C37064 * C5821 + C36996 * C5924 + C37065 * C38050 +
            C36997 * C38111) *
               C275 +
           (C37062 * C1537 + C36994 * C1843 + C37063 * C6009 + C36995 * C6427 +
            C37064 * C6011 + C36996 * C6428 + C37065 * C38163 +
            C36997 * C38427) *
               C93673) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C800 -
          ((C4840 * C93711 + C2625 * C31828) * C31827 +
           (C4839 * C93711 + C2626 * C31828) * C31826 +
           (C5741 * C93711 + C5740 * C31828) * C31825) *
              C93635 * C801 +
          ((C5741 * C31828 + C5743 * C93711) * C31825 +
           (C4839 * C31828 + C5742 * C93711) * C31826 +
           (C4840 * C31828 +
            (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C93621 * C97 -
          ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
           (C32568 + C32567) * C31825) *
              C93635 * C93621 * C98 +
          (C32573 * C31825 + (C32572 + C32571) * C31826 +
           (C746 * C31828 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C1382 -
          ((C19182 * C93711 + C3339 * C31828) * C31827 +
           (C8515 * C93711 + C3340 * C31828) * C31826 +
           (C9527 * C93711 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
               C31825) *
              C1383 +
          (((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C31828 +
            (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C93711) *
               C31825 +
           ((C713 * C1390 + C1911 + C1911 + C93673 * C1902) * C31828 +
            (C713 * C5820 + C6516 + C6516 + C93673 * C6509) * C93711) *
               C31826 +
           ((C713 * C1391 + C1912 + C1912 + C93673 * C1903) * C31828 +
            (C713 * C12033 + C17208 + C17208 + C93673 * C12893) * C93711) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
              C93582 * C93635 * C93621 * C98 +
          (C744 * C36994 + C2625 * C36995 + C4840 * C36996 +
           (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C800 -
          (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 + C5740 * C36994) *
              C93582 * C93635 * C801 +
          (C5741 * C36994 + C5743 * C36995 + C38000 * C36996 +
           (C713 * C37482 + C37997 + C37997 + C93673 * C37993) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C1382 -
          ((C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C36997 +
           C9526 * C36996 + C9527 * C36995 +
           (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
              C93582 * C1383 +
          ((C713 * C1389 + C1910 + C1910 + C93673 * C1901) * C36994 +
           (C713 * C5819 + C6514 + C6514 + C93673 * C6507) * C36995 +
           (C713 * C5821 + C6515 + C6515 + C93673 * C6508) * C36996 +
           (C713 * C38050 + C38480 + C38480 + C93673 * C38478) * C36997) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                       C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                       C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                          C93673 * C31828 +
                      (C32678 + C32679 + C32680) * C93673 * C93711) *
                         C2695 -
                     ((C31834 * C3411 + C33428 + C33428 + C31827 * C3419 +
                       C31832 * C3410 + C33429 + C33429 + C31826 * C3418 +
                       C31830 * C3409 + C33430 + C33430 + C31825 * C3417) *
                          C93673 * C93711 +
                      (C31834 * C1386 + C33431 + C33431 + C31827 * C1402 +
                       C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
                       C31830 * C1388 + C33433 + C33433 + C31825 * C1404) *
                          C93673 * C31828) *
                         C2696) *
                        C93621 * C1981 +
                    (((C31830 * C1387 + C35145 + C35145 + C31825 * C1403 +
                       C31832 * C1386 + C35146 + C35146 + C31826 * C1402 +
                       C31834 * C1385 + C35147 + C35147 + C31827 * C1401) *
                          C93673 * C31828 +
                      (C31830 * C3410 + C35148 + C35148 + C31825 * C3418 +
                       C31832 * C3411 + C35149 + C35149 + C31826 * C3419 +
                       C31834 * C3412 + C35150 + C35150 + C31827 * C3420) *
                          C93673 * C93711) *
                         C2696 -
                     ((C34159 + C34158 + C34157) * C93673 * C93711 +
                      (C31834 * C111 + C31846 + C31846 + C31827 * C123 +
                       C31832 * C110 + C31847 + C31847 + C31826 * C122 +
                       C31830 * C109 + C31848 + C31848 + C31825 * C121) *
                          C93673 * C31828) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) *
                          C93673 * C36994 +
                      C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
                         C2695 -
                     ((C36998 * C8615 + C38054 + C38054 + C93582 * C8619) *
                          C93673 * C36997 +
                      (C36998 * C5818 + C38055 + C38055 + C93582 * C5830) *
                          C93673 * C36996 +
                      (C36998 * C3409 + C38056 + C38056 + C93582 * C3417) *
                          C93673 * C36995 +
                      (C36998 * C1388 + C38057 + C38057 + C93582 * C1404) *
                          C93673 * C36994) *
                         C2696) *
                        C93621 * C1981 +
                    (((C36998 * C1387 + C39203 + C39203 + C93582 * C1403) *
                          C93673 * C36994 +
                      (C36998 * C3410 + C39204 + C39204 + C93582 * C3418) *
                          C93673 * C36995 +
                      (C36998 * C5817 + C39205 + C39205 + C93582 * C5829) *
                          C93673 * C36996 +
                      (C36998 * C8616 + C39206 + C39206 + C93582 * C8620) *
                          C93673 * C36997) *
                         C2696 -
                     (C38565 * C36997 + C38564 * C36996 + C38563 * C36995 +
                      (C36998 * C109 + C37008 + C37008 + C93582 * C121) *
                          C93673 * C36994) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C31831 +
            (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
                C31825 +
            (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
            C31967 * C31835 + C31968 * C31827) *
               C93673 * C2695 -
           ((C35265 + C35266) * C31827 + (C35267 + C35268) * C31835 +
            (C35269 + C35270) * C31826 + (C35271 + C35272) * C31833 +
            (C31929 * C3413 + C93711 * C3495 + C31928 * C1396 +
             C31828 * C1478) *
                C31825 +
            (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
             C31828 * C1470) *
                C31831) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C35272 + C35271) * C31831 + (C35270 + C35269) * C31825 +
            (C35268 + C35267) * C31833 + (C35266 + C35265) * C31826 +
            (C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
             C93711 * C3494) *
                C31835 +
            (C31928 * C1393 + C31828 * C1475 + C31929 * C3416 +
             C93711 * C3498) *
                C31827) *
               C93673 * C2696 -
           ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
            (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
            (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C36999 +
            (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
             C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
                C93582) *
               C93673 * C2695 -
           ((C37065 * C8617 + C36997 * C8743 + C37064 * C5824 + C36996 * C5928 +
             C37063 * C3413 + C36995 * C3495 + C37062 * C1396 +
             C36994 * C1478) *
                C93582 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C36999) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C37062 * C1387 + C36994 * C1469 + C37063 * C3410 + C36995 * C3492 +
             C37064 * C5817 + C36996 * C5921 + C37065 * C8616 +
             C36997 * C8742) *
                C36999 +
            (C37062 * C1395 + C36994 * C1477 + C37063 * C3414 + C36995 * C3496 +
             C37064 * C5823 + C36996 * C5927 + C37065 * C8618 +
             C36997 * C8744) *
                C93582) *
               C93673 * C2696 -
           ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
             C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
                C93582 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C36999) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31831 +
             (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
             C306 * C31826 + C307 * C31835 + C308 * C31827) *
                C31828 +
            (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
               C2695 -
           ((C18540 * C31827 + C18541 * C31835 + C7869 * C31826 +
             C7870 * C31833 + C8862 * C31825 + C8863 * C31831) *
                C93711 +
            (C2873 * C31827 + C2874 * C31835 + C2875 * C31826 + C2876 * C31833 +
             (C275 * C1396 + C93673 * C1544) * C31825 +
             (C275 * C1388 + C93673 * C1536) * C31831) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C31831 + C2875 * C31825 + C2874 * C31833 + C2873 * C31826 +
             C2872 * C31835 + C2871 * C31827) *
                C31828 +
            (C7870 * C31831 + C7869 * C31825 + C18541 * C31833 +
             C18540 * C31826 + (C275 * C3412 + C93673 * C3568) * C31835 +
             (C275 * C3416 + C93673 * C3572) * C31827) *
                C93711) *
               C2696 -
           ((C34385 + C34384 + C34383 + C34382 + C34381 + C34380) * C93711 +
            (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
             C306 * C31825 + C305 * C31831) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C36999 +
             (C275 * C114 + C93673 * C282) * C93582) *
                C36994 +
            (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
               C2695 -
           (((C275 * C8617 + C93673 * C8845) * C93582 +
             (C275 * C8615 + C93673 * C8843) * C36999) *
                C36997 +
            (C8860 * C93582 + C8861 * C36999) * C36996 +
            (C8862 * C93582 + C8863 * C36999) * C36995 +
            ((C275 * C1396 + C93673 * C1544) * C93582 +
             (C275 * C1388 + C93673 * C1536) * C36999) *
                C36994) *
               C2696) *
              C93621 * C1981 +
          (((C2876 * C36999 + C2875 * C93582) * C36994 +
            (C7870 * C36999 + C7869 * C93582) * C36995 +
            (C7868 * C36999 + C7867 * C93582) * C36996 +
            ((C275 * C8616 + C93673 * C8844) * C36999 +
             (C275 * C8618 + C93673 * C8846) * C93582) *
                C36997) *
               C2696 -
           ((C38703 + C38702) * C36997 + (C38701 + C38700) * C36996 +
            (C38699 + C38698) * C36995 +
            (C306 * C93582 + C305 * C36999) * C36994) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                       C31826 * C115 + C31835 * C110 + C31827 * C116) *
                          C31928 +
                      (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                       C31826 * C363 + C31835 * C191 + C31827 * C364) *
                          C31828 +
                      (C32942 + C32943 + C32944) * C31929 +
                      (C32945 + C32946 + C32947) * C93711) *
                         C93673 * C2695 -
                     ((C31835 * C3493 + C31827 * C3641 + C31833 * C3492 +
                       C31826 * C3640 + C31831 * C3491 + C31825 * C3639) *
                          C93711 +
                      (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 +
                       C31826 * C3414 + C31831 * C3409 + C31825 * C3413) *
                          C31929 +
                      (C31835 * C1468 + C31827 * C1600 + C31833 * C1469 +
                       C31826 * C1601 + C31831 * C1470 + C31825 * C1602) *
                          C31828 +
                      (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
                       C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                          C31928) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    (((C31831 * C1387 + C31825 * C1395 + C31833 * C1386 +
                       C31826 * C1394 + C31835 * C1385 + C31827 * C1393) *
                          C31928 +
                      (C31831 * C1469 + C31825 * C1601 + C31833 * C1468 +
                       C31826 * C1600 + C31835 * C1467 + C31827 * C1599) *
                          C31828 +
                      (C31831 * C3410 + C31825 * C3414 + C31833 * C3411 +
                       C31826 * C3415 + C31835 * C3412 + C31827 * C3416) *
                          C31929 +
                      (C31831 * C3492 + C31825 * C3640 + C31833 * C3493 +
                       C31826 * C3641 + C31835 * C3494 + C31827 * C3642) *
                          C93711) *
                         C93673 * C2696 -
                     ((C34501 + C34500 + C34499) * C93711 +
                      (C34498 + C34497 + C34496) * C31929 +
                      (C31835 * C192 + C31827 * C365 + C31833 * C191 +
                       C31826 * C364 + C31831 * C190 + C31825 * C363) *
                          C31828 +
                      (C31835 * C111 + C31827 * C117 + C31833 * C110 +
                       C31826 * C116 + C31831 * C109 + C31825 * C115) *
                          C31928) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C37062 +
                      (C36999 * C189 + C93582 * C362) * C36994 +
                      C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                      C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                         C93673 * C2695 -
                     ((C36999 * C8741 + C93582 * C8965) * C36997 +
                      (C36999 * C8615 + C93582 * C8617) * C37065 +
                      (C36999 * C5922 + C93582 * C6094) * C36996 +
                      (C36999 * C5818 + C93582 * C5824) * C37064 +
                      (C36999 * C3491 + C93582 * C3639) * C36995 +
                      (C36999 * C3409 + C93582 * C3413) * C37063 +
                      (C36999 * C1470 + C93582 * C1602) * C36994 +
                      (C36999 * C1388 + C93582 * C1396) * C37062) *
                         C93673 * C2696) *
                        C93621 * C1981 +
                    (((C36999 * C1387 + C93582 * C1395) * C37062 +
                      (C36999 * C1469 + C93582 * C1601) * C36994 +
                      (C36999 * C3410 + C93582 * C3414) * C37063 +
                      (C36999 * C3492 + C93582 * C3640) * C36995 +
                      (C36999 * C5817 + C93582 * C5823) * C37064 +
                      (C36999 * C5921 + C93582 * C6093) * C36996 +
                      (C36999 * C8616 + C93582 * C8618) * C37065 +
                      (C36999 * C8742 + C93582 * C8966) * C36997) *
                         C93673 * C2696 -
                     (C38787 * C36997 + C38786 * C37065 + C38785 * C36996 +
                      C38784 * C37064 + C38783 * C36995 + C38782 * C37063 +
                      (C36999 * C190 + C93582 * C363) * C36994 +
                      (C36999 * C109 + C93582 * C115) * C37062) *
                         C93673 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
             C32194 + C32194 + C93711 * C1079) *
                C31825 +
            (C32227 + C32228) * C31826 + C32233 * C31827) *
               C93673 * C2695 -
           ((C35585 + C35586) * C31827 + (C35587 + C35588) * C31826 +
            (C32191 * C3409 + C33740 + C33740 + C93711 * C3709 +
             C32190 * C1388 + C33741 + C33741 + C31828 * C1660) *
                C31825) *
               C93673 * C2696) *
              C93621 * C1981 +
          (((C35588 + C35587) * C31825 + (C35586 + C35585) * C31826 +
            (C32190 * C1385 + C35575 + C35575 + C31828 * C1657 +
             C32191 * C3412 + C35576 + C35576 + C93711 * C3712) *
                C31827) *
               C93673 * C2696 -
           ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
            (C32228 + C32227) * C31825) *
               C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
            C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
            C36996 * C1080 + C37219 * C4917 + C37224 + C37224 +
            C36997 * C5358) *
               C93582 * C93673 * C2695 -
           (C37219 * C8615 + C38268 + C38268 + C36997 * C9089 + C37218 * C5818 +
            C38269 + C38269 + C36996 * C6174 + C37217 * C3409 + C38270 +
            C38270 + C36995 * C3709 + C37216 * C1388 + C38271 + C38271 +
            C36994 * C1660) *
               C93582 * C93673 * C2696) *
              C93621 * C1981 +
          ((C37216 * C1387 + C39471 + C39471 + C36994 * C1659 + C37217 * C3410 +
            C39472 + C39472 + C36995 * C3710 + C37218 * C5817 + C39473 +
            C39473 + C36996 * C6173 + C37219 * C8616 + C39474 + C39474 +
            C36997 * C9090) *
               C93582 * C93673 * C2696 -
           (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
            C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
            C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
               C93582 * C93673 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C275 * C108 + C93673 * C276) * C31928 +
             (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
             C5460 * C93711) *
                C31825 +
            (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
               C2695 -
           ((C35687 + C35688 + C35689 + C35690) * C31827 +
            (C35691 + C35692 + C35693 + C35694) * C31826 +
            (C9203 * C93711 + C8863 * C31929 +
             (C275 * C1470 + C93673 * C1726) * C31828 +
             (C275 * C1388 + C93673 * C1536) * C31928) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C35694 + C35693 + C35692 + C35691) * C31825 +
            (C35690 + C35689 + C35688 + C35687) * C31826 +
            (C2872 * C31928 + C3103 * C31828 +
             (C275 * C3412 + C93673 * C3568) * C31929 +
             (C275 * C3494 + C93673 * C3786) * C93711) *
                C31827) *
               C2696 -
           ((C32316 + C32317 + C32318 + C32319) * C31827 +
            (C32315 + C32314 + C32313 + C32312) * C31826 +
            (C32311 + C32310 + C32309 + C32308) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C37062 +
            (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
            C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
            C5463 * C36997) *
               C93582 * C2695 -
           ((C275 * C8741 + C93673 * C9195) * C36997 +
            (C275 * C8615 + C93673 * C8843) * C37065 + C9202 * C36996 +
            C8861 * C37064 + C9203 * C36995 + C8863 * C37063 +
            (C275 * C1470 + C93673 * C1726) * C36994 +
            (C275 * C1388 + C93673 * C1536) * C37062) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C2876 * C37062 + C3105 * C36994 + C7870 * C37063 + C8195 * C36995 +
            C7868 * C37064 + C8194 * C36996 +
            (C275 * C8616 + C93673 * C8844) * C37065 +
            (C275 * C8742 + C93673 * C9196) * C36997) *
               C93582 * C2696 -
           (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
            C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C275 +
             (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
              C31835 * C278 + C31827 * C581) *
                 C93673) *
                C31828 +
            ((C32942 + C32943 + C32944) * C275 +
             (C33200 + C33201 + C33202) * C93673) *
                C93711) *
               C2695 -
           (((C31835 * C3567 + C31827 * C3855 + C31833 * C3566 +
              C31826 * C3854 + C31831 * C3565 + C31825 * C3853) *
                 C93673 +
             (C31835 * C3411 + C31827 * C3415 + C31833 * C3410 +
              C31826 * C3414 + C31831 * C3409 + C31825 * C3413) *
                 C275) *
                C93711 +
            ((C31835 * C1534 + C31827 * C1782 + C31833 * C1535 +
              C31826 * C1783 + C31831 * C1536 + C31825 * C1784) *
                 C93673 +
             (C31835 * C1386 + C31827 * C1394 + C31833 * C1387 +
              C31826 * C1395 + C31831 * C1388 + C31825 * C1396) *
                 C275) *
                C31828) *
               C2696) *
              C93621 * C1981 +
          ((((C31831 * C1387 + C31825 * C1395 + C31833 * C1386 +
              C31826 * C1394 + C31835 * C1385 + C31827 * C1393) *
                 C275 +
             (C31831 * C1535 + C31825 * C1783 + C31833 * C1534 +
              C31826 * C1782 + C31835 * C1533 + C31827 * C1781) *
                 C93673) *
                C31828 +
            ((C31831 * C3410 + C31825 * C3414 + C31833 * C3411 +
              C31826 * C3415 + C31835 * C3412 + C31827 * C3416) *
                 C275 +
             (C31831 * C3566 + C31825 * C3854 + C31833 * C3567 +
              C31826 * C3855 + C31835 * C3568 + C31827 * C3856) *
                 C93673) *
                C93711) *
               C2696 -
           (((C34834 + C34833 + C34832) * C93673 +
             (C34498 + C34497 + C34496) * C275) *
                C93711 +
            ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
              C31831 * C277 + C31825 * C580) *
                 C93673 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C275) *
                C31828) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C275 +
             (C36999 * C276 + C93582 * C579) * C93673) *
                C36994 +
            (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
               C2695 -
           (((C36999 * C8843 + C93582 * C9301) * C93673 +
             (C36999 * C8615 + C93582 * C8617) * C275) *
                C36997 +
            ((C36999 * C6008 + C93582 * C6346) * C93673 +
             (C36999 * C5818 + C93582 * C5824) * C275) *
                C36996 +
            ((C36999 * C3565 + C93582 * C3853) * C93673 +
             (C36999 * C3409 + C93582 * C3413) * C275) *
                C36995 +
            ((C36999 * C1536 + C93582 * C1784) * C93673 +
             (C36999 * C1388 + C93582 * C1396) * C275) *
                C36994) *
               C2696) *
              C93621 * C1981 +
          ((((C36999 * C1387 + C93582 * C1395) * C275 +
             (C36999 * C1535 + C93582 * C1783) * C93673) *
                C36994 +
            ((C36999 * C3410 + C93582 * C3414) * C275 +
             (C36999 * C3566 + C93582 * C3854) * C93673) *
                C36995 +
            ((C36999 * C5817 + C93582 * C5823) * C275 +
             (C36999 * C6007 + C93582 * C6345) * C93673) *
                C36996 +
            ((C36999 * C8616 + C93582 * C8618) * C275 +
             (C36999 * C8844 + C93582 * C9302) * C93673) *
                C36997) *
               C2696 -
           ((C39004 + C38996) * C36997 + (C39003 + C38993) * C36996 +
            (C39002 + C38990) * C36995 +
            ((C36999 * C277 + C93582 * C580) * C93673 +
             (C36999 * C109 + C93582 * C115) * C275) *
                C36994) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                 C275 +
             (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                 C93673) *
                C31825 +
            ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
            C32492 * C31827) *
               C2695 -
           (((C35899 + C35900) * C93673 + (C35267 + C35268) * C275) * C31827 +
            ((C35901 + C35902) * C93673 + (C35271 + C35272) * C275) * C31826 +
            ((C31929 * C3565 + C93711 * C3923 + C31928 * C1536 +
              C31828 * C1842) *
                 C93673 +
             (C31929 * C3409 + C93711 * C3491 + C31928 * C1388 +
              C31828 * C1470) *
                 C275) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          ((((C35272 + C35271) * C275 + (C35902 + C35901) * C93673) * C31825 +
            ((C35268 + C35267) * C275 + (C35900 + C35899) * C93673) * C31826 +
            ((C31928 * C1385 + C31828 * C1467 + C31929 * C3412 +
              C93711 * C3494) *
                 C275 +
             (C31928 * C1533 + C31828 * C1839 + C31929 * C3568 +
              C93711 * C3926) *
                 C93673) *
                C31827) *
               C2696 -
           (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
            ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
            ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
             C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
                C275 +
            (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
             C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
                C93673) *
               C93582 * C2695 -
           ((C37065 * C8843 + C36997 * C9413 + C37064 * C6008 + C36996 * C6426 +
             C37063 * C3565 + C36995 * C3923 + C37062 * C1536 +
             C36994 * C1842) *
                C93673 +
            (C37065 * C8615 + C36997 * C8741 + C37064 * C5818 + C36996 * C5922 +
             C37063 * C3409 + C36995 * C3491 + C37062 * C1388 +
             C36994 * C1470) *
                C275) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C37062 * C1387 + C36994 * C1469 + C37063 * C3410 + C36995 * C3492 +
             C37064 * C5817 + C36996 * C5921 + C37065 * C8616 +
             C36997 * C8742) *
                C275 +
            (C37062 * C1535 + C36994 * C1841 + C37063 * C3566 + C36995 * C3924 +
             C37064 * C6007 + C36996 * C6425 + C37065 * C8844 +
             C36997 * C9414) *
                C93673) *
               C93582 * C2696 -
           ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
             C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
                C93673 +
            (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
             C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
                C275) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
             C5740 * C93711) *
                C31825 +
            (C32567 + C32568) * C31826 + C32573 * C31827) *
               C2695 -
           ((C36001 + C36002) * C31827 + (C36003 + C36004) * C31826 +
            (C9527 * C93711 +
             (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C31828) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C36004 + C36003) * C31825 + (C36002 + C36001) * C31826 +
            (C3338 * C31828 +
             (C713 * C3412 + C4001 + C4001 + C93673 * C3996) * C93711) *
                C31827) *
               C2696 -
           ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
            (C32568 + C32567) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
            C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
               C93582 * C2695 -
           ((C713 * C8615 + C9520 + C9520 + C93673 * C9513) * C36997 +
            C9526 * C36996 + C9527 * C36995 +
            (C713 * C1388 + C1909 + C1909 + C93673 * C1900) * C36994) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C3340 * C36994 + C8515 * C36995 + C8514 * C36996 +
            (C713 * C8616 + C9521 + C9521 + C93673 * C9514) * C36997) *
               C93582 * C2696 -
           (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C31830 * C807 + C31840 + C31840 + C31825 * C823 + C31832 * C806 +
            C31841 + C31841 + C31826 * C822 + C31834 * C805 + C31842 + C31842 +
            C31827 * C821) *
               C93673 * C93711) *
              C93635 * C93621 * C97 -
          ((C31834 * C804 + C31843 + C31843 + C31827 * C820 + C31832 * C805 +
            C31844 + C31844 + C31826 * C821 + C31830 * C806 + C31845 + C31845 +
            C31825 * C822) *
               C93673 * C93711 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C93673 * C31828) *
              C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C93673 * C31828 +
           (C31830 * C805 + C31852 + C31852 + C31825 * C821 + C31832 * C804 +
            C31853 + C31853 + C31826 * C820 + C31834 * C1983 + C31854 + C31854 +
            C31827 * C1985) *
               C93673 * C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C93673 * C31828 +
           (C32678 + C32679 + C32680) * C93673 * C93711) *
              C93635 * C800 -
          ((C32681 + C32682 + C32683) * C93673 * C93711 +
           (C32680 + C32679 + C32678) * C93673 * C31828) *
              C93635 * C801 +
          ((C32683 + C32682 + C32681) * C93673 * C31828 +
           (C31830 * C4917 + C32663 + C32663 + C31825 * C4925 + C31832 * C4916 +
            C32664 + C32664 + C31826 * C4924 + C31834 * C6615 + C32665 +
            C32665 + C31827 * C6617) *
               C93673 * C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           (C36998 * C807 + C37002 + C37002 + C93582 * C823) * C93673 * C36995 +
           (C36998 * C808 + C37003 + C37003 + C93582 * C824) * C93673 * C36996 +
           (C36998 * C4917 + C37004 + C37004 + C93582 * C4925) * C93673 *
               C36997) *
              C93635 * C93621 * C97 -
          ((C36998 * C4916 + C37005 + C37005 + C93582 * C4924) * C93673 *
               C36997 +
           (C36998 * C809 + C37006 + C37006 + C93582 * C825) * C93673 * C36996 +
           (C36998 * C806 + C37007 + C37007 + C93582 * C822) * C93673 * C36995 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93673 *
               C36994) *
              C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93673 * C36994 +
           (C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93673 * C36995 +
           (C36998 * C810 + C37011 + C37011 + C93582 * C826) * C93673 * C36996 +
           (C36998 * C6615 + C37012 + C37012 + C93582 * C6617) * C93673 *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93673 * C36994 +
           C37508 * C36995 + C37509 * C36996 + C37510 * C36997) *
              C93635 * C800 -
          (C37511 * C36997 + C37510 * C36996 + C37509 * C36995 +
           C37508 * C36994) *
              C93635 * C801 +
          (C37509 * C36994 + C37510 * C36995 + C37511 * C36996 +
           (C36998 * C37482 + C37495 + C37495 + C93582 * C37484) * C93673 *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C31963 + C31964) * C31827 + (C31965 + C31966) * C31835 +
           (C31962 + C31961) * C31826 + (C31960 + C31959) * C31833 +
           (C31958 + C31957) * C31825 + (C31956 + C31955) * C31831) *
              C93673 * C93635 * C93621 * C98 +
          (C31967 * C31831 + C31968 * C31825 + (C31966 + C31965) * C31833 +
           (C31964 + C31963) * C31826 +
           (C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
               C31835 +
           (C31928 * C118 + C31828 * C199 + C31929 * C1984 + C93711 * C2057) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
               C31831 +
           (C31928 * C114 + C31828 * C195 + C31929 * C815 + C93711 * C897) *
               C31825 +
           (C31955 + C31956) * C31833 + (C31957 + C31958) * C31826 +
           C31967 * C31835 + C31968 * C31827) *
              C93673 * C93635 * C800 -
          ((C31929 * C818 + C93711 * C900 + C31928 * C813 + C31828 * C895) *
               C31827 +
           (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
               C31835 +
           (C31929 * C817 + C93711 * C899 + C31928 * C814 + C31828 * C896) *
               C31826 +
           (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
               C31833 +
           (C31929 * C816 + C93711 * C898 + C31928 * C815 + C31828 * C897) *
               C31825 +
           (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
               C31831) *
              C93673 * C93635 * C801 +
          ((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
               C31831 +
           (C31928 * C816 + C31828 * C898 + C31929 * C4921 + C93711 * C5043) *
               C31825 +
           (C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
               C31833 +
           (C31928 * C817 + C31828 * C899 + C31929 * C4920 + C93711 * C5042) *
               C31826 +
           (C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
               C31835 +
           (C31928 * C818 + C31828 * C900 + C31929 * C6616 + C93711 * C6739) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C93621 * C97 -
          ((C37065 * C4920 + C36997 * C5042 + C37064 * C817 + C36996 * C899 +
            C37063 * C814 + C36995 * C896 + C37062 * C115 + C36994 * C196) *
               C93582 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C36999) *
              C93673 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C36999 +
           (C37062 * C116 + C36994 * C197 + C37063 * C813 + C36995 * C895 +
            C37064 * C818 + C36996 * C900 + C37065 * C6616 + C36997 * C6739) *
               C93582) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C36999 +
           (C37062 * C114 + C36994 * C195 + C37063 * C815 + C36995 * C897 +
            C37064 * C816 + C36996 * C898 + C37065 * C4921 + C36997 * C5043) *
               C93582) *
              C93673 * C93635 * C800 -
          ((C37065 * C4922 + C36997 * C5044 + C37064 * C4921 + C36996 * C5043 +
            C37063 * C816 + C36995 * C898 + C37062 * C815 + C36994 * C897) *
               C93582 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C36999) *
              C93673 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C36999 +
           (C37062 * C816 + C36994 * C898 + C37063 * C4921 + C36995 * C5043 +
            C37064 * C4922 + C36996 * C5044 + C37065 * C37483 +
            C36997 * C37562) *
               C93582) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C5149 * C31831 + C5150 * C31825 + C2162 * C31833 + C2161 * C31826 +
            C2160 * C31835 + C2159 * C31827) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C2157 * C31827 + C2158 * C31835 + C2159 * C31826 + C2160 * C31833 +
            C2161 * C31825 + C2162 * C31831) *
               C93711 +
           (C310 * C31827 + C309 * C31835 + C308 * C31826 + C307 * C31833 +
            C306 * C31825 + C305 * C31831) *
               C31828) *
              C93635 * C93621 * C98 +
          ((C307 * C31831 + C308 * C31825 + C309 * C31833 + C310 * C31826 +
            C312 * C31835 + C311 * C31827) *
               C31828 +
           (C2160 * C31831 + C2159 * C31825 + C2158 * C31833 + C2157 * C31826 +
            (C275 * C1983 + C93673 * C2142) * C31835 +
            (C275 * C1984 + C93673 * C2143) * C31827) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31831 +
            (C275 * C114 + C93673 * C282) * C31825 + C305 * C31833 +
            C306 * C31826 + C307 * C31835 + C308 * C31827) *
               C31828 +
           (C32832 + C32833 + C32834 + C32835 + C32836 + C32837) * C93711) *
              C93635 * C800 -
          ((C32838 + C32839 + C32840 + C32841 + C32842 + C32843) * C93711 +
           (C32837 + C32836 + C32835 + C32834 + C32833 + C32832) * C31828) *
              C93635 * C801 +
          ((C32843 + C32842 + C32841 + C32840 + C32839 + C32838) * C31828 +
           (C5156 * C31831 + C5155 * C31825 + C5154 * C31833 + C5153 * C31826 +
            (C275 * C6615 + C93673 * C6856) * C31835 +
            (C275 * C6616 + C93673 * C6857) * C31827) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C5149 * C36999 + C5150 * C93582) * C36995 +
           (C5151 * C36999 + C5152 * C93582) * C36996 +
           (C5156 * C36999 + C5155 * C93582) * C36997) *
              C93635 * C93621 * C97 -
          ((C5153 * C93582 + C5154 * C36999) * C36997 +
           (C4299 * C93582 + C4298 * C36999) * C36996 +
           (C2161 * C93582 + C2162 * C36999) * C36995 +
           (C306 * C93582 + C305 * C36999) * C36994) *
              C93635 * C93621 * C98 +
          ((C307 * C36999 + C308 * C93582) * C36994 +
           (C2160 * C36999 + C2159 * C93582) * C36995 +
           (C4301 * C36999 + C4300 * C93582) * C36996 +
           ((C275 * C6615 + C93673 * C6856) * C36999 +
            (C275 * C6616 + C93673 * C6857) * C93582) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C36999 +
            (C275 * C114 + C93673 * C282) * C93582) *
               C36994 +
           (C37616 + C37617) * C36995 + C37626 * C36996 + C37627 * C36997) *
              C93635 * C800 -
          ((C37630 + C37631) * C36997 + (C37621 + C37620) * C36996 +
           (C37619 + C37618) * C36995 + (C37617 + C37616) * C36994) *
              C93635 * C801 +
          (C37626 * C36994 + C37627 * C36995 + (C37631 + C37630) * C36996 +
           ((C275 * C37482 + C93673 * C37613) * C36999 +
            (C275 * C37483 + C93673 * C37614) * C93582) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C31831 * C807 + C31825 * C815 + C31833 * C806 +
                      C31826 * C814 + C31835 * C805 + C31827 * C813) *
                         C31929 +
                     (C31831 * C889 + C31825 * C1021 + C31833 * C888 +
                      C31826 * C1020 + C31835 * C887 + C31827 * C1019) *
                         C93711) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C31835 * C886 + C31827 * C1018 + C31833 * C887 +
                      C31826 * C1019 + C31831 * C888 + C31825 * C1020) *
                         C93711 +
                     (C31835 * C804 + C31827 * C812 + C31833 * C805 +
                      C31826 * C813 + C31831 * C806 + C31825 * C814) *
                         C31929 +
                     (C31835 * C192 + C31827 * C365 + C31833 * C191 +
                      C31826 * C364 + C31831 * C190 + C31825 * C363) *
                         C31828 +
                     (C31835 * C111 + C31827 * C117 + C31833 * C110 +
                      C31826 * C116 + C31831 * C109 + C31825 * C115) *
                         C31928) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C31831 * C110 + C31825 * C116 + C31833 * C111 +
                      C31826 * C117 + C31835 * C112 + C31827 * C118) *
                         C31928 +
                     (C31831 * C191 + C31825 * C364 + C31833 * C192 +
                      C31826 * C365 + C31835 * C193 + C31827 * C366) *
                         C31828 +
                     (C31831 * C805 + C31825 * C813 + C31833 * C804 +
                      C31826 * C812 + C31835 * C1983 + C31827 * C1984) *
                         C31929 +
                     (C31831 * C887 + C31825 * C1019 + C31833 * C886 +
                      C31826 * C1018 + C31835 * C2056 + C31827 * C2228) *
                         C93711) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C31831 * C108 + C31825 * C114 + C31833 * C109 +
                      C31826 * C115 + C31835 * C110 + C31827 * C116) *
                         C31928 +
                     (C31831 * C189 + C31825 * C362 + C31833 * C190 +
                      C31826 * C363 + C31835 * C191 + C31827 * C364) *
                         C31828 +
                     (C32942 + C32943 + C32944) * C31929 +
                     (C32945 + C32946 + C32947) * C93711) *
                        C93673 * C93635 * C800 -
                    ((C32948 + C32949 + C32950) * C93711 +
                     (C32951 + C32952 + C32953) * C31929 +
                     (C32947 + C32946 + C32945) * C31828 +
                     (C32944 + C32943 + C32942) * C31928) *
                        C93673 * C93635 * C801 +
                    ((C32953 + C32952 + C32951) * C31928 +
                     (C32950 + C32949 + C32948) * C31828 +
                     (C31831 * C4917 + C31825 * C4921 + C31833 * C4916 +
                      C31826 * C4920 + C31835 * C6615 + C31827 * C6616) *
                         C31929 +
                     (C31831 * C5039 + C31825 * C5242 + C31833 * C5038 +
                      C31826 * C5241 + C31835 * C6738 + C31827 * C6964) *
                         C93711) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     (C36999 * C807 + C93582 * C815) * C37063 +
                     (C36999 * C889 + C93582 * C1021) * C36995 +
                     (C36999 * C808 + C93582 * C816) * C37064 +
                     (C36999 * C890 + C93582 * C1022) * C36996 +
                     (C36999 * C4917 + C93582 * C4921) * C37065 +
                     (C36999 * C5039 + C93582 * C5242) * C36997) *
                        C93673 * C93635 * C93621 * C97 -
                    ((C36999 * C5038 + C93582 * C5241) * C36997 +
                     (C36999 * C4916 + C93582 * C4920) * C37065 +
                     (C36999 * C891 + C93582 * C1023) * C36996 +
                     (C36999 * C809 + C93582 * C817) * C37064 +
                     (C36999 * C888 + C93582 * C1020) * C36995 +
                     (C36999 * C806 + C93582 * C814) * C37063 +
                     (C36999 * C190 + C93582 * C363) * C36994 +
                     (C36999 * C109 + C93582 * C115) * C37062) *
                        C93673 * C93635 * C93621 * C98 +
                    ((C36999 * C110 + C93582 * C116) * C37062 +
                     (C36999 * C191 + C93582 * C364) * C36994 +
                     (C36999 * C805 + C93582 * C813) * C37063 +
                     (C36999 * C887 + C93582 * C1019) * C36995 +
                     (C36999 * C810 + C93582 * C818) * C37064 +
                     (C36999 * C892 + C93582 * C1024) * C36996 +
                     (C36999 * C6615 + C93582 * C6616) * C37065 +
                     (C36999 * C6738 + C93582 * C6964) * C36997) *
                        C93673 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C36999 * C108 + C93582 * C114) * C37062 +
                     (C36999 * C189 + C93582 * C362) * C36994 +
                     C37699 * C37063 + C37700 * C36995 + C37701 * C37064 +
                     C37702 * C36996 + C37703 * C37065 + C37704 * C36997) *
                        C93673 * C93635 * C800 -
                    (C37705 * C36997 + C37706 * C37065 + C37704 * C36996 +
                     C37703 * C37064 + C37702 * C36995 + C37701 * C37063 +
                     C37700 * C36994 + C37699 * C37062) *
                        C93673 * C93635 * C801 +
                    (C37701 * C37062 + C37702 * C36994 + C37703 * C37063 +
                     C37704 * C36995 + C37706 * C37064 + C37705 * C36996 +
                     (C36999 * C37482 + C93582 * C37483) * C37065 +
                     (C36999 * C37561 + C93582 * C37681) * C36997) *
                        C93673 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C93621 * C97 -
          ((C32231 + C32232) * C31827 + (C32230 + C32229) * C31826 +
           (C32228 + C32227) * C31825) *
              C93673 * C93635 * C93621 * C98 +
          (C32233 * C31825 + (C32232 + C32231) * C31826 +
           (C32190 * C112 + C32213 + C32213 + C31828 * C423 + C32191 * C1983 +
            C32214 + C32214 + C93711 * C2295) *
               C31827) *
              C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32190 * C108 + C32193 + C32193 + C31828 * C419 + C32191 * C807 +
            C32194 + C32194 + C93711 * C1079) *
               C31825 +
           (C32227 + C32228) * C31826 + C32233 * C31827) *
              C93673 * C93635 * C800 -
          ((C32191 * C810 + C33028 + C33028 + C93711 * C1082 + C32190 * C805 +
            C33029 + C33029 + C31828 * C1077) *
               C31827 +
           (C32191 * C809 + C33030 + C33030 + C93711 * C1081 + C32190 * C806 +
            C33031 + C33031 + C31828 * C1078) *
               C31826 +
           (C32191 * C808 + C33032 + C33032 + C93711 * C1080 + C32190 * C807 +
            C33033 + C33033 + C31828 * C1079) *
               C31825) *
              C93673 * C93635 * C801 +
          ((C32190 * C808 + C33034 + C33034 + C31828 * C1080 + C32191 * C4917 +
            C33035 + C33035 + C93711 * C5358) *
               C31825 +
           (C32190 * C809 + C33036 + C33036 + C31828 * C1081 + C32191 * C4916 +
            C33037 + C33037 + C93711 * C5357) *
               C31826 +
           (C32190 * C810 + C33038 + C33038 + C31828 * C1082 + C32191 * C6615 +
            C33039 + C33039 + C93711 * C7087) *
               C31827) *
              C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C93621 * C97 -
          (C37219 * C4916 + C37225 + C37225 + C36997 * C5357 + C37218 * C809 +
           C37226 + C37226 + C36996 * C1081 + C37217 * C806 + C37227 + C37227 +
           C36995 * C1078 + C37216 * C109 + C37228 + C37228 + C36994 * C420) *
              C93582 * C93673 * C93635 * C93621 * C98 +
          (C37216 * C110 + C37229 + C37229 + C36994 * C421 + C37217 * C805 +
           C37230 + C37230 + C36995 * C1077 + C37218 * C810 + C37231 + C37231 +
           C36996 * C1082 + C37219 * C6615 + C37232 + C37232 + C36997 * C7087) *
              C93582 * C93673 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C37216 * C108 + C37221 + C37221 + C36994 * C419 + C37217 * C807 +
           C37222 + C37222 + C36995 * C1079 + C37218 * C808 + C37223 + C37223 +
           C36996 * C1080 + C37219 * C4917 + C37224 + C37224 + C36997 * C5358) *
              C93582 * C93673 * C93635 * C800 -
          (C37219 * C4918 + C37758 + C37758 + C36997 * C5359 + C37218 * C4917 +
           C37759 + C37759 + C36996 * C5358 + C37217 * C808 + C37760 + C37760 +
           C36995 * C1080 + C37216 * C807 + C37761 + C37761 + C36994 * C1079) *
              C93582 * C93673 * C93635 * C801 +
          (C37216 * C808 + C37762 + C37762 + C36994 * C1080 + C37217 * C4917 +
           C37763 + C37763 + C36995 * C5358 + C37218 * C4918 + C37764 + C37764 +
           C36996 * C5359 + C37219 * C37482 + C37765 + C37765 +
           C36997 * C37756) *
              C93582 * C93673 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C93621 * C97 -
          ((C32316 + C32317 + C32318 + C32319) * C31827 +
           (C32315 + C32314 + C32313 + C32312) * C31826 +
           (C32311 + C32310 + C32309 + C32308) * C31825) *
              C93635 * C93621 * C98 +
          (C32322 * C31825 + (C32319 + C32318 + C32317 + C32316) * C31826 +
           (C312 * C31928 + C523 * C31828 +
            (C275 * C1983 + C93673 * C2142) * C31929 +
            (C275 * C2056 + C93673 * C2378) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C275 * C108 + C93673 * C276) * C31928 +
            (C275 * C189 + C93673 * C501) * C31828 + C5149 * C31929 +
            C5460 * C93711) *
               C31825 +
           (C32308 + C32309 + C32310 + C32311) * C31826 + C32322 * C31827) *
              C93635 * C800 -
          ((C4584 * C93711 + C4301 * C31929 + C2390 * C31828 + C2160 * C31928) *
               C31827 +
           (C4583 * C93711 + C4298 * C31929 + C2391 * C31828 + C2162 * C31928) *
               C31826 +
           (C5461 * C93711 + C5151 * C31929 + C5460 * C31828 + C5149 * C31928) *
               C31825) *
              C93635 * C801 +
          ((C5151 * C31928 + C5461 * C31828 + C5156 * C31929 + C5463 * C93711) *
               C31825 +
           (C4298 * C31928 + C4583 * C31828 + C5154 * C31929 + C5462 * C93711) *
               C31826 +
           (C4301 * C31928 + C4584 * C31828 +
            (C275 * C6615 + C93673 * C6856) * C31929 +
            (C275 * C6738 + C93673 * C7204) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5462 * C36997 + C5154 * C37065 + C4583 * C36996 + C4298 * C37064 +
           C2391 * C36995 + C2162 * C37063 + C520 * C36994 + C305 * C37062) *
              C93582 * C93635 * C93621 * C98 +
          (C307 * C37062 + C521 * C36994 + C2160 * C37063 + C2390 * C36995 +
           C4301 * C37064 + C4584 * C36996 +
           (C275 * C6615 + C93673 * C6856) * C37065 +
           (C275 * C6738 + C93673 * C7204) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C275 * C108 + C93673 * C276) * C37062 +
           (C275 * C189 + C93673 * C501) * C36994 + C5149 * C37063 +
           C5460 * C36995 + C5151 * C37064 + C5461 * C36996 + C5156 * C37065 +
           C5463 * C36997) *
              C93582 * C93635 * C800 -
          (C37819 * C36997 + C37629 * C37065 + C5463 * C36996 + C5156 * C37064 +
           C5461 * C36995 + C5151 * C37063 + C5460 * C36994 + C5149 * C37062) *
              C93582 * C93635 * C801 +
          (C5151 * C37062 + C5461 * C36994 + C5156 * C37063 + C5463 * C36995 +
           C37629 * C37064 + C37819 * C36996 +
           (C275 * C37482 + C93673 * C37613) * C37065 +
           (C275 * C37561 + C93673 * C37815) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C31831 * C807 + C31825 * C815 + C31833 * C806 + C31826 * C814 +
             C31835 * C805 + C31827 * C813) *
                C275 +
            (C31831 * C955 + C31825 * C1203 + C31833 * C954 + C31826 * C1202 +
             C31835 * C953 + C31827 * C1201) *
                C93673) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C31835 * C952 + C31827 * C1200 + C31833 * C953 + C31826 * C1201 +
             C31831 * C954 + C31825 * C1202) *
                C93673 +
            (C31835 * C804 + C31827 * C812 + C31833 * C805 + C31826 * C813 +
             C31831 * C806 + C31825 * C814) *
                C275) *
               C93711 +
           ((C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C93673 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C275) *
               C31828) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C275 +
            (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
             C31835 * C280 + C31827 * C583) *
                C93673) *
               C31828 +
           ((C31831 * C805 + C31825 * C813 + C31833 * C804 + C31826 * C812 +
             C31835 * C1983 + C31827 * C1984) *
                C275 +
            (C31831 * C953 + C31825 * C1201 + C31833 * C952 + C31826 * C1200 +
             C31835 * C2142 + C31827 * C2460) *
                C93673) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C275 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C93673) *
               C31828 +
           ((C32942 + C32943 + C32944) * C275 +
            (C33200 + C33201 + C33202) * C93673) *
               C93711) *
              C93635 * C800 -
          (((C33203 + C33204 + C33205) * C93673 +
            (C32951 + C32952 + C32953) * C275) *
               C93711 +
           ((C33202 + C33201 + C33200) * C93673 +
            (C32944 + C32943 + C32942) * C275) *
               C31828) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C275 +
            (C33205 + C33204 + C33203) * C93673) *
               C31828 +
           ((C31831 * C4917 + C31825 * C4921 + C31833 * C4916 + C31826 * C4920 +
             C31835 * C6615 + C31827 * C6616) *
                C275 +
            (C31831 * C5121 + C31825 * C5538 + C31833 * C5120 + C31826 * C5537 +
             C31835 * C6856 + C31827 * C7309) *
                C93673) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           ((C36999 * C807 + C93582 * C815) * C275 +
            (C36999 * C955 + C93582 * C1203) * C93673) *
               C36995 +
           ((C36999 * C808 + C93582 * C816) * C275 +
            (C36999 * C956 + C93582 * C1204) * C93673) *
               C36996 +
           ((C36999 * C4917 + C93582 * C4921) * C275 +
            (C36999 * C5121 + C93582 * C5538) * C93673) *
               C36997) *
              C93635 * C93621 * C97 -
          (((C36999 * C5120 + C93582 * C5537) * C93673 +
            (C36999 * C4916 + C93582 * C4920) * C275) *
               C36997 +
           ((C36999 * C957 + C93582 * C1205) * C93673 +
            (C36999 * C809 + C93582 * C817) * C275) *
               C36996 +
           ((C36999 * C954 + C93582 * C1202) * C93673 +
            (C36999 * C806 + C93582 * C814) * C275) *
               C36995 +
           ((C36999 * C277 + C93582 * C580) * C93673 +
            (C36999 * C109 + C93582 * C115) * C275) *
               C36994) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C275 +
            (C36999 * C278 + C93582 * C581) * C93673) *
               C36994 +
           ((C36999 * C805 + C93582 * C813) * C275 +
            (C36999 * C953 + C93582 * C1201) * C93673) *
               C36995 +
           ((C36999 * C810 + C93582 * C818) * C275 +
            (C36999 * C958 + C93582 * C1206) * C93673) *
               C36996 +
           ((C36999 * C6615 + C93582 * C6616) * C275 +
            (C36999 * C6856 + C93582 * C7309) * C93673) *
               C36997) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C275 +
            (C36999 * C276 + C93582 * C579) * C93673) *
               C36994 +
           (C37871 + C37887) * C36995 + C37891 * C36996 + C37892 * C36997) *
              C93635 * C800 -
          ((C37890 + C37882) * C36997 + (C37889 + C37877) * C36996 +
           (C37888 + C37874) * C36995 + (C37887 + C37871) * C36994) *
              C93635 * C801 +
          (C37891 * C36994 + C37892 * C36995 + (C37882 + C37890) * C36996 +
           ((C36999 * C37482 + C93582 * C37483) * C275 +
            (C36999 * C37613 + C93582 * C37869) * C93673) *
               C36997) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C93621 * C97 -
          (((C32488 + C32489) * C93673 + (C31965 + C31966) * C275) * C31827 +
           ((C32487 + C32486) * C93673 + (C31960 + C31959) * C275) * C31826 +
           ((C32485 + C32484) * C93673 + (C31956 + C31955) * C275) * C31825) *
              C93635 * C93621 * C98 +
          (C32492 * C31825 +
           ((C31966 + C31965) * C275 + (C32489 + C32488) * C93673) * C31826 +
           ((C31928 * C112 + C31828 * C193 + C31929 * C1983 + C93711 * C2056) *
                C275 +
            (C31928 * C280 + C31828 * C639 + C31929 * C2142 + C93711 * C2527) *
                C93673) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31928 * C108 + C31828 * C189 + C31929 * C807 + C93711 * C889) *
                C275 +
            (C31928 * C276 + C31828 * C635 + C31929 * C955 + C93711 * C1261) *
                C93673) *
               C31825 +
           ((C31955 + C31956) * C275 + (C32484 + C32485) * C93673) * C31826 +
           C32492 * C31827) *
              C93635 * C800 -
          (((C31929 * C958 + C93711 * C1264 + C31928 * C953 + C31828 * C1259) *
                C93673 +
            (C31929 * C810 + C93711 * C892 + C31928 * C805 + C31828 * C887) *
                C275) *
               C31827 +
           ((C31929 * C957 + C93711 * C1263 + C31928 * C954 + C31828 * C1260) *
                C93673 +
            (C31929 * C809 + C93711 * C891 + C31928 * C806 + C31828 * C888) *
                C275) *
               C31826 +
           ((C31929 * C956 + C93711 * C1262 + C31928 * C955 + C31828 * C1261) *
                C93673 +
            (C31929 * C808 + C93711 * C890 + C31928 * C807 + C31828 * C889) *
                C275) *
               C31825) *
              C93635 * C801 +
          (((C31928 * C808 + C31828 * C890 + C31929 * C4917 + C93711 * C5039) *
                C275 +
            (C31928 * C956 + C31828 * C1262 + C31929 * C5121 + C93711 * C5638) *
                C93673) *
               C31825 +
           ((C31928 * C809 + C31828 * C891 + C31929 * C4916 + C93711 * C5038) *
                C275 +
            (C31928 * C957 + C31828 * C1263 + C31929 * C5120 + C93711 * C5637) *
                C93673) *
               C31826 +
           ((C31928 * C810 + C31828 * C892 + C31929 * C6615 + C93711 * C6738) *
                C275 +
            (C31928 * C958 + C31828 * C1264 + C31929 * C6856 + C93711 * C7420) *
                C93673) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C93621 * C97 -
          ((C37065 * C5120 + C36997 * C5637 + C37064 * C957 + C36996 * C1263 +
            C37063 * C954 + C36995 * C1260 + C37062 * C277 + C36994 * C636) *
               C93673 +
           (C37065 * C4916 + C36997 * C5038 + C37064 * C809 + C36996 * C891 +
            C37063 * C806 + C36995 * C888 + C37062 * C109 + C36994 * C190) *
               C275) *
              C93582 * C93635 * C93621 * C98 +
          ((C37062 * C110 + C36994 * C191 + C37063 * C805 + C36995 * C887 +
            C37064 * C810 + C36996 * C892 + C37065 * C6615 + C36997 * C6738) *
               C275 +
           (C37062 * C278 + C36994 * C637 + C37063 * C953 + C36995 * C1259 +
            C37064 * C958 + C36996 * C1264 + C37065 * C6856 + C36997 * C7420) *
               C93673) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C37062 * C108 + C36994 * C189 + C37063 * C807 + C36995 * C889 +
            C37064 * C808 + C36996 * C890 + C37065 * C4917 + C36997 * C5039) *
               C275 +
           (C37062 * C276 + C36994 * C635 + C37063 * C955 + C36995 * C1261 +
            C37064 * C956 + C36996 * C1262 + C37065 * C5121 + C36997 * C5638) *
               C93673) *
              C93582 * C93635 * C800 -
          ((C37065 * C5122 + C36997 * C5639 + C37064 * C5121 + C36996 * C5638 +
            C37063 * C956 + C36995 * C1262 + C37062 * C955 + C36994 * C1261) *
               C93673 +
           (C37065 * C4918 + C36997 * C5040 + C37064 * C4917 + C36996 * C5039 +
            C37063 * C808 + C36995 * C890 + C37062 * C807 + C36994 * C889) *
               C275) *
              C93582 * C93635 * C801 +
          ((C37062 * C808 + C36994 * C890 + C37063 * C4917 + C36995 * C5039 +
            C37064 * C4918 + C36996 * C5040 + C37065 * C37482 +
            C36997 * C37561) *
               C275 +
           (C37062 * C956 + C36994 * C1262 + C37063 * C5121 + C36995 * C5638 +
            C37064 * C5122 + C36996 * C5639 + C37065 * C37613 +
            C36997 * C37942) *
               C93673) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C93621 * C97 -
          ((C32571 + C32572) * C31827 + (C32570 + C32569) * C31826 +
           (C32568 + C32567) * C31825) *
              C93635 * C93621 * C98 +
          (C32573 * C31825 + (C32572 + C32571) * C31826 +
           (C746 * C31828 +
            (C713 * C1983 + C2617 + C2617 + C93673 * C2609) * C93711) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C713 * C108 + C721 + C721 + C93673 * C714) * C31828 +
            C5740 * C93711) *
               C31825 +
           (C32567 + C32568) * C31826 + C32573 * C31827) *
              C93635 * C800 -
          ((C4840 * C93711 + C2625 * C31828) * C31827 +
           (C4839 * C93711 + C2626 * C31828) * C31826 +
           (C5741 * C93711 + C5740 * C31828) * C31825) *
              C93635 * C801 +
          ((C5741 * C31828 + C5743 * C93711) * C31825 +
           (C4839 * C31828 + C5742 * C93711) * C31826 +
           (C4840 * C31828 +
            (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C93711) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C93621 * C97 -
          (C5742 * C36997 + C4839 * C36996 + C2626 * C36995 + C743 * C36994) *
              C93582 * C93635 * C93621 * C98 +
          (C744 * C36994 + C2625 * C36995 + C4840 * C36996 +
           (C713 * C6615 + C7533 + C7533 + C93673 * C7528) * C36997) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C713 * C108 + C721 + C721 + C93673 * C714) * C36994 +
           C5740 * C36995 + C5741 * C36996 + C5743 * C36997) *
              C93582 * C93635 * C800 -
          (C38000 * C36997 + C5743 * C36996 + C5741 * C36995 + C5740 * C36994) *
              C93582 * C93635 * C801 +
          (C5741 * C36994 + C5743 * C36995 + C38000 * C36996 +
           (C713 * C37482 + C37997 + C37997 + C93673 * C37993) * C36997) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C62191 +
             (C52727 + C52728) * C93737) *
                C93818 +
            ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
               C93635 * C1979 -
           (((C49993 + C49994) * C93737 + (C46559 + C46558) * C62191) * C93711 +
            (C56138 * C93737 + (C46557 + C46556) * C62191) * C93818) *
               C93635 * C1980) *
              C1981 +
          ((((C48049 + C48050) * C62191 + (C53709 + C53710) * C93737) * C93818 +
            ((C48051 + C48052) * C62191 +
             (C45719 * C5817 + C49037 + C49037 + C93805 * C5829 +
              C45721 * C7631 + C49038 + C49038 + C93587 * C7633) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C53710 + C53709) * C93737 + (C48050 + C48049) * C62191) * C93711 +
            ((C54940 + C54939) * C93737 +
             (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
              C45735 + C45735 + C93805 * C121) *
                 C62191) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C91732 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93805 +
             (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
                C62191 +
            ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
             C29564 * C91722 + C29565 * C93587) *
                C93737) *
               C93635 * C1979 -
           (((C28348 + C28349) * C93587 + (C28350 + C28351) * C91722 +
             (C30783 + C30782) * C93805 + (C30781 + C30780) * C91732) *
                C93737 +
            ((C17443 + C17444) * C93587 + (C17445 + C17446) * C91722 +
             (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C93805 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C91732) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C91732 + (C17444 + C17443) * C93805 +
             (C17442 + C17441) * C91722 + (C17440 + C17439) * C93587) *
                C62191 +
            ((C28351 + C28350) * C91732 + (C28349 + C28348) * C93805 +
             (C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
              C93711 * C7738) *
                 C91722 +
             (C15092 * C3415 + C93818 * C3497 + C15093 * C7632 +
              C93711 * C7739) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C18430 + C18431) * C93587 + (C18432 + C18433) * C91722 +
             C29566 * C93805 + C29567 * C91732) *
                C93737 +
            ((C15126 + C15125) * C93587 + (C15124 + C15123) * C91722 +
             (C15122 + C15121) * C93805 + (C15120 + C15119) * C91732) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C91732 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93805 +
             (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
                C93818 +
            ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
             C78609 * C91722 + C78610 * C93587) *
                C93711) *
               C93635 * C1979 -
           (((C69750 + C69749) * C93587 + (C69748 + C69747) * C91722 +
             (C68144 + C68143) * C93805 + (C68142 + C68141) * C91732) *
                C93711 +
            (C78611 * C93587 + C78612 * C91722 + (C68140 + C68139) * C93805 +
             (C68138 + C68137) * C91732) *
                C93818) *
               C93635 * C1980) *
              C1981 +
          (((C78609 * C91732 + C78610 * C93805 + (C64684 + C64683) * C91722 +
             (C64682 + C64681) * C93587) *
                C93818 +
            ((C69747 + C69748) * C91732 + (C69749 + C69750) * C93805 +
             (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                 C91722 +
             (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
                 C93587) *
                C93711) *
               C93635 * C1980 -
           (((C64681 + C64682) * C93587 + (C64683 + C64684) * C91722 +
             C78611 * C93805 + C78612 * C91732) *
                C93711 +
            ((C62378 + C62377) * C93587 + (C62376 + C62375) * C91722 +
             (C62374 + C62373) * C93805 + (C62372 + C62371) * C91732) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C15092 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93818 +
             (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
                C62191 +
            ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
             C56529 * C15093 + C56530 * C93711) *
                C93737) *
               C93635 * C1979 -
           (((C50315 + C50316) * C93711 + (C50317 + C50318) * C15093 +
             C56531 * C93818 + C56532 * C15092) *
                C93737 +
            ((C46832 + C46831) * C93711 + (C46830 + C46829) * C15093 +
             (C46828 + C46827) * C93818 + (C46826 + C46825) * C15092) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C15092 + (C48391 + C48392) * C93818 +
             (C48393 + C48394) * C15093 + (C48395 + C48396) * C93711) *
                C62191 +
            ((C54121 + C54122) * C15092 + (C54123 + C54124) * C93818 +
             (C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
              C93587 * C7632) *
                 C15093 +
             (C91732 * C5921 + C93805 * C6093 + C91722 * C7738 +
              C93587 * C7968) *
                 C93711) *
                C93737) *
               C93635 * C1980 -
           (((C54124 + C54123) * C93711 + (C54122 + C54121) * C15093 +
             (C55346 + C55345) * C93818 + (C55344 + C55343) * C15092) *
                C93737 +
            ((C48392 + C48391) * C93711 + (C48390 + C48389) * C15093 +
             (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C93818 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C15092) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C93805 +
             (C15391 + C15392) * C93587) *
                C62191 +
            ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
               C93635 * C1979 -
           (((C28766 + C28767) * C93587 + (C31203 + C31202) * C93805) * C93737 +
            ((C17785 + C17786) * C93587 +
             (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
              C16197 + C16197 + C93818 * C1079) *
                 C93805) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C17786 + C17785) * C93805 + (C17784 + C17783) * C93587) * C62191 +
            ((C28767 + C28766) * C93805 +
             (C15354 * C3411 + C19720 + C19720 + C93818 * C3711 +
              C15355 * C7631 + C19721 + C19721 + C93711 * C8067) *
                 C93587) *
                C93737) *
               C93635 * C1980 -
           (((C18756 + C18757) * C93587 + C29971 * C93805) * C93737 +
            ((C15394 + C15393) * C93587 + (C15392 + C15391) * C93805) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C15092 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93818 +
             (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
                C93805 +
            ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
             C78609 * C15093 + C79003 * C93711) *
                C93587) *
               C93635 * C1979 -
           (((C70050 + C70049) * C93711 + (C69748 + C69747) * C15093 +
             C79004 * C93818 + C78612 * C15092) *
                C93587 +
            ((C68394 + C68393) * C93711 + (C68142 + C68141) * C15093 +
             (C68392 + C68391) * C93818 + (C68138 + C68137) * C15092) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C78609 * C15092 + C79003 * C93818 + (C69747 + C69748) * C15093 +
             (C70049 + C70050) * C93711) *
                C93805 +
            ((C64684 + C64683) * C15092 + (C64992 + C64991) * C93818 +
             (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                 C15093 +
             (C62344 * C892 + C62191 * C1148 + C62345 * C7738 +
              C93737 * C8184) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C64991 + C64992) * C93711 + (C64683 + C64684) * C15093 +
             (C62623 + C62622) * C93818 + (C62376 + C62375) * C15092) *
                C93587 +
            (C79004 * C93711 + C78612 * C15093 + (C62621 + C62620) * C93818 +
             (C62372 + C62371) * C15092) *
                C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C62344 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C62191 +
             (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
                C93818 +
            ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
             C56529 * C62345 + C56923 * C93737) *
                C93711) *
               C93635 * C1979 -
           (((C50631 + C50632) * C93737 + (C50317 + C50318) * C62345 +
             (C47089 + C47088) * C62191 + (C46830 + C46829) * C62344) *
                C93711 +
            (C56924 * C93737 + C56532 * C62345 + (C47087 + C47086) * C62191 +
             (C46826 + C46825) * C62344) *
                C93818) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C62344 + (C48723 + C48724) * C62191 +
             (C54121 + C54122) * C62345 + (C54529 + C54530) * C93737) *
                C93818 +
            ((C48393 + C48394) * C62344 + (C48725 + C48726) * C62191 +
             (C91732 * C5817 + C93805 * C5823 + C91722 * C7631 +
              C93587 * C7632) *
                 C62345 +
             (C91732 * C6007 + C93805 * C6345 + C91722 * C7856 +
              C93587 * C8295) *
                 C93737) *
                C93711) *
               C93635 * C1980 -
           (((C54530 + C54529) * C93737 + (C54122 + C54121) * C62345 +
             (C48724 + C48723) * C62191 + (C48390 + C48389) * C62344) *
                C93711 +
            ((C55744 + C55743) * C93737 + (C55344 + C55343) * C62345 +
             (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C62191 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C62344) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C62344 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C62191 +
             (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
                C93805 +
            ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
             C29564 * C62345 + C30368 * C93737) *
                C93587) *
               C93635 * C1979 -
           (((C29170 + C29171) * C93737 + (C28350 + C28351) * C62345 +
             (C18108 + C18109) * C62191 + (C17445 + C17446) * C62344) *
                C93587 +
            ((C31607 + C31606) * C93737 + (C30781 + C30780) * C62345 +
             (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C62191 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C62344) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C62344 + (C18109 + C18108) * C62191 +
             (C28351 + C28350) * C62345 + (C29171 + C29170) * C93737) *
                C93805 +
            ((C17442 + C17441) * C62344 + (C18107 + C18106) * C62191 +
             (C15092 * C3411 + C93818 * C3493 + C15093 * C7631 +
              C93711 * C7738) *
                 C62345 +
             (C15092 * C3567 + C93818 * C3925 + C15093 * C7856 +
              C93711 * C8394) *
                 C93737) *
                C93587) *
               C93635 * C1980 -
           (((C19073 + C19074) * C93737 + (C18432 + C18433) * C62345 +
             (C15651 + C15650) * C62191 + (C15124 + C15123) * C62344) *
                C93587 +
            (C30369 * C93737 + C29567 * C62345 + (C15649 + C15648) * C62191 +
             (C15120 + C15119) * C62344) *
                C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
              C62869 + C62869 + C93737 * C1900) *
                 C93818 +
             (C68663 + C68664) * C93711) *
                C93805 +
            ((C62902 + C62903) * C93818 + C79395 * C93711) * C93587) *
               C93635 * C1979 -
           (((C70364 + C70363) * C93711 + C79396 * C93818) * C93587 +
            ((C68666 + C68665) * C93711 + (C68664 + C68663) * C93818) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C79395 * C93818 + (C70363 + C70364) * C93711) * C93805 +
            ((C65316 + C65315) * C93818 +
             (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
              C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                 C93711) *
                C93587) *
               C93635 * C1980 -
           (((C65315 + C65316) * C93711 + (C62905 + C62904) * C93818) * C93587 +
            (C79396 * C93711 + (C62903 + C62902) * C93818) * C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C62191 +
             (C52727 + C52728) * C93737) *
                C93818 +
            ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
               C2695 -
           (((C52729 + C52730) * C93737 + C56138 * C62191) * C93711 +
            ((C52731 + C52732) * C93737 + (C52728 + C52727) * C62191) *
                C93818) *
               C2696) *
              C1979 +
          (((C56137 * C62191 + (C52730 + C52729) * C93737) * C93818 +
            ((C49994 + C49993) * C62191 +
             (C45719 * C5821 + C47327 + C47327 + C93805 * C5833 +
              C45721 * C5822 + C47328 + C47328 + C93587 * C5834) *
                 C93737) *
                C93711) *
               C2696 -
           (((C49993 + C49994) * C93737 + (C46559 + C46558) * C62191) * C93711 +
            (C56138 * C93737 + (C46557 + C46556) * C62191) * C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C91732 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93805 +
             (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
                C62191 +
            ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
             C29564 * C91722 + C29565 * C93587) *
                C93737) *
               C2695 -
           (((C27320 + C27321) * C93587 + (C27322 + C27323) * C91722 +
             (C27324 + C27325) * C93805 + (C27326 + C27327) * C91732) *
                C93737 +
            (C29566 * C93587 + C29567 * C91722 + (C27319 + C27318) * C93805 +
             (C27317 + C27316) * C91732) *
                C62191) *
               C2696) *
              C1979 +
          ((((C30780 + C30781) * C91732 + (C30782 + C30783) * C93805 +
             (C28351 + C28350) * C91722 + (C28349 + C28348) * C93587) *
                C62191 +
            ((C15092 * C5819 + C93818 * C5923 + C15093 * C5821 +
              C93711 * C5924) *
                 C91732 +
             (C15092 * C5825 + C93818 * C5929 + C15093 * C5827 +
              C93711 * C5930) *
                 C93805 +
             (C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
              C93711 * C5926) *
                 C91722 +
             (C15092 * C5826 + C93818 * C5931 + C15093 * C5828 +
              C93711 * C5932) *
                 C93587) *
                C93737) *
               C2696 -
           (((C28348 + C28349) * C93587 + (C28350 + C28351) * C91722 +
             (C30783 + C30782) * C93805 + (C30781 + C30780) * C91732) *
                C93737 +
            ((C17443 + C17444) * C93587 + (C17445 + C17446) * C91722 +
             (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C93805 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C91732) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C91732 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93805 +
             (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
                C93818 +
            ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
             C78609 * C91722 + C78610 * C93587) *
                C93711) *
               C2695 -
           (((C79795 + C79796) * C93587 + (C79797 + C79798) * C91722 +
             (C71591 + C71592) * C93805 + (C71593 + C71594) * C91732) *
                C93711 +
            ((C65657 + C65658) * C93587 + (C65659 + C65660) * C91722 +
             (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93805 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C91732) *
                C93818) *
               C2696) *
              C1979 +
          ((((C71594 + C71593) * C91732 + (C71592 + C71591) * C93805 +
             (C79798 + C79797) * C91722 + (C79796 + C79795) * C93587) *
                C93818 +
            ((C71590 + C71589) * C91732 + (C71588 + C71587) * C93805 +
             (C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
              C93737 * C6012) *
                 C91722 +
             (C62344 * C5823 + C62191 * C6013 + C62345 * C5828 +
              C93737 * C6018) *
                 C93587) *
                C93711) *
               C2696 -
           (((C69750 + C69749) * C93587 + (C69748 + C69747) * C91722 +
             (C68144 + C68143) * C93805 + (C68142 + C68141) * C91732) *
                C93711 +
            (C78611 * C93587 + C78612 * C91722 + (C68140 + C68139) * C93805 +
             (C68138 + C68137) * C91732) *
                C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C15092 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93818 +
             (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
                C62191 +
            ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
             C56529 * C15093 + C56530 * C93711) *
                C93737) *
               C2695 -
           (((C53055 + C53056) * C93711 + (C53057 + C53058) * C15093 +
             (C53059 + C53060) * C93818 + (C53061 + C53062) * C15092) *
                C93737 +
            (C56531 * C93711 + C56532 * C15093 + (C53054 + C53053) * C93818 +
             (C53052 + C53051) * C15092) *
                C62191) *
               C2696) *
              C1979 +
          (((C56529 * C15092 + C56530 * C93818 + (C50318 + C50317) * C15093 +
             (C50316 + C50315) * C93711) *
                C62191 +
            ((C53058 + C53057) * C15092 + (C53056 + C53055) * C93818 +
             (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
              C93587 * C5828) *
                 C15093 +
             (C91732 * C5924 + C93805 * C6097 + C91722 * C5926 +
              C93587 * C6098) *
                 C93711) *
                C93737) *
               C2696 -
           (((C50315 + C50316) * C93711 + (C50317 + C50318) * C15093 +
             C56531 * C93818 + C56532 * C15092) *
                C93737 +
            ((C46832 + C46831) * C93711 + (C46830 + C46829) * C15093 +
             (C46828 + C46827) * C93818 + (C46826 + C46825) * C15092) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C93805 +
             (C15391 + C15392) * C93587) *
                C62191 +
            ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
               C2695 -
           (((C27652 + C27653) * C93587 + (C27654 + C27655) * C93805) * C93737 +
            (C29971 * C93587 + (C27651 + C27650) * C93805) * C62191) *
               C2696) *
              C1979 +
          ((((C31202 + C31203) * C93805 + (C28767 + C28766) * C93587) * C62191 +
            ((C15354 * C5819 + C31194 + C31194 + C93818 * C6175 +
              C15355 * C5821 + C31195 + C31195 + C93711 * C6176) *
                 C93805 +
             (C15354 * C5820 + C31196 + C31196 + C93818 * C6177 +
              C15355 * C5822 + C31197 + C31197 + C93711 * C6178) *
                 C93587) *
                C93737) *
               C2696 -
           (((C28766 + C28767) * C93587 + (C31203 + C31202) * C93805) * C93737 +
            ((C17785 + C17786) * C93587 +
             (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
              C16197 + C16197 + C93818 * C1079) *
                 C93805) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C15092 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93818 +
             (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
                C93805 +
            ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
             C78609 * C15093 + C79003 * C93711) *
                C93587) *
               C2695 -
           (((C80193 + C80194) * C93711 + (C79797 + C79798) * C15093 +
             (C65986 + C65987) * C93818 + (C65659 + C65660) * C15092) *
                C93587 +
            ((C71923 + C71924) * C93711 + (C71593 + C71594) * C15093 +
             (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93818 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C15092) *
                C93805) *
               C2696) *
              C1979 +
          ((((C71594 + C71593) * C15092 + (C71924 + C71923) * C93818 +
             (C71590 + C71589) * C15093 + (C71922 + C71921) * C93711) *
                C93805 +
            ((C79798 + C79797) * C15092 + (C80194 + C80193) * C93818 +
             (C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
              C93737 * C6012) *
                 C15093 +
             (C62344 * C5921 + C62191 * C6265 + C62345 * C5926 +
              C93737 * C6270) *
                 C93711) *
                C93587) *
               C2696 -
           (((C70050 + C70049) * C93711 + (C69748 + C69747) * C15093 +
             C79004 * C93818 + C78612 * C15092) *
                C93587 +
            ((C68394 + C68393) * C93711 + (C68142 + C68141) * C15093 +
             (C68392 + C68391) * C93818 + (C68138 + C68137) * C15092) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C62344 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C62191 +
             (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
                C93818 +
            ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
             C56529 * C62345 + C56923 * C93737) *
                C93711) *
               C2695 -
           (((C53371 + C53372) * C93737 + (C53057 + C53058) * C62345 +
             C56924 * C62191 + C56532 * C62344) *
                C93711 +
            ((C53373 + C53374) * C93737 + (C53061 + C53062) * C62345 +
             (C53370 + C53369) * C62191 + (C53052 + C53051) * C62344) *
                C93818) *
               C2696) *
              C1979 +
          (((C56529 * C62344 + C56923 * C62191 + (C53058 + C53057) * C62345 +
             (C53372 + C53371) * C93737) *
                C93818 +
            ((C50318 + C50317) * C62344 + (C50632 + C50631) * C62191 +
             (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
              C93587 * C5828) *
                 C62345 +
             (C91732 * C6011 + C93805 * C6349 + C91722 * C6012 +
              C93587 * C6350) *
                 C93737) *
                C93711) *
               C2696 -
           (((C50631 + C50632) * C93737 + (C50317 + C50318) * C62345 +
             (C47089 + C47088) * C62191 + (C46830 + C46829) * C62344) *
                C93711 +
            (C56924 * C93737 + C56532 * C62345 + (C47087 + C47086) * C62191 +
             (C46826 + C46825) * C62344) *
                C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C62344 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C62191 +
             (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
                C93805 +
            ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
             C29564 * C62345 + C30368 * C93737) *
                C93587) *
               C2695 -
           (((C27964 + C27965) * C93737 + (C27322 + C27323) * C62345 +
             C30369 * C62191 + C29567 * C62344) *
                C93587 +
            ((C27966 + C27967) * C93737 + (C27326 + C27327) * C62345 +
             (C27963 + C27962) * C62191 + (C27317 + C27316) * C62344) *
                C93805) *
               C2696) *
              C1979 +
          ((((C30780 + C30781) * C62344 + (C31606 + C31607) * C62191 +
             (C15092 * C5819 + C93818 * C5923 + C15093 * C5821 +
              C93711 * C5924) *
                 C62345 +
             (C15092 * C6009 + C93818 * C6427 + C15093 * C6011 +
              C93711 * C6428) *
                 C93737) *
                C93805 +
            ((C28351 + C28350) * C62344 + (C29171 + C29170) * C62191 +
             (C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
              C93711 * C5926) *
                 C62345 +
             (C15092 * C6010 + C93818 * C6429 + C15093 * C6012 +
              C93711 * C6430) *
                 C93737) *
                C93587) *
               C2696 -
           (((C29170 + C29171) * C93737 + (C28350 + C28351) * C62345 +
             (C18108 + C18109) * C62191 + (C17445 + C17446) * C62344) *
                C93587 +
            ((C31607 + C31606) * C93737 + (C30781 + C30780) * C62345 +
             (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                 C62191 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C62344) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
              C62869 + C62869 + C93737 * C1900) *
                 C93818 +
             (C68663 + C68664) * C93711) *
                C93805 +
            ((C62902 + C62903) * C93818 + C79395 * C93711) * C93587) *
               C2695 -
           (((C80593 + C80594) * C93711 + (C66319 + C66320) * C93818) * C93587 +
            ((C72256 + C72257) * C93711 +
             (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
              C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                 C93818) *
                C93805) *
               C2696) *
              C1979 +
          ((((C72257 + C72256) * C93818 + (C72255 + C72254) * C93711) * C93805 +
            ((C80594 + C80593) * C93818 +
             (C62865 * C5817 + C71253 + C71253 + C62191 * C6505 +
              C62866 * C5822 + C71254 + C71254 + C93737 * C6510) *
                 C93711) *
                C93587) *
               C2696 -
           (((C70364 + C70363) * C93711 + C79396 * C93818) * C93587 +
            ((C68666 + C68665) * C93711 + (C68664 + C68663) * C93818) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C62191 +
            (C52727 + C52728) * C93737) *
               C93818 +
           ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
              C93635 * C800 -
          (((C49993 + C49994) * C93737 + (C46559 + C46558) * C62191) * C93711 +
           (C56138 * C93737 + (C46557 + C46556) * C62191) * C93818) *
              C93635 * C801 +
          ((C46562 * C62191 + (C49994 + C49993) * C93737) * C93818 +
           ((C46561 + C46560) * C62191 +
            (C45719 * C8615 + C49983 + C49983 + C93805 * C8619 +
             C45721 * C8616 + C49984 + C49984 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C62191 +
            (C52727 + C52728) * C93737) *
               C93818 +
           ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C53710 + C53709) * C93737 + (C48050 + C48049) * C62191) * C93711 +
           ((C54940 + C54939) * C93737 +
            (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
             C45735 + C45735 + C93805 * C121) *
                C62191) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C45719 * C110 + C45736 + C45736 + C93805 * C122 + C45721 * C111 +
             C45737 + C45737 + C93587 * C123) *
                C62191 +
            (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
             C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                C93737) *
               C93818 +
           ((C45719 * C805 + C45738 + C45738 + C93805 * C821 + C45721 * C804 +
             C45739 + C45739 + C93587 * C820) *
                C62191 +
            (C45719 * C3411 + C50931 + C50931 + C93805 * C3419 +
             C45721 * C3412 + C50932 + C50932 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C62191 +
            (C52727 + C52728) * C93737) *
               C93818 +
           ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
              C1382 -
          (((C52729 + C52730) * C93737 + C56138 * C62191) * C93711 +
           ((C52731 + C52732) * C93737 + (C52728 + C52727) * C62191) * C93818) *
              C1383 +
          (((C52732 + C52731) * C62191 +
            (C45719 * C11103 + C52711 + C52711 + C93805 * C11111 +
             C45721 * C11102 + C52712 + C52712 + C93587 * C11110) *
                C93737) *
               C93818 +
           ((C52730 + C52729) * C62191 +
            (C45719 * C14027 + C52713 + C52713 + C93805 * C14031 +
             C45721 * C14028 + C52714 + C52714 + C93587 * C14032) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C91732 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93805 +
            (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
               C62191 +
           ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
            C29564 * C91722 + C29565 * C93587) *
               C93737) *
              C93635 * C800 -
          (((C28348 + C28349) * C93587 + (C28350 + C28351) * C91722 +
            (C30783 + C30782) * C93805 + (C30781 + C30780) * C91732) *
               C93737 +
           ((C17443 + C17444) * C93587 + (C17445 + C17446) * C91722 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93805 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C91732) *
               C62191) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C91732 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C93805 +
            (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C91722 +
            (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
                C93587) *
               C62191 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C91732 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C93805 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C91722 +
            (C15092 * C5823 + C93818 * C5927 + C15093 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C91732 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93805 +
            (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
               C62191 +
           ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
            C29564 * C91722 + C29565 * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18430 + C18431) * C93587 + (C18432 + C18433) * C91722 +
            C29566 * C93805 + C29567 * C91732) *
               C93737 +
           ((C15126 + C15125) * C93587 + (C15124 + C15123) * C91722 +
            (C15122 + C15121) * C93805 + (C15120 + C15119) * C91732) *
               C62191) *
              C93635 * C93621 * C98 +
          ((C15131 * C91732 + C15132 * C93805 + (C15130 + C15129) * C91722 +
            (C15128 + C15127) * C93587) *
               C62191 +
           ((C18433 + C18432) * C91732 + (C18431 + C18430) * C93805 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C91722 +
            (C15092 * C1393 + C93818 * C1475 + C15093 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C91732 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93805 +
            (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
               C62191 +
           ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
            C29564 * C91722 + C29565 * C93587) *
               C93737) *
              C1382 -
          (((C27320 + C27321) * C93587 + (C27322 + C27323) * C91722 +
            (C27324 + C27325) * C93805 + (C27326 + C27327) * C91732) *
               C93737 +
           (C29566 * C93587 + C29567 * C91722 + (C27319 + C27318) * C93805 +
            (C27317 + C27316) * C91732) *
               C62191) *
              C1383 +
          (((C27327 + C27326) * C91732 + (C27325 + C27324) * C93805 +
            (C27323 + C27322) * C91722 + (C27321 + C27320) * C93587) *
               C62191 +
           ((C15092 * C11103 + C93818 * C11224 + C15093 * C14027 +
             C93711 * C14143) *
                C91732 +
            (C15092 * C11107 + C93818 * C11228 + C15093 * C14029 +
             C93711 * C14145) *
                C93805 +
            (C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
             C93711 * C14144) *
                C91722 +
            (C15092 * C11106 + C93818 * C11227 + C15093 * C14030 +
             C93711 * C14146) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C91732 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93805 +
            (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
               C93818 +
           ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
            (C64688 + C64687) * C91722 + (C64686 + C64685) * C93587) *
               C93711) *
              C93635 * C800 -
          (((C69750 + C69749) * C93587 + (C69748 + C69747) * C91722 +
            (C68144 + C68143) * C93805 + (C68142 + C68141) * C91732) *
               C93711 +
           ((C64685 + C64686) * C93587 + (C64687 + C64688) * C91722 +
            (C68140 + C68139) * C93805 + (C68138 + C68137) * C91732) *
               C93818) *
              C93635 * C801 +
          ((C68149 * C91732 + C68150 * C93805 + (C69747 + C69748) * C91722 +
            (C69749 + C69750) * C93587) *
               C93818 +
           ((C68148 + C68147) * C91732 + (C68146 + C68145) * C93805 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C91722 +
            (C62344 * C4920 + C62191 * C5124 + C62345 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C91732 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93805 +
            (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
               C93818 +
           ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
            (C64688 + C64687) * C91722 + (C64686 + C64685) * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C64681 + C64682) * C93587 + (C64683 + C64684) * C91722 +
            (C64685 + C64686) * C93805 + (C64687 + C64688) * C91732) *
               C93711 +
           ((C62378 + C62377) * C93587 + (C62376 + C62375) * C91722 +
            (C62374 + C62373) * C93805 + (C62372 + C62371) * C91732) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C62383 * C91732 + C62384 * C93805 + (C62382 + C62381) * C91722 +
            (C62380 + C62379) * C93587) *
               C93818 +
           ((C64684 + C64683) * C91732 + (C64682 + C64681) * C93805 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C91722 +
            (C62344 * C812 + C62191 * C960 + C62345 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C91732 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93805 +
            (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
               C93818 +
           ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
            (C64688 + C64687) * C91722 + (C64686 + C64685) * C93587) *
               C93711) *
              C1382 -
          (((C62345 * C5826 + C93737 * C6016 + C62344 * C3414 +
             C62191 * C3570) *
                C93587 +
            (C62345 * C5820 + C93737 * C6010 + C62344 * C3410 +
             C62191 * C3566) *
                C91722 +
            (C71591 + C71592) * C93805 + (C71593 + C71594) * C91732) *
               C93711 +
           ((C65657 + C65658) * C93587 + (C65659 + C65660) * C91722 +
            (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C93805 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C91732) *
               C93818) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C91732 +
            (C62344 * C1397 + C62191 * C1545 + C62345 * C11107 +
             C93737 * C11349) *
                C93805 +
            (C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
             C93737 * C11344) *
                C91722 +
            (C62344 * C1398 + C62191 * C1546 + C62345 * C11106 +
             C93737 * C11348) *
                C93587) *
               C93818 +
           ((C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
             C93737 * C14265) *
                C91732 +
            (C62344 * C5825 + C62191 * C6015 + C62345 * C14029 +
             C93737 * C14267) *
                C93805 +
            (C62344 * C5820 + C62191 * C6010 + C62345 * C14028 +
             C93737 * C14266) *
                C91722 +
            (C62344 * C5826 + C62191 * C6016 + C62345 * C14030 +
             C93737 * C14268) *
                C93587) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C15092 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93818 +
            (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
               C62191 +
           ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
            C56529 * C15093 + C56530 * C93711) *
               C93737) *
              C93635 * C800 -
          (((C50315 + C50316) * C93711 + (C50317 + C50318) * C15093 +
            C56531 * C93818 + C56532 * C15092) *
               C93737 +
           ((C46832 + C46831) * C93711 + (C46830 + C46829) * C15093 +
            (C46828 + C46827) * C93818 + (C46826 + C46825) * C15092) *
               C62191) *
              C93635 * C801 +
          ((C46837 * C15092 + C46838 * C93818 + (C46836 + C46835) * C15093 +
            (C46834 + C46833) * C93711) *
               C62191 +
           ((C50318 + C50317) * C15092 + (C50316 + C50315) * C93818 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C15093 +
            (C91732 * C8741 + C93805 * C8965 + C91722 * C8742 +
             C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C15092 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93818 +
            (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
               C62191 +
           ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
            C56529 * C15093 + C56530 * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C54124 + C54123) * C93711 + (C54122 + C54121) * C15093 +
            (C55346 + C55345) * C93818 + (C55344 + C55343) * C15092) *
               C93737 +
           ((C48392 + C48391) * C93711 + (C48390 + C48389) * C15093 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93818 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C15092) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C15092 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C93818 +
            (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C15093 +
            (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
                C93711) *
               C62191 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C15092 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C93818 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C15093 +
            (C91732 * C3493 + C93805 * C3641 + C91722 * C3494 +
             C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C15092 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93818 +
            (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
               C62191 +
           ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
            C56529 * C15093 + C56530 * C93711) *
               C93737) *
              C1382 -
          (((C53055 + C53056) * C93711 + (C53057 + C53058) * C15093 +
            (C53059 + C53060) * C93818 + (C53061 + C53062) * C15092) *
               C93737 +
           (C56531 * C93711 + C56532 * C15093 + (C53054 + C53053) * C93818 +
            (C53052 + C53051) * C15092) *
               C62191) *
              C1383 +
          (((C53062 + C53061) * C15092 + (C53060 + C53059) * C93818 +
            (C53058 + C53057) * C15093 + (C53056 + C53055) * C93711) *
               C62191 +
           ((C91732 * C11103 + C93805 * C11107 + C91722 * C11102 +
             C93587 * C11106) *
                C15092 +
            (C91732 * C11224 + C93805 * C11427 + C91722 * C11223 +
             C93587 * C11426) *
                C93818 +
            (C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
             C93587 * C14030) *
                C15093 +
            (C91732 * C14143 + C93805 * C14367 + C91722 * C14144 +
             C93587 * C14368) *
                C93711) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93805 +
            (C15391 + C15392) * C93587) *
               C62191 +
           ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
              C93635 * C800 -
          (((C28766 + C28767) * C93587 + (C31203 + C31202) * C93805) * C93737 +
           ((C17785 + C17786) * C93587 +
            (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
             C16197 + C16197 + C93818 * C1079) *
                C93805) *
               C62191) *
              C93635 * C801 +
          (((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
             C16199 + C16199 + C93711 * C5358) *
                C93805 +
            (C15354 * C809 + C16200 + C16200 + C93818 * C1081 + C15355 * C4916 +
             C16201 + C16201 + C93711 * C5357) *
                C93587) *
               C62191 +
           ((C15354 * C5818 + C26648 + C26648 + C93818 * C6174 +
             C15355 * C8615 + C26649 + C26649 + C93711 * C9089) *
                C93805 +
            (C15354 * C5817 + C26650 + C26650 + C93818 * C6173 +
             C15355 * C8616 + C26651 + C26651 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93805 +
            (C15391 + C15392) * C93587) *
               C62191 +
           ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
              C93635 * C93621 * C97 -
          (((C18756 + C18757) * C93587 + C29971 * C93805) * C93737 +
           ((C15394 + C15393) * C93587 + (C15392 + C15391) * C93805) * C62191) *
              C93635 * C93621 * C98 +
          ((C15397 * C93805 + (C15396 + C15395) * C93587) * C62191 +
           ((C18757 + C18756) * C93805 +
            (C15354 * C1385 + C18746 + C18746 + C93818 * C1657 +
             C15355 * C3412 + C18747 + C18747 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93805 +
            (C15391 + C15392) * C93587) *
               C62191 +
           ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
              C1382 -
          (((C27652 + C27653) * C93587 + (C27654 + C27655) * C93805) * C93737 +
           (C29971 * C93587 + (C27651 + C27650) * C93805) * C62191) *
              C1383 +
          (((C27655 + C27654) * C93805 + (C27653 + C27652) * C93587) * C62191 +
           ((C15354 * C11103 + C27634 + C27634 + C93818 * C11546 +
             C15355 * C14027 + C27635 + C27635 + C93711 * C14479) *
                C93805 +
            (C15354 * C11102 + C27636 + C27636 + C93818 * C11545 +
             C15355 * C14028 + C27637 + C27637 + C93711 * C14480) *
                C93587) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C15092 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93818 +
            (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
               C93805 +
           ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
            (C64688 + C64687) * C15093 + (C64994 + C64993) * C93711) *
               C93587) *
              C93635 * C800 -
          (((C70050 + C70049) * C93711 + (C69748 + C69747) * C15093 +
            (C64993 + C64994) * C93818 + (C64687 + C64688) * C15092) *
               C93587 +
           ((C68394 + C68393) * C93711 + (C68142 + C68141) * C15093 +
            (C68392 + C68391) * C93818 + (C68138 + C68137) * C15092) *
               C93805) *
              C93635 * C801 +
          ((C68149 * C15092 + C68397 * C93818 + (C68148 + C68147) * C15093 +
            (C68396 + C68395) * C93711) *
               C93805 +
           ((C69747 + C69748) * C15092 + (C70049 + C70050) * C93818 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C15093 +
            (C62344 * C5038 + C62191 * C5447 + C62345 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C15092 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93818 +
            (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
               C93805 +
           ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
            (C64688 + C64687) * C15093 + (C64994 + C64993) * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C64991 + C64992) * C93711 + (C64683 + C64684) * C15093 +
            (C62623 + C62622) * C93818 + (C62376 + C62375) * C15092) *
               C93587 +
           ((C64993 + C64994) * C93711 + (C64687 + C64688) * C15093 +
            (C62621 + C62620) * C93818 + (C62372 + C62371) * C15092) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C62383 * C15092 + C62626 * C93818 + (C64684 + C64683) * C15093 +
            (C64992 + C64991) * C93711) *
               C93805 +
           ((C62382 + C62381) * C15092 + (C62625 + C62624) * C93818 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C15093 +
            (C62344 * C886 + C62191 * C1142 + C62345 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C15092 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93818 +
            (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
               C93805 +
           ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
            (C64688 + C64687) * C15093 + (C64994 + C64993) * C93711) *
               C93587) *
              C1382 -
          (((C62345 * C5925 + C93737 * C6269 + C62344 * C3492 +
             C62191 * C3784) *
                C93711 +
            (C62345 * C5820 + C93737 * C6010 + C62344 * C3410 +
             C62191 * C3566) *
                C15093 +
            (C65986 + C65987) * C93818 + (C65659 + C65660) * C15092) *
               C93587 +
           ((C71923 + C71924) * C93711 + (C71593 + C71594) * C15093 +
            (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C93818 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C15092) *
               C93805) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C15092 +
            (C62344 * C1471 + C62191 * C1727 + C62345 * C11224 +
             C93737 * C11655) *
                C93818 +
            (C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
             C93737 * C14265) *
                C15093 +
            (C62344 * C5923 + C62191 * C6267 + C62345 * C14143 +
             C93737 * C14595) *
                C93711) *
               C93805 +
           ((C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
             C93737 * C11344) *
                C15092 +
            (C62344 * C1472 + C62191 * C1728 + C62345 * C11223 +
             C93737 * C11654) *
                C93818 +
            (C62344 * C5820 + C62191 * C6010 + C62345 * C14028 +
             C93737 * C14266) *
                C15093 +
            (C62344 * C5925 + C62191 * C6269 + C62345 * C14144 +
             C93737 * C14596) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C62344 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C62191 +
            (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
               C93818 +
           ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
            C56529 * C62345 + C56923 * C93737) *
               C93711) *
              C93635 * C800 -
          (((C50631 + C50632) * C93737 + (C50317 + C50318) * C62345 +
            (C47089 + C47088) * C62191 + (C46830 + C46829) * C62344) *
               C93711 +
           (C56924 * C93737 + C56532 * C62345 + (C47087 + C47086) * C62191 +
            (C46826 + C46825) * C62344) *
               C93818) *
              C93635 * C801 +
          ((C46837 * C62344 + C47092 * C62191 + (C50318 + C50317) * C62345 +
            (C50632 + C50631) * C93737) *
               C93818 +
           ((C46836 + C46835) * C62344 + (C47091 + C47090) * C62191 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C62345 +
            (C91732 * C8843 + C93805 * C9301 + C91722 * C8844 +
             C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C62344 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C62191 +
            (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
               C93818 +
           ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
            C56529 * C62345 + C56923 * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C54530 + C54529) * C93737 + (C54122 + C54121) * C62345 +
            (C48724 + C48723) * C62191 + (C48390 + C48389) * C62344) *
               C93711 +
           ((C55744 + C55743) * C93737 + (C55344 + C55343) * C62345 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C62191 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C62344) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C62344 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C62191 +
            (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C62345 +
            (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 +
             C93587 * C1781) *
                C93737) *
               C93818 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C62344 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C62191 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C62345 +
            (C91732 * C3567 + C93805 * C3855 + C91722 * C3568 +
             C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C62344 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C62191 +
            (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
               C93818 +
           ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
            C56529 * C62345 + C56923 * C93737) *
               C93711) *
              C1382 -
          (((C53371 + C53372) * C93737 + (C53057 + C53058) * C62345 +
            C56924 * C62191 + C56532 * C62344) *
               C93711 +
           ((C53373 + C53374) * C93737 + (C53061 + C53062) * C62345 +
            (C53370 + C53369) * C62191 + (C53052 + C53051) * C62344) *
               C93818) *
              C1383 +
          (((C53062 + C53061) * C62344 + (C53374 + C53373) * C62191 +
            (C91732 * C11103 + C93805 * C11107 + C91722 * C11102 +
             C93587 * C11106) *
                C62345 +
            (C91732 * C11345 + C93805 * C11733 + C91722 * C11344 +
             C93587 * C11732) *
                C93737) *
               C93818 +
           ((C53058 + C53057) * C62344 + (C53372 + C53371) * C62191 +
            (C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
             C93587 * C14030) *
                C62345 +
            (C91732 * C14265 + C93805 * C14695 + C91722 * C14266 +
             C93587 * C14696) *
                C93737) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C62344 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C62191 +
            (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
               C93805 +
           ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
            C29564 * C62345 + C30368 * C93737) *
               C93587) *
              C93635 * C800 -
          (((C29170 + C29171) * C93737 + (C28350 + C28351) * C62345 +
            (C18108 + C18109) * C62191 + (C17445 + C17446) * C62344) *
               C93587 +
           ((C31607 + C31606) * C93737 + (C30781 + C30780) * C62345 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C62191 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C62344) *
               C93805) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C62344 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C62191 +
            (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C62345 +
            (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 +
             C93711 * C9413) *
                C93737) *
               C93805 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C62344 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C62191 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C62345 +
            (C15092 * C6007 + C93818 * C6425 + C15093 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C62344 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C62191 +
            (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
               C93805 +
           ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
            C29564 * C62345 + C30368 * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C19073 + C19074) * C93737 + (C18432 + C18433) * C62345 +
            (C15651 + C15650) * C62191 + (C15124 + C15123) * C62344) *
               C93587 +
           (C30369 * C93737 + C29567 * C62345 + (C15649 + C15648) * C62191 +
            (C15120 + C15119) * C62344) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C15131 * C62344 + C15654 * C62191 + (C18433 + C18432) * C62345 +
            (C19074 + C19073) * C93737) *
               C93805 +
           ((C15130 + C15129) * C62344 + (C15653 + C15652) * C62191 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C62345 +
            (C15092 * C1533 + C93818 * C1839 + C15093 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C62344 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C62191 +
            (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
               C93805 +
           ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
            C29564 * C62345 + C30368 * C93737) *
               C93587) *
              C1382 -
          (((C27964 + C27965) * C93737 + (C27322 + C27323) * C62345 +
            C30369 * C62191 + C29567 * C62344) *
               C93587 +
           ((C27966 + C27967) * C93737 + (C27326 + C27327) * C62345 +
            (C27963 + C27962) * C62191 + (C27317 + C27316) * C62344) *
               C93805) *
              C1383 +
          (((C27327 + C27326) * C62344 + (C27967 + C27966) * C62191 +
            (C15092 * C11103 + C93818 * C11224 + C15093 * C14027 +
             C93711 * C14143) *
                C62345 +
            (C15092 * C11345 + C93818 * C11830 + C15093 * C14265 +
             C93711 * C14801) *
                C93737) *
               C93805 +
           ((C27323 + C27322) * C62344 + (C27965 + C27964) * C62191 +
            (C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
             C93711 * C14144) *
                C62345 +
            (C15092 * C11344 + C93818 * C11829 + C15093 * C14266 +
             C93711 * C14802) *
                C93737) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
             C62869 + C62869 + C93737 * C1900) *
                C93818 +
            (C68663 + C68664) * C93711) *
               C93805 +
           ((C62902 + C62903) * C93818 + (C65318 + C65317) * C93711) * C93587) *
              C93635 * C800 -
          (((C70364 + C70363) * C93711 + (C65317 + C65318) * C93818) * C93587 +
           ((C68666 + C68665) * C93711 + (C68664 + C68663) * C93818) * C93805) *
              C93635 * C801 +
          ((C68669 * C93818 + (C68668 + C68667) * C93711) * C93805 +
           ((C70363 + C70364) * C93818 +
            (C62865 * C4916 + C70357 + C70357 + C62191 * C5715 +
             C62866 * C8616 + C70358 + C70358 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
             C62869 + C62869 + C93737 * C1900) *
                C93818 +
            (C68663 + C68664) * C93711) *
               C93805 +
           ((C62902 + C62903) * C93818 + (C65318 + C65317) * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C65315 + C65316) * C93711 + (C62905 + C62904) * C93818) * C93587 +
           ((C65317 + C65318) * C93711 + (C62903 + C62902) * C93818) * C93805) *
              C93635 * C93621 * C98 +
          ((C62908 * C93818 + (C65316 + C65315) * C93711) * C93805 +
           ((C62907 + C62906) * C93818 +
            (C62865 * C804 + C65305 + C65305 + C62191 * C1316 + C62866 * C3412 +
             C65306 + C65306 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
             C62869 + C62869 + C93737 * C1900) *
                C93818 +
            (C68663 + C68664) * C93711) *
               C93805 +
           ((C62902 + C62903) * C93818 + (C65318 + C65317) * C93711) * C93587) *
              C1382 -
          (((C62866 * C5820 + C67215 + C67215 + C93737 * C6509 +
             C62865 * C3410 + C67214 + C67214 + C62191 * C3994) *
                C93711 +
            (C66319 + C66320) * C93818) *
               C93587 +
           ((C72256 + C72257) * C93711 +
            (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
             C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                C93818) *
               C93805) *
              C1383 +
          (((C62865 * C1389 + C64365 + C64365 + C62191 * C1901 +
             C62866 * C11103 + C64366 + C64366 + C93737 * C11920) *
                C93818 +
            (C62865 * C5819 + C69437 + C69437 + C62191 * C6507 +
             C62866 * C14027 + C69438 + C69438 + C93737 * C14907) *
                C93711) *
               C93805 +
           ((C62865 * C1390 + C64367 + C64367 + C62191 * C1902 +
             C62866 * C11102 + C64368 + C64368 + C93737 * C11919) *
                C93818 +
            (C62865 * C5820 + C78217 + C78217 + C62191 * C6509 +
             C62866 * C14028 + C78218 + C78218 + C93737 * C14908) *
                C93711) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
              C45725 + C45725 + C93587 * C121) *
                 C62191 +
             (C52727 + C52728) * C93737) *
                C93818 +
            ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
               C2695 -
           (((C52729 + C52730) * C93737 + C56138 * C62191) * C93711 +
            ((C52731 + C52732) * C93737 + (C52728 + C52727) * C62191) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C54939 + C54940) * C62191 +
             (C45719 * C1390 + C54931 + C54931 + C93805 * C1406 +
              C45721 * C1391 + C54932 + C54932 + C93587 * C1407) *
                 C93737) *
                C93818 +
            ((C53709 + C53710) * C62191 +
             (C45719 * C5820 + C54933 + C54933 + C93805 * C5832 +
              C45721 * C12033 + C54934 + C54934 + C93587 * C12035) *
                 C93737) *
                C93711) *
               C2696 -
           (((C53710 + C53709) * C93737 + (C48050 + C48049) * C62191) * C93711 +
            ((C54940 + C54939) * C93737 +
             (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
              C45735 + C45735 + C93805 * C121) *
                 C62191) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C91732 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93805 +
             (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
                C62191 +
            ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
             C29564 * C91722 + C29565 * C93587) *
                C93737) *
               C2695 -
           (((C27320 + C27321) * C93587 + (C27322 + C27323) * C91722 +
             (C27324 + C27325) * C93805 + (C27326 + C27327) * C91732) *
                C93737 +
            (C29566 * C93587 + C29567 * C91722 + (C27319 + C27318) * C93805 +
             (C27317 + C27316) * C91732) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          (((C29564 * C91732 + C29565 * C93805 + (C18433 + C18432) * C91722 +
             (C18431 + C18430) * C93587) *
                C62191 +
            ((C27323 + C27322) * C91732 + (C27321 + C27320) * C93805 +
             (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
              C93711 * C12136) *
                 C91722 +
             (C15092 * C1399 + C93818 * C1481 + C15093 * C12034 +
              C93711 * C12137) *
                 C93587) *
                C93737) *
               C2696 -
           (((C18430 + C18431) * C93587 + (C18432 + C18433) * C91722 +
             C29566 * C93805 + C29567 * C91732) *
                C93737 +
            ((C15126 + C15125) * C93587 + (C15124 + C15123) * C91722 +
             (C15122 + C15121) * C93805 + (C15120 + C15119) * C91732) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C91732 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93805 +
             (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
                C93818 +
            ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
             C78609 * C91722 + C78610 * C93587) *
                C93711) *
               C2695 -
           (((C79795 + C79796) * C93587 + (C79797 + C79798) * C91722 +
             (C71591 + C71592) * C93805 + (C71593 + C71594) * C91732) *
                C93711 +
            ((C65657 + C65658) * C93587 + (C65659 + C65660) * C91722 +
             (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93805 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C91732) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C91732 + (C65658 + C65657) * C93805 +
             (C65656 + C65655) * C91722 + (C65654 + C65653) * C93587) *
                C93818 +
            ((C79798 + C79797) * C91732 + (C79796 + C79795) * C93805 +
             (C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
              C93737 * C12248) *
                 C91722 +
             (C62344 * C3415 + C62191 * C3571 + C62345 * C12034 +
              C93737 * C12249) *
                 C93587) *
                C93711) *
               C2696 -
           (((C64681 + C64682) * C93587 + (C64683 + C64684) * C91722 +
             C78611 * C93805 + C78612 * C91732) *
                C93711 +
            ((C62378 + C62377) * C93587 + (C62376 + C62375) * C91722 +
             (C62374 + C62373) * C93805 + (C62372 + C62371) * C91732) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C15092 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93818 +
             (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
                C62191 +
            ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
             C56529 * C15093 + C56530 * C93711) *
                C93737) *
               C2695 -
           (((C53055 + C53056) * C93711 + (C53057 + C53058) * C15093 +
             (C53059 + C53060) * C93818 + (C53061 + C53062) * C15092) *
                C93737 +
            (C56531 * C93711 + C56532 * C15093 + (C53054 + C53053) * C93818 +
             (C53052 + C53051) * C15092) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          ((((C55343 + C55344) * C15092 + (C55345 + C55346) * C93818 +
             (C54121 + C54122) * C15093 + (C54123 + C54124) * C93711) *
                C62191 +
            ((C91732 * C1390 + C93805 * C1398 + C91722 * C1391 +
              C93587 * C1399) *
                 C15092 +
             (C91732 * C1472 + C93805 * C1604 + C91722 * C1473 +
              C93587 * C1605) *
                 C93818 +
             (C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
              C93587 * C12034) *
                 C15093 +
             (C91732 * C5925 + C93805 * C6096 + C91722 * C12136 +
              C93587 * C12366) *
                 C93711) *
                C93737) *
               C2696 -
           (((C54124 + C54123) * C93711 + (C54122 + C54121) * C15093 +
             (C55346 + C55345) * C93818 + (C55344 + C55343) * C15092) *
                C93737 +
            ((C48392 + C48391) * C93711 + (C48390 + C48389) * C15093 +
             (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C93818 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C15092) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
              C15358 + C15358 + C93711 * C1079) *
                 C93805 +
             (C15391 + C15392) * C93587) *
                C62191 +
            ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
               C2695 -
           (((C27652 + C27653) * C93587 + (C27654 + C27655) * C93805) * C93737 +
            (C29971 * C93587 + (C27651 + C27650) * C93805) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C29970 * C93805 + (C18757 + C18756) * C93587) * C62191 +
            ((C27653 + C27652) * C93805 +
             (C15354 * C1391 + C16910 + C16910 + C93818 * C1663 +
              C15355 * C12033 + C16911 + C16911 + C93711 * C12465) *
                 C93587) *
                C93737) *
               C2696 -
           (((C18756 + C18757) * C93587 + C29971 * C93805) * C93737 +
            ((C15394 + C15393) * C93587 + (C15392 + C15391) * C93805) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C15092 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93818 +
             (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
                C93805 +
            ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
             C78609 * C15093 + C79003 * C93711) *
                C93587) *
               C2695 -
           (((C80193 + C80194) * C93711 + (C79797 + C79798) * C15093 +
             (C65986 + C65987) * C93818 + (C65659 + C65660) * C15092) *
                C93587 +
            ((C71923 + C71924) * C93711 + (C71593 + C71594) * C15093 +
             (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93818 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C15092) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C15092 + (C65987 + C65986) * C93818 +
             (C79798 + C79797) * C15093 + (C80194 + C80193) * C93711) *
                C93805 +
            ((C65656 + C65655) * C15092 + (C65985 + C65984) * C93818 +
             (C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
              C93737 * C12248) *
                 C15093 +
             (C62344 * C3493 + C62191 * C3785 + C62345 * C12136 +
              C93737 * C12575) *
                 C93711) *
                C93587) *
               C2696 -
           (((C64991 + C64992) * C93711 + (C64683 + C64684) * C15093 +
             (C62623 + C62622) * C93818 + (C62376 + C62375) * C15092) *
                C93587 +
            (C79004 * C93711 + C78612 * C15093 + (C62621 + C62620) * C93818 +
             (C62372 + C62371) * C15092) *
                C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C62344 +
             (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                 C62191 +
             (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
                C93818 +
            ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
             C56529 * C62345 + C56923 * C93737) *
                C93711) *
               C2695 -
           (((C53371 + C53372) * C93737 + (C53057 + C53058) * C62345 +
             C56924 * C62191 + C56532 * C62344) *
                C93711 +
            ((C53373 + C53374) * C93737 + (C53061 + C53062) * C62345 +
             (C53370 + C53369) * C62191 + (C53052 + C53051) * C62344) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          ((((C55343 + C55344) * C62344 + (C55743 + C55744) * C62191 +
             (C91732 * C1390 + C93805 * C1398 + C91722 * C1391 +
              C93587 * C1399) *
                 C62345 +
             (C91732 * C1538 + C93805 * C1786 + C91722 * C1539 +
              C93587 * C1787) *
                 C93737) *
                C93818 +
            ((C54121 + C54122) * C62344 + (C54529 + C54530) * C62191 +
             (C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
              C93587 * C12034) *
                 C62345 +
             (C91732 * C6010 + C93805 * C6348 + C91722 * C12248 +
              C93587 * C12683) *
                 C93737) *
                C93711) *
               C2696 -
           (((C54530 + C54529) * C93737 + (C54122 + C54121) * C62345 +
             (C48724 + C48723) * C62191 + (C48390 + C48389) * C62344) *
                C93711 +
            ((C55744 + C55743) * C93737 + (C55344 + C55343) * C62345 +
             (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                 C62191 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C62344) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C62344 +
             (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                 C62191 +
             (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
                C93805 +
            ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
             C29564 * C62345 + C30368 * C93737) *
                C93587) *
               C2695 -
           (((C27964 + C27965) * C93737 + (C27322 + C27323) * C62345 +
             C30369 * C62191 + C29567 * C62344) *
                C93587 +
            ((C27966 + C27967) * C93737 + (C27326 + C27327) * C62345 +
             (C27963 + C27962) * C62191 + (C27317 + C27316) * C62344) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          (((C29564 * C62344 + C30368 * C62191 + (C27323 + C27322) * C62345 +
             (C27965 + C27964) * C93737) *
                C93805 +
            ((C18433 + C18432) * C62344 + (C19074 + C19073) * C62191 +
             (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
              C93711 * C12136) *
                 C62345 +
             (C15092 * C1539 + C93818 * C1845 + C15093 * C12248 +
              C93711 * C12782) *
                 C93737) *
                C93587) *
               C2696 -
           (((C19073 + C19074) * C93737 + (C18432 + C18433) * C62345 +
             (C15651 + C15650) * C62191 + (C15124 + C15123) * C62344) *
                C93587 +
            (C30369 * C93737 + C29567 * C62345 + (C15649 + C15648) * C62191 +
             (C15120 + C15119) * C62344) *
                C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
              C62869 + C62869 + C93737 * C1900) *
                 C93818 +
             (C68663 + C68664) * C93711) *
                C93805 +
            ((C62902 + C62903) * C93818 + C79395 * C93711) * C93587) *
               C2695 -
           (((C80593 + C80594) * C93711 + (C66319 + C66320) * C93818) * C93587 +
            ((C72256 + C72257) * C93711 +
             (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
              C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                 C93818) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          ((((C66320 + C66319) * C93818 + (C80594 + C80593) * C93711) * C93805 +
            ((C66318 + C66317) * C93818 +
             (C62865 * C3411 + C67216 + C67216 + C62191 * C3995 +
              C62866 * C12033 + C67217 + C67217 + C93737 * C12893) *
                 C93711) *
                C93587) *
               C2696 -
           (((C65315 + C65316) * C93711 + (C62905 + C62904) * C93818) * C93587 +
            (C79396 * C93711 + (C62903 + C62902) * C93818) * C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C62191 +
            (C52727 + C52728) * C93737) *
               C93818 +
           ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
              C93635 * C93621 * C97 -
          (((C53710 + C53709) * C93737 + (C48050 + C48049) * C62191) * C93711 +
           ((C54940 + C54939) * C93737 +
            (C45721 * C110 + C45734 + C45734 + C93587 * C122 + C45719 * C109 +
             C45735 + C45735 + C93805 * C121) *
                C62191) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C45719 * C110 + C45736 + C45736 + C93805 * C122 + C45721 * C111 +
             C45737 + C45737 + C93587 * C123) *
                C62191 +
            (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
             C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                C93737) *
               C93818 +
           ((C45719 * C805 + C45738 + C45738 + C93805 * C821 + C45721 * C804 +
             C45739 + C45739 + C93587 * C820) *
                C62191 +
            (C45719 * C3411 + C50931 + C50931 + C93805 * C3419 +
             C45721 * C3412 + C50932 + C50932 + C93587 * C3420) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 + C45721 * C109 +
             C45725 + C45725 + C93587 * C121) *
                C62191 +
            (C52727 + C52728) * C93737) *
               C93818 +
           ((C46556 + C46557) * C62191 + C56137 * C93737) * C93711) *
              C93635 * C800 -
          (((C49993 + C49994) * C93737 + (C46559 + C46558) * C62191) * C93711 +
           (C56138 * C93737 + (C46557 + C46556) * C62191) * C93818) *
              C93635 * C801 +
          ((C46562 * C62191 + (C49994 + C49993) * C93737) * C93818 +
           ((C46561 + C46560) * C62191 +
            (C45719 * C8615 + C49983 + C49983 + C93805 * C8619 +
             C45721 * C8616 + C49984 + C49984 + C93587 * C8620) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C91732 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93805 +
            (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
               C62191 +
           ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
            C29564 * C91722 + C29565 * C93587) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C18430 + C18431) * C93587 + (C18432 + C18433) * C91722 +
            C29566 * C93805 + C29567 * C91732) *
               C93737 +
           ((C15126 + C15125) * C93587 + (C15124 + C15123) * C91722 +
            (C15122 + C15121) * C93805 + (C15120 + C15119) * C91732) *
               C62191) *
              C93635 * C93621 * C98 +
          ((C15131 * C91732 + C15132 * C93805 + (C15130 + C15129) * C91722 +
            (C15128 + C15127) * C93587) *
               C62191 +
           ((C18433 + C18432) * C91732 + (C18431 + C18430) * C93805 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C91722 +
            (C15092 * C1393 + C93818 * C1475 + C15093 * C3416 +
             C93711 * C3498) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C91732 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93805 +
            (C15119 + C15120) * C91722 + (C15121 + C15122) * C93587) *
               C62191 +
           ((C27316 + C27317) * C91732 + (C27318 + C27319) * C93805 +
            C29564 * C91722 + C29565 * C93587) *
               C93737) *
              C93635 * C800 -
          (((C28348 + C28349) * C93587 + (C28350 + C28351) * C91722 +
            (C30783 + C30782) * C93805 + (C30781 + C30780) * C91732) *
               C93737 +
           ((C17443 + C17444) * C93587 + (C17445 + C17446) * C91722 +
            (C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93805 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C91732) *
               C62191) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C91732 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C93805 +
            (C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C91722 +
            (C15092 * C817 + C93818 * C899 + C15093 * C4920 + C93711 * C5042) *
                C93587) *
               C62191 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C91732 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C93805 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C91722 +
            (C15092 * C5823 + C93818 * C5927 + C15093 * C8618 +
             C93711 * C8744) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C91732 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93805 +
            (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
               C93818 +
           ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
            (C64688 + C64687) * C91722 + (C64686 + C64685) * C93587) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C64681 + C64682) * C93587 + (C64683 + C64684) * C91722 +
            (C64685 + C64686) * C93805 + (C64687 + C64688) * C91732) *
               C93711 +
           ((C62378 + C62377) * C93587 + (C62376 + C62375) * C91722 +
            (C62374 + C62373) * C93805 + (C62372 + C62371) * C91732) *
               C93818) *
              C93635 * C93621 * C98 +
          ((C62383 * C91732 + C62384 * C93805 + (C62382 + C62381) * C91722 +
            (C62380 + C62379) * C93587) *
               C93818 +
           ((C64684 + C64683) * C91732 + (C64682 + C64681) * C93805 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C91722 +
            (C62344 * C812 + C62191 * C960 + C62345 * C3416 + C93737 * C3572) *
                C93587) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C91732 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93805 +
            (C62371 + C62372) * C91722 + (C62373 + C62374) * C93587) *
               C93818 +
           ((C68137 + C68138) * C91732 + (C68139 + C68140) * C93805 +
            (C64688 + C64687) * C91722 + (C64686 + C64685) * C93587) *
               C93711) *
              C93635 * C800 -
          (((C69750 + C69749) * C93587 + (C69748 + C69747) * C91722 +
            (C68144 + C68143) * C93805 + (C68142 + C68141) * C91732) *
               C93711 +
           ((C64685 + C64686) * C93587 + (C64687 + C64688) * C91722 +
            (C68140 + C68139) * C93805 + (C68138 + C68137) * C91732) *
               C93818) *
              C93635 * C801 +
          ((C68149 * C91732 + C68150 * C93805 + (C69747 + C69748) * C91722 +
            (C69749 + C69750) * C93587) *
               C93818 +
           ((C68148 + C68147) * C91732 + (C68146 + C68145) * C93805 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C91722 +
            (C62344 * C4920 + C62191 * C5124 + C62345 * C8618 +
             C93737 * C8846) *
                C93587) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C15092 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93818 +
            (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
               C62191 +
           ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
            C56529 * C15093 + C56530 * C93711) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C54124 + C54123) * C93711 + (C54122 + C54121) * C15093 +
            (C55346 + C55345) * C93818 + (C55344 + C55343) * C15092) *
               C93737 +
           ((C48392 + C48391) * C93711 + (C48390 + C48389) * C15093 +
            (C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93818 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C15092) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C15092 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C93818 +
            (C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C15093 +
            (C91732 * C887 + C93805 * C1019 + C91722 * C886 + C93587 * C1018) *
                C93711) *
               C62191 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C15092 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C93818 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C15093 +
            (C91732 * C3493 + C93805 * C3641 + C91722 * C3494 +
             C93587 * C3642) *
                C93711) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C15092 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93818 +
            (C46825 + C46826) * C15093 + (C46827 + C46828) * C93711) *
               C62191 +
           ((C53051 + C53052) * C15092 + (C53053 + C53054) * C93818 +
            C56529 * C15093 + C56530 * C93711) *
               C93737) *
              C93635 * C800 -
          (((C50315 + C50316) * C93711 + (C50317 + C50318) * C15093 +
            C56531 * C93818 + C56532 * C15092) *
               C93737 +
           ((C46832 + C46831) * C93711 + (C46830 + C46829) * C15093 +
            (C46828 + C46827) * C93818 + (C46826 + C46825) * C15092) *
               C62191) *
              C93635 * C801 +
          ((C46837 * C15092 + C46838 * C93818 + (C46836 + C46835) * C15093 +
            (C46834 + C46833) * C93711) *
               C62191 +
           ((C50318 + C50317) * C15092 + (C50316 + C50315) * C93818 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C15093 +
            (C91732 * C8741 + C93805 * C8965 + C91722 * C8742 +
             C93587 * C8966) *
                C93711) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93805 +
            (C15391 + C15392) * C93587) *
               C62191 +
           ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
              C93635 * C93621 * C97 -
          (((C18756 + C18757) * C93587 + C29971 * C93805) * C93737 +
           ((C15394 + C15393) * C93587 + (C15392 + C15391) * C93805) * C62191) *
              C93635 * C93621 * C98 +
          ((C15397 * C93805 + (C15396 + C15395) * C93587) * C62191 +
           ((C18757 + C18756) * C93805 +
            (C15354 * C1385 + C18746 + C18746 + C93818 * C1657 +
             C15355 * C3412 + C18747 + C18747 + C93711 * C3712) *
                C93587) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93805 +
            (C15391 + C15392) * C93587) *
               C62191 +
           ((C27650 + C27651) * C93805 + C29970 * C93587) * C93737) *
              C93635 * C800 -
          (((C28766 + C28767) * C93587 + (C31203 + C31202) * C93805) * C93737 +
           ((C17785 + C17786) * C93587 +
            (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
             C16197 + C16197 + C93818 * C1079) *
                C93805) *
               C62191) *
              C93635 * C801 +
          (((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
             C16199 + C16199 + C93711 * C5358) *
                C93805 +
            (C15354 * C809 + C16200 + C16200 + C93818 * C1081 + C15355 * C4916 +
             C16201 + C16201 + C93711 * C5357) *
                C93587) *
               C62191 +
           ((C15354 * C5818 + C26648 + C26648 + C93818 * C6174 +
             C15355 * C8615 + C26649 + C26649 + C93711 * C9089) *
                C93805 +
            (C15354 * C5817 + C26650 + C26650 + C93818 * C6173 +
             C15355 * C8616 + C26651 + C26651 + C93711 * C9090) *
                C93587) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C15092 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93818 +
            (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
               C93805 +
           ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
            (C64688 + C64687) * C15093 + (C64994 + C64993) * C93711) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C64991 + C64992) * C93711 + (C64683 + C64684) * C15093 +
            (C62623 + C62622) * C93818 + (C62376 + C62375) * C15092) *
               C93587 +
           ((C64993 + C64994) * C93711 + (C64687 + C64688) * C15093 +
            (C62621 + C62620) * C93818 + (C62372 + C62371) * C15092) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C62383 * C15092 + C62626 * C93818 + (C64684 + C64683) * C15093 +
            (C64992 + C64991) * C93711) *
               C93805 +
           ((C62382 + C62381) * C15092 + (C62625 + C62624) * C93818 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C15093 +
            (C62344 * C886 + C62191 * C1142 + C62345 * C3494 + C93737 * C3786) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C15092 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93818 +
            (C68137 + C68138) * C15093 + (C68391 + C68392) * C93711) *
               C93805 +
           ((C62371 + C62372) * C15092 + (C62620 + C62621) * C93818 +
            (C64688 + C64687) * C15093 + (C64994 + C64993) * C93711) *
               C93587) *
              C93635 * C800 -
          (((C70050 + C70049) * C93711 + (C69748 + C69747) * C15093 +
            (C64993 + C64994) * C93818 + (C64687 + C64688) * C15092) *
               C93587 +
           ((C68394 + C68393) * C93711 + (C68142 + C68141) * C15093 +
            (C68392 + C68391) * C93818 + (C68138 + C68137) * C15092) *
               C93805) *
              C93635 * C801 +
          ((C68149 * C15092 + C68397 * C93818 + (C68148 + C68147) * C15093 +
            (C68396 + C68395) * C93711) *
               C93805 +
           ((C69747 + C69748) * C15092 + (C70049 + C70050) * C93818 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C15093 +
            (C62344 * C5038 + C62191 * C5447 + C62345 * C8742 +
             C93737 * C9196) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C62344 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C62191 +
            (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
               C93818 +
           ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
            C56529 * C62345 + C56923 * C93737) *
               C93711) *
              C93635 * C93621 * C97 -
          (((C54530 + C54529) * C93737 + (C54122 + C54121) * C62345 +
            (C48724 + C48723) * C62191 + (C48390 + C48389) * C62344) *
               C93711 +
           ((C55744 + C55743) * C93737 + (C55344 + C55343) * C62345 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C62191 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C62344) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C62344 +
            (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
                C62191 +
            (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C62345 +
            (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 +
             C93587 * C1781) *
                C93737) *
               C93818 +
           ((C91732 * C805 + C93805 * C813 + C91722 * C804 + C93587 * C812) *
                C62344 +
            (C91732 * C953 + C93805 * C1201 + C91722 * C952 + C93587 * C1200) *
                C62191 +
            (C91732 * C3411 + C93805 * C3415 + C91722 * C3412 +
             C93587 * C3416) *
                C62345 +
            (C91732 * C3567 + C93805 * C3855 + C91722 * C3568 +
             C93587 * C3856) *
                C93737) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C62344 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C62191 +
            (C53051 + C53052) * C62345 + (C53369 + C53370) * C93737) *
               C93818 +
           ((C46825 + C46826) * C62344 + (C47086 + C47087) * C62191 +
            C56529 * C62345 + C56923 * C93737) *
               C93711) *
              C93635 * C800 -
          (((C50631 + C50632) * C93737 + (C50317 + C50318) * C62345 +
            (C47089 + C47088) * C62191 + (C46830 + C46829) * C62344) *
               C93711 +
           (C56924 * C93737 + C56532 * C62345 + (C47087 + C47086) * C62191 +
            (C46826 + C46825) * C62344) *
               C93818) *
              C93635 * C801 +
          ((C46837 * C62344 + C47092 * C62191 + (C50318 + C50317) * C62345 +
            (C50632 + C50631) * C93737) *
               C93818 +
           ((C46836 + C46835) * C62344 + (C47091 + C47090) * C62191 +
            (C91732 * C8615 + C93805 * C8617 + C91722 * C8616 +
             C93587 * C8618) *
                C62345 +
            (C91732 * C8843 + C93805 * C9301 + C91722 * C8844 +
             C93587 * C9302) *
                C93737) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C62344 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C62191 +
            (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
               C93805 +
           ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
            C29564 * C62345 + C30368 * C93737) *
               C93587) *
              C93635 * C93621 * C97 -
          (((C19073 + C19074) * C93737 + (C18432 + C18433) * C62345 +
            (C15651 + C15650) * C62191 + (C15124 + C15123) * C62344) *
               C93587 +
           (C30369 * C93737 + C29567 * C62345 + (C15649 + C15648) * C62191 +
            (C15120 + C15119) * C62344) *
               C93805) *
              C93635 * C93621 * C98 +
          ((C15131 * C62344 + C15654 * C62191 + (C18433 + C18432) * C62345 +
            (C19074 + C19073) * C93737) *
               C93805 +
           ((C15130 + C15129) * C62344 + (C15653 + C15652) * C62191 +
            (C15092 * C1385 + C93818 * C1467 + C15093 * C3412 +
             C93711 * C3494) *
                C62345 +
            (C15092 * C1533 + C93818 * C1839 + C15093 * C3568 +
             C93711 * C3926) *
                C93737) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C62344 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C62191 +
            (C27316 + C27317) * C62345 + (C27962 + C27963) * C93737) *
               C93805 +
           ((C15119 + C15120) * C62344 + (C15648 + C15649) * C62191 +
            C29564 * C62345 + C30368 * C93737) *
               C93587) *
              C93635 * C800 -
          (((C29170 + C29171) * C93737 + (C28350 + C28351) * C62345 +
            (C18108 + C18109) * C62191 + (C17445 + C17446) * C62344) *
               C93587 +
           ((C31607 + C31606) * C93737 + (C30781 + C30780) * C62345 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C62191 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C62344) *
               C93805) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C62344 +
            (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
                C62191 +
            (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C62345 +
            (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 +
             C93711 * C9413) *
                C93737) *
               C93805 +
           ((C15092 * C809 + C93818 * C891 + C15093 * C4916 + C93711 * C5038) *
                C62344 +
            (C15092 * C957 + C93818 * C1263 + C15093 * C5120 + C93711 * C5637) *
                C62191 +
            (C15092 * C5817 + C93818 * C5921 + C15093 * C8616 +
             C93711 * C8742) *
                C62345 +
            (C15092 * C6007 + C93818 * C6425 + C15093 * C8844 +
             C93711 * C9414) *
                C93737) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
             C62869 + C62869 + C93737 * C1900) *
                C93818 +
            (C68663 + C68664) * C93711) *
               C93805 +
           ((C62902 + C62903) * C93818 + (C65318 + C65317) * C93711) * C93587) *
              C93635 * C93621 * C97 -
          (((C65315 + C65316) * C93711 + (C62905 + C62904) * C93818) * C93587 +
           ((C65317 + C65318) * C93711 + (C62903 + C62902) * C93818) * C93805) *
              C93635 * C93621 * C98 +
          ((C62908 * C93818 + (C65316 + C65315) * C93711) * C93805 +
           ((C62907 + C62906) * C93818 +
            (C62865 * C804 + C65305 + C65305 + C62191 * C1316 + C62866 * C3412 +
             C65306 + C65306 + C93737 * C3996) *
                C93711) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
             C62869 + C62869 + C93737 * C1900) *
                C93818 +
            (C68663 + C68664) * C93711) *
               C93805 +
           ((C62902 + C62903) * C93818 + (C65318 + C65317) * C93711) * C93587) *
              C93635 * C800 -
          (((C70364 + C70363) * C93711 + (C65317 + C65318) * C93818) * C93587 +
           ((C68666 + C68665) * C93711 + (C68664 + C68663) * C93818) * C93805) *
              C93635 * C801 +
          ((C68669 * C93818 + (C68668 + C68667) * C93711) * C93805 +
           ((C70363 + C70364) * C93818 +
            (C62865 * C4916 + C70357 + C70357 + C62191 * C5715 +
             C62866 * C8616 + C70358 + C70358 + C93737 * C9514) *
                C93711) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
             C41997 * C93847 + C41998 * C81840) *
                C93818 +
            (C87513 + C87514 + C87515) * C93711) *
               C93635 * C1979 -
           ((C87516 + C87517 + C87518) * C93711 +
            (C87515 + C87514 + C87513) * C93818) *
               C93635 * C1980) *
              C1981 +
          (((C89032 + C89033 + C89034) * C93818 +
            (C38561 * C93846 + C59452 * C93847 +
             (C36998 * C5822 + C42856 + C42856 + C93582 * C5834) * C81840) *
                C93711) *
               C93635 * C1980 -
           ((C89034 + C89033 + C89032) * C93711 +
            (C43784 * C81840 + C43783 * C93847 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93846) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C36999 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93582) *
                C93846 +
            ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
            C88376 * C81840) *
               C93635 * C1979 -
           (((C15093 * C5827 + C93711 * C5930 + C15092 * C5825 +
              C93818 * C5929) *
                 C93582 +
             (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 +
              C93818 * C5923) *
                 C36999) *
                C81840 +
            ((C30783 + C30782) * C93582 + (C30781 + C30780) * C36999) * C93847 +
            ((C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C93582 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C36999) *
                C93846) *
               C93635 * C1980) *
              C1981 +
          ((((C17446 + C17445) * C36999 + (C17444 + C17443) * C93582) * C93846 +
            ((C28351 + C28350) * C36999 + (C28349 + C28348) * C93582) * C93847 +
            ((C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
              C93711 * C5926) *
                 C36999 +
             (C15092 * C5826 + C93818 * C5931 + C15093 * C5828 +
              C93711 * C5932) *
                 C93582) *
                C81840) *
               C93635 * C1980 -
           (((C27320 + C27321) * C93582 + (C27322 + C27323) * C36999) * C81840 +
            (C29566 * C93582 + C29567 * C36999) * C93847 +
            ((C15122 + C15121) * C93582 + (C15120 + C15119) * C36999) *
                C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C36999 +
                       (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                        C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                           C93582) *
                          C93818 +
                      ((C87691 + C87692 + C87693) * C36999 +
                       (C87694 + C87695 + C87696) * C93582) *
                          C93711) *
                         C93635 * C1979 -
                     (((C87697 + C87698 + C87699) * C93582 +
                       (C87700 + C87701 + C87702) * C36999) *
                          C93711 +
                      ((C87696 + C87695 + C87694) * C93582 +
                       (C87693 + C87692 + C87691) * C36999) *
                          C93818) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C84276 + C84275 + C84274) * C36999 +
                       (C84273 + C84272 + C84271) * C93582) *
                          C93818 +
                      ((C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                        C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                           C36999 +
                       (C81991 * C817 + C93846 * C965 + C81992 * C5823 +
                        C93847 * C6013 + C81993 * C5828 + C81840 * C6018) *
                           C93582) *
                          C93711) *
                         C93635 * C1980 -
                     (((C84271 + C84272 + C84273) * C93582 +
                       (C84274 + C84275 + C84276) * C36999) *
                          C93711 +
                      ((C82024 + C82023 + C82022) * C93582 +
                       (C82021 + C82020 + C82019) * C36999) *
                          C93818) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C15092 +
             (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
             C37700 * C93711) *
                C93846 +
            (C88525 + C88526 + C88527 + C88528) * C93847 + C88539 * C81840) *
               C93635 * C1979 -
           ((C41453 * C93711 + C41454 * C15093 + C41452 * C93818 +
             C41451 * C15092) *
                C81840 +
            (C40056 * C93711 + C40057 * C15093 + C40058 * C93818 +
             C40059 * C15092) *
                C93847 +
            (C37702 * C93711 + C37701 * C15093 + C37700 * C93818 +
             C37699 * C15092) *
                C93846) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C15092 + C38783 * C93818 + C38784 * C15093 +
             C38785 * C93711) *
                C93846 +
            (C43167 * C15092 + C43168 * C93818 + C59752 * C15093 +
             C59753 * C93711) *
                C93847 +
            (C43169 * C15092 + C43170 * C93818 +
             (C36999 * C5822 + C93582 * C5828) * C15093 +
             (C36999 * C5926 + C93582 * C6098) * C93711) *
                C81840) *
               C93635 * C1980 -
           ((C43170 * C93711 + C43169 * C15093 + C44106 * C93818 +
             C44105 * C15092) *
                C81840 +
            (C43168 * C93711 + C43167 * C15093 + C44104 * C93818 +
             C44103 * C15092) *
                C93847 +
            (C38783 * C93711 + C38782 * C15093 +
             (C36999 * C190 + C93582 * C363) * C93818 +
             (C36999 * C109 + C93582 * C115) * C15092) *
                C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93582 * C93846 +
            (C27650 + C27651) * C93582 * C93847 + C88621 * C81840) *
               C93635 * C1979 -
           ((C15355 * C5821 + C31195 + C31195 + C93711 * C6176 +
             C15354 * C5819 + C31194 + C31194 + C93818 * C6175) *
                C93582 * C81840 +
            (C31203 + C31202) * C93582 * C93847 +
            (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
             C16197 + C16197 + C93818 * C1079) *
                C93582 * C93846) *
               C93635 * C1980) *
              C1981 +
          (((C17786 + C17785) * C93582 * C93846 +
            (C28767 + C28766) * C93582 * C93847 +
            (C15354 * C5820 + C31196 + C31196 + C93818 * C6177 +
             C15355 * C5822 + C31197 + C31197 + C93711 * C6178) *
                C93582 * C81840) *
               C93635 * C1980 -
           ((C27652 + C27653) * C93582 * C81840 + C29971 * C93582 * C93847 +
            (C15392 + C15391) * C93582 * C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C15092 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93818 +
                      (C87691 + C87692 + C87693) * C15093 +
                      (C87939 + C87940 + C87941) * C93711) *
                         C93582 * C93635 * C1979 -
                     ((C87942 + C87943 + C87944) * C93711 +
                      (C87700 + C87701 + C87702) * C15093 +
                      (C87941 + C87940 + C87939) * C93818 +
                      (C87693 + C87692 + C87691) * C15092) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    (((C84276 + C84275 + C84274) * C15092 +
                      (C84579 + C84578 + C84577) * C93818 +
                      (C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                       C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                          C15093 +
                      (C81991 * C891 + C93846 * C1147 + C81992 * C5921 +
                       C93847 * C6265 + C81993 * C5926 + C81840 * C6270) *
                          C93711) *
                         C93582 * C93635 * C1980 -
                     ((C84577 + C84578 + C84579) * C93711 +
                      (C84274 + C84275 + C84276) * C15093 +
                      (C82267 + C82266 + C82265) * C93818 +
                      (C82021 + C82020 + C82019) * C15092) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C81991 +
             (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
             C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
                C93818 +
            (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
               C93635 * C1979 -
           ((C88025 + C88026 + C88027 + C88028 + C88029 + C88030) * C93711 +
            (C88024 + C88023 + C88022 + C88021 + C88020 + C88019) * C93818) *
               C93635 * C1980) *
              C1981 +
          (((C89623 + C89624 + C89625 + C89626 + C89627 + C89628) * C93818 +
            (C38784 * C81991 + C39000 * C93846 + C59752 * C81992 +
             C60057 * C93847 + (C36999 * C5822 + C93582 * C5828) * C81993 +
             (C36999 * C6012 + C93582 * C6350) * C81840) *
                C93711) *
               C93635 * C1980 -
           ((C89628 + C89627 + C89626 + C89625 + C89624 + C89623) * C93711 +
            (C44422 * C81840 + C44105 * C81993 + C44421 * C93847 +
             C44103 * C81992 + (C36999 * C277 + C93582 * C580) * C93846 +
             (C36999 * C109 + C93582 * C115) * C81991) *
                C93818) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C81991 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93846 +
            (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
            C88360 * C81993 + C88850 * C81840) *
               C93582 * C93635 * C1979 -
           ((C15093 * C6011 + C93711 * C6428 + C15092 * C6009 +
             C93818 * C6427) *
                C81840 +
            (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 +
             C93818 * C5923) *
                C81993 +
            (C31607 + C31606) * C93847 + (C30781 + C30780) * C81992 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93846 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C81991) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C17446 + C17445) * C81991 + (C18109 + C18108) * C93846 +
            (C28351 + C28350) * C81992 + (C29171 + C29170) * C93847 +
            (C15092 * C5820 + C93818 * C5925 + C15093 * C5822 +
             C93711 * C5926) *
                C81993 +
            (C15092 * C6010 + C93818 * C6429 + C15093 * C6012 +
             C93711 * C6430) *
                C81840) *
               C93582 * C93635 * C1980 -
           ((C27964 + C27965) * C81840 + (C27322 + C27323) * C81993 +
            C30369 * C93847 + C29567 * C81992 + (C15649 + C15648) * C93846 +
            (C15120 + C15119) * C81991) *
               C93582 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93818 +
                      (C88206 + C88207 + C88208) * C93711) *
                         C93582 * C93635 * C1979 -
                     ((C88209 + C88210 + C88211) * C93711 +
                      (C88208 + C88207 + C88206) * C93818) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    (((C84897 + C84896 + C84895) * C93818 +
                      (C82504 * C809 + C83225 + C83225 + C93846 * C1321 +
                       C82505 * C5817 + C83226 + C83226 + C93847 * C6505 +
                       C82506 * C5822 + C83227 + C83227 + C81840 * C6510) *
                          C93711) *
                         C93582 * C93635 * C1980 -
                     ((C84895 + C84896 + C84897) * C93711 +
                      (C82546 + C82545 + C82544) * C93818) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
             C41997 * C93847 + C41998 * C81840) *
                C93818 +
            (C87513 + C87514 + C87515) * C93711) *
               C2695 -
           ((C90813 + C90814 + C90815) * C93711 +
            (C42000 * C81840 + C41998 * C93847 + C41997 * C93846) * C93818) *
               C2696) *
              C1979 +
          (((C90815 + C90814 + C90813) * C93818 +
            (C39822 * C93846 + C41182 * C93847 +
             (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C81840) *
                C93711) *
               C2696 -
           ((C87516 + C87517 + C87518) * C93711 +
            (C87515 + C87514 + C87513) * C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C36999 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93582) *
                C93846 +
            ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
            C88376 * C81840) *
               C2695 -
           (((C88372 + C88373) * C93582 + (C88374 + C88375) * C36999) * C81840 +
            ((C27324 + C27325) * C93582 + (C27326 + C27327) * C36999) * C93847 +
            ((C27319 + C27318) * C93582 + (C27317 + C27316) * C36999) *
                C93846) *
               C2696) *
              C1979 +
          ((((C30780 + C30781) * C36999 + (C30782 + C30783) * C93582) * C93846 +
            ((C90922 + C90923) * C36999 + (C90924 + C90925) * C93582) * C93847 +
            ((C15092 * C14027 + C93818 * C14143 + C15093 * C44722 +
              C93711 * C44827) *
                 C36999 +
             (C15092 * C14029 + C93818 * C14145 + C15093 * C44723 +
              C93711 * C44828) *
                 C93582) *
                C81840) *
               C2696 -
           (((C90925 + C90924) * C93582 + (C90923 + C90922) * C36999) * C81840 +
            ((C30783 + C30782) * C93582 + (C30781 + C30780) * C36999) * C93847 +
            ((C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                 C93582 +
             (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                 C36999) *
                C93846) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C36999 +
                       (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                        C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                           C93582) *
                          C93818 +
                      ((C87691 + C87692 + C87693) * C36999 +
                       (C87694 + C87695 + C87696) * C93582) *
                          C93711) *
                         C2695 -
                     (((C91036 + C91037 + C91038) * C93582 +
                       (C91039 + C91040 + C91041) * C36999) *
                          C93711 +
                      ((C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                        C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                           C93582 +
                       (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                        C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                           C36999) *
                          C93818) *
                         C2696) *
                        C1979 +
                    ((((C91041 + C91040 + C91039) * C36999 +
                       (C91038 + C91037 + C91036) * C93582) *
                          C93818 +
                      ((C81991 * C5818 + C93846 * C6008 + C81992 * C5821 +
                        C93847 * C6011 + C81993 * C44722 + C81840 * C44951) *
                           C36999 +
                       (C81991 * C5824 + C93846 * C6014 + C81992 * C5827 +
                        C93847 * C6017 + C81993 * C44723 + C81840 * C44952) *
                           C93582) *
                          C93711) *
                         C2696 -
                     (((C87697 + C87698 + C87699) * C93582 +
                       (C87700 + C87701 + C87702) * C36999) *
                          C93711 +
                      ((C87696 + C87695 + C87694) * C93582 +
                       (C87693 + C87692 + C87691) * C36999) *
                          C93818) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C15092 +
             (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
             C37700 * C93711) *
                C93846 +
            (C88525 + C88526 + C88527 + C88528) * C93847 + C88539 * C81840) *
               C2695 -
           ((C88533 + C88534 + C88535 + C88536) * C81840 +
            (C88532 + C88531 + C88530 + C88529) * C93847 +
            (C88528 + C88527 + C88526 + C88525) * C93846) *
               C2696) *
              C1979 +
          (((C91140 + C91141 + C91142 + C91143) * C93846 +
            (C91144 + C91145 + C91146 + C91147) * C93847 +
            (C42294 * C15092 + C42293 * C93818 +
             (C36999 * C44722 + C93582 * C44723) * C15093 +
             (C36999 * C44827 + C93582 * C45069) * C93711) *
                C81840) *
               C2696 -
           ((C91147 + C91146 + C91145 + C91144) * C81840 +
            (C91143 + C91142 + C91141 + C91140) * C93847 +
            (C37702 * C93711 + C37701 * C15093 + C37700 * C93818 +
             C37699 * C15092) *
                C93846) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 +
                       C15355 * C807 + C15358 + C15358 + C93711 * C1079) *
                          C93582 * C93846 +
                      (C27650 + C27651) * C93582 * C93847 + C88621 * C81840) *
                         C2695 -
                     ((C88626 + C88627) * C93582 * C81840 +
                      (C27654 + C27655) * C93582 * C93847 +
                      (C27651 + C27650) * C93582 * C93846) *
                         C2696) *
                        C1979 +
                    (((C31202 + C31203) * C93582 * C93846 +
                      (C91256 + C91257) * C93582 * C93847 +
                      (C15354 * C14027 + C91250 + C91250 + C93818 * C14479 +
                       C15355 * C44722 + C91251 + C91251 + C93711 * C45176) *
                          C93582 * C81840) *
                         C2696 -
                     ((C91257 + C91256) * C93582 * C81840 +
                      (C31203 + C31202) * C93582 * C93847 +
                      (C15355 * C808 + C16196 + C16196 + C93711 * C1080 +
                       C15354 * C807 + C16197 + C16197 + C93818 * C1079) *
                          C93582 * C93846) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C15092 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93818 +
                      (C87691 + C87692 + C87693) * C15093 +
                      (C87939 + C87940 + C87941) * C93711) *
                         C93582 * C2695 -
                     ((C91362 + C91363 + C91364) * C93711 +
                      (C91039 + C91040 + C91041) * C15093 +
                      (C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                       C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                          C93818 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C15092) *
                         C93582 * C2696) *
                        C1979 +
                    (((C91041 + C91040 + C91039) * C15092 +
                      (C91364 + C91363 + C91362) * C93818 +
                      (C81991 * C5818 + C93846 * C6008 + C81992 * C5821 +
                       C93847 * C6011 + C81993 * C44722 + C81840 * C44951) *
                          C15093 +
                      (C81991 * C5922 + C93846 * C6266 + C81992 * C5924 +
                       C93847 * C6268 + C81993 * C44827 + C81840 * C45297) *
                          C93711) *
                         C93582 * C2696 -
                     ((C87942 + C87943 + C87944) * C93711 +
                      (C87700 + C87701 + C87702) * C15093 +
                      (C87941 + C87940 + C87939) * C93818 +
                      (C87693 + C87692 + C87691) * C15092) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eezx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C81991 +
             (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
             C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
                C93818 +
            (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
               C2695 -
           ((C91463 + C91464 + C91465 + C91466 + C91467 + C91468) * C93711 +
            (C42580 * C81840 + C42296 * C81993 + C42578 * C93847 +
             C42291 * C81992 + C42577 * C93846 + C42289 * C81991) *
                C93818) *
               C2696) *
              C1979 +
          (((C91468 + C91467 + C91466 + C91465 + C91464 + C91463) * C93818 +
            (C40057 * C81991 + C40278 * C93846 + C41454 * C81992 +
             C41716 * C93847 + (C36999 * C44722 + C93582 * C44723) * C81993 +
             (C36999 * C44951 + C93582 * C45405) * C81840) *
                C93711) *
               C2696 -
           ((C88025 + C88026 + C88027 + C88028 + C88029 + C88030) * C93711 +
            (C88024 + C88023 + C88022 + C88021 + C88020 + C88019) * C93818) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C81991 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93846 +
            (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
            C88360 * C81993 + C88850 * C81840) *
               C93582 * C2695 -
           ((C88855 + C88856) * C81840 + (C88374 + C88375) * C81993 +
            (C27966 + C27967) * C93847 + (C27326 + C27327) * C81992 +
            (C27963 + C27962) * C93846 + (C27317 + C27316) * C81991) *
               C93582 * C2696) *
              C1979 +
          (((C30780 + C30781) * C81991 + (C31606 + C31607) * C93846 +
            (C90922 + C90923) * C81992 + (C91571 + C91572) * C93847 +
            (C15092 * C14027 + C93818 * C14143 + C15093 * C44722 +
             C93711 * C44827) *
                C81993 +
            (C15092 * C14265 + C93818 * C14801 + C15093 * C44951 +
             C93711 * C45510) *
                C81840) *
               C93582 * C2696 -
           ((C91572 + C91571) * C81840 + (C90923 + C90922) * C81993 +
            (C31607 + C31606) * C93847 + (C30781 + C30780) * C81992 +
            (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
                C93846 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C81991) *
               C93582 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93818 +
                      (C88206 + C88207 + C88208) * C93711) *
                         C93582 * C2695 -
                     ((C91686 + C91687 + C91688) * C93711 +
                      (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                       C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                       C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                          C93818) *
                         C93582 * C2696) *
                        C1979 +
                    (((C91688 + C91687 + C91686) * C93818 +
                      (C82504 * C5818 + C91677 + C91677 + C93846 * C6506 +
                       C82505 * C5821 + C91678 + C91678 + C93847 * C6508 +
                       C82506 * C44722 + C91679 + C91679 + C81840 * C45621) *
                          C93711) *
                         C93582 * C2696 -
                     ((C88209 + C88210 + C88211) * C93711 +
                      (C88208 + C88207 + C88206) * C93818) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
            C41997 * C93847 + C41998 * C81840) *
               C93818 +
           (C87513 + C87514 + C87515) * C93711) *
              C93635 * C800 -
          ((C87516 + C87517 + C87518) * C93711 +
           (C87515 + C87514 + C87513) * C93818) *
              C93635 * C801 +
          ((C87518 + C87517 + C87516) * C93818 +
           (C37506 * C93846 + C39821 * C93847 +
            (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C81840) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
            C41997 * C93847 + C41998 * C81840) *
               C93818 +
           (C37504 * C93846 + C39823 * C93847 + C41181 * C81840) * C93711) *
              C93635 * C93621 * C97 -
          ((C42862 * C81840 + C42861 * C93847 + C38560 * C93846) * C93711 +
           (C43784 * C81840 + C43783 * C93847 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93846) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93846 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93847 +
            (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C81840) *
               C93818 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93846 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93847 +
            (C36998 * C12033 + C40502 + C40502 + C93582 * C12035) * C81840) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
            C41997 * C93847 + C41998 * C81840) *
               C93818 +
           (C87513 + C87514 + C87515) * C93711) *
              C1382 -
          ((C41999 * C81840 + C41181 * C93847 + C39823 * C93846) * C93711 +
           (C42000 * C81840 + C41998 * C93847 + C41997 * C93846) * C93818) *
              C1383 +
          ((C41998 * C93846 + C42000 * C93847 + C73250 * C81840) * C93818 +
           (C41181 * C93846 + C41999 * C93847 +
            (C36998 * C41973 + C41988 + C41988 + C93582 * C41975) * C81840) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C36999 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93582) *
               C93846 +
           ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
           ((C27327 + C27326) * C36999 + (C27325 + C27324) * C93582) * C81840) *
              C93635 * C800 -
          (((C15093 * C5827 + C93711 * C5930 + C15092 * C5825 +
             C93818 * C5929) *
                C93582 +
            (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 +
             C93818 * C5923) *
                C36999) *
               C81840 +
           ((C30783 + C30782) * C93582 + (C30781 + C30780) * C36999) * C93847 +
           ((C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93582 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C36999) *
               C93846) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C36999 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C93582) *
               C93846 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C36999 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C93582) *
               C93847 +
           ((C15092 * C5821 + C93818 * C5924 + C15093 * C38050 +
             C93711 * C38111) *
                C36999 +
            (C15092 * C5827 + C93818 * C5930 + C15093 * C38051 +
             C93711 * C38112) *
                C93582) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C36999 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93582) *
               C93846 +
           ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
           ((C27327 + C27326) * C36999 + (C27325 + C27324) * C93582) * C81840) *
              C93635 * C93621 * C97 -
          (((C27320 + C27321) * C93582 + (C27322 + C27323) * C36999) * C81840 +
           (C29566 * C93582 + C29567 * C36999) * C93847 +
           ((C15122 + C15121) * C93582 + (C15120 + C15119) * C36999) * C93846) *
              C93635 * C93621 * C98 +
          ((C15131 * C36999 + C15132 * C93582) * C93846 +
           ((C18433 + C18432) * C36999 + (C18431 + C18430) * C93582) * C93847 +
           ((C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
             C93711 * C12136) *
                C36999 +
            (C15092 * C1399 + C93818 * C1481 + C15093 * C12034 +
             C93711 * C12137) *
                C93582) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C36999 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93582) *
               C93846 +
           ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
           C88376 * C81840) *
              C1382 -
          (((C88372 + C88373) * C93582 + (C88374 + C88375) * C36999) * C81840 +
           ((C27324 + C27325) * C93582 + (C27326 + C27327) * C36999) * C93847 +
           ((C27319 + C27318) * C93582 + (C27317 + C27316) * C36999) * C93846) *
              C1383 +
          (C88376 * C93846 +
           ((C88375 + C88374) * C36999 + (C88373 + C88372) * C93582) * C93847 +
           ((C15092 * C11104 + C93818 * C11225 + C15093 * C41973 +
             C93711 * C42074) *
                C36999 +
            (C15092 * C11108 + C93818 * C11229 + C15093 * C41974 +
             C93711 * C42075) *
                C93582) *
               C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C36999 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93582) *
                         C93818 +
                     ((C87691 + C87692 + C87693) * C36999 +
                      (C87694 + C87695 + C87696) * C93582) *
                         C93711) *
                        C93635 * C800 -
                    (((C87697 + C87698 + C87699) * C93582 +
                      (C87700 + C87701 + C87702) * C36999) *
                         C93711 +
                     ((C87696 + C87695 + C87694) * C93582 +
                      (C87693 + C87692 + C87691) * C36999) *
                         C93818) *
                        C93635 * C801 +
                    (((C87702 + C87701 + C87700) * C36999 +
                      (C87699 + C87698 + C87697) * C93582) *
                         C93818 +
                     ((C81991 * C4917 + C93846 * C5121 + C81992 * C8615 +
                       C93847 * C8843 + C81993 * C38050 + C81840 * C38163) *
                          C36999 +
                      (C81991 * C4921 + C93846 * C5125 + C81992 * C8617 +
                       C93847 * C8845 + C81993 * C38051 + C81840 * C38164) *
                          C93582) *
                         C93711) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C36999 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93582) *
                         C93818 +
                     ((C81991 * C807 + C93846 * C955 + C81992 * C3409 +
                       C93847 * C3565 + C81993 * C5819 + C81840 * C6009) *
                          C36999 +
                      (C81991 * C815 + C93846 * C963 + C81992 * C3413 +
                       C93847 * C3569 + C81993 * C5825 + C81840 * C6015) *
                          C93582) *
                         C93711) *
                        C93635 * C93621 * C97 -
                    (((C84271 + C84272 + C84273) * C93582 +
                      (C84274 + C84275 + C84276) * C36999) *
                         C93711 +
                     ((C82024 + C82023 + C82022) * C93582 +
                      (C82021 + C82020 + C82019) * C36999) *
                         C93818) *
                        C93635 * C93621 * C98 +
                    (((C82030 + C82029 + C82028) * C36999 +
                      (C82027 + C82026 + C82025) * C93582) *
                         C93818 +
                     ((C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                       C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                          C36999 +
                      (C81991 * C813 + C93846 * C961 + C81992 * C3415 +
                       C93847 * C3571 + C81993 * C12034 + C81840 * C12249) *
                          C93582) *
                         C93711) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C36999 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93582) *
                         C93818 +
                     ((C87691 + C87692 + C87693) * C36999 +
                      (C87694 + C87695 + C87696) * C93582) *
                         C93711) *
                        C1382 -
                    (((C81993 * C14029 + C81840 * C14267 + C81992 * C5825 +
                       C93847 * C6015 + C81991 * C3413 + C93846 * C3569) *
                          C93582 +
                      (C81993 * C14027 + C81840 * C14265 + C81992 * C5819 +
                       C93847 * C6009 + C81991 * C3409 + C93846 * C3565) *
                          C36999) *
                         C93711 +
                     ((C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                       C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                          C93582 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C36999) *
                         C93818) *
                        C1383 +
                    (((C81991 * C1389 + C93846 * C1537 + C81992 * C11103 +
                       C93847 * C11345 + C81993 * C11104 + C81840 * C11346) *
                          C36999 +
                      (C81991 * C1397 + C93846 * C1545 + C81992 * C11107 +
                       C93847 * C11349 + C81993 * C11108 + C81840 * C11350) *
                          C93582) *
                         C93818 +
                     ((C81991 * C5819 + C93846 * C6009 + C81992 * C14027 +
                       C93847 * C14265 + C81993 * C41973 + C81840 * C42191) *
                          C36999 +
                      (C81991 * C5825 + C93846 * C6015 + C81992 * C14029 +
                       C93847 * C14267 + C81993 * C41974 + C81840 * C42192) *
                          C93582) *
                         C93711) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C15092 +
            (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
            C37700 * C93711) *
               C93846 +
           (C42289 * C15092 + C42290 * C93818 + C40059 * C15093 +
            C40058 * C93711) *
               C93847 +
           (C42291 * C15092 + C42292 * C93818 + C41451 * C15093 +
            C41452 * C93711) *
               C81840) *
              C93635 * C800 -
          ((C41453 * C93711 + C41454 * C15093 + C41452 * C93818 +
            C41451 * C15092) *
               C81840 +
           (C40056 * C93711 + C40057 * C15093 + C40058 * C93818 +
            C40059 * C15092) *
               C93847 +
           (C37702 * C93711 + C37701 * C15093 + C37700 * C93818 +
            C37699 * C15092) *
               C93846) *
              C93635 * C801 +
          ((C37701 * C15092 + C37702 * C93818 + C37703 * C15093 +
            C37704 * C93711) *
               C93846 +
           (C40057 * C15092 + C40056 * C93818 + C40055 * C15093 +
            C40054 * C93711) *
               C93847 +
           (C41454 * C15092 + C41453 * C93818 +
            (C36999 * C38050 + C93582 * C38051) * C15093 +
            (C36999 * C38111 + C93582 * C38215) * C93711) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C15092 +
            (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
            C37700 * C93711) *
               C93846 +
           (C42289 * C15092 + C42290 * C93818 + C40059 * C15093 +
            C40058 * C93711) *
               C93847 +
           (C42291 * C15092 + C42292 * C93818 + C41451 * C15093 +
            C41452 * C93711) *
               C81840) *
              C93635 * C93621 * C97 -
          ((C43170 * C93711 + C43169 * C15093 + C44106 * C93818 +
            C44105 * C15092) *
               C81840 +
           (C43168 * C93711 + C43167 * C15093 + C44104 * C93818 +
            C44103 * C15092) *
               C93847 +
           (C38783 * C93711 + C38782 * C15093 +
            (C36999 * C190 + C93582 * C363) * C93818 +
            (C36999 * C109 + C93582 * C115) * C15092) *
               C93846) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C15092 +
            (C36999 * C191 + C93582 * C364) * C93818 +
            (C36999 * C805 + C93582 * C813) * C15093 +
            (C36999 * C887 + C93582 * C1019) * C93711) *
               C93846 +
           ((C36999 * C1386 + C93582 * C1394) * C15092 +
            (C36999 * C1468 + C93582 * C1600) * C93818 +
            (C36999 * C3411 + C93582 * C3415) * C15093 +
            (C36999 * C3493 + C93582 * C3641) * C93711) *
               C93847 +
           ((C36999 * C1391 + C93582 * C1399) * C15092 +
            (C36999 * C1473 + C93582 * C1605) * C93818 +
            (C36999 * C12033 + C93582 * C12034) * C15093 +
            (C36999 * C12136 + C93582 * C12366) * C93711) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C15092 +
            (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
            C37700 * C93711) *
               C93846 +
           (C88525 + C88526 + C88527 + C88528) * C93847 + C88539 * C81840) *
              C1382 -
          ((C88533 + C88534 + C88535 + C88536) * C81840 +
           (C88532 + C88531 + C88530 + C88529) * C93847 +
           (C88528 + C88527 + C88526 + C88525) * C93846) *
              C1383 +
          (C88539 * C93846 + (C88536 + C88535 + C88534 + C88533) * C93847 +
           (C73435 * C15092 + C73434 * C93818 +
            (C36999 * C41973 + C93582 * C41974) * C15093 +
            (C36999 * C42074 + C93582 * C42267) * C93711) *
               C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
            C15358 + C15358 + C93711 * C1079) *
               C93582 * C93846 +
           (C27650 + C27651) * C93582 * C93847 +
           (C27655 + C27654) * C93582 * C81840) *
              C93635 * C800 -
          ((C15355 * C5821 + C31195 + C31195 + C93711 * C6176 + C15354 * C5819 +
            C31194 + C31194 + C93818 * C6175) *
               C93582 * C81840 +
           (C31203 + C31202) * C93582 * C93847 +
           (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
            C16197 + C16197 + C93818 * C1079) *
               C93582 * C93846) *
              C93635 * C801 +
          ((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
            C16199 + C16199 + C93711 * C5358) *
               C93582 * C93846 +
           (C15354 * C5818 + C26648 + C26648 + C93818 * C6174 + C15355 * C8615 +
            C26649 + C26649 + C93711 * C9089) *
               C93582 * C93847 +
           (C15354 * C5821 + C87851 + C87851 + C93818 * C6176 +
            C15355 * C38050 + C87852 + C87852 + C93711 * C38266) *
               C93582 * C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
            C15358 + C15358 + C93711 * C1079) *
               C93582 * C93846 +
           (C27650 + C27651) * C93582 * C93847 +
           (C27655 + C27654) * C93582 * C81840) *
              C93635 * C93621 * C97 -
          ((C27652 + C27653) * C93582 * C81840 + C29971 * C93582 * C93847 +
           (C15392 + C15391) * C93582 * C93846) *
              C93635 * C93621 * C98 +
          (C15397 * C93582 * C93846 + (C18757 + C18756) * C93582 * C93847 +
           (C15354 * C1391 + C16910 + C16910 + C93818 * C1663 +
            C15355 * C12033 + C16911 + C16911 + C93711 * C12465) *
               C93582 * C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
            C15358 + C15358 + C93711 * C1079) *
               C93582 * C93846 +
           (C27650 + C27651) * C93582 * C93847 + C88621 * C81840) *
              C1382 -
          ((C88626 + C88627) * C93582 * C81840 +
           (C27654 + C27655) * C93582 * C93847 +
           (C27651 + C27650) * C93582 * C93846) *
              C1383 +
          (C88621 * C93846 + (C88627 + C88626) * C93582 * C93847 +
           (C15354 * C11104 + C88619 + C88619 + C93818 * C11547 +
            C15355 * C41973 + C88620 + C88620 + C93711 * C42381) *
               C93582 * C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C15092 +
                     (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                      C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                         C93818 +
                     (C87691 + C87692 + C87693) * C15093 +
                     (C87939 + C87940 + C87941) * C93711) *
                        C93582 * C93635 * C800 -
                    ((C87942 + C87943 + C87944) * C93711 +
                     (C87700 + C87701 + C87702) * C15093 +
                     (C87941 + C87940 + C87939) * C93818 +
                     (C87693 + C87692 + C87691) * C15092) *
                        C93582 * C93635 * C801 +
                    ((C87702 + C87701 + C87700) * C15092 +
                     (C87944 + C87943 + C87942) * C93818 +
                     (C81991 * C4917 + C93846 * C5121 + C81992 * C8615 +
                      C93847 * C8843 + C81993 * C38050 + C81840 * C38163) *
                         C15093 +
                     (C81991 * C5039 + C93846 * C5448 + C81992 * C8741 +
                      C93847 * C9195 + C81993 * C38111 + C81840 * C38325) *
                         C93711) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C15092 +
                     (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                      C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                         C93818 +
                     (C81991 * C807 + C93846 * C955 + C81992 * C3409 +
                      C93847 * C3565 + C81993 * C5819 + C81840 * C6009) *
                         C15093 +
                     (C81991 * C889 + C93846 * C1145 + C81992 * C3491 +
                      C93847 * C3783 + C81993 * C5923 + C81840 * C6267) *
                         C93711) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C84577 + C84578 + C84579) * C93711 +
                     (C84274 + C84275 + C84276) * C15093 +
                     (C82267 + C82266 + C82265) * C93818 +
                     (C82021 + C82020 + C82019) * C15092) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C82030 + C82029 + C82028) * C15092 +
                     (C82270 + C82269 + C82268) * C93818 +
                     (C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                      C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                         C15093 +
                     (C81991 * C887 + C93846 * C1143 + C81992 * C3493 +
                      C93847 * C3785 + C81993 * C12136 + C81840 * C12575) *
                         C93711) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C15092 +
                     (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                      C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                         C93818 +
                     (C87691 + C87692 + C87693) * C15093 +
                     (C87939 + C87940 + C87941) * C93711) *
                        C93582 * C1382 -
                    ((C81993 * C14143 + C81840 * C14595 + C81992 * C5923 +
                      C93847 * C6267 + C81991 * C3491 + C93846 * C3783) *
                         C93711 +
                     (C81993 * C14027 + C81840 * C14265 + C81992 * C5819 +
                      C93847 * C6009 + C81991 * C3409 + C93846 * C3565) *
                         C15093 +
                     (C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                      C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                         C93818 +
                     (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                      C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                         C15092) *
                        C93582 * C1383 +
                    ((C81991 * C1389 + C93846 * C1537 + C81992 * C11103 +
                      C93847 * C11345 + C81993 * C11104 + C81840 * C11346) *
                         C15092 +
                     (C81991 * C1471 + C93846 * C1727 + C81992 * C11224 +
                      C93847 * C11655 + C81993 * C11225 + C81840 * C11656) *
                         C93818 +
                     (C81991 * C5819 + C93846 * C6009 + C81992 * C14027 +
                      C93847 * C14265 + C81993 * C41973 + C81840 * C42191) *
                         C15093 +
                     (C81991 * C5923 + C93846 * C6267 + C81992 * C14143 +
                      C93847 * C14595 + C81993 * C42074 + C81840 * C42492) *
                         C93711) *
                        C93582 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C81991 +
            (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
            C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
               C93818 +
           (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
              C93635 * C800 -
          ((C88025 + C88026 + C88027 + C88028 + C88029 + C88030) * C93711 +
           (C88024 + C88023 + C88022 + C88021 + C88020 + C88019) * C93818) *
              C93635 * C801 +
          ((C88030 + C88029 + C88028 + C88027 + C88026 + C88025) * C93818 +
           (C37703 * C81991 + C37885 * C93846 + C40055 * C81992 +
            C40277 * C93847 + (C36999 * C38050 + C93582 * C38051) * C81993 +
            (C36999 * C38163 + C93582 * C38376) * C81840) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C81991 +
            (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
            C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
               C93818 +
           (C37699 * C81991 + C37883 * C93846 + C40059 * C81992 +
            C40279 * C93847 + C41451 * C81993 + C41715 * C81840) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C43476 * C81840 + C43169 * C81993 + C43475 * C93847 +
            C43167 * C81992 + C38999 * C93846 + C38782 * C81991) *
               C93711 +
           (C44422 * C81840 + C44105 * C81993 + C44421 * C93847 +
            C44103 * C81992 + (C36999 * C277 + C93582 * C580) * C93846 +
            (C36999 * C109 + C93582 * C115) * C81991) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C81991 +
            (C36999 * C278 + C93582 * C581) * C93846 +
            (C36999 * C1386 + C93582 * C1394) * C81992 +
            (C36999 * C1534 + C93582 * C1782) * C93847 +
            (C36999 * C1391 + C93582 * C1399) * C81993 +
            (C36999 * C1539 + C93582 * C1787) * C81840) *
               C93818 +
           ((C36999 * C805 + C93582 * C813) * C81991 +
            (C36999 * C953 + C93582 * C1201) * C93846 +
            (C36999 * C3411 + C93582 * C3415) * C81992 +
            (C36999 * C3567 + C93582 * C3855) * C93847 +
            (C36999 * C12033 + C93582 * C12034) * C81993 +
            (C36999 * C12248 + C93582 * C12683) * C81840) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C81991 +
            (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
            C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
               C93818 +
           (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
              C1382 -
          ((C42579 * C81840 + C42294 * C81993 + C41715 * C93847 +
            C41451 * C81992 + C40279 * C93846 + C40059 * C81991) *
               C93711 +
           (C42580 * C81840 + C42296 * C81993 + C42578 * C93847 +
            C42291 * C81992 + C42577 * C93846 + C42289 * C81991) *
               C93818) *
              C1383 +
          ((C42291 * C81991 + C42578 * C93846 + C42296 * C81992 +
            C42580 * C93847 + C73435 * C81993 + C73603 * C81840) *
               C93818 +
           (C41451 * C81991 + C41715 * C93846 + C42294 * C81992 +
            C42579 * C93847 + (C36999 * C41973 + C93582 * C41974) * C81993 +
            (C36999 * C42191 + C93582 * C42567) * C81840) *
               C93711) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C81991 +
           (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
               C93846 +
           (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
           (C27327 + C27326) * C81993 + (C27967 + C27966) * C81840) *
              C93582 * C93635 * C800 -
          ((C15093 * C6011 + C93711 * C6428 + C15092 * C6009 + C93818 * C6427) *
               C81840 +
           (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 + C93818 * C5923) *
               C81993 +
           (C31607 + C31606) * C93847 + (C30781 + C30780) * C81992 +
           (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
               C93846 +
           (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
               C81991) *
              C93582 * C93635 * C801 +
          ((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
               C81991 +
           (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
               C93846 +
           (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 + C93711 * C8741) *
               C81992 +
           (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 + C93711 * C9413) *
               C93847 +
           (C15092 * C5821 + C93818 * C5924 + C15093 * C38050 +
            C93711 * C38111) *
               C81993 +
           (C15092 * C6011 + C93818 * C6428 + C15093 * C38163 +
            C93711 * C38427) *
               C81840) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C81991 +
           (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
               C93846 +
           (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
           (C27327 + C27326) * C81993 + (C27967 + C27966) * C81840) *
              C93582 * C93635 * C93621 * C97 -
          ((C27964 + C27965) * C81840 + (C27322 + C27323) * C81993 +
           C30369 * C93847 + C29567 * C81992 + (C15649 + C15648) * C93846 +
           (C15120 + C15119) * C81991) *
              C93582 * C93635 * C93621 * C98 +
          (C15131 * C81991 + C15654 * C93846 + (C18433 + C18432) * C81992 +
           (C19074 + C19073) * C93847 +
           (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
            C93711 * C12136) *
               C81993 +
           (C15092 * C1539 + C93818 * C1845 + C15093 * C12248 +
            C93711 * C12782) *
               C81840) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C81991 +
           (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
               C93846 +
           (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
           C88360 * C81993 + C88850 * C81840) *
              C93582 * C1382 -
          ((C88855 + C88856) * C81840 + (C88374 + C88375) * C81993 +
           (C27966 + C27967) * C93847 + (C27326 + C27327) * C81992 +
           (C27963 + C27962) * C93846 + (C27317 + C27316) * C81991) *
              C93582 * C1383 +
          (C88360 * C81991 + C88850 * C93846 + (C88375 + C88374) * C81992 +
           (C88856 + C88855) * C93847 +
           (C15092 * C11104 + C93818 * C11225 + C15093 * C41973 +
            C93711 * C42074) *
               C81993 +
           (C15092 * C11346 + C93818 * C11831 + C15093 * C42191 +
            C93711 * C42654) *
               C81840) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93818 +
                     (C88206 + C88207 + C88208) * C93711) *
                        C93582 * C93635 * C800 -
                    ((C88209 + C88210 + C88211) * C93711 +
                     (C88208 + C88207 + C88206) * C93818) *
                        C93582 * C93635 * C801 +
                    ((C88211 + C88210 + C88209) * C93818 +
                     (C82504 * C4917 + C88191 + C88191 + C93846 * C5716 +
                      C82505 * C8615 + C88192 + C88192 + C93847 * C9513 +
                      C82506 * C38050 + C88193 + C88193 + C81840 * C38478) *
                         C93711) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93818 +
                     (C82504 * C807 + C83221 + C83221 + C93846 * C1319 +
                      C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                      C82506 * C5819 + C83219 + C83219 + C81840 * C6507) *
                         C93711) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C84895 + C84896 + C84897) * C93711 +
                     (C82546 + C82545 + C82544) * C93818) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C82549 + C82548 + C82547) * C93818 +
                     (C82504 * C805 + C84886 + C84886 + C93846 * C1317 +
                      C82505 * C3411 + C84887 + C84887 + C93847 * C3995 +
                      C82506 * C12033 + C84888 + C84888 + C81840 * C12893) *
                         C93711) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93818 +
                     (C88206 + C88207 + C88208) * C93711) *
                        C93582 * C1382 -
                    ((C82506 * C14027 + C86769 + C86769 + C81840 * C14907 +
                      C82505 * C5819 + C86768 + C86768 + C93847 * C6507 +
                      C82504 * C3409 + C86767 + C86767 + C93846 * C3993) *
                         C93711 +
                     (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                      C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                      C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                         C93818) *
                        C93582 * C1383 +
                    ((C82504 * C1389 + C83959 + C83959 + C93846 * C1901 +
                      C82505 * C11103 + C83960 + C83960 + C93847 * C11920 +
                      C82506 * C11104 + C83961 + C83961 + C81840 * C11921) *
                         C93818 +
                     (C82504 * C5819 + C88931 + C88931 + C93846 * C6507 +
                      C82505 * C14027 + C88932 + C88932 + C93847 * C14907 +
                      C82506 * C41973 + C88933 + C88933 + C81840 * C42748) *
                         C93711) *
                        C93582 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
             C41997 * C93847 + C41998 * C81840) *
                C93818 +
            (C87513 + C87514 + C87515) * C93711) *
               C2695 -
           ((C41999 * C81840 + C41181 * C93847 + C39823 * C93846) * C93711 +
            (C42000 * C81840 + C41998 * C93847 + C41997 * C93846) * C93818) *
               C2696) *
              C93621 * C1981 +
          (((C43783 * C93846 + C43784 * C93847 + C74386 * C81840) * C93818 +
            (C42861 * C93846 + C42862 * C93847 +
             (C36998 * C14028 + C43778 + C43778 + C93582 * C14032) * C81840) *
                C93711) *
               C2696 -
           ((C89034 + C89033 + C89032) * C93711 +
            (C43784 * C81840 + C43783 * C93847 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93846) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                 C36999 +
             (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                 C93582) *
                C93846 +
            ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
            C88376 * C81840) *
               C2695 -
           (((C88372 + C88373) * C93582 + (C88374 + C88375) * C36999) * C81840 +
            ((C27324 + C27325) * C93582 + (C27326 + C27327) * C36999) * C93847 +
            ((C27319 + C27318) * C93582 + (C27317 + C27316) * C36999) *
                C93846) *
               C2696) *
              C93621 * C1981 +
          (((C29564 * C36999 + C29565 * C93582) * C93846 +
            ((C27323 + C27322) * C36999 + (C27321 + C27320) * C93582) * C93847 +
            ((C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
              C93711 * C14144) *
                 C36999 +
             (C15092 * C11106 + C93818 * C11227 + C15093 * C14030 +
              C93711 * C14146) *
                 C93582) *
                C81840) *
               C2696 -
           (((C27320 + C27321) * C93582 + (C27322 + C27323) * C36999) * C81840 +
            (C29566 * C93582 + C29567 * C36999) * C93847 +
            ((C15122 + C15121) * C93582 + (C15120 + C15119) * C36999) *
                C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C36999 +
                       (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                        C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                           C93582) *
                          C93818 +
                      ((C87691 + C87692 + C87693) * C36999 +
                       (C87694 + C87695 + C87696) * C93582) *
                          C93711) *
                         C2695 -
                     (((C81993 * C14029 + C81840 * C14267 + C81992 * C5825 +
                        C93847 * C6015 + C81991 * C3413 + C93846 * C3569) *
                           C93582 +
                       (C81993 * C14027 + C81840 * C14265 + C81992 * C5819 +
                        C93847 * C6009 + C81991 * C3409 + C93846 * C3565) *
                           C36999) *
                          C93711 +
                      ((C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                        C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                           C93582 +
                       (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                        C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                           C36999) *
                          C93818) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C85229 + C85228 + C85227) * C36999 +
                       (C85226 + C85225 + C85224) * C93582) *
                          C93818 +
                      ((C81991 * C3410 + C93846 * C3566 + C81992 * C5820 +
                        C93847 * C6010 + C81993 * C14028 + C81840 * C14266) *
                           C36999 +
                       (C81991 * C3414 + C93846 * C3570 + C81992 * C5826 +
                        C93847 * C6016 + C81993 * C14030 + C81840 * C14268) *
                           C93582) *
                          C93711) *
                         C2696 -
                     (((C84271 + C84272 + C84273) * C93582 +
                       (C84274 + C84275 + C84276) * C36999) *
                          C93711 +
                      ((C82024 + C82023 + C82022) * C93582 +
                       (C82021 + C82020 + C82019) * C36999) *
                          C93818) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C15092 +
             (C36999 * C189 + C93582 * C362) * C93818 + C37699 * C15093 +
             C37700 * C93711) *
                C93846 +
            (C88525 + C88526 + C88527 + C88528) * C93847 + C88539 * C81840) *
               C2695 -
           ((C88533 + C88534 + C88535 + C88536) * C81840 +
            (C88532 + C88531 + C88530 + C88529) * C93847 +
            (C88528 + C88527 + C88526 + C88525) * C93846) *
               C2696) *
              C93621 * C1981 +
          (((C90217 + C90218 + C90219 + C90220) * C93846 +
            (C90221 + C90222 + C90223 + C90224) * C93847 +
            (C74599 * C15092 + C74600 * C93818 +
             (C36999 * C14028 + C93582 * C14030) * C15093 +
             (C36999 * C14144 + C93582 * C14368) * C93711) *
                C81840) *
               C2696 -
           ((C90224 + C90223 + C90222 + C90221) * C81840 +
            (C90220 + C90219 + C90218 + C90217) * C93847 +
            (C38783 * C93711 + C38782 * C15093 +
             (C36999 * C190 + C93582 * C363) * C93818 +
             (C36999 * C109 + C93582 * C115) * C15092) *
                C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
             C15358 + C15358 + C93711 * C1079) *
                C93582 * C93846 +
            (C27650 + C27651) * C93582 * C93847 + C88621 * C81840) *
               C2695 -
           ((C88626 + C88627) * C93582 * C81840 +
            (C27654 + C27655) * C93582 * C93847 +
            (C27651 + C27650) * C93582 * C93846) *
               C2696) *
              C93621 * C1981 +
          ((C29970 * C93582 * C93846 + (C27653 + C27652) * C93582 * C93847 +
            (C15354 * C11102 + C27636 + C27636 + C93818 * C11545 +
             C15355 * C14028 + C27637 + C27637 + C93711 * C14480) *
                C93582 * C81840) *
               C2696 -
           ((C27652 + C27653) * C93582 * C81840 + C29971 * C93582 * C93847 +
            (C15392 + C15391) * C93582 * C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C15092 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93818 +
                      (C87691 + C87692 + C87693) * C15093 +
                      (C87939 + C87940 + C87941) * C93711) *
                         C93582 * C2695 -
                     ((C81993 * C14143 + C81840 * C14595 + C81992 * C5923 +
                       C93847 * C6267 + C81991 * C3491 + C93846 * C3783) *
                          C93711 +
                      (C81993 * C14027 + C81840 * C14265 + C81992 * C5819 +
                       C93847 * C6009 + C81991 * C3409 + C93846 * C3565) *
                          C15093 +
                      (C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                       C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                          C93818 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C15092) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C85229 + C85228 + C85227) * C15092 +
                      (C85548 + C85547 + C85546) * C93818 +
                      (C81991 * C3410 + C93846 * C3566 + C81992 * C5820 +
                       C93847 * C6010 + C81993 * C14028 + C81840 * C14266) *
                          C15093 +
                      (C81991 * C3492 + C93846 * C3784 + C81992 * C5925 +
                       C93847 * C6269 + C81993 * C14144 + C81840 * C14596) *
                          C93711) *
                         C93582 * C2696 -
                     ((C84577 + C84578 + C84579) * C93711 +
                      (C84274 + C84275 + C84276) * C15093 +
                      (C82267 + C82266 + C82265) * C93818 +
                      (C82021 + C82020 + C82019) * C15092) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C81991 +
             (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
             C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
                C93818 +
            (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
               C2695 -
           ((C42579 * C81840 + C42294 * C81993 + C41715 * C93847 +
             C41451 * C81992 + C40279 * C93846 + C40059 * C81991) *
                C93711 +
            (C42580 * C81840 + C42296 * C81993 + C42578 * C93847 +
             C42291 * C81992 + C42577 * C93846 + C42289 * C81991) *
                C93818) *
               C2696) *
              C93621 * C1981 +
          (((C44103 * C81991 + C44421 * C93846 + C44105 * C81992 +
             C44422 * C93847 + C74599 * C81993 + C74806 * C81840) *
                C93818 +
            (C43167 * C81991 + C43475 * C93846 + C43169 * C81992 +
             C43476 * C93847 + (C36999 * C14028 + C93582 * C14030) * C81993 +
             (C36999 * C14266 + C93582 * C14696) * C81840) *
                C93711) *
               C2696 -
           ((C89628 + C89627 + C89626 + C89625 + C89624 + C89623) * C93711 +
            (C44422 * C81840 + C44105 * C81993 + C44421 * C93847 +
             C44103 * C81992 + (C36999 * C277 + C93582 * C580) * C93846 +
             (C36999 * C109 + C93582 * C115) * C81991) *
                C93818) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C81991 +
            (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
                C93846 +
            (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
            C88360 * C81993 + C88850 * C81840) *
               C93582 * C2695 -
           ((C88855 + C88856) * C81840 + (C88374 + C88375) * C81993 +
            (C27966 + C27967) * C93847 + (C27326 + C27327) * C81992 +
            (C27963 + C27962) * C93846 + (C27317 + C27316) * C81991) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C29564 * C81991 + C30368 * C93846 + (C27323 + C27322) * C81992 +
            (C27965 + C27964) * C93847 +
            (C15092 * C11102 + C93818 * C11223 + C15093 * C14028 +
             C93711 * C14144) *
                C81993 +
            (C15092 * C11344 + C93818 * C11829 + C15093 * C14266 +
             C93711 * C14802) *
                C81840) *
               C93582 * C2696 -
           ((C27964 + C27965) * C81840 + (C27322 + C27323) * C81993 +
            C30369 * C93847 + C29567 * C81992 + (C15649 + C15648) * C93846 +
            (C15120 + C15119) * C81991) *
               C93582 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93818 +
                      (C88206 + C88207 + C88208) * C93711) *
                         C93582 * C2695 -
                     ((C82506 * C14027 + C86769 + C86769 + C81840 * C14907 +
                       C82505 * C5819 + C86768 + C86768 + C93847 * C6507 +
                       C82504 * C3409 + C86767 + C86767 + C93846 * C3993) *
                          C93711 +
                      (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                       C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                       C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                          C93818) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C85872 + C85871 + C85870) * C93818 +
                      (C82504 * C3410 + C86770 + C86770 + C93846 * C3994 +
                       C82505 * C5820 + C86771 + C86771 + C93847 * C6509 +
                       C82506 * C14028 + C86772 + C86772 + C81840 * C14908) *
                          C93711) *
                         C93582 * C2696 -
                     ((C84895 + C84896 + C84897) * C93711 +
                      (C82546 + C82545 + C82544) * C93818) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
            C41997 * C93847 + C41998 * C81840) *
               C93818 +
           (C37504 * C93846 + C39823 * C93847 + C41181 * C81840) * C93711) *
              C93635 * C93621 * C97 -
          ((C42862 * C81840 + C42861 * C93847 + C38560 * C93846) * C93711 +
           (C43784 * C81840 + C43783 * C93847 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C93846) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C93846 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93847 +
            (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C81840) *
               C93818 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C93846 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93847 +
            (C36998 * C12033 + C40502 + C40502 + C93582 * C12035) * C81840) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C93846 +
            C41997 * C93847 + C41998 * C81840) *
               C93818 +
           (C87513 + C87514 + C87515) * C93711) *
              C93635 * C800 -
          ((C87516 + C87517 + C87518) * C93711 +
           (C87515 + C87514 + C87513) * C93818) *
              C93635 * C801 +
          ((C87518 + C87517 + C87516) * C93818 +
           (C37506 * C93846 + C39821 * C93847 +
            (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C81840) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C36999 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93582) *
               C93846 +
           ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
           ((C27327 + C27326) * C36999 + (C27325 + C27324) * C93582) * C81840) *
              C93635 * C93621 * C97 -
          (((C27320 + C27321) * C93582 + (C27322 + C27323) * C36999) * C81840 +
           (C29566 * C93582 + C29567 * C36999) * C93847 +
           ((C15122 + C15121) * C93582 + (C15120 + C15119) * C36999) * C93846) *
              C93635 * C93621 * C98 +
          ((C15131 * C36999 + C15132 * C93582) * C93846 +
           ((C18433 + C18432) * C36999 + (C18431 + C18430) * C93582) * C93847 +
           ((C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
             C93711 * C12136) *
                C36999 +
            (C15092 * C1399 + C93818 * C1481 + C15093 * C12034 +
             C93711 * C12137) *
                C93582) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
                C36999 +
            (C15092 * C114 + C93818 * C195 + C15093 * C815 + C93711 * C897) *
                C93582) *
               C93846 +
           ((C27316 + C27317) * C36999 + (C27318 + C27319) * C93582) * C93847 +
           ((C27327 + C27326) * C36999 + (C27325 + C27324) * C93582) * C81840) *
              C93635 * C800 -
          (((C15093 * C5827 + C93711 * C5930 + C15092 * C5825 +
             C93818 * C5929) *
                C93582 +
            (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 +
             C93818 * C5923) *
                C36999) *
               C81840 +
           ((C30783 + C30782) * C93582 + (C30781 + C30780) * C36999) * C93847 +
           ((C15093 * C816 + C93711 * C898 + C15092 * C815 + C93818 * C897) *
                C93582 +
            (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
                C36999) *
               C93846) *
              C93635 * C801 +
          (((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
                C36999 +
            (C15092 * C816 + C93818 * C898 + C15093 * C4921 + C93711 * C5043) *
                C93582) *
               C93846 +
           ((C15092 * C5818 + C93818 * C5922 + C15093 * C8615 +
             C93711 * C8741) *
                C36999 +
            (C15092 * C5824 + C93818 * C5928 + C15093 * C8617 +
             C93711 * C8743) *
                C93582) *
               C93847 +
           ((C15092 * C5821 + C93818 * C5924 + C15093 * C38050 +
             C93711 * C38111) *
                C36999 +
            (C15092 * C5827 + C93818 * C5930 + C15093 * C38051 +
             C93711 * C38112) *
                C93582) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C36999 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93582) *
                         C93818 +
                     ((C81991 * C807 + C93846 * C955 + C81992 * C3409 +
                       C93847 * C3565 + C81993 * C5819 + C81840 * C6009) *
                          C36999 +
                      (C81991 * C815 + C93846 * C963 + C81992 * C3413 +
                       C93847 * C3569 + C81993 * C5825 + C81840 * C6015) *
                          C93582) *
                         C93711) *
                        C93635 * C93621 * C97 -
                    (((C84271 + C84272 + C84273) * C93582 +
                      (C84274 + C84275 + C84276) * C36999) *
                         C93711 +
                     ((C82024 + C82023 + C82022) * C93582 +
                      (C82021 + C82020 + C82019) * C36999) *
                         C93818) *
                        C93635 * C93621 * C98 +
                    (((C82030 + C82029 + C82028) * C36999 +
                      (C82027 + C82026 + C82025) * C93582) *
                         C93818 +
                     ((C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                       C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                          C36999 +
                      (C81991 * C813 + C93846 * C961 + C81992 * C3415 +
                       C93847 * C3571 + C81993 * C12034 + C81840 * C12249) *
                          C93582) *
                         C93711) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C36999 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93582) *
                         C93818 +
                     ((C87691 + C87692 + C87693) * C36999 +
                      (C87694 + C87695 + C87696) * C93582) *
                         C93711) *
                        C93635 * C800 -
                    (((C87697 + C87698 + C87699) * C93582 +
                      (C87700 + C87701 + C87702) * C36999) *
                         C93711 +
                     ((C87696 + C87695 + C87694) * C93582 +
                      (C87693 + C87692 + C87691) * C36999) *
                         C93818) *
                        C93635 * C801 +
                    (((C87702 + C87701 + C87700) * C36999 +
                      (C87699 + C87698 + C87697) * C93582) *
                         C93818 +
                     ((C81991 * C4917 + C93846 * C5121 + C81992 * C8615 +
                       C93847 * C8843 + C81993 * C38050 + C81840 * C38163) *
                          C36999 +
                      (C81991 * C4921 + C93846 * C5125 + C81992 * C8617 +
                       C93847 * C8845 + C81993 * C38051 + C81840 * C38164) *
                          C93582) *
                         C93711) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C15092 +
                      (C36999 * C189 + C93582 * C362) * C93818 +
                      C37699 * C15093 + C37700 * C93711) *
                         C93846 +
                     (C42289 * C15092 + C42290 * C93818 + C40059 * C15093 +
                      C40058 * C93711) *
                         C93847 +
                     (C42291 * C15092 + C42292 * C93818 + C41451 * C15093 +
                      C41452 * C93711) *
                         C81840) *
                        C93635 * C93621 * C97 -
                    ((C43170 * C93711 + C43169 * C15093 + C44106 * C93818 +
                      C44105 * C15092) *
                         C81840 +
                     (C43168 * C93711 + C43167 * C15093 + C44104 * C93818 +
                      C44103 * C15092) *
                         C93847 +
                     (C38783 * C93711 + C38782 * C15093 +
                      (C36999 * C190 + C93582 * C363) * C93818 +
                      (C36999 * C109 + C93582 * C115) * C15092) *
                         C93846) *
                        C93635 * C93621 * C98 +
                    (((C36999 * C110 + C93582 * C116) * C15092 +
                      (C36999 * C191 + C93582 * C364) * C93818 +
                      (C36999 * C805 + C93582 * C813) * C15093 +
                      (C36999 * C887 + C93582 * C1019) * C93711) *
                         C93846 +
                     ((C36999 * C1386 + C93582 * C1394) * C15092 +
                      (C36999 * C1468 + C93582 * C1600) * C93818 +
                      (C36999 * C3411 + C93582 * C3415) * C15093 +
                      (C36999 * C3493 + C93582 * C3641) * C93711) *
                         C93847 +
                     ((C36999 * C1391 + C93582 * C1399) * C15092 +
                      (C36999 * C1473 + C93582 * C1605) * C93818 +
                      (C36999 * C12033 + C93582 * C12034) * C15093 +
                      (C36999 * C12136 + C93582 * C12366) * C93711) *
                         C81840) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36999 * C108 + C93582 * C114) * C15092 +
                      (C36999 * C189 + C93582 * C362) * C93818 +
                      C37699 * C15093 + C37700 * C93711) *
                         C93846 +
                     (C42289 * C15092 + C42290 * C93818 + C40059 * C15093 +
                      C40058 * C93711) *
                         C93847 +
                     (C42291 * C15092 + C42292 * C93818 + C41451 * C15093 +
                      C41452 * C93711) *
                         C81840) *
                        C93635 * C800 -
                    ((C41453 * C93711 + C41454 * C15093 + C41452 * C93818 +
                      C41451 * C15092) *
                         C81840 +
                     (C40056 * C93711 + C40057 * C15093 + C40058 * C93818 +
                      C40059 * C15092) *
                         C93847 +
                     (C37702 * C93711 + C37701 * C15093 + C37700 * C93818 +
                      C37699 * C15092) *
                         C93846) *
                        C93635 * C801 +
                    ((C37701 * C15092 + C37702 * C93818 + C37703 * C15093 +
                      C37704 * C93711) *
                         C93846 +
                     (C40057 * C15092 + C40056 * C93818 + C40055 * C15093 +
                      C40054 * C93711) *
                         C93847 +
                     (C41454 * C15092 + C41453 * C93818 +
                      (C36999 * C38050 + C93582 * C38051) * C15093 +
                      (C36999 * C38111 + C93582 * C38215) * C93711) *
                         C81840) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
            C15358 + C15358 + C93711 * C1079) *
               C93582 * C93846 +
           (C27650 + C27651) * C93582 * C93847 +
           (C27655 + C27654) * C93582 * C81840) *
              C93635 * C93621 * C97 -
          ((C27652 + C27653) * C93582 * C81840 + C29971 * C93582 * C93847 +
           (C15392 + C15391) * C93582 * C93846) *
              C93635 * C93621 * C98 +
          (C15397 * C93582 * C93846 + (C18757 + C18756) * C93582 * C93847 +
           (C15354 * C1391 + C16910 + C16910 + C93818 * C1663 +
            C15355 * C12033 + C16911 + C16911 + C93711 * C12465) *
               C93582 * C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15354 * C108 + C15357 + C15357 + C93818 * C419 + C15355 * C807 +
            C15358 + C15358 + C93711 * C1079) *
               C93582 * C93846 +
           (C27650 + C27651) * C93582 * C93847 +
           (C27655 + C27654) * C93582 * C81840) *
              C93635 * C800 -
          ((C15355 * C5821 + C31195 + C31195 + C93711 * C6176 + C15354 * C5819 +
            C31194 + C31194 + C93818 * C6175) *
               C93582 * C81840 +
           (C31203 + C31202) * C93582 * C93847 +
           (C15355 * C808 + C16196 + C16196 + C93711 * C1080 + C15354 * C807 +
            C16197 + C16197 + C93818 * C1079) *
               C93582 * C93846) *
              C93635 * C801 +
          ((C15354 * C808 + C16198 + C16198 + C93818 * C1080 + C15355 * C4917 +
            C16199 + C16199 + C93711 * C5358) *
               C93582 * C93846 +
           (C15354 * C5818 + C26648 + C26648 + C93818 * C6174 + C15355 * C8615 +
            C26649 + C26649 + C93711 * C9089) *
               C93582 * C93847 +
           (C15354 * C5821 + C87851 + C87851 + C93818 * C6176 +
            C15355 * C38050 + C87852 + C87852 + C93711 * C38266) *
               C93582 * C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C15092 +
                     (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                      C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                         C93818 +
                     (C81991 * C807 + C93846 * C955 + C81992 * C3409 +
                      C93847 * C3565 + C81993 * C5819 + C81840 * C6009) *
                         C15093 +
                     (C81991 * C889 + C93846 * C1145 + C81992 * C3491 +
                      C93847 * C3783 + C81993 * C5923 + C81840 * C6267) *
                         C93711) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C84577 + C84578 + C84579) * C93711 +
                     (C84274 + C84275 + C84276) * C15093 +
                     (C82267 + C82266 + C82265) * C93818 +
                     (C82021 + C82020 + C82019) * C15092) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C82030 + C82029 + C82028) * C15092 +
                     (C82270 + C82269 + C82268) * C93818 +
                     (C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                      C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                         C15093 +
                     (C81991 * C887 + C93846 * C1143 + C81992 * C3493 +
                      C93847 * C3785 + C81993 * C12136 + C81840 * C12575) *
                         C93711) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C15092 +
                     (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                      C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                         C93818 +
                     (C87691 + C87692 + C87693) * C15093 +
                     (C87939 + C87940 + C87941) * C93711) *
                        C93582 * C93635 * C800 -
                    ((C87942 + C87943 + C87944) * C93711 +
                     (C87700 + C87701 + C87702) * C15093 +
                     (C87941 + C87940 + C87939) * C93818 +
                     (C87693 + C87692 + C87691) * C15092) *
                        C93582 * C93635 * C801 +
                    ((C87702 + C87701 + C87700) * C15092 +
                     (C87944 + C87943 + C87942) * C93818 +
                     (C81991 * C4917 + C93846 * C5121 + C81992 * C8615 +
                      C93847 * C8843 + C81993 * C38050 + C81840 * C38163) *
                         C15093 +
                     (C81991 * C5039 + C93846 * C5448 + C81992 * C8741 +
                      C93847 * C9195 + C81993 * C38111 + C81840 * C38325) *
                         C93711) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C81991 +
            (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
            C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
               C93818 +
           (C37699 * C81991 + C37883 * C93846 + C40059 * C81992 +
            C40279 * C93847 + C41451 * C81993 + C41715 * C81840) *
               C93711) *
              C93635 * C93621 * C97 -
          ((C43476 * C81840 + C43169 * C81993 + C43475 * C93847 +
            C43167 * C81992 + C38999 * C93846 + C38782 * C81991) *
               C93711 +
           (C44422 * C81840 + C44105 * C81993 + C44421 * C93847 +
            C44103 * C81992 + (C36999 * C277 + C93582 * C580) * C93846 +
            (C36999 * C109 + C93582 * C115) * C81991) *
               C93818) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C81991 +
            (C36999 * C278 + C93582 * C581) * C93846 +
            (C36999 * C1386 + C93582 * C1394) * C81992 +
            (C36999 * C1534 + C93582 * C1782) * C93847 +
            (C36999 * C1391 + C93582 * C1399) * C81993 +
            (C36999 * C1539 + C93582 * C1787) * C81840) *
               C93818 +
           ((C36999 * C805 + C93582 * C813) * C81991 +
            (C36999 * C953 + C93582 * C1201) * C93846 +
            (C36999 * C3411 + C93582 * C3415) * C81992 +
            (C36999 * C3567 + C93582 * C3855) * C93847 +
            (C36999 * C12033 + C93582 * C12034) * C81993 +
            (C36999 * C12248 + C93582 * C12683) * C81840) *
               C93711) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C81991 +
            (C36999 * C276 + C93582 * C579) * C93846 + C42289 * C81992 +
            C42577 * C93847 + C42291 * C81993 + C42578 * C81840) *
               C93818 +
           (C88019 + C88020 + C88021 + C88022 + C88023 + C88024) * C93711) *
              C93635 * C800 -
          ((C88025 + C88026 + C88027 + C88028 + C88029 + C88030) * C93711 +
           (C88024 + C88023 + C88022 + C88021 + C88020 + C88019) * C93818) *
              C93635 * C801 +
          ((C88030 + C88029 + C88028 + C88027 + C88026 + C88025) * C93818 +
           (C37703 * C81991 + C37885 * C93846 + C40055 * C81992 +
            C40277 * C93847 + (C36999 * C38050 + C93582 * C38051) * C81993 +
            (C36999 * C38163 + C93582 * C38376) * C81840) *
               C93711) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C81991 +
           (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
               C93846 +
           (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
           (C27327 + C27326) * C81993 + (C27967 + C27966) * C81840) *
              C93582 * C93635 * C93621 * C97 -
          ((C27964 + C27965) * C81840 + (C27322 + C27323) * C81993 +
           C30369 * C93847 + C29567 * C81992 + (C15649 + C15648) * C93846 +
           (C15120 + C15119) * C81991) *
              C93582 * C93635 * C93621 * C98 +
          (C15131 * C81991 + C15654 * C93846 + (C18433 + C18432) * C81992 +
           (C19074 + C19073) * C93847 +
           (C15092 * C1391 + C93818 * C1473 + C15093 * C12033 +
            C93711 * C12136) *
               C81993 +
           (C15092 * C1539 + C93818 * C1845 + C15093 * C12248 +
            C93711 * C12782) *
               C81840) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15092 * C108 + C93818 * C189 + C15093 * C807 + C93711 * C889) *
               C81991 +
           (C15092 * C276 + C93818 * C635 + C15093 * C955 + C93711 * C1261) *
               C93846 +
           (C27316 + C27317) * C81992 + (C27962 + C27963) * C93847 +
           (C27327 + C27326) * C81993 + (C27967 + C27966) * C81840) *
              C93582 * C93635 * C800 -
          ((C15093 * C6011 + C93711 * C6428 + C15092 * C6009 + C93818 * C6427) *
               C81840 +
           (C15093 * C5821 + C93711 * C5924 + C15092 * C5819 + C93818 * C5923) *
               C81993 +
           (C31607 + C31606) * C93847 + (C30781 + C30780) * C81992 +
           (C15093 * C956 + C93711 * C1262 + C15092 * C955 + C93818 * C1261) *
               C93846 +
           (C15093 * C808 + C93711 * C890 + C15092 * C807 + C93818 * C889) *
               C81991) *
              C93582 * C93635 * C801 +
          ((C15092 * C808 + C93818 * C890 + C15093 * C4917 + C93711 * C5039) *
               C81991 +
           (C15092 * C956 + C93818 * C1262 + C15093 * C5121 + C93711 * C5638) *
               C93846 +
           (C15092 * C5818 + C93818 * C5922 + C15093 * C8615 + C93711 * C8741) *
               C81992 +
           (C15092 * C6008 + C93818 * C6426 + C15093 * C8843 + C93711 * C9413) *
               C93847 +
           (C15092 * C5821 + C93818 * C5924 + C15093 * C38050 +
            C93711 * C38111) *
               C81993 +
           (C15092 * C6011 + C93818 * C6428 + C15093 * C38163 +
            C93711 * C38427) *
               C81840) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93818 +
                     (C82504 * C807 + C83221 + C83221 + C93846 * C1319 +
                      C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                      C82506 * C5819 + C83219 + C83219 + C81840 * C6507) *
                         C93711) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C84895 + C84896 + C84897) * C93711 +
                     (C82546 + C82545 + C82544) * C93818) *
                        C93582 * C93635 * C93621 * C98 +
                    ((C82549 + C82548 + C82547) * C93818 +
                     (C82504 * C805 + C84886 + C84886 + C93846 * C1317 +
                      C82505 * C3411 + C84887 + C84887 + C93847 * C3995 +
                      C82506 * C12033 + C84888 + C84888 + C81840 * C12893) *
                         C93711) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93818 +
                     (C88206 + C88207 + C88208) * C93711) *
                        C93582 * C93635 * C800 -
                    ((C88209 + C88210 + C88211) * C93711 +
                     (C88208 + C88207 + C88206) * C93818) *
                        C93582 * C93635 * C801 +
                    ((C88211 + C88210 + C88209) * C93818 +
                     (C82504 * C4917 + C88191 + C88191 + C93846 * C5716 +
                      C82505 * C8615 + C88192 + C88192 + C93847 * C9513 +
                      C82506 * C38050 + C88193 + C88193 + C81840 * C38478) *
                         C93711) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C93635 * C1979 -
           ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
            (C67959 + C67958) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C69539 + C69540) * C4077 + (C69541 + C69542) * C4078 +
            (C38562 * C62191 +
             (C36998 * C8616 + C39206 + C39206 + C93582 * C8620) * C93737) *
                C4079) *
               C93635 * C1980 -
           ((C69542 + C69541) * C4079 + (C69540 + C69539) * C4078 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C93635 * C1979 -
           ((C36118 + C36119 + C36120) * C93737 +
            (C32680 + C32679 + C32678) * C62191) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C34157 + C34158 + C34159) * C62191 +
            (C31830 * C3410 + C35148 + C35148 + C31825 * C3418 +
             C31832 * C3411 + C35149 + C35149 + C31826 * C3419 +
             C31834 * C3412 + C35150 + C35150 + C31827 * C3420) *
                C93737) *
               C93662 * C93635 * C1980 -
           ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 +
             C31832 * C1386 + C35146 + C35146 + C31826 * C1402 +
             C31830 * C1387 + C35145 + C35145 + C31825 * C1403) *
                C93737 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C62191) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
            C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
               C93662 * C93635 * C1979 -
           (C41999 * C72310 + C41181 * C72309 + C39823 * C72308 +
            C37504 * C72307) *
               C93662 * C93635 * C1980) *
              C1981 +
          ((C38560 * C72307 + C42861 * C72308 + C42862 * C72309 +
            (C36998 * C14028 + C43778 + C43778 + C93582 * C14032) * C72310) *
               C93662 * C93635 * C1980 -
           ((C36998 * C11102 + C43777 + C43777 + C93582 * C11110) * C72310 +
            C43784 * C72309 + C43783 * C72308 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C72307) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C93635 * C1979 -
           (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
              C4176 * C3413 + C4077 * C3495) *
                 C93582 +
             (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
              C4176 * C3409 + C4077 * C3491) *
                 C36999) *
                C93737 +
            ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
              C4176 * C815 + C4077 * C897) *
                 C93582 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C36999) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C6758 + C6757 + C6756) * C36999 +
             (C6755 + C6754 + C6753) * C93582) *
                C62191 +
            ((C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
              C4178 * C8616 + C4079 * C8742) *
                 C36999 +
             (C4176 * C3414 + C4077 * C3496 + C4177 * C5823 + C4078 * C5927 +
              C4178 * C8618 + C4079 * C8744) *
                 C93582) *
                C93737) *
               C93635 * C1980 -
           (((C7753 + C7754 + C7755) * C93582 +
             (C7756 + C7757 + C7758) * C36999) *
                C93737 +
            ((C4209 + C4208 + C4207) * C93582 +
             (C4206 + C4205 + C4204) * C36999) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C93635 * C1979 -
           ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
             C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
                C93737 +
            (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
             (C188 * C815 + C93662 * C897) * C31825 +
             (C188 * C807 + C93662 * C889) * C31831) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C31831 + C2075 * C31825 + C2074 * C31833 + C2073 * C31826 +
             C2072 * C31835 + C2071 * C31827) *
                C62191 +
            (C12150 * C31831 + C12149 * C31825 + C22578 * C31833 +
             C22577 * C31826 + (C188 * C3412 + C93662 * C3494) * C31835 +
             (C188 * C3416 + C93662 * C3498) * C31827) *
                C93737) *
               C93635 * C1980 -
           ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 + C2788 * C31833 +
             C2789 * C31825 + C2790 * C31831) *
                C93737 +
            (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
             C219 * C31825 + C218 * C31831) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C36999 +
             (C188 * C114 + C93662 * C195) * C93582) *
                C72307 +
            (C73303 + C73304) * C72308 + C73313 * C72309 + C73314 * C72310) *
               C93635 * C1979 -
           (((C188 * C14029 + C93662 * C14145) * C93582 +
             (C188 * C14027 + C93662 * C14143) * C36999) *
                C72310 +
            (C14163 * C93582 + C14162 * C36999) * C72309 +
            (C14161 * C93582 + C14160 * C36999) * C72308 +
            ((C188 * C815 + C93662 * C897) * C93582 +
             (C188 * C807 + C93662 * C889) * C36999) *
                C72307) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C36999 + C2075 * C93582) * C72307 +
            (C12150 * C36999 + C12149 * C93582) * C72308 +
            (C12148 * C36999 + C12147 * C93582) * C72309 +
            ((C188 * C14028 + C93662 * C14144) * C36999 +
             (C188 * C14030 + C93662 * C14146) * C93582) *
                C72310) *
               C93635 * C1980 -
           ((C11256 * C93582 + C11257 * C36999) * C72310 +
            (C9694 * C93582 + C9693 * C36999) * C72309 +
            (C2789 * C93582 + C2790 * C36999) * C72308 +
            (C219 * C93582 + C218 * C36999) * C72307) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C93635 * C1979 -
           (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
            ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
            ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
               C93635 * C1980) *
              C1981 +
          ((((C64688 + C64687) * C36999 + (C64686 + C64685) * C93582) * C4077 +
            ((C69747 + C69748) * C36999 + (C69749 + C69750) * C93582) * C4078 +
            ((C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
              C93737 * C8844) *
                 C36999 +
             (C62344 * C4920 + C62191 * C5124 + C62345 * C8618 +
              C93737 * C8846) *
                 C93582) *
                C4079) *
               C93635 * C1980 -
           (((C69750 + C69749) * C93582 + (C69748 + C69747) * C36999) * C4079 +
            ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
            ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C93635 * C1979 -
           ((C64681 + C64682) * C31827 + (C64683 + C64684) * C31835 +
            (C64685 + C64686) * C31826 + (C64687 + C64688) * C31833 +
            (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
                C31825 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C31831) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C64688 + C64687) * C31831 + (C64686 + C64685) * C31825 +
            (C64684 + C64683) * C31833 + (C64682 + C64681) * C31826 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C31835 +
            (C62344 * C812 + C62191 * C960 + C62345 * C3416 + C93737 * C3572) *
                C31827) *
               C93662 * C93635 * C1980 -
           ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
            (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
            (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C36999 +
            (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
             C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
             C72310 * C11349) *
                C93582) *
               C93662 * C93635 * C1979 -
           ((C72415 * C14029 + C72310 * C14267 + C72414 * C5825 +
             C72309 * C6015 + C72413 * C3413 + C72308 * C3569 + C72412 * C815 +
             C72307 * C963) *
                C93582 +
            (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
             C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
             C72307 * C955) *
                C36999) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C72412 * C806 + C72307 * C954 + C72413 * C3410 + C72308 * C3566 +
             C72414 * C5820 + C72309 * C6010 + C72415 * C14028 +
             C72310 * C14266) *
                C36999 +
            (C72412 * C814 + C72307 * C962 + C72413 * C3414 + C72308 * C3570 +
             C72414 * C5826 + C72309 * C6016 + C72415 * C14030 +
             C72310 * C14268) *
                C93582) *
               C93662 * C93635 * C1980 -
           ((C72415 * C11106 + C72310 * C11348 + C72414 * C1398 +
             C72309 * C1546 + C72413 * C1395 + C72308 * C1543 + C72412 * C115 +
             C72307 * C283) *
                C93582 +
            (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
             C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
             C72307 * C277) *
                C36999) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C93635 * C1979 -
           ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
             C40058 * C4077 + C40059 * C4176) *
                C93737 +
            (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
             C37700 * C4077 + C37699 * C4176) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C4176 + C38783 * C4077 + C38784 * C4177 + C38785 * C4078 +
             C38786 * C4178 + C38787 * C4079) *
                C62191 +
            (C43167 * C4176 + C43168 * C4077 + C59752 * C4177 + C59753 * C4078 +
             (C36999 * C8616 + C93582 * C8618) * C4178 +
             (C36999 * C8742 + C93582 * C8966) * C4079) *
                C93737) *
               C93635 * C1980 -
           ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
             C44104 * C4077 + C44103 * C4176) *
                C93737 +
            (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
             (C36999 * C190 + C93582 * C363) * C4077 +
             (C36999 * C109 + C93582 * C115) * C4176) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C93635 * C1979 -
           (((C36433 + C36434 + C36435) * C93662 +
             (C36436 + C36437 + C36438) * C188) *
                C93737 +
            ((C32947 + C32946 + C32945) * C93662 +
             (C32944 + C32943 + C32942) * C188) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C34496 + C34497 + C34498) * C188 +
             (C34499 + C34500 + C34501) * C93662) *
                C62191 +
            ((C31831 * C3410 + C31825 * C3414 + C31833 * C3411 +
              C31826 * C3415 + C31835 * C3412 + C31827 * C3416) *
                 C188 +
             (C31831 * C3492 + C31825 * C3640 + C31833 * C3493 +
              C31826 * C3641 + C31835 * C3494 + C31827 * C3642) *
                 C93662) *
                C93737) *
               C93635 * C1980 -
           (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 +
              C31826 * C1600 + C31831 * C1469 + C31825 * C1601) *
                 C93662 +
             (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 +
              C31826 * C1394 + C31831 * C1387 + C31825 * C1395) *
                 C188) *
                C93737 +
            ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
              C31831 * C190 + C31825 * C363) *
                 C93662 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C188) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C188 +
             (C36999 * C189 + C93582 * C362) * C93662) *
                C72307 +
            (C73422 + C73423) * C72308 + C73432 * C72309 + C73433 * C72310) *
               C93635 * C1979 -
           ((C42293 * C93662 + C42294 * C188) * C72310 +
            (C41452 * C93662 + C41451 * C188) * C72309 +
            (C40058 * C93662 + C40059 * C188) * C72308 +
            (C37700 * C93662 + C37699 * C188) * C72307) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C188 + C38783 * C93662) * C72307 +
            (C43167 * C188 + C43168 * C93662) * C72308 +
            (C43169 * C188 + C43170 * C93662) * C72309 +
            ((C36999 * C14028 + C93582 * C14030) * C188 +
             (C36999 * C14144 + C93582 * C14368) * C93662) *
                C72310) *
               C93635 * C1980 -
           (((C36999 * C11223 + C93582 * C11426) * C93662 +
             (C36999 * C11102 + C93582 * C11106) * C188) *
                C72310 +
            (C44106 * C93662 + C44105 * C188) * C72309 +
            (C44104 * C93662 + C44103 * C188) * C72308 +
            ((C36999 * C190 + C93582 * C363) * C93662 +
             (C36999 * C109 + C93582 * C115) * C188) *
                C72307) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C93635 * C1979 -
           ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
             C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
             C4077 * C3709) *
                C93582 * C93737 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C93582 * C62191) *
               C93635 * C1980) *
              C1981 +
          (((C7106 + C7105 + C7104) * C93582 * C62191 +
            (C4449 * C3410 + C9095 + C9095 + C4077 * C3710 + C4450 * C5817 +
             C9096 + C9096 + C4078 * C6173 + C4451 * C8616 + C9097 + C9097 +
             C4079 * C9090) *
                C93582 * C93737) *
               C93635 * C1980 -
           ((C8084 + C8085 + C8086) * C93582 * C93737 +
            (C4491 + C4490 + C4489) * C93582 * C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C93635 * C1979 -
           ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
            (C2311 * C31827 + C2312 * C31826 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C2312 * C31825 + C2311 * C31826 + C2310 * C31827) * C62191 +
            (C12477 * C31825 + C22901 * C31826 +
             (C418 * C3412 + C3717 + C3717 + C93662 * C3712) * C31827) *
                C93737) *
               C93635 * C1980 -
           ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
            (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
            C73489 * C72308 + C73490 * C72309 + C73491 * C72310) *
               C93635 * C1979 -
           ((C418 * C14027 + C14488 + C14488 + C93662 * C14479) * C93582 *
                C72310 +
            C14495 * C93582 * C72309 + C14494 * C93582 * C72308 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93582 * C72307) *
               C93635 * C1980) *
              C1981 +
          ((C2312 * C93582 * C72307 + C12477 * C93582 * C72308 +
            C12476 * C93582 * C72309 +
            (C418 * C14028 + C14489 + C14489 + C93662 * C14480) * C93582 *
                C72310) *
               C93635 * C1980 -
           (C11574 * C93582 * C72310 + C9966 * C93582 * C72309 +
            C3026 * C93582 * C72308 + C448 * C93582 * C72307) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C93635 * C1979 -
           ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
            (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
            (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C64688 + C64687) * C4176 + (C64994 + C64993) * C4077 +
            (C69747 + C69748) * C4177 + (C70049 + C70050) * C4078 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C4178 +
            (C62344 * C5038 + C62191 * C5447 + C62345 * C8742 +
             C93737 * C9196) *
                C4079) *
               C93582 * C93635 * C1980 -
           ((C70050 + C70049) * C4079 + (C69748 + C69747) * C4178 +
            (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
            (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C93635 * C1979 -
           (((C64991 + C64992) * C93662 + (C64683 + C64684) * C188) * C31827 +
            ((C64993 + C64994) * C93662 + (C64687 + C64688) * C188) * C31826 +
            ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 +
              C62191 * C1145) *
                 C93662 +
             (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                 C188) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          ((((C64688 + C64687) * C188 + (C64994 + C64993) * C93662) * C31825 +
            ((C64684 + C64683) * C188 + (C64992 + C64991) * C93662) * C31826 +
            ((C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                 C188 +
             (C62344 * C886 + C62191 * C1142 + C62345 * C3494 +
              C93737 * C3786) *
                 C93662) *
                C31827) *
               C93635 * C1980 -
           (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
            ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
            ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C188 +
            (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
             C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
             C72310 * C11655) *
                C93662) *
               C93582 * C93635 * C1979 -
           ((C72415 * C14143 + C72310 * C14595 + C72414 * C5923 +
             C72309 * C6267 + C72413 * C3491 + C72308 * C3783 + C72412 * C889 +
             C72307 * C1145) *
                C93662 +
            (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
             C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
             C72307 * C955) *
                C188) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C72412 * C806 + C72307 * C954 + C72413 * C3410 + C72308 * C3566 +
             C72414 * C5820 + C72309 * C6010 + C72415 * C14028 +
             C72310 * C14266) *
                C188 +
            (C72412 * C888 + C72307 * C1144 + C72413 * C3492 + C72308 * C3784 +
             C72414 * C5925 + C72309 * C6269 + C72415 * C14144 +
             C72310 * C14596) *
                C93662) *
               C93582 * C93635 * C1980 -
           ((C72415 * C11223 + C72310 * C11654 + C72414 * C1472 +
             C72309 * C1728 + C72413 * C1469 + C72308 * C1725 + C72412 * C190 +
             C72307 * C502) *
                C93662 +
            (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
             C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
             C72307 * C277) *
                C188) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C93635 * C1979 -
           ((C68480 + C68481 + C68482 + C68483) * C4079 +
            (C68479 + C68478 + C68477 + C68476) * C4078 +
            (C68475 + C68474 + C68473 + C68472) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C70149 + C70150 + C70151 + C70152) * C4077 +
            (C70153 + C70154 + C70155 + C70156) * C4078 +
            (C38786 * C62344 + C39001 * C62191 +
             (C36999 * C8616 + C93582 * C8618) * C62345 +
             (C36999 * C8844 + C93582 * C9302) * C93737) *
                C4079) *
               C93635 * C1980 -
           ((C70156 + C70155 + C70154 + C70153) * C4079 +
            (C70152 + C70151 + C70150 + C70149) * C4078 +
            (C44421 * C93737 + C44103 * C62345 +
             (C36999 * C277 + C93582 * C580) * C62191 +
             (C36999 * C109 + C93582 * C115) * C62344) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C93635 * C1979 -
           ((C36745 + C36746 + C36747) * C93737 +
            (C36436 + C36437 + C36438) * C62345 +
            (C33202 + C33201 + C33200) * C62191 +
            (C32944 + C32943 + C32942) * C62344) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C34496 + C34497 + C34498) * C62344 +
            (C34832 + C34833 + C34834) * C62191 +
            (C31831 * C3410 + C31825 * C3414 + C31833 * C3411 + C31826 * C3415 +
             C31835 * C3412 + C31827 * C3416) *
                C62345 +
            (C31831 * C3566 + C31825 * C3854 + C31833 * C3567 + C31826 * C3855 +
             C31835 * C3568 + C31827 * C3856) *
                C93737) *
               C93662 * C93635 * C1980 -
           ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 + C31826 * C1782 +
             C31831 * C1535 + C31825 * C1783) *
                C93737 +
            (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
             C31831 * C1387 + C31825 * C1395) *
                C62345 +
            (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C62191 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C62344) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C72412 +
            (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
            C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
            C42296 * C72415 + C42580 * C72310) *
               C93662 * C93635 * C1979 -
           (C42579 * C72310 + C42294 * C72415 + C41715 * C72309 +
            C41451 * C72414 + C40279 * C72308 + C40059 * C72413 +
            C37883 * C72307 + C37699 * C72412) *
               C93662 * C93635 * C1980) *
              C1981 +
          ((C38782 * C72412 + C38999 * C72307 + C43167 * C72413 +
            C43475 * C72308 + C43169 * C72414 + C43476 * C72309 +
            (C36999 * C14028 + C93582 * C14030) * C72415 +
            (C36999 * C14266 + C93582 * C14696) * C72310) *
               C93662 * C93635 * C1980 -
           ((C36999 * C11344 + C93582 * C11732) * C72310 +
            (C36999 * C11102 + C93582 * C11106) * C72415 + C44422 * C72309 +
            C44105 * C72414 + C44421 * C72308 + C44103 * C72413 +
            (C36999 * C277 + C93582 * C580) * C72307 +
            (C36999 * C109 + C93582 * C115) * C72412) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C93635 * C1979 -
           ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
             C4176 * C3565 + C4077 * C3923) *
                C93737 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C62345 +
            (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C62191 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C62344) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C6758 + C6757 + C6756) * C62344 +
            (C7430 + C7429 + C7428) * C62191 +
            (C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
             C4178 * C8616 + C4079 * C8742) *
                C62345 +
            (C4176 * C3566 + C4077 * C3924 + C4177 * C6007 + C4078 * C6425 +
             C4178 * C8844 + C4079 * C9414) *
                C93737) *
               C93582 * C93635 * C1980 -
           ((C8402 + C8403 + C8404) * C93737 +
            (C7756 + C7757 + C7758) * C62345 +
            (C4749 + C4748 + C4747) * C62191 +
            (C4206 + C4205 + C4204) * C62344) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C93635 * C1979 -
           ((C65191 + C65192 + C65193 + C65194) * C31827 +
            (C65195 + C65196 + C65197 + C65198) * C31826 +
            (C14808 * C93737 + C14160 * C62345 +
             (C188 * C955 + C93662 * C1261) * C62191 +
             (C188 * C807 + C93662 * C889) * C62344) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          (((C65198 + C65197 + C65196 + C65195) * C31825 +
            (C65194 + C65193 + C65192 + C65191) * C31826 +
            (C2072 * C62344 + C2538 * C62191 +
             (C188 * C3412 + C93662 * C3494) * C62345 +
             (C188 * C3568 + C93662 * C3926) * C93737) *
                C31827) *
               C93635 * C1980 -
           ((C62785 + C62786 + C62787 + C62788) * C31827 +
            (C62784 + C62783 + C62782 + C62781) * C31826 +
            (C62780 + C62779 + C62778 + C62777) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C72412 +
            (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
            C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
            C11259 * C72415 + C11845 * C72310) *
               C93582 * C93635 * C1979 -
           ((C188 * C14265 + C93662 * C14801) * C72310 +
            (C188 * C14027 + C93662 * C14143) * C72415 + C14809 * C72309 +
            C14162 * C72414 + C14808 * C72308 + C14160 * C72413 +
            (C188 * C955 + C93662 * C1261) * C72307 +
            (C188 * C807 + C93662 * C889) * C72412) *
               C93582 * C93635 * C1980) *
              C1981 +
          ((C2076 * C72412 + C2540 * C72307 + C12150 * C72413 +
            C12793 * C72308 + C12148 * C72414 + C12792 * C72309 +
            (C188 * C14028 + C93662 * C14144) * C72415 +
            (C188 * C14266 + C93662 * C14802) * C72310) *
               C93582 * C93635 * C1980 -
           (C11844 * C72310 + C11257 * C72415 + C10222 * C72309 +
            C9693 * C72414 + C3254 * C72308 + C2790 * C72413 + C654 * C72307 +
            C218 * C72412) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C93635 * C1979 -
                     ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                      (C68664 + C68663) * C4077) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    (((C65318 + C65317) * C4077 + (C70363 + C70364) * C4078 +
                      (C62865 * C4916 + C70357 + C70357 + C62191 * C5715 +
                       C62866 * C8616 + C70358 + C70358 + C93737 * C9514) *
                          C4079) *
                         C93582 * C93635 * C1980 -
                     ((C70364 + C70363) * C4079 + (C65317 + C65318) * C4078 +
                      (C62903 + C62902) * C4077) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C93635 * C1979 -
                     ((C65315 + C65316) * C93662 * C31827 +
                      (C65317 + C65318) * C93662 * C31826 +
                      (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                       C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                          C93662 * C31825) *
                         C93635 * C1980) *
                        C1981 +
                    (((C65318 + C65317) * C93662 * C31825 +
                      (C65316 + C65315) * C93662 * C31826 +
                      (C62865 * C804 + C65305 + C65305 + C62191 * C1316 +
                       C62866 * C3412 + C65306 + C65306 + C93737 * C3996) *
                          C93662 * C31827) *
                         C93635 * C1980 -
                     ((C62906 + C62907) * C93662 * C31827 +
                      (C62905 + C62904) * C93662 * C31826 +
                      (C62903 + C62902) * C93662 * C31825) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C72716 * C108 + C72721 + C72721 + C72307 * C714 +
                      C72717 * C1388 + C72722 + C72722 + C72308 * C1900 +
                      C72718 * C1389 + C72723 + C72723 + C72309 * C1901 +
                      C72719 * C11103 + C72724 + C72724 + C72310 * C11920) *
                         C93662 * C93582 * C93635 * C1979 -
                     (C72719 * C14027 + C73184 + C73184 + C72310 * C14907 +
                      C72718 * C5819 + C73185 + C73185 + C72309 * C6507 +
                      C72717 * C3409 + C73186 + C73186 + C72308 * C3993 +
                      C72716 * C807 + C73187 + C73187 + C72307 * C1319) *
                         C93662 * C93582 * C93635 * C1980) *
                        C1981 +
                    ((C72716 * C806 + C74311 + C74311 + C72307 * C1318 +
                      C72717 * C3410 + C74312 + C74312 + C72308 * C3994 +
                      C72718 * C5820 + C74313 + C74313 + C72309 * C6509 +
                      C72719 * C14028 + C74314 + C74314 + C72310 * C14908) *
                         C93662 * C93582 * C93635 * C1980 -
                     (C72719 * C11102 + C72725 + C72725 + C72310 * C11919 +
                      C72718 * C1390 + C72726 + C72726 + C72309 * C1902 +
                      C72717 * C1387 + C72727 + C72727 + C72308 * C1899 +
                      C72716 * C109 + C72728 + C72728 + C72307 * C715) *
                         C93662 * C93582 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C2695 -
           ((C71353 + C71354) * C4079 + (C71355 + C71356) * C4078 +
            (C41998 * C93737 + C41997 * C62191) * C4077) *
               C2696) *
              C1979 +
          (((C71356 + C71355) * C4077 + (C71354 + C71353) * C4078 +
            (C39821 * C62191 +
             (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C93737) *
                C4079) *
               C2696 -
           ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
            (C67959 + C67958) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C2695 -
           ((C63692 + C63693 + C63694) * C93737 +
            (C63691 + C63690 + C63689) * C62191) *
               C93662 * C2696) *
              C1979 +
          (((C36120 + C36119 + C36118) * C62191 +
            (C31830 * C5819 + C33437 + C33437 + C31825 * C5831 +
             C31832 * C5820 + C33438 + C33438 + C31826 * C5832 +
             C31834 * C12033 + C33439 + C33439 + C31827 * C12035) *
                C93737) *
               C93662 * C2696 -
           ((C36118 + C36119 + C36120) * C93737 +
            (C32680 + C32679 + C32678) * C62191) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
            C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
               C93662 * C2695 -
           (C73250 * C72310 + C42000 * C72309 + C41998 * C72308 +
            C41997 * C72307) *
               C93662 * C2696) *
              C1979 +
          ((C39823 * C72307 + C41181 * C72308 + C41999 * C72309 +
            (C36998 * C41973 + C41988 + C41988 + C93582 * C41975) * C72310) *
               C93662 * C2696 -
           (C41999 * C72310 + C41181 * C72309 + C39823 * C72308 +
            C37504 * C72307) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C2695 -
           (((C68848 + C68849 + C68850) * C93582 +
             (C68851 + C68852 + C68853) * C36999) *
                C93737 +
            ((C68847 + C68846 + C68845) * C93582 +
             (C68844 + C68843 + C68842) * C36999) *
                C62191) *
               C2696) *
              C1979 +
          ((((C71467 + C71468 + C71469) * C36999 +
             (C71470 + C71471 + C71472) * C93582) *
                C62191 +
            ((C4176 * C5819 + C4077 * C5923 + C4177 * C5821 + C4078 * C5924 +
              C4178 * C38050 + C4079 * C38111) *
                 C36999 +
             (C4176 * C5825 + C4077 * C5929 + C4177 * C5827 + C4078 * C5930 +
              C4178 * C38051 + C4079 * C38112) *
                 C93582) *
                C93737) *
               C2696 -
           (((C71472 + C71471 + C71470) * C93582 +
             (C71469 + C71468 + C71467) * C36999) *
                C93737 +
            ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
              C4176 * C815 + C4077 * C897) *
                 C93582 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C36999) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C2695 -
           ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
            (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
               C2696) *
              C1979 +
          (((C66517 + C66518 + C66519 + C66520 + C66521 + C66522) * C62191 +
            (C14162 * C31831 + C14163 * C31825 + C12148 * C31833 +
             C12147 * C31826 + (C188 * C12033 + C93662 * C12136) * C31835 +
             (C188 * C12034 + C93662 * C12137) * C31827) *
                C93737) *
               C2696 -
           ((C66522 + C66521 + C66520 + C66519 + C66518 + C66517) * C93737 +
            (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
             (C188 * C815 + C93662 * C897) * C31825 +
             (C188 * C807 + C93662 * C889) * C31831) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C36999 +
             (C188 * C114 + C93662 * C195) * C93582) *
                C72307 +
            (C73303 + C73304) * C72308 + C73313 * C72309 + C73314 * C72310) *
               C2695 -
           ((C73317 + C73318) * C72310 + (C73308 + C73307) * C72309 +
            (C73306 + C73305) * C72308 + (C73304 + C73303) * C72307) *
               C2696) *
              C1979 +
          (((C75075 + C75076) * C72307 + (C75077 + C75078) * C72308 +
            (C75085 + C75086) * C72309 +
            ((C188 * C41973 + C93662 * C42074) * C36999 +
             (C188 * C41974 + C93662 * C42075) * C93582) *
                C72310) *
               C2696 -
           ((C75086 + C75085) * C72310 + (C75078 + C75077) * C72309 +
            (C75076 + C75075) * C72308 +
            ((C188 * C815 + C93662 * C897) * C93582 +
             (C188 * C807 + C93662 * C889) * C36999) *
                C72307) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C2695 -
           (((C71587 + C71588) * C93582 + (C71589 + C71590) * C36999) * C4079 +
            ((C71591 + C71592) * C93582 + (C71593 + C71594) * C36999) * C4078 +
            ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93582 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C36999) *
                C4077) *
               C2696) *
              C1979 +
          ((((C71594 + C71593) * C36999 + (C71592 + C71591) * C93582) * C4077 +
            ((C71590 + C71589) * C36999 + (C71588 + C71587) * C93582) * C4078 +
            ((C62344 * C8615 + C62191 * C8843 + C62345 * C38050 +
              C93737 * C38163) *
                 C36999 +
             (C62344 * C8617 + C62191 * C8845 + C62345 * C38051 +
              C93737 * C38164) *
                 C93582) *
                C4079) *
               C2696 -
           (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
            ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
            ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C2695 -
           ((C65653 + C65654) * C31827 + (C65655 + C65656) * C31835 +
            (C65657 + C65658) * C31826 + (C65659 + C65660) * C31833 +
            (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C31825 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C31831) *
               C93662 * C2696) *
              C1979 +
          (((C62344 * C3409 + C62191 * C3565 + C62345 * C5819 +
             C93737 * C6009) *
                C31831 +
            (C62344 * C3413 + C62191 * C3569 + C62345 * C5825 +
             C93737 * C6015) *
                C31825 +
            (C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
             C93737 * C6010) *
                C31833 +
            (C62344 * C3414 + C62191 * C3570 + C62345 * C5826 +
             C93737 * C6016) *
                C31826 +
            (C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
             C93737 * C12248) *
                C31835 +
            (C62344 * C3415 + C62191 * C3571 + C62345 * C12034 +
             C93737 * C12249) *
                C31827) *
               C93662 * C2696 -
           ((C64681 + C64682) * C31827 + (C64683 + C64684) * C31835 +
            (C64685 + C64686) * C31826 + (C64687 + C64688) * C31833 +
            (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
                C31825 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C31831) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C36999 +
            (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
             C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
             C72310 * C11349) *
                C93582) *
               C93662 * C2695 -
           ((C72415 * C11108 + C72310 * C11350 + C72414 * C11107 +
             C72309 * C11349 + C72413 * C1397 + C72308 * C1545 +
             C72412 * C1396 + C72307 * C1544) *
                C93582 +
            (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
             C72309 * C11345 + C72413 * C1389 + C72308 * C1537 +
             C72412 * C1388 + C72307 * C1536) *
                C36999) *
               C93662 * C2696) *
              C1979 +
          (((C72412 * C3409 + C72307 * C3565 + C72413 * C5819 + C72308 * C6009 +
             C72414 * C14027 + C72309 * C14265 + C72415 * C41973 +
             C72310 * C42191) *
                C36999 +
            (C72412 * C3413 + C72307 * C3569 + C72413 * C5825 + C72308 * C6015 +
             C72414 * C14029 + C72309 * C14267 + C72415 * C41974 +
             C72310 * C42192) *
                C93582) *
               C93662 * C2696 -
           ((C72415 * C14029 + C72310 * C14267 + C72414 * C5825 +
             C72309 * C6015 + C72413 * C3413 + C72308 * C3569 + C72412 * C815 +
             C72307 * C963) *
                C93582 +
            (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
             C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
             C72307 * C955) *
                C36999) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C2695 -
           ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
            (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
               C2696) *
              C1979 +
          (((C71693 + C71694 + C71695 + C71696 + C71697 + C71698) * C62191 +
            (C41451 * C4176 + C41452 * C4077 + C41454 * C4177 + C41453 * C4078 +
             (C36999 * C38050 + C93582 * C38051) * C4178 +
             (C36999 * C38111 + C93582 * C38215) * C4079) *
                C93737) *
               C2696 -
           ((C71698 + C71697 + C71696 + C71695 + C71694 + C71693) * C93737 +
            (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
             C37700 * C4077 + C37699 * C4176) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C2695 -
           (((C63959 + C63960 + C63961) * C93662 +
             (C63962 + C63963 + C63964) * C188) *
                C93737 +
            ((C63958 + C63957 + C63956) * C93662 +
             (C63955 + C63954 + C63953) * C188) *
                C62191) *
               C2696) *
              C1979 +
          ((((C36438 + C36437 + C36436) * C188 +
             (C36435 + C36434 + C36433) * C93662) *
                C62191 +
            ((C31831 * C5819 + C31825 * C5825 + C31833 * C5820 +
              C31826 * C5826 + C31835 * C12033 + C31827 * C12034) *
                 C188 +
             (C31831 * C5923 + C31825 * C6095 + C31833 * C5925 +
              C31826 * C6096 + C31835 * C12136 + C31827 * C12366) *
                 C93662) *
                C93737) *
               C2696 -
           (((C36433 + C36434 + C36435) * C93662 +
             (C36436 + C36437 + C36438) * C188) *
                C93737 +
            ((C32947 + C32946 + C32945) * C93662 +
             (C32944 + C32943 + C32942) * C188) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C188 +
             (C36999 * C189 + C93582 * C362) * C93662) *
                C72307 +
            (C73422 + C73423) * C72308 + C73432 * C72309 + C73433 * C72310) *
               C2695 -
           ((C73436 + C73437) * C72310 + (C73427 + C73426) * C72309 +
            (C73425 + C73424) * C72308 + (C73423 + C73422) * C72307) *
               C2696) *
              C1979 +
          (((C75219 + C75220) * C72307 + (C75221 + C75222) * C72308 +
            (C75223 + C75224) * C72309 +
            ((C36999 * C41973 + C93582 * C41974) * C188 +
             (C36999 * C42074 + C93582 * C42267) * C93662) *
                C72310) *
               C2696 -
           ((C75224 + C75223) * C72310 + (C75222 + C75221) * C72309 +
            (C75220 + C75219) * C72308 +
            (C37700 * C93662 + C37699 * C188) * C72307) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C2695 -
           ((C69118 + C69119 + C69120) * C93582 * C93737 +
            (C69117 + C69116 + C69115) * C93582 * C62191) *
               C2696) *
              C1979 +
          (((C71812 + C71813 + C71814) * C93582 * C62191 +
            (C4449 * C5819 + C71803 + C71803 + C4077 * C6175 + C4450 * C5821 +
             C71804 + C71804 + C4078 * C6176 + C4451 * C38050 + C71805 +
             C71805 + C4079 * C38266) *
                C93582 * C93737) *
               C2696 -
           ((C71814 + C71813 + C71812) * C93582 * C93737 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C93582 * C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C2695 -
           ((C64042 + C64043 + C64044) * C93737 +
            (C64041 + C64040 + C64039) * C62191) *
               C2696) *
              C1979 +
          (((C66817 + C66818 + C66819) * C62191 +
            (C14495 * C31825 + C12476 * C31826 +
             (C418 * C12033 + C12471 + C12471 + C93662 * C12465) * C31827) *
                C93737) *
               C2696 -
           ((C66819 + C66818 + C66817) * C93737 +
            (C2311 * C31827 + C2312 * C31826 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
            C73489 * C72308 + C73490 * C72309 + C73491 * C72310) *
               C2695 -
           (C73498 * C72310 + C73491 * C72309 + C73490 * C72308 +
            C73489 * C72307) *
               C2696) *
              C1979 +
          ((C75291 * C72307 + C75292 * C72308 + C75299 * C72309 +
            (C418 * C41973 + C75295 + C75295 + C93662 * C42381) * C93582 *
                C72310) *
               C2696 -
           (C75299 * C72310 + C75292 * C72309 + C75291 * C72308 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93582 * C72307) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C2695 -
           ((C71921 + C71922) * C4079 + (C71589 + C71590) * C4178 +
            (C71923 + C71924) * C4078 + (C71593 + C71594) * C4177 +
            (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C4077 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C4176) *
               C93582 * C2696) *
              C1979 +
          (((C71594 + C71593) * C4176 + (C71924 + C71923) * C4077 +
            (C71590 + C71589) * C4177 + (C71922 + C71921) * C4078 +
            (C62344 * C8615 + C62191 * C8843 + C62345 * C38050 +
             C93737 * C38163) *
                C4178 +
            (C62344 * C8741 + C62191 * C9195 + C62345 * C38111 +
             C93737 * C38325) *
                C4079) *
               C93582 * C2696 -
           ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
            (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
            (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C2695 -
           (((C65984 + C65985) * C93662 + (C65655 + C65656) * C188) * C31827 +
            ((C65986 + C65987) * C93662 + (C65659 + C65660) * C188) * C31826 +
            ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93662 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C188) *
                C31825) *
               C2696) *
              C1979 +
          ((((C62344 * C3409 + C62191 * C3565 + C62345 * C5819 +
              C93737 * C6009) *
                 C188 +
             (C62344 * C3491 + C62191 * C3783 + C62345 * C5923 +
              C93737 * C6267) *
                 C93662) *
                C31825 +
            ((C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
              C93737 * C6010) *
                 C188 +
             (C62344 * C3492 + C62191 * C3784 + C62345 * C5925 +
              C93737 * C6269) *
                 C93662) *
                C31826 +
            ((C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
              C93737 * C12248) *
                 C188 +
             (C62344 * C3493 + C62191 * C3785 + C62345 * C12136 +
              C93737 * C12575) *
                 C93662) *
                C31827) *
               C2696 -
           (((C64991 + C64992) * C93662 + (C64683 + C64684) * C188) * C31827 +
            ((C64993 + C64994) * C93662 + (C64687 + C64688) * C188) * C31826 +
            ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 +
              C62191 * C1145) *
                 C93662 +
             (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                 C188) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C188 +
            (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
             C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
             C72310 * C11655) *
                C93662) *
               C93582 * C2695 -
           ((C72415 * C11225 + C72310 * C11656 + C72414 * C11224 +
             C72309 * C11655 + C72413 * C1471 + C72308 * C1727 +
             C72412 * C1470 + C72307 * C1726) *
                C93662 +
            (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
             C72309 * C11345 + C72413 * C1389 + C72308 * C1537 +
             C72412 * C1388 + C72307 * C1536) *
                C188) *
               C93582 * C2696) *
              C1979 +
          (((C72412 * C3409 + C72307 * C3565 + C72413 * C5819 + C72308 * C6009 +
             C72414 * C14027 + C72309 * C14265 + C72415 * C41973 +
             C72310 * C42191) *
                C188 +
            (C72412 * C3491 + C72307 * C3783 + C72413 * C5923 + C72308 * C6267 +
             C72414 * C14143 + C72309 * C14595 + C72415 * C42074 +
             C72310 * C42492) *
                C93662) *
               C93582 * C2696 -
           ((C72415 * C14143 + C72310 * C14595 + C72414 * C5923 +
             C72309 * C6267 + C72413 * C3491 + C72308 * C3783 + C72412 * C889 +
             C72307 * C1145) *
                C93662 +
            (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
             C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
             C72307 * C955) *
                C188) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C2695 -
           ((C72023 + C72024 + C72025 + C72026) * C4079 +
            (C72027 + C72028 + C72029 + C72030) * C4078 +
            (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
             C42289 * C62344) *
                C4077) *
               C2696) *
              C1979 +
          (((C72030 + C72029 + C72028 + C72027) * C4077 +
            (C72026 + C72025 + C72024 + C72023) * C4078 +
            (C40055 * C62344 + C40277 * C62191 +
             (C36999 * C38050 + C93582 * C38051) * C62345 +
             (C36999 * C38163 + C93582 * C38376) * C93737) *
                C4079) *
               C2696 -
           ((C68480 + C68481 + C68482 + C68483) * C4079 +
            (C68479 + C68478 + C68477 + C68476) * C4078 +
            (C68475 + C68474 + C68473 + C68472) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C2695 -
           ((C64208 + C64209 + C64210) * C93737 +
            (C63962 + C63963 + C63964) * C62345 +
            (C64207 + C64206 + C64205) * C62191 +
            (C63955 + C63954 + C63953) * C62344) *
               C93662 * C2696) *
              C1979 +
          (((C36438 + C36437 + C36436) * C62344 +
            (C36747 + C36746 + C36745) * C62191 +
            (C31831 * C5819 + C31825 * C5825 + C31833 * C5820 + C31826 * C5826 +
             C31835 * C12033 + C31827 * C12034) *
                C62345 +
            (C31831 * C6009 + C31825 * C6347 + C31833 * C6010 + C31826 * C6348 +
             C31835 * C12248 + C31827 * C12683) *
                C93737) *
               C93662 * C2696 -
           ((C36745 + C36746 + C36747) * C93737 +
            (C36436 + C36437 + C36438) * C62345 +
            (C33202 + C33201 + C33200) * C62191 +
            (C32944 + C32943 + C32942) * C62344) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C72412 +
            (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
            C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
            C42296 * C72415 + C42580 * C72310) *
               C93662 * C2695 -
           (C73603 * C72310 + C73435 * C72415 + C42580 * C72309 +
            C42296 * C72414 + C42578 * C72308 + C42291 * C72413 +
            C42577 * C72307 + C42289 * C72412) *
               C93662 * C2696) *
              C1979 +
          ((C40059 * C72412 + C40279 * C72307 + C41451 * C72413 +
            C41715 * C72308 + C42294 * C72414 + C42579 * C72309 +
            (C36999 * C41973 + C93582 * C41974) * C72415 +
            (C36999 * C42191 + C93582 * C42567) * C72310) *
               C93662 * C2696 -
           (C42579 * C72310 + C42294 * C72415 + C41715 * C72309 +
            C41451 * C72414 + C40279 * C72308 + C40059 * C72413 +
            C37883 * C72307 + C37699 * C72412) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C2695 -
           ((C69358 + C69359 + C69360) * C93737 +
            (C68851 + C68852 + C68853) * C62345 +
            (C69357 + C69356 + C69355) * C62191 +
            (C68844 + C68843 + C68842) * C62344) *
               C93582 * C2696) *
              C1979 +
          (((C71467 + C71468 + C71469) * C62344 +
            (C72135 + C72136 + C72137) * C62191 +
            (C4176 * C5819 + C4077 * C5923 + C4177 * C5821 + C4078 * C5924 +
             C4178 * C38050 + C4079 * C38111) *
                C62345 +
            (C4176 * C6009 + C4077 * C6427 + C4177 * C6011 + C4078 * C6428 +
             C4178 * C38163 + C4079 * C38427) *
                C93737) *
               C93582 * C2696 -
           ((C72137 + C72136 + C72135) * C93737 +
            (C71469 + C71468 + C71467) * C62345 +
            (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C62191 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C62344) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C2695 -
           ((C66193 + C66194 + C66195 + C66196) * C31827 +
            (C66197 + C66198 + C66199 + C66200) * C31826 +
            (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
             C11252 * C62344) *
                C31825) *
               C2696) *
              C1979 +
          (((C14160 * C62344 + C14808 * C62191 + C14162 * C62345 +
             C14809 * C93737) *
                C31825 +
            (C12150 * C62344 + C12793 * C62191 + C12148 * C62345 +
             C12792 * C93737) *
                C31826 +
            (C22578 * C62344 + C23217 * C62191 +
             (C188 * C12033 + C93662 * C12136) * C62345 +
             (C188 * C12248 + C93662 * C12782) * C93737) *
                C31827) *
               C2696 -
           ((C65191 + C65192 + C65193 + C65194) * C31827 +
            (C65195 + C65196 + C65197 + C65198) * C31826 +
            (C14808 * C93737 + C14160 * C62345 +
             (C188 * C955 + C93662 * C1261) * C62191 +
             (C188 * C807 + C93662 * C889) * C62344) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C72412 +
            (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
            C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
            C11259 * C72415 + C11845 * C72310) *
               C93582 * C2695 -
           (C73657 * C72310 + C73316 * C72415 + C11845 * C72309 +
            C11259 * C72414 + C11843 * C72308 + C11254 * C72413 +
            C11842 * C72307 + C11252 * C72412) *
               C93582 * C2696) *
              C1979 +
          ((C14160 * C72412 + C14808 * C72307 + C14162 * C72413 +
            C14809 * C72308 + C75083 * C72414 + C75500 * C72309 +
            (C188 * C41973 + C93662 * C42074) * C72415 +
            (C188 * C42191 + C93662 * C42654) * C72310) *
               C93582 * C2696 -
           (C75500 * C72310 + C75083 * C72415 + C14809 * C72309 +
            C14162 * C72414 + C14808 * C72308 + C14160 * C72413 +
            (C188 * C955 + C93662 * C1261) * C72307 +
            (C188 * C807 + C93662 * C889) * C72412) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C2695 -
                     ((C72254 + C72255) * C4079 + (C72256 + C72257) * C4078 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C4077) *
                         C93582 * C2696) *
                        C1979 +
                    (((C72257 + C72256) * C4077 + (C72255 + C72254) * C4078 +
                      (C62865 * C8615 + C72244 + C72244 + C62191 * C9513 +
                       C62866 * C38050 + C72245 + C72245 + C93737 * C38478) *
                          C4079) *
                         C93582 * C2696 -
                     ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                      (C68664 + C68663) * C4077) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C2695 -
                     ((C66317 + C66318) * C93662 * C31827 +
                      (C66319 + C66320) * C93662 * C31826 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C93662 * C31825) *
                         C2696) *
                        C1979 +
                    (((C62865 * C3409 + C67212 + C67212 + C62191 * C3993 +
                       C62866 * C5819 + C67213 + C67213 + C93737 * C6507) *
                          C93662 * C31825 +
                      (C62865 * C3410 + C67214 + C67214 + C62191 * C3994 +
                       C62866 * C5820 + C67215 + C67215 + C93737 * C6509) *
                          C93662 * C31826 +
                      (C62865 * C3411 + C67216 + C67216 + C62191 * C3995 +
                       C62866 * C12033 + C67217 + C67217 + C93737 * C12893) *
                          C93662 * C31827) *
                         C2696 -
                     ((C65315 + C65316) * C93662 * C31827 +
                      (C65317 + C65318) * C93662 * C31826 +
                      (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                       C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                          C93662 * C31825) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C72716 * C108 + C72721 + C72721 + C72307 * C714 +
                      C72717 * C1388 + C72722 + C72722 + C72308 * C1900 +
                      C72718 * C1389 + C72723 + C72723 + C72309 * C1901 +
                      C72719 * C11103 + C72724 + C72724 + C72310 * C11920) *
                         C93662 * C93582 * C2695 -
                     (C72719 * C11104 + C73709 + C73709 + C72310 * C11921 +
                      C72718 * C11103 + C73710 + C73710 + C72309 * C11920 +
                      C72717 * C1389 + C73711 + C73711 + C72308 * C1901 +
                      C72716 * C1388 + C73712 + C73712 + C72307 * C1900) *
                         C93662 * C93582 * C2696) *
                        C1979 +
                    ((C72716 * C3409 + C75567 + C75567 + C72307 * C3993 +
                      C72717 * C5819 + C75568 + C75568 + C72308 * C6507 +
                      C72718 * C14027 + C75569 + C75569 + C72309 * C14907 +
                      C72719 * C41973 + C75570 + C75570 + C72310 * C42748) *
                         C93662 * C93582 * C2696 -
                     (C72719 * C14027 + C73184 + C73184 + C72310 * C14907 +
                      C72718 * C5819 + C73185 + C73185 + C72309 * C6507 +
                      C72717 * C3409 + C73186 + C73186 + C72308 * C3993 +
                      C72716 * C807 + C73187 + C73187 + C72307 * C1319) *
                         C93662 * C93582 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                   C62191 +
               (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 +
                C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
                C31834 * C1386 + C33431 + C33431 + C31827 * C1402) *
                   C93737) *
                  C93662 * C93635 * C93621 * C97 -
              ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 +
                C31832 * C1386 + C35146 + C35146 + C31826 * C1402 +
                C31830 * C1387 + C35145 + C35145 + C31825 * C1403) *
                   C93737 +
               (C31834 * C111 + C31846 + C31846 + C31827 * C123 +
                C31832 * C110 + C31847 + C31847 + C31826 * C122 +
                C31830 * C109 + C31848 + C31848 + C31825 * C121) *
                   C62191) *
                  C93662 * C93635 * C93621 * C98 +
              ((C31830 * C110 + C31849 + C31849 + C31825 * C122 +
                C31832 * C111 + C31850 + C31850 + C31826 * C123 +
                C31834 * C112 + C31851 + C31851 + C31827 * C124) *
                   C62191 +
               (C31830 * C1386 + C62194 + C62194 + C31825 * C1402 +
                C31832 * C1385 + C62195 + C62195 + C31826 * C1401 +
                C31834 * C2697 + C62196 + C62196 + C31827 * C2699) *
                   C93737) *
                  C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C31830 * C108 + C31837 + C31837 + C31825 * C120 +
                C31832 * C109 + C31838 + C31838 + C31826 * C121 +
                C31834 * C110 + C31839 + C31839 + C31827 * C122) *
                   C62191 +
               (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 +
                C31832 * C1387 + C33432 + C33432 + C31826 * C1403 +
                C31834 * C1386 + C33431 + C33431 + C31827 * C1402) *
                   C93737) *
                  C93662 * C93635 * C800 -
              ((C36118 + C36119 + C36120) * C93737 +
               (C32680 + C32679 + C32678) * C62191) *
                  C93662 * C93635 * C801 +
              ((C32683 + C32682 + C32681) * C62191 +
               (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 +
                C31832 * C5817 + C36110 + C36110 + C31826 * C5829 +
                C31834 * C7631 + C36111 + C36111 + C31827 * C7633) *
                   C93737) *
                  C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C63689 + C63690 + C63691) * C93737) *
              C93662 * C1382 -
          ((C63692 + C63693 + C63694) * C93737 +
           (C63691 + C63690 + C63689) * C62191) *
              C93662 * C1383 +
          ((C63694 + C63693 + C63692) * C62191 +
           (C31830 * C11103 + C63674 + C63674 + C31825 * C11111 +
            C31832 * C11102 + C63675 + C63675 + C31826 * C11110 +
            C31834 * C13010 + C63676 + C63676 + C31827 * C13012) *
               C93737) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C37504 * C62191 + C39823 * C93737) * C4078 +
           (C37505 * C62191 + C39822 * C93737) * C4079) *
              C93635 * C93621 * C97 -
          ((C59452 * C93737 + C38561 * C62191) * C4079 +
           (C42861 * C93737 + C38560 * C62191) * C4078 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C62191 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C4077 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C62191 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C4078 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C62191 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C93635 * C800 -
          ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
           (C67959 + C67958) * C4077) *
              C93635 * C801 +
          (C67964 * C4077 + (C67963 + C67962) * C4078 +
           (C37507 * C62191 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C1382 -
          ((C41182 * C93737 + C39822 * C62191) * C4079 +
           (C41181 * C93737 + C39823 * C62191) * C4078 +
           (C41998 * C93737 + C41997 * C62191) * C4077) *
              C1383 +
          ((C41998 * C62191 + C42000 * C93737) * C4077 +
           (C41181 * C62191 + C41999 * C93737) * C4078 +
           (C41182 * C62191 +
            (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C93737) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
           C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
              C93662 * C93635 * C93621 * C97 -
          ((C36998 * C11102 + C43777 + C43777 + C93582 * C11110) * C72310 +
           C43784 * C72309 + C43783 * C72308 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C72307) *
              C93662 * C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C72307 +
           (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C72308 +
           (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C72309 +
           (C36998 * C13010 + C72312 + C72312 + C93582 * C13012) * C72310) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
           C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
              C93662 * C93635 * C800 -
          (C41999 * C72310 + C41181 * C72309 + C39823 * C72308 +
           C37504 * C72307) *
              C93662 * C93635 * C801 +
          (C37505 * C72307 + C39822 * C72308 + C41182 * C72309 +
           (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C72310) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
           C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
              C93662 * C1382 -
          (C73250 * C72310 + C42000 * C72309 + C41998 * C72308 +
           C41997 * C72307) *
              C93662 * C1383 +
          (C41998 * C72307 + C42000 * C72308 + C73250 * C72309 +
           (C36998 * C73241 + C73247 + C73247 + C93582 * C73243) * C72310) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C31831 +
                (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
                C219 * C31826 + C220 * C31835 + C221 * C31827) *
                   C62191 +
               (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
                C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
                   C93737) *
                  C93635 * C93621 * C97 -
              ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 +
                C2788 * C31833 + C2789 * C31825 + C2790 * C31831) *
                   C93737 +
               (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
                C219 * C31825 + C218 * C31831) *
                   C62191) *
                  C93635 * C93621 * C98 +
              ((C220 * C31831 + C221 * C31825 + C222 * C31833 + C223 * C31826 +
                C225 * C31835 + C224 * C31827) *
                   C62191 +
               (C2788 * C31831 + C2787 * C31825 + C2786 * C31833 +
                C2785 * C31826 + (C188 * C2697 + C93662 * C2770) * C31835 +
                (C188 * C2698 + C93662 * C2771) * C31827) *
                   C93737) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C31831 +
                (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
                C219 * C31826 + C220 * C31835 + C221 * C31827) *
                   C62191 +
               (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
                C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
                   C93737) *
                  C93635 * C800 -
              ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
                C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
                   C93737 +
               (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 +
                C2076 * C31833 + (C188 * C815 + C93662 * C897) * C31825 +
                (C188 * C807 + C93662 * C889) * C31831) *
                   C62191) *
                  C93635 * C801 +
              (((C188 * C808 + C93662 * C890) * C31831 +
                (C188 * C816 + C93662 * C898) * C31825 +
                (C188 * C809 + C93662 * C891) * C31833 +
                (C188 * C817 + C93662 * C899) * C31826 +
                (C188 * C810 + C93662 * C892) * C31835 +
                (C188 * C818 + C93662 * C900) * C31827) *
                   C62191 +
               ((C188 * C5818 + C93662 * C5922) * C31831 +
                (C188 * C5824 + C93662 * C5928) * C31825 +
                (C188 * C5817 + C93662 * C5921) * C31833 +
                (C188 * C5823 + C93662 * C5927) * C31826 +
                (C188 * C7631 + C93662 * C7738) * C31835 +
                (C188 * C7632 + C93662 * C7739) * C31827) *
                   C93737) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
              C1382 -
          ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
           (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
              C1383 +
          ((C63780 + C63779 + C63778 + C63777 + C63776 + C63775) * C62191 +
           (C11259 * C31831 + C11258 * C31825 + C11257 * C31833 +
            C11256 * C31826 + (C188 * C13010 + C93662 * C13133) * C31835 +
            (C188 * C13011 + C93662 * C13134) * C31827) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C7753 + C7754 + C7755) * C93582 +
            (C7756 + C7757 + C7758) * C36999) *
               C93737 +
           ((C4209 + C4208 + C4207) * C93582 +
            (C4206 + C4205 + C4204) * C36999) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C36999 +
            (C4212 + C4211 + C4210) * C93582) *
               C62191 +
           ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C36999 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93582) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C800 -
          (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
             C4176 * C3413 + C4077 * C3495) *
                C93582 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C36999) *
               C93737 +
           ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C93582 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C36999) *
               C62191) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C36999 +
            (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
             C4178 * C4922 + C4079 * C5044) *
                C93582) *
               C62191 +
           ((C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
             C4178 * C39804 + C4079 * C39892) *
                C36999 +
            (C4176 * C5824 + C4077 * C5928 + C4177 * C8617 + C4078 * C8743 +
             C4178 * C39805 + C4079 * C39893) *
                C93582) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C68842 + C68843 + C68844) * C36999 +
            (C68845 + C68846 + C68847) * C93582) *
               C93737) *
              C1382 -
          (((C68848 + C68849 + C68850) * C93582 +
            (C68851 + C68852 + C68853) * C36999) *
               C93737 +
           ((C68847 + C68846 + C68845) * C93582 +
            (C68844 + C68843 + C68842) * C36999) *
               C62191) *
              C1383 +
          (((C68853 + C68852 + C68851) * C36999 +
            (C68850 + C68849 + C68848) * C93582) *
               C62191 +
           ((C4176 * C11103 + C4077 * C11224 + C4177 * C14027 + C4078 * C14143 +
             C4178 * C44722 + C4079 * C44827) *
                C36999 +
            (C4176 * C11107 + C4077 * C11228 + C4177 * C14029 + C4078 * C14145 +
             C4178 * C44723 + C4079 * C44828) *
                C93582) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C188 * C108 + C93662 * C189) * C36999 +
                                (C188 * C114 + C93662 * C195) * C93582) *
                                   C72307 +
                               (C11252 * C36999 + C11253 * C93582) * C72308 +
                               (C11254 * C36999 + C11255 * C93582) * C72309 +
                               (C11259 * C36999 + C11258 * C93582) * C72310) *
                                  C93635 * C93621 * C97 -
                              ((C11256 * C93582 + C11257 * C36999) * C72310 +
                               (C9694 * C93582 + C9693 * C36999) * C72309 +
                               (C2789 * C93582 + C2790 * C36999) * C72308 +
                               (C219 * C93582 + C218 * C36999) * C72307) *
                                  C93635 * C93621 * C98 +
                              ((C220 * C36999 + C221 * C93582) * C72307 +
                               (C2788 * C36999 + C2787 * C93582) * C72308 +
                               (C9696 * C36999 + C9695 * C93582) * C72309 +
                               ((C188 * C13010 + C93662 * C13133) * C36999 +
                                (C188 * C13011 + C93662 * C13134) * C93582) *
                                   C72310) *
                                  C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C36999 +
            (C188 * C114 + C93662 * C195) * C93582) *
               C72307 +
           (C11252 * C36999 + C11253 * C93582) * C72308 +
           (C11254 * C36999 + C11255 * C93582) * C72309 +
           (C11259 * C36999 + C11258 * C93582) * C72310) *
              C93635 * C800 -
          (((C188 * C14029 + C93662 * C14145) * C93582 +
            (C188 * C14027 + C93662 * C14143) * C36999) *
               C72310 +
           (C14163 * C93582 + C14162 * C36999) * C72309 +
           (C14161 * C93582 + C14160 * C36999) * C72308 +
           ((C188 * C815 + C93662 * C897) * C93582 +
            (C188 * C807 + C93662 * C889) * C36999) *
               C72307) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C36999 +
            (C188 * C816 + C93662 * C898) * C93582) *
               C72307 +
           ((C188 * C5818 + C93662 * C5922) * C36999 +
            (C188 * C5824 + C93662 * C5928) * C93582) *
               C72308 +
           ((C188 * C5821 + C93662 * C5924) * C36999 +
            (C188 * C5827 + C93662 * C5930) * C93582) *
               C72309 +
           ((C188 * C44722 + C93662 * C44827) * C36999 +
            (C188 * C44723 + C93662 * C44828) * C93582) *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C36999 +
            (C188 * C114 + C93662 * C195) * C93582) *
               C72307 +
           (C73303 + C73304) * C72308 + C73313 * C72309 + C73314 * C72310) *
              C1382 -
          ((C73317 + C73318) * C72310 + (C73308 + C73307) * C72309 +
           (C73306 + C73305) * C72308 + (C73304 + C73303) * C72307) *
              C1383 +
          (C73313 * C72307 + C73314 * C72308 + (C73318 + C73317) * C72309 +
           ((C188 * C73241 + C93662 * C73300) * C36999 +
            (C188 * C73242 + C93662 * C73301) * C93582) *
               C72310) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C62344 * C108 + C62191 * C276 + C62345 * C1388 +
                C93737 * C1536) *
                   C31831 +
               (C62344 * C114 + C62191 * C282 + C62345 * C1396 +
                C93737 * C1544) *
                   C31825 +
               (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
               C62383 * C31835 + C62384 * C31827) *
                  C93662 * C93635 * C93621 * C97 -
              ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
               (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
               (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
                  C93662 * C93635 * C93621 * C98 +
              (C62383 * C31831 + C62384 * C31825 + (C62382 + C62381) * C31833 +
               (C62380 + C62379) * C31826 +
               (C62344 * C112 + C62191 * C280 + C62345 * C2697 +
                C93737 * C2856) *
                   C31835 +
               (C62344 * C118 + C62191 * C286 + C62345 * C2698 +
                C93737 * C2857) *
                   C31827) *
                  C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C62344 * C108 + C62191 * C276 + C62345 * C1388 +
                C93737 * C1536) *
                   C31831 +
               (C62344 * C114 + C62191 * C282 + C62345 * C1396 +
                C93737 * C1544) *
                   C31825 +
               (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
               C62383 * C31835 + C62384 * C31827) *
                  C93662 * C93635 * C800 -
              ((C62345 * C3415 + C93737 * C3571 + C62344 * C813 +
                C62191 * C961) *
                   C31827 +
               (C62345 * C3411 + C93737 * C3567 + C62344 * C805 +
                C62191 * C953) *
                   C31835 +
               (C62345 * C3414 + C93737 * C3570 + C62344 * C814 +
                C62191 * C962) *
                   C31826 +
               (C62345 * C3410 + C93737 * C3566 + C62344 * C806 +
                C62191 * C954) *
                   C31833 +
               (C62345 * C3413 + C93737 * C3569 + C62344 * C815 +
                C62191 * C963) *
                   C31825 +
               (C62345 * C3409 + C93737 * C3565 + C62344 * C807 +
                C62191 * C955) *
                   C31831) *
                  C93662 * C93635 * C801 +
              ((C62344 * C808 + C62191 * C956 + C62345 * C5818 +
                C93737 * C6008) *
                   C31831 +
               (C62344 * C816 + C62191 * C964 + C62345 * C5824 +
                C93737 * C6014) *
                   C31825 +
               (C62344 * C809 + C62191 * C957 + C62345 * C5817 +
                C93737 * C6007) *
                   C31833 +
               (C62344 * C817 + C62191 * C965 + C62345 * C5823 +
                C93737 * C6013) *
                   C31826 +
               (C62344 * C810 + C62191 * C958 + C62345 * C7631 +
                C93737 * C7856) *
                   C31835 +
               (C62344 * C818 + C62191 * C966 + C62345 * C7632 +
                C93737 * C7857) *
                   C31827) *
                  C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C1382 -
          ((C62345 * C1399 + C93737 * C1547 + C62344 * C1394 + C62191 * C1542) *
               C31827 +
           (C62345 * C1391 + C93737 * C1539 + C62344 * C1386 + C62191 * C1534) *
               C31835 +
           (C62345 * C1398 + C93737 * C1546 + C62344 * C1395 + C62191 * C1543) *
               C31826 +
           (C62345 * C1390 + C93737 * C1538 + C62344 * C1387 + C62191 * C1535) *
               C31833 +
           (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 + C62191 * C1544) *
               C31825 +
           (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 + C62191 * C1536) *
               C31831) *
              C93662 * C1383 +
          ((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
            C93737 * C11345) *
               C31831 +
           (C62344 * C1397 + C62191 * C1545 + C62345 * C11107 +
            C93737 * C11349) *
               C31825 +
           (C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
            C93737 * C11344) *
               C31833 +
           (C62344 * C1398 + C62191 * C1546 + C62345 * C11106 +
            C93737 * C11348) *
               C31826 +
           (C62344 * C1391 + C62191 * C1539 + C62345 * C13010 +
            C93737 * C13241) *
               C31835 +
           (C62344 * C1399 + C62191 * C1547 + C62345 * C13011 +
            C93737 * C13242) *
               C31827) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
                C36999 +
            (C62344 * C815 + C62191 * C963 + C62345 * C3413 + C93737 * C3569) *
                C93582) *
               C4078 +
           ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C36999 +
            (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
                C93582) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C62345 * C5823 + C93737 * C6013 + C62344 * C817 + C62191 * C965) *
                C93582 +
            (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
                C36999) *
               C4079 +
           ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
           ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
              C93635 * C93621 * C98 +
          ((C62383 * C36999 + C62384 * C93582) * C4077 +
           ((C64684 + C64683) * C36999 + (C64682 + C64681) * C93582) * C4078 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C36999 +
            (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
                C93582) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C93635 * C800 -
          (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
           ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
           ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
              C93635 * C801 +
          (C68153 * C4077 +
           ((C68148 + C68147) * C36999 + (C68146 + C68145) * C93582) * C4078 +
           ((C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C62344 * C4922 + C62191 * C5126 + C62345 * C39805 +
             C93737 * C39961) *
                C93582) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C1382 -
          (((C62345 * C5827 + C93737 * C6017 + C62344 * C5824 +
             C62191 * C6014) *
                C93582 +
            (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
             C62191 * C6008) *
                C36999) *
               C4079 +
           ((C62345 * C5825 + C93737 * C6015 + C62344 * C3413 +
             C62191 * C3569) *
                C93582 +
            (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
             C62191 * C3565) *
                C36999) *
               C4078 +
           ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C93582 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C36999) *
               C4077) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C36999 +
            (C62344 * C1397 + C62191 * C1545 + C62345 * C11107 +
             C93737 * C11349) *
                C93582) *
               C4077 +
           ((C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
             C93737 * C14265) *
                C36999 +
            (C62344 * C5825 + C62191 * C6015 + C62345 * C14029 +
             C93737 * C14267) *
                C93582) *
               C4078 +
           ((C62344 * C5821 + C62191 * C6011 + C62345 * C44722 +
             C93737 * C44951) *
                C36999 +
            (C62344 * C5827 + C62191 * C6017 + C62345 * C44723 +
             C93737 * C44952) *
                C93582) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C36999 +
           (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
            C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
            C72310 * C11349) *
               C93582) *
              C93662 * C93635 * C93621 * C97 -
          ((C72415 * C11106 + C72310 * C11348 + C72414 * C1398 +
            C72309 * C1546 + C72413 * C1395 + C72308 * C1543 + C72412 * C115 +
            C72307 * C283) *
               C93582 +
           (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
            C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
            C72307 * C277) *
               C36999) *
              C93662 * C93635 * C93621 * C98 +
          ((C72412 * C110 + C72307 * C278 + C72413 * C1386 + C72308 * C1534 +
            C72414 * C1391 + C72309 * C1539 + C72415 * C13010 +
            C72310 * C13241) *
               C36999 +
           (C72412 * C116 + C72307 * C284 + C72413 * C1394 + C72308 * C1542 +
            C72414 * C1399 + C72309 * C1547 + C72415 * C13011 +
            C72310 * C13242) *
               C93582) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C36999 +
           (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
            C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
            C72310 * C11349) *
               C93582) *
              C93662 * C93635 * C800 -
          ((C72415 * C14029 + C72310 * C14267 + C72414 * C5825 +
            C72309 * C6015 + C72413 * C3413 + C72308 * C3569 + C72412 * C815 +
            C72307 * C963) *
               C93582 +
           (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
            C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
            C72307 * C955) *
               C36999) *
              C93662 * C93635 * C801 +
          ((C72412 * C808 + C72307 * C956 + C72413 * C5818 + C72308 * C6008 +
            C72414 * C5821 + C72309 * C6011 + C72415 * C44722 +
            C72310 * C44951) *
               C36999 +
           (C72412 * C816 + C72307 * C964 + C72413 * C5824 + C72308 * C6014 +
            C72414 * C5827 + C72309 * C6017 + C72415 * C44723 +
            C72310 * C44952) *
               C93582) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C36999 +
           (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
            C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
            C72310 * C11349) *
               C93582) *
              C93662 * C1382 -
          ((C72415 * C11108 + C72310 * C11350 + C72414 * C11107 +
            C72309 * C11349 + C72413 * C1397 + C72308 * C1545 + C72412 * C1396 +
            C72307 * C1544) *
               C93582 +
           (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
            C72309 * C11345 + C72413 * C1389 + C72308 * C1537 + C72412 * C1388 +
            C72307 * C1536) *
               C36999) *
              C93662 * C1383 +
          ((C72412 * C1389 + C72307 * C1537 + C72413 * C11103 +
            C72308 * C11345 + C72414 * C11104 + C72309 * C11346 +
            C72415 * C73241 + C72310 * C73368) *
               C36999 +
           (C72412 * C1397 + C72307 * C1545 + C72413 * C11107 +
            C72308 * C11349 + C72414 * C11108 + C72309 * C11350 +
            C72415 * C73242 + C72310 * C73369) *
               C93582) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                 C31835 * C110 + C31827 * C116) *
                    C188 +
                (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
                 C31835 * C191 + C31827 * C364) *
                    C93662) *
                   C62191 +
               ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 +
                 C31826 * C1395 + C31835 * C1386 + C31827 * C1394) *
                    C188 +
                (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 +
                 C31826 * C1601 + C31835 * C1468 + C31827 * C1600) *
                    C93662) *
                   C93737) *
                  C93635 * C93621 * C97 -
              (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 +
                 C31826 * C1600 + C31831 * C1469 + C31825 * C1601) *
                    C93662 +
                (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 +
                 C31826 * C1394 + C31831 * C1387 + C31825 * C1395) *
                    C188) *
                   C93737 +
               ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
                 C31831 * C190 + C31825 * C363) *
                    C93662 +
                (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
                 C31831 * C109 + C31825 * C115) *
                    C188) *
                   C62191) *
                  C93635 * C93621 * C98 +
              (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
                 C31835 * C112 + C31827 * C118) *
                    C188 +
                (C31831 * C191 + C31825 * C364 + C31833 * C192 + C31826 * C365 +
                 C31835 * C193 + C31827 * C366) *
                    C93662) *
                   C62191 +
               ((C31831 * C1386 + C31825 * C1394 + C31833 * C1385 +
                 C31826 * C1393 + C31835 * C2697 + C31827 * C2698) *
                    C188 +
                (C31831 * C1468 + C31825 * C1600 + C31833 * C1467 +
                 C31826 * C1599 + C31835 * C2770 + C31827 * C2942) *
                    C93662) *
                   C93737) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                 C31835 * C110 + C31827 * C116) *
                    C188 +
                (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
                 C31835 * C191 + C31827 * C364) *
                    C93662) *
                   C62191 +
               ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 +
                 C31826 * C1395 + C31835 * C1386 + C31827 * C1394) *
                    C188 +
                (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 +
                 C31826 * C1601 + C31835 * C1468 + C31827 * C1600) *
                    C93662) *
                   C93737) *
                  C93635 * C800 -
              (((C36433 + C36434 + C36435) * C93662 +
                (C36436 + C36437 + C36438) * C188) *
                   C93737 +
               ((C32947 + C32946 + C32945) * C93662 +
                (C32944 + C32943 + C32942) * C188) *
                   C62191) *
                  C93635 * C801 +
              (((C32953 + C32952 + C32951) * C188 +
                (C32950 + C32949 + C32948) * C93662) *
                   C62191 +
               ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 +
                 C31826 * C5823 + C31835 * C7631 + C31827 * C7632) *
                    C188 +
                (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 +
                 C31826 * C6093 + C31835 * C7738 + C31827 * C7968) *
                    C93662) *
                   C93737) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C63953 + C63954 + C63955) * C188 +
            (C63956 + C63957 + C63958) * C93662) *
               C93737) *
              C1382 -
          (((C63959 + C63960 + C63961) * C93662 +
            (C63962 + C63963 + C63964) * C188) *
               C93737 +
           ((C63958 + C63957 + C63956) * C93662 +
            (C63955 + C63954 + C63953) * C188) *
               C62191) *
              C1383 +
          (((C63964 + C63963 + C63962) * C188 +
            (C63961 + C63960 + C63959) * C93662) *
               C62191 +
           ((C31831 * C11103 + C31825 * C11107 + C31833 * C11102 +
             C31826 * C11106 + C31835 * C13010 + C31827 * C13011) *
                C188 +
            (C31831 * C11224 + C31825 * C11427 + C31833 * C11223 +
             C31826 * C11426 + C31835 * C13133 + C31827 * C13359) *
                C93662) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
            C44104 * C4077 + C44103 * C4176) *
               C93737 +
           (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
            (C36999 * C190 + C93582 * C363) * C4077 +
            (C36999 * C109 + C93582 * C115) * C4176) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C4176 +
            (C36999 * C191 + C93582 * C364) * C4077 +
            (C36999 * C805 + C93582 * C813) * C4177 +
            (C36999 * C887 + C93582 * C1019) * C4078 +
            (C36999 * C810 + C93582 * C818) * C4178 +
            (C36999 * C892 + C93582 * C1024) * C4079) *
               C62191 +
           ((C36999 * C1386 + C93582 * C1394) * C4176 +
            (C36999 * C1468 + C93582 * C1600) * C4077 +
            (C36999 * C3411 + C93582 * C3415) * C4177 +
            (C36999 * C3493 + C93582 * C3641) * C4078 +
            (C36999 * C7631 + C93582 * C7632) * C4178 +
            (C36999 * C7738 + C93582 * C7968) * C4079) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
            C40058 * C4077 + C40059 * C4176) *
               C93737 +
           (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
            C37700 * C4077 + C37699 * C4176) *
               C62191) *
              C93635 * C801 +
          ((C37701 * C4176 + C37702 * C4077 + C37703 * C4177 + C37704 * C4078 +
            C37706 * C4178 + C37705 * C4079) *
               C62191 +
           (C40057 * C4176 + C40056 * C4077 + C40055 * C4177 + C40054 * C4078 +
            (C36999 * C39804 + C93582 * C39805) * C4178 +
            (C36999 * C39892 + C93582 * C40040) * C4079) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
              C1382 -
          ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
           (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
              C1383 +
          ((C69013 + C69012 + C69011 + C69010 + C69009 + C69008) * C62191 +
           (C42296 * C4176 + C42295 * C4077 + C42294 * C4177 + C42293 * C4078 +
            (C36999 * C44722 + C93582 * C44723) * C4178 +
            (C36999 * C44827 + C93582 * C45069) * C4079) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C36999 * C108 + C93582 * C114) * C188 +
                                (C36999 * C189 + C93582 * C362) * C93662) *
                                   C72307 +
                               (C42289 * C188 + C42290 * C93662) * C72308 +
                               (C42291 * C188 + C42292 * C93662) * C72309 +
                               (C42296 * C188 + C42295 * C93662) * C72310) *
                                  C93635 * C93621 * C97 -
                              (((C36999 * C11223 + C93582 * C11426) * C93662 +
                                (C36999 * C11102 + C93582 * C11106) * C188) *
                                   C72310 +
                               (C44106 * C93662 + C44105 * C188) * C72309 +
                               (C44104 * C93662 + C44103 * C188) * C72308 +
                               ((C36999 * C190 + C93582 * C363) * C93662 +
                                (C36999 * C109 + C93582 * C115) * C188) *
                                   C72307) *
                                  C93635 * C93621 * C98 +
                              (((C36999 * C110 + C93582 * C116) * C188 +
                                (C36999 * C191 + C93582 * C364) * C93662) *
                                   C72307 +
                               ((C36999 * C1386 + C93582 * C1394) * C188 +
                                (C36999 * C1468 + C93582 * C1600) * C93662) *
                                   C72308 +
                               ((C36999 * C1391 + C93582 * C1399) * C188 +
                                (C36999 * C1473 + C93582 * C1605) * C93662) *
                                   C72309 +
                               ((C36999 * C13010 + C93582 * C13011) * C188 +
                                (C36999 * C13133 + C93582 * C13359) * C93662) *
                                   C72310) *
                                  C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C188 +
            (C36999 * C189 + C93582 * C362) * C93662) *
               C72307 +
           (C42289 * C188 + C42290 * C93662) * C72308 +
           (C42291 * C188 + C42292 * C93662) * C72309 +
           (C42296 * C188 + C42295 * C93662) * C72310) *
              C93635 * C800 -
          ((C42293 * C93662 + C42294 * C188) * C72310 +
           (C41452 * C93662 + C41451 * C188) * C72309 +
           (C40058 * C93662 + C40059 * C188) * C72308 +
           (C37700 * C93662 + C37699 * C188) * C72307) *
              C93635 * C801 +
          ((C37701 * C188 + C37702 * C93662) * C72307 +
           (C40057 * C188 + C40056 * C93662) * C72308 +
           (C41454 * C188 + C41453 * C93662) * C72309 +
           ((C36999 * C44722 + C93582 * C44723) * C188 +
            (C36999 * C44827 + C93582 * C45069) * C93662) *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C188 +
            (C36999 * C189 + C93582 * C362) * C93662) *
               C72307 +
           (C73422 + C73423) * C72308 + C73432 * C72309 + C73433 * C72310) *
              C1382 -
          ((C73436 + C73437) * C72310 + (C73427 + C73426) * C72309 +
           (C73425 + C73424) * C72308 + (C73423 + C73422) * C72307) *
              C1383 +
          (C73432 * C72307 + C73433 * C72308 + (C73437 + C73436) * C72309 +
           ((C36999 * C73241 + C93582 * C73242) * C188 +
            (C36999 * C73300 + C93582 * C73420) * C93662) *
               C72310) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
                C448 * C31826 + C449 * C31827) *
                   C62191 +
               (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
                  C93635 * C93621 * C97 -
              ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
               (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
                  C93635 * C93621 * C98 +
              ((C449 * C31825 + C450 * C31826 + C451 * C31827) * C62191 +
               (C3025 * C31825 + C3024 * C31826 +
                (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C31827) *
                   C93737) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
                C448 * C31826 + C449 * C31827) *
                   C62191 +
               (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
                  C93635 * C800 -
              ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
               (C2311 * C31827 + C2312 * C31826 +
                (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
                   C62191) *
                  C93635 * C801 +
              (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C31825 +
                (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C31826 +
                (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C31827) *
                   C62191 +
               ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C31825 +
                (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C31826 +
                (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C31827) *
                   C93737) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C64039 + C64040 + C64041) * C93737) *
              C1382 -
          ((C64042 + C64043 + C64044) * C93737 +
           (C64041 + C64040 + C64039) * C62191) *
              C1383 +
          ((C64044 + C64043 + C64042) * C62191 +
           (C11575 * C31825 + C11574 * C31826 +
            (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C31827) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C93621 * C97 -
          ((C8084 + C8085 + C8086) * C93582 * C93737 +
           (C4491 + C4490 + C4489) * C93582 * C62191) *
              C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C93582 * C62191 +
           (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 + C4450 * C3411 +
            C8076 + C8076 + C4078 * C3711 + C4451 * C7631 + C8077 + C8077 +
            C4079 * C8067) *
               C93582 * C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C800 -
          ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
            C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
            C4077 * C3709) *
               C93582 * C93737 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C93582 * C62191) *
              C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C93582 * C62191 +
           (C4449 * C5818 + C68302 + C68302 + C4077 * C6174 + C4450 * C8615 +
            C68303 + C68303 + C4078 * C9089 + C4451 * C39804 + C68304 + C68304 +
            C4079 * C40125) *
               C93582 * C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C69115 + C69116 + C69117) * C93582 * C93737) *
              C1382 -
          ((C69118 + C69119 + C69120) * C93582 * C93737 +
           (C69117 + C69116 + C69115) * C93582 * C62191) *
              C1383 +
          ((C69120 + C69119 + C69118) * C93582 * C62191 +
           (C4449 * C11103 + C69100 + C69100 + C4077 * C11546 + C4450 * C14027 +
            C69101 + C69101 + C4078 * C14479 + C4451 * C44722 + C69102 +
            C69102 + C4079 * C45176) *
               C93582 * C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
           C11572 * C93582 * C72308 + C11573 * C93582 * C72309 +
           C11575 * C93582 * C72310) *
              C93635 * C93621 * C97 -
          (C11574 * C93582 * C72310 + C9966 * C93582 * C72309 +
           C3026 * C93582 * C72308 + C448 * C93582 * C72307) *
              C93635 * C93621 * C98 +
          (C449 * C93582 * C72307 + C3025 * C93582 * C72308 +
           C9967 * C93582 * C72309 +
           (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C93582 *
               C72310) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
           C11572 * C93582 * C72308 + C11573 * C93582 * C72309 +
           C11575 * C93582 * C72310) *
              C93635 * C800 -
          ((C418 * C14027 + C14488 + C14488 + C93662 * C14479) * C93582 *
               C72310 +
           C14495 * C93582 * C72309 + C14494 * C93582 * C72308 +
           (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93582 * C72307) *
              C93635 * C801 +
          ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93582 * C72307 +
           (C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93582 * C72308 +
           (C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C93582 * C72309 +
           (C418 * C44722 + C72983 + C72983 + C93662 * C45176) * C93582 *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
           C73489 * C72308 + C73490 * C72309 + C73491 * C72310) *
              C1382 -
          (C73498 * C72310 + C73491 * C72309 + C73490 * C72308 +
           C73489 * C72307) *
              C1383 +
          (C73490 * C72307 + C73491 * C72308 + C73498 * C72309 +
           (C418 * C73241 + C73494 + C73494 + C93662 * C73487) * C93582 *
               C72310) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 +
                 C93737 * C1536) *
                    C188 +
                (C62344 * C189 + C62191 * C501 + C62345 * C1470 +
                 C93737 * C1726) *
                    C93662) *
                   C31825 +
               ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) *
                   C31826 +
               C62628 * C31827) *
                  C93635 * C93621 * C97 -
              (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) *
                   C31827 +
               ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) *
                   C31826 +
               ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) *
                   C31825) *
                  C93635 * C93621 * C98 +
              (C62628 * C31825 +
               ((C62382 + C62381) * C188 + (C62625 + C62624) * C93662) *
                   C31826 +
               ((C62344 * C112 + C62191 * C280 + C62345 * C2697 +
                 C93737 * C2856) *
                    C188 +
                (C62344 * C193 + C62191 * C505 + C62345 * C2770 +
                 C93737 * C3092) *
                    C93662) *
                   C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 +
                 C93737 * C1536) *
                    C188 +
                (C62344 * C189 + C62191 * C501 + C62345 * C1470 +
                 C93737 * C1726) *
                    C93662) *
                   C31825 +
               ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) *
                   C31826 +
               C62628 * C31827) *
                  C93635 * C800 -
              (((C62345 * C3493 + C93737 * C3785 + C62344 * C887 +
                 C62191 * C1143) *
                    C93662 +
                (C62345 * C3411 + C93737 * C3567 + C62344 * C805 +
                 C62191 * C953) *
                    C188) *
                   C31827 +
               ((C62345 * C3492 + C93737 * C3784 + C62344 * C888 +
                 C62191 * C1144) *
                    C93662 +
                (C62345 * C3410 + C93737 * C3566 + C62344 * C806 +
                 C62191 * C954) *
                    C188) *
                   C31826 +
               ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 +
                 C62191 * C1145) *
                    C93662 +
                (C62345 * C3409 + C93737 * C3565 + C62344 * C807 +
                 C62191 * C955) *
                    C188) *
                   C31825) *
                  C93635 * C801 +
              (((C62344 * C808 + C62191 * C956 + C62345 * C5818 +
                 C93737 * C6008) *
                    C188 +
                (C62344 * C890 + C62191 * C1146 + C62345 * C5922 +
                 C93737 * C6266) *
                    C93662) *
                   C31825 +
               ((C62344 * C809 + C62191 * C957 + C62345 * C5817 +
                 C93737 * C6007) *
                    C188 +
                (C62344 * C891 + C62191 * C1147 + C62345 * C5921 +
                 C93737 * C6265) *
                    C93662) *
                   C31826 +
               ((C62344 * C810 + C62191 * C958 + C62345 * C7631 +
                 C93737 * C7856) *
                    C188 +
                (C62344 * C892 + C62191 * C1148 + C62345 * C7738 +
                 C93737 * C8184) *
                    C93662) *
                   C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C1382 -
          (((C62345 * C1473 + C93737 * C1729 + C62344 * C1468 +
             C62191 * C1724) *
                C93662 +
            (C62345 * C1391 + C93737 * C1539 + C62344 * C1386 +
             C62191 * C1534) *
                C188) *
               C31827 +
           ((C62345 * C1472 + C93737 * C1728 + C62344 * C1469 +
             C62191 * C1725) *
                C93662 +
            (C62345 * C1390 + C93737 * C1538 + C62344 * C1387 +
             C62191 * C1535) *
                C188) *
               C31826 +
           ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C93662 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C188) *
               C31825) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C188 +
            (C62344 * C1471 + C62191 * C1727 + C62345 * C11224 +
             C93737 * C11655) *
                C93662) *
               C31825 +
           ((C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
             C93737 * C11344) *
                C188 +
            (C62344 * C1472 + C62191 * C1728 + C62345 * C11223 +
             C93737 * C11654) *
                C93662) *
               C31826 +
           ((C62344 * C1391 + C62191 * C1539 + C62345 * C13010 +
             C93737 * C13241) *
                C188 +
            (C62344 * C1473 + C62191 * C1729 + C62345 * C13133 +
             C93737 * C13586) *
                C93662) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
               C4177 +
           (C62344 * C889 + C62191 * C1145 + C62345 * C3491 + C93737 * C3783) *
               C4078 +
           (C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C4178 +
           (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
               C4079) *
              C93582 * C93635 * C93621 * C97 -
          ((C62345 * C5921 + C93737 * C6265 + C62344 * C891 + C62191 * C1147) *
               C4079 +
           (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
               C4178 +
           (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
           (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
              C93582 * C93635 * C93621 * C98 +
          (C62383 * C4176 + C62626 * C4077 + (C64684 + C64683) * C4177 +
           (C64992 + C64991) * C4078 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C4178 +
           (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
               C4079) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C93635 * C800 -
          ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
           (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
           (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
              C93582 * C93635 * C801 +
          (C68149 * C4176 + C68397 * C4077 + (C68148 + C68147) * C4177 +
           (C68396 + C68395) * C4078 +
           (C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
            C93737 * C39960) *
               C4178 +
           (C62344 * C5040 + C62191 * C5449 + C62345 * C39892 +
            C93737 * C40196) *
               C4079) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C1382 -
          ((C62345 * C5924 + C93737 * C6268 + C62344 * C5922 + C62191 * C6266) *
               C4079 +
           (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 + C62191 * C6008) *
               C4178 +
           (C62345 * C5923 + C93737 * C6267 + C62344 * C3491 + C62191 * C3783) *
               C4078 +
           (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 + C62191 * C3565) *
               C4177 +
           (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 + C62191 * C1726) *
               C4077 +
           (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 + C62191 * C1536) *
               C4176) *
              C93582 * C1383 +
          ((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
            C93737 * C11345) *
               C4176 +
           (C62344 * C1471 + C62191 * C1727 + C62345 * C11224 +
            C93737 * C11655) *
               C4077 +
           (C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
            C93737 * C14265) *
               C4177 +
           (C62344 * C5923 + C62191 * C6267 + C62345 * C14143 +
            C93737 * C14595) *
               C4078 +
           (C62344 * C5821 + C62191 * C6011 + C62345 * C44722 +
            C93737 * C44951) *
               C4178 +
           (C62344 * C5924 + C62191 * C6268 + C62345 * C44827 +
            C93737 * C45297) *
               C4079) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C188 +
           (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
            C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
            C72310 * C11655) *
               C93662) *
              C93582 * C93635 * C93621 * C97 -
          ((C72415 * C11223 + C72310 * C11654 + C72414 * C1472 +
            C72309 * C1728 + C72413 * C1469 + C72308 * C1725 + C72412 * C190 +
            C72307 * C502) *
               C93662 +
           (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
            C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
            C72307 * C277) *
               C188) *
              C93582 * C93635 * C93621 * C98 +
          ((C72412 * C110 + C72307 * C278 + C72413 * C1386 + C72308 * C1534 +
            C72414 * C1391 + C72309 * C1539 + C72415 * C13010 +
            C72310 * C13241) *
               C188 +
           (C72412 * C191 + C72307 * C503 + C72413 * C1468 + C72308 * C1724 +
            C72414 * C1473 + C72309 * C1729 + C72415 * C13133 +
            C72310 * C13586) *
               C93662) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C188 +
           (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
            C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
            C72310 * C11655) *
               C93662) *
              C93582 * C93635 * C800 -
          ((C72415 * C14143 + C72310 * C14595 + C72414 * C5923 +
            C72309 * C6267 + C72413 * C3491 + C72308 * C3783 + C72412 * C889 +
            C72307 * C1145) *
               C93662 +
           (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
            C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
            C72307 * C955) *
               C188) *
              C93582 * C93635 * C801 +
          ((C72412 * C808 + C72307 * C956 + C72413 * C5818 + C72308 * C6008 +
            C72414 * C5821 + C72309 * C6011 + C72415 * C44722 +
            C72310 * C44951) *
               C188 +
           (C72412 * C890 + C72307 * C1146 + C72413 * C5922 + C72308 * C6266 +
            C72414 * C5924 + C72309 * C6268 + C72415 * C44827 +
            C72310 * C45297) *
               C93662) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C188 +
           (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
            C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
            C72310 * C11655) *
               C93662) *
              C93582 * C1382 -
          ((C72415 * C11225 + C72310 * C11656 + C72414 * C11224 +
            C72309 * C11655 + C72413 * C1471 + C72308 * C1727 + C72412 * C1470 +
            C72307 * C1726) *
               C93662 +
           (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
            C72309 * C11345 + C72413 * C1389 + C72308 * C1537 + C72412 * C1388 +
            C72307 * C1536) *
               C188) *
              C93582 * C1383 +
          ((C72412 * C1389 + C72307 * C1537 + C72413 * C11103 +
            C72308 * C11345 + C72414 * C11104 + C72309 * C11346 +
            C72415 * C73241 + C72310 * C73368) *
               C188 +
           (C72412 * C1471 + C72307 * C1727 + C72413 * C11224 +
            C72308 * C11655 + C72414 * C11225 + C72309 * C11656 +
            C72415 * C73300 + C72310 * C73548) *
               C93662) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                C31835 * C110 + C31827 * C116) *
                   C62344 +
               (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
                C31835 * C278 + C31827 * C581) *
                   C62191 +
               (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 +
                C31826 * C1395 + C31835 * C1386 + C31827 * C1394) *
                   C62345 +
               (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 +
                C31826 * C1783 + C31835 * C1534 + C31827 * C1782) *
                   C93737) *
                  C93662 * C93635 * C93621 * C97 -
              ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 +
                C31826 * C1782 + C31831 * C1535 + C31825 * C1783) *
                   C93737 +
               (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 +
                C31826 * C1394 + C31831 * C1387 + C31825 * C1395) *
                   C62345 +
               (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
                C31831 * C277 + C31825 * C580) *
                   C62191 +
               (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
                C31831 * C109 + C31825 * C115) *
                   C62344) *
                  C93662 * C93635 * C93621 * C98 +
              ((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
                C31835 * C112 + C31827 * C118) *
                   C62344 +
               (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
                C31835 * C280 + C31827 * C583) *
                   C62191 +
               (C31831 * C1386 + C31825 * C1394 + C31833 * C1385 +
                C31826 * C1393 + C31835 * C2697 + C31827 * C2698) *
                   C62345 +
               (C31831 * C1534 + C31825 * C1782 + C31833 * C1533 +
                C31826 * C1781 + C31835 * C2856 + C31827 * C3174) *
                   C93737) *
                  C93662 * C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
                C31835 * C110 + C31827 * C116) *
                   C62344 +
               (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
                C31835 * C278 + C31827 * C581) *
                   C62191 +
               (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 +
                C31826 * C1395 + C31835 * C1386 + C31827 * C1394) *
                   C62345 +
               (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 +
                C31826 * C1783 + C31835 * C1534 + C31827 * C1782) *
                   C93737) *
                  C93662 * C93635 * C800 -
              ((C36745 + C36746 + C36747) * C93737 +
               (C36436 + C36437 + C36438) * C62345 +
               (C33202 + C33201 + C33200) * C62191 +
               (C32944 + C32943 + C32942) * C62344) *
                  C93662 * C93635 * C801 +
              ((C32953 + C32952 + C32951) * C62344 +
               (C33205 + C33204 + C33203) * C62191 +
               (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 +
                C31826 * C5823 + C31835 * C7631 + C31827 * C7632) *
                   C62345 +
               (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 +
                C31826 * C6345 + C31835 * C7856 + C31827 * C8295) *
                   C93737) *
                  C93662 * C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C63953 + C63954 + C63955) * C62345 +
           (C64205 + C64206 + C64207) * C93737) *
              C93662 * C1382 -
          ((C64208 + C64209 + C64210) * C93737 +
           (C63962 + C63963 + C63964) * C62345 +
           (C64207 + C64206 + C64205) * C62191 +
           (C63955 + C63954 + C63953) * C62344) *
              C93662 * C1383 +
          ((C63964 + C63963 + C63962) * C62344 +
           (C64210 + C64209 + C64208) * C62191 +
           (C31831 * C11103 + C31825 * C11107 + C31833 * C11102 +
            C31826 * C11106 + C31835 * C13010 + C31827 * C13011) *
               C62345 +
           (C31831 * C11345 + C31825 * C11733 + C31833 * C11344 +
            C31826 * C11732 + C31835 * C13241 + C31827 * C13694) *
               C93737) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C37699 * C62344 + C37883 * C62191 + C40059 * C62345 +
            C40279 * C93737) *
               C4078 +
           (C37701 * C62344 + C37884 * C62191 + C40057 * C62345 +
            C40278 * C93737) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C60057 * C93737 + C59752 * C62345 + C39000 * C62191 +
            C38784 * C62344) *
               C4079 +
           (C43475 * C93737 + C43167 * C62345 + C38999 * C62191 +
            C38782 * C62344) *
               C4078 +
           (C44421 * C93737 + C44103 * C62345 +
            (C36999 * C277 + C93582 * C580) * C62191 +
            (C36999 * C109 + C93582 * C115) * C62344) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C62344 +
            (C36999 * C278 + C93582 * C581) * C62191 +
            (C36999 * C1386 + C93582 * C1394) * C62345 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C4077 +
           ((C36999 * C805 + C93582 * C813) * C62344 +
            (C36999 * C953 + C93582 * C1201) * C62191 +
            (C36999 * C3411 + C93582 * C3415) * C62345 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C4078 +
           ((C36999 * C810 + C93582 * C818) * C62344 +
            (C36999 * C958 + C93582 * C1206) * C62191 +
            (C36999 * C7631 + C93582 * C7632) * C62345 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C93635 * C800 -
          ((C68480 + C68481 + C68482 + C68483) * C4079 +
           (C68479 + C68478 + C68477 + C68476) * C4078 +
           (C68475 + C68474 + C68473 + C68472) * C4077) *
              C93635 * C801 +
          (C68486 * C4077 + (C68483 + C68482 + C68481 + C68480) * C4078 +
           (C37706 * C62344 + C37886 * C62191 +
            (C36999 * C39804 + C93582 * C39805) * C62345 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C1382 -
          ((C41716 * C93737 + C41454 * C62345 + C40278 * C62191 +
            C40057 * C62344) *
               C4079 +
           (C41715 * C93737 + C41451 * C62345 + C40279 * C62191 +
            C40059 * C62344) *
               C4078 +
           (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
            C42289 * C62344) *
               C4077) *
              C1383 +
          ((C42291 * C62344 + C42578 * C62191 + C42296 * C62345 +
            C42580 * C93737) *
               C4077 +
           (C41451 * C62344 + C41715 * C62191 + C42294 * C62345 +
            C42579 * C93737) *
               C4078 +
           (C41454 * C62344 + C41716 * C62191 +
            (C36999 * C44722 + C93582 * C44723) * C62345 +
            (C36999 * C44951 + C93582 * C45405) * C93737) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C72412 +
           (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
           C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
           C42296 * C72415 + C42580 * C72310) *
              C93662 * C93635 * C93621 * C97 -
          ((C36999 * C11344 + C93582 * C11732) * C72310 +
           (C36999 * C11102 + C93582 * C11106) * C72415 + C44422 * C72309 +
           C44105 * C72414 + C44421 * C72308 + C44103 * C72413 +
           (C36999 * C277 + C93582 * C580) * C72307 +
           (C36999 * C109 + C93582 * C115) * C72412) *
              C93662 * C93635 * C93621 * C98 +
          ((C36999 * C110 + C93582 * C116) * C72412 +
           (C36999 * C278 + C93582 * C581) * C72307 +
           (C36999 * C1386 + C93582 * C1394) * C72413 +
           (C36999 * C1534 + C93582 * C1782) * C72308 +
           (C36999 * C1391 + C93582 * C1399) * C72414 +
           (C36999 * C1539 + C93582 * C1787) * C72309 +
           (C36999 * C13010 + C93582 * C13011) * C72415 +
           (C36999 * C13241 + C93582 * C13694) * C72310) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C72412 +
           (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
           C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
           C42296 * C72415 + C42580 * C72310) *
              C93662 * C93635 * C800 -
          (C42579 * C72310 + C42294 * C72415 + C41715 * C72309 +
           C41451 * C72414 + C40279 * C72308 + C40059 * C72413 +
           C37883 * C72307 + C37699 * C72412) *
              C93662 * C93635 * C801 +
          (C37701 * C72412 + C37884 * C72307 + C40057 * C72413 +
           C40278 * C72308 + C41454 * C72414 + C41716 * C72309 +
           (C36999 * C44722 + C93582 * C44723) * C72415 +
           (C36999 * C44951 + C93582 * C45405) * C72310) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C72412 +
           (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
           C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
           C42296 * C72415 + C42580 * C72310) *
              C93662 * C1382 -
          (C73603 * C72310 + C73435 * C72415 + C42580 * C72309 +
           C42296 * C72414 + C42578 * C72308 + C42291 * C72413 +
           C42577 * C72307 + C42289 * C72412) *
              C93662 * C1383 +
          (C42291 * C72412 + C42578 * C72307 + C42296 * C72413 +
           C42580 * C72308 + C73435 * C72414 + C73603 * C72309 +
           (C36999 * C73241 + C93582 * C73242) * C72415 +
           (C36999 * C73368 + C93582 * C73599) * C72310) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C62344 +
                (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
                C11842 * C93737) *
                   C31825 +
               (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
                  C93635 * C93621 * C97 -
              ((C62785 + C62786 + C62787 + C62788) * C31827 +
               (C62784 + C62783 + C62782 + C62781) * C31826 +
               (C62780 + C62779 + C62778 + C62777) * C31825) *
                  C93635 * C93621 * C98 +
              (C62791 * C31825 + (C62788 + C62787 + C62786 + C62785) * C31826 +
               (C225 * C62344 + C657 * C62191 +
                (C188 * C2697 + C93662 * C2770) * C62345 +
                (C188 * C2856 + C93662 * C3241) * C93737) *
                   C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C188 * C108 + C93662 * C189) * C62344 +
                (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
                C11842 * C93737) *
                   C31825 +
               (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
                  C93635 * C800 -
              ((C23217 * C93737 + C22578 * C62345 + C2539 * C62191 +
                C2074 * C62344) *
                   C31827 +
               (C12793 * C93737 + C12150 * C62345 + C2540 * C62191 +
                C2076 * C62344) *
                   C31826 +
               (C14808 * C93737 + C14160 * C62345 +
                (C188 * C955 + C93662 * C1261) * C62191 +
                (C188 * C807 + C93662 * C889) * C62344) *
                   C31825) *
                  C93635 * C801 +
              (((C188 * C808 + C93662 * C890) * C62344 +
                (C188 * C956 + C93662 * C1262) * C62191 +
                (C188 * C5818 + C93662 * C5922) * C62345 +
                (C188 * C6008 + C93662 * C6426) * C93737) *
                   C31825 +
               ((C188 * C809 + C93662 * C891) * C62344 +
                (C188 * C957 + C93662 * C1263) * C62191 +
                (C188 * C5817 + C93662 * C5921) * C62345 +
                (C188 * C6007 + C93662 * C6425) * C93737) *
                   C31826 +
               ((C188 * C810 + C93662 * C892) * C62344 +
                (C188 * C958 + C93662 * C1264) * C62191 +
                (C188 * C7631 + C93662 * C7738) * C62345 +
                (C188 * C7856 + C93662 * C8394) * C93737) *
                   C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C1382 -
          ((C10223 * C93737 + C9696 * C62345 + C3253 * C62191 +
            C2788 * C62344) *
               C31827 +
           (C10222 * C93737 + C9693 * C62345 + C3254 * C62191 +
            C2790 * C62344) *
               C31826 +
           (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
            C11252 * C62344) *
               C31825) *
              C1383 +
          ((C11254 * C62344 + C11843 * C62191 + C11259 * C62345 +
            C11845 * C93737) *
               C31825 +
           (C9693 * C62344 + C10222 * C62191 + C11257 * C62345 +
            C11844 * C93737) *
               C31826 +
           (C9696 * C62344 + C10223 * C62191 +
            (C188 * C13010 + C93662 * C13133) * C62345 +
            (C188 * C13241 + C93662 * C13805) * C93737) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C93621 * C97 -
          ((C8402 + C8403 + C8404) * C93737 + (C7756 + C7757 + C7758) * C62345 +
           (C4749 + C4748 + C4747) * C62191 +
           (C4206 + C4205 + C4204) * C62344) *
              C93582 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C62344 + (C4752 + C4751 + C4750) * C62191 +
           (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
            C4178 * C7631 + C4079 * C7738) *
               C62345 +
           (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 + C4078 * C3925 +
            C4178 * C7856 + C4079 * C8394) *
               C93737) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C800 -
          ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
            C4176 * C3565 + C4077 * C3923) *
               C93737 +
           (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
            C4176 * C3409 + C4077 * C3491) *
               C62345 +
           (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
            C4176 * C955 + C4077 * C1261) *
               C62191 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C62344) *
              C93582 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C62344 +
           (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
            C4178 * C5122 + C4079 * C5639) *
               C62191 +
           (C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
            C4178 * C39804 + C4079 * C39892) *
               C62345 +
           (C4176 * C6008 + C4077 * C6426 + C4177 * C8843 + C4078 * C9413 +
            C4178 * C39960 + C4079 * C40348) *
               C93737) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C68842 + C68843 + C68844) * C62345 +
           (C69355 + C69356 + C69357) * C93737) *
              C93582 * C1382 -
          ((C69358 + C69359 + C69360) * C93737 +
           (C68851 + C68852 + C68853) * C62345 +
           (C69357 + C69356 + C69355) * C62191 +
           (C68844 + C68843 + C68842) * C62344) *
              C93582 * C1383 +
          ((C68853 + C68852 + C68851) * C62344 +
           (C69360 + C69359 + C69358) * C62191 +
           (C4176 * C11103 + C4077 * C11224 + C4177 * C14027 + C4078 * C14143 +
            C4178 * C44722 + C4079 * C44827) *
               C62345 +
           (C4176 * C11345 + C4077 * C11830 + C4177 * C14265 + C4078 * C14801 +
            C4178 * C44951 + C4079 * C45510) *
               C93737) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C72412 +
           (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
           C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
           C11259 * C72415 + C11845 * C72310) *
              C93582 * C93635 * C93621 * C97 -
          (C11844 * C72310 + C11257 * C72415 + C10222 * C72309 +
           C9693 * C72414 + C3254 * C72308 + C2790 * C72413 + C654 * C72307 +
           C218 * C72412) *
              C93582 * C93635 * C93621 * C98 +
          (C220 * C72412 + C655 * C72307 + C2788 * C72413 + C3253 * C72308 +
           C9696 * C72414 + C10223 * C72309 +
           (C188 * C13010 + C93662 * C13133) * C72415 +
           (C188 * C13241 + C93662 * C13805) * C72310) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C72412 +
           (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
           C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
           C11259 * C72415 + C11845 * C72310) *
              C93582 * C93635 * C800 -
          ((C188 * C14265 + C93662 * C14801) * C72310 +
           (C188 * C14027 + C93662 * C14143) * C72415 + C14809 * C72309 +
           C14162 * C72414 + C14808 * C72308 + C14160 * C72413 +
           (C188 * C955 + C93662 * C1261) * C72307 +
           (C188 * C807 + C93662 * C889) * C72412) *
              C93582 * C93635 * C801 +
          ((C188 * C808 + C93662 * C890) * C72412 +
           (C188 * C956 + C93662 * C1262) * C72307 +
           (C188 * C5818 + C93662 * C5922) * C72413 +
           (C188 * C6008 + C93662 * C6426) * C72308 +
           (C188 * C5821 + C93662 * C5924) * C72414 +
           (C188 * C6011 + C93662 * C6428) * C72309 +
           (C188 * C44722 + C93662 * C44827) * C72415 +
           (C188 * C44951 + C93662 * C45510) * C72310) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C72412 +
           (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
           C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
           C11259 * C72415 + C11845 * C72310) *
              C93582 * C1382 -
          (C73657 * C72310 + C73316 * C72415 + C11845 * C72309 +
           C11259 * C72414 + C11843 * C72308 + C11254 * C72413 +
           C11842 * C72307 + C11252 * C72412) *
              C93582 * C1383 +
          (C11254 * C72412 + C11843 * C72307 + C11259 * C72413 +
           C11845 * C72308 + C73316 * C72414 + C73657 * C72309 +
           (C188 * C73241 + C93662 * C73300) * C72415 +
           (C188 * C73368 + C93662 * C73653) * C72310) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                   C93662 * C31825 +
               (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                  C93635 * C93621 * C97 -
              ((C62906 + C62907) * C93662 * C31827 +
               (C62905 + C62904) * C93662 * C31826 +
               (C62903 + C62902) * C93662 * C31825) *
                  C93635 * C93621 * C98 +
              (C62909 * C31825 + (C62907 + C62906) * C93662 * C31826 +
               (C62865 * C112 + C62888 + C62888 + C62191 * C718 +
                C62866 * C2697 + C62889 + C62889 + C93737 * C3323) *
                   C93662 * C31827) *
                  C93635 * C93621 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                   C93662 * C31825 +
               (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                  C93635 * C800 -
              ((C62866 * C3411 + C63576 + C63576 + C93737 * C3995 +
                C62865 * C805 + C63577 + C63577 + C62191 * C1317) *
                   C93662 * C31827 +
               (C62866 * C3410 + C63578 + C63578 + C93737 * C3994 +
                C62865 * C806 + C63579 + C63579 + C62191 * C1318) *
                   C93662 * C31826 +
               (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                   C93662 * C31825) *
                  C93635 * C801 +
              ((C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                   C93662 * C31825 +
               (C62865 * C809 + C63584 + C63584 + C62191 * C1321 +
                C62866 * C5817 + C63585 + C63585 + C93737 * C6505) *
                   C93662 * C31826 +
               (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                   C93662 * C31827) *
                  C93635 * C802) *
             C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
            C62869 + C62869 + C93737 * C1900) *
               C93662 * C31825 +
           (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
              C1382 -
          ((C62866 * C1391 + C64359 + C64359 + C93737 * C1903 + C62865 * C1386 +
            C64360 + C64360 + C62191 * C1898) *
               C93662 * C31827 +
           (C62866 * C1390 + C64361 + C64361 + C93737 * C1902 + C62865 * C1387 +
            C64362 + C64362 + C62191 * C1899) *
               C93662 * C31826 +
           (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 + C62865 * C1388 +
            C64364 + C64364 + C62191 * C1900) *
               C93662 * C31825) *
              C1383 +
          ((C62865 * C1389 + C64365 + C64365 + C62191 * C1901 +
            C62866 * C11103 + C64366 + C64366 + C93737 * C11920) *
               C93662 * C31825 +
           (C62865 * C1390 + C64367 + C64367 + C62191 * C1902 +
            C62866 * C11102 + C64368 + C64368 + C93737 * C11919) *
               C93662 * C31826 +
           (C62865 * C1391 + C64369 + C64369 + C62191 * C1903 +
            C62866 * C13010 + C64370 + C64370 + C93737 * C13910) *
               C93662 * C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
            C62869 + C62869 + C93737 * C1900) *
               C4077 +
           (C62865 * C807 + C63581 + C63581 + C62191 * C1319 + C62866 * C3409 +
            C63580 + C63580 + C93737 * C3993) *
               C4078 +
           (C62865 * C808 + C63582 + C63582 + C62191 * C1320 + C62866 * C5818 +
            C63583 + C63583 + C93737 * C6506) *
               C4079) *
              C93582 * C93635 * C93621 * C97 -
          ((C62866 * C5817 + C63585 + C63585 + C93737 * C6505 + C62865 * C809 +
            C63584 + C63584 + C62191 * C1321) *
               C4079 +
           (C65317 + C65318) * C4078 + (C62903 + C62902) * C4077) *
              C93582 * C93635 * C93621 * C98 +
          (C62908 * C4077 + (C65316 + C65315) * C4078 +
           (C62865 * C810 + C63586 + C63586 + C62191 * C1322 + C62866 * C7631 +
            C63587 + C63587 + C93737 * C8502) *
               C4079) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
            C62869 + C62869 + C93737 * C1900) *
               C4077 +
           (C68663 + C68664) * C4078 + C68669 * C4079) *
              C93582 * C93635 * C800 -
          ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
           (C68664 + C68663) * C4077) *
              C93582 * C93635 * C801 +
          (C68669 * C4077 + (C68668 + C68667) * C4078 +
           (C62865 * C4918 + C68649 + C68649 + C62191 * C5717 +
            C62866 * C39804 + C68650 + C68650 + C93737 * C40415) *
               C4079) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62865 * C108 + C62868 + C62868 + C62191 * C714 + C62866 * C1388 +
            C62869 + C62869 + C93737 * C1900) *
               C4077 +
           (C68663 + C68664) * C4078 + C68669 * C4079) *
              C93582 * C1382 -
          ((C62866 * C5821 + C69435 + C69435 + C93737 * C6508 + C62865 * C5818 +
            C69436 + C69436 + C62191 * C6506) *
               C4079 +
           (C62866 * C5819 + C67213 + C67213 + C93737 * C6507 + C62865 * C3409 +
            C67212 + C67212 + C62191 * C3993) *
               C4078 +
           (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 + C62865 * C1388 +
            C64364 + C64364 + C62191 * C1900) *
               C4077) *
              C93582 * C1383 +
          ((C62865 * C1389 + C64365 + C64365 + C62191 * C1901 +
            C62866 * C11103 + C64366 + C64366 + C93737 * C11920) *
               C4077 +
           (C62865 * C5819 + C69437 + C69437 + C62191 * C6507 +
            C62866 * C14027 + C69438 + C69438 + C93737 * C14907) *
               C4078 +
           (C62865 * C5821 + C69439 + C69439 + C62191 * C6508 +
            C62866 * C44722 + C69440 + C69440 + C93737 * C45621) *
               C4079) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C72716 * C108 + C72721 + C72721 + C72307 * C714 + C72717 * C1388 +
           C72722 + C72722 + C72308 * C1900 + C72718 * C1389 + C72723 + C72723 +
           C72309 * C1901 + C72719 * C11103 + C72724 + C72724 +
           C72310 * C11920) *
              C93662 * C93582 * C93635 * C93621 * C97 -
          (C72719 * C11102 + C72725 + C72725 + C72310 * C11919 +
           C72718 * C1390 + C72726 + C72726 + C72309 * C1902 + C72717 * C1387 +
           C72727 + C72727 + C72308 * C1899 + C72716 * C109 + C72728 + C72728 +
           C72307 * C715) *
              C93662 * C93582 * C93635 * C93621 * C98 +
          (C72716 * C110 + C72729 + C72729 + C72307 * C716 + C72717 * C1386 +
           C72730 + C72730 + C72308 * C1898 + C72718 * C1391 + C72731 + C72731 +
           C72309 * C1903 + C72719 * C13010 + C72732 + C72732 +
           C72310 * C13910) *
              C93662 * C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C72716 * C108 + C72721 + C72721 + C72307 * C714 + C72717 * C1388 +
           C72722 + C72722 + C72308 * C1900 + C72718 * C1389 + C72723 + C72723 +
           C72309 * C1901 + C72719 * C11103 + C72724 + C72724 +
           C72310 * C11920) *
              C93662 * C93582 * C93635 * C800 -
          (C72719 * C14027 + C73184 + C73184 + C72310 * C14907 +
           C72718 * C5819 + C73185 + C73185 + C72309 * C6507 + C72717 * C3409 +
           C73186 + C73186 + C72308 * C3993 + C72716 * C807 + C73187 + C73187 +
           C72307 * C1319) *
              C93662 * C93582 * C93635 * C801 +
          (C72716 * C808 + C73188 + C73188 + C72307 * C1320 + C72717 * C5818 +
           C73189 + C73189 + C72308 * C6506 + C72718 * C5821 + C73190 + C73190 +
           C72309 * C6508 + C72719 * C44722 + C73191 + C73191 +
           C72310 * C45621) *
              C93662 * C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C72716 * C108 + C72721 + C72721 + C72307 * C714 + C72717 * C1388 +
           C72722 + C72722 + C72308 * C1900 + C72718 * C1389 + C72723 + C72723 +
           C72309 * C1901 + C72719 * C11103 + C72724 + C72724 +
           C72310 * C11920) *
              C93662 * C93582 * C1382 -
          (C72719 * C11104 + C73709 + C73709 + C72310 * C11921 +
           C72718 * C11103 + C73710 + C73710 + C72309 * C11920 +
           C72717 * C1389 + C73711 + C73711 + C72308 * C1901 + C72716 * C1388 +
           C73712 + C73712 + C72307 * C1900) *
              C93662 * C93582 * C1383 +
          (C72716 * C1389 + C73713 + C73713 + C72307 * C1901 + C72717 * C11103 +
           C73714 + C73714 + C72308 * C11920 + C72718 * C11104 + C73715 +
           C73715 + C72309 * C11921 + C72719 * C73241 + C73716 + C73716 +
           C72310 * C73707) *
              C93662 * C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C2695 -
           ((C41182 * C93737 + C39822 * C62191) * C4079 +
            (C41181 * C93737 + C39823 * C62191) * C4078 +
            (C41998 * C93737 + C41997 * C62191) * C4077) *
               C2696) *
              C93621 * C1981 +
          (((C43783 * C62191 + C43784 * C93737) * C4077 +
            (C42861 * C62191 + C42862 * C93737) * C4078 +
            (C59452 * C62191 +
             (C36998 * C5822 + C42856 + C42856 + C93582 * C5834) * C93737) *
                C4079) *
               C2696 -
           ((C69542 + C69541) * C4079 + (C69540 + C69539) * C4078 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C2695 -
           ((C63692 + C63693 + C63694) * C93737 +
            (C63691 + C63690 + C63689) * C62191) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65432 + C65433 + C65434) * C62191 +
            (C31830 * C1390 + C65423 + C65423 + C31825 * C1406 +
             C31832 * C1391 + C65424 + C65424 + C31826 * C1407 +
             C31834 * C1392 + C65425 + C65425 + C31827 * C1408) *
                C93737) *
               C93662 * C2696 -
           ((C65434 + C65433 + C65432) * C93737 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C62191) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
            C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
               C93662 * C2695 -
           (C73250 * C72310 + C42000 * C72309 + C41998 * C72308 +
            C41997 * C72307) *
               C93662 * C2696) *
              C93621 * C1981 +
          ((C43783 * C72307 + C43784 * C72308 + C74386 * C72309 +
            (C36998 * C11105 + C74383 + C74383 + C93582 * C11113) * C72310) *
               C93662 * C2696 -
           (C74386 * C72310 + C43784 * C72309 + C43783 * C72308 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C72307) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C2695 -
           (((C68848 + C68849 + C68850) * C93582 +
             (C68851 + C68852 + C68853) * C36999) *
                C93737 +
            ((C68847 + C68846 + C68845) * C93582 +
             (C68844 + C68843 + C68842) * C36999) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          ((((C7758 + C7757 + C7756) * C36999 +
             (C7755 + C7754 + C7753) * C93582) *
                C62191 +
            ((C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
              C4178 * C5822 + C4079 * C5926) *
                 C36999 +
             (C4176 * C1398 + C4077 * C1480 + C4177 * C5826 + C4078 * C5931 +
              C4178 * C5828 + C4079 * C5932) *
                 C93582) *
                C93737) *
               C2696 -
           (((C7753 + C7754 + C7755) * C93582 +
             (C7756 + C7757 + C7758) * C36999) *
                C93737 +
            ((C4209 + C4208 + C4207) * C93582 +
             (C4206 + C4205 + C4204) * C36999) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C2695 -
           ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
            (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C65533 + C65534 + C65535 + C65536 + C65537 + C65538) * C62191 +
            (C9693 * C31831 + C9694 * C31825 + C9696 * C31833 + C9695 * C31826 +
             (C188 * C1392 + C93662 * C1474) * C31835 +
             (C188 * C1400 + C93662 * C1482) * C31827) *
                C93737) *
               C2696 -
           ((C65538 + C65537 + C65536 + C65535 + C65534 + C65533) * C93737 +
            (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
             C219 * C31825 + C218 * C31831) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C36999 +
             (C188 * C114 + C93662 * C195) * C93582) *
                C72307 +
            (C73303 + C73304) * C72308 + C73313 * C72309 + C73314 * C72310) *
               C2695 -
           ((C73317 + C73318) * C72310 + (C73308 + C73307) * C72309 +
            (C73306 + C73305) * C72308 + (C73304 + C73303) * C72307) *
               C2696) *
              C93621 * C1981 +
          (((C74453 + C74454) * C72307 + (C74455 + C74456) * C72308 +
            (C74457 + C74458) * C72309 +
            ((C188 * C11105 + C93662 * C11226) * C36999 +
             (C188 * C11109 + C93662 * C11230) * C93582) *
                C72310) *
               C2696 -
           ((C74458 + C74457) * C72310 + (C74456 + C74455) * C72309 +
            (C74454 + C74453) * C72308 +
            (C219 * C93582 + C218 * C36999) * C72307) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C2695 -
           (((C62345 * C5827 + C93737 * C6017 + C62344 * C5824 +
              C62191 * C6014) *
                 C93582 +
             (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
              C62191 * C6008) *
                 C36999) *
                C4079 +
            ((C62345 * C5825 + C93737 * C6015 + C62344 * C3413 +
              C62191 * C3569) *
                 C93582 +
             (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
              C62191 * C3565) *
                 C36999) *
                C4078 +
            ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93582 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C36999) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C36999 + (C65658 + C65657) * C93582) * C4077 +
            ((C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
              C93737 * C6010) *
                 C36999 +
             (C62344 * C3414 + C62191 * C3570 + C62345 * C5826 +
              C93737 * C6016) *
                 C93582) *
                C4078 +
            ((C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
              C93737 * C6012) *
                 C36999 +
             (C62344 * C5823 + C62191 * C6013 + C62345 * C5828 +
              C93737 * C6018) *
                 C93582) *
                C4079) *
               C2696 -
           (((C69750 + C69749) * C93582 + (C69748 + C69747) * C36999) * C4079 +
            ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
            ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C2695 -
           ((C65653 + C65654) * C31827 + (C65655 + C65656) * C31835 +
            (C65657 + C65658) * C31826 + (C65659 + C65660) * C31833 +
            (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C31825 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C31831) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65660 + C65659) * C31831 + (C65658 + C65657) * C31825 +
            (C65656 + C65655) * C31833 + (C65654 + C65653) * C31826 +
            (C62344 * C1385 + C62191 * C1533 + C62345 * C1392 +
             C93737 * C1540) *
                C31835 +
            (C62344 * C1393 + C62191 * C1541 + C62345 * C1400 +
             C93737 * C1548) *
                C31827) *
               C93662 * C2696 -
           ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
            (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
            (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C36999 +
            (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
             C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
             C72310 * C11349) *
                C93582) *
               C93662 * C2695 -
           ((C72415 * C11108 + C72310 * C11350 + C72414 * C11107 +
             C72309 * C11349 + C72413 * C1397 + C72308 * C1545 +
             C72412 * C1396 + C72307 * C1544) *
                C93582 +
            (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
             C72309 * C11345 + C72413 * C1389 + C72308 * C1537 +
             C72412 * C1388 + C72307 * C1536) *
                C36999) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C72412 * C1387 + C72307 * C1535 + C72413 * C1390 + C72308 * C1538 +
             C72414 * C11102 + C72309 * C11344 + C72415 * C11105 +
             C72310 * C11347) *
                C36999 +
            (C72412 * C1395 + C72307 * C1543 + C72413 * C1398 + C72308 * C1546 +
             C72414 * C11106 + C72309 * C11348 + C72415 * C11109 +
             C72310 * C11351) *
                C93582) *
               C93662 * C2696 -
           ((C72415 * C11106 + C72310 * C11348 + C72414 * C1398 +
             C72309 * C1546 + C72413 * C1395 + C72308 * C1543 + C72412 * C115 +
             C72307 * C283) *
                C93582 +
            (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
             C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
             C72307 * C277) *
                C36999) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C2695 -
           ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
            (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C70757 + C70758 + C70759 + C70760 + C70761 + C70762) * C62191 +
            (C44105 * C4176 + C44106 * C4077 + C43169 * C4177 + C43170 * C4078 +
             (C36999 * C5822 + C93582 * C5828) * C4178 +
             (C36999 * C5926 + C93582 * C6098) * C4079) *
                C93737) *
               C2696 -
           ((C70762 + C70761 + C70760 + C70759 + C70758 + C70757) * C93737 +
            (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
             (C36999 * C190 + C93582 * C363) * C4077 +
             (C36999 * C109 + C93582 * C115) * C4176) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C2695 -
           (((C63959 + C63960 + C63961) * C93662 +
             (C63962 + C63963 + C63964) * C188) *
                C93737 +
            ((C63958 + C63957 + C63956) * C93662 +
             (C63955 + C63954 + C63953) * C188) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          ((((C65771 + C65772 + C65773) * C188 +
             (C65774 + C65775 + C65776) * C93662) *
                C62191 +
            ((C31831 * C1390 + C31825 * C1398 + C31833 * C1391 +
              C31826 * C1399 + C31835 * C1392 + C31827 * C1400) *
                 C188 +
             (C31831 * C1472 + C31825 * C1604 + C31833 * C1473 +
              C31826 * C1605 + C31835 * C1474 + C31827 * C1606) *
                 C93662) *
                C93737) *
               C2696 -
           (((C65776 + C65775 + C65774) * C93662 +
             (C65773 + C65772 + C65771) * C188) *
                C93737 +
            ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
              C31831 * C190 + C31825 * C363) *
                 C93662 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C188) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C188 +
             (C36999 * C189 + C93582 * C362) * C93662) *
                C72307 +
            (C73422 + C73423) * C72308 + C73432 * C72309 + C73433 * C72310) *
               C2695 -
           ((C73436 + C73437) * C72310 + (C73427 + C73426) * C72309 +
            (C73425 + C73424) * C72308 + (C73423 + C73422) * C72307) *
               C2696) *
              C93621 * C1981 +
          (((C74591 + C74592) * C72307 + (C74593 + C74594) * C72308 +
            (C74601 + C74602) * C72309 +
            ((C36999 * C11105 + C93582 * C11109) * C188 +
             (C36999 * C11226 + C93582 * C11429) * C93662) *
                C72310) *
               C2696 -
           ((C74602 + C74601) * C72310 + (C74594 + C74593) * C72309 +
            (C74592 + C74591) * C72308 +
            ((C36999 * C190 + C93582 * C363) * C93662 +
             (C36999 * C109 + C93582 * C115) * C188) *
                C72307) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C2695 -
           ((C69118 + C69119 + C69120) * C93582 * C93737 +
            (C69117 + C69116 + C69115) * C93582 * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C8086 + C8085 + C8084) * C93582 * C62191 +
            (C4449 * C1390 + C6189 + C6189 + C4077 * C1662 + C4450 * C5820 +
             C6190 + C6190 + C4078 * C6177 + C4451 * C5822 + C6191 + C6191 +
             C4079 * C6178) *
                C93582 * C93737) *
               C2696 -
           ((C8084 + C8085 + C8086) * C93582 * C93737 +
            (C4491 + C4490 + C4489) * C93582 * C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C2695 -
           ((C64042 + C64043 + C64044) * C93737 +
            (C64041 + C64040 + C64039) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C65875 + C65876 + C65877) * C62191 +
            (C9966 * C31825 + C9967 * C31826 +
             (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C31827) *
                C93737) *
               C2696 -
           ((C65877 + C65876 + C65875) * C93737 +
            (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
            C73489 * C72308 + C73490 * C72309 + C73491 * C72310) *
               C2695 -
           (C73498 * C72310 + C73491 * C72309 + C73490 * C72308 +
            C73489 * C72307) *
               C2696) *
              C93621 * C1981 +
          ((C74669 * C72307 + C74670 * C72308 + C74671 * C72309 +
            (C418 * C11105 + C11563 + C11563 + C93662 * C11548) * C93582 *
                C72310) *
               C2696 -
           (C74671 * C72310 + C74670 * C72309 + C74669 * C72308 +
            C448 * C93582 * C72307) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C2695 -
           ((C62345 * C5924 + C93737 * C6268 + C62344 * C5922 +
             C62191 * C6266) *
                C4079 +
            (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
             C62191 * C6008) *
                C4178 +
            (C62345 * C5923 + C93737 * C6267 + C62344 * C3491 +
             C62191 * C3783) *
                C4078 +
            (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
             C62191 * C3565) *
                C4177 +
            (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C4077 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C4176) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C65660 + C65659) * C4176 + (C65987 + C65986) * C4077 +
            (C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
             C93737 * C6010) *
                C4177 +
            (C62344 * C3492 + C62191 * C3784 + C62345 * C5925 +
             C93737 * C6269) *
                C4078 +
            (C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
             C93737 * C6012) *
                C4178 +
            (C62344 * C5921 + C62191 * C6265 + C62345 * C5926 +
             C93737 * C6270) *
                C4079) *
               C93582 * C2696 -
           ((C70050 + C70049) * C4079 + (C69748 + C69747) * C4178 +
            (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
            (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C2695 -
           (((C65984 + C65985) * C93662 + (C65655 + C65656) * C188) * C31827 +
            ((C65986 + C65987) * C93662 + (C65659 + C65660) * C188) * C31826 +
            ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93662 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C188) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C188 + (C65987 + C65986) * C93662) * C31825 +
            ((C65656 + C65655) * C188 + (C65985 + C65984) * C93662) * C31826 +
            ((C62344 * C1385 + C62191 * C1533 + C62345 * C1392 +
              C93737 * C1540) *
                 C188 +
             (C62344 * C1467 + C62191 * C1723 + C62345 * C1474 +
              C93737 * C1730) *
                 C93662) *
                C31827) *
               C2696 -
           (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
            ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
            ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
             C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
             C72310 * C11345) *
                C188 +
            (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
             C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
             C72310 * C11655) *
                C93662) *
               C93582 * C2695 -
           ((C72415 * C11225 + C72310 * C11656 + C72414 * C11224 +
             C72309 * C11655 + C72413 * C1471 + C72308 * C1727 +
             C72412 * C1470 + C72307 * C1726) *
                C93662 +
            (C72415 * C11104 + C72310 * C11346 + C72414 * C11103 +
             C72309 * C11345 + C72413 * C1389 + C72308 * C1537 +
             C72412 * C1388 + C72307 * C1536) *
                C188) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C72412 * C1387 + C72307 * C1535 + C72413 * C1390 + C72308 * C1538 +
             C72414 * C11102 + C72309 * C11344 + C72415 * C11105 +
             C72310 * C11347) *
                C188 +
            (C72412 * C1469 + C72307 * C1725 + C72413 * C1472 + C72308 * C1728 +
             C72414 * C11223 + C72309 * C11654 + C72415 * C11226 +
             C72310 * C11657) *
                C93662) *
               C93582 * C2696 -
           ((C72415 * C11223 + C72310 * C11654 + C72414 * C1472 +
             C72309 * C1728 + C72413 * C1469 + C72308 * C1725 + C72412 * C190 +
             C72307 * C502) *
                C93662 +
            (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
             C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
             C72307 * C277) *
                C188) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C2695 -
           ((C41716 * C93737 + C41454 * C62345 + C40278 * C62191 +
             C40057 * C62344) *
                C4079 +
            (C41715 * C93737 + C41451 * C62345 + C40279 * C62191 +
             C40059 * C62344) *
                C4078 +
            (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
             C42289 * C62344) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          (((C44103 * C62344 + C44421 * C62191 + C44105 * C62345 +
             C44422 * C93737) *
                C4077 +
            (C43167 * C62344 + C43475 * C62191 + C43169 * C62345 +
             C43476 * C93737) *
                C4078 +
            (C59752 * C62344 + C60057 * C62191 +
             (C36999 * C5822 + C93582 * C5828) * C62345 +
             (C36999 * C6012 + C93582 * C6350) * C93737) *
                C4079) *
               C2696 -
           ((C70156 + C70155 + C70154 + C70153) * C4079 +
            (C70152 + C70151 + C70150 + C70149) * C4078 +
            (C44421 * C93737 + C44103 * C62345 +
             (C36999 * C277 + C93582 * C580) * C62191 +
             (C36999 * C109 + C93582 * C115) * C62344) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C2695 -
           ((C64208 + C64209 + C64210) * C93737 +
            (C63962 + C63963 + C63964) * C62345 +
            (C64207 + C64206 + C64205) * C62191 +
            (C63955 + C63954 + C63953) * C62344) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65771 + C65772 + C65773) * C62344 +
            (C66092 + C66093 + C66094) * C62191 +
            (C31831 * C1390 + C31825 * C1398 + C31833 * C1391 + C31826 * C1399 +
             C31835 * C1392 + C31827 * C1400) *
                C62345 +
            (C31831 * C1538 + C31825 * C1786 + C31833 * C1539 + C31826 * C1787 +
             C31835 * C1540 + C31827 * C1788) *
                C93737) *
               C93662 * C2696 -
           ((C66094 + C66093 + C66092) * C93737 +
            (C65773 + C65772 + C65771) * C62345 +
            (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C62191 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C62344) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C72412 +
            (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
            C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
            C42296 * C72415 + C42580 * C72310) *
               C93662 * C2695 -
           (C73603 * C72310 + C73435 * C72415 + C42580 * C72309 +
            C42296 * C72414 + C42578 * C72308 + C42291 * C72413 +
            C42577 * C72307 + C42289 * C72412) *
               C93662 * C2696) *
              C93621 * C1981 +
          ((C44103 * C72412 + C44421 * C72307 + C44105 * C72413 +
            C44422 * C72308 + C74599 * C72414 + C74806 * C72309 +
            (C36999 * C11105 + C93582 * C11109) * C72415 +
            (C36999 * C11347 + C93582 * C11735) * C72310) *
               C93662 * C2696 -
           (C74806 * C72310 + C74599 * C72415 + C44422 * C72309 +
            C44105 * C72414 + C44421 * C72308 + C44103 * C72413 +
            (C36999 * C277 + C93582 * C580) * C72307 +
            (C36999 * C109 + C93582 * C115) * C72412) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C2695 -
           ((C69358 + C69359 + C69360) * C93737 +
            (C68851 + C68852 + C68853) * C62345 +
            (C69357 + C69356 + C69355) * C62191 +
            (C68844 + C68843 + C68842) * C62344) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C7758 + C7757 + C7756) * C62344 +
            (C8404 + C8403 + C8402) * C62191 +
            (C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
             C4178 * C5822 + C4079 * C5926) *
                C62345 +
            (C4176 * C1538 + C4077 * C1844 + C4177 * C6010 + C4078 * C6429 +
             C4178 * C6012 + C4079 * C6430) *
                C93737) *
               C93582 * C2696 -
           ((C8402 + C8403 + C8404) * C93737 +
            (C7756 + C7757 + C7758) * C62345 +
            (C4749 + C4748 + C4747) * C62191 +
            (C4206 + C4205 + C4204) * C62344) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C2695 -
           ((C66193 + C66194 + C66195 + C66196) * C31827 +
            (C66197 + C66198 + C66199 + C66200) * C31826 +
            (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
             C11252 * C62344) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C66200 + C66199 + C66198 + C66197) * C31825 +
            (C66196 + C66195 + C66194 + C66193) * C31826 +
            (C2786 * C62344 + C3252 * C62191 +
             (C188 * C1392 + C93662 * C1474) * C62345 +
             (C188 * C1540 + C93662 * C1846) * C93737) *
                C31827) *
               C2696 -
           ((C62785 + C62786 + C62787 + C62788) * C31827 +
            (C62784 + C62783 + C62782 + C62781) * C31826 +
            (C62780 + C62779 + C62778 + C62777) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C72412 +
            (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
            C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
            C11259 * C72415 + C11845 * C72310) *
               C93582 * C2695 -
           (C73657 * C72310 + C73316 * C72415 + C11845 * C72309 +
            C11259 * C72414 + C11843 * C72308 + C11254 * C72413 +
            C11842 * C72307 + C11252 * C72412) *
               C93582 * C2696) *
              C93621 * C1981 +
          ((C2790 * C72412 + C3254 * C72307 + C9693 * C72413 + C10222 * C72308 +
            C11257 * C72414 + C11844 * C72309 +
            (C188 * C11105 + C93662 * C11226) * C72415 +
            (C188 * C11347 + C93662 * C11832) * C72310) *
               C93582 * C2696 -
           (C11844 * C72310 + C11257 * C72415 + C10222 * C72309 +
            C9693 * C72414 + C3254 * C72308 + C2790 * C72413 + C654 * C72307 +
            C218 * C72412) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C2695 -
                     ((C62866 * C5821 + C69435 + C69435 + C93737 * C6508 +
                       C62865 * C5818 + C69436 + C69436 + C62191 * C6506) *
                          C4079 +
                      (C62866 * C5819 + C67213 + C67213 + C93737 * C6507 +
                       C62865 * C3409 + C67212 + C67212 + C62191 * C3993) *
                          C4078 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C4077) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C66320 + C66319) * C4077 +
                      (C62865 * C3410 + C67214 + C67214 + C62191 * C3994 +
                       C62866 * C5820 + C67215 + C67215 + C93737 * C6509) *
                          C4078 +
                      (C62865 * C5817 + C71253 + C71253 + C62191 * C6505 +
                       C62866 * C5822 + C71254 + C71254 + C93737 * C6510) *
                          C4079) *
                         C93582 * C2696 -
                     ((C70364 + C70363) * C4079 + (C65317 + C65318) * C4078 +
                      (C62903 + C62902) * C4077) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C2695 -
                     ((C66317 + C66318) * C93662 * C31827 +
                      (C66319 + C66320) * C93662 * C31826 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C93662 * C31825) *
                         C2696) *
                        C93621 * C1981 +
                    (((C66320 + C66319) * C93662 * C31825 +
                      (C66318 + C66317) * C93662 * C31826 +
                      (C62865 * C1385 + C66307 + C66307 + C62191 * C1897 +
                       C62866 * C1392 + C66308 + C66308 + C93737 * C1904) *
                          C93662 * C31827) *
                         C2696 -
                     ((C62906 + C62907) * C93662 * C31827 +
                      (C62905 + C62904) * C93662 * C31826 +
                      (C62903 + C62902) * C93662 * C31825) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C72716 * C108 + C72721 + C72721 + C72307 * C714 +
                      C72717 * C1388 + C72722 + C72722 + C72308 * C1900 +
                      C72718 * C1389 + C72723 + C72723 + C72309 * C1901 +
                      C72719 * C11103 + C72724 + C72724 + C72310 * C11920) *
                         C93662 * C93582 * C2695 -
                     (C72719 * C11104 + C73709 + C73709 + C72310 * C11921 +
                      C72718 * C11103 + C73710 + C73710 + C72309 * C11920 +
                      C72717 * C1389 + C73711 + C73711 + C72308 * C1901 +
                      C72716 * C1388 + C73712 + C73712 + C72307 * C1900) *
                         C93662 * C93582 * C2696) *
                        C93621 * C1981 +
                    ((C72716 * C1387 + C74939 + C74939 + C72307 * C1899 +
                      C72717 * C1390 + C74940 + C74940 + C72308 * C1902 +
                      C72718 * C11102 + C74941 + C74941 + C72309 * C11919 +
                      C72719 * C11105 + C74942 + C74942 + C72310 * C11922) *
                         C93662 * C93582 * C2696 -
                     (C72719 * C11102 + C72725 + C72725 + C72310 * C11919 +
                      C72718 * C1390 + C72726 + C72726 + C72309 * C1902 +
                      C72717 * C1387 + C72727 + C72727 + C72308 * C1899 +
                      C72716 * C109 + C72728 + C72728 + C72307 * C715) *
                         C93662 * C93582 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36118 + C36119 + C36120) * C93737 +
           (C32680 + C32679 + C32678) * C62191) *
              C93662 * C93635 * C801 +
          ((C32683 + C32682 + C32681) * C62191 +
           (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 + C31832 * C5817 +
            C36110 + C36110 + C31826 * C5829 + C31834 * C7631 + C36111 +
            C36111 + C31827 * C7633) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 + C31832 * C1386 +
            C35146 + C35146 + C31826 * C1402 + C31830 * C1387 + C35145 +
            C35145 + C31825 * C1403) *
               C93737 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C62191) *
              C93662 * C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C62191 +
           (C31830 * C1386 + C62194 + C62194 + C31825 * C1402 + C31832 * C1385 +
            C62195 + C62195 + C31826 * C1401 + C31834 * C2697 + C62196 +
            C62196 + C31827 * C2699) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C37504 * C62191 + C39823 * C93737) * C4078 +
           (C37505 * C62191 + C39822 * C93737) * C4079) *
              C93635 * C93621 * C97 -
          ((C59452 * C93737 + C38561 * C62191) * C4079 +
           (C42861 * C93737 + C38560 * C62191) * C4078 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C62191 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C4077 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C62191 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C4078 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C62191 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C93635 * C800 -
          ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
           (C67959 + C67958) * C4077) *
              C93635 * C801 +
          (C67964 * C4077 + (C67963 + C67962) * C4078 +
           (C37507 * C62191 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
           C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
              C93662 * C93635 * C93621 * C97 -
          ((C36998 * C11102 + C43777 + C43777 + C93582 * C11110) * C72310 +
           C43784 * C72309 + C43783 * C72308 +
           (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C72307) *
              C93662 * C93635 * C93621 * C98 +
          ((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C72307 +
           (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C72308 +
           (C36998 * C1391 + C40500 + C40500 + C93582 * C1407) * C72309 +
           (C36998 * C13010 + C72312 + C72312 + C93582 * C13012) * C72310) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C72307 +
           C41997 * C72308 + C41998 * C72309 + C42000 * C72310) *
              C93662 * C93635 * C800 -
          (C41999 * C72310 + C41181 * C72309 + C39823 * C72308 +
           C37504 * C72307) *
              C93662 * C93635 * C801 +
          (C37505 * C72307 + C39822 * C72308 + C41182 * C72309 +
           (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C72310) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C800 -
          ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
            C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
               C93737 +
           (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
            (C188 * C815 + C93662 * C897) * C31825 +
            (C188 * C807 + C93662 * C889) * C31831) *
               C62191) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C31831 +
            (C188 * C816 + C93662 * C898) * C31825 +
            (C188 * C809 + C93662 * C891) * C31833 +
            (C188 * C817 + C93662 * C899) * C31826 +
            (C188 * C810 + C93662 * C892) * C31835 +
            (C188 * C818 + C93662 * C900) * C31827) *
               C62191 +
           ((C188 * C5818 + C93662 * C5922) * C31831 +
            (C188 * C5824 + C93662 * C5928) * C31825 +
            (C188 * C5817 + C93662 * C5921) * C31833 +
            (C188 * C5823 + C93662 * C5927) * C31826 +
            (C188 * C7631 + C93662 * C7738) * C31835 +
            (C188 * C7632 + C93662 * C7739) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 + C2788 * C31833 +
            C2789 * C31825 + C2790 * C31831) *
               C93737 +
           (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
            C219 * C31825 + C218 * C31831) *
               C62191) *
              C93635 * C93621 * C98 +
          ((C220 * C31831 + C221 * C31825 + C222 * C31833 + C223 * C31826 +
            C225 * C31835 + C224 * C31827) *
               C62191 +
           (C2788 * C31831 + C2787 * C31825 + C2786 * C31833 + C2785 * C31826 +
            (C188 * C2697 + C93662 * C2770) * C31835 +
            (C188 * C2698 + C93662 * C2771) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C7753 + C7754 + C7755) * C93582 +
            (C7756 + C7757 + C7758) * C36999) *
               C93737 +
           ((C4209 + C4208 + C4207) * C93582 +
            (C4206 + C4205 + C4204) * C36999) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C36999 +
            (C4212 + C4211 + C4210) * C93582) *
               C62191 +
           ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C36999 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93582) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C800 -
          (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
             C4176 * C3413 + C4077 * C3495) *
                C93582 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C36999) *
               C93737 +
           ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C93582 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C36999) *
               C62191) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C36999 +
            (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
             C4178 * C4922 + C4079 * C5044) *
                C93582) *
               C62191 +
           ((C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
             C4178 * C39804 + C4079 * C39892) *
                C36999 +
            (C4176 * C5824 + C4077 * C5928 + C4177 * C8617 + C4078 * C8743 +
             C4178 * C39805 + C4079 * C39893) *
                C93582) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C36999 +
            (C188 * C114 + C93662 * C195) * C93582) *
               C72307 +
           (C11252 * C36999 + C11253 * C93582) * C72308 +
           (C11254 * C36999 + C11255 * C93582) * C72309 +
           (C11259 * C36999 + C11258 * C93582) * C72310) *
              C93635 * C93621 * C97 -
          ((C11256 * C93582 + C11257 * C36999) * C72310 +
           (C9694 * C93582 + C9693 * C36999) * C72309 +
           (C2789 * C93582 + C2790 * C36999) * C72308 +
           (C219 * C93582 + C218 * C36999) * C72307) *
              C93635 * C93621 * C98 +
          ((C220 * C36999 + C221 * C93582) * C72307 +
           (C2788 * C36999 + C2787 * C93582) * C72308 +
           (C9696 * C36999 + C9695 * C93582) * C72309 +
           ((C188 * C13010 + C93662 * C13133) * C36999 +
            (C188 * C13011 + C93662 * C13134) * C93582) *
               C72310) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C36999 +
            (C188 * C114 + C93662 * C195) * C93582) *
               C72307 +
           (C11252 * C36999 + C11253 * C93582) * C72308 +
           (C11254 * C36999 + C11255 * C93582) * C72309 +
           (C11259 * C36999 + C11258 * C93582) * C72310) *
              C93635 * C800 -
          (((C188 * C14029 + C93662 * C14145) * C93582 +
            (C188 * C14027 + C93662 * C14143) * C36999) *
               C72310 +
           (C14163 * C93582 + C14162 * C36999) * C72309 +
           (C14161 * C93582 + C14160 * C36999) * C72308 +
           ((C188 * C815 + C93662 * C897) * C93582 +
            (C188 * C807 + C93662 * C889) * C36999) *
               C72307) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C36999 +
            (C188 * C816 + C93662 * C898) * C93582) *
               C72307 +
           ((C188 * C5818 + C93662 * C5922) * C36999 +
            (C188 * C5824 + C93662 * C5928) * C93582) *
               C72308 +
           ((C188 * C5821 + C93662 * C5924) * C36999 +
            (C188 * C5827 + C93662 * C5930) * C93582) *
               C72309 +
           ((C188 * C44722 + C93662 * C44827) * C36999 +
            (C188 * C44723 + C93662 * C44828) * C93582) *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C800 -
          ((C62345 * C3415 + C93737 * C3571 + C62344 * C813 + C62191 * C961) *
               C31827 +
           (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
               C31835 +
           (C62345 * C3414 + C93737 * C3570 + C62344 * C814 + C62191 * C962) *
               C31826 +
           (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
               C31833 +
           (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
               C31825 +
           (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
               C31831) *
              C93662 * C93635 * C801 +
          ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C31831 +
           (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
               C31825 +
           (C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
               C31833 +
           (C62344 * C817 + C62191 * C965 + C62345 * C5823 + C93737 * C6013) *
               C31826 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C31835 +
           (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
               C31827) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C93621 * C97 -
          ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
           (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
           (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
              C93662 * C93635 * C93621 * C98 +
          (C62383 * C31831 + C62384 * C31825 + (C62382 + C62381) * C31833 +
           (C62380 + C62379) * C31826 +
           (C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
               C31835 +
           (C62344 * C118 + C62191 * C286 + C62345 * C2698 + C93737 * C2857) *
               C31827) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
                C36999 +
            (C62344 * C815 + C62191 * C963 + C62345 * C3413 + C93737 * C3569) *
                C93582) *
               C4078 +
           ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C36999 +
            (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
                C93582) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C62345 * C5823 + C93737 * C6013 + C62344 * C817 + C62191 * C965) *
                C93582 +
            (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
                C36999) *
               C4079 +
           ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
           ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
              C93635 * C93621 * C98 +
          ((C62383 * C36999 + C62384 * C93582) * C4077 +
           ((C64684 + C64683) * C36999 + (C64682 + C64681) * C93582) * C4078 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C36999 +
            (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
                C93582) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C93635 * C800 -
          (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
           ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
           ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
              C93635 * C801 +
          (C68153 * C4077 +
           ((C68148 + C68147) * C36999 + (C68146 + C68145) * C93582) * C4078 +
           ((C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C62344 * C4922 + C62191 * C5126 + C62345 * C39805 +
             C93737 * C39961) *
                C93582) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C36999 +
           (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
            C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
            C72310 * C11349) *
               C93582) *
              C93662 * C93635 * C93621 * C97 -
          ((C72415 * C11106 + C72310 * C11348 + C72414 * C1398 +
            C72309 * C1546 + C72413 * C1395 + C72308 * C1543 + C72412 * C115 +
            C72307 * C283) *
               C93582 +
           (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
            C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
            C72307 * C277) *
               C36999) *
              C93662 * C93635 * C93621 * C98 +
          ((C72412 * C110 + C72307 * C278 + C72413 * C1386 + C72308 * C1534 +
            C72414 * C1391 + C72309 * C1539 + C72415 * C13010 +
            C72310 * C13241) *
               C36999 +
           (C72412 * C116 + C72307 * C284 + C72413 * C1394 + C72308 * C1542 +
            C72414 * C1399 + C72309 * C1547 + C72415 * C13011 +
            C72310 * C13242) *
               C93582) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C36999 +
           (C72412 * C114 + C72307 * C282 + C72413 * C1396 + C72308 * C1544 +
            C72414 * C1397 + C72309 * C1545 + C72415 * C11107 +
            C72310 * C11349) *
               C93582) *
              C93662 * C93635 * C800 -
          ((C72415 * C14029 + C72310 * C14267 + C72414 * C5825 +
            C72309 * C6015 + C72413 * C3413 + C72308 * C3569 + C72412 * C815 +
            C72307 * C963) *
               C93582 +
           (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
            C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
            C72307 * C955) *
               C36999) *
              C93662 * C93635 * C801 +
          ((C72412 * C808 + C72307 * C956 + C72413 * C5818 + C72308 * C6008 +
            C72414 * C5821 + C72309 * C6011 + C72415 * C44722 +
            C72310 * C44951) *
               C36999 +
           (C72412 * C816 + C72307 * C964 + C72413 * C5824 + C72308 * C6014 +
            C72414 * C5827 + C72309 * C6017 + C72415 * C44723 +
            C72310 * C44952) *
               C93582) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C800 -
          (((C36433 + C36434 + C36435) * C93662 +
            (C36436 + C36437 + C36438) * C188) *
               C93737 +
           ((C32947 + C32946 + C32945) * C93662 +
            (C32944 + C32943 + C32942) * C188) *
               C62191) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C188 +
            (C32950 + C32949 + C32948) * C93662) *
               C62191 +
           ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
             C31835 * C7631 + C31827 * C7632) *
                C188 +
            (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 + C31826 * C6093 +
             C31835 * C7738 + C31827 * C7968) *
                C93662) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 + C31826 * C1600 +
             C31831 * C1469 + C31825 * C1601) *
                C93662 +
            (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
             C31831 * C1387 + C31825 * C1395) *
                C188) *
               C93737 +
           ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
             C31831 * C190 + C31825 * C363) *
                C93662 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C188) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C188 +
            (C31831 * C191 + C31825 * C364 + C31833 * C192 + C31826 * C365 +
             C31835 * C193 + C31827 * C366) *
                C93662) *
               C62191 +
           ((C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
             C31835 * C2697 + C31827 * C2698) *
                C188 +
            (C31831 * C1468 + C31825 * C1600 + C31833 * C1467 + C31826 * C1599 +
             C31835 * C2770 + C31827 * C2942) *
                C93662) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
            C44104 * C4077 + C44103 * C4176) *
               C93737 +
           (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
            (C36999 * C190 + C93582 * C363) * C4077 +
            (C36999 * C109 + C93582 * C115) * C4176) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C4176 +
            (C36999 * C191 + C93582 * C364) * C4077 +
            (C36999 * C805 + C93582 * C813) * C4177 +
            (C36999 * C887 + C93582 * C1019) * C4078 +
            (C36999 * C810 + C93582 * C818) * C4178 +
            (C36999 * C892 + C93582 * C1024) * C4079) *
               C62191 +
           ((C36999 * C1386 + C93582 * C1394) * C4176 +
            (C36999 * C1468 + C93582 * C1600) * C4077 +
            (C36999 * C3411 + C93582 * C3415) * C4177 +
            (C36999 * C3493 + C93582 * C3641) * C4078 +
            (C36999 * C7631 + C93582 * C7632) * C4178 +
            (C36999 * C7738 + C93582 * C7968) * C4079) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
            C40058 * C4077 + C40059 * C4176) *
               C93737 +
           (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
            C37700 * C4077 + C37699 * C4176) *
               C62191) *
              C93635 * C801 +
          ((C37701 * C4176 + C37702 * C4077 + C37703 * C4177 + C37704 * C4078 +
            C37706 * C4178 + C37705 * C4079) *
               C62191 +
           (C40057 * C4176 + C40056 * C4077 + C40055 * C4177 + C40054 * C4078 +
            (C36999 * C39804 + C93582 * C39805) * C4178 +
            (C36999 * C39892 + C93582 * C40040) * C4079) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C188 +
            (C36999 * C189 + C93582 * C362) * C93662) *
               C72307 +
           (C42289 * C188 + C42290 * C93662) * C72308 +
           (C42291 * C188 + C42292 * C93662) * C72309 +
           (C42296 * C188 + C42295 * C93662) * C72310) *
              C93635 * C93621 * C97 -
          (((C36999 * C11223 + C93582 * C11426) * C93662 +
            (C36999 * C11102 + C93582 * C11106) * C188) *
               C72310 +
           (C44106 * C93662 + C44105 * C188) * C72309 +
           (C44104 * C93662 + C44103 * C188) * C72308 +
           ((C36999 * C190 + C93582 * C363) * C93662 +
            (C36999 * C109 + C93582 * C115) * C188) *
               C72307) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C188 +
            (C36999 * C191 + C93582 * C364) * C93662) *
               C72307 +
           ((C36999 * C1386 + C93582 * C1394) * C188 +
            (C36999 * C1468 + C93582 * C1600) * C93662) *
               C72308 +
           ((C36999 * C1391 + C93582 * C1399) * C188 +
            (C36999 * C1473 + C93582 * C1605) * C93662) *
               C72309 +
           ((C36999 * C13010 + C93582 * C13011) * C188 +
            (C36999 * C13133 + C93582 * C13359) * C93662) *
               C72310) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C188 +
            (C36999 * C189 + C93582 * C362) * C93662) *
               C72307 +
           (C42289 * C188 + C42290 * C93662) * C72308 +
           (C42291 * C188 + C42292 * C93662) * C72309 +
           (C42296 * C188 + C42295 * C93662) * C72310) *
              C93635 * C800 -
          ((C42293 * C93662 + C42294 * C188) * C72310 +
           (C41452 * C93662 + C41451 * C188) * C72309 +
           (C40058 * C93662 + C40059 * C188) * C72308 +
           (C37700 * C93662 + C37699 * C188) * C72307) *
              C93635 * C801 +
          ((C37701 * C188 + C37702 * C93662) * C72307 +
           (C40057 * C188 + C40056 * C93662) * C72308 +
           (C41454 * C188 + C41453 * C93662) * C72309 +
           ((C36999 * C44722 + C93582 * C44723) * C188 +
            (C36999 * C44827 + C93582 * C45069) * C93662) *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C800 -
          ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
           (C2311 * C31827 + C2312 * C31826 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
               C62191) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C31825 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C31826 +
            (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C31827) *
               C62191 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C31825 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C31826 +
            (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C93621 * C97 -
          ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
           (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
              C93635 * C93621 * C98 +
          ((C449 * C31825 + C450 * C31826 + C451 * C31827) * C62191 +
           (C3025 * C31825 + C3024 * C31826 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C93621 * C97 -
          ((C8084 + C8085 + C8086) * C93582 * C93737 +
           (C4491 + C4490 + C4489) * C93582 * C62191) *
              C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C93582 * C62191 +
           (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 + C4450 * C3411 +
            C8076 + C8076 + C4078 * C3711 + C4451 * C7631 + C8077 + C8077 +
            C4079 * C8067) *
               C93582 * C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C800 -
          ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
            C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
            C4077 * C3709) *
               C93582 * C93737 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C93582 * C62191) *
              C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C93582 * C62191 +
           (C4449 * C5818 + C68302 + C68302 + C4077 * C6174 + C4450 * C8615 +
            C68303 + C68303 + C4078 * C9089 + C4451 * C39804 + C68304 + C68304 +
            C4079 * C40125) *
               C93582 * C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
           C11572 * C93582 * C72308 + C11573 * C93582 * C72309 +
           C11575 * C93582 * C72310) *
              C93635 * C93621 * C97 -
          (C11574 * C93582 * C72310 + C9966 * C93582 * C72309 +
           C3026 * C93582 * C72308 + C448 * C93582 * C72307) *
              C93635 * C93621 * C98 +
          (C449 * C93582 * C72307 + C3025 * C93582 * C72308 +
           C9967 * C93582 * C72309 +
           (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C93582 *
               C72310) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C418 * C108 + C426 + C426 + C93662 * C419) * C93582 * C72307 +
           C11572 * C93582 * C72308 + C11573 * C93582 * C72309 +
           C11575 * C93582 * C72310) *
              C93635 * C800 -
          ((C418 * C14027 + C14488 + C14488 + C93662 * C14479) * C93582 *
               C72310 +
           C14495 * C93582 * C72309 + C14494 * C93582 * C72308 +
           (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93582 * C72307) *
              C93635 * C801 +
          ((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93582 * C72307 +
           (C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93582 * C72308 +
           (C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C93582 * C72309 +
           (C418 * C44722 + C72983 + C72983 + C93662 * C45176) * C93582 *
               C72310) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C800 -
          (((C62345 * C3493 + C93737 * C3785 + C62344 * C887 + C62191 * C1143) *
                C93662 +
            (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
                C188) *
               C31827 +
           ((C62345 * C3492 + C93737 * C3784 + C62344 * C888 + C62191 * C1144) *
                C93662 +
            (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
                C188) *
               C31826 +
           ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 + C62191 * C1145) *
                C93662 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C188) *
               C31825) *
              C93635 * C801 +
          (((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C188 +
            (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
                C93662) *
               C31825 +
           ((C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
                C188 +
            (C62344 * C891 + C62191 * C1147 + C62345 * C5921 + C93737 * C6265) *
                C93662) *
               C31826 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C188 +
            (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
                C93662) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C93621 * C97 -
          (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
           ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
           ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
              C93635 * C93621 * C98 +
          (C62628 * C31825 +
           ((C62382 + C62381) * C188 + (C62625 + C62624) * C93662) * C31826 +
           ((C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
                C188 +
            (C62344 * C193 + C62191 * C505 + C62345 * C2770 + C93737 * C3092) *
                C93662) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
               C4177 +
           (C62344 * C889 + C62191 * C1145 + C62345 * C3491 + C93737 * C3783) *
               C4078 +
           (C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C4178 +
           (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
               C4079) *
              C93582 * C93635 * C93621 * C97 -
          ((C62345 * C5921 + C93737 * C6265 + C62344 * C891 + C62191 * C1147) *
               C4079 +
           (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
               C4178 +
           (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
           (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
              C93582 * C93635 * C93621 * C98 +
          (C62383 * C4176 + C62626 * C4077 + (C64684 + C64683) * C4177 +
           (C64992 + C64991) * C4078 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C4178 +
           (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
               C4079) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C93635 * C800 -
          ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
           (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
           (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
              C93582 * C93635 * C801 +
          (C68149 * C4176 + C68397 * C4077 + (C68148 + C68147) * C4177 +
           (C68396 + C68395) * C4078 +
           (C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
            C93737 * C39960) *
               C4178 +
           (C62344 * C5040 + C62191 * C5449 + C62345 * C39892 +
            C93737 * C40196) *
               C4079) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C188 +
           (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
            C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
            C72310 * C11655) *
               C93662) *
              C93582 * C93635 * C93621 * C97 -
          ((C72415 * C11223 + C72310 * C11654 + C72414 * C1472 +
            C72309 * C1728 + C72413 * C1469 + C72308 * C1725 + C72412 * C190 +
            C72307 * C502) *
               C93662 +
           (C72415 * C11102 + C72310 * C11344 + C72414 * C1390 +
            C72309 * C1538 + C72413 * C1387 + C72308 * C1535 + C72412 * C109 +
            C72307 * C277) *
               C188) *
              C93582 * C93635 * C93621 * C98 +
          ((C72412 * C110 + C72307 * C278 + C72413 * C1386 + C72308 * C1534 +
            C72414 * C1391 + C72309 * C1539 + C72415 * C13010 +
            C72310 * C13241) *
               C188 +
           (C72412 * C191 + C72307 * C503 + C72413 * C1468 + C72308 * C1724 +
            C72414 * C1473 + C72309 * C1729 + C72415 * C13133 +
            C72310 * C13586) *
               C93662) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C72412 * C108 + C72307 * C276 + C72413 * C1388 + C72308 * C1536 +
            C72414 * C1389 + C72309 * C1537 + C72415 * C11103 +
            C72310 * C11345) *
               C188 +
           (C72412 * C189 + C72307 * C501 + C72413 * C1470 + C72308 * C1726 +
            C72414 * C1471 + C72309 * C1727 + C72415 * C11224 +
            C72310 * C11655) *
               C93662) *
              C93582 * C93635 * C800 -
          ((C72415 * C14143 + C72310 * C14595 + C72414 * C5923 +
            C72309 * C6267 + C72413 * C3491 + C72308 * C3783 + C72412 * C889 +
            C72307 * C1145) *
               C93662 +
           (C72415 * C14027 + C72310 * C14265 + C72414 * C5819 +
            C72309 * C6009 + C72413 * C3409 + C72308 * C3565 + C72412 * C807 +
            C72307 * C955) *
               C188) *
              C93582 * C93635 * C801 +
          ((C72412 * C808 + C72307 * C956 + C72413 * C5818 + C72308 * C6008 +
            C72414 * C5821 + C72309 * C6011 + C72415 * C44722 +
            C72310 * C44951) *
               C188 +
           (C72412 * C890 + C72307 * C1146 + C72413 * C5922 + C72308 * C6266 +
            C72414 * C5924 + C72309 * C6268 + C72415 * C44827 +
            C72310 * C45297) *
               C93662) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36745 + C36746 + C36747) * C93737 +
           (C36436 + C36437 + C36438) * C62345 +
           (C33202 + C33201 + C33200) * C62191 +
           (C32944 + C32943 + C32942) * C62344) *
              C93662 * C93635 * C801 +
          ((C32953 + C32952 + C32951) * C62344 +
           (C33205 + C33204 + C33203) * C62191 +
           (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
            C31835 * C7631 + C31827 * C7632) *
               C62345 +
           (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 + C31826 * C6345 +
            C31835 * C7856 + C31827 * C8295) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 + C31826 * C1782 +
            C31831 * C1535 + C31825 * C1783) *
               C93737 +
           (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
            C31831 * C1387 + C31825 * C1395) *
               C62345 +
           (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
            C31831 * C277 + C31825 * C580) *
               C62191 +
           (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
            C31831 * C109 + C31825 * C115) *
               C62344) *
              C93662 * C93635 * C93621 * C98 +
          ((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
            C31835 * C112 + C31827 * C118) *
               C62344 +
           (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
            C31835 * C280 + C31827 * C583) *
               C62191 +
           (C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
            C31835 * C2697 + C31827 * C2698) *
               C62345 +
           (C31831 * C1534 + C31825 * C1782 + C31833 * C1533 + C31826 * C1781 +
            C31835 * C2856 + C31827 * C3174) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C37699 * C62344 + C37883 * C62191 + C40059 * C62345 +
            C40279 * C93737) *
               C4078 +
           (C37701 * C62344 + C37884 * C62191 + C40057 * C62345 +
            C40278 * C93737) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C60057 * C93737 + C59752 * C62345 + C39000 * C62191 +
            C38784 * C62344) *
               C4079 +
           (C43475 * C93737 + C43167 * C62345 + C38999 * C62191 +
            C38782 * C62344) *
               C4078 +
           (C44421 * C93737 + C44103 * C62345 +
            (C36999 * C277 + C93582 * C580) * C62191 +
            (C36999 * C109 + C93582 * C115) * C62344) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C62344 +
            (C36999 * C278 + C93582 * C581) * C62191 +
            (C36999 * C1386 + C93582 * C1394) * C62345 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C4077 +
           ((C36999 * C805 + C93582 * C813) * C62344 +
            (C36999 * C953 + C93582 * C1201) * C62191 +
            (C36999 * C3411 + C93582 * C3415) * C62345 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C4078 +
           ((C36999 * C810 + C93582 * C818) * C62344 +
            (C36999 * C958 + C93582 * C1206) * C62191 +
            (C36999 * C7631 + C93582 * C7632) * C62345 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C93635 * C800 -
          ((C68480 + C68481 + C68482 + C68483) * C4079 +
           (C68479 + C68478 + C68477 + C68476) * C4078 +
           (C68475 + C68474 + C68473 + C68472) * C4077) *
              C93635 * C801 +
          (C68486 * C4077 + (C68483 + C68482 + C68481 + C68480) * C4078 +
           (C37706 * C62344 + C37886 * C62191 +
            (C36999 * C39804 + C93582 * C39805) * C62345 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C72412 +
           (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
           C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
           C42296 * C72415 + C42580 * C72310) *
              C93662 * C93635 * C93621 * C97 -
          ((C36999 * C11344 + C93582 * C11732) * C72310 +
           (C36999 * C11102 + C93582 * C11106) * C72415 + C44422 * C72309 +
           C44105 * C72414 + C44421 * C72308 + C44103 * C72413 +
           (C36999 * C277 + C93582 * C580) * C72307 +
           (C36999 * C109 + C93582 * C115) * C72412) *
              C93662 * C93635 * C93621 * C98 +
          ((C36999 * C110 + C93582 * C116) * C72412 +
           (C36999 * C278 + C93582 * C581) * C72307 +
           (C36999 * C1386 + C93582 * C1394) * C72413 +
           (C36999 * C1534 + C93582 * C1782) * C72308 +
           (C36999 * C1391 + C93582 * C1399) * C72414 +
           (C36999 * C1539 + C93582 * C1787) * C72309 +
           (C36999 * C13010 + C93582 * C13011) * C72415 +
           (C36999 * C13241 + C93582 * C13694) * C72310) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36999 * C108 + C93582 * C114) * C72412 +
           (C36999 * C276 + C93582 * C579) * C72307 + C42289 * C72413 +
           C42577 * C72308 + C42291 * C72414 + C42578 * C72309 +
           C42296 * C72415 + C42580 * C72310) *
              C93662 * C93635 * C800 -
          (C42579 * C72310 + C42294 * C72415 + C41715 * C72309 +
           C41451 * C72414 + C40279 * C72308 + C40059 * C72413 +
           C37883 * C72307 + C37699 * C72412) *
              C93662 * C93635 * C801 +
          (C37701 * C72412 + C37884 * C72307 + C40057 * C72413 +
           C40278 * C72308 + C41454 * C72414 + C41716 * C72309 +
           (C36999 * C44722 + C93582 * C44723) * C72415 +
           (C36999 * C44951 + C93582 * C45405) * C72310) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C800 -
          ((C23217 * C93737 + C22578 * C62345 + C2539 * C62191 +
            C2074 * C62344) *
               C31827 +
           (C12793 * C93737 + C12150 * C62345 + C2540 * C62191 +
            C2076 * C62344) *
               C31826 +
           (C14808 * C93737 + C14160 * C62345 +
            (C188 * C955 + C93662 * C1261) * C62191 +
            (C188 * C807 + C93662 * C889) * C62344) *
               C31825) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C62344 +
            (C188 * C956 + C93662 * C1262) * C62191 +
            (C188 * C5818 + C93662 * C5922) * C62345 +
            (C188 * C6008 + C93662 * C6426) * C93737) *
               C31825 +
           ((C188 * C809 + C93662 * C891) * C62344 +
            (C188 * C957 + C93662 * C1263) * C62191 +
            (C188 * C5817 + C93662 * C5921) * C62345 +
            (C188 * C6007 + C93662 * C6425) * C93737) *
               C31826 +
           ((C188 * C810 + C93662 * C892) * C62344 +
            (C188 * C958 + C93662 * C1264) * C62191 +
            (C188 * C7631 + C93662 * C7738) * C62345 +
            (C188 * C7856 + C93662 * C8394) * C93737) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C93621 * C97 -
          ((C62785 + C62786 + C62787 + C62788) * C31827 +
           (C62784 + C62783 + C62782 + C62781) * C31826 +
           (C62780 + C62779 + C62778 + C62777) * C31825) *
              C93635 * C93621 * C98 +
          (C62791 * C31825 + (C62788 + C62787 + C62786 + C62785) * C31826 +
           (C225 * C62344 + C657 * C62191 +
            (C188 * C2697 + C93662 * C2770) * C62345 +
            (C188 * C2856 + C93662 * C3241) * C93737) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C93621 * C97 -
          ((C8402 + C8403 + C8404) * C93737 + (C7756 + C7757 + C7758) * C62345 +
           (C4749 + C4748 + C4747) * C62191 +
           (C4206 + C4205 + C4204) * C62344) *
              C93582 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C62344 + (C4752 + C4751 + C4750) * C62191 +
           (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
            C4178 * C7631 + C4079 * C7738) *
               C62345 +
           (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 + C4078 * C3925 +
            C4178 * C7856 + C4079 * C8394) *
               C93737) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C800 -
          ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
            C4176 * C3565 + C4077 * C3923) *
               C93737 +
           (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
            C4176 * C3409 + C4077 * C3491) *
               C62345 +
           (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
            C4176 * C955 + C4077 * C1261) *
               C62191 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C62344) *
              C93582 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C62344 +
           (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
            C4178 * C5122 + C4079 * C5639) *
               C62191 +
           (C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
            C4178 * C39804 + C4079 * C39892) *
               C62345 +
           (C4176 * C6008 + C4077 * C6426 + C4177 * C8843 + C4078 * C9413 +
            C4178 * C39960 + C4079 * C40348) *
               C93737) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C72412 +
           (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
           C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
           C11259 * C72415 + C11845 * C72310) *
              C93582 * C93635 * C93621 * C97 -
          (C11844 * C72310 + C11257 * C72415 + C10222 * C72309 +
           C9693 * C72414 + C3254 * C72308 + C2790 * C72413 + C654 * C72307 +
           C218 * C72412) *
              C93582 * C93635 * C93621 * C98 +
          (C220 * C72412 + C655 * C72307 + C2788 * C72413 + C3253 * C72308 +
           C9696 * C72414 + C10223 * C72309 +
           (C188 * C13010 + C93662 * C13133) * C72415 +
           (C188 * C13241 + C93662 * C13805) * C72310) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C188 * C108 + C93662 * C189) * C72412 +
           (C188 * C276 + C93662 * C635) * C72307 + C11252 * C72413 +
           C11842 * C72308 + C11254 * C72414 + C11843 * C72309 +
           C11259 * C72415 + C11845 * C72310) *
              C93582 * C93635 * C800 -
          ((C188 * C14265 + C93662 * C14801) * C72310 +
           (C188 * C14027 + C93662 * C14143) * C72415 + C14809 * C72309 +
           C14162 * C72414 + C14808 * C72308 + C14160 * C72413 +
           (C188 * C955 + C93662 * C1261) * C72307 +
           (C188 * C807 + C93662 * C889) * C72412) *
              C93582 * C93635 * C801 +
          ((C188 * C808 + C93662 * C890) * C72412 +
           (C188 * C956 + C93662 * C1262) * C72307 +
           (C188 * C5818 + C93662 * C5922) * C72413 +
           (C188 * C6008 + C93662 * C6426) * C72308 +
           (C188 * C5821 + C93662 * C5924) * C72414 +
           (C188 * C6011 + C93662 * C6428) * C72309 +
           (C188 * C44722 + C93662 * C44827) * C72415 +
           (C188 * C44951 + C93662 * C45510) * C72310) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[64] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C800 -
                    ((C62866 * C3411 + C63576 + C63576 + C93737 * C3995 +
                      C62865 * C805 + C63577 + C63577 + C62191 * C1317) *
                         C93662 * C31827 +
                     (C62866 * C3410 + C63578 + C63578 + C93737 * C3994 +
                      C62865 * C806 + C63579 + C63579 + C62191 * C1318) *
                         C93662 * C31826 +
                     (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                      C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                         C93662 * C31825) *
                        C93635 * C801 +
                    ((C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C93662 * C31825 +
                     (C62865 * C809 + C63584 + C63584 + C62191 * C1321 +
                      C62866 * C5817 + C63585 + C63585 + C93737 * C6505) *
                         C93662 * C31826 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C93662 * C31827) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C93621 * C97 -
                    ((C62906 + C62907) * C93662 * C31827 +
                     (C62905 + C62904) * C93662 * C31826 +
                     (C62903 + C62902) * C93662 * C31825) *
                        C93635 * C93621 * C98 +
                    (C62909 * C31825 + (C62907 + C62906) * C93662 * C31826 +
                     (C62865 * C112 + C62888 + C62888 + C62191 * C718 +
                      C62866 * C2697 + C62889 + C62889 + C93737 * C3323) *
                         C93662 * C31827) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C62865 * C807 + C63581 + C63581 + C62191 * C1319 +
                      C62866 * C3409 + C63580 + C63580 + C93737 * C3993) *
                         C4078 +
                     (C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C4079) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C62866 * C5817 + C63585 + C63585 + C93737 * C6505 +
                      C62865 * C809 + C63584 + C63584 + C62191 * C1321) *
                         C4079 +
                     (C65317 + C65318) * C4078 + (C62903 + C62902) * C4077) *
                        C93582 * C93635 * C93621 * C98 +
                    (C62908 * C4077 + (C65316 + C65315) * C4078 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C4079) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C68663 + C68664) * C4078 + C68669 * C4079) *
                        C93582 * C93635 * C800 -
                    ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                     (C68664 + C68663) * C4077) *
                        C93582 * C93635 * C801 +
                    (C68669 * C4077 + (C68668 + C68667) * C4078 +
                     (C62865 * C4918 + C68649 + C68649 + C62191 * C5717 +
                      C62866 * C39804 + C68650 + C68650 + C93737 * C40415) *
                         C4079) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C72716 * C108 + C72721 + C72721 + C72307 * C714 +
                     C72717 * C1388 + C72722 + C72722 + C72308 * C1900 +
                     C72718 * C1389 + C72723 + C72723 + C72309 * C1901 +
                     C72719 * C11103 + C72724 + C72724 + C72310 * C11920) *
                        C93662 * C93582 * C93635 * C93621 * C97 -
                    (C72719 * C11102 + C72725 + C72725 + C72310 * C11919 +
                     C72718 * C1390 + C72726 + C72726 + C72309 * C1902 +
                     C72717 * C1387 + C72727 + C72727 + C72308 * C1899 +
                     C72716 * C109 + C72728 + C72728 + C72307 * C715) *
                        C93662 * C93582 * C93635 * C93621 * C98 +
                    (C72716 * C110 + C72729 + C72729 + C72307 * C716 +
                     C72717 * C1386 + C72730 + C72730 + C72308 * C1898 +
                     C72718 * C1391 + C72731 + C72731 + C72309 * C1903 +
                     C72719 * C13010 + C72732 + C72732 + C72310 * C13910) *
                        C93662 * C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C72716 * C108 + C72721 + C72721 + C72307 * C714 +
                     C72717 * C1388 + C72722 + C72722 + C72308 * C1900 +
                     C72718 * C1389 + C72723 + C72723 + C72309 * C1901 +
                     C72719 * C11103 + C72724 + C72724 + C72310 * C11920) *
                        C93662 * C93582 * C93635 * C800 -
                    (C72719 * C14027 + C73184 + C73184 + C72310 * C14907 +
                     C72718 * C5819 + C73185 + C73185 + C72309 * C6507 +
                     C72717 * C3409 + C73186 + C73186 + C72308 * C3993 +
                     C72716 * C807 + C73187 + C73187 + C72307 * C1319) *
                        C93662 * C93582 * C93635 * C801 +
                    (C72716 * C808 + C73188 + C73188 + C72307 * C1320 +
                     C72717 * C5818 + C73189 + C73189 + C72308 * C6506 +
                     C72718 * C5821 + C73190 + C73190 + C72309 * C6508 +
                     C72719 * C44722 + C73191 + C73191 + C72310 * C45621) *
                        C93662 * C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93846 +
                      (C52727 + C52728) * C93847 + C83302 * C81840) *
                         C93662 * C93635 * C1979 -
                     ((C52729 + C52730) * C81840 + C56138 * C93847 +
                      (C46557 + C46556) * C93846) *
                         C93662 * C93635 * C1980) *
                        C1981 +
                    (((C48049 + C48050) * C93846 + (C53709 + C53710) * C93847 +
                      (C45719 * C5820 + C54933 + C54933 + C93805 * C5832 +
                       C45721 * C12033 + C54934 + C54934 + C93587 * C12035) *
                          C81840) *
                         C93662 * C93635 * C1980 -
                     ((C45721 * C1391 + C54932 + C54932 + C93587 * C1407 +
                       C45719 * C1390 + C54931 + C54931 + C93805 * C1406) *
                          C81840 +
                      (C54940 + C54939) * C93847 +
                      (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                       C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                          C93846) *
                         C93662 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C91732 +
             (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
             C219 * C93587) *
                C93846 +
            (C83389 + C83390 + C83391 + C83392) * C93847 + C83403 * C81840) *
               C93635 * C1979 -
           ((C12147 * C93587 + C12148 * C91722 + C14163 * C93805 +
             C14162 * C91732) *
                C81840 +
            (C12149 * C93587 + C12150 * C91722 + C14161 * C93805 +
             C14160 * C91732) *
                C93847 +
            (C2075 * C93587 + C2076 * C91722 +
             (C188 * C815 + C93662 * C897) * C93805 +
             (C188 * C807 + C93662 * C889) * C91732) *
                C93846) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C91732 + C2075 * C93805 + C2074 * C91722 +
             C2073 * C93587) *
                C93846 +
            (C12150 * C91732 + C12149 * C93805 + C22578 * C91722 +
             C22577 * C93587) *
                C93847 +
            (C12148 * C91732 + C12147 * C93805 +
             (C188 * C12033 + C93662 * C12136) * C91722 +
             (C188 * C12034 + C93662 * C12137) * C93587) *
                C81840) *
               C93635 * C1980 -
           ((C9695 * C93587 + C9696 * C91722 + C9694 * C93805 +
             C9693 * C91732) *
                C81840 +
            (C2787 * C93587 + C2788 * C91722 + C2789 * C93805 +
             C2790 * C91732) *
                C93847 +
            (C221 * C93587 + C220 * C91722 + C219 * C93805 + C218 * C91732) *
                C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C91732 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93805 +
                      (C82019 + C82020 + C82021) * C91722 +
                      (C82022 + C82023 + C82024) * C93587) *
                         C93662 * C93635 * C1979 -
                     ((C84271 + C84272 + C84273) * C93587 +
                      (C84274 + C84275 + C84276) * C91722 +
                      (C81993 * C5825 + C81840 * C6015 + C81992 * C3413 +
                       C93847 * C3569 + C81991 * C815 + C93846 * C963) *
                          C93805 +
                      (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                       C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                          C91732) *
                         C93662 * C93635 * C1980) *
                        C1981 +
                    (((C84276 + C84275 + C84274) * C91732 +
                      (C84273 + C84272 + C84271) * C93805 +
                      (C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                       C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                          C91722 +
                      (C81991 * C813 + C93846 * C961 + C81992 * C3415 +
                       C93847 * C3571 + C81993 * C12034 + C81840 * C12249) *
                          C93587) *
                         C93662 * C93635 * C1980 -
                     ((C82025 + C82026 + C82027) * C93587 +
                      (C82028 + C82029 + C82030) * C91722 +
                      (C82024 + C82023 + C82022) * C93805 +
                      (C82021 + C82020 + C82019) * C91732) *
                         C93662 * C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C188 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93662) *
                C93846 +
            ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
            C83568 * C81840) *
               C93635 * C1979 -
           (((C53055 + C53056) * C93662 + (C53057 + C53058) * C188) * C81840 +
            (C56531 * C93662 + C56532 * C188) * C93847 +
            ((C46828 + C46827) * C93662 + (C46826 + C46825) * C188) * C93846) *
               C93635 * C1980) *
              C1981 +
          ((((C48389 + C48390) * C188 + (C48391 + C48392) * C93662) * C93846 +
            ((C54121 + C54122) * C188 + (C54123 + C54124) * C93662) * C93847 +
            ((C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
              C93587 * C12034) *
                 C188 +
             (C91732 * C5925 + C93805 * C6096 + C91722 * C12136 +
              C93587 * C12366) *
                 C93662) *
                C81840) *
               C93635 * C1980 -
           (((C91722 * C1473 + C93587 * C1605 + C91732 * C1472 +
              C93805 * C1604) *
                 C93662 +
             (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 +
              C93805 * C1398) *
                 C188) *
                C81840 +
            ((C55346 + C55345) * C93662 + (C55344 + C55343) * C188) * C93847 +
            ((C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C93662 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C188) *
                C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
             C448 * C93587) *
                C93846 +
            (C83643 + C83644) * C93847 + C83649 * C81840) *
               C93635 * C1979 -
           ((C12476 * C93587 + C14495 * C93805) * C81840 +
            (C12477 * C93587 + C14494 * C93805) * C93847 +
            (C2312 * C93587 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93805) *
                C93846) *
               C93635 * C1980) *
              C1981 +
          (((C2312 * C93805 + C2311 * C93587) * C93846 +
            (C12477 * C93805 + C22901 * C93587) * C93847 +
            (C12476 * C93805 +
             (C418 * C12033 + C12471 + C12471 + C93662 * C12465) * C93587) *
                C81840) *
               C93635 * C1980 -
           ((C9967 * C93587 + C9966 * C93805) * C81840 +
            (C3025 * C93587 + C3026 * C93805) * C93847 +
            (C449 * C93587 + C448 * C93805) * C93846) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C188 +
                       (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                        C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                           C93662) *
                          C93805 +
                      ((C82019 + C82020 + C82021) * C188 +
                       (C82265 + C82266 + C82267) * C93662) *
                          C93587) *
                         C93635 * C1979 -
                     (((C84577 + C84578 + C84579) * C93662 +
                       (C84274 + C84275 + C84276) * C188) *
                          C93587 +
                      ((C81993 * C5923 + C81840 * C6267 + C81992 * C3491 +
                        C93847 * C3783 + C81991 * C889 + C93846 * C1145) *
                           C93662 +
                       (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                        C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                           C188) *
                          C93805) *
                         C93635 * C1980) *
                        C1981 +
                    ((((C84276 + C84275 + C84274) * C188 +
                       (C84579 + C84578 + C84577) * C93662) *
                          C93805 +
                      ((C81991 * C805 + C93846 * C953 + C81992 * C3411 +
                        C93847 * C3567 + C81993 * C12033 + C81840 * C12248) *
                           C188 +
                       (C81991 * C887 + C93846 * C1143 + C81992 * C3493 +
                        C93847 * C3785 + C81993 * C12136 + C81840 * C12575) *
                           C93662) *
                          C93587) *
                         C93635 * C1980 -
                     (((C82268 + C82269 + C82270) * C93662 +
                       (C82028 + C82029 + C82030) * C188) *
                          C93587 +
                      ((C82267 + C82266 + C82265) * C93662 +
                       (C82021 + C82020 + C82019) * C188) *
                          C93805) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C81991 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93846 +
            (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
            C83552 * C81993 + C83798 * C81840) *
               C93662 * C93635 * C1979 -
           ((C53371 + C53372) * C81840 + (C53057 + C53058) * C81993 +
            C56924 * C93847 + C56532 * C81992 + (C47087 + C47086) * C93846 +
            (C46826 + C46825) * C81991) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C48389 + C48390) * C81991 + (C48723 + C48724) * C93846 +
            (C54121 + C54122) * C81992 + (C54529 + C54530) * C93847 +
            (C91732 * C5820 + C93805 * C5826 + C91722 * C12033 +
             C93587 * C12034) *
                C81993 +
            (C91732 * C6010 + C93805 * C6348 + C91722 * C12248 +
             C93587 * C12683) *
                C81840) *
               C93662 * C93635 * C1980 -
           ((C91722 * C1539 + C93587 * C1787 + C91732 * C1538 +
             C93805 * C1786) *
                C81840 +
            (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 +
             C93805 * C1398) *
                C81993 +
            (C55744 + C55743) * C93847 + (C55344 + C55343) * C81992 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93846 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C81991) *
               C93662 * C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C81991 +
             (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
             C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
                C93805 +
            (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
               C93635 * C1979 -
           ((C84776 + C84777 + C84778 + C84779 + C84780 + C84781) * C93587 +
            (C14809 * C81840 + C14162 * C81993 + C14808 * C93847 +
             C14160 * C81992 + (C188 * C955 + C93662 * C1261) * C93846 +
             (C188 * C807 + C93662 * C889) * C81991) *
                C93805) *
               C93635 * C1980) *
              C1981 +
          (((C84781 + C84780 + C84779 + C84778 + C84777 + C84776) * C93805 +
            (C2074 * C81991 + C2539 * C93846 + C22578 * C81992 +
             C23217 * C93847 + (C188 * C12033 + C93662 * C12136) * C81993 +
             (C188 * C12248 + C93662 * C12782) * C81840) *
                C93587) *
               C93635 * C1980 -
           ((C82425 + C82426 + C82427 + C82428 + C82429 + C82430) * C93587 +
            (C82424 + C82423 + C82422 + C82421 + C82420 + C82419) * C93805) *
               C93635 * C1979) *
              C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93662 * C93805 +
                      (C82544 + C82545 + C82546) * C93662 * C93587) *
                         C93635 * C1979 -
                     ((C84895 + C84896 + C84897) * C93662 * C93587 +
                      (C82506 * C5819 + C83219 + C83219 + C81840 * C6507 +
                       C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                       C82504 * C807 + C83221 + C83221 + C93846 * C1319) *
                          C93662 * C93805) *
                         C93635 * C1980) *
                        C1981 +
                    (((C84897 + C84896 + C84895) * C93662 * C93805 +
                      (C82504 * C805 + C84886 + C84886 + C93846 * C1317 +
                       C82505 * C3411 + C84887 + C84887 + C93847 * C3995 +
                       C82506 * C12033 + C84888 + C84888 + C81840 * C12893) *
                          C93662 * C93587) *
                         C93635 * C1980 -
                     ((C82547 + C82548 + C82549) * C93662 * C93587 +
                      (C82546 + C82545 + C82544) * C93662 * C93805) *
                         C93635 * C1979) *
                        C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93846 +
                      (C52727 + C52728) * C93847 + C83302 * C81840) *
                         C93662 * C2695 -
                     ((C83313 + C83314) * C81840 + (C52731 + C52732) * C93847 +
                      (C52728 + C52727) * C93846) *
                         C93662 * C2696) *
                        C1979 +
                    ((C56137 * C93846 + (C52730 + C52729) * C93847 +
                      (C45719 * C14027 + C52713 + C52713 + C93805 * C14031 +
                       C45721 * C14028 + C52714 + C52714 + C93587 * C14032) *
                          C81840) *
                         C93662 * C2696 -
                     ((C52729 + C52730) * C81840 + C56138 * C93847 +
                      (C46557 + C46556) * C93846) *
                         C93662 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C91732 +
             (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
             C219 * C93587) *
                C93846 +
            (C83389 + C83390 + C83391 + C83392) * C93847 + C83403 * C81840) *
               C2695 -
           ((C83397 + C83398 + C83399 + C83400) * C81840 +
            (C83396 + C83395 + C83394 + C83393) * C93847 +
            (C83392 + C83391 + C83390 + C83389) * C93846) *
               C2696) *
              C1979 +
          (((C86069 + C86070 + C86071 + C86072) * C93846 +
            (C86073 + C86074 + C86075 + C86076) * C93847 +
            (C75083 * C91732 + C75084 * C93805 +
             (C188 * C14028 + C93662 * C14144) * C91722 +
             (C188 * C14030 + C93662 * C14146) * C93587) *
                C81840) *
               C2696 -
           ((C86076 + C86075 + C86074 + C86073) * C81840 +
            (C86072 + C86071 + C86070 + C86069) * C93847 +
            (C2075 * C93587 + C2076 * C91722 +
             (C188 * C815 + C93662 * C897) * C93805 +
             (C188 * C807 + C93662 * C889) * C91732) *
                C93846) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eexz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C91732 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93805 +
                      (C82019 + C82020 + C82021) * C91722 +
                      (C82022 + C82023 + C82024) * C93587) *
                         C93662 * C2695 -
                     ((C85224 + C85225 + C85226) * C93587 +
                      (C85227 + C85228 + C85229) * C91722 +
                      (C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                       C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                          C93805 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C91732) *
                         C93662 * C2696) *
                        C1979 +
                    (((C81991 * C3409 + C93846 * C3565 + C81992 * C5819 +
                       C93847 * C6009 + C81993 * C14027 + C81840 * C14265) *
                          C91732 +
                      (C81991 * C3413 + C93846 * C3569 + C81992 * C5825 +
                       C93847 * C6015 + C81993 * C14029 + C81840 * C14267) *
                          C93805 +
                      (C81991 * C3410 + C93846 * C3566 + C81992 * C5820 +
                       C93847 * C6010 + C81993 * C14028 + C81840 * C14266) *
                          C91722 +
                      (C81991 * C3414 + C93846 * C3570 + C81992 * C5826 +
                       C93847 * C6016 + C81993 * C14030 + C81840 * C14268) *
                          C93587) *
                         C93662 * C2696 -
                     ((C84271 + C84272 + C84273) * C93587 +
                      (C84274 + C84275 + C84276) * C91722 +
                      (C81993 * C5825 + C81840 * C6015 + C81992 * C3413 +
                       C93847 * C3569 + C81991 * C815 + C93846 * C963) *
                          C93805 +
                      (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                       C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                          C91732) *
                         C93662 * C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C188 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93662) *
                C93846 +
            ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
            C83568 * C81840) *
               C2695 -
           (((C83564 + C83565) * C93662 + (C83566 + C83567) * C188) * C81840 +
            ((C53059 + C53060) * C93662 + (C53061 + C53062) * C188) * C93847 +
            ((C53054 + C53053) * C93662 + (C53052 + C53051) * C188) * C93846) *
               C2696) *
              C1979 +
          (((C56529 * C188 + C56530 * C93662) * C93846 +
            ((C53058 + C53057) * C188 + (C53056 + C53055) * C93662) * C93847 +
            ((C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
              C93587 * C14030) *
                 C188 +
             (C91732 * C14143 + C93805 * C14367 + C91722 * C14144 +
              C93587 * C14368) *
                 C93662) *
                C81840) *
               C2696 -
           (((C53055 + C53056) * C93662 + (C53057 + C53058) * C188) * C81840 +
            (C56531 * C93662 + C56532 * C188) * C93847 +
            ((C46828 + C46827) * C93662 + (C46826 + C46825) * C188) * C93846) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
             C448 * C93587) *
                C93846 +
            (C83643 + C83644) * C93847 + C83649 * C81840) *
               C2695 -
           ((C83647 + C83648) * C81840 + (C83646 + C83645) * C93847 +
            (C83644 + C83643) * C93846) *
               C2696) *
              C1979 +
          (((C86371 + C86372) * C93846 + (C86373 + C86374) * C93847 +
            (C75298 * C93805 +
             (C418 * C14028 + C14489 + C14489 + C93662 * C14480) * C93587) *
                C81840) *
               C2696 -
           ((C86374 + C86373) * C81840 + (C86372 + C86371) * C93847 +
            (C2312 * C93587 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93805) *
                C93846) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eeyz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C188 +
                       (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                        C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                           C93662) *
                          C93805 +
                      ((C82019 + C82020 + C82021) * C188 +
                       (C82265 + C82266 + C82267) * C93662) *
                          C93587) *
                         C2695 -
                     (((C85546 + C85547 + C85548) * C93662 +
                       (C85227 + C85228 + C85229) * C188) *
                          C93587 +
                      ((C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                        C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                           C93662 +
                       (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                        C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                           C188) *
                          C93805) *
                         C2696) *
                        C1979 +
                    ((((C81991 * C3409 + C93846 * C3565 + C81992 * C5819 +
                        C93847 * C6009 + C81993 * C14027 + C81840 * C14265) *
                           C188 +
                       (C81991 * C3491 + C93846 * C3783 + C81992 * C5923 +
                        C93847 * C6267 + C81993 * C14143 + C81840 * C14595) *
                           C93662) *
                          C93805 +
                      ((C81991 * C3410 + C93846 * C3566 + C81992 * C5820 +
                        C93847 * C6010 + C81993 * C14028 + C81840 * C14266) *
                           C188 +
                       (C81991 * C3492 + C93846 * C3784 + C81992 * C5925 +
                        C93847 * C6269 + C81993 * C14144 + C81840 * C14596) *
                           C93662) *
                          C93587) *
                         C2696 -
                     (((C84577 + C84578 + C84579) * C93662 +
                       (C84274 + C84275 + C84276) * C188) *
                          C93587 +
                      ((C81993 * C5923 + C81840 * C6267 + C81992 * C3491 +
                        C93847 * C3783 + C81991 * C889 + C93846 * C1145) *
                           C93662 +
                       (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                        C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                           C188) *
                          C93805) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eezx[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C81991 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93846 +
            (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
            C83552 * C81993 + C83798 * C81840) *
               C93662 * C2695 -
           ((C83803 + C83804) * C81840 + (C83566 + C83567) * C81993 +
            (C53373 + C53374) * C93847 + (C53061 + C53062) * C81992 +
            (C53370 + C53369) * C93846 + (C53052 + C53051) * C81991) *
               C93662 * C2696) *
              C1979 +
          ((C56529 * C81991 + C56923 * C93846 + (C53058 + C53057) * C81992 +
            (C53372 + C53371) * C93847 +
            (C91732 * C14027 + C93805 * C14029 + C91722 * C14028 +
             C93587 * C14030) *
                C81993 +
            (C91732 * C14265 + C93805 * C14695 + C91722 * C14266 +
             C93587 * C14696) *
                C81840) *
               C93662 * C2696 -
           ((C53371 + C53372) * C81840 + (C53057 + C53058) * C81993 +
            C56924 * C93847 + C56532 * C81992 + (C47087 + C47086) * C93846 +
            (C46826 + C46825) * C81991) *
               C93662 * C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C81991 +
             (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
             C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
                C93805 +
            (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
               C2695 -
           ((C85751 + C85752 + C85753 + C85754 + C85755 + C85756) * C93587 +
            (C11845 * C81840 + C11259 * C81993 + C11843 * C93847 +
             C11254 * C81992 + C11842 * C93846 + C11252 * C81991) *
                C93805) *
               C2696) *
              C1979 +
          (((C14160 * C81991 + C14808 * C93846 + C14162 * C81992 +
             C14809 * C93847 + C75083 * C81993 + C75500 * C81840) *
                C93805 +
            (C12150 * C81991 + C12793 * C93846 + C12148 * C81992 +
             C12792 * C93847 + (C188 * C14028 + C93662 * C14144) * C81993 +
             (C188 * C14266 + C93662 * C14802) * C81840) *
                C93587) *
               C2696 -
           ((C84776 + C84777 + C84778 + C84779 + C84780 + C84781) * C93587 +
            (C14809 * C81840 + C14162 * C81993 + C14808 * C93847 +
             C14160 * C81992 + (C188 * C955 + C93662 * C1261) * C93846 +
             (C188 * C807 + C93662 * C889) * C81991) *
                C93805) *
               C2695) *
              C1980) *
         C93609) /
        (p * q * std::sqrt(p + q));
    d2eezz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93662 * C93805 +
                      (C82544 + C82545 + C82546) * C93662 * C93587) *
                         C2695 -
                     ((C85870 + C85871 + C85872) * C93662 * C93587 +
                      (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                       C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                       C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                          C93662 * C93805) *
                         C2696) *
                        C1979 +
                    (((C82504 * C3409 + C86767 + C86767 + C93846 * C3993 +
                       C82505 * C5819 + C86768 + C86768 + C93847 * C6507 +
                       C82506 * C14027 + C86769 + C86769 + C81840 * C14907) *
                          C93662 * C93805 +
                      (C82504 * C3410 + C86770 + C86770 + C93846 * C3994 +
                       C82505 * C5820 + C86771 + C86771 + C93847 * C6509 +
                       C82506 * C14028 + C86772 + C86772 + C81840 * C14908) *
                          C93662 * C93587) *
                         C2696 -
                     ((C84895 + C84896 + C84897) * C93662 * C93587 +
                      (C82506 * C5819 + C83219 + C83219 + C81840 * C6507 +
                       C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                       C82504 * C807 + C83221 + C83221 + C93846 * C1319) *
                          C93662 * C93805) *
                         C2695) *
                        C1980) *
                   C93609) /
                  (p * q * std::sqrt(p + q));
    d2eexx[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93846 +
                     (C52727 + C52728) * C93847 + (C52732 + C52731) * C81840) *
                        C93662 * C93635 * C800 -
                    ((C52729 + C52730) * C81840 + C56138 * C93847 +
                     (C46557 + C46556) * C93846) *
                        C93662 * C93635 * C801 +
                    (C46562 * C93846 + (C49994 + C49993) * C93847 +
                     (C45719 * C5821 + C47327 + C47327 + C93805 * C5833 +
                      C45721 * C5822 + C47328 + C47328 + C93587 * C5834) *
                         C81840) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93846 +
                     (C52727 + C52728) * C93847 + (C52732 + C52731) * C81840) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C45721 * C1391 + C54932 + C54932 + C93587 * C1407 +
                      C45719 * C1390 + C54931 + C54931 + C93805 * C1406) *
                         C81840 +
                     (C54940 + C54939) * C93847 +
                     (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                      C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                         C93846) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C45719 * C110 + C45736 + C45736 + C93805 * C122 +
                      C45721 * C111 + C45737 + C45737 + C93587 * C123) *
                         C93846 +
                     (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
                      C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                         C93847 +
                     (C45719 * C1391 + C81842 + C81842 + C93805 * C1407 +
                      C45721 * C1392 + C81843 + C81843 + C93587 * C1408) *
                         C81840) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93846 +
                     (C52727 + C52728) * C93847 + C83302 * C81840) *
                        C93662 * C1382 -
                    ((C83313 + C83314) * C81840 + (C52731 + C52732) * C93847 +
                     (C52728 + C52727) * C93846) *
                        C93662 * C1383 +
                    (C83302 * C93846 + (C83314 + C83313) * C93847 +
                     (C45719 * C11104 + C83307 + C83307 + C93805 * C11112 +
                      C45721 * C11105 + C83308 + C83308 + C93587 * C11113) *
                         C81840) *
                        C93662 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C91732 +
            (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
            C219 * C93587) *
               C93846 +
           (C11252 * C91732 + C11253 * C93805 + C2790 * C91722 +
            C2789 * C93587) *
               C93847 +
           (C11254 * C91732 + C11255 * C93805 + C9693 * C91722 +
            C9694 * C93587) *
               C81840) *
              C93635 * C800 -
          ((C12147 * C93587 + C12148 * C91722 + C14163 * C93805 +
            C14162 * C91732) *
               C81840 +
           (C12149 * C93587 + C12150 * C91722 + C14161 * C93805 +
            C14160 * C91732) *
               C93847 +
           (C2075 * C93587 + C2076 * C91722 +
            (C188 * C815 + C93662 * C897) * C93805 +
            (C188 * C807 + C93662 * C889) * C91732) *
               C93846) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C91732 +
            (C188 * C816 + C93662 * C898) * C93805 +
            (C188 * C809 + C93662 * C891) * C91722 +
            (C188 * C817 + C93662 * C899) * C93587) *
               C93846 +
           ((C188 * C5818 + C93662 * C5922) * C91732 +
            (C188 * C5824 + C93662 * C5928) * C93805 +
            (C188 * C5817 + C93662 * C5921) * C91722 +
            (C188 * C5823 + C93662 * C5927) * C93587) *
               C93847 +
           ((C188 * C5821 + C93662 * C5924) * C91732 +
            (C188 * C5827 + C93662 * C5930) * C93805 +
            (C188 * C5822 + C93662 * C5926) * C91722 +
            (C188 * C5828 + C93662 * C5932) * C93587) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C91732 +
            (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
            C219 * C93587) *
               C93846 +
           (C11252 * C91732 + C11253 * C93805 + C2790 * C91722 +
            C2789 * C93587) *
               C93847 +
           (C11254 * C91732 + C11255 * C93805 + C9693 * C91722 +
            C9694 * C93587) *
               C81840) *
              C93635 * C93621 * C97 -
          ((C9695 * C93587 + C9696 * C91722 + C9694 * C93805 + C9693 * C91732) *
               C81840 +
           (C2787 * C93587 + C2788 * C91722 + C2789 * C93805 + C2790 * C91732) *
               C93847 +
           (C221 * C93587 + C220 * C91722 + C219 * C93805 + C218 * C91732) *
               C93846) *
              C93635 * C93621 * C98 +
          ((C220 * C91732 + C221 * C93805 + C222 * C91722 + C223 * C93587) *
               C93846 +
           (C2788 * C91732 + C2787 * C93805 + C2786 * C91722 + C2785 * C93587) *
               C93847 +
           (C9696 * C91732 + C9695 * C93805 +
            (C188 * C1392 + C93662 * C1474) * C91722 +
            (C188 * C1400 + C93662 * C1482) * C93587) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C91732 +
            (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
            C219 * C93587) *
               C93846 +
           (C83389 + C83390 + C83391 + C83392) * C93847 + C83403 * C81840) *
              C1382 -
          ((C83397 + C83398 + C83399 + C83400) * C81840 +
           (C83396 + C83395 + C83394 + C83393) * C93847 +
           (C83392 + C83391 + C83390 + C83389) * C93846) *
              C1383 +
          (C83403 * C93846 + (C83400 + C83399 + C83398 + C83397) * C93847 +
           (C73316 * C91732 + C73315 * C93805 +
            (C188 * C11105 + C93662 * C11226) * C91722 +
            (C188 * C11109 + C93662 * C11230) * C93587) *
               C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C91732 +
                     (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                      C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                         C93805 +
                     (C82019 + C82020 + C82021) * C91722 +
                     (C82022 + C82023 + C82024) * C93587) *
                        C93662 * C93635 * C800 -
                    ((C81993 * C5826 + C81840 * C6016 + C81992 * C3414 +
                      C93847 * C3570 + C81991 * C814 + C93846 * C962) *
                         C93587 +
                     (C81993 * C5820 + C81840 * C6010 + C81992 * C3410 +
                      C93847 * C3566 + C81991 * C806 + C93846 * C954) *
                         C91722 +
                     (C81993 * C5825 + C81840 * C6015 + C81992 * C3413 +
                      C93847 * C3569 + C81991 * C815 + C93846 * C963) *
                         C93805 +
                     (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                      C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                         C91732) *
                        C93662 * C93635 * C801 +
                    ((C81991 * C808 + C93846 * C956 + C81992 * C5818 +
                      C93847 * C6008 + C81993 * C5821 + C81840 * C6011) *
                         C91732 +
                     (C81991 * C816 + C93846 * C964 + C81992 * C5824 +
                      C93847 * C6014 + C81993 * C5827 + C81840 * C6017) *
                         C93805 +
                     (C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                      C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                         C91722 +
                     (C81991 * C817 + C93846 * C965 + C81992 * C5823 +
                      C93847 * C6013 + C81993 * C5828 + C81840 * C6018) *
                         C93587) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C91732 +
                     (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                      C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                         C93805 +
                     (C82019 + C82020 + C82021) * C91722 +
                     (C82022 + C82023 + C82024) * C93587) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C82025 + C82026 + C82027) * C93587 +
                     (C82028 + C82029 + C82030) * C91722 +
                     (C82024 + C82023 + C82022) * C93805 +
                     (C82021 + C82020 + C82019) * C91732) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C82030 + C82029 + C82028) * C91732 +
                     (C82027 + C82026 + C82025) * C93805 +
                     (C81991 * C111 + C93846 * C279 + C81992 * C1385 +
                      C93847 * C1533 + C81993 * C1392 + C81840 * C1540) *
                         C91722 +
                     (C81991 * C117 + C93846 * C285 + C81992 * C1393 +
                      C93847 * C1541 + C81993 * C1400 + C81840 * C1548) *
                         C93587) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C91732 +
                     (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                      C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                         C93805 +
                     (C82019 + C82020 + C82021) * C91722 +
                     (C82022 + C82023 + C82024) * C93587) *
                        C93662 * C1382 -
                    ((C81993 * C11106 + C81840 * C11348 + C81992 * C1398 +
                      C93847 * C1546 + C81991 * C1395 + C93846 * C1543) *
                         C93587 +
                     (C81993 * C11102 + C81840 * C11344 + C81992 * C1390 +
                      C93847 * C1538 + C81991 * C1387 + C93846 * C1535) *
                         C91722 +
                     (C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                      C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                         C93805 +
                     (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                      C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                         C91732) *
                        C93662 * C1383 +
                    ((C81991 * C1389 + C93846 * C1537 + C81992 * C11103 +
                      C93847 * C11345 + C81993 * C11104 + C81840 * C11346) *
                         C91732 +
                     (C81991 * C1397 + C93846 * C1545 + C81992 * C11107 +
                      C93847 * C11349 + C81993 * C11108 + C81840 * C11350) *
                         C93805 +
                     (C81991 * C1390 + C93846 * C1538 + C81992 * C11102 +
                      C93847 * C11344 + C81993 * C11105 + C81840 * C11347) *
                         C91722 +
                     (C81991 * C1398 + C93846 * C1546 + C81992 * C11106 +
                      C93847 * C11348 + C81993 * C11109 + C81840 * C11351) *
                         C93587) *
                        C93662 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C188 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93662) *
               C93846 +
           ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
           ((C53062 + C53061) * C188 + (C53060 + C53059) * C93662) * C81840) *
              C93635 * C800 -
          (((C53055 + C53056) * C93662 + (C53057 + C53058) * C188) * C81840 +
           (C56531 * C93662 + C56532 * C188) * C93847 +
           ((C46828 + C46827) * C93662 + (C46826 + C46825) * C188) * C93846) *
              C93635 * C801 +
          ((C46837 * C188 + C46838 * C93662) * C93846 +
           ((C50318 + C50317) * C188 + (C50316 + C50315) * C93662) * C93847 +
           ((C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
             C93587 * C5828) *
                C188 +
            (C91732 * C5924 + C93805 * C6097 + C91722 * C5926 +
             C93587 * C6098) *
                C93662) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C188 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93662) *
               C93846 +
           ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
           ((C53062 + C53061) * C188 + (C53060 + C53059) * C93662) * C81840) *
              C93635 * C93621 * C97 -
          (((C91722 * C1473 + C93587 * C1605 + C91732 * C1472 +
             C93805 * C1604) *
                C93662 +
            (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 +
             C93805 * C1398) *
                C188) *
               C81840 +
           ((C55346 + C55345) * C93662 + (C55344 + C55343) * C188) * C93847 +
           ((C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93662 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C188) *
               C93846) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C188 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C93662) *
               C93846 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C188 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C93662) *
               C93847 +
           ((C91732 * C1391 + C93805 * C1399 + C91722 * C1392 +
             C93587 * C1400) *
                C188 +
            (C91732 * C1473 + C93805 * C1605 + C91722 * C1474 +
             C93587 * C1606) *
                C93662) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C188 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93662) *
               C93846 +
           ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
           C83568 * C81840) *
              C1382 -
          (((C83564 + C83565) * C93662 + (C83566 + C83567) * C188) * C81840 +
           ((C53059 + C53060) * C93662 + (C53061 + C53062) * C188) * C93847 +
           ((C53054 + C53053) * C93662 + (C53052 + C53051) * C188) * C93846) *
              C1383 +
          (C83568 * C93846 +
           ((C83567 + C83566) * C188 + (C83565 + C83564) * C93662) * C93847 +
           ((C91732 * C11104 + C93805 * C11108 + C91722 * C11105 +
             C93587 * C11109) *
                C188 +
            (C91732 * C11225 + C93805 * C11428 + C91722 * C11226 +
             C93587 * C11429) *
                C93662) *
               C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
            C448 * C93587) *
               C93846 +
           (C11572 * C93805 + C3026 * C93587) * C93847 +
           (C11573 * C93805 + C9966 * C93587) * C81840) *
              C93635 * C800 -
          ((C12476 * C93587 + C14495 * C93805) * C81840 +
           (C12477 * C93587 + C14494 * C93805) * C93847 +
           (C2312 * C93587 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93805) *
               C93846) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93805 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93587) *
               C93846 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93805 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93587) *
               C93847 +
           ((C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C93805 +
            (C418 * C5822 + C10720 + C10720 + C93662 * C6178) * C93587) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
            C448 * C93587) *
               C93846 +
           (C11572 * C93805 + C3026 * C93587) * C93847 +
           (C11573 * C93805 + C9966 * C93587) * C81840) *
              C93635 * C93621 * C97 -
          ((C9967 * C93587 + C9966 * C93805) * C81840 +
           (C3025 * C93587 + C3026 * C93805) * C93847 +
           (C449 * C93587 + C448 * C93805) * C93846) *
              C93635 * C93621 * C98 +
          ((C449 * C93805 + C450 * C93587) * C93846 +
           (C3025 * C93805 + C3024 * C93587) * C93847 +
           (C9967 * C93805 +
            (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C93587) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
            C448 * C93587) *
               C93846 +
           (C83643 + C83644) * C93847 + C83649 * C81840) *
              C1382 -
          ((C83647 + C83648) * C81840 + (C83646 + C83645) * C93847 +
           (C83644 + C83643) * C93846) *
              C1383 +
          (C83649 * C93846 + (C83648 + C83647) * C93847 +
           (C73497 * C93805 +
            (C418 * C11105 + C11563 + C11563 + C93662 * C11548) * C93587) *
               C81840) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C188 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93662) *
                         C93805 +
                     ((C82019 + C82020 + C82021) * C188 +
                      (C82265 + C82266 + C82267) * C93662) *
                         C93587) *
                        C93635 * C800 -
                    (((C81993 * C5925 + C81840 * C6269 + C81992 * C3492 +
                       C93847 * C3784 + C81991 * C888 + C93846 * C1144) *
                          C93662 +
                      (C81993 * C5820 + C81840 * C6010 + C81992 * C3410 +
                       C93847 * C3566 + C81991 * C806 + C93846 * C954) *
                          C188) *
                         C93587 +
                     ((C81993 * C5923 + C81840 * C6267 + C81992 * C3491 +
                       C93847 * C3783 + C81991 * C889 + C93846 * C1145) *
                          C93662 +
                      (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                       C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                          C188) *
                         C93805) *
                        C93635 * C801 +
                    (((C81991 * C808 + C93846 * C956 + C81992 * C5818 +
                       C93847 * C6008 + C81993 * C5821 + C81840 * C6011) *
                          C188 +
                      (C81991 * C890 + C93846 * C1146 + C81992 * C5922 +
                       C93847 * C6266 + C81993 * C5924 + C81840 * C6268) *
                          C93662) *
                         C93805 +
                     ((C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                       C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                          C188 +
                      (C81991 * C891 + C93846 * C1147 + C81992 * C5921 +
                       C93847 * C6265 + C81993 * C5926 + C81840 * C6270) *
                          C93662) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C188 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93662) *
                         C93805 +
                     ((C82019 + C82020 + C82021) * C188 +
                      (C82265 + C82266 + C82267) * C93662) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C82268 + C82269 + C82270) * C93662 +
                      (C82028 + C82029 + C82030) * C188) *
                         C93587 +
                     ((C82267 + C82266 + C82265) * C93662 +
                      (C82021 + C82020 + C82019) * C188) *
                         C93805) *
                        C93635 * C93621 * C98 +
                    (((C82030 + C82029 + C82028) * C188 +
                      (C82270 + C82269 + C82268) * C93662) *
                         C93805 +
                     ((C81991 * C111 + C93846 * C279 + C81992 * C1385 +
                       C93847 * C1533 + C81993 * C1392 + C81840 * C1540) *
                          C188 +
                      (C81991 * C192 + C93846 * C504 + C81992 * C1467 +
                       C93847 * C1723 + C81993 * C1474 + C81840 * C1730) *
                          C93662) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C188 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93662) *
                         C93805 +
                     ((C82019 + C82020 + C82021) * C188 +
                      (C82265 + C82266 + C82267) * C93662) *
                         C93587) *
                        C1382 -
                    (((C81993 * C11223 + C81840 * C11654 + C81992 * C1472 +
                       C93847 * C1728 + C81991 * C1469 + C93846 * C1725) *
                          C93662 +
                      (C81993 * C11102 + C81840 * C11344 + C81992 * C1390 +
                       C93847 * C1538 + C81991 * C1387 + C93846 * C1535) *
                          C188) *
                         C93587 +
                     ((C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                       C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                          C93662 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C188) *
                         C93805) *
                        C1383 +
                    (((C81991 * C1389 + C93846 * C1537 + C81992 * C11103 +
                       C93847 * C11345 + C81993 * C11104 + C81840 * C11346) *
                          C188 +
                      (C81991 * C1471 + C93846 * C1727 + C81992 * C11224 +
                       C93847 * C11655 + C81993 * C11225 + C81840 * C11656) *
                          C93662) *
                         C93805 +
                     ((C81991 * C1390 + C93846 * C1538 + C81992 * C11102 +
                       C93847 * C11344 + C81993 * C11105 + C81840 * C11347) *
                          C188 +
                      (C81991 * C1472 + C93846 * C1728 + C81992 * C11223 +
                       C93847 * C11654 + C81993 * C11226 + C81840 * C11657) *
                          C93662) *
                         C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C81991 +
           (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
               C93846 +
           (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
           (C53062 + C53061) * C81993 + (C53374 + C53373) * C81840) *
              C93662 * C93635 * C800 -
          ((C53371 + C53372) * C81840 + (C53057 + C53058) * C81993 +
           C56924 * C93847 + C56532 * C81992 + (C47087 + C47086) * C93846 +
           (C46826 + C46825) * C81991) *
              C93662 * C93635 * C801 +
          (C46837 * C81991 + C47092 * C93846 + (C50318 + C50317) * C81992 +
           (C50632 + C50631) * C93847 +
           (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 + C93587 * C5828) *
               C81993 +
           (C91732 * C6011 + C93805 * C6349 + C91722 * C6012 + C93587 * C6350) *
               C81840) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C81991 +
           (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
               C93846 +
           (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
           (C53062 + C53061) * C81993 + (C53374 + C53373) * C81840) *
              C93662 * C93635 * C93621 * C97 -
          ((C91722 * C1539 + C93587 * C1787 + C91732 * C1538 + C93805 * C1786) *
               C81840 +
           (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 + C93805 * C1398) *
               C81993 +
           (C55744 + C55743) * C93847 + (C55344 + C55343) * C81992 +
           (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
               C93846 +
           (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
               C81991) *
              C93662 * C93635 * C93621 * C98 +
          ((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
               C81991 +
           (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
               C93846 +
           (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 + C93587 * C1393) *
               C81992 +
           (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 + C93587 * C1781) *
               C93847 +
           (C91732 * C1391 + C93805 * C1399 + C91722 * C1392 + C93587 * C1400) *
               C81993 +
           (C91732 * C1539 + C93805 * C1787 + C91722 * C1540 + C93587 * C1788) *
               C81840) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C81991 +
           (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
               C93846 +
           (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
           C83552 * C81993 + C83798 * C81840) *
              C93662 * C1382 -
          ((C83803 + C83804) * C81840 + (C83566 + C83567) * C81993 +
           (C53373 + C53374) * C93847 + (C53061 + C53062) * C81992 +
           (C53370 + C53369) * C93846 + (C53052 + C53051) * C81991) *
              C93662 * C1383 +
          (C83552 * C81991 + C83798 * C93846 + (C83567 + C83566) * C81992 +
           (C83804 + C83803) * C93847 +
           (C91732 * C11104 + C93805 * C11108 + C91722 * C11105 +
            C93587 * C11109) *
               C81993 +
           (C91732 * C11346 + C93805 * C11734 + C91722 * C11347 +
            C93587 * C11735) *
               C81840) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C81991 +
            (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
            C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
               C93805 +
           (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
              C93635 * C800 -
          ((C12792 * C81840 + C12148 * C81993 + C12793 * C93847 +
            C12150 * C81992 + C2540 * C93846 + C2076 * C81991) *
               C93587 +
           (C14809 * C81840 + C14162 * C81993 + C14808 * C93847 +
            C14160 * C81992 + (C188 * C955 + C93662 * C1261) * C93846 +
            (C188 * C807 + C93662 * C889) * C81991) *
               C93805) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C81991 +
            (C188 * C956 + C93662 * C1262) * C93846 +
            (C188 * C5818 + C93662 * C5922) * C81992 +
            (C188 * C6008 + C93662 * C6426) * C93847 +
            (C188 * C5821 + C93662 * C5924) * C81993 +
            (C188 * C6011 + C93662 * C6428) * C81840) *
               C93805 +
           ((C188 * C809 + C93662 * C891) * C81991 +
            (C188 * C957 + C93662 * C1263) * C93846 +
            (C188 * C5817 + C93662 * C5921) * C81992 +
            (C188 * C6007 + C93662 * C6425) * C93847 +
            (C188 * C5822 + C93662 * C5926) * C81993 +
            (C188 * C6012 + C93662 * C6430) * C81840) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C81991 +
            (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
            C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
               C93805 +
           (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
              C93635 * C93621 * C97 -
          ((C82425 + C82426 + C82427 + C82428 + C82429 + C82430) * C93587 +
           (C82424 + C82423 + C82422 + C82421 + C82420 + C82419) * C93805) *
              C93635 * C93621 * C98 +
          ((C82430 + C82429 + C82428 + C82427 + C82426 + C82425) * C93805 +
           (C222 * C81991 + C656 * C93846 + C2786 * C81992 + C3252 * C93847 +
            (C188 * C1392 + C93662 * C1474) * C81993 +
            (C188 * C1540 + C93662 * C1846) * C81840) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C81991 +
            (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
            C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
               C93805 +
           (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
              C1382 -
          ((C11844 * C81840 + C11257 * C81993 + C10222 * C93847 +
            C9693 * C81992 + C3254 * C93846 + C2790 * C81991) *
               C93587 +
           (C11845 * C81840 + C11259 * C81993 + C11843 * C93847 +
            C11254 * C81992 + C11842 * C93846 + C11252 * C81991) *
               C93805) *
              C1383 +
          ((C11254 * C81991 + C11843 * C93846 + C11259 * C81992 +
            C11845 * C93847 + C73316 * C81993 + C73657 * C81840) *
               C93805 +
           (C9693 * C81991 + C10222 * C93846 + C11257 * C81992 +
            C11844 * C93847 + (C188 * C11105 + C93662 * C11226) * C81993 +
            (C188 * C11347 + C93662 * C11832) * C81840) *
               C93587) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93662 * C93805 +
                     (C82544 + C82545 + C82546) * C93662 * C93587) *
                        C93635 * C800 -
                    ((C82506 * C5820 + C83216 + C83216 + C81840 * C6509 +
                      C82505 * C3410 + C83217 + C83217 + C93847 * C3994 +
                      C82504 * C806 + C83218 + C83218 + C93846 * C1318) *
                         C93662 * C93587 +
                     (C82506 * C5819 + C83219 + C83219 + C81840 * C6507 +
                      C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                      C82504 * C807 + C83221 + C83221 + C93846 * C1319) *
                         C93662 * C93805) *
                        C93635 * C801 +
                    ((C82504 * C808 + C83222 + C83222 + C93846 * C1320 +
                      C82505 * C5818 + C83223 + C83223 + C93847 * C6506 +
                      C82506 * C5821 + C83224 + C83224 + C81840 * C6508) *
                         C93662 * C93805 +
                     (C82504 * C809 + C83225 + C83225 + C93846 * C1321 +
                      C82505 * C5817 + C83226 + C83226 + C93847 * C6505 +
                      C82506 * C5822 + C83227 + C83227 + C81840 * C6510) *
                         C93662 * C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93662 * C93805 +
                     (C82544 + C82545 + C82546) * C93662 * C93587) *
                        C93635 * C93621 * C97 -
                    ((C82547 + C82548 + C82549) * C93662 * C93587 +
                     (C82546 + C82545 + C82544) * C93662 * C93805) *
                        C93635 * C93621 * C98 +
                    ((C82549 + C82548 + C82547) * C93662 * C93805 +
                     (C82504 * C111 + C82529 + C82529 + C93846 * C717 +
                      C82505 * C1385 + C82530 + C82530 + C93847 * C1897 +
                      C82506 * C1392 + C82531 + C82531 + C81840 * C1904) *
                         C93662 * C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93662 * C93805 +
                     (C82544 + C82545 + C82546) * C93662 * C93587) *
                        C1382 -
                    ((C82506 * C11102 + C83953 + C83953 + C81840 * C11919 +
                      C82505 * C1390 + C83954 + C83954 + C93847 * C1902 +
                      C82504 * C1387 + C83955 + C83955 + C93846 * C1899) *
                         C93662 * C93587 +
                     (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                      C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                      C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                         C93662 * C93805) *
                        C1383 +
                    ((C82504 * C1389 + C83959 + C83959 + C93846 * C1901 +
                      C82505 * C11103 + C83960 + C83960 + C93847 * C11920 +
                      C82506 * C11104 + C83961 + C83961 + C81840 * C11921) *
                         C93662 * C93805 +
                     (C82504 * C1390 + C83962 + C83962 + C93846 * C1902 +
                      C82505 * C11102 + C83963 + C83963 + C93847 * C11919 +
                      C82506 * C11105 + C83964 + C83964 + C81840 * C11922) *
                         C93662 * C93587) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                       C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                          C93846 +
                      (C52727 + C52728) * C93847 + C83302 * C81840) *
                         C93662 * C2695 -
                     ((C83313 + C83314) * C81840 + (C52731 + C52732) * C93847 +
                      (C52728 + C52727) * C93846) *
                         C93662 * C2696) *
                        C93621 * C1981 +
                    (((C54939 + C54940) * C93846 + (C85006 + C85007) * C93847 +
                      (C45719 * C11102 + C85000 + C85000 + C93805 * C11110 +
                       C45721 * C13010 + C85001 + C85001 + C93587 * C13012) *
                          C81840) *
                         C93662 * C2696 -
                     ((C85007 + C85006) * C81840 + (C54940 + C54939) * C93847 +
                      (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                       C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                          C93846) *
                         C93662 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C91732 +
             (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
             C219 * C93587) *
                C93846 +
            (C83389 + C83390 + C83391 + C83392) * C93847 + C83403 * C81840) *
               C2695 -
           ((C83397 + C83398 + C83399 + C83400) * C81840 +
            (C83396 + C83395 + C83394 + C83393) * C93847 +
            (C83392 + C83391 + C83390 + C83389) * C93846) *
               C2696) *
              C93621 * C1981 +
          (((C85106 + C85107 + C85108 + C85109) * C93846 +
            (C85110 + C85111 + C85112 + C85113) * C93847 +
            (C11257 * C91732 + C11256 * C93805 +
             (C188 * C13010 + C93662 * C13133) * C91722 +
             (C188 * C13011 + C93662 * C13134) * C93587) *
                C81840) *
               C2696 -
           ((C85113 + C85112 + C85111 + C85110) * C81840 +
            (C85109 + C85108 + C85107 + C85106) * C93847 +
            (C221 * C93587 + C220 * C91722 + C219 * C93805 + C218 * C91732) *
                C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eexz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C91732 +
                      (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                       C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                          C93805 +
                      (C82019 + C82020 + C82021) * C91722 +
                      (C82022 + C82023 + C82024) * C93587) *
                         C93662 * C2695 -
                     ((C85224 + C85225 + C85226) * C93587 +
                      (C85227 + C85228 + C85229) * C91722 +
                      (C81993 * C11107 + C81840 * C11349 + C81992 * C1397 +
                       C93847 * C1545 + C81991 * C1396 + C93846 * C1544) *
                          C93805 +
                      (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                       C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                          C91732) *
                         C93662 * C2696) *
                        C93621 * C1981 +
                    (((C85229 + C85228 + C85227) * C91732 +
                      (C85226 + C85225 + C85224) * C93805 +
                      (C81991 * C1386 + C93846 * C1534 + C81992 * C1391 +
                       C93847 * C1539 + C81993 * C13010 + C81840 * C13241) *
                          C91722 +
                      (C81991 * C1394 + C93846 * C1542 + C81992 * C1399 +
                       C93847 * C1547 + C81993 * C13011 + C81840 * C13242) *
                          C93587) *
                         C93662 * C2696 -
                     ((C82025 + C82026 + C82027) * C93587 +
                      (C82028 + C82029 + C82030) * C91722 +
                      (C82024 + C82023 + C82022) * C93805 +
                      (C82021 + C82020 + C82019) * C91732) *
                         C93662 * C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                 C188 +
             (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                 C93662) *
                C93846 +
            ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
            C83568 * C81840) *
               C2695 -
           (((C83564 + C83565) * C93662 + (C83566 + C83567) * C188) * C81840 +
            ((C53059 + C53060) * C93662 + (C53061 + C53062) * C188) * C93847 +
            ((C53054 + C53053) * C93662 + (C53052 + C53051) * C188) * C93846) *
               C2696) *
              C93621 * C1981 +
          ((((C55343 + C55344) * C188 + (C55345 + C55346) * C93662) * C93846 +
            ((C85336 + C85337) * C188 + (C85338 + C85339) * C93662) * C93847 +
            ((C91732 * C11102 + C93805 * C11106 + C91722 * C13010 +
              C93587 * C13011) *
                 C188 +
             (C91732 * C11223 + C93805 * C11426 + C91722 * C13133 +
              C93587 * C13359) *
                 C93662) *
                C81840) *
               C2696 -
           (((C85339 + C85338) * C93662 + (C85337 + C85336) * C188) * C81840 +
            ((C55346 + C55345) * C93662 + (C55344 + C55343) * C188) * C93847 +
            ((C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                 C93662 +
             (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                 C188) *
                C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
             C448 * C93587) *
                C93846 +
            (C83643 + C83644) * C93847 + C83649 * C81840) *
               C2695 -
           ((C83647 + C83648) * C81840 + (C83646 + C83645) * C93847 +
            (C83644 + C83643) * C93846) *
               C2696) *
              C93621 * C1981 +
          (((C85438 + C85439) * C93846 + (C85440 + C85441) * C93847 +
            (C11574 * C93805 +
             (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C93587) *
                C81840) *
               C2696 -
           ((C85441 + C85440) * C81840 + (C85439 + C85438) * C93847 +
            (C449 * C93587 + C448 * C93805) * C93846) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                        C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                           C188 +
                       (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                        C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                           C93662) *
                          C93805 +
                      ((C82019 + C82020 + C82021) * C188 +
                       (C82265 + C82266 + C82267) * C93662) *
                          C93587) *
                         C2695 -
                     (((C85546 + C85547 + C85548) * C93662 +
                       (C85227 + C85228 + C85229) * C188) *
                          C93587 +
                      ((C81993 * C11224 + C81840 * C11655 + C81992 * C1471 +
                        C93847 * C1727 + C81991 * C1470 + C93846 * C1726) *
                           C93662 +
                       (C81993 * C11103 + C81840 * C11345 + C81992 * C1389 +
                        C93847 * C1537 + C81991 * C1388 + C93846 * C1536) *
                           C188) *
                          C93805) *
                         C2696) *
                        C93621 * C1981 +
                    ((((C85229 + C85228 + C85227) * C188 +
                       (C85548 + C85547 + C85546) * C93662) *
                          C93805 +
                      ((C81991 * C1386 + C93846 * C1534 + C81992 * C1391 +
                        C93847 * C1539 + C81993 * C13010 + C81840 * C13241) *
                           C188 +
                       (C81991 * C1468 + C93846 * C1724 + C81992 * C1473 +
                        C93847 * C1729 + C81993 * C13133 + C81840 * C13586) *
                           C93662) *
                          C93587) *
                         C2696 -
                     (((C82268 + C82269 + C82270) * C93662 +
                       (C82028 + C82029 + C82030) * C188) *
                          C93587 +
                      ((C82267 + C82266 + C82265) * C93662 +
                       (C82021 + C82020 + C82019) * C188) *
                          C93805) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C81991 +
            (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
                C93846 +
            (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
            C83552 * C81993 + C83798 * C81840) *
               C93662 * C2695 -
           ((C83803 + C83804) * C81840 + (C83566 + C83567) * C81993 +
            (C53373 + C53374) * C93847 + (C53061 + C53062) * C81992 +
            (C53370 + C53369) * C93846 + (C53052 + C53051) * C81991) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C55343 + C55344) * C81991 + (C55743 + C55744) * C93846 +
            (C85336 + C85337) * C81992 + (C85651 + C85652) * C93847 +
            (C91732 * C11102 + C93805 * C11106 + C91722 * C13010 +
             C93587 * C13011) *
                C81993 +
            (C91732 * C11344 + C93805 * C11732 + C91722 * C13241 +
             C93587 * C13694) *
                C81840) *
               C93662 * C2696 -
           ((C85652 + C85651) * C81840 + (C85337 + C85336) * C81993 +
            (C55744 + C55743) * C93847 + (C55344 + C55343) * C81992 +
            (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
                C93846 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C81991) *
               C93662 * C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C81991 +
             (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
             C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
                C93805 +
            (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
               C2695 -
           ((C85751 + C85752 + C85753 + C85754 + C85755 + C85756) * C93587 +
            (C11845 * C81840 + C11259 * C81993 + C11843 * C93847 +
             C11254 * C81992 + C11842 * C93846 + C11252 * C81991) *
                C93805) *
               C2696) *
              C93621 * C1981 +
          (((C85756 + C85755 + C85754 + C85753 + C85752 + C85751) * C93805 +
            (C2788 * C81991 + C3253 * C93846 + C9696 * C81992 +
             C10223 * C93847 + (C188 * C13010 + C93662 * C13133) * C81993 +
             (C188 * C13241 + C93662 * C13805) * C81840) *
                C93587) *
               C2696 -
           ((C82425 + C82426 + C82427 + C82428 + C82429 + C82430) * C93587 +
            (C82424 + C82423 + C82422 + C82421 + C82420 + C82419) * C93805) *
               C2695) *
              C93621 * C1982)) /
        (p * q * std::sqrt(p + q));
    d2eezz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                       C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                       C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                          C93662 * C93805 +
                      (C82544 + C82545 + C82546) * C93662 * C93587) *
                         C2695 -
                     ((C85870 + C85871 + C85872) * C93662 * C93587 +
                      (C82506 * C11103 + C83956 + C83956 + C81840 * C11920 +
                       C82505 * C1389 + C83957 + C83957 + C93847 * C1901 +
                       C82504 * C1388 + C83958 + C83958 + C93846 * C1900) *
                          C93662 * C93805) *
                         C2696) *
                        C93621 * C1981 +
                    (((C85872 + C85871 + C85870) * C93662 * C93805 +
                      (C82504 * C1386 + C85861 + C85861 + C93846 * C1898 +
                       C82505 * C1391 + C85862 + C85862 + C93847 * C1903 +
                       C82506 * C13010 + C85863 + C85863 + C81840 * C13910) *
                          C93662 * C93587) *
                         C2696 -
                     ((C82547 + C82548 + C82549) * C93662 * C93587 +
                      (C82546 + C82545 + C82544) * C93662 * C93805) *
                         C2695) *
                        C93621 * C1982)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93846 +
                     (C52727 + C52728) * C93847 + (C52732 + C52731) * C81840) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C45721 * C1391 + C54932 + C54932 + C93587 * C1407 +
                      C45719 * C1390 + C54931 + C54931 + C93805 * C1406) *
                         C81840 +
                     (C54940 + C54939) * C93847 +
                     (C45721 * C110 + C45734 + C45734 + C93587 * C122 +
                      C45719 * C109 + C45735 + C45735 + C93805 * C121) *
                         C93846) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C45719 * C110 + C45736 + C45736 + C93805 * C122 +
                      C45721 * C111 + C45737 + C45737 + C93587 * C123) *
                         C93846 +
                     (C45719 * C1386 + C50929 + C50929 + C93805 * C1402 +
                      C45721 * C1385 + C50930 + C50930 + C93587 * C1401) *
                         C93847 +
                     (C45719 * C1391 + C81842 + C81842 + C93805 * C1407 +
                      C45721 * C1392 + C81843 + C81843 + C93587 * C1408) *
                         C81840) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45719 * C108 + C45724 + C45724 + C93805 * C120 +
                      C45721 * C109 + C45725 + C45725 + C93587 * C121) *
                         C93846 +
                     (C52727 + C52728) * C93847 + (C52732 + C52731) * C81840) *
                        C93662 * C93635 * C800 -
                    ((C52729 + C52730) * C81840 + C56138 * C93847 +
                     (C46557 + C46556) * C93846) *
                        C93662 * C93635 * C801 +
                    (C46562 * C93846 + (C49994 + C49993) * C93847 +
                     (C45719 * C5821 + C47327 + C47327 + C93805 * C5833 +
                      C45721 * C5822 + C47328 + C47328 + C93587 * C5834) *
                         C81840) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C91732 +
            (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
            C219 * C93587) *
               C93846 +
           (C11252 * C91732 + C11253 * C93805 + C2790 * C91722 +
            C2789 * C93587) *
               C93847 +
           (C11254 * C91732 + C11255 * C93805 + C9693 * C91722 +
            C9694 * C93587) *
               C81840) *
              C93635 * C93621 * C97 -
          ((C9695 * C93587 + C9696 * C91722 + C9694 * C93805 + C9693 * C91732) *
               C81840 +
           (C2787 * C93587 + C2788 * C91722 + C2789 * C93805 + C2790 * C91732) *
               C93847 +
           (C221 * C93587 + C220 * C91722 + C219 * C93805 + C218 * C91732) *
               C93846) *
              C93635 * C93621 * C98 +
          ((C220 * C91732 + C221 * C93805 + C222 * C91722 + C223 * C93587) *
               C93846 +
           (C2788 * C91732 + C2787 * C93805 + C2786 * C91722 + C2785 * C93587) *
               C93847 +
           (C9696 * C91732 + C9695 * C93805 +
            (C188 * C1392 + C93662 * C1474) * C91722 +
            (C188 * C1400 + C93662 * C1482) * C93587) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C91732 +
            (C188 * C114 + C93662 * C195) * C93805 + C218 * C91722 +
            C219 * C93587) *
               C93846 +
           (C11252 * C91732 + C11253 * C93805 + C2790 * C91722 +
            C2789 * C93587) *
               C93847 +
           (C11254 * C91732 + C11255 * C93805 + C9693 * C91722 +
            C9694 * C93587) *
               C81840) *
              C93635 * C800 -
          ((C12147 * C93587 + C12148 * C91722 + C14163 * C93805 +
            C14162 * C91732) *
               C81840 +
           (C12149 * C93587 + C12150 * C91722 + C14161 * C93805 +
            C14160 * C91732) *
               C93847 +
           (C2075 * C93587 + C2076 * C91722 +
            (C188 * C815 + C93662 * C897) * C93805 +
            (C188 * C807 + C93662 * C889) * C91732) *
               C93846) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C91732 +
            (C188 * C816 + C93662 * C898) * C93805 +
            (C188 * C809 + C93662 * C891) * C91722 +
            (C188 * C817 + C93662 * C899) * C93587) *
               C93846 +
           ((C188 * C5818 + C93662 * C5922) * C91732 +
            (C188 * C5824 + C93662 * C5928) * C93805 +
            (C188 * C5817 + C93662 * C5921) * C91722 +
            (C188 * C5823 + C93662 * C5927) * C93587) *
               C93847 +
           ((C188 * C5821 + C93662 * C5924) * C91732 +
            (C188 * C5827 + C93662 * C5930) * C93805 +
            (C188 * C5822 + C93662 * C5926) * C91722 +
            (C188 * C5828 + C93662 * C5932) * C93587) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C91732 +
                     (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                      C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                         C93805 +
                     (C82019 + C82020 + C82021) * C91722 +
                     (C82022 + C82023 + C82024) * C93587) *
                        C93662 * C93635 * C93621 * C97 -
                    ((C82025 + C82026 + C82027) * C93587 +
                     (C82028 + C82029 + C82030) * C91722 +
                     (C82024 + C82023 + C82022) * C93805 +
                     (C82021 + C82020 + C82019) * C91732) *
                        C93662 * C93635 * C93621 * C98 +
                    ((C82030 + C82029 + C82028) * C91732 +
                     (C82027 + C82026 + C82025) * C93805 +
                     (C81991 * C111 + C93846 * C279 + C81992 * C1385 +
                      C93847 * C1533 + C81993 * C1392 + C81840 * C1540) *
                         C91722 +
                     (C81991 * C117 + C93846 * C285 + C81992 * C1393 +
                      C93847 * C1541 + C81993 * C1400 + C81840 * C1548) *
                         C93587) *
                        C93662 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                      C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                         C91732 +
                     (C81991 * C114 + C93846 * C282 + C81992 * C1396 +
                      C93847 * C1544 + C81993 * C1397 + C81840 * C1545) *
                         C93805 +
                     (C82019 + C82020 + C82021) * C91722 +
                     (C82022 + C82023 + C82024) * C93587) *
                        C93662 * C93635 * C800 -
                    ((C81993 * C5826 + C81840 * C6016 + C81992 * C3414 +
                      C93847 * C3570 + C81991 * C814 + C93846 * C962) *
                         C93587 +
                     (C81993 * C5820 + C81840 * C6010 + C81992 * C3410 +
                      C93847 * C3566 + C81991 * C806 + C93846 * C954) *
                         C91722 +
                     (C81993 * C5825 + C81840 * C6015 + C81992 * C3413 +
                      C93847 * C3569 + C81991 * C815 + C93846 * C963) *
                         C93805 +
                     (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                      C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                         C91732) *
                        C93662 * C93635 * C801 +
                    ((C81991 * C808 + C93846 * C956 + C81992 * C5818 +
                      C93847 * C6008 + C81993 * C5821 + C81840 * C6011) *
                         C91732 +
                     (C81991 * C816 + C93846 * C964 + C81992 * C5824 +
                      C93847 * C6014 + C81993 * C5827 + C81840 * C6017) *
                         C93805 +
                     (C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                      C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                         C91722 +
                     (C81991 * C817 + C93846 * C965 + C81992 * C5823 +
                      C93847 * C6013 + C81993 * C5828 + C81840 * C6018) *
                         C93587) *
                        C93662 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C188 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93662) *
               C93846 +
           ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
           ((C53062 + C53061) * C188 + (C53060 + C53059) * C93662) * C81840) *
              C93635 * C93621 * C97 -
          (((C91722 * C1473 + C93587 * C1605 + C91732 * C1472 +
             C93805 * C1604) *
                C93662 +
            (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 +
             C93805 * C1398) *
                C188) *
               C81840 +
           ((C55346 + C55345) * C93662 + (C55344 + C55343) * C188) * C93847 +
           ((C91722 * C191 + C93587 * C364 + C91732 * C190 + C93805 * C363) *
                C93662 +
            (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
                C188) *
               C93846) *
              C93635 * C93621 * C98 +
          (((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
                C188 +
            (C91732 * C191 + C93805 * C364 + C91722 * C192 + C93587 * C365) *
                C93662) *
               C93846 +
           ((C91732 * C1386 + C93805 * C1394 + C91722 * C1385 +
             C93587 * C1393) *
                C188 +
            (C91732 * C1468 + C93805 * C1600 + C91722 * C1467 +
             C93587 * C1599) *
                C93662) *
               C93847 +
           ((C91732 * C1391 + C93805 * C1399 + C91722 * C1392 +
             C93587 * C1400) *
                C188 +
            (C91732 * C1473 + C93805 * C1605 + C91722 * C1474 +
             C93587 * C1606) *
                C93662) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
                C188 +
            (C91732 * C189 + C93805 * C362 + C91722 * C190 + C93587 * C363) *
                C93662) *
               C93846 +
           ((C53051 + C53052) * C188 + (C53053 + C53054) * C93662) * C93847 +
           ((C53062 + C53061) * C188 + (C53060 + C53059) * C93662) * C81840) *
              C93635 * C800 -
          (((C53055 + C53056) * C93662 + (C53057 + C53058) * C188) * C81840 +
           (C56531 * C93662 + C56532 * C188) * C93847 +
           ((C46828 + C46827) * C93662 + (C46826 + C46825) * C188) * C93846) *
              C93635 * C801 +
          ((C46837 * C188 + C46838 * C93662) * C93846 +
           ((C50318 + C50317) * C188 + (C50316 + C50315) * C93662) * C93847 +
           ((C91732 * C5821 + C93805 * C5827 + C91722 * C5822 +
             C93587 * C5828) *
                C188 +
            (C91732 * C5924 + C93805 * C6097 + C91722 * C5926 +
             C93587 * C6098) *
                C93662) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
            C448 * C93587) *
               C93846 +
           (C11572 * C93805 + C3026 * C93587) * C93847 +
           (C11573 * C93805 + C9966 * C93587) * C81840) *
              C93635 * C93621 * C97 -
          ((C9967 * C93587 + C9966 * C93805) * C81840 +
           (C3025 * C93587 + C3026 * C93805) * C93847 +
           (C449 * C93587 + C448 * C93805) * C93846) *
              C93635 * C93621 * C98 +
          ((C449 * C93805 + C450 * C93587) * C93846 +
           (C3025 * C93805 + C3024 * C93587) * C93847 +
           (C9967 * C93805 +
            (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C93587) *
               C81840) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C93805 +
            C448 * C93587) *
               C93846 +
           (C11572 * C93805 + C3026 * C93587) * C93847 +
           (C11573 * C93805 + C9966 * C93587) * C81840) *
              C93635 * C800 -
          ((C12476 * C93587 + C14495 * C93805) * C81840 +
           (C12477 * C93587 + C14494 * C93805) * C93847 +
           (C2312 * C93587 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C93805) *
               C93846) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C93805 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C93587) *
               C93846 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C93805 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C93587) *
               C93847 +
           ((C418 * C5821 + C10719 + C10719 + C93662 * C6176) * C93805 +
            (C418 * C5822 + C10720 + C10720 + C93662 * C6178) * C93587) *
               C81840) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C188 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93662) *
                         C93805 +
                     ((C82019 + C82020 + C82021) * C188 +
                      (C82265 + C82266 + C82267) * C93662) *
                         C93587) *
                        C93635 * C93621 * C97 -
                    (((C82268 + C82269 + C82270) * C93662 +
                      (C82028 + C82029 + C82030) * C188) *
                         C93587 +
                     ((C82267 + C82266 + C82265) * C93662 +
                      (C82021 + C82020 + C82019) * C188) *
                         C93805) *
                        C93635 * C93621 * C98 +
                    (((C82030 + C82029 + C82028) * C188 +
                      (C82270 + C82269 + C82268) * C93662) *
                         C93805 +
                     ((C81991 * C111 + C93846 * C279 + C81992 * C1385 +
                       C93847 * C1533 + C81993 * C1392 + C81840 * C1540) *
                          C188 +
                      (C81991 * C192 + C93846 * C504 + C81992 * C1467 +
                       C93847 * C1723 + C81993 * C1474 + C81840 * C1730) *
                          C93662) *
                         C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C81991 * C108 + C93846 * C276 + C81992 * C1388 +
                       C93847 * C1536 + C81993 * C1389 + C81840 * C1537) *
                          C188 +
                      (C81991 * C189 + C93846 * C501 + C81992 * C1470 +
                       C93847 * C1726 + C81993 * C1471 + C81840 * C1727) *
                          C93662) *
                         C93805 +
                     ((C82019 + C82020 + C82021) * C188 +
                      (C82265 + C82266 + C82267) * C93662) *
                         C93587) *
                        C93635 * C800 -
                    (((C81993 * C5925 + C81840 * C6269 + C81992 * C3492 +
                       C93847 * C3784 + C81991 * C888 + C93846 * C1144) *
                          C93662 +
                      (C81993 * C5820 + C81840 * C6010 + C81992 * C3410 +
                       C93847 * C3566 + C81991 * C806 + C93846 * C954) *
                          C188) *
                         C93587 +
                     ((C81993 * C5923 + C81840 * C6267 + C81992 * C3491 +
                       C93847 * C3783 + C81991 * C889 + C93846 * C1145) *
                          C93662 +
                      (C81993 * C5819 + C81840 * C6009 + C81992 * C3409 +
                       C93847 * C3565 + C81991 * C807 + C93846 * C955) *
                          C188) *
                         C93805) *
                        C93635 * C801 +
                    (((C81991 * C808 + C93846 * C956 + C81992 * C5818 +
                       C93847 * C6008 + C81993 * C5821 + C81840 * C6011) *
                          C188 +
                      (C81991 * C890 + C93846 * C1146 + C81992 * C5922 +
                       C93847 * C6266 + C81993 * C5924 + C81840 * C6268) *
                          C93662) *
                         C93805 +
                     ((C81991 * C809 + C93846 * C957 + C81992 * C5817 +
                       C93847 * C6007 + C81993 * C5822 + C81840 * C6012) *
                          C188 +
                      (C81991 * C891 + C93846 * C1147 + C81992 * C5921 +
                       C93847 * C6265 + C81993 * C5926 + C81840 * C6270) *
                          C93662) *
                         C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eezx[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C81991 +
           (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
               C93846 +
           (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
           (C53062 + C53061) * C81993 + (C53374 + C53373) * C81840) *
              C93662 * C93635 * C93621 * C97 -
          ((C91722 * C1539 + C93587 * C1787 + C91732 * C1538 + C93805 * C1786) *
               C81840 +
           (C91722 * C1391 + C93587 * C1399 + C91732 * C1390 + C93805 * C1398) *
               C81993 +
           (C55744 + C55743) * C93847 + (C55344 + C55343) * C81992 +
           (C91722 * C278 + C93587 * C581 + C91732 * C277 + C93805 * C580) *
               C93846 +
           (C91722 * C110 + C93587 * C116 + C91732 * C109 + C93805 * C115) *
               C81991) *
              C93662 * C93635 * C93621 * C98 +
          ((C91732 * C110 + C93805 * C116 + C91722 * C111 + C93587 * C117) *
               C81991 +
           (C91732 * C278 + C93805 * C581 + C91722 * C279 + C93587 * C582) *
               C93846 +
           (C91732 * C1386 + C93805 * C1394 + C91722 * C1385 + C93587 * C1393) *
               C81992 +
           (C91732 * C1534 + C93805 * C1782 + C91722 * C1533 + C93587 * C1781) *
               C93847 +
           (C91732 * C1391 + C93805 * C1399 + C91722 * C1392 + C93587 * C1400) *
               C81993 +
           (C91732 * C1539 + C93805 * C1787 + C91722 * C1540 + C93587 * C1788) *
               C81840) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C91732 * C108 + C93805 * C114 + C91722 * C109 + C93587 * C115) *
               C81991 +
           (C91732 * C276 + C93805 * C579 + C91722 * C277 + C93587 * C580) *
               C93846 +
           (C53051 + C53052) * C81992 + (C53369 + C53370) * C93847 +
           (C53062 + C53061) * C81993 + (C53374 + C53373) * C81840) *
              C93662 * C93635 * C800 -
          ((C53371 + C53372) * C81840 + (C53057 + C53058) * C81993 +
           C56924 * C93847 + C56532 * C81992 + (C47087 + C47086) * C93846 +
           (C46826 + C46825) * C81991) *
              C93662 * C93635 * C801 +
          (C46837 * C81991 + C47092 * C93846 + (C50318 + C50317) * C81992 +
           (C50632 + C50631) * C93847 +
           (C91732 * C5821 + C93805 * C5827 + C91722 * C5822 + C93587 * C5828) *
               C81993 +
           (C91732 * C6011 + C93805 * C6349 + C91722 * C6012 + C93587 * C6350) *
               C81840) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C81991 +
            (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
            C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
               C93805 +
           (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
              C93635 * C93621 * C97 -
          ((C82425 + C82426 + C82427 + C82428 + C82429 + C82430) * C93587 +
           (C82424 + C82423 + C82422 + C82421 + C82420 + C82419) * C93805) *
              C93635 * C93621 * C98 +
          ((C82430 + C82429 + C82428 + C82427 + C82426 + C82425) * C93805 +
           (C222 * C81991 + C656 * C93846 + C2786 * C81992 + C3252 * C93847 +
            (C188 * C1392 + C93662 * C1474) * C81993 +
            (C188 * C1540 + C93662 * C1846) * C81840) *
               C93587) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C81991 +
            (C188 * C276 + C93662 * C635) * C93846 + C11252 * C81992 +
            C11842 * C93847 + C11254 * C81993 + C11843 * C81840) *
               C93805 +
           (C82419 + C82420 + C82421 + C82422 + C82423 + C82424) * C93587) *
              C93635 * C800 -
          ((C12792 * C81840 + C12148 * C81993 + C12793 * C93847 +
            C12150 * C81992 + C2540 * C93846 + C2076 * C81991) *
               C93587 +
           (C14809 * C81840 + C14162 * C81993 + C14808 * C93847 +
            C14160 * C81992 + (C188 * C955 + C93662 * C1261) * C93846 +
            (C188 * C807 + C93662 * C889) * C81991) *
               C93805) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C81991 +
            (C188 * C956 + C93662 * C1262) * C93846 +
            (C188 * C5818 + C93662 * C5922) * C81992 +
            (C188 * C6008 + C93662 * C6426) * C93847 +
            (C188 * C5821 + C93662 * C5924) * C81993 +
            (C188 * C6011 + C93662 * C6428) * C81840) *
               C93805 +
           ((C188 * C809 + C93662 * C891) * C81991 +
            (C188 * C957 + C93662 * C1263) * C93846 +
            (C188 * C5817 + C93662 * C5921) * C81992 +
            (C188 * C6007 + C93662 * C6425) * C93847 +
            (C188 * C5822 + C93662 * C5926) * C81993 +
            (C188 * C6012 + C93662 * C6430) * C81840) *
               C93587) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93662 * C93805 +
                     (C82544 + C82545 + C82546) * C93662 * C93587) *
                        C93635 * C93621 * C97 -
                    ((C82547 + C82548 + C82549) * C93662 * C93587 +
                     (C82546 + C82545 + C82544) * C93662 * C93805) *
                        C93635 * C93621 * C98 +
                    ((C82549 + C82548 + C82547) * C93662 * C93805 +
                     (C82504 * C111 + C82529 + C82529 + C93846 * C717 +
                      C82505 * C1385 + C82530 + C82530 + C93847 * C1897 +
                      C82506 * C1392 + C82531 + C82531 + C81840 * C1904) *
                         C93662 * C93587) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C82504 * C108 + C82508 + C82508 + C93846 * C714 +
                      C82505 * C1388 + C82509 + C82509 + C93847 * C1900 +
                      C82506 * C1389 + C82510 + C82510 + C81840 * C1901) *
                         C93662 * C93805 +
                     (C82544 + C82545 + C82546) * C93662 * C93587) *
                        C93635 * C800 -
                    ((C82506 * C5820 + C83216 + C83216 + C81840 * C6509 +
                      C82505 * C3410 + C83217 + C83217 + C93847 * C3994 +
                      C82504 * C806 + C83218 + C83218 + C93846 * C1318) *
                         C93662 * C93587 +
                     (C82506 * C5819 + C83219 + C83219 + C81840 * C6507 +
                      C82505 * C3409 + C83220 + C83220 + C93847 * C3993 +
                      C82504 * C807 + C83221 + C83221 + C93846 * C1319) *
                         C93662 * C93805) *
                        C93635 * C801 +
                    ((C82504 * C808 + C83222 + C83222 + C93846 * C1320 +
                      C82505 * C5818 + C83223 + C83223 + C93847 * C6506 +
                      C82506 * C5821 + C83224 + C83224 + C81840 * C6508) *
                         C93662 * C93805 +
                     (C82504 * C809 + C83225 + C83225 + C93846 * C1321 +
                      C82505 * C5817 + C83226 + C83226 + C93847 * C6505 +
                      C82506 * C5822 + C83227 + C83227 + C81840 * C6510) *
                         C93662 * C93587) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C93635 * C1979 -
           ((C36118 + C36119 + C36120) * C93737 +
            (C32680 + C32679 + C32678) * C62191) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C34157 + C34158 + C34159) * C62191 +
            (C31830 * C3410 + C35148 + C35148 + C31825 * C3418 +
             C31832 * C3411 + C35149 + C35149 + C31826 * C3419 +
             C31834 * C3412 + C35150 + C35150 + C31827 * C3420) *
                C93737) *
               C93662 * C93635 * C1980 -
           ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 +
             C31832 * C1386 + C35146 + C35146 + C31826 * C1402 +
             C31830 * C1387 + C35145 + C35145 + C31825 * C1403) *
                C93737 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C62191) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C93635 * C1979 -
           ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
            (C67959 + C67958) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C69539 + C69540) * C4077 + (C69541 + C69542) * C4078 +
            (C38562 * C62191 +
             (C36998 * C8616 + C39206 + C39206 + C93582 * C8620) * C93737) *
                C4079) *
               C93635 * C1980 -
           ((C69542 + C69541) * C4079 + (C69540 + C69539) * C4078 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C93635 * C1979 -
           ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
             C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
                C93737 +
            (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
             (C188 * C815 + C93662 * C897) * C31825 +
             (C188 * C807 + C93662 * C889) * C31831) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C2076 * C31831 + C2075 * C31825 + C2074 * C31833 + C2073 * C31826 +
             C2072 * C31835 + C2071 * C31827) *
                C62191 +
            (C12150 * C31831 + C12149 * C31825 + C22578 * C31833 +
             C22577 * C31826 + (C188 * C3412 + C93662 * C3494) * C31835 +
             (C188 * C3416 + C93662 * C3498) * C31827) *
                C93737) *
               C93635 * C1980 -
           ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 + C2788 * C31833 +
             C2789 * C31825 + C2790 * C31831) *
                C93737 +
            (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
             C219 * C31825 + C218 * C31831) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C93635 * C1979 -
           (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
              C4176 * C3413 + C4077 * C3495) *
                 C93582 +
             (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
              C4176 * C3409 + C4077 * C3491) *
                 C36999) *
                C93737 +
            ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
              C4176 * C815 + C4077 * C897) *
                 C93582 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C36999) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C6758 + C6757 + C6756) * C36999 +
             (C6755 + C6754 + C6753) * C93582) *
                C62191 +
            ((C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
              C4178 * C8616 + C4079 * C8742) *
                 C36999 +
             (C4176 * C3414 + C4077 * C3496 + C4177 * C5823 + C4078 * C5927 +
              C4178 * C8618 + C4079 * C8744) *
                 C93582) *
                C93737) *
               C93635 * C1980 -
           (((C7753 + C7754 + C7755) * C93582 +
             (C7756 + C7757 + C7758) * C36999) *
                C93737 +
            ((C4209 + C4208 + C4207) * C93582 +
             (C4206 + C4205 + C4204) * C36999) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C93635 * C1979 -
           ((C64681 + C64682) * C31827 + (C64683 + C64684) * C31835 +
            (C64685 + C64686) * C31826 + (C64687 + C64688) * C31833 +
            (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
                C31825 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C31831) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C64688 + C64687) * C31831 + (C64686 + C64685) * C31825 +
            (C64684 + C64683) * C31833 + (C64682 + C64681) * C31826 +
            (C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                C31835 +
            (C62344 * C812 + C62191 * C960 + C62345 * C3416 + C93737 * C3572) *
                C31827) *
               C93662 * C93635 * C1980 -
           ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
            (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
            (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C93635 * C1979 -
           (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
            ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
            ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
               C93635 * C1980) *
              C1981 +
          ((((C64688 + C64687) * C36999 + (C64686 + C64685) * C93582) * C4077 +
            ((C69747 + C69748) * C36999 + (C69749 + C69750) * C93582) * C4078 +
            ((C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
              C93737 * C8844) *
                 C36999 +
             (C62344 * C4920 + C62191 * C5124 + C62345 * C8618 +
              C93737 * C8846) *
                 C93582) *
                C4079) *
               C93635 * C1980 -
           (((C69750 + C69749) * C93582 + (C69748 + C69747) * C36999) * C4079 +
            ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
            ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C93635 * C1979 -
           (((C36433 + C36434 + C36435) * C93662 +
             (C36436 + C36437 + C36438) * C188) *
                C93737 +
            ((C32947 + C32946 + C32945) * C93662 +
             (C32944 + C32943 + C32942) * C188) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          ((((C34496 + C34497 + C34498) * C188 +
             (C34499 + C34500 + C34501) * C93662) *
                C62191 +
            ((C31831 * C3410 + C31825 * C3414 + C31833 * C3411 +
              C31826 * C3415 + C31835 * C3412 + C31827 * C3416) *
                 C188 +
             (C31831 * C3492 + C31825 * C3640 + C31833 * C3493 +
              C31826 * C3641 + C31835 * C3494 + C31827 * C3642) *
                 C93662) *
                C93737) *
               C93635 * C1980 -
           (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 +
              C31826 * C1600 + C31831 * C1469 + C31825 * C1601) *
                 C93662 +
             (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 +
              C31826 * C1394 + C31831 * C1387 + C31825 * C1395) *
                 C188) *
                C93737 +
            ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
              C31831 * C190 + C31825 * C363) *
                 C93662 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C188) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C93635 * C1979 -
           ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
             C40058 * C4077 + C40059 * C4176) *
                C93737 +
            (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
             C37700 * C4077 + C37699 * C4176) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C38782 * C4176 + C38783 * C4077 + C38784 * C4177 + C38785 * C4078 +
             C38786 * C4178 + C38787 * C4079) *
                C62191 +
            (C43167 * C4176 + C43168 * C4077 + C59752 * C4177 + C59753 * C4078 +
             (C36999 * C8616 + C93582 * C8618) * C4178 +
             (C36999 * C8742 + C93582 * C8966) * C4079) *
                C93737) *
               C93635 * C1980 -
           ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
             C44104 * C4077 + C44103 * C4176) *
                C93737 +
            (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
             (C36999 * C190 + C93582 * C363) * C4077 +
             (C36999 * C109 + C93582 * C115) * C4176) *
                C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C93635 * C1979 -
           ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
            (C2311 * C31827 + C2312 * C31826 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
                C62191) *
               C93635 * C1980) *
              C1981 +
          (((C2312 * C31825 + C2311 * C31826 + C2310 * C31827) * C62191 +
            (C12477 * C31825 + C22901 * C31826 +
             (C418 * C3412 + C3717 + C3717 + C93662 * C3712) * C31827) *
                C93737) *
               C93635 * C1980 -
           ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
            (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C93635 * C1979 -
           ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
             C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
             C4077 * C3709) *
                C93582 * C93737 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C93582 * C62191) *
               C93635 * C1980) *
              C1981 +
          (((C7106 + C7105 + C7104) * C93582 * C62191 +
            (C4449 * C3410 + C9095 + C9095 + C4077 * C3710 + C4450 * C5817 +
             C9096 + C9096 + C4078 * C6173 + C4451 * C8616 + C9097 + C9097 +
             C4079 * C9090) *
                C93582 * C93737) *
               C93635 * C1980 -
           ((C8084 + C8085 + C8086) * C93582 * C93737 +
            (C4491 + C4490 + C4489) * C93582 * C62191) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C93635 * C1979 -
           (((C64991 + C64992) * C93662 + (C64683 + C64684) * C188) * C31827 +
            ((C64993 + C64994) * C93662 + (C64687 + C64688) * C188) * C31826 +
            ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 +
              C62191 * C1145) *
                 C93662 +
             (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                 C188) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          ((((C64688 + C64687) * C188 + (C64994 + C64993) * C93662) * C31825 +
            ((C64684 + C64683) * C188 + (C64992 + C64991) * C93662) * C31826 +
            ((C62344 * C804 + C62191 * C952 + C62345 * C3412 + C93737 * C3568) *
                 C188 +
             (C62344 * C886 + C62191 * C1142 + C62345 * C3494 +
              C93737 * C3786) *
                 C93662) *
                C31827) *
               C93635 * C1980 -
           (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
            ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
            ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C93635 * C1979 -
           ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
            (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
            (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C64688 + C64687) * C4176 + (C64994 + C64993) * C4077 +
            (C69747 + C69748) * C4177 + (C70049 + C70050) * C4078 +
            (C62344 * C4916 + C62191 * C5120 + C62345 * C8616 +
             C93737 * C8844) *
                C4178 +
            (C62344 * C5038 + C62191 * C5447 + C62345 * C8742 +
             C93737 * C9196) *
                C4079) *
               C93582 * C93635 * C1980 -
           ((C70050 + C70049) * C4079 + (C69748 + C69747) * C4178 +
            (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
            (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C93635 * C1979 -
           ((C36745 + C36746 + C36747) * C93737 +
            (C36436 + C36437 + C36438) * C62345 +
            (C33202 + C33201 + C33200) * C62191 +
            (C32944 + C32943 + C32942) * C62344) *
               C93662 * C93635 * C1980) *
              C1981 +
          (((C34496 + C34497 + C34498) * C62344 +
            (C34832 + C34833 + C34834) * C62191 +
            (C31831 * C3410 + C31825 * C3414 + C31833 * C3411 + C31826 * C3415 +
             C31835 * C3412 + C31827 * C3416) *
                C62345 +
            (C31831 * C3566 + C31825 * C3854 + C31833 * C3567 + C31826 * C3855 +
             C31835 * C3568 + C31827 * C3856) *
                C93737) *
               C93662 * C93635 * C1980 -
           ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 + C31826 * C1782 +
             C31831 * C1535 + C31825 * C1783) *
                C93737 +
            (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
             C31831 * C1387 + C31825 * C1395) *
                C62345 +
            (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C62191 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C62344) *
               C93662 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C93635 * C1979 -
           ((C68480 + C68481 + C68482 + C68483) * C4079 +
            (C68479 + C68478 + C68477 + C68476) * C4078 +
            (C68475 + C68474 + C68473 + C68472) * C4077) *
               C93635 * C1980) *
              C1981 +
          (((C70149 + C70150 + C70151 + C70152) * C4077 +
            (C70153 + C70154 + C70155 + C70156) * C4078 +
            (C38786 * C62344 + C39001 * C62191 +
             (C36999 * C8616 + C93582 * C8618) * C62345 +
             (C36999 * C8844 + C93582 * C9302) * C93737) *
                C4079) *
               C93635 * C1980 -
           ((C70156 + C70155 + C70154 + C70153) * C4079 +
            (C70152 + C70151 + C70150 + C70149) * C4078 +
            (C44421 * C93737 + C44103 * C62345 +
             (C36999 * C277 + C93582 * C580) * C62191 +
             (C36999 * C109 + C93582 * C115) * C62344) *
                C4077) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C93635 * C1979 -
           ((C65191 + C65192 + C65193 + C65194) * C31827 +
            (C65195 + C65196 + C65197 + C65198) * C31826 +
            (C14808 * C93737 + C14160 * C62345 +
             (C188 * C955 + C93662 * C1261) * C62191 +
             (C188 * C807 + C93662 * C889) * C62344) *
                C31825) *
               C93635 * C1980) *
              C1981 +
          (((C65198 + C65197 + C65196 + C65195) * C31825 +
            (C65194 + C65193 + C65192 + C65191) * C31826 +
            (C2072 * C62344 + C2538 * C62191 +
             (C188 * C3412 + C93662 * C3494) * C62345 +
             (C188 * C3568 + C93662 * C3926) * C93737) *
                C31827) *
               C93635 * C1980 -
           ((C62785 + C62786 + C62787 + C62788) * C31827 +
            (C62784 + C62783 + C62782 + C62781) * C31826 +
            (C62780 + C62779 + C62778 + C62777) * C31825) *
               C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C93635 * C1979 -
           ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
             C4176 * C3565 + C4077 * C3923) *
                C93737 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C62345 +
            (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C62191 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C62344) *
               C93582 * C93635 * C1980) *
              C1981 +
          (((C6758 + C6757 + C6756) * C62344 +
            (C7430 + C7429 + C7428) * C62191 +
            (C4176 * C3410 + C4077 * C3492 + C4177 * C5817 + C4078 * C5921 +
             C4178 * C8616 + C4079 * C8742) *
                C62345 +
            (C4176 * C3566 + C4077 * C3924 + C4177 * C6007 + C4078 * C6425 +
             C4178 * C8844 + C4079 * C9414) *
                C93737) *
               C93582 * C93635 * C1980 -
           ((C8402 + C8403 + C8404) * C93737 +
            (C7756 + C7757 + C7758) * C62345 +
            (C4749 + C4748 + C4747) * C62191 +
            (C4206 + C4205 + C4204) * C62344) *
               C93582 * C93635 * C1979) *
              C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C93635 * C1979 -
                     ((C65315 + C65316) * C93662 * C31827 +
                      (C65317 + C65318) * C93662 * C31826 +
                      (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                       C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                          C93662 * C31825) *
                         C93635 * C1980) *
                        C1981 +
                    (((C65318 + C65317) * C93662 * C31825 +
                      (C65316 + C65315) * C93662 * C31826 +
                      (C62865 * C804 + C65305 + C65305 + C62191 * C1316 +
                       C62866 * C3412 + C65306 + C65306 + C93737 * C3996) *
                          C93662 * C31827) *
                         C93635 * C1980 -
                     ((C62906 + C62907) * C93662 * C31827 +
                      (C62905 + C62904) * C93662 * C31826 +
                      (C62903 + C62902) * C93662 * C31825) *
                         C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C93635 * C1979 -
                     ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                      (C68664 + C68663) * C4077) *
                         C93582 * C93635 * C1980) *
                        C1981 +
                    (((C65318 + C65317) * C4077 + (C70363 + C70364) * C4078 +
                      (C62865 * C4916 + C70357 + C70357 + C62191 * C5715 +
                       C62866 * C8616 + C70358 + C70358 + C93737 * C9514) *
                          C4079) *
                         C93582 * C93635 * C1980 -
                     ((C70364 + C70363) * C4079 + (C65317 + C65318) * C4078 +
                      (C62903 + C62902) * C4077) *
                         C93582 * C93635 * C1979) *
                        C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C2695 -
           ((C63692 + C63693 + C63694) * C93737 +
            (C63691 + C63690 + C63689) * C62191) *
               C93662 * C2696) *
              C1979 +
          (((C36120 + C36119 + C36118) * C62191 +
            (C31830 * C5819 + C33437 + C33437 + C31825 * C5831 +
             C31832 * C5820 + C33438 + C33438 + C31826 * C5832 +
             C31834 * C12033 + C33439 + C33439 + C31827 * C12035) *
                C93737) *
               C93662 * C2696 -
           ((C36118 + C36119 + C36120) * C93737 +
            (C32680 + C32679 + C32678) * C62191) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C2695 -
           ((C71353 + C71354) * C4079 + (C71355 + C71356) * C4078 +
            (C41998 * C93737 + C41997 * C62191) * C4077) *
               C2696) *
              C1979 +
          (((C71356 + C71355) * C4077 + (C71354 + C71353) * C4078 +
            (C39821 * C62191 +
             (C36998 * C38050 + C38061 + C38061 + C93582 * C38052) * C93737) *
                C4079) *
               C2696 -
           ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
            (C67959 + C67958) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C2695 -
           ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
            (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
               C2696) *
              C1979 +
          (((C66517 + C66518 + C66519 + C66520 + C66521 + C66522) * C62191 +
            (C14162 * C31831 + C14163 * C31825 + C12148 * C31833 +
             C12147 * C31826 + (C188 * C12033 + C93662 * C12136) * C31835 +
             (C188 * C12034 + C93662 * C12137) * C31827) *
                C93737) *
               C2696 -
           ((C66522 + C66521 + C66520 + C66519 + C66518 + C66517) * C93737 +
            (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
             (C188 * C815 + C93662 * C897) * C31825 +
             (C188 * C807 + C93662 * C889) * C31831) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C2695 -
           (((C68848 + C68849 + C68850) * C93582 +
             (C68851 + C68852 + C68853) * C36999) *
                C93737 +
            ((C68847 + C68846 + C68845) * C93582 +
             (C68844 + C68843 + C68842) * C36999) *
                C62191) *
               C2696) *
              C1979 +
          ((((C71467 + C71468 + C71469) * C36999 +
             (C71470 + C71471 + C71472) * C93582) *
                C62191 +
            ((C4176 * C5819 + C4077 * C5923 + C4177 * C5821 + C4078 * C5924 +
              C4178 * C38050 + C4079 * C38111) *
                 C36999 +
             (C4176 * C5825 + C4077 * C5929 + C4177 * C5827 + C4078 * C5930 +
              C4178 * C38051 + C4079 * C38112) *
                 C93582) *
                C93737) *
               C2696 -
           (((C71472 + C71471 + C71470) * C93582 +
             (C71469 + C71468 + C71467) * C36999) *
                C93737 +
            ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
              C4176 * C815 + C4077 * C897) *
                 C93582 +
             (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
              C4176 * C807 + C4077 * C889) *
                 C36999) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C2695 -
           ((C65653 + C65654) * C31827 + (C65655 + C65656) * C31835 +
            (C65657 + C65658) * C31826 + (C65659 + C65660) * C31833 +
            (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C31825 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C31831) *
               C93662 * C2696) *
              C1979 +
          (((C62344 * C3409 + C62191 * C3565 + C62345 * C5819 +
             C93737 * C6009) *
                C31831 +
            (C62344 * C3413 + C62191 * C3569 + C62345 * C5825 +
             C93737 * C6015) *
                C31825 +
            (C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
             C93737 * C6010) *
                C31833 +
            (C62344 * C3414 + C62191 * C3570 + C62345 * C5826 +
             C93737 * C6016) *
                C31826 +
            (C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
             C93737 * C12248) *
                C31835 +
            (C62344 * C3415 + C62191 * C3571 + C62345 * C12034 +
             C93737 * C12249) *
                C31827) *
               C93662 * C2696 -
           ((C64681 + C64682) * C31827 + (C64683 + C64684) * C31835 +
            (C64685 + C64686) * C31826 + (C64687 + C64688) * C31833 +
            (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
                C31825 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C31831) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C2695 -
           (((C71587 + C71588) * C93582 + (C71589 + C71590) * C36999) * C4079 +
            ((C71591 + C71592) * C93582 + (C71593 + C71594) * C36999) * C4078 +
            ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93582 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C36999) *
                C4077) *
               C2696) *
              C1979 +
          ((((C71594 + C71593) * C36999 + (C71592 + C71591) * C93582) * C4077 +
            ((C71590 + C71589) * C36999 + (C71588 + C71587) * C93582) * C4078 +
            ((C62344 * C8615 + C62191 * C8843 + C62345 * C38050 +
              C93737 * C38163) *
                 C36999 +
             (C62344 * C8617 + C62191 * C8845 + C62345 * C38051 +
              C93737 * C38164) *
                 C93582) *
                C4079) *
               C2696 -
           (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
            ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
            ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C2695 -
           (((C63959 + C63960 + C63961) * C93662 +
             (C63962 + C63963 + C63964) * C188) *
                C93737 +
            ((C63958 + C63957 + C63956) * C93662 +
             (C63955 + C63954 + C63953) * C188) *
                C62191) *
               C2696) *
              C1979 +
          ((((C36438 + C36437 + C36436) * C188 +
             (C36435 + C36434 + C36433) * C93662) *
                C62191 +
            ((C31831 * C5819 + C31825 * C5825 + C31833 * C5820 +
              C31826 * C5826 + C31835 * C12033 + C31827 * C12034) *
                 C188 +
             (C31831 * C5923 + C31825 * C6095 + C31833 * C5925 +
              C31826 * C6096 + C31835 * C12136 + C31827 * C12366) *
                 C93662) *
                C93737) *
               C2696 -
           (((C36433 + C36434 + C36435) * C93662 +
             (C36436 + C36437 + C36438) * C188) *
                C93737 +
            ((C32947 + C32946 + C32945) * C93662 +
             (C32944 + C32943 + C32942) * C188) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C2695 -
           ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
            (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
               C2696) *
              C1979 +
          (((C71693 + C71694 + C71695 + C71696 + C71697 + C71698) * C62191 +
            (C41451 * C4176 + C41452 * C4077 + C41454 * C4177 + C41453 * C4078 +
             (C36999 * C38050 + C93582 * C38051) * C4178 +
             (C36999 * C38111 + C93582 * C38215) * C4079) *
                C93737) *
               C2696 -
           ((C71698 + C71697 + C71696 + C71695 + C71694 + C71693) * C93737 +
            (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
             C37700 * C4077 + C37699 * C4176) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C2695 -
           ((C64042 + C64043 + C64044) * C93737 +
            (C64041 + C64040 + C64039) * C62191) *
               C2696) *
              C1979 +
          (((C66817 + C66818 + C66819) * C62191 +
            (C14495 * C31825 + C12476 * C31826 +
             (C418 * C12033 + C12471 + C12471 + C93662 * C12465) * C31827) *
                C93737) *
               C2696 -
           ((C66819 + C66818 + C66817) * C93737 +
            (C2311 * C31827 + C2312 * C31826 +
             (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
                C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C2695 -
           ((C69118 + C69119 + C69120) * C93582 * C93737 +
            (C69117 + C69116 + C69115) * C93582 * C62191) *
               C2696) *
              C1979 +
          (((C71812 + C71813 + C71814) * C93582 * C62191 +
            (C4449 * C5819 + C71803 + C71803 + C4077 * C6175 + C4450 * C5821 +
             C71804 + C71804 + C4078 * C6176 + C4451 * C38050 + C71805 +
             C71805 + C4079 * C38266) *
                C93582 * C93737) *
               C2696 -
           ((C71814 + C71813 + C71812) * C93582 * C93737 +
            (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
             C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
             C4077 * C1079) *
                C93582 * C62191) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C2695 -
           (((C65984 + C65985) * C93662 + (C65655 + C65656) * C188) * C31827 +
            ((C65986 + C65987) * C93662 + (C65659 + C65660) * C188) * C31826 +
            ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93662 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C188) *
                C31825) *
               C2696) *
              C1979 +
          ((((C62344 * C3409 + C62191 * C3565 + C62345 * C5819 +
              C93737 * C6009) *
                 C188 +
             (C62344 * C3491 + C62191 * C3783 + C62345 * C5923 +
              C93737 * C6267) *
                 C93662) *
                C31825 +
            ((C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
              C93737 * C6010) *
                 C188 +
             (C62344 * C3492 + C62191 * C3784 + C62345 * C5925 +
              C93737 * C6269) *
                 C93662) *
                C31826 +
            ((C62344 * C3411 + C62191 * C3567 + C62345 * C12033 +
              C93737 * C12248) *
                 C188 +
             (C62344 * C3493 + C62191 * C3785 + C62345 * C12136 +
              C93737 * C12575) *
                 C93662) *
                C31827) *
               C2696 -
           (((C64991 + C64992) * C93662 + (C64683 + C64684) * C188) * C31827 +
            ((C64993 + C64994) * C93662 + (C64687 + C64688) * C188) * C31826 +
            ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 +
              C62191 * C1145) *
                 C93662 +
             (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                 C188) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C2695 -
           ((C71921 + C71922) * C4079 + (C71589 + C71590) * C4178 +
            (C71923 + C71924) * C4078 + (C71593 + C71594) * C4177 +
            (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C4077 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C4176) *
               C93582 * C2696) *
              C1979 +
          (((C71594 + C71593) * C4176 + (C71924 + C71923) * C4077 +
            (C71590 + C71589) * C4177 + (C71922 + C71921) * C4078 +
            (C62344 * C8615 + C62191 * C8843 + C62345 * C38050 +
             C93737 * C38163) *
                C4178 +
            (C62344 * C8741 + C62191 * C9195 + C62345 * C38111 +
             C93737 * C38325) *
                C4079) *
               C93582 * C2696 -
           ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
            (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
            (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C2695 -
           ((C64208 + C64209 + C64210) * C93737 +
            (C63962 + C63963 + C63964) * C62345 +
            (C64207 + C64206 + C64205) * C62191 +
            (C63955 + C63954 + C63953) * C62344) *
               C93662 * C2696) *
              C1979 +
          (((C36438 + C36437 + C36436) * C62344 +
            (C36747 + C36746 + C36745) * C62191 +
            (C31831 * C5819 + C31825 * C5825 + C31833 * C5820 + C31826 * C5826 +
             C31835 * C12033 + C31827 * C12034) *
                C62345 +
            (C31831 * C6009 + C31825 * C6347 + C31833 * C6010 + C31826 * C6348 +
             C31835 * C12248 + C31827 * C12683) *
                C93737) *
               C93662 * C2696 -
           ((C36745 + C36746 + C36747) * C93737 +
            (C36436 + C36437 + C36438) * C62345 +
            (C33202 + C33201 + C33200) * C62191 +
            (C32944 + C32943 + C32942) * C62344) *
               C93662 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C2695 -
           ((C72023 + C72024 + C72025 + C72026) * C4079 +
            (C72027 + C72028 + C72029 + C72030) * C4078 +
            (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
             C42289 * C62344) *
                C4077) *
               C2696) *
              C1979 +
          (((C72030 + C72029 + C72028 + C72027) * C4077 +
            (C72026 + C72025 + C72024 + C72023) * C4078 +
            (C40055 * C62344 + C40277 * C62191 +
             (C36999 * C38050 + C93582 * C38051) * C62345 +
             (C36999 * C38163 + C93582 * C38376) * C93737) *
                C4079) *
               C2696 -
           ((C68480 + C68481 + C68482 + C68483) * C4079 +
            (C68479 + C68478 + C68477 + C68476) * C4078 +
            (C68475 + C68474 + C68473 + C68472) * C4077) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C2695 -
           ((C66193 + C66194 + C66195 + C66196) * C31827 +
            (C66197 + C66198 + C66199 + C66200) * C31826 +
            (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
             C11252 * C62344) *
                C31825) *
               C2696) *
              C1979 +
          (((C14160 * C62344 + C14808 * C62191 + C14162 * C62345 +
             C14809 * C93737) *
                C31825 +
            (C12150 * C62344 + C12793 * C62191 + C12148 * C62345 +
             C12792 * C93737) *
                C31826 +
            (C22578 * C62344 + C23217 * C62191 +
             (C188 * C12033 + C93662 * C12136) * C62345 +
             (C188 * C12248 + C93662 * C12782) * C93737) *
                C31827) *
               C2696 -
           ((C65191 + C65192 + C65193 + C65194) * C31827 +
            (C65195 + C65196 + C65197 + C65198) * C31826 +
            (C14808 * C93737 + C14160 * C62345 +
             (C188 * C955 + C93662 * C1261) * C62191 +
             (C188 * C807 + C93662 * C889) * C62344) *
                C31825) *
               C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C2695 -
           ((C69358 + C69359 + C69360) * C93737 +
            (C68851 + C68852 + C68853) * C62345 +
            (C69357 + C69356 + C69355) * C62191 +
            (C68844 + C68843 + C68842) * C62344) *
               C93582 * C2696) *
              C1979 +
          (((C71467 + C71468 + C71469) * C62344 +
            (C72135 + C72136 + C72137) * C62191 +
            (C4176 * C5819 + C4077 * C5923 + C4177 * C5821 + C4078 * C5924 +
             C4178 * C38050 + C4079 * C38111) *
                C62345 +
            (C4176 * C6009 + C4077 * C6427 + C4177 * C6011 + C4078 * C6428 +
             C4178 * C38163 + C4079 * C38427) *
                C93737) *
               C93582 * C2696 -
           ((C72137 + C72136 + C72135) * C93737 +
            (C71469 + C71468 + C71467) * C62345 +
            (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
             C4176 * C955 + C4077 * C1261) *
                C62191 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C62344) *
               C93582 * C2695) *
              C1980) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C2695 -
                     ((C66317 + C66318) * C93662 * C31827 +
                      (C66319 + C66320) * C93662 * C31826 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C93662 * C31825) *
                         C2696) *
                        C1979 +
                    (((C62865 * C3409 + C67212 + C67212 + C62191 * C3993 +
                       C62866 * C5819 + C67213 + C67213 + C93737 * C6507) *
                          C93662 * C31825 +
                      (C62865 * C3410 + C67214 + C67214 + C62191 * C3994 +
                       C62866 * C5820 + C67215 + C67215 + C93737 * C6509) *
                          C93662 * C31826 +
                      (C62865 * C3411 + C67216 + C67216 + C62191 * C3995 +
                       C62866 * C12033 + C67217 + C67217 + C93737 * C12893) *
                          C93662 * C31827) *
                         C2696 -
                     ((C65315 + C65316) * C93662 * C31827 +
                      (C65317 + C65318) * C93662 * C31826 +
                      (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                       C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                          C93662 * C31825) *
                         C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C2695 -
                     ((C72254 + C72255) * C4079 + (C72256 + C72257) * C4078 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C4077) *
                         C93582 * C2696) *
                        C1979 +
                    (((C72257 + C72256) * C4077 + (C72255 + C72254) * C4078 +
                      (C62865 * C8615 + C72244 + C72244 + C62191 * C9513 +
                       C62866 * C38050 + C72245 + C72245 + C93737 * C38478) *
                          C4079) *
                         C93582 * C2696 -
                     ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                      (C68664 + C68663) * C4077) *
                         C93582 * C2695) *
                        C1980) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36118 + C36119 + C36120) * C93737 +
           (C32680 + C32679 + C32678) * C62191) *
              C93662 * C93635 * C801 +
          ((C32683 + C32682 + C32681) * C62191 +
           (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 + C31832 * C5817 +
            C36110 + C36110 + C31826 * C5829 + C31834 * C7631 + C36111 +
            C36111 + C31827 * C7633) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 + C31832 * C1386 +
            C35146 + C35146 + C31826 * C1402 + C31830 * C1387 + C35145 +
            C35145 + C31825 * C1403) *
               C93737 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C62191) *
              C93662 * C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C62191 +
           (C31830 * C1386 + C62194 + C62194 + C31825 * C1402 + C31832 * C1385 +
            C62195 + C62195 + C31826 * C1401 + C31834 * C2697 + C62196 +
            C62196 + C31827 * C2699) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C63689 + C63690 + C63691) * C93737) *
              C93662 * C1382 -
          ((C63692 + C63693 + C63694) * C93737 +
           (C63691 + C63690 + C63689) * C62191) *
              C93662 * C1383 +
          ((C63694 + C63693 + C63692) * C62191 +
           (C31830 * C11103 + C63674 + C63674 + C31825 * C11111 +
            C31832 * C11102 + C63675 + C63675 + C31826 * C11110 +
            C31834 * C13010 + C63676 + C63676 + C31827 * C13012) *
               C93737) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C37504 * C62191 + C39823 * C93737) * C4078 +
           (C37505 * C62191 + C39822 * C93737) * C4079) *
              C93635 * C93621 * C97 -
          ((C59452 * C93737 + C38561 * C62191) * C4079 +
           (C42861 * C93737 + C38560 * C62191) * C4078 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C62191 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C4077 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C62191 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C4078 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C62191 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C93635 * C800 -
          ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
           (C67959 + C67958) * C4077) *
              C93635 * C801 +
          (C67964 * C4077 + (C67963 + C67962) * C4078 +
           (C37507 * C62191 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C1382 -
          ((C41182 * C93737 + C39822 * C62191) * C4079 +
           (C41181 * C93737 + C39823 * C62191) * C4078 +
           (C41998 * C93737 + C41997 * C62191) * C4077) *
              C1383 +
          ((C41998 * C62191 + C42000 * C93737) * C4077 +
           (C41181 * C62191 + C41999 * C93737) * C4078 +
           (C41182 * C62191 +
            (C36998 * C44722 + C44729 + C44729 + C93582 * C44724) * C93737) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C800 -
          ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
            C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
               C93737 +
           (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
            (C188 * C815 + C93662 * C897) * C31825 +
            (C188 * C807 + C93662 * C889) * C31831) *
               C62191) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C31831 +
            (C188 * C816 + C93662 * C898) * C31825 +
            (C188 * C809 + C93662 * C891) * C31833 +
            (C188 * C817 + C93662 * C899) * C31826 +
            (C188 * C810 + C93662 * C892) * C31835 +
            (C188 * C818 + C93662 * C900) * C31827) *
               C62191 +
           ((C188 * C5818 + C93662 * C5922) * C31831 +
            (C188 * C5824 + C93662 * C5928) * C31825 +
            (C188 * C5817 + C93662 * C5921) * C31833 +
            (C188 * C5823 + C93662 * C5927) * C31826 +
            (C188 * C7631 + C93662 * C7738) * C31835 +
            (C188 * C7632 + C93662 * C7739) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 + C2788 * C31833 +
            C2789 * C31825 + C2790 * C31831) *
               C93737 +
           (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
            C219 * C31825 + C218 * C31831) *
               C62191) *
              C93635 * C93621 * C98 +
          ((C220 * C31831 + C221 * C31825 + C222 * C31833 + C223 * C31826 +
            C225 * C31835 + C224 * C31827) *
               C62191 +
           (C2788 * C31831 + C2787 * C31825 + C2786 * C31833 + C2785 * C31826 +
            (C188 * C2697 + C93662 * C2770) * C31835 +
            (C188 * C2698 + C93662 * C2771) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
              C1382 -
          ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
           (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
              C1383 +
          ((C63780 + C63779 + C63778 + C63777 + C63776 + C63775) * C62191 +
           (C11259 * C31831 + C11258 * C31825 + C11257 * C31833 +
            C11256 * C31826 + (C188 * C13010 + C93662 * C13133) * C31835 +
            (C188 * C13011 + C93662 * C13134) * C31827) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C7753 + C7754 + C7755) * C93582 +
            (C7756 + C7757 + C7758) * C36999) *
               C93737 +
           ((C4209 + C4208 + C4207) * C93582 +
            (C4206 + C4205 + C4204) * C36999) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C36999 +
            (C4212 + C4211 + C4210) * C93582) *
               C62191 +
           ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C36999 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93582) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C800 -
          (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
             C4176 * C3413 + C4077 * C3495) *
                C93582 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C36999) *
               C93737 +
           ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C93582 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C36999) *
               C62191) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C36999 +
            (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
             C4178 * C4922 + C4079 * C5044) *
                C93582) *
               C62191 +
           ((C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
             C4178 * C39804 + C4079 * C39892) *
                C36999 +
            (C4176 * C5824 + C4077 * C5928 + C4177 * C8617 + C4078 * C8743 +
             C4178 * C39805 + C4079 * C39893) *
                C93582) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C68842 + C68843 + C68844) * C36999 +
            (C68845 + C68846 + C68847) * C93582) *
               C93737) *
              C1382 -
          (((C68848 + C68849 + C68850) * C93582 +
            (C68851 + C68852 + C68853) * C36999) *
               C93737 +
           ((C68847 + C68846 + C68845) * C93582 +
            (C68844 + C68843 + C68842) * C36999) *
               C62191) *
              C1383 +
          (((C68853 + C68852 + C68851) * C36999 +
            (C68850 + C68849 + C68848) * C93582) *
               C62191 +
           ((C4176 * C11103 + C4077 * C11224 + C4177 * C14027 + C4078 * C14143 +
             C4178 * C44722 + C4079 * C44827) *
                C36999 +
            (C4176 * C11107 + C4077 * C11228 + C4177 * C14029 + C4078 * C14145 +
             C4178 * C44723 + C4079 * C44828) *
                C93582) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C800 -
          ((C62345 * C3415 + C93737 * C3571 + C62344 * C813 + C62191 * C961) *
               C31827 +
           (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
               C31835 +
           (C62345 * C3414 + C93737 * C3570 + C62344 * C814 + C62191 * C962) *
               C31826 +
           (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
               C31833 +
           (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
               C31825 +
           (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
               C31831) *
              C93662 * C93635 * C801 +
          ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C31831 +
           (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
               C31825 +
           (C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
               C31833 +
           (C62344 * C817 + C62191 * C965 + C62345 * C5823 + C93737 * C6013) *
               C31826 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C31835 +
           (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
               C31827) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C93621 * C97 -
          ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
           (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
           (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
              C93662 * C93635 * C93621 * C98 +
          (C62383 * C31831 + C62384 * C31825 + (C62382 + C62381) * C31833 +
           (C62380 + C62379) * C31826 +
           (C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
               C31835 +
           (C62344 * C118 + C62191 * C286 + C62345 * C2698 + C93737 * C2857) *
               C31827) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C1382 -
          ((C62345 * C1399 + C93737 * C1547 + C62344 * C1394 + C62191 * C1542) *
               C31827 +
           (C62345 * C1391 + C93737 * C1539 + C62344 * C1386 + C62191 * C1534) *
               C31835 +
           (C62345 * C1398 + C93737 * C1546 + C62344 * C1395 + C62191 * C1543) *
               C31826 +
           (C62345 * C1390 + C93737 * C1538 + C62344 * C1387 + C62191 * C1535) *
               C31833 +
           (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 + C62191 * C1544) *
               C31825 +
           (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 + C62191 * C1536) *
               C31831) *
              C93662 * C1383 +
          ((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
            C93737 * C11345) *
               C31831 +
           (C62344 * C1397 + C62191 * C1545 + C62345 * C11107 +
            C93737 * C11349) *
               C31825 +
           (C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
            C93737 * C11344) *
               C31833 +
           (C62344 * C1398 + C62191 * C1546 + C62345 * C11106 +
            C93737 * C11348) *
               C31826 +
           (C62344 * C1391 + C62191 * C1539 + C62345 * C13010 +
            C93737 * C13241) *
               C31835 +
           (C62344 * C1399 + C62191 * C1547 + C62345 * C13011 +
            C93737 * C13242) *
               C31827) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
                C36999 +
            (C62344 * C815 + C62191 * C963 + C62345 * C3413 + C93737 * C3569) *
                C93582) *
               C4078 +
           ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C36999 +
            (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
                C93582) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C62345 * C5823 + C93737 * C6013 + C62344 * C817 + C62191 * C965) *
                C93582 +
            (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
                C36999) *
               C4079 +
           ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
           ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
              C93635 * C93621 * C98 +
          ((C62383 * C36999 + C62384 * C93582) * C4077 +
           ((C64684 + C64683) * C36999 + (C64682 + C64681) * C93582) * C4078 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C36999 +
            (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
                C93582) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C93635 * C800 -
          (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
           ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
           ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
              C93635 * C801 +
          (C68153 * C4077 +
           ((C68148 + C68147) * C36999 + (C68146 + C68145) * C93582) * C4078 +
           ((C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C62344 * C4922 + C62191 * C5126 + C62345 * C39805 +
             C93737 * C39961) *
                C93582) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C1382 -
          (((C62345 * C5827 + C93737 * C6017 + C62344 * C5824 +
             C62191 * C6014) *
                C93582 +
            (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
             C62191 * C6008) *
                C36999) *
               C4079 +
           ((C62345 * C5825 + C93737 * C6015 + C62344 * C3413 +
             C62191 * C3569) *
                C93582 +
            (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
             C62191 * C3565) *
                C36999) *
               C4078 +
           ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C93582 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C36999) *
               C4077) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C36999 +
            (C62344 * C1397 + C62191 * C1545 + C62345 * C11107 +
             C93737 * C11349) *
                C93582) *
               C4077 +
           ((C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
             C93737 * C14265) *
                C36999 +
            (C62344 * C5825 + C62191 * C6015 + C62345 * C14029 +
             C93737 * C14267) *
                C93582) *
               C4078 +
           ((C62344 * C5821 + C62191 * C6011 + C62345 * C44722 +
             C93737 * C44951) *
                C36999 +
            (C62344 * C5827 + C62191 * C6017 + C62345 * C44723 +
             C93737 * C44952) *
                C93582) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C800 -
          (((C36433 + C36434 + C36435) * C93662 +
            (C36436 + C36437 + C36438) * C188) *
               C93737 +
           ((C32947 + C32946 + C32945) * C93662 +
            (C32944 + C32943 + C32942) * C188) *
               C62191) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C188 +
            (C32950 + C32949 + C32948) * C93662) *
               C62191 +
           ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
             C31835 * C7631 + C31827 * C7632) *
                C188 +
            (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 + C31826 * C6093 +
             C31835 * C7738 + C31827 * C7968) *
                C93662) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 + C31826 * C1600 +
             C31831 * C1469 + C31825 * C1601) *
                C93662 +
            (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
             C31831 * C1387 + C31825 * C1395) *
                C188) *
               C93737 +
           ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
             C31831 * C190 + C31825 * C363) *
                C93662 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C188) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C188 +
            (C31831 * C191 + C31825 * C364 + C31833 * C192 + C31826 * C365 +
             C31835 * C193 + C31827 * C366) *
                C93662) *
               C62191 +
           ((C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
             C31835 * C2697 + C31827 * C2698) *
                C188 +
            (C31831 * C1468 + C31825 * C1600 + C31833 * C1467 + C31826 * C1599 +
             C31835 * C2770 + C31827 * C2942) *
                C93662) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C63953 + C63954 + C63955) * C188 +
            (C63956 + C63957 + C63958) * C93662) *
               C93737) *
              C1382 -
          (((C63959 + C63960 + C63961) * C93662 +
            (C63962 + C63963 + C63964) * C188) *
               C93737 +
           ((C63958 + C63957 + C63956) * C93662 +
            (C63955 + C63954 + C63953) * C188) *
               C62191) *
              C1383 +
          (((C63964 + C63963 + C63962) * C188 +
            (C63961 + C63960 + C63959) * C93662) *
               C62191 +
           ((C31831 * C11103 + C31825 * C11107 + C31833 * C11102 +
             C31826 * C11106 + C31835 * C13010 + C31827 * C13011) *
                C188 +
            (C31831 * C11224 + C31825 * C11427 + C31833 * C11223 +
             C31826 * C11426 + C31835 * C13133 + C31827 * C13359) *
                C93662) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
            C44104 * C4077 + C44103 * C4176) *
               C93737 +
           (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
            (C36999 * C190 + C93582 * C363) * C4077 +
            (C36999 * C109 + C93582 * C115) * C4176) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C4176 +
            (C36999 * C191 + C93582 * C364) * C4077 +
            (C36999 * C805 + C93582 * C813) * C4177 +
            (C36999 * C887 + C93582 * C1019) * C4078 +
            (C36999 * C810 + C93582 * C818) * C4178 +
            (C36999 * C892 + C93582 * C1024) * C4079) *
               C62191 +
           ((C36999 * C1386 + C93582 * C1394) * C4176 +
            (C36999 * C1468 + C93582 * C1600) * C4077 +
            (C36999 * C3411 + C93582 * C3415) * C4177 +
            (C36999 * C3493 + C93582 * C3641) * C4078 +
            (C36999 * C7631 + C93582 * C7632) * C4178 +
            (C36999 * C7738 + C93582 * C7968) * C4079) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
            C40058 * C4077 + C40059 * C4176) *
               C93737 +
           (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
            C37700 * C4077 + C37699 * C4176) *
               C62191) *
              C93635 * C801 +
          ((C37701 * C4176 + C37702 * C4077 + C37703 * C4177 + C37704 * C4078 +
            C37706 * C4178 + C37705 * C4079) *
               C62191 +
           (C40057 * C4176 + C40056 * C4077 + C40055 * C4177 + C40054 * C4078 +
            (C36999 * C39804 + C93582 * C39805) * C4178 +
            (C36999 * C39892 + C93582 * C40040) * C4079) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
              C1382 -
          ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
           (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
              C1383 +
          ((C69013 + C69012 + C69011 + C69010 + C69009 + C69008) * C62191 +
           (C42296 * C4176 + C42295 * C4077 + C42294 * C4177 + C42293 * C4078 +
            (C36999 * C44722 + C93582 * C44723) * C4178 +
            (C36999 * C44827 + C93582 * C45069) * C4079) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C800 -
          ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
           (C2311 * C31827 + C2312 * C31826 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
               C62191) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C31825 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C31826 +
            (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C31827) *
               C62191 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C31825 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C31826 +
            (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C93621 * C97 -
          ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
           (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
              C93635 * C93621 * C98 +
          ((C449 * C31825 + C450 * C31826 + C451 * C31827) * C62191 +
           (C3025 * C31825 + C3024 * C31826 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C64039 + C64040 + C64041) * C93737) *
              C1382 -
          ((C64042 + C64043 + C64044) * C93737 +
           (C64041 + C64040 + C64039) * C62191) *
              C1383 +
          ((C64044 + C64043 + C64042) * C62191 +
           (C11575 * C31825 + C11574 * C31826 +
            (C418 * C13010 + C13488 + C13488 + C93662 * C13482) * C31827) *
               C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C93621 * C97 -
          ((C8084 + C8085 + C8086) * C93582 * C93737 +
           (C4491 + C4490 + C4489) * C93582 * C62191) *
              C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C93582 * C62191 +
           (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 + C4450 * C3411 +
            C8076 + C8076 + C4078 * C3711 + C4451 * C7631 + C8077 + C8077 +
            C4079 * C8067) *
               C93582 * C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C800 -
          ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
            C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
            C4077 * C3709) *
               C93582 * C93737 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C93582 * C62191) *
              C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C93582 * C62191 +
           (C4449 * C5818 + C68302 + C68302 + C4077 * C6174 + C4450 * C8615 +
            C68303 + C68303 + C4078 * C9089 + C4451 * C39804 + C68304 + C68304 +
            C4079 * C40125) *
               C93582 * C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C69115 + C69116 + C69117) * C93582 * C93737) *
              C1382 -
          ((C69118 + C69119 + C69120) * C93582 * C93737 +
           (C69117 + C69116 + C69115) * C93582 * C62191) *
              C1383 +
          ((C69120 + C69119 + C69118) * C93582 * C62191 +
           (C4449 * C11103 + C69100 + C69100 + C4077 * C11546 + C4450 * C14027 +
            C69101 + C69101 + C4078 * C14479 + C4451 * C44722 + C69102 +
            C69102 + C4079 * C45176) *
               C93582 * C93737) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C800 -
          (((C62345 * C3493 + C93737 * C3785 + C62344 * C887 + C62191 * C1143) *
                C93662 +
            (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
                C188) *
               C31827 +
           ((C62345 * C3492 + C93737 * C3784 + C62344 * C888 + C62191 * C1144) *
                C93662 +
            (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
                C188) *
               C31826 +
           ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 + C62191 * C1145) *
                C93662 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C188) *
               C31825) *
              C93635 * C801 +
          (((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C188 +
            (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
                C93662) *
               C31825 +
           ((C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
                C188 +
            (C62344 * C891 + C62191 * C1147 + C62345 * C5921 + C93737 * C6265) *
                C93662) *
               C31826 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C188 +
            (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
                C93662) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C93621 * C97 -
          (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
           ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
           ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
              C93635 * C93621 * C98 +
          (C62628 * C31825 +
           ((C62382 + C62381) * C188 + (C62625 + C62624) * C93662) * C31826 +
           ((C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
                C188 +
            (C62344 * C193 + C62191 * C505 + C62345 * C2770 + C93737 * C3092) *
                C93662) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C1382 -
          (((C62345 * C1473 + C93737 * C1729 + C62344 * C1468 +
             C62191 * C1724) *
                C93662 +
            (C62345 * C1391 + C93737 * C1539 + C62344 * C1386 +
             C62191 * C1534) *
                C188) *
               C31827 +
           ((C62345 * C1472 + C93737 * C1728 + C62344 * C1469 +
             C62191 * C1725) *
                C93662 +
            (C62345 * C1390 + C93737 * C1538 + C62344 * C1387 +
             C62191 * C1535) *
                C188) *
               C31826 +
           ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C93662 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C188) *
               C31825) *
              C1383 +
          (((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
             C93737 * C11345) *
                C188 +
            (C62344 * C1471 + C62191 * C1727 + C62345 * C11224 +
             C93737 * C11655) *
                C93662) *
               C31825 +
           ((C62344 * C1390 + C62191 * C1538 + C62345 * C11102 +
             C93737 * C11344) *
                C188 +
            (C62344 * C1472 + C62191 * C1728 + C62345 * C11223 +
             C93737 * C11654) *
                C93662) *
               C31826 +
           ((C62344 * C1391 + C62191 * C1539 + C62345 * C13010 +
             C93737 * C13241) *
                C188 +
            (C62344 * C1473 + C62191 * C1729 + C62345 * C13133 +
             C93737 * C13586) *
                C93662) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
               C4177 +
           (C62344 * C889 + C62191 * C1145 + C62345 * C3491 + C93737 * C3783) *
               C4078 +
           (C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C4178 +
           (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
               C4079) *
              C93582 * C93635 * C93621 * C97 -
          ((C62345 * C5921 + C93737 * C6265 + C62344 * C891 + C62191 * C1147) *
               C4079 +
           (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
               C4178 +
           (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
           (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
              C93582 * C93635 * C93621 * C98 +
          (C62383 * C4176 + C62626 * C4077 + (C64684 + C64683) * C4177 +
           (C64992 + C64991) * C4078 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C4178 +
           (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
               C4079) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C93635 * C800 -
          ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
           (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
           (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
              C93582 * C93635 * C801 +
          (C68149 * C4176 + C68397 * C4077 + (C68148 + C68147) * C4177 +
           (C68396 + C68395) * C4078 +
           (C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
            C93737 * C39960) *
               C4178 +
           (C62344 * C5040 + C62191 * C5449 + C62345 * C39892 +
            C93737 * C40196) *
               C4079) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C1382 -
          ((C62345 * C5924 + C93737 * C6268 + C62344 * C5922 + C62191 * C6266) *
               C4079 +
           (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 + C62191 * C6008) *
               C4178 +
           (C62345 * C5923 + C93737 * C6267 + C62344 * C3491 + C62191 * C3783) *
               C4078 +
           (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 + C62191 * C3565) *
               C4177 +
           (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 + C62191 * C1726) *
               C4077 +
           (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 + C62191 * C1536) *
               C4176) *
              C93582 * C1383 +
          ((C62344 * C1389 + C62191 * C1537 + C62345 * C11103 +
            C93737 * C11345) *
               C4176 +
           (C62344 * C1471 + C62191 * C1727 + C62345 * C11224 +
            C93737 * C11655) *
               C4077 +
           (C62344 * C5819 + C62191 * C6009 + C62345 * C14027 +
            C93737 * C14265) *
               C4177 +
           (C62344 * C5923 + C62191 * C6267 + C62345 * C14143 +
            C93737 * C14595) *
               C4078 +
           (C62344 * C5821 + C62191 * C6011 + C62345 * C44722 +
            C93737 * C44951) *
               C4178 +
           (C62344 * C5924 + C62191 * C6268 + C62345 * C44827 +
            C93737 * C45297) *
               C4079) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36745 + C36746 + C36747) * C93737 +
           (C36436 + C36437 + C36438) * C62345 +
           (C33202 + C33201 + C33200) * C62191 +
           (C32944 + C32943 + C32942) * C62344) *
              C93662 * C93635 * C801 +
          ((C32953 + C32952 + C32951) * C62344 +
           (C33205 + C33204 + C33203) * C62191 +
           (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
            C31835 * C7631 + C31827 * C7632) *
               C62345 +
           (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 + C31826 * C6345 +
            C31835 * C7856 + C31827 * C8295) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 + C31826 * C1782 +
            C31831 * C1535 + C31825 * C1783) *
               C93737 +
           (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
            C31831 * C1387 + C31825 * C1395) *
               C62345 +
           (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
            C31831 * C277 + C31825 * C580) *
               C62191 +
           (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
            C31831 * C109 + C31825 * C115) *
               C62344) *
              C93662 * C93635 * C93621 * C98 +
          ((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
            C31835 * C112 + C31827 * C118) *
               C62344 +
           (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
            C31835 * C280 + C31827 * C583) *
               C62191 +
           (C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
            C31835 * C2697 + C31827 * C2698) *
               C62345 +
           (C31831 * C1534 + C31825 * C1782 + C31833 * C1533 + C31826 * C1781 +
            C31835 * C2856 + C31827 * C3174) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C63953 + C63954 + C63955) * C62345 +
           (C64205 + C64206 + C64207) * C93737) *
              C93662 * C1382 -
          ((C64208 + C64209 + C64210) * C93737 +
           (C63962 + C63963 + C63964) * C62345 +
           (C64207 + C64206 + C64205) * C62191 +
           (C63955 + C63954 + C63953) * C62344) *
              C93662 * C1383 +
          ((C63964 + C63963 + C63962) * C62344 +
           (C64210 + C64209 + C64208) * C62191 +
           (C31831 * C11103 + C31825 * C11107 + C31833 * C11102 +
            C31826 * C11106 + C31835 * C13010 + C31827 * C13011) *
               C62345 +
           (C31831 * C11345 + C31825 * C11733 + C31833 * C11344 +
            C31826 * C11732 + C31835 * C13241 + C31827 * C13694) *
               C93737) *
              C93662 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C37699 * C62344 + C37883 * C62191 + C40059 * C62345 +
            C40279 * C93737) *
               C4078 +
           (C37701 * C62344 + C37884 * C62191 + C40057 * C62345 +
            C40278 * C93737) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C60057 * C93737 + C59752 * C62345 + C39000 * C62191 +
            C38784 * C62344) *
               C4079 +
           (C43475 * C93737 + C43167 * C62345 + C38999 * C62191 +
            C38782 * C62344) *
               C4078 +
           (C44421 * C93737 + C44103 * C62345 +
            (C36999 * C277 + C93582 * C580) * C62191 +
            (C36999 * C109 + C93582 * C115) * C62344) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C62344 +
            (C36999 * C278 + C93582 * C581) * C62191 +
            (C36999 * C1386 + C93582 * C1394) * C62345 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C4077 +
           ((C36999 * C805 + C93582 * C813) * C62344 +
            (C36999 * C953 + C93582 * C1201) * C62191 +
            (C36999 * C3411 + C93582 * C3415) * C62345 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C4078 +
           ((C36999 * C810 + C93582 * C818) * C62344 +
            (C36999 * C958 + C93582 * C1206) * C62191 +
            (C36999 * C7631 + C93582 * C7632) * C62345 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C93635 * C800 -
          ((C68480 + C68481 + C68482 + C68483) * C4079 +
           (C68479 + C68478 + C68477 + C68476) * C4078 +
           (C68475 + C68474 + C68473 + C68472) * C4077) *
              C93635 * C801 +
          (C68486 * C4077 + (C68483 + C68482 + C68481 + C68480) * C4078 +
           (C37706 * C62344 + C37886 * C62191 +
            (C36999 * C39804 + C93582 * C39805) * C62345 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C1382 -
          ((C41716 * C93737 + C41454 * C62345 + C40278 * C62191 +
            C40057 * C62344) *
               C4079 +
           (C41715 * C93737 + C41451 * C62345 + C40279 * C62191 +
            C40059 * C62344) *
               C4078 +
           (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
            C42289 * C62344) *
               C4077) *
              C1383 +
          ((C42291 * C62344 + C42578 * C62191 + C42296 * C62345 +
            C42580 * C93737) *
               C4077 +
           (C41451 * C62344 + C41715 * C62191 + C42294 * C62345 +
            C42579 * C93737) *
               C4078 +
           (C41454 * C62344 + C41716 * C62191 +
            (C36999 * C44722 + C93582 * C44723) * C62345 +
            (C36999 * C44951 + C93582 * C45405) * C93737) *
               C4079) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C800 -
          ((C23217 * C93737 + C22578 * C62345 + C2539 * C62191 +
            C2074 * C62344) *
               C31827 +
           (C12793 * C93737 + C12150 * C62345 + C2540 * C62191 +
            C2076 * C62344) *
               C31826 +
           (C14808 * C93737 + C14160 * C62345 +
            (C188 * C955 + C93662 * C1261) * C62191 +
            (C188 * C807 + C93662 * C889) * C62344) *
               C31825) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C62344 +
            (C188 * C956 + C93662 * C1262) * C62191 +
            (C188 * C5818 + C93662 * C5922) * C62345 +
            (C188 * C6008 + C93662 * C6426) * C93737) *
               C31825 +
           ((C188 * C809 + C93662 * C891) * C62344 +
            (C188 * C957 + C93662 * C1263) * C62191 +
            (C188 * C5817 + C93662 * C5921) * C62345 +
            (C188 * C6007 + C93662 * C6425) * C93737) *
               C31826 +
           ((C188 * C810 + C93662 * C892) * C62344 +
            (C188 * C958 + C93662 * C1264) * C62191 +
            (C188 * C7631 + C93662 * C7738) * C62345 +
            (C188 * C7856 + C93662 * C8394) * C93737) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C93621 * C97 -
          ((C62785 + C62786 + C62787 + C62788) * C31827 +
           (C62784 + C62783 + C62782 + C62781) * C31826 +
           (C62780 + C62779 + C62778 + C62777) * C31825) *
              C93635 * C93621 * C98 +
          (C62791 * C31825 + (C62788 + C62787 + C62786 + C62785) * C31826 +
           (C225 * C62344 + C657 * C62191 +
            (C188 * C2697 + C93662 * C2770) * C62345 +
            (C188 * C2856 + C93662 * C3241) * C93737) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C1382 -
          ((C10223 * C93737 + C9696 * C62345 + C3253 * C62191 +
            C2788 * C62344) *
               C31827 +
           (C10222 * C93737 + C9693 * C62345 + C3254 * C62191 +
            C2790 * C62344) *
               C31826 +
           (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
            C11252 * C62344) *
               C31825) *
              C1383 +
          ((C11254 * C62344 + C11843 * C62191 + C11259 * C62345 +
            C11845 * C93737) *
               C31825 +
           (C9693 * C62344 + C10222 * C62191 + C11257 * C62345 +
            C11844 * C93737) *
               C31826 +
           (C9696 * C62344 + C10223 * C62191 +
            (C188 * C13010 + C93662 * C13133) * C62345 +
            (C188 * C13241 + C93662 * C13805) * C93737) *
               C31827) *
              C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C93621 * C97 -
          ((C8402 + C8403 + C8404) * C93737 + (C7756 + C7757 + C7758) * C62345 +
           (C4749 + C4748 + C4747) * C62191 +
           (C4206 + C4205 + C4204) * C62344) *
              C93582 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C62344 + (C4752 + C4751 + C4750) * C62191 +
           (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
            C4178 * C7631 + C4079 * C7738) *
               C62345 +
           (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 + C4078 * C3925 +
            C4178 * C7856 + C4079 * C8394) *
               C93737) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C800 -
          ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
            C4176 * C3565 + C4077 * C3923) *
               C93737 +
           (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
            C4176 * C3409 + C4077 * C3491) *
               C62345 +
           (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
            C4176 * C955 + C4077 * C1261) *
               C62191 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C62344) *
              C93582 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C62344 +
           (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
            C4178 * C5122 + C4079 * C5639) *
               C62191 +
           (C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
            C4178 * C39804 + C4079 * C39892) *
               C62345 +
           (C4176 * C6008 + C4077 * C6426 + C4177 * C8843 + C4078 * C9413 +
            C4178 * C39960 + C4079 * C40348) *
               C93737) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C68842 + C68843 + C68844) * C62345 +
           (C69355 + C69356 + C69357) * C93737) *
              C93582 * C1382 -
          ((C69358 + C69359 + C69360) * C93737 +
           (C68851 + C68852 + C68853) * C62345 +
           (C69357 + C69356 + C69355) * C62191 +
           (C68844 + C68843 + C68842) * C62344) *
              C93582 * C1383 +
          ((C68853 + C68852 + C68851) * C62344 +
           (C69360 + C69359 + C69358) * C62191 +
           (C4176 * C11103 + C4077 * C11224 + C4177 * C14027 + C4078 * C14143 +
            C4178 * C44722 + C4079 * C44827) *
               C62345 +
           (C4176 * C11345 + C4077 * C11830 + C4177 * C14265 + C4078 * C14801 +
            C4178 * C44951 + C4079 * C45510) *
               C93737) *
              C93582 * C1384) *
         C93621 * C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C800 -
                    ((C62866 * C3411 + C63576 + C63576 + C93737 * C3995 +
                      C62865 * C805 + C63577 + C63577 + C62191 * C1317) *
                         C93662 * C31827 +
                     (C62866 * C3410 + C63578 + C63578 + C93737 * C3994 +
                      C62865 * C806 + C63579 + C63579 + C62191 * C1318) *
                         C93662 * C31826 +
                     (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                      C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                         C93662 * C31825) *
                        C93635 * C801 +
                    ((C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C93662 * C31825 +
                     (C62865 * C809 + C63584 + C63584 + C62191 * C1321 +
                      C62866 * C5817 + C63585 + C63585 + C93737 * C6505) *
                         C93662 * C31826 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C93662 * C31827) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C93621 * C97 -
                    ((C62906 + C62907) * C93662 * C31827 +
                     (C62905 + C62904) * C93662 * C31826 +
                     (C62903 + C62902) * C93662 * C31825) *
                        C93635 * C93621 * C98 +
                    (C62909 * C31825 + (C62907 + C62906) * C93662 * C31826 +
                     (C62865 * C112 + C62888 + C62888 + C62191 * C718 +
                      C62866 * C2697 + C62889 + C62889 + C93737 * C3323) *
                         C93662 * C31827) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C1382 -
                    ((C62866 * C1391 + C64359 + C64359 + C93737 * C1903 +
                      C62865 * C1386 + C64360 + C64360 + C62191 * C1898) *
                         C93662 * C31827 +
                     (C62866 * C1390 + C64361 + C64361 + C93737 * C1902 +
                      C62865 * C1387 + C64362 + C64362 + C62191 * C1899) *
                         C93662 * C31826 +
                     (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                      C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                         C93662 * C31825) *
                        C1383 +
                    ((C62865 * C1389 + C64365 + C64365 + C62191 * C1901 +
                      C62866 * C11103 + C64366 + C64366 + C93737 * C11920) *
                         C93662 * C31825 +
                     (C62865 * C1390 + C64367 + C64367 + C62191 * C1902 +
                      C62866 * C11102 + C64368 + C64368 + C93737 * C11919) *
                         C93662 * C31826 +
                     (C62865 * C1391 + C64369 + C64369 + C62191 * C1903 +
                      C62866 * C13010 + C64370 + C64370 + C93737 * C13910) *
                         C93662 * C31827) *
                        C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C62865 * C807 + C63581 + C63581 + C62191 * C1319 +
                      C62866 * C3409 + C63580 + C63580 + C93737 * C3993) *
                         C4078 +
                     (C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C4079) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C62866 * C5817 + C63585 + C63585 + C93737 * C6505 +
                      C62865 * C809 + C63584 + C63584 + C62191 * C1321) *
                         C4079 +
                     (C65317 + C65318) * C4078 + (C62903 + C62902) * C4077) *
                        C93582 * C93635 * C93621 * C98 +
                    (C62908 * C4077 + (C65316 + C65315) * C4078 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C4079) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C68663 + C68664) * C4078 + C68669 * C4079) *
                        C93582 * C93635 * C800 -
                    ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                     (C68664 + C68663) * C4077) *
                        C93582 * C93635 * C801 +
                    (C68669 * C4077 + (C68668 + C68667) * C4078 +
                     (C62865 * C4918 + C68649 + C68649 + C62191 * C5717 +
                      C62866 * C39804 + C68650 + C68650 + C93737 * C40415) *
                         C4079) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C68663 + C68664) * C4078 + C68669 * C4079) *
                        C93582 * C1382 -
                    ((C62866 * C5821 + C69435 + C69435 + C93737 * C6508 +
                      C62865 * C5818 + C69436 + C69436 + C62191 * C6506) *
                         C4079 +
                     (C62866 * C5819 + C67213 + C67213 + C93737 * C6507 +
                      C62865 * C3409 + C67212 + C67212 + C62191 * C3993) *
                         C4078 +
                     (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                      C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                         C4077) *
                        C93582 * C1383 +
                    ((C62865 * C1389 + C64365 + C64365 + C62191 * C1901 +
                      C62866 * C11103 + C64366 + C64366 + C93737 * C11920) *
                         C4077 +
                     (C62865 * C5819 + C69437 + C69437 + C62191 * C6507 +
                      C62866 * C14027 + C69438 + C69438 + C93737 * C14907) *
                         C4078 +
                     (C62865 * C5821 + C69439 + C69439 + C62191 * C6508 +
                      C62866 * C44722 + C69440 + C69440 + C93737 * C45621) *
                         C4079) *
                        C93582 * C1384) *
                   C93621 * C93609) /
                      (p * q * std::sqrt(p + q));
    d2eexx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
             C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
             C31827 * C122) *
                C62191 +
            (C63689 + C63690 + C63691) * C93737) *
               C93662 * C2695 -
           ((C63692 + C63693 + C63694) * C93737 +
            (C63691 + C63690 + C63689) * C62191) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65432 + C65433 + C65434) * C62191 +
            (C31830 * C1390 + C65423 + C65423 + C31825 * C1406 +
             C31832 * C1391 + C65424 + C65424 + C31826 * C1407 +
             C31834 * C1392 + C65425 + C65425 + C31827 * C1408) *
                C93737) *
               C93662 * C2696 -
           ((C65434 + C65433 + C65432) * C93737 +
            (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
             C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
             C31825 * C121) *
                C62191) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
             C41997 * C93737) *
                C4077 +
            (C67958 + C67959) * C4078 + C67964 * C4079) *
               C2695 -
           ((C41182 * C93737 + C39822 * C62191) * C4079 +
            (C41181 * C93737 + C39823 * C62191) * C4078 +
            (C41998 * C93737 + C41997 * C62191) * C4077) *
               C2696) *
              C93621 * C1981 +
          (((C43783 * C62191 + C43784 * C93737) * C4077 +
            (C42861 * C62191 + C42862 * C93737) * C4078 +
            (C59452 * C62191 +
             (C36998 * C5822 + C42856 + C42856 + C93582 * C5834) * C93737) *
                C4079) *
               C2696 -
           ((C69542 + C69541) * C4079 + (C69540 + C69539) * C4078 +
            (C43783 * C93737 +
             (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C31831 +
             (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
             C219 * C31826 + C220 * C31835 + C221 * C31827) *
                C62191 +
            (C63769 + C63770 + C63771 + C63772 + C63773 + C63774) * C93737) *
               C2695 -
           ((C63775 + C63776 + C63777 + C63778 + C63779 + C63780) * C93737 +
            (C63774 + C63773 + C63772 + C63771 + C63770 + C63769) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C65533 + C65534 + C65535 + C65536 + C65537 + C65538) * C62191 +
            (C9693 * C31831 + C9694 * C31825 + C9696 * C31833 + C9695 * C31826 +
             (C188 * C1392 + C93662 * C1474) * C31835 +
             (C188 * C1400 + C93662 * C1482) * C31827) *
                C93737) *
               C2696 -
           ((C65538 + C65537 + C65536 + C65535 + C65534 + C65533) * C93737 +
            (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
             C219 * C31825 + C218 * C31831) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
              C4178 * C808 + C4079 * C890) *
                 C36999 +
             (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
              C4178 * C816 + C4079 * C898) *
                 C93582) *
                C62191 +
            ((C68842 + C68843 + C68844) * C36999 +
             (C68845 + C68846 + C68847) * C93582) *
                C93737) *
               C2695 -
           (((C68848 + C68849 + C68850) * C93582 +
             (C68851 + C68852 + C68853) * C36999) *
                C93737 +
            ((C68847 + C68846 + C68845) * C93582 +
             (C68844 + C68843 + C68842) * C36999) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          ((((C7758 + C7757 + C7756) * C36999 +
             (C7755 + C7754 + C7753) * C93582) *
                C62191 +
            ((C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
              C4178 * C5822 + C4079 * C5926) *
                 C36999 +
             (C4176 * C1398 + C4077 * C1480 + C4177 * C5826 + C4078 * C5931 +
              C4178 * C5828 + C4079 * C5932) *
                 C93582) *
                C93737) *
               C2696 -
           (((C7753 + C7754 + C7755) * C93582 +
             (C7756 + C7757 + C7758) * C36999) *
                C93737 +
            ((C4209 + C4208 + C4207) * C93582 +
             (C4206 + C4205 + C4204) * C36999) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eexz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C31831 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C31825 +
            (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
            C62383 * C31835 + C62384 * C31827) *
               C93662 * C2695 -
           ((C65653 + C65654) * C31827 + (C65655 + C65656) * C31835 +
            (C65657 + C65658) * C31826 + (C65659 + C65660) * C31833 +
            (C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
             C62191 * C1544) *
                C31825 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C31831) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65660 + C65659) * C31831 + (C65658 + C65657) * C31825 +
            (C65656 + C65655) * C31833 + (C65654 + C65653) * C31826 +
            (C62344 * C1385 + C62191 * C1533 + C62345 * C1392 +
             C93737 * C1540) *
                C31835 +
            (C62344 * C1393 + C62191 * C1541 + C62345 * C1400 +
             C93737 * C1548) *
                C31827) *
               C93662 * C2696 -
           ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
            (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
            (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C36999 +
             (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                 C93582) *
                C4077 +
            ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
            C68153 * C4079) *
               C2695 -
           (((C62345 * C5827 + C93737 * C6017 + C62344 * C5824 +
              C62191 * C6014) *
                 C93582 +
             (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
              C62191 * C6008) *
                 C36999) *
                C4079 +
            ((C62345 * C5825 + C93737 * C6015 + C62344 * C3413 +
              C62191 * C3569) *
                 C93582 +
             (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
              C62191 * C3565) *
                 C36999) *
                C4078 +
            ((C62345 * C1397 + C93737 * C1545 + C62344 * C1396 +
              C62191 * C1544) *
                 C93582 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C36999) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C36999 + (C65658 + C65657) * C93582) * C4077 +
            ((C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
              C93737 * C6010) *
                 C36999 +
             (C62344 * C3414 + C62191 * C3570 + C62345 * C5826 +
              C93737 * C6016) *
                 C93582) *
                C4078 +
            ((C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
              C93737 * C6012) *
                 C36999 +
             (C62344 * C5823 + C62191 * C6013 + C62345 * C5828 +
              C93737 * C6018) *
                 C93582) *
                C4079) *
               C2696 -
           (((C69750 + C69749) * C93582 + (C69748 + C69747) * C36999) * C4079 +
            ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
            ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
              C31835 * C110 + C31827 * C116) *
                 C188 +
             (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
              C31835 * C191 + C31827 * C364) *
                 C93662) *
                C62191 +
            ((C63953 + C63954 + C63955) * C188 +
             (C63956 + C63957 + C63958) * C93662) *
                C93737) *
               C2695 -
           (((C63959 + C63960 + C63961) * C93662 +
             (C63962 + C63963 + C63964) * C188) *
                C93737 +
            ((C63958 + C63957 + C63956) * C93662 +
             (C63955 + C63954 + C63953) * C188) *
                C62191) *
               C2696) *
              C93621 * C1981 +
          ((((C65771 + C65772 + C65773) * C188 +
             (C65774 + C65775 + C65776) * C93662) *
                C62191 +
            ((C31831 * C1390 + C31825 * C1398 + C31833 * C1391 +
              C31826 * C1399 + C31835 * C1392 + C31827 * C1400) *
                 C188 +
             (C31831 * C1472 + C31825 * C1604 + C31833 * C1473 +
              C31826 * C1605 + C31835 * C1474 + C31827 * C1606) *
                 C93662) *
                C93737) *
               C2696 -
           (((C65776 + C65775 + C65774) * C93662 +
             (C65773 + C65772 + C65771) * C188) *
                C93737 +
            ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
              C31831 * C190 + C31825 * C363) *
                 C93662 +
             (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
              C31831 * C109 + C31825 * C115) *
                 C188) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C4176 +
             (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
             C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
                C62191 +
            (C69002 + C69003 + C69004 + C69005 + C69006 + C69007) * C93737) *
               C2695 -
           ((C69008 + C69009 + C69010 + C69011 + C69012 + C69013) * C93737 +
            (C69007 + C69006 + C69005 + C69004 + C69003 + C69002) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C70757 + C70758 + C70759 + C70760 + C70761 + C70762) * C62191 +
            (C44105 * C4176 + C44106 * C4077 + C43169 * C4177 + C43170 * C4078 +
             (C36999 * C5822 + C93582 * C5828) * C4178 +
             (C36999 * C5926 + C93582 * C6098) * C4079) *
                C93737) *
               C2696 -
           ((C70762 + C70761 + C70760 + C70759 + C70758 + C70757) * C93737 +
            (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
             (C36999 * C190 + C93582 * C363) * C4077 +
             (C36999 * C109 + C93582 * C115) * C4176) *
                C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
             C448 * C31826 + C449 * C31827) *
                C62191 +
            (C64039 + C64040 + C64041) * C93737) *
               C2695 -
           ((C64042 + C64043 + C64044) * C93737 +
            (C64041 + C64040 + C64039) * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C65875 + C65876 + C65877) * C62191 +
            (C9966 * C31825 + C9967 * C31826 +
             (C418 * C1392 + C1673 + C1673 + C93662 * C1664) * C31827) *
                C93737) *
               C2696 -
           ((C65877 + C65876 + C65875) * C93737 +
            (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 +
             C4454 + C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
             C4079 * C1080) *
                C93582 * C62191 +
            (C69115 + C69116 + C69117) * C93582 * C93737) *
               C2695 -
           ((C69118 + C69119 + C69120) * C93582 * C93737 +
            (C69117 + C69116 + C69115) * C93582 * C62191) *
               C2696) *
              C93621 * C1981 +
          (((C8086 + C8085 + C8084) * C93582 * C62191 +
            (C4449 * C1390 + C6189 + C6189 + C4077 * C1662 + C4450 * C5820 +
             C6190 + C6190 + C4078 * C6177 + C4451 * C5822 + C6191 + C6191 +
             C4079 * C6178) *
                C93582 * C93737) *
               C2696 -
           ((C8084 + C8085 + C8086) * C93582 * C93737 +
            (C4491 + C4490 + C4489) * C93582 * C62191) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                 C188 +
             (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                 C93662) *
                C31825 +
            ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
            C62628 * C31827) *
               C2695 -
           (((C65984 + C65985) * C93662 + (C65655 + C65656) * C188) * C31827 +
            ((C65986 + C65987) * C93662 + (C65659 + C65660) * C188) * C31826 +
            ((C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
              C62191 * C1726) *
                 C93662 +
             (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
              C62191 * C1536) *
                 C188) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          ((((C65660 + C65659) * C188 + (C65987 + C65986) * C93662) * C31825 +
            ((C65656 + C65655) * C188 + (C65985 + C65984) * C93662) * C31826 +
            ((C62344 * C1385 + C62191 * C1533 + C62345 * C1392 +
              C93737 * C1540) *
                 C188 +
             (C62344 * C1467 + C62191 * C1723 + C62345 * C1474 +
              C93737 * C1730) *
                 C93662) *
                C31827) *
               C2696 -
           (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
            ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
            ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C4176 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C4077 +
            (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
            C68149 * C4178 + C68397 * C4079) *
               C93582 * C2695 -
           ((C62345 * C5924 + C93737 * C6268 + C62344 * C5922 +
             C62191 * C6266) *
                C4079 +
            (C62345 * C5821 + C93737 * C6011 + C62344 * C5818 +
             C62191 * C6008) *
                C4178 +
            (C62345 * C5923 + C93737 * C6267 + C62344 * C3491 +
             C62191 * C3783) *
                C4078 +
            (C62345 * C5819 + C93737 * C6009 + C62344 * C3409 +
             C62191 * C3565) *
                C4177 +
            (C62345 * C1471 + C93737 * C1727 + C62344 * C1470 +
             C62191 * C1726) *
                C4077 +
            (C62345 * C1389 + C93737 * C1537 + C62344 * C1388 +
             C62191 * C1536) *
                C4176) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C65660 + C65659) * C4176 + (C65987 + C65986) * C4077 +
            (C62344 * C3410 + C62191 * C3566 + C62345 * C5820 +
             C93737 * C6010) *
                C4177 +
            (C62344 * C3492 + C62191 * C3784 + C62345 * C5925 +
             C93737 * C6269) *
                C4078 +
            (C62344 * C5817 + C62191 * C6007 + C62345 * C5822 +
             C93737 * C6012) *
                C4178 +
            (C62344 * C5921 + C62191 * C6265 + C62345 * C5926 +
             C93737 * C6270) *
                C4079) *
               C93582 * C2696 -
           ((C70050 + C70049) * C4079 + (C69748 + C69747) * C4178 +
            (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
            (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C62344 +
            (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
             C31835 * C278 + C31827 * C581) *
                C62191 +
            (C63953 + C63954 + C63955) * C62345 +
            (C64205 + C64206 + C64207) * C93737) *
               C93662 * C2695 -
           ((C64208 + C64209 + C64210) * C93737 +
            (C63962 + C63963 + C63964) * C62345 +
            (C64207 + C64206 + C64205) * C62191 +
            (C63955 + C63954 + C63953) * C62344) *
               C93662 * C2696) *
              C93621 * C1981 +
          (((C65771 + C65772 + C65773) * C62344 +
            (C66092 + C66093 + C66094) * C62191 +
            (C31831 * C1390 + C31825 * C1398 + C31833 * C1391 + C31826 * C1399 +
             C31835 * C1392 + C31827 * C1400) *
                C62345 +
            (C31831 * C1538 + C31825 * C1786 + C31833 * C1539 + C31826 * C1787 +
             C31835 * C1540 + C31827 * C1788) *
                C93737) *
               C93662 * C2696 -
           ((C66094 + C66093 + C66092) * C93737 +
            (C65773 + C65772 + C65771) * C62345 +
            (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
             C31831 * C277 + C31825 * C580) *
                C62191 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C62344) *
               C93662 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36999 * C108 + C93582 * C114) * C62344 +
             (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
             C42577 * C93737) *
                C4077 +
            (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
               C2695 -
           ((C41716 * C93737 + C41454 * C62345 + C40278 * C62191 +
             C40057 * C62344) *
                C4079 +
            (C41715 * C93737 + C41451 * C62345 + C40279 * C62191 +
             C40059 * C62344) *
                C4078 +
            (C42578 * C93737 + C42291 * C62345 + C42577 * C62191 +
             C42289 * C62344) *
                C4077) *
               C2696) *
              C93621 * C1981 +
          (((C44103 * C62344 + C44421 * C62191 + C44105 * C62345 +
             C44422 * C93737) *
                C4077 +
            (C43167 * C62344 + C43475 * C62191 + C43169 * C62345 +
             C43476 * C93737) *
                C4078 +
            (C59752 * C62344 + C60057 * C62191 +
             (C36999 * C5822 + C93582 * C5828) * C62345 +
             (C36999 * C6012 + C93582 * C6350) * C93737) *
                C4079) *
               C2696 -
           ((C70156 + C70155 + C70154 + C70153) * C4079 +
            (C70152 + C70151 + C70150 + C70149) * C4078 +
            (C44421 * C93737 + C44103 * C62345 +
             (C36999 * C277 + C93582 * C580) * C62191 +
             (C36999 * C109 + C93582 * C115) * C62344) *
                C4077) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C188 * C108 + C93662 * C189) * C62344 +
             (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
             C11842 * C93737) *
                C31825 +
            (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
               C2695 -
           ((C66193 + C66194 + C66195 + C66196) * C31827 +
            (C66197 + C66198 + C66199 + C66200) * C31826 +
            (C11843 * C93737 + C11254 * C62345 + C11842 * C62191 +
             C11252 * C62344) *
                C31825) *
               C2696) *
              C93621 * C1981 +
          (((C66200 + C66199 + C66198 + C66197) * C31825 +
            (C66196 + C66195 + C66194 + C66193) * C31826 +
            (C2786 * C62344 + C3252 * C62191 +
             (C188 * C1392 + C93662 * C1474) * C62345 +
             (C188 * C1540 + C93662 * C1846) * C93737) *
                C31827) *
               C2696 -
           ((C62785 + C62786 + C62787 + C62788) * C31827 +
            (C62784 + C62783 + C62782 + C62781) * C31826 +
            (C62780 + C62779 + C62778 + C62777) * C31825) *
               C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C62344 +
            (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
             C4178 * C956 + C4079 * C1262) *
                C62191 +
            (C68842 + C68843 + C68844) * C62345 +
            (C69355 + C69356 + C69357) * C93737) *
               C93582 * C2695 -
           ((C69358 + C69359 + C69360) * C93737 +
            (C68851 + C68852 + C68853) * C62345 +
            (C69357 + C69356 + C69355) * C62191 +
            (C68844 + C68843 + C68842) * C62344) *
               C93582 * C2696) *
              C93621 * C1981 +
          (((C7758 + C7757 + C7756) * C62344 +
            (C8404 + C8403 + C8402) * C62191 +
            (C4176 * C1390 + C4077 * C1472 + C4177 * C5820 + C4078 * C5925 +
             C4178 * C5822 + C4079 * C5926) *
                C62345 +
            (C4176 * C1538 + C4077 * C1844 + C4177 * C6010 + C4078 * C6429 +
             C4178 * C6012 + C4079 * C6430) *
                C93737) *
               C93582 * C2696 -
           ((C8402 + C8403 + C8404) * C93737 +
            (C7756 + C7757 + C7758) * C62345 +
            (C4749 + C4748 + C4747) * C62191 +
            (C4206 + C4205 + C4204) * C62344) *
               C93582 * C2695) *
              C93621 * C1982)) /
            (p * q * std::sqrt(p + q));
    d2eezz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C93662 * C31825 +
                      (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                         C2695 -
                     ((C66317 + C66318) * C93662 * C31827 +
                      (C66319 + C66320) * C93662 * C31826 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C93662 * C31825) *
                         C2696) *
                        C93621 * C1981 +
                    (((C66320 + C66319) * C93662 * C31825 +
                      (C66318 + C66317) * C93662 * C31826 +
                      (C62865 * C1385 + C66307 + C66307 + C62191 * C1897 +
                       C62866 * C1392 + C66308 + C66308 + C93737 * C1904) *
                          C93662 * C31827) *
                         C2696 -
                     ((C62906 + C62907) * C93662 * C31827 +
                      (C62905 + C62904) * C93662 * C31826 +
                      (C62903 + C62902) * C93662 * C31825) *
                         C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                       C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                          C4077 +
                      (C68663 + C68664) * C4078 + C68669 * C4079) *
                         C93582 * C2695 -
                     ((C62866 * C5821 + C69435 + C69435 + C93737 * C6508 +
                       C62865 * C5818 + C69436 + C69436 + C62191 * C6506) *
                          C4079 +
                      (C62866 * C5819 + C67213 + C67213 + C93737 * C6507 +
                       C62865 * C3409 + C67212 + C67212 + C62191 * C3993) *
                          C4078 +
                      (C62866 * C1389 + C64363 + C64363 + C93737 * C1901 +
                       C62865 * C1388 + C64364 + C64364 + C62191 * C1900) *
                          C4077) *
                         C93582 * C2696) *
                        C93621 * C1981 +
                    (((C66320 + C66319) * C4077 +
                      (C62865 * C3410 + C67214 + C67214 + C62191 * C3994 +
                       C62866 * C5820 + C67215 + C67215 + C93737 * C6509) *
                          C4078 +
                      (C62865 * C5817 + C71253 + C71253 + C62191 * C6505 +
                       C62866 * C5822 + C71254 + C71254 + C93737 * C6510) *
                          C4079) *
                         C93582 * C2696 -
                     ((C70364 + C70363) * C4079 + (C65317 + C65318) * C4078 +
                      (C62903 + C62902) * C4077) *
                         C93582 * C2695) *
                        C93621 * C1982)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31834 * C1385 + C35147 + C35147 + C31827 * C1401 + C31832 * C1386 +
            C35146 + C35146 + C31826 * C1402 + C31830 * C1387 + C35145 +
            C35145 + C31825 * C1403) *
               C93737 +
           (C31834 * C111 + C31846 + C31846 + C31827 * C123 + C31832 * C110 +
            C31847 + C31847 + C31826 * C122 + C31830 * C109 + C31848 + C31848 +
            C31825 * C121) *
               C62191) *
              C93662 * C93635 * C93621 * C98 +
          ((C31830 * C110 + C31849 + C31849 + C31825 * C122 + C31832 * C111 +
            C31850 + C31850 + C31826 * C123 + C31834 * C112 + C31851 + C31851 +
            C31827 * C124) *
               C62191 +
           (C31830 * C1386 + C62194 + C62194 + C31825 * C1402 + C31832 * C1385 +
            C62195 + C62195 + C31826 * C1401 + C31834 * C2697 + C62196 +
            C62196 + C31827 * C2699) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31830 * C108 + C31837 + C31837 + C31825 * C120 + C31832 * C109 +
            C31838 + C31838 + C31826 * C121 + C31834 * C110 + C31839 + C31839 +
            C31827 * C122) *
               C62191 +
           (C31830 * C1388 + C33433 + C33433 + C31825 * C1404 + C31832 * C1387 +
            C33432 + C33432 + C31826 * C1403 + C31834 * C1386 + C33431 +
            C33431 + C31827 * C1402) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36118 + C36119 + C36120) * C93737 +
           (C32680 + C32679 + C32678) * C62191) *
              C93662 * C93635 * C801 +
          ((C32683 + C32682 + C32681) * C62191 +
           (C31830 * C5818 + C36109 + C36109 + C31825 * C5830 + C31832 * C5817 +
            C36110 + C36110 + C31826 * C5829 + C31834 * C7631 + C36111 +
            C36111 + C31827 * C7633) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C37504 * C62191 + C39823 * C93737) * C4078 +
           (C37505 * C62191 + C39822 * C93737) * C4079) *
              C93635 * C93621 * C97 -
          ((C59452 * C93737 + C38561 * C62191) * C4079 +
           (C42861 * C93737 + C38560 * C62191) * C4078 +
           (C43783 * C93737 +
            (C36998 * C109 + C37008 + C37008 + C93582 * C121) * C62191) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36998 * C110 + C37009 + C37009 + C93582 * C122) * C62191 +
            (C36998 * C1386 + C40499 + C40499 + C93582 * C1402) * C93737) *
               C4077 +
           ((C36998 * C805 + C37010 + C37010 + C93582 * C821) * C62191 +
            (C36998 * C3411 + C40501 + C40501 + C93582 * C3419) * C93737) *
               C4078 +
           ((C36998 * C810 + C37011 + C37011 + C93582 * C826) * C62191 +
            (C36998 * C7631 + C57259 + C57259 + C93582 * C7633) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36998 * C108 + C37001 + C37001 + C93582 * C120) * C62191 +
            C41997 * C93737) *
               C4077 +
           (C67958 + C67959) * C4078 + C67964 * C4079) *
              C93635 * C800 -
          ((C67962 + C67963) * C4079 + (C67961 + C67960) * C4078 +
           (C67959 + C67958) * C4077) *
              C93635 * C801 +
          (C67964 * C4077 + (C67963 + C67962) * C4078 +
           (C37507 * C62191 +
            (C36998 * C39804 + C39814 + C39814 + C93582 * C39806) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C2785 * C31827 + C2786 * C31835 + C2787 * C31826 + C2788 * C31833 +
            C2789 * C31825 + C2790 * C31831) *
               C93737 +
           (C223 * C31827 + C222 * C31835 + C221 * C31826 + C220 * C31833 +
            C219 * C31825 + C218 * C31831) *
               C62191) *
              C93635 * C93621 * C98 +
          ((C220 * C31831 + C221 * C31825 + C222 * C31833 + C223 * C31826 +
            C225 * C31835 + C224 * C31827) *
               C62191 +
           (C2788 * C31831 + C2787 * C31825 + C2786 * C31833 + C2785 * C31826 +
            (C188 * C2697 + C93662 * C2770) * C31835 +
            (C188 * C2698 + C93662 * C2771) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C31831 +
            (C188 * C114 + C93662 * C195) * C31825 + C218 * C31833 +
            C219 * C31826 + C220 * C31835 + C221 * C31827) *
               C62191 +
           (C11252 * C31831 + C11253 * C31825 + C2790 * C31833 +
            C2789 * C31826 + C2788 * C31835 + C2787 * C31827) *
               C93737) *
              C93635 * C800 -
          ((C22577 * C31827 + C22578 * C31835 + C12149 * C31826 +
            C12150 * C31833 + C14161 * C31825 + C14160 * C31831) *
               C93737 +
           (C2073 * C31827 + C2074 * C31835 + C2075 * C31826 + C2076 * C31833 +
            (C188 * C815 + C93662 * C897) * C31825 +
            (C188 * C807 + C93662 * C889) * C31831) *
               C62191) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C31831 +
            (C188 * C816 + C93662 * C898) * C31825 +
            (C188 * C809 + C93662 * C891) * C31833 +
            (C188 * C817 + C93662 * C899) * C31826 +
            (C188 * C810 + C93662 * C892) * C31835 +
            (C188 * C818 + C93662 * C900) * C31827) *
               C62191 +
           ((C188 * C5818 + C93662 * C5922) * C31831 +
            (C188 * C5824 + C93662 * C5928) * C31825 +
            (C188 * C5817 + C93662 * C5921) * C31833 +
            (C188 * C5823 + C93662 * C5927) * C31826 +
            (C188 * C7631 + C93662 * C7738) * C31835 +
            (C188 * C7632 + C93662 * C7739) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C7753 + C7754 + C7755) * C93582 +
            (C7756 + C7757 + C7758) * C36999) *
               C93737 +
           ((C4209 + C4208 + C4207) * C93582 +
            (C4206 + C4205 + C4204) * C36999) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C4215 + C4214 + C4213) * C36999 +
            (C4212 + C4211 + C4210) * C93582) *
               C62191 +
           ((C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
             C4178 * C7631 + C4079 * C7738) *
                C36999 +
            (C4176 * C1394 + C4077 * C1476 + C4177 * C3415 + C4078 * C3497 +
             C4178 * C7632 + C4079 * C7739) *
                C93582) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
             C4178 * C808 + C4079 * C890) *
                C36999 +
            (C4176 * C114 + C4077 * C195 + C4177 * C815 + C4078 * C897 +
             C4178 * C816 + C4079 * C898) *
                C93582) *
               C62191 +
           ((C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
             C4178 * C5818 + C4079 * C5922) *
                C36999 +
            (C4176 * C1396 + C4077 * C1478 + C4177 * C3413 + C4078 * C3495 +
             C4178 * C5824 + C4079 * C5928) *
                C93582) *
               C93737) *
              C93635 * C800 -
          (((C4178 * C8617 + C4079 * C8743 + C4177 * C5824 + C4078 * C5928 +
             C4176 * C3413 + C4077 * C3495) *
                C93582 +
            (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
             C4176 * C3409 + C4077 * C3491) *
                C36999) *
               C93737 +
           ((C4178 * C4921 + C4079 * C5043 + C4177 * C816 + C4078 * C898 +
             C4176 * C815 + C4077 * C897) *
                C93582 +
            (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
             C4176 * C807 + C4077 * C889) *
                C36999) *
               C62191) *
              C93635 * C801 +
          (((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
             C4178 * C4918 + C4079 * C5040) *
                C36999 +
            (C4176 * C816 + C4077 * C898 + C4177 * C4921 + C4078 * C5043 +
             C4178 * C4922 + C4079 * C5044) *
                C93582) *
               C62191 +
           ((C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
             C4178 * C39804 + C4079 * C39892) *
                C36999 +
            (C4176 * C5824 + C4077 * C5928 + C4177 * C8617 + C4078 * C8743 +
             C4178 * C39805 + C4079 * C39893) *
                C93582) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eexz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C93621 * C97 -
          ((C62379 + C62380) * C31827 + (C62381 + C62382) * C31835 +
           (C62378 + C62377) * C31826 + (C62376 + C62375) * C31833 +
           (C62374 + C62373) * C31825 + (C62372 + C62371) * C31831) *
              C93662 * C93635 * C93621 * C98 +
          (C62383 * C31831 + C62384 * C31825 + (C62382 + C62381) * C31833 +
           (C62380 + C62379) * C31826 +
           (C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
               C31835 +
           (C62344 * C118 + C62191 * C286 + C62345 * C2698 + C93737 * C2857) *
               C31827) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C31831 +
           (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
               C31825 +
           (C62371 + C62372) * C31833 + (C62373 + C62374) * C31826 +
           C62383 * C31835 + C62384 * C31827) *
              C93662 * C93635 * C800 -
          ((C62345 * C3415 + C93737 * C3571 + C62344 * C813 + C62191 * C961) *
               C31827 +
           (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
               C31835 +
           (C62345 * C3414 + C93737 * C3570 + C62344 * C814 + C62191 * C962) *
               C31826 +
           (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
               C31833 +
           (C62345 * C3413 + C93737 * C3569 + C62344 * C815 + C62191 * C963) *
               C31825 +
           (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
               C31831) *
              C93662 * C93635 * C801 +
          ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C31831 +
           (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
               C31825 +
           (C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
               C31833 +
           (C62344 * C817 + C62191 * C965 + C62345 * C5823 + C93737 * C6013) *
               C31826 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C31835 +
           (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
               C31827) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
                C36999 +
            (C62344 * C815 + C62191 * C963 + C62345 * C3413 + C93737 * C3569) *
                C93582) *
               C4078 +
           ((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C36999 +
            (C62344 * C816 + C62191 * C964 + C62345 * C5824 + C93737 * C6014) *
                C93582) *
               C4079) *
              C93635 * C93621 * C97 -
          (((C62345 * C5823 + C93737 * C6013 + C62344 * C817 + C62191 * C965) *
                C93582 +
            (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
                C36999) *
               C4079 +
           ((C64685 + C64686) * C93582 + (C64687 + C64688) * C36999) * C4078 +
           ((C62374 + C62373) * C93582 + (C62372 + C62371) * C36999) * C4077) *
              C93635 * C93621 * C98 +
          ((C62383 * C36999 + C62384 * C93582) * C4077 +
           ((C64684 + C64683) * C36999 + (C64682 + C64681) * C93582) * C4078 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C36999 +
            (C62344 * C818 + C62191 * C966 + C62345 * C7632 + C93737 * C7857) *
                C93582) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C36999 +
            (C62344 * C114 + C62191 * C282 + C62345 * C1396 + C93737 * C1544) *
                C93582) *
               C4077 +
           ((C68137 + C68138) * C36999 + (C68139 + C68140) * C93582) * C4078 +
           C68153 * C4079) *
              C93635 * C800 -
          (((C68145 + C68146) * C93582 + (C68147 + C68148) * C36999) * C4079 +
           ((C68144 + C68143) * C93582 + (C68142 + C68141) * C36999) * C4078 +
           ((C68140 + C68139) * C93582 + (C68138 + C68137) * C36999) * C4077) *
              C93635 * C801 +
          (C68153 * C4077 +
           ((C68148 + C68147) * C36999 + (C68146 + C68145) * C93582) * C4078 +
           ((C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
             C93737 * C39960) *
                C36999 +
            (C62344 * C4922 + C62191 * C5126 + C62345 * C39805 +
             C93737 * C39961) *
                C93582) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C93621 * C97 -
          (((C31835 * C1467 + C31827 * C1599 + C31833 * C1468 + C31826 * C1600 +
             C31831 * C1469 + C31825 * C1601) *
                C93662 +
            (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
             C31831 * C1387 + C31825 * C1395) *
                C188) *
               C93737 +
           ((C31835 * C192 + C31827 * C365 + C31833 * C191 + C31826 * C364 +
             C31831 * C190 + C31825 * C363) *
                C93662 +
            (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
             C31831 * C109 + C31825 * C115) *
                C188) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
             C31835 * C112 + C31827 * C118) *
                C188 +
            (C31831 * C191 + C31825 * C364 + C31833 * C192 + C31826 * C365 +
             C31835 * C193 + C31827 * C366) *
                C93662) *
               C62191 +
           ((C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
             C31835 * C2697 + C31827 * C2698) *
                C188 +
            (C31831 * C1468 + C31825 * C1600 + C31833 * C1467 + C31826 * C1599 +
             C31835 * C2770 + C31827 * C2942) *
                C93662) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
             C31835 * C110 + C31827 * C116) *
                C188 +
            (C31831 * C189 + C31825 * C362 + C31833 * C190 + C31826 * C363 +
             C31835 * C191 + C31827 * C364) *
                C93662) *
               C62191 +
           ((C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
             C31835 * C1386 + C31827 * C1394) *
                C188 +
            (C31831 * C1470 + C31825 * C1602 + C31833 * C1469 + C31826 * C1601 +
             C31835 * C1468 + C31827 * C1600) *
                C93662) *
               C93737) *
              C93635 * C800 -
          (((C36433 + C36434 + C36435) * C93662 +
            (C36436 + C36437 + C36438) * C188) *
               C93737 +
           ((C32947 + C32946 + C32945) * C93662 +
            (C32944 + C32943 + C32942) * C188) *
               C62191) *
              C93635 * C801 +
          (((C32953 + C32952 + C32951) * C188 +
            (C32950 + C32949 + C32948) * C93662) *
               C62191 +
           ((C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
             C31835 * C7631 + C31827 * C7632) *
                C188 +
            (C31831 * C5922 + C31825 * C6094 + C31833 * C5921 + C31826 * C6093 +
             C31835 * C7738 + C31827 * C7968) *
                C93662) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C93621 * C97 -
          ((C59753 * C4079 + C59752 * C4178 + C43168 * C4078 + C43167 * C4177 +
            C44104 * C4077 + C44103 * C4176) *
               C93737 +
           (C38785 * C4079 + C38784 * C4178 + C38783 * C4078 + C38782 * C4177 +
            (C36999 * C190 + C93582 * C363) * C4077 +
            (C36999 * C109 + C93582 * C115) * C4176) *
               C62191) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C4176 +
            (C36999 * C191 + C93582 * C364) * C4077 +
            (C36999 * C805 + C93582 * C813) * C4177 +
            (C36999 * C887 + C93582 * C1019) * C4078 +
            (C36999 * C810 + C93582 * C818) * C4178 +
            (C36999 * C892 + C93582 * C1024) * C4079) *
               C62191 +
           ((C36999 * C1386 + C93582 * C1394) * C4176 +
            (C36999 * C1468 + C93582 * C1600) * C4077 +
            (C36999 * C3411 + C93582 * C3415) * C4177 +
            (C36999 * C3493 + C93582 * C3641) * C4078 +
            (C36999 * C7631 + C93582 * C7632) * C4178 +
            (C36999 * C7738 + C93582 * C7968) * C4079) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C4176 +
            (C36999 * C189 + C93582 * C362) * C4077 + C37699 * C4177 +
            C37700 * C4078 + C37701 * C4178 + C37702 * C4079) *
               C62191 +
           (C42289 * C4176 + C42290 * C4077 + C40059 * C4177 + C40058 * C4078 +
            C40057 * C4178 + C40056 * C4079) *
               C93737) *
              C93635 * C800 -
          ((C40054 * C4079 + C40055 * C4178 + C40056 * C4078 + C40057 * C4177 +
            C40058 * C4077 + C40059 * C4176) *
               C93737 +
           (C37704 * C4079 + C37703 * C4178 + C37702 * C4078 + C37701 * C4177 +
            C37700 * C4077 + C37699 * C4176) *
               C62191) *
              C93635 * C801 +
          ((C37701 * C4176 + C37702 * C4077 + C37703 * C4177 + C37704 * C4078 +
            C37706 * C4178 + C37705 * C4079) *
               C62191 +
           (C40057 * C4176 + C40056 * C4077 + C40055 * C4177 + C40054 * C4078 +
            (C36999 * C39804 + C93582 * C39805) * C4178 +
            (C36999 * C39892 + C93582 * C40040) * C4079) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C93621 * C97 -
          ((C3024 * C31827 + C3025 * C31826 + C3026 * C31825) * C93737 +
           (C450 * C31827 + C449 * C31826 + C448 * C31825) * C62191) *
              C93635 * C93621 * C98 +
          ((C449 * C31825 + C450 * C31826 + C451 * C31827) * C62191 +
           (C3025 * C31825 + C3024 * C31826 +
            (C418 * C2697 + C3017 + C3017 + C93662 * C3009) * C31827) *
               C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C418 * C108 + C426 + C426 + C93662 * C419) * C31825 +
            C448 * C31826 + C449 * C31827) *
               C62191 +
           (C11572 * C31825 + C3026 * C31826 + C3025 * C31827) * C93737) *
              C93635 * C800 -
          ((C22901 * C31827 + C12477 * C31826 + C14494 * C31825) * C93737 +
           (C2311 * C31827 + C2312 * C31826 +
            (C418 * C807 + C1088 + C1088 + C93662 * C1079) * C31825) *
               C62191) *
              C93635 * C801 +
          (((C418 * C808 + C1089 + C1089 + C93662 * C1080) * C31825 +
            (C418 * C809 + C1090 + C1090 + C93662 * C1081) * C31826 +
            (C418 * C810 + C1091 + C1091 + C93662 * C1082) * C31827) *
               C62191 +
           ((C418 * C5818 + C10717 + C10717 + C93662 * C6174) * C31825 +
            (C418 * C5817 + C10718 + C10718 + C93662 * C6173) * C31826 +
            (C418 * C7631 + C21285 + C21285 + C93662 * C8067) * C31827) *
               C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C93621 * C97 -
          ((C8084 + C8085 + C8086) * C93582 * C93737 +
           (C4491 + C4490 + C4489) * C93582 * C62191) *
              C93635 * C93621 * C98 +
          ((C4494 + C4493 + C4492) * C93582 * C62191 +
           (C4449 * C1386 + C8075 + C8075 + C4077 * C1658 + C4450 * C3411 +
            C8076 + C8076 + C4078 * C3711 + C4451 * C7631 + C8077 + C8077 +
            C4079 * C8067) *
               C93582 * C93737) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4449 * C108 + C4453 + C4453 + C4077 * C419 + C4450 * C807 + C4454 +
            C4454 + C4078 * C1079 + C4451 * C808 + C4455 + C4455 +
            C4079 * C1080) *
               C93582 * C62191 +
           (C4449 * C1388 + C6185 + C6185 + C4077 * C1660 + C4450 * C3409 +
            C6184 + C6184 + C4078 * C3709 + C4451 * C5818 + C6183 + C6183 +
            C4079 * C6174) *
               C93582 * C93737) *
              C93635 * C800 -
          ((C4451 * C8615 + C9094 + C9094 + C4079 * C9089 + C4450 * C5818 +
            C9093 + C9093 + C4078 * C6174 + C4449 * C3409 + C9092 + C9092 +
            C4077 * C3709) *
               C93582 * C93737 +
           (C4451 * C4917 + C5365 + C5365 + C4079 * C5358 + C4450 * C808 +
            C5366 + C5366 + C4078 * C1080 + C4449 * C807 + C5367 + C5367 +
            C4077 * C1079) *
               C93582 * C62191) *
              C93635 * C801 +
          ((C4449 * C808 + C5368 + C5368 + C4077 * C1080 + C4450 * C4917 +
            C5369 + C5369 + C4078 * C5358 + C4451 * C4918 + C5370 + C5370 +
            C4079 * C5359) *
               C93582 * C62191 +
           (C4449 * C5818 + C68302 + C68302 + C4077 * C6174 + C4450 * C8615 +
            C68303 + C68303 + C4078 * C9089 + C4451 * C39804 + C68304 + C68304 +
            C4079 * C40125) *
               C93582 * C93737) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eeyz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C93621 * C97 -
          (((C62624 + C62625) * C93662 + (C62381 + C62382) * C188) * C31827 +
           ((C62623 + C62622) * C93662 + (C62376 + C62375) * C188) * C31826 +
           ((C62621 + C62620) * C93662 + (C62372 + C62371) * C188) * C31825) *
              C93635 * C93621 * C98 +
          (C62628 * C31825 +
           ((C62382 + C62381) * C188 + (C62625 + C62624) * C93662) * C31826 +
           ((C62344 * C112 + C62191 * C280 + C62345 * C2697 + C93737 * C2856) *
                C188 +
            (C62344 * C193 + C62191 * C505 + C62345 * C2770 + C93737 * C3092) *
                C93662) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
                C188 +
            (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
                C93662) *
               C31825 +
           ((C62371 + C62372) * C188 + (C62620 + C62621) * C93662) * C31826 +
           C62628 * C31827) *
              C93635 * C800 -
          (((C62345 * C3493 + C93737 * C3785 + C62344 * C887 + C62191 * C1143) *
                C93662 +
            (C62345 * C3411 + C93737 * C3567 + C62344 * C805 + C62191 * C953) *
                C188) *
               C31827 +
           ((C62345 * C3492 + C93737 * C3784 + C62344 * C888 + C62191 * C1144) *
                C93662 +
            (C62345 * C3410 + C93737 * C3566 + C62344 * C806 + C62191 * C954) *
                C188) *
               C31826 +
           ((C62345 * C3491 + C93737 * C3783 + C62344 * C889 + C62191 * C1145) *
                C93662 +
            (C62345 * C3409 + C93737 * C3565 + C62344 * C807 + C62191 * C955) *
                C188) *
               C31825) *
              C93635 * C801 +
          (((C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
                C188 +
            (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
                C93662) *
               C31825 +
           ((C62344 * C809 + C62191 * C957 + C62345 * C5817 + C93737 * C6007) *
                C188 +
            (C62344 * C891 + C62191 * C1147 + C62345 * C5921 + C93737 * C6265) *
                C93662) *
               C31826 +
           ((C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
                C188 +
            (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
                C93662) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C62344 * C807 + C62191 * C955 + C62345 * C3409 + C93737 * C3565) *
               C4177 +
           (C62344 * C889 + C62191 * C1145 + C62345 * C3491 + C93737 * C3783) *
               C4078 +
           (C62344 * C808 + C62191 * C956 + C62345 * C5818 + C93737 * C6008) *
               C4178 +
           (C62344 * C890 + C62191 * C1146 + C62345 * C5922 + C93737 * C6266) *
               C4079) *
              C93582 * C93635 * C93621 * C97 -
          ((C62345 * C5921 + C93737 * C6265 + C62344 * C891 + C62191 * C1147) *
               C4079 +
           (C62345 * C5817 + C93737 * C6007 + C62344 * C809 + C62191 * C957) *
               C4178 +
           (C64993 + C64994) * C4078 + (C64687 + C64688) * C4177 +
           (C62621 + C62620) * C4077 + (C62372 + C62371) * C4176) *
              C93582 * C93635 * C93621 * C98 +
          (C62383 * C4176 + C62626 * C4077 + (C64684 + C64683) * C4177 +
           (C64992 + C64991) * C4078 +
           (C62344 * C810 + C62191 * C958 + C62345 * C7631 + C93737 * C7856) *
               C4178 +
           (C62344 * C892 + C62191 * C1148 + C62345 * C7738 + C93737 * C8184) *
               C4079) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62344 * C108 + C62191 * C276 + C62345 * C1388 + C93737 * C1536) *
               C4176 +
           (C62344 * C189 + C62191 * C501 + C62345 * C1470 + C93737 * C1726) *
               C4077 +
           (C68137 + C68138) * C4177 + (C68391 + C68392) * C4078 +
           C68149 * C4178 + C68397 * C4079) *
              C93582 * C93635 * C800 -
          ((C68395 + C68396) * C4079 + (C68147 + C68148) * C4178 +
           (C68394 + C68393) * C4078 + (C68142 + C68141) * C4177 +
           (C68392 + C68391) * C4077 + (C68138 + C68137) * C4176) *
              C93582 * C93635 * C801 +
          (C68149 * C4176 + C68397 * C4077 + (C68148 + C68147) * C4177 +
           (C68396 + C68395) * C4078 +
           (C62344 * C4918 + C62191 * C5122 + C62345 * C39804 +
            C93737 * C39960) *
               C4178 +
           (C62344 * C5040 + C62191 * C5449 + C62345 * C39892 +
            C93737 * C40196) *
               C4079) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C93621 * C97 -
          ((C31835 * C1533 + C31827 * C1781 + C31833 * C1534 + C31826 * C1782 +
            C31831 * C1535 + C31825 * C1783) *
               C93737 +
           (C31835 * C1385 + C31827 * C1393 + C31833 * C1386 + C31826 * C1394 +
            C31831 * C1387 + C31825 * C1395) *
               C62345 +
           (C31835 * C279 + C31827 * C582 + C31833 * C278 + C31826 * C581 +
            C31831 * C277 + C31825 * C580) *
               C62191 +
           (C31835 * C111 + C31827 * C117 + C31833 * C110 + C31826 * C116 +
            C31831 * C109 + C31825 * C115) *
               C62344) *
              C93662 * C93635 * C93621 * C98 +
          ((C31831 * C110 + C31825 * C116 + C31833 * C111 + C31826 * C117 +
            C31835 * C112 + C31827 * C118) *
               C62344 +
           (C31831 * C278 + C31825 * C581 + C31833 * C279 + C31826 * C582 +
            C31835 * C280 + C31827 * C583) *
               C62191 +
           (C31831 * C1386 + C31825 * C1394 + C31833 * C1385 + C31826 * C1393 +
            C31835 * C2697 + C31827 * C2698) *
               C62345 +
           (C31831 * C1534 + C31825 * C1782 + C31833 * C1533 + C31826 * C1781 +
            C31835 * C2856 + C31827 * C3174) *
               C93737) *
              C93662 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31831 * C108 + C31825 * C114 + C31833 * C109 + C31826 * C115 +
            C31835 * C110 + C31827 * C116) *
               C62344 +
           (C31831 * C276 + C31825 * C579 + C31833 * C277 + C31826 * C580 +
            C31835 * C278 + C31827 * C581) *
               C62191 +
           (C31831 * C1388 + C31825 * C1396 + C31833 * C1387 + C31826 * C1395 +
            C31835 * C1386 + C31827 * C1394) *
               C62345 +
           (C31831 * C1536 + C31825 * C1784 + C31833 * C1535 + C31826 * C1783 +
            C31835 * C1534 + C31827 * C1782) *
               C93737) *
              C93662 * C93635 * C800 -
          ((C36745 + C36746 + C36747) * C93737 +
           (C36436 + C36437 + C36438) * C62345 +
           (C33202 + C33201 + C33200) * C62191 +
           (C32944 + C32943 + C32942) * C62344) *
              C93662 * C93635 * C801 +
          ((C32953 + C32952 + C32951) * C62344 +
           (C33205 + C33204 + C33203) * C62191 +
           (C31831 * C5818 + C31825 * C5824 + C31833 * C5817 + C31826 * C5823 +
            C31835 * C7631 + C31827 * C7632) *
               C62345 +
           (C31831 * C6008 + C31825 * C6346 + C31833 * C6007 + C31826 * C6345 +
            C31835 * C7856 + C31827 * C8295) *
               C93737) *
              C93662 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C37699 * C62344 + C37883 * C62191 + C40059 * C62345 +
            C40279 * C93737) *
               C4078 +
           (C37701 * C62344 + C37884 * C62191 + C40057 * C62345 +
            C40278 * C93737) *
               C4079) *
              C93635 * C93621 * C97 -
          ((C60057 * C93737 + C59752 * C62345 + C39000 * C62191 +
            C38784 * C62344) *
               C4079 +
           (C43475 * C93737 + C43167 * C62345 + C38999 * C62191 +
            C38782 * C62344) *
               C4078 +
           (C44421 * C93737 + C44103 * C62345 +
            (C36999 * C277 + C93582 * C580) * C62191 +
            (C36999 * C109 + C93582 * C115) * C62344) *
               C4077) *
              C93635 * C93621 * C98 +
          (((C36999 * C110 + C93582 * C116) * C62344 +
            (C36999 * C278 + C93582 * C581) * C62191 +
            (C36999 * C1386 + C93582 * C1394) * C62345 +
            (C36999 * C1534 + C93582 * C1782) * C93737) *
               C4077 +
           ((C36999 * C805 + C93582 * C813) * C62344 +
            (C36999 * C953 + C93582 * C1201) * C62191 +
            (C36999 * C3411 + C93582 * C3415) * C62345 +
            (C36999 * C3567 + C93582 * C3855) * C93737) *
               C4078 +
           ((C36999 * C810 + C93582 * C818) * C62344 +
            (C36999 * C958 + C93582 * C1206) * C62191 +
            (C36999 * C7631 + C93582 * C7632) * C62345 +
            (C36999 * C7856 + C93582 * C8295) * C93737) *
               C4079) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36999 * C108 + C93582 * C114) * C62344 +
            (C36999 * C276 + C93582 * C579) * C62191 + C42289 * C62345 +
            C42577 * C93737) *
               C4077 +
           (C68472 + C68473 + C68474 + C68475) * C4078 + C68486 * C4079) *
              C93635 * C800 -
          ((C68480 + C68481 + C68482 + C68483) * C4079 +
           (C68479 + C68478 + C68477 + C68476) * C4078 +
           (C68475 + C68474 + C68473 + C68472) * C4077) *
              C93635 * C801 +
          (C68486 * C4077 + (C68483 + C68482 + C68481 + C68480) * C4078 +
           (C37706 * C62344 + C37886 * C62191 +
            (C36999 * C39804 + C93582 * C39805) * C62345 +
            (C36999 * C39960 + C93582 * C40266) * C93737) *
               C4079) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C93621 * C97 -
          ((C62785 + C62786 + C62787 + C62788) * C31827 +
           (C62784 + C62783 + C62782 + C62781) * C31826 +
           (C62780 + C62779 + C62778 + C62777) * C31825) *
              C93635 * C93621 * C98 +
          (C62791 * C31825 + (C62788 + C62787 + C62786 + C62785) * C31826 +
           (C225 * C62344 + C657 * C62191 +
            (C188 * C2697 + C93662 * C2770) * C62345 +
            (C188 * C2856 + C93662 * C3241) * C93737) *
               C31827) *
              C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C188 * C108 + C93662 * C189) * C62344 +
            (C188 * C276 + C93662 * C635) * C62191 + C11252 * C62345 +
            C11842 * C93737) *
               C31825 +
           (C62777 + C62778 + C62779 + C62780) * C31826 + C62791 * C31827) *
              C93635 * C800 -
          ((C23217 * C93737 + C22578 * C62345 + C2539 * C62191 +
            C2074 * C62344) *
               C31827 +
           (C12793 * C93737 + C12150 * C62345 + C2540 * C62191 +
            C2076 * C62344) *
               C31826 +
           (C14808 * C93737 + C14160 * C62345 +
            (C188 * C955 + C93662 * C1261) * C62191 +
            (C188 * C807 + C93662 * C889) * C62344) *
               C31825) *
              C93635 * C801 +
          (((C188 * C808 + C93662 * C890) * C62344 +
            (C188 * C956 + C93662 * C1262) * C62191 +
            (C188 * C5818 + C93662 * C5922) * C62345 +
            (C188 * C6008 + C93662 * C6426) * C93737) *
               C31825 +
           ((C188 * C809 + C93662 * C891) * C62344 +
            (C188 * C957 + C93662 * C1263) * C62191 +
            (C188 * C5817 + C93662 * C5921) * C62345 +
            (C188 * C6007 + C93662 * C6425) * C93737) *
               C31826 +
           ((C188 * C810 + C93662 * C892) * C62344 +
            (C188 * C958 + C93662 * C1264) * C62191 +
            (C188 * C7631 + C93662 * C7738) * C62345 +
            (C188 * C7856 + C93662 * C8394) * C93737) *
               C31827) *
              C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C93621 * C97 -
          ((C8402 + C8403 + C8404) * C93737 + (C7756 + C7757 + C7758) * C62345 +
           (C4749 + C4748 + C4747) * C62191 +
           (C4206 + C4205 + C4204) * C62344) *
              C93582 * C93635 * C93621 * C98 +
          ((C4215 + C4214 + C4213) * C62344 + (C4752 + C4751 + C4750) * C62191 +
           (C4176 * C1386 + C4077 * C1468 + C4177 * C3411 + C4078 * C3493 +
            C4178 * C7631 + C4079 * C7738) *
               C62345 +
           (C4176 * C1534 + C4077 * C1840 + C4177 * C3567 + C4078 * C3925 +
            C4178 * C7856 + C4079 * C8394) *
               C93737) *
              C93582 * C93635 * C93621 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4176 * C108 + C4077 * C189 + C4177 * C807 + C4078 * C889 +
            C4178 * C808 + C4079 * C890) *
               C62344 +
           (C4176 * C276 + C4077 * C635 + C4177 * C955 + C4078 * C1261 +
            C4178 * C956 + C4079 * C1262) *
               C62191 +
           (C4176 * C1388 + C4077 * C1470 + C4177 * C3409 + C4078 * C3491 +
            C4178 * C5818 + C4079 * C5922) *
               C62345 +
           (C4176 * C1536 + C4077 * C1842 + C4177 * C3565 + C4078 * C3923 +
            C4178 * C6008 + C4079 * C6426) *
               C93737) *
              C93582 * C93635 * C800 -
          ((C4178 * C8843 + C4079 * C9413 + C4177 * C6008 + C4078 * C6426 +
            C4176 * C3565 + C4077 * C3923) *
               C93737 +
           (C4178 * C8615 + C4079 * C8741 + C4177 * C5818 + C4078 * C5922 +
            C4176 * C3409 + C4077 * C3491) *
               C62345 +
           (C4178 * C5121 + C4079 * C5638 + C4177 * C956 + C4078 * C1262 +
            C4176 * C955 + C4077 * C1261) *
               C62191 +
           (C4178 * C4917 + C4079 * C5039 + C4177 * C808 + C4078 * C890 +
            C4176 * C807 + C4077 * C889) *
               C62344) *
              C93582 * C93635 * C801 +
          ((C4176 * C808 + C4077 * C890 + C4177 * C4917 + C4078 * C5039 +
            C4178 * C4918 + C4079 * C5040) *
               C62344 +
           (C4176 * C956 + C4077 * C1262 + C4177 * C5121 + C4078 * C5638 +
            C4178 * C5122 + C4079 * C5639) *
               C62191 +
           (C4176 * C5818 + C4077 * C5922 + C4177 * C8615 + C4078 * C8741 +
            C4178 * C39804 + C4079 * C39892) *
               C62345 +
           (C4176 * C6008 + C4077 * C6426 + C4177 * C8843 + C4078 * C9413 +
            C4178 * C39960 + C4079 * C40348) *
               C93737) *
              C93582 * C93635 * C802) *
         C93609) /
            (p * q * std::sqrt(p + q));
    d2eezz[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C93621 * C97 -
                    ((C62906 + C62907) * C93662 * C31827 +
                     (C62905 + C62904) * C93662 * C31826 +
                     (C62903 + C62902) * C93662 * C31825) *
                        C93635 * C93621 * C98 +
                    (C62909 * C31825 + (C62907 + C62906) * C93662 * C31826 +
                     (C62865 * C112 + C62888 + C62888 + C62191 * C718 +
                      C62866 * C2697 + C62889 + C62889 + C93737 * C3323) *
                         C93662 * C31827) *
                        C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C93662 * C31825 +
                     (C62902 + C62903) * C93662 * C31826 + C62909 * C31827) *
                        C93635 * C800 -
                    ((C62866 * C3411 + C63576 + C63576 + C93737 * C3995 +
                      C62865 * C805 + C63577 + C63577 + C62191 * C1317) *
                         C93662 * C31827 +
                     (C62866 * C3410 + C63578 + C63578 + C93737 * C3994 +
                      C62865 * C806 + C63579 + C63579 + C62191 * C1318) *
                         C93662 * C31826 +
                     (C62866 * C3409 + C63580 + C63580 + C93737 * C3993 +
                      C62865 * C807 + C63581 + C63581 + C62191 * C1319) *
                         C93662 * C31825) *
                        C93635 * C801 +
                    ((C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C93662 * C31825 +
                     (C62865 * C809 + C63584 + C63584 + C62191 * C1321 +
                      C62866 * C5817 + C63585 + C63585 + C93737 * C6505) *
                         C93662 * C31826 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C93662 * C31827) *
                        C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C62865 * C807 + C63581 + C63581 + C62191 * C1319 +
                      C62866 * C3409 + C63580 + C63580 + C93737 * C3993) *
                         C4078 +
                     (C62865 * C808 + C63582 + C63582 + C62191 * C1320 +
                      C62866 * C5818 + C63583 + C63583 + C93737 * C6506) *
                         C4079) *
                        C93582 * C93635 * C93621 * C97 -
                    ((C62866 * C5817 + C63585 + C63585 + C93737 * C6505 +
                      C62865 * C809 + C63584 + C63584 + C62191 * C1321) *
                         C4079 +
                     (C65317 + C65318) * C4078 + (C62903 + C62902) * C4077) *
                        C93582 * C93635 * C93621 * C98 +
                    (C62908 * C4077 + (C65316 + C65315) * C4078 +
                     (C62865 * C810 + C63586 + C63586 + C62191 * C1322 +
                      C62866 * C7631 + C63587 + C63587 + C93737 * C8502) *
                         C4079) *
                        C93582 * C93635 * C93621 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C62865 * C108 + C62868 + C62868 + C62191 * C714 +
                      C62866 * C1388 + C62869 + C62869 + C93737 * C1900) *
                         C4077 +
                     (C68663 + C68664) * C4078 + C68669 * C4079) *
                        C93582 * C93635 * C800 -
                    ((C68667 + C68668) * C4079 + (C68666 + C68665) * C4078 +
                     (C68664 + C68663) * C4077) *
                        C93582 * C93635 * C801 +
                    (C68669 * C4077 + (C68668 + C68667) * C4078 +
                     (C62865 * C4918 + C68649 + C68649 + C62191 * C5717 +
                      C62866 * C39804 + C68650 + C68650 + C93737 * C40415) *
                         C4079) *
                        C93582 * C93635 * C802) *
                   C93609) /
                      (p * q * std::sqrt(p + q));
}
